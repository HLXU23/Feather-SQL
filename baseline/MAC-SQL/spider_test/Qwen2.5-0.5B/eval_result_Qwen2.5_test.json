[
  {
    "idx": 0,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT count(*) FROM club",
    "pred": "SELECT COUNT(DISTINCT player.Player_ID) AS number_of_players FROM player JOIN club ON player.Club_ID = club.Club_ID;",
    "exec_result": 0
  },
  {
    "idx": 1,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT count(*) FROM club",
    "pred": "SELECT COUNT(DISTINCT player.Player_ID) AS Player_Count FROM player JOIN club ON player.Club_ID = club.Club_ID;",
    "exec_result": 0
  },
  {
    "idx": 2,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club ORDER BY Name ASC",
    "pred": "SELECT DISTINCT T1.Club_Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID ORDER BY T1.Club_Name ASC;",
    "exec_result": 0
  },
  {
    "idx": 3,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club ORDER BY Name ASC",
    "pred": "SELECT DISTINCT Name FROM club ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 4,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manager ,  Captain FROM club",
    "pred": "SELECT M.Name, C.Name FROM club AS C JOIN player AS P ON C.Club_ID = P.Club_ID JOIN manager AS M ON P.Manager_ID = M.Manager_ID WHERE M.Manager_ID IS NOT NULL AND C.Club_ID IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 5,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manager ,  Captain FROM club",
    "pred": "SELECT T1.Manager, T1.Captain FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID",
    "exec_result": 0
  },
  {
    "idx": 6,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
    "pred": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Manufacturer != 'Nike'",
    "exec_result": 0
  },
  {
    "idx": 7,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
    "pred": "SELECT DISTINCT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Manufacturer != 'Nike'",
    "exec_result": 0
  },
  {
    "idx": 8,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "pred": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "exec_result": 1
  },
  {
    "idx": 9,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "pred": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "exec_result": 1
  },
  {
    "idx": 10,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player)",
    "exec_result": 1
  },
  {
    "idx": 11,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings = (SELECT MIN(Earnings) FROM player)",
    "exec_result": 0
  },
  {
    "idx": 12,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
    "pred": "SELECT DISTINCT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings > 1200000;",
    "exec_result": 1
  },
  {
    "idx": 13,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
    "pred": "SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings > 1200000 GROUP BY T1.Country",
    "exec_result": 1
  },
  {
    "idx": 14,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Wins_count > 2 GROUP BY T1.Club_ID ORDER BY SUM(T1.Earnings) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 15,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Wins_count > 2 GROUP BY T1.Country ORDER BY COUNT(T1.Wins_count) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 16,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
    "pred": "SELECT T1.Name, T2.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID",
    "exec_result": 1
  },
  {
    "idx": 17,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
    "pred": "SELECT p.Name, c.Name FROM player AS p JOIN club AS c ON p.Club_ID = c.Club_ID",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
    "pred": "SELECT c.Name FROM club AS c JOIN player AS p ON c.Club_ID = p.Club_ID GROUP BY c.Club_ID HAVING COUNT(p.Wins_count) > 2;",
    "exec_result": 0
  },
  {
    "idx": 19,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
    "pred": "SELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE Wins_count > 2",
    "exec_result": 0
  },
  {
    "idx": 20,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
    "pred": "SELECT DISTINCT player.name FROM player JOIN club ON player.Club_ID = club.Club_ID JOIN player ON player.Player_ID = club.Manager JOIN club ON player.Club_ID = club.Club_ID WHERE club.Manager = 'Sam Allardyce';",
    "exec_result": 0
  },
  {
    "idx": 21,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
    "pred": "SELECT DISTINCT player.name FROM player JOIN club ON player.Club_ID = club.Club_ID JOIN player ON player.Player_ID = club.Manager WHERE club.Manager = 'Sam Allardyce';",
    "exec_result": 0
  },
  {
    "idx": 22,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
    "pred": "SELECT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Club_ID ORDER BY AVG(T1.Earnings) DESC",
    "exec_result": 0
  },
  {
    "idx": 23,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
    "pred": "SELECT c.Name, AVG(p.Earnings) as Average_Earnings FROM club AS c JOIN player AS p ON c.Club_ID = p.Club_ID GROUP BY c.Name ORDER BY Average_Earnings DESC;",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
    "pred": "SELECT DISTINCT T1.manufacturer, COUNT(T1.Club_ID) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.manufacturer",
    "exec_result": 0
  },
  {
    "idx": 25,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
    "pred": "SELECT manufacturer, COUNT(*) FROM club GROUP BY manufacturer",
    "exec_result": 1
  },
  {
    "idx": 26,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.manufacturer FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Club_ID ORDER BY COUNT(T1.Club_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 27,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.manufacturer FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Club_ID ORDER BY COUNT(T1.Club_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 28,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT T1.manufacturer FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Club_ID HAVING COUNT(T2.Player_ID) > 1",
    "exec_result": 0
  },
  {
    "idx": 29,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
    "pred": "SELECT T1.manufacturer, COUNT(T1.club_id) FROM club AS T1 JOIN player AS T2 ON T1.club_id = T2.club_id GROUP BY T1.manufacturer HAVING COUNT(T1.club_id) > 1",
    "exec_result": 0
  },
  {
    "idx": 30,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
    "pred": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 31,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
    "pred": "SELECT Country, COUNT(*) FROM player GROUP BY Country HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 32,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "pred": "SELECT DISTINCT T1.Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Club_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 33,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "pred": "SELECT DISTINCT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Wins_count = 0",
    "exec_result": 0
  },
  {
    "idx": 34,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
    "pred": "SELECT T1.Country, MAX(T2.Earnings) AS Max_Earnings FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings > 1400000 AND T1.Earnings < 1100000 GROUP BY T1.Country;",
    "exec_result": 0
  },
  {
    "idx": 35,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
    "pred": "SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings BETWEEN 1400000 AND 1100000 GROUP BY T1.Country HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 36,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT COUNT (DISTINCT Country) FROM player",
    "pred": "SELECT COUNT(DISTINCT Club_ID) FROM player;",
    "exec_result": 1
  },
  {
    "idx": 37,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT COUNT (DISTINCT Country) FROM player",
    "pred": "SELECT COUNT(DISTINCT Club_ID) FROM player;",
    "exec_result": 1
  },
  {
    "idx": 38,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
    "pred": "SELECT T1.Earnings FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Country IN ('Australia', 'Zimbabwe')",
    "exec_result": 1
  },
  {
    "idx": 39,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
    "pred": "SELECT Earnings FROM player WHERE Country IN ('Australia', 'Zimbabwe')",
    "exec_result": 1
  },
  {
    "idx": 40,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
    "pred": "SELECT T1.customer_id, T1.customer_first_name, T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Shipments AS T4 ON T2.order_id = T4.order_id JOIN Shipment_Items AS T5 ON T4.shipment_id = T5.shipment_id WHERE T3.order_item_status_code = 'Out of Stock' AND T2.order_status_code IN ('Part Completed', 'Delivered') GROUP BY T1.customer_id, T1.customer_first_name, T1.customer_last_name HAVING COUNT(T3.order_item_id) >= 3 AND COUNT(T5.order_item_id) >= 3",
    "exec_result": 0
  },
  {
    "idx": 41,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 42,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
    "pred": "SELECT O.order_id, O.order_status_code, COUNT(*) AS product_count FROM Orders O JOIN Order_Items OI ON O.order_id = OI.order_id JOIN Products P ON OI.product_id = P.product_id GROUP BY O.order_id, O.order_status_code",
    "exec_result": 1
  },
  {
    "idx": 43,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
    "pred": "SELECT Orders.order_id, COUNT(DISTINCT Orders.order_item_id) AS product_count, Orders.order_status_code, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Orders.order_status_code = 'Delivered' GROUP BY Orders.order_id, Orders.order_status_code, Orders.date_order_placed ORDER BY Orders.order_id, Orders.order_status_code, Orders.date_order_placed;",
    "exec_result": 0
  },
  {
    "idx": 44,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
    "pred": "SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T2.order_item_status_code = 'Out of Stock' ORDER BY T1.date_order_placed ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 45,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 46,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT T1.customer_first_name, T1.customer_middle_initial, T1.customer_last_name FROM Customers AS T1 WHERE T1.customer_id NOT IN ( SELECT T2.customer_id FROM Customers AS T2 JOIN Orders AS T3 ON T2.customer_id = T3.customer_id JOIN Order_Items AS T4 ON T3.order_id = T4.order_id JOIN Shipments AS T5 ON T4.shipment_id = T5.shipment_id WHERE T5.order_status_code = 'Cancelled' ) ORDER BY T1.customer_first_name, T1.customer_middle_initial, T1.customer_last_name;",
    "exec_result": 0
  },
  {
    "idx": 47,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT T1.customer_first_name, T1.customer_middle_initial, T1.customer_last_name FROM Customers AS T1 WHERE T1.customer_id NOT IN ( SELECT T2.customer_id FROM Customers AS T2 JOIN Orders AS T3 ON T2.customer_id = T3.customer_id JOIN Order_Items AS T4 ON T3.order_id = T4.order_id WHERE T4.product_id = 1 )",
    "exec_result": 0
  },
  {
    "idx": 48,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_id ,  product_name ,  product_price ,  product_color FROM Products EXCEPT SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.product_id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 49,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2",
    "pred": "-- Corrected SQL Query SELECT T1.product_id, T1.product_name, T1.product_price, T1.product_color FROM Products AS T1 JOIN ( SELECT T2.product_id, COUNT(*) as order_count FROM Orders AS T2 GROUP BY T2.product_id HAVING order_count < 2 ) AS T2 ON T1.product_id = T2.product_id;",
    "exec_result": 0
  },
  {
    "idx": 50,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT O.order_id, O.date_order_placed FROM Orders O JOIN ( SELECT O.order_id, COUNT(DISTINCT P.product_id) AS product_count FROM Order_Items O JOIN Products P ON O.product_id = P.product_id GROUP BY O.order_id HAVING product_count >= 2 ) AS PCT ON O.order_id = PCT.order_id ORDER BY O.date_order_placed;",
    "exec_result": 1
  },
  {
    "idx": 51,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.order_id, T1.order_status_code, T1.date_order_placed FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id, T1.order_status_code, T1.date_order_placed HAVING COUNT(T2.product_id) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 52,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.product_id, T1.product_name, T1.product_price FROM Products AS T1 JOIN ( SELECT product_id, COUNT(*) AS frequency FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Shipments ON Order_Items.shipment_id = Shipments.shipment_id WHERE Order_Items.product_id = T1.product_id GROUP BY product_id ) AS T2 ON T1.product_id = T2.product_id ORDER BY T2.frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 53,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 54,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 55,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1",
    "pred": "SELECT T1.invoice_number, SUM(T2.product_price * T2.product_quantity) AS total_cost FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Shipments AS T3 ON T1.order_id = T3.order_id JOIN Products AS T4 ON T2.product_id = T4.product_id WHERE T1.customer_id = 1 -- Assuming the customer_id is 1 for simplicity GROUP BY T1.invoice_number ORDER BY total_cost ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 56,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.payment_method_code, COUNT(T1.customer_id) AS total_orders FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id JOIN Orders AS T3 ON T1.customer_id = T3.customer_id JOIN Order_Items AS T4 ON T3.order_id = T4.order_id JOIN Shipments AS T5 ON T3.order_id = T5.order_id JOIN Shipment_Items AS T6 ON T5.shipment_id = T6.shipment_id GROUP BY T1.customer_id ORDER BY total_orders DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 57,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 58,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
    "pred": "SELECT Customers.gender_code AS gender_code, COUNT(DISTINCT Orders.order_id) AS number_of_products FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Shipment_Items ON Shipments.order_id = Shipment_Items.order_item_id GROUP BY Customers.gender_code;",
    "exec_result": 0
  },
  {
    "idx": 59,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 60,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
    "pred": "SELECT gender_code, COUNT(*) FROM Customers GROUP BY gender_code",
    "exec_result": 0
  },
  {
    "idx": 61,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 62,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT T1.customer_first_name, T1.customer_middle_initial, T1.customer_last_name, T2.payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 63,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT T1.customer_first_name, T1.customer_middle_initial, T1.customer_last_name, T2.payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 64,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
    "pred": "SELECT T1.invoice_status_code, T1.invoice_date, T2.shipment_date FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Shipments AS T3 ON T1.order_id = T3.order_id JOIN Shipment_Items AS T4 ON T3.shipment_id = T4.shipment_id JOIN Customers AS T5 ON T1.customer_id = T5.customer_id JOIN Products AS T6 ON T4.product_id = T6.product_id WHERE T5.customer_id = 'zsawayn' ORDER BY T1.invoice_date;",
    "exec_result": 0
  },
  {
    "idx": 65,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
    "pred": "-- SQL query to verify the correctness of the corrected SQL query SELECT T1.invoice_status_code, T1.invoice_date, T2.shipment_tracking_number FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id JOIN Shipments AS T3 ON T1.shipment_id = T3.shipment_id WHERE T2.customer_id = (SELECT customer_id FROM Customers WHERE login_name = 'zsawayn') ORDER BY T1.invoice_status_code, T1.invoice_date;",
    "exec_result": 0
  },
  {
    "idx": 66,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "SELECT T1.product_name, T2.shipping_date FROM Products AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T2.order_id JOIN Invoices AS T4 ON T4.order_id = T3.order_id JOIN Orders AS T5 ON T5.order_id = T4.order_id JOIN Order_Items AS T6 ON T6.order_id = T5.order_id JOIN Shipments AS T7 ON T7.order_id = T6.order_id JOIN Shipment_Items AS T8 ON T8.order_item_id = T6.order_item_id JOIN Shipments AS T9 ON T9.shipment_id = T8.shipment_id WHERE T3.order_status_code = 'Delivered';",
    "exec_result": 0
  },
  {
    "idx": 68,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 69,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 70,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "SELECT P.product_name, P.product_color FROM Products AS P JOIN Order_Items AS OI ON P.product_id = OI.product_id JOIN Shipments AS S ON OI.order_id = S.order_id WHERE S.shipment_id IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 71,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "SELECT T1.product_name, T1.product_color FROM Products AS T1 JOIN Shipments AS T2 ON T1.product_id = T2.product_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Shipment_Items AS T4 ON T3.order_item_id = T4.order_item_id JOIN Invoices AS T5 ON T4.shipment_id = T5.shipment_id JOIN Orders AS T6 ON T5.order_id = T6.order_id WHERE T6.order_status_code = 'Delivered';",
    "exec_result": 0
  },
  {
    "idx": 72,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
    "pred": "SELECT T1.product_name, T1.product_price, T1.product_description FROM Products AS T1 JOIN Customers AS T2 ON T1.product_id = T2.customer_id JOIN Customer_Payment_Methods AS T3 ON T2.customer_id = T3.customer_id JOIN Orders AS T4 ON T2.customer_id = T4.customer_id JOIN Order_Items AS T5 ON T4.order_id = T5.order_id JOIN Customers AS T6 ON T5.customer_id = T6.customer_id JOIN Order_Items AS T7 ON T5.order_item_id = T7.order_item_id JOIN Shipments AS T8 ON T7.shipment_id = T8.shipment_id JOIN Shipment_Items AS T9 ON T8.shipment_id = T9.shipment_id JOIN Customers AS T10 ON T9.customer_id = T10.customer_id JOIN Customer_Payment_Methods AS T11 ON T10.customer_id = T11.customer_id JOIN Orders AS T12 ON T10.order_id = T12.order_id JOIN Order_Items AS T13 ON T12.order_item_id = T13.order_item_id JOIN Shipments AS T14 ON T13.shipment_id = T14.shipment_id JOIN Shipment_Items AS T15 ON T14.shipment_id = T15.shipment_id JOIN Products AS T16 ON T15.product_id = T16.product_id WHERE T6.gender_code = 'Female';",
    "exec_result": 0
  },
  {
    "idx": 73,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 74,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 75,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 76,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.order_id ,  t1.date_order_placed ,  sum(t3.product_price) from orders as t1 join order_items as t2 on t1.order_id  =  t2.order_id join products as t3 on t2.product_id  =  t3.product_id group by t1.order_id",
    "pred": "SELECT T1.order_id, T1.date_order_placed, SUM(T2.product_price * T3.product_quantity) AS total_cost FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Shipments AS T3 ON T1.order_id = T3.order_id GROUP BY T1.order_id, T1.date_order_placed ORDER BY T1.order_id, T1.date_order_placed;",
    "exec_result": 0
  },
  {
    "idx": 77,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed ,  sum(T3.product_price) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id JOIN Products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T1.order_id",
    "pred": "SELECT Orders.order_id, Orders.date_order_placed, SUM(Products.product_price * Order_Items.order_item_status_code) AS total_amount_paid FROM Orders JOIN Customer_Payment_Methods ON Orders.customer_id = Customer_Payment_Methods.customer_id JOIN Invoices ON Orders.order_id = Invoices.order_id JOIN Order_Items ON Invoices.invoice_number = Order_Items.invoice_number JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed ORDER BY Orders.order_id, Orders.date_order_placed;",
    "exec_result": 0
  },
  {
    "idx": 78,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Orders",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) AS num_customers FROM Orders JOIN Customer_Payment_Methods ON Orders.customer_id = Customer_Payment_Methods.customer_id JOIN Customers ON Orders.customer_id = Customers.customer_id",
    "exec_result": 0
  },
  {
    "idx": 79,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Orders",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) AS num_customers FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id",
    "exec_result": 1
  },
  {
    "idx": 80,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
    "pred": "SELECT COUNT(DISTINCT Orders.order_id) AS item_states FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id;",
    "exec_result": 0
  },
  {
    "idx": 81,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 82,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
    "pred": "SELECT COUNT(DISTINCT Customer_Payment_Methods.payment_method_code) AS num_payment_methods FROM Customer_Payment_Methods;",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
    "pred": "SELECT COUNT(DISTINCT T1.payment_method_code) AS num_payment_methods FROM Customer_Payment_Methods AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id",
    "exec_result": 0
  },
  {
    "idx": 84,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
    "pred": "SELECT T1.login_name, T1.login_password FROM Customers AS T1 JOIN Customers_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id JOIN Invoices AS T3 ON T1.customer_id = T3.customer_id JOIN Orders AS T4 ON T3.order_id = T4.order_id JOIN Order_Items AS T5 ON T4.order_id = T5.order_id JOIN Shipments AS T6 ON T5.order_item_id = T6.order_item_id JOIN Shipment_Items AS T7 ON T6.shipment_id = T7.shipment_id WHERE T3.invoice_number LIKE '%+12%' GROUP BY T1.login_name, T1.login_password HAVING COUNT(T5.order_id) > 0;",
    "exec_result": 0
  },
  {
    "idx": 85,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 86,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 87,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
    "pred": "SELECT DISTINCT T1.product_size FROM Products AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name LIKE '%Dell%';",
    "exec_result": 1
  },
  {
    "idx": 88,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
    "pred": "SELECT P.product_price, P.product_size FROM Products AS P WHERE P.product_price > (SELECT AVG(P.product_price) FROM Products AS P)",
    "exec_result": 1
  },
  {
    "idx": 89,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
    "pred": "SELECT p.product_name, p.product_price, p.product_size FROM Products p WHERE p.product_price > ( SELECT AVG(product_price) FROM Products );",
    "exec_result": 0
  },
  {
    "idx": 90,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "pred": "-- Execute the new SQL query SELECT COUNT(DISTINCT T1.product_id) AS num_products FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Shipments AS T4 ON T3.order_item_id = T4.order_item_id JOIN Products AS T5 ON T4.shipment_id = T5.product_id WHERE T3.order_item_status_code = 'Out of Stock';",
    "exec_result": 0
  },
  {
    "idx": 91,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "pred": "SELECT COUNT(*) FROM Orders WHERE order_status_code = 'Cancelled'",
    "exec_result": 0
  },
  {
    "idx": 92,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
    "pred": "SELECT COUNT(DISTINCT customer_id) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payment_Methods)",
    "exec_result": 1
  },
  {
    "idx": 93,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
    "pred": "SELECT COUNT(DISTINCT customer_id) FROM Customer_Payment_Methods",
    "exec_result": 0
  },
  {
    "idx": 94,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code ,  date_order_placed FROM Orders",
    "pred": "SELECT order_status_code FROM Orders;",
    "exec_result": 0
  },
  {
    "idx": 95,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code ,  date_order_placed FROM Orders",
    "pred": "SELECT T1.order_status_code, T1.date_order_placed FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id, T1.order_status_code, T1.date_order_placed;",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 97,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
    "pred": "SELECT T1.customer_first_name, T1.product_name, T2.order_status_code FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id JOIN Shipments AS T4 ON T3.order_item_id = T4.order_item_id JOIN Products AS T5 ON T4.shipment_id = T5.product_id WHERE T4.shipment_tracking_number LIKE '9206';",
    "exec_result": 0
  },
  {
    "idx": 99,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
    "pred": "SELECT Customers.customer_first_name, Products.product_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Orders.order_status_code = 'Delivered';",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Shipment_Items",
    "pred": "SELECT COUNT(*) FROM Shipment_Items",
    "exec_result": 1
  },
  {
    "idx": 101,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Shipment_Items",
    "pred": "SELECT COUNT(*) FROM Shipment_Items",
    "exec_result": 1
  },
  {
    "idx": 102,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 103,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products",
    "pred": "SELECT AVG(T1.product_price) AS average_price FROM Products AS T1 JOIN (SELECT product_id, AVG(product_price) AS average_price FROM Products GROUP BY product_id) AS T2 ON T1.product_id = T2.product_id;",
    "exec_result": 1
  },
  {
    "idx": 104,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT AVG(T1.product_price) AS average_price FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T2.order_id WHERE T3.order_status_code = 'Delivered';",
    "exec_result": 0
  },
  {
    "idx": 105,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT AVG(T1.product_price) AS average_price FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T2.order_id = T3.order_id GROUP BY T1.product_id",
    "exec_result": 0
  },
  {
    "idx": 106,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT T1.email_address, T1.town_city, T1.county FROM Customers AS T1 JOIN ( SELECT T2.customer_id, COUNT(T2.customer_id) AS gender_count FROM Customers AS T2 GROUP BY T2.customer_id ORDER BY gender_count DESC LIMIT 1 ) AS T2 ON T1.customer_id = T2.customer_id",
    "exec_result": 0
  },
  {
    "idx": 107,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT T1.email_address, T1.address_line_1, T1.town_city FROM Customers AS T1 JOIN ( SELECT T2.customer_id, COUNT(*) as order_count FROM Orders AS T2 JOIN Customer_Payment_Methods AS T3 ON T2.customer_id = T3.customer_id GROUP BY T2.customer_id ORDER BY order_count DESC ) AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_count < 2;",
    "exec_result": 0
  },
  {
    "idx": 108,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 109,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
    "pred": "SELECT T1.date_order_placed FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id JOIN Customer_Payment_Methods AS T3 ON T2.customer_id = T3.customer_id JOIN Invoices AS T4 ON T1.order_id = T4.order_id JOIN Order_Items AS T5 ON T4.order_id = T5.order_id JOIN Shipments AS T6 ON T4.order_id = T6.order_id JOIN Shipment_Items AS T7 ON T6.order_id = T7.order_item_id WHERE T3.payment_method_code IN ('Credit Card', 'Direct Debit', 'Cheque') GROUP BY T1.date_order_placed HAVING COUNT(T5.order_id) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 110,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.order_status_code FROM Orders AS T1 JOIN ( SELECT T2.order_id, COUNT(*) AS order_count FROM Order_Items AS T2 GROUP BY T2.order_id ORDER BY order_count DESC LIMIT 1 ) AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY order_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 111,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.order_status_code FROM Orders AS T1 JOIN ( SELECT T2.order_id, COUNT(*) AS order_count FROM Order_Items AS T2 GROUP BY T2.order_id ORDER BY order_count DESC LIMIT 1 ) AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY order_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
    "pred": "SELECT Products.product_id, Products.product_name FROM Products JOIN ( SELECT product_id, COUNT(*) as count FROM Order_Items GROUP BY product_id HAVING count > 3 ) as subquery ON Products.product_id = subquery.product_id;",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
    "pred": "-- List the invoice dates and ids of the invoices causing at least 2 shipments. SELECT T1.invoice_date, T1.invoice_id FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_number HAVING COUNT(DISTINCT T2.order_id) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
    "pred": "SELECT T1.shipment_tracking_number, T1.shipment_date FROM Orders O JOIN Order_Items IO ON O.order_id = IO.order_id JOIN Shipments S ON IO.order_item_id = S.order_item_id JOIN Shipment_Items SI ON S.shipment_id = SI.shipment_id JOIN Customers C ON O.customer_id = C.customer_id WHERE C.customer_id = (SELECT customer_id FROM Customers WHERE login_name = 'zsawayn') ORDER BY SI.shipment_id, SI.shipment_date;",
    "exec_result": 0
  },
  {
    "idx": 117,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
    "pred": "SELECT T1.shipment_tracking_number, T1.shipment_date FROM Shipments AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T1.shipment_tracking_number, T1.shipment_date;",
    "exec_result": 1
  },
  {
    "idx": 118,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_color ,  product_description ,  product_size FROM Products WHERE product_price  <  ( SELECT max(product_price) FROM products )",
    "pred": "SELECT T1.product_color, T1.product_description, T1.product_size FROM Products AS T1 JOIN ( SELECT T2.product_id, MAX(T2.product_price) AS max_price FROM Products AS T2 GROUP BY T2.product_id ) AS T2 ON T1.product_id = T2.product_id WHERE T1.product_price < T2.max_price;",
    "exec_result": 0
  },
  {
    "idx": 119,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )",
    "pred": "SELECT T1.product_color, T1.product_description, T1.product_size FROM Products AS T1 WHERE T1.product_price < (SELECT MAX(T2.product_price) FROM Products AS T2);",
    "exec_result": 1
  },
  {
    "idx": 120,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director WHERE age  >  (SELECT avg(age) FROM director)",
    "pred": "SELECT Name FROM director WHERE Age > (SELECT AVG(age) FROM director)",
    "exec_result": 1
  },
  {
    "idx": 121,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director ORDER BY age DESC LIMIT 1",
    "pred": "SELECT director.Name FROM director JOIN director_admin ON director_admin.Director_ID = director.Director_ID JOIN channel ON channel.Channel_ID = director.Admin_Channel_ID WHERE director_admin.Is_first_director = 'F' ORDER BY director.Age DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 122,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(*) FROM channel WHERE internet LIKE \"%bbc%\"",
    "pred": "SELECT COUNT(DISTINCT channel_id) FROM program WHERE channel_id IN (SELECT Channel_ID FROM channel WHERE Name = 'BBC')",
    "exec_result": 0
  },
  {
    "idx": 123,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel",
    "pred": "SELECT COUNT(DISTINCT channel_id) FROM channel WHERE Analogue_terrestrial_channel = 'digital terrestrial'",
    "exec_result": 0
  },
  {
    "idx": 124,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT title FROM program ORDER BY start_year DESC",
    "pred": "SELECT Title FROM program ORDER BY Start_Year DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 125,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT director.Name, COUNT(DISTINCT channel.Channel_ID) AS Programs FROM director_admin JOIN director ON director_admin.Director_ID = director.Director_ID JOIN channel ON director_admin.Channel_ID = channel.Channel_ID JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY director.Name ORDER BY Programs DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 126,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name ,  t2.age FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT director.Name, director.Age FROM director JOIN program ON director.Director_ID = program.Director_ID GROUP BY director.Director_ID ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 127,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT title FROM program ORDER BY start_year DESC LIMIT 1",
    "pred": "SELECT Title FROM program WHERE Start_Year = (SELECT MIN(Start_Year) FROM program)",
    "exec_result": 0
  },
  {
    "idx": 128,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id HAVING count(*)  >  1",
    "pred": "SELECT T1.Analogue_terrestrial_channel, T1.Title FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN director_admin AS T3 ON T2.Director_ID = T3.Director_ID WHERE T3.Channel_ID IS NOT NULL GROUP BY T1.Channel_ID HAVING COUNT(DISTINCT T2.Title) > 1",
    "exec_result": 0
  },
  {
    "idx": 129,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  count(*) FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id",
    "pred": "SELECT channel.name, COUNT(program.Program_ID) AS num_of_programs FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY channel.name",
    "exec_result": 1
  },
  {
    "idx": 130,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)",
    "pred": "SELECT COUNT(DISTINCT channel_id) FROM program WHERE channel_id NOT IN (SELECT channel_id FROM director_admin)",
    "exec_result": 0
  },
  {
    "idx": 131,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id WHERE t1.title  =  'Dracula'",
    "pred": "SELECT director.Name FROM director JOIN program ON director.Director_ID = program.Director_ID JOIN channel ON program.Channel_ID = channel.Channel_ID JOIN director_admin ON program.Channel_ID = channel.Channel_ID WHERE program.Title = 'Dracula' ORDER BY director_age DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 132,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name, T2.Internet FROM channel AS T1 JOIN director AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN director_admin AS T3 ON T2.Director_ID = T3.Director_ID ORDER BY T3.Is_first_director DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 133,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director WHERE age BETWEEN 30 AND 60",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 134,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  <  40 INTERSECT SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  >  60",
    "pred": "SELECT T1.Analogue_terrestrial_channel, T2.Name FROM channel AS T1 JOIN director_admin AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN program AS T3 ON T3.Channel_ID = T1.Channel_ID WHERE T2.Is_first_director = 'F' AND T2.Age > 40 AND T2.Age < 60 GROUP BY T1.Analogue_terrestrial_channel, T2.Name HAVING COUNT(DISTINCT T3.Title) >= 2 ORDER BY COUNT(DISTINCT T3.Title) DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 135,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != \"Hank Baskett\"",
    "pred": "SELECT T1.Channel_ID, T1.Channel_Name FROM channel AS T1 JOIN director_admin AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T2.Name != 'Hank Baskett'",
    "exec_result": 0
  },
  {
    "idx": 136,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT count(*) FROM radio",
    "pred": "SELECT COUNT(DISTINCT Radio_ID) AS num_of_radios FROM city_channel_radio;",
    "exec_result": 0
  },
  {
    "idx": 137,
    "db_id": "tv_shows",
    "question": "",
    "gold": "select transmitter from radio order by erp_kw asc",
    "pred": "SELECT Transmitter FROM radio ORDER BY ERP_kW ASC",
    "exec_result": 1
  },
  {
    "idx": 138,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT tv_show_name ,  Original_Airdate FROM tv_show",
    "pred": "SELECT tv_show_name, original_airdate FROM tv_show",
    "exec_result": 1
  },
  {
    "idx": 139,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Station_name FROM city_channel WHERE Affiliation != \"ABC\"",
    "pred": "SELECT T1.Station_name FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID JOIN radio AS T3 ON T2.Radio_ID = T3.Radio_ID WHERE T3.Affiliation != 'ABC'",
    "exec_result": 0
  },
  {
    "idx": 140,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30",
    "pred": "SELECT T2.Transmitter FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID WHERE T1 ERP_kW > 150 OR T1 ERP_kW < 30",
    "exec_result": 0
  },
  {
    "idx": 141,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1",
    "pred": "SELECT T2.Transmitter FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID WHERE T2.ERP_kW = ( SELECT MAX(T2.ERP_kW) FROM city_channel_radio AS T2 )",
    "exec_result": 0
  },
  {
    "idx": 142,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT avg(ERP_kW) FROM radio",
    "pred": "SELECT AVG(ERP_kW) FROM city_channel_radio JOIN city_channel_tv_show ON city_channel_radio.Radio_ID = city_channel_tv_show.tv_show_ID WHERE city_channel_radio.City_channel_ID = city_channel_id AND city_channel_tv_show.Is_free = 'T';",
    "exec_result": 0
  },
  {
    "idx": 143,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM city_channel GROUP BY Affiliation",
    "pred": "SELECT DISTINCT T1.Affiliation, COUNT(T1.City_channel_ID) AS Number_of_Channels FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.City_channel_ID = T2.City_channel_ID JOIN city_channel_tv_show AS T3 ON T1.City_channel_ID = T3.City_channel_ID GROUP BY T1.Affiliation ORDER BY Number_of_Channels DESC;",
    "exec_result": 0
  },
  {
    "idx": 144,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Affiliation, COUNT(*) AS Frequency FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID JOIN city_channel_tv_show AS T3 ON T2.City_channel_ID = T3.City_channel_ID GROUP BY T1.Affiliation ORDER BY Frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 145,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*)  >  3",
    "pred": "-- List the affiliations shared by more than three city channels. SELECT DISTINCT T2.Affiliation FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.City_channel_ID = T2.City_channel_ID WHERE T1.City_channel_ID IN ( SELECT T1.City_channel_ID FROM city_channel_radio AS T2 WHERE T2.Is_online = 'T' GROUP BY T2.City_channel_ID HAVING COUNT(*) > 3 ) INTERSECT SELECT DISTINCT T2.Affiliation FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.City_channel_ID = T2.City_channel_ID WHERE T1.City_channel_ID IN ( SELECT T1.City_channel_ID FROM city_channel_radio AS T2 WHERE T2.Is_online = 'F' GROUP BY T2.City_channel_ID HAVING COUNT(*) > 3 );",
    "exec_result": 0
  },
  {
    "idx": 146,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT City ,  Station_name FROM city_channel ORDER BY Station_name ASC",
    "pred": "SELECT DISTINCT T1.City, T1.Station_name FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID ORDER BY T2.Station_name ASC",
    "exec_result": 0
  },
  {
    "idx": 147,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T3.Transmitter ,  T2.City FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 148,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T3.Transmitter ,  T2.Station_name FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID ORDER BY T3.ERP_kW DESC",
    "pred": "SELECT T2.Transmitter, T1.Radio_MHz FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID ORDER BY T2.RNAG_MHz DESC;",
    "exec_result": 0
  },
  {
    "idx": 149,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter",
    "pred": "-- Show the transmitters of the radios and the number of city channels they are associated with. SELECT T2.Transmitter, COUNT(T1.City_channel_ID) AS Number_of_Channels FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID JOIN city_channel_tv_show AS T3 ON T1.ID = T3.tv_show_ID WHERE T3.tv_show_name = 'Magic Mutt' GROUP BY T2.Transmitter ORDER BY Number_of_Channels DESC;",
    "exec_result": 0
  },
  {
    "idx": 150,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)",
    "pred": "SELECT DISTINCT T1.Transmitter FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID WHERE T2.Is_free = 'T'",
    "exec_result": 0
  },
  {
    "idx": 151,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
    "pred": "SELECT Model FROM vehicle WHERE Top_Speed > 6000 AND Power > 6400",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
    "pred": "SELECT T2.Model, T2.Top_Speed FROM vehicle AS T1 JOIN driver AS T2 ON T1.Vehicle_ID = T2.Driver_ID WHERE T1.Power > 6000 ORDER BY T2.Top_Speed DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver WHERE citizenship  =  'United States'",
    "pred": "SELECT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T1.Citizenship = 'United States'",
    "exec_result": 0
  },
  {
    "idx": 154,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver WHERE citizenship  =  'United States'",
    "pred": "SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T1.Citizenship = 'United States'",
    "exec_result": 0
  },
  {
    "idx": 155,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(DISTINCT Driver_ID), Driver_ID FROM vehicle_driver GROUP BY Driver_ID ORDER BY COUNT(DISTINCT Driver_ID) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 156,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT driver_id, COUNT(*) FROM vehicle_driver GROUP BY driver_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
    "pred": "SELECT MAX(T1.Power), AVG(T1.Power) FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE T2.Citizenship = 'Zhuzhou'",
    "exec_result": 0
  },
  {
    "idx": 158,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
    "pred": "SELECT MAX(T1.Power), AVG(T1.Power) FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Citizenship = 'Zhuzhou';",
    "exec_result": 0
  },
  {
    "idx": 159,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 160,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T1.Vehicle_ID FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID ORDER BY COUNT(*) LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 161,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
    "pred": "SELECT Top_Speed, Power FROM vehicle WHERE Build_Year = 1996",
    "exec_result": 1
  },
  {
    "idx": 162,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
    "pred": "SELECT Top_Speed, Power FROM vehicle WHERE Build_Year = 1996",
    "exec_result": 1
  },
  {
    "idx": 163,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT build_year ,  model ,  builder FROM vehicle",
    "pred": "SELECT Build_Year, Model, Builder FROM vehicle WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM driver)",
    "exec_result": 1
  },
  {
    "idx": 164,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT build_year ,  model ,  builder FROM vehicle",
    "pred": "SELECT Build_Year, Model, Builder FROM vehicle;",
    "exec_result": 1
  },
  {
    "idx": 165,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
    "pred": "SELECT COUNT(DISTINCT driver_id) FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE Build_Year = '2012')",
    "exec_result": 1
  },
  {
    "idx": 166,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
    "pred": "SELECT COUNT(DISTINCT driver_id) FROM vehicle_driver WHERE Vehicle_ID IN ( SELECT Vehicle_ID FROM vehicle WHERE Build_Year = '2012' )",
    "exec_result": 1
  },
  {
    "idx": 167,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
    "pred": "SELECT COUNT(DISTINCT driver_id) FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE racing_series = 'NASCAR')",
    "exec_result": 0
  },
  {
    "idx": 168,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
    "pred": "SELECT COUNT(DISTINCT driver_id) FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE racing_series = 'NASCAR')",
    "exec_result": 0
  },
  {
    "idx": 169,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT avg(top_speed) FROM vehicle",
    "pred": "SELECT AVG(Top_Speed) FROM vehicle;",
    "exec_result": 1
  },
  {
    "idx": 170,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT avg(top_speed) FROM vehicle",
    "pred": "SELECT AVG(T2.Top_Speed) FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Citizenship = 'United States';",
    "exec_result": 0
  },
  {
    "idx": 171,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "select distinct t1.name from driver as t1 join vehicle_driver as t2 on t1.driver_id  =  t2.driver_id join vehicle as t3 on t2.vehicle_id  =  t3.vehicle_id where t3.power  >  5000",
    "pred": "SELECT DISTINCT driver.name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Power > 5000",
    "exec_result": 1
  },
  {
    "idx": 172,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.power  >  5000",
    "pred": "SELECT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Power > 5000",
    "exec_result": 1
  },
  {
    "idx": 173,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
    "pred": "SELECT DISTINCT T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Citizenship = 'United States' AND T1.Total_Production > 100 OR T1.Top_Speed > 150;",
    "exec_result": 0
  },
  {
    "idx": 174,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
    "pred": "SELECT Model FROM vehicle WHERE Total_Production > 100 OR Power > 150",
    "exec_result": 0
  },
  {
    "idx": 175,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
    "pred": "SELECT Model, Build_Year FROM vehicle WHERE Model LIKE '%DJ%'",
    "exec_result": 1
  },
  {
    "idx": 176,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
    "pred": "SELECT T1.Model, T1.Build_Year FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T1.Model LIKE '%DJ%';",
    "exec_result": 0
  },
  {
    "idx": 177,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
    "pred": "SELECT DISTINCT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver)",
    "exec_result": 1
  },
  {
    "idx": 178,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
    "pred": "SELECT DISTINCT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver)",
    "exec_result": 1
  },
  {
    "idx": 179,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 180,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
    "pred": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID IN ( SELECT driver_id FROM driver WHERE citizenship = 'Ziyang' ) OR v.Model IN ( SELECT model FROM vehicle WHERE Build_Year IN ( SELECT Build_Year FROM vehicle WHERE builder = 'Ziyang' ) ) GROUP BY v.Vehicle_ID, v.Model HAVING COUNT(DISTINCT driver_id) <= 2;",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
    "pred": "SELECT v.Model, v.Build_Year FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID NOT IN ( SELECT driver_id FROM driver WHERE name = 'Jeff Gordon' ) GROUP BY v.Model, v.Build_Year HAVING COUNT(DISTINCT driver_id) > 2",
    "exec_result": 0
  },
  {
    "idx": 182,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
    "pred": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID IN (SELECT Driver_ID FROM driver WHERE Citizenship = 'United States' AND Drivers_count > 2) OR v.Vehicle_ID = (SELECT Vehicle_ID FROM vehicle WHERE Name = 'Jeff Gordon') GROUP BY v.Vehicle_ID, v.Model HAVING COUNT(DISTINCT Driver_ID) > 2;",
    "exec_result": 0
  },
  {
    "idx": 183,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
    "pred": "SELECT COUNT(DISTINCT Vehicle_ID) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle)",
    "exec_result": 1
  },
  {
    "idx": 184,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
    "pred": "SELECT COUNT(DISTINCT Vehicle_ID) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle)",
    "exec_result": 1
  },
  {
    "idx": 185,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver ORDER BY name",
    "pred": "SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID ORDER BY T1.Name",
    "exec_result": 0
  },
  {
    "idx": 186,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver ORDER BY name",
    "pred": "SELECT Name FROM driver ORDER BY Name",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
    "pred": "SELECT DISTINCT T1.Citizenship, COUNT(T2.Vehicle_ID) FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Citizenship",
    "exec_result": 0
  },
  {
    "idx": 188,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
    "pred": "SELECT DISTINCT T1.Citizenship, COUNT(T2.Racing_Series) FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Citizenship",
    "exec_result": 0
  },
  {
    "idx": 189,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
    "pred": "SELECT T1.Name, T1.Citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Model = 'DJ1'",
    "exec_result": 1
  },
  {
    "idx": 190,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
    "pred": "SELECT T1.Name, T1.Citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Model = 'DJ1'",
    "exec_result": 1
  },
  {
    "idx": 191,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
    "pred": "SELECT COUNT(DISTINCT Driver_ID) FROM vehicle_driver",
    "exec_result": 0
  },
  {
    "idx": 192,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
    "pred": "SELECT COUNT(DISTINCT Driver_ID) FROM vehicle_driver",
    "exec_result": 0
  },
  {
    "idx": 193,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(*) FROM Exams",
    "pred": "SELECT COUNT(DISTINCT Exam_ID) AS Exam_Count FROM Exams;",
    "exec_result": 1
  },
  {
    "idx": 194,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(*) FROM Exams",
    "pred": "SELECT COUNT(*) FROM Exams;",
    "exec_result": 1
  },
  {
    "idx": 195,
    "db_id": "online_exams",
    "question": "",
    "gold": "select distinct subject_code from exams order by subject_code asc",
    "pred": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;",
    "exec_result": 1
  },
  {
    "idx": 196,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code",
    "pred": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code;",
    "exec_result": 1
  },
  {
    "idx": 197,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
    "pred": "SELECT E.Exam_Name, E.Exam_Date FROM Exams AS E WHERE E.Subject_Code NOT IN ('Database');",
    "exec_result": 1
  },
  {
    "idx": 198,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
    "pred": "SELECT DISTINCT Exams.Subject_Code, Exams.Exam_Date, Exams.Exam_Name FROM Exams WHERE Exams.Subject_Code != 'Database';",
    "exec_result": 0
  },
  {
    "idx": 199,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 200,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 201,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "pred": "SELECT Type_of_Question_Code, COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "exec_result": 1
  },
  {
    "idx": 202,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "pred": "SELECT T1.Type_of_Question_Code, COUNT(*) FROM Questions AS T1 JOIN Questions_in_Exams AS T2 ON T1.Question_ID = T2.Question_ID GROUP BY T1.Type_of_Question_Code;",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
    "pred": "SELECT DISTINCT T1.S.Student_Answer_Text FROM Students AS T1 JOIN Questions AS T2 ON T1.Student_ID = T2.Student_ID JOIN Questions_in_Exams AS T3 ON T2.Question_ID = T3.Question_ID JOIN Valid_Answers AS T4 ON T3.Question_ID = T4.Question_ID JOIN Student_Answers AS T5 ON T3.Question_ID = T5.Question_ID JOIN Student_Assessments AS T6 ON T3.Question_ID = T6.Question_ID WHERE T6.Assessment = 'Excellent' AND T6.Satisfactory_YN = '1' GROUP BY T1.S.Student_Answer_Text;",
    "exec_result": 0
  },
  {
    "idx": 204,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
    "pred": "SELECT DISTINCT T1.S.Student_Answer_Text FROM Questions AS Q JOIN Questions_in_Exams AS QI ON QI.Question_ID = Q.Question_ID JOIN Exams AS E ON E.Exam_ID = QI.Exam_ID JOIN Valid_Answers AS VA ON VA.Question_ID = QI.Question_ID JOIN Students AS S ON S.Student_ID = S.Student_ID WHERE VA.Satisfactory_YN = '1' AND VA.Comments = 'Normal';",
    "exec_result": 0
  },
  {
    "idx": 205,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(DISTINCT Comments) FROM Student_Answers",
    "pred": "SELECT COUNT(DISTINCT Student_Answers.Comments) AS Comment_Count FROM Student_Answers JOIN Questions_in_Exams ON Student_Answers.Exam_ID = Questions_in_Exams.Exam_ID JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID JOIN Valid_Answers ON Questions_in_Exams.Question_ID = Questions.Question_ID JOIN Student_Answers ON Questions_in_Exams.Question_ID = Questions.Question_ID",
    "exec_result": 0
  },
  {
    "idx": 206,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(DISTINCT Comments) FROM Student_Answers",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 207,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 208,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 209,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 210,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 211,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
    "pred": "SELECT DISTINCT T1.Email_Address, T2.Date_of_Answer FROM Students AS T1 JOIN Questions AS T2 ON T1.Student_ID = T2.Student_ID JOIN Questions_in_Exams AS T3 ON T2.Question_ID = T3.Question_ID JOIN Exams AS T4 ON T3.Exam_ID = T4.Exam_ID ORDER BY T2.Date_of_Answer DESC;",
    "exec_result": 0
  },
  {
    "idx": 212,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 213,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
    "pred": "SELECT Assessment, COUNT(*) AS Count FROM Questions_in_Exams JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID JOIN Valid_Answers ON Questions_in_Exams.Question_ID = Questions.Question_ID JOIN Student_Answers ON Questions_in_Exams.Question_ID = Questions.Question_ID JOIN Student_Assessments ON Questions_in_Exams.Question_ID = Questions.Question_ID GROUP BY Assessment ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 214,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
    "pred": "SELECT Assessment FROM ( SELECT Assessment, COUNT(*) AS frequency FROM Questions_in_Exams GROUP BY Assessment ORDER BY frequency ASC LIMIT 1 ) AS subquery WHERE frequency = (SELECT MIN(frequency) FROM ( SELECT Assessment, COUNT(*) AS frequency FROM Questions_in_Exams GROUP BY Assessment ORDER BY frequency ASC LIMIT 1 ))",
    "exec_result": 0
  },
  {
    "idx": 215,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.First_Name FROM Students AS T1 JOIN Questions AS T2 ON T1.Student_ID = T2.Student_ID JOIN Questions_in_Exams AS T3 ON T2.Question_ID = T3.Question_ID JOIN Exams AS T4 ON T3.Exam_ID = T4.Exam_ID JOIN Questions AS T5 ON T3.Question_ID = T5.Question_ID JOIN Valid_Answers AS T6 ON T5.Question_ID = T6.Question_ID JOIN Student_Answers AS T7 ON T6.Question_ID = T7.Question_ID JOIN Students AS T8 ON T7.Student_ID = T8.Student_ID WHERE T8.Satisfactory_YN = '1' AND COUNT(DISTINCT T7.Satisfactory_YN) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 216,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT S.First_Name FROM Students S JOIN Questions_in_Exams QEI ON S.Student_ID = QEI.Student_ID JOIN Questions Q ON QEI.Question_ID = Q.Question_ID JOIN Valid_Answers VA ON QEI.Question_ID = VA.Question_ID WHERE VA.Satisfactory_YN = '1' AND VA.Satisfactory_YN = '1' OR VA.Satisfactory_YN = '1' OR VA.Satisfactory_YN = '1' GROUP BY S.First_Name;",
    "exec_result": 0
  },
  {
    "idx": 217,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 218,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.`Valid_Answer_Text` FROM Questions AS T1 JOIN Questions_in_Exams AS T2 ON T1.Question_ID = T2.Question_ID JOIN Exams AS T3 ON T2.Exam_ID = T3.Exam_ID JOIN Valid_Answers AS T4 ON T2.Valid_Answer_ID = T4.Valid_Answer_ID JOIN Student_Answers AS T5 ON T4.Student_Answer_ID = T5.Student_Answer_ID GROUP BY T1.Question_ID ORDER BY COUNT(T4.Satisfactory_YN) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 219,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 220,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 221,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
    "pred": "SELECT Gender_MFU, COUNT(*) AS Number_of_students FROM Students GROUP BY Gender_MFU;",
    "exec_result": 1
  },
  {
    "idx": 222,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
    "pred": "SELECT Gender_MFU, COUNT(*) AS Number_of_students FROM Students GROUP BY Gender_MFU;",
    "exec_result": 1
  },
  {
    "idx": 223,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 224,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 225,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
    "pred": "SELECT DISTINCT T1.First_Name FROM Students AS T1 JOIN Questions AS T2 ON T1.Student_ID = T2.Student_ID JOIN Questions_in_Exams AS T3 ON T2.Question_ID = T3.Question_ID JOIN Exams AS T4 ON T3.Exam_ID = T4.Exam_ID JOIN Questions AS T5 ON T3.Question_ID = T5.Question_ID JOIN Valid_Answers AS T6 ON T5.Question_ID = T6.Question_ID WHERE T6.Satisfactory_YN = '0';",
    "exec_result": 0
  },
  {
    "idx": 226,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
    "pred": "SELECT DISTINCT S.First_Name FROM Students S JOIN Questions_in_Exams QEI ON S.Student_ID = QEI.Student_ID JOIN Questions Q ON QEI.Question_ID = Q.Question_ID WHERE QEI.Question_ID NOT IN (SELECT QEI.Question_ID FROM Questions_in_Exams QEI WHERE Exam_ID = (SELECT Exam_ID FROM Exams WHERE Subject_Code = 'Database'))",
    "exec_result": 0
  },
  {
    "idx": 227,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 228,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 229,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
    "pred": "-- Show the types of questions that have at least three questions. SELECT DISTINCT Type_of_Question_Code FROM Questions WHERE COUNT(*) >= 3;",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
    "pred": "SELECT DISTINCT T1.Type_of_Question_Code FROM Questions AS T1 JOIN Questions_in_Exams AS T2 ON T1.Question_ID = T2.Question_ID JOIN Exams AS T3 ON T2.Exam_ID = T3.Exam_ID JOIN Valid_Answers AS T4 ON T3.Exam_Name = T4.Exam_Name WHERE T4.Satisfactory_YN = '1' AND T4.Question_ID IN ( SELECT T5.Question_ID FROM Questions AS T5 JOIN Questions_in_Exams AS T6 ON T5.Question_ID = T6.Question_ID JOIN Exams AS T7 ON T6.Exam_ID = T7.Exam_ID JOIN Valid_Answers AS T8 ON T7.Exam_Name = T8.Exam_Name WHERE T8.Satisfactory_YN = '1' AND T8.Question_ID IN ( SELECT T9.Question_ID FROM Questions AS T9 JOIN Questions_in_Exams AS T10 ON T9.Question_ID = T10.Question_ID JOIN Exams AS T11 ON T10.Exam_ID = T11.Exam_ID JOIN Valid_Answers AS T12 ON T11.Exam_Name = T12.Exam_Name WHERE T12.Satisfactory_YN = '1' ) )",
    "exec_result": 0
  },
  {
    "idx": 231,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT * FROM Students",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT * FROM Students",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 233,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Addresses",
    "pred": "SELECT COUNT(address_id) FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 234,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Addresses",
    "pred": "SELECT COUNT(address_id) FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 235,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT address_id ,  address_details FROM Addresses",
    "pred": "SELECT address_id, address_details FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 236,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT address_id ,  address_details FROM Addresses",
    "pred": "SELECT address_id, address_details FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products",
    "pred": "SELECT COUNT(*) FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 238,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products",
    "pred": "SELECT COUNT(*) FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 239,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
    "pred": "SELECT product_id, product_type_code, product_name FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 240,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
    "pred": "SELECT product_id, product_type_code, product_name FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 241,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 242,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 243,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
    "pred": "SELECT MIN(Products.product_price), AVG(Products.product_price), MAX(Products.product_price) FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 244,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
    "pred": "SELECT min(Products.product_price), avg(Products.product_price), max(Products.product_price) FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 245,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
    "pred": "SELECT AVG(Products.product_price) FROM Products WHERE Products.product_type_code = 'Clothes';",
    "exec_result": 1
  },
  {
    "idx": 246,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
    "pred": "SELECT AVG(Products.product_price) FROM Products",
    "exec_result": 0
  },
  {
    "idx": 247,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
    "pred": "SELECT COUNT(DISTINCT Products.product_type_code) AS num_products FROM Products;",
    "exec_result": 0
  },
  {
    "idx": 248,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
    "pred": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';",
    "exec_result": 1
  },
  {
    "idx": 249,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
    "pred": "SELECT p.product_name FROM Products p WHERE p.product_price > (SELECT AVG(p.product_price) FROM Products p);",
    "exec_result": 1
  },
  {
    "idx": 250,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
    "pred": "SELECT P.product_name FROM Products P JOIN ( SELECT product_id, AVG(product_price) as avg_price FROM Products GROUP BY product_id ) AS AvgP ON P.product_id = AvgP.product_id WHERE P.product_price > AvgP.avg_price;",
    "exec_result": 0
  },
  {
    "idx": 251,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
    "pred": "SELECT T1.product_name FROM Products AS T1 JOIN ( SELECT product_id, AVG(product_price) as avg_price FROM Products GROUP BY product_id ) AS T2 ON T1.product_id = T2.product_id WHERE T1.product_type_code = 'Hardware' AND T2.avg_price > T1.product_price;",
    "exec_result": 0
  },
  {
    "idx": 252,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
    "pred": "SELECT T1.product_name FROM Products AS T1 JOIN ( SELECT product_id, AVG(product_price) as avg_price FROM Products GROUP BY product_id ) AS T2 ON T1.product_id = T2.product_id WHERE T1.product_type_code = 'Hardware' AND T2.avg_price > (SELECT AVG(product_price) FROM Products)",
    "exec_result": 0
  },
  {
    "idx": 253,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 254,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
    "pred": "SELECT T1.product_name, T1.product_price FROM Products AS T1 JOIN Customer_Orders AS T2 ON T1.product_id = T2.product_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id WHERE T3.product_id = (SELECT product_id FROM Customer_Orders WHERE customer_id = 'Twila') ORDER BY T1.product_price DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 255,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
    "pred": "SELECT P.product_id, P.product_name FROM Products P JOIN ( SELECT product_id, MIN(product_price) AS min_price FROM Products GROUP BY product_id ) P2 ON P.product_id = P2.product_id WHERE P2.min_price = (SELECT MIN(product_price) FROM Products) ORDER BY P2.min_price ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 256,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 257,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products ORDER BY product_price DESC",
    "pred": "SELECT product_name FROM Products ORDER BY product_price DESC;",
    "exec_result": 1
  },
  {
    "idx": 258,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products ORDER BY product_price DESC",
    "pred": "SELECT Products.product_name, Products.product_price FROM Products ORDER BY Products.product_price DESC;",
    "exec_result": 0
  },
  {
    "idx": 259,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
    "pred": "SELECT product_type_code, product_name, product_price FROM Products ORDER BY product_price ASC",
    "exec_result": 0
  },
  {
    "idx": 260,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
    "pred": "SELECT product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC",
    "exec_result": 1
  },
  {
    "idx": 261,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
    "pred": "SELECT product_type_code, COUNT(*) FROM Products GROUP BY product_type_code",
    "exec_result": 1
  },
  {
    "idx": 262,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
    "pred": "SELECT product_type_code, COUNT(*) FROM Products GROUP BY product_type_code",
    "exec_result": 1
  },
  {
    "idx": 263,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
    "pred": "SELECT product_type_code, AVG(product_price) AS average_price FROM Products GROUP BY product_type_code;",
    "exec_result": 1
  },
  {
    "idx": 264,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 265,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
    "pred": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING COUNT(product_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.product_type_code FROM Products AS T1 JOIN ( SELECT product_id FROM Customer_Orders GROUP BY product_id HAVING COUNT(*) > 2 ) AS T2 ON T1.product_id = T2.product_id",
    "exec_result": 0
  },
  {
    "idx": 267,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) AS product_count FROM Products GROUP BY product_type_code ORDER BY product_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 268,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) AS frequency FROM Products GROUP BY product_type_code ORDER BY frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 269,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) AS num_customers FROM Customers",
    "exec_result": 1
  },
  {
    "idx": 270,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) AS num_customers FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 271,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id ,  customer_name FROM Customers",
    "pred": "SELECT customer_id, customer_name FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 272,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id ,  customer_name FROM Customers",
    "pred": "SELECT customer_id, customer_name FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 273,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 274,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 275,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
    "pred": "SELECT DISTINCT T1.payment_method_code, COUNT(T2.customer_id) AS customer_count FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.payment_method_code ORDER BY customer_count DESC;",
    "exec_result": 1
  },
  {
    "idx": 276,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
    "pred": "SELECT payment_method_code, COUNT(DISTINCT customer_id) AS num_customers FROM Customers GROUP BY payment_method_code",
    "exec_result": 1
  },
  {
    "idx": 277,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.payment_method_code, COUNT(*) AS num_customers FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.payment_method_code ORDER BY num_customers DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 278,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.payment_method_code FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_id ORDER BY COUNT(T3.product_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 279,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
    "pred": "SELECT Customers.customer_name FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id, Customers.customer_name ORDER BY COUNT(DISTINCT Customer_Orders.order_id) ASC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 280,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
    "pred": "SELECT Customers.customer_name FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_id, Customers.customer_name ORDER BY COUNT(DISTINCT Order_Items.product_id) DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 281,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "SELECT T1.payment_method_code, T1.customer_number FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeromy';",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "SELECT T1.payment_method_code, T1.customer_number FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id WHERE T1.customer_name = 'Jeromy'",
    "exec_result": 0
  },
  {
    "idx": 283,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT DISTINCT payment_method_code FROM Customers",
    "pred": "SELECT DISTINCT T1.payment_method_code FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING COUNT(T2.order_id) > 1",
    "exec_result": 0
  },
  {
    "idx": 284,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT DISTINCT payment_method_code FROM Customers",
    "pred": "SELECT DISTINCT Payment_method_code FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 285,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
    "pred": "SELECT Products.product_id, Products.product_type_code FROM Products ORDER BY Products.product_name;",
    "exec_result": 1
  },
  {
    "idx": 286,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
    "pred": "SELECT DISTINCT T1.product_id, T1.product_type_code FROM Products AS T1 ORDER BY T1.product_name;",
    "exec_result": 1
  },
  {
    "idx": 287,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T1.product_type_code, COUNT(*) AS product_count FROM Products AS T1 JOIN ( SELECT product_id, COUNT(*) AS product_count FROM Order_Items GROUP BY product_id ORDER BY product_count DESC LIMIT 1 ) AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_type_code ORDER BY product_count ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 288,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT DISTINCT T1.product_type_code FROM Products AS T1 JOIN ( SELECT product_type_code, COUNT(*) as count FROM Customer_Orders GROUP BY product_type_code ORDER BY count DESC LIMIT 1 ) AS T2 ON T1.product_type_code = T2.product_type_code",
    "exec_result": 0
  },
  {
    "idx": 289,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customer_orders",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) AS num_orders FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Orders_Items ON Customer_Orders.order_id = Orders_Items.order_id JOIN Products ON Orders_Items.product_id = Products.product_id;",
    "exec_result": 0
  },
  {
    "idx": 290,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customer_orders",
    "pred": "SELECT COUNT(DISTINCT Customer_Orders.customer_id) AS Total_Orders FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 291,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 292,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 293,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
    "pred": "SELECT Customers.customer_name, Customers.customer_id, COUNT(Order_Items.order_id) AS order_count FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_id, Customers.customer_name ORDER BY order_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 294,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
    "pred": "SELECT Customers.customer_name, Customers.customer_id, COUNT(Order_Items.order_id) AS order_count FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_id ORDER BY order_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 295,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 296,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 297,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
    "pred": "SELECT order_status_code, COUNT(order_id) FROM Order_Items GROUP BY order_status_code",
    "exec_result": 0
  },
  {
    "idx": 298,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
    "pred": "SELECT order_status_code, COUNT(*) FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY order_status_code",
    "exec_result": 0
  },
  {
    "idx": 299,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.order_status_code FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 300,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.order_status_code FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 301,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.order_status_code = 'Part';",
    "exec_result": 0
  },
  {
    "idx": 302,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.order_status_code = 'Part';",
    "exec_result": 0
  },
  {
    "idx": 303,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT DISTINCT Products.product_name FROM Products WHERE Products.product_id NOT IN (SELECT Product_id FROM Customer_Orders);",
    "exec_result": 0
  },
  {
    "idx": 304,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT DISTINCT Products.product_name FROM Products JOIN Customer_Orders ON Products.product_id = Customer_Orders.product_id WHERE Customer_Orders.customer_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 305,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(DISTINCT Products.product_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';",
    "exec_result": 0
  },
  {
    "idx": 306,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT SUM(CASE WHEN T1.product_id = 1 THEN T2.order_quantity ELSE 0 END) AS Total_Orders FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Products AS T3 ON T3.product_id = T2.product_id WHERE T3.product_type_code = 'Monitor';",
    "exec_result": 0
  },
  {
    "idx": 307,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) AS Number_of_Customers FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_type_code = 'Monitor'",
    "exec_result": 0
  },
  {
    "idx": 309,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id",
    "exec_result": 1
  },
  {
    "idx": 310,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Customers ON Order_Items.customer_id = Customers.customer_id;",
    "exec_result": 0
  },
  {
    "idx": 311,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
    "pred": "SELECT DISTINCT Customers.customer_id FROM Customers WHERE Customers.customer_id NOT IN (SELECT Customer_Orders.customer_id FROM Customer_Orders);",
    "exec_result": 1
  },
  {
    "idx": 312,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
    "pred": "SELECT DISTINCT Customers.customer_id FROM Customers WHERE Customers.customer_id NOT IN (SELECT DISTINCT Customer_Orders.customer_id FROM Customer_Orders)",
    "exec_result": 1
  },
  {
    "idx": 313,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
    "pred": "SELECT T1.order_date, T1.order_id FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Products AS T3 ON T2.product_id = T3.product_id WHERE T2.order_quantity > 6 OR T3.product_id IN (SELECT product_id FROM Order_Items WHERE order_quantity > 3)",
    "exec_result": 0
  },
  {
    "idx": 314,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
    "pred": "SELECT T1.order_id, T1.order_date FROM Customer_Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id WHERE T2.order_quantity > 6 OR T2.product_id IN (SELECT product_id FROM Products WHERE product_id > 3) ORDER BY T1.order_date DESC;",
    "exec_result": 0
  },
  {
    "idx": 315,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT count(*) FROM building",
    "pred": "SELECT COUNT(Building_ID) FROM building;",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT count(*) FROM building",
    "pred": "SELECT COUNT(*) FROM building;",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "pred": "SELECT Name FROM building ORDER BY Number_of_Stories ASC;",
    "exec_result": 1
  },
  {
    "idx": 318,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "pred": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "exec_result": 1
  },
  {
    "idx": 319,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Address FROM building ORDER BY Completed_Year DESC",
    "pred": "SELECT Address FROM building ORDER BY Completed_Year DESC;",
    "exec_result": 1
  },
  {
    "idx": 320,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Address FROM building ORDER BY Completed_Year DESC",
    "pred": "SELECT T1.Address FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID ORDER BY T2.Completed_Year DESC;",
    "exec_result": 0
  },
  {
    "idx": 321,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
    "pred": "SELECT MAX(Number_of_Stories) FROM building WHERE Completed_Year NOT BETWEEN 1980 AND 1983",
    "exec_result": 1
  },
  {
    "idx": 322,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
    "pred": "SELECT MAX(Number_of_Stories) FROM building WHERE Region_ID = (SELECT Region_ID FROM building WHERE Year = 1980)",
    "exec_result": 0
  },
  {
    "idx": 323,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT avg(Population) FROM region",
    "pred": "SELECT AVG(population) FROM region;",
    "exec_result": 1
  },
  {
    "idx": 324,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT avg(Population) FROM region",
    "pred": "SELECT AVG(population) FROM region;",
    "exec_result": 1
  },
  {
    "idx": 325,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Name ASC",
    "pred": "SELECT Name FROM region ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Name ASC",
    "pred": "SELECT DISTINCT T1.Name FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID ORDER BY T1.Name;",
    "exec_result": 0
  },
  {
    "idx": 327,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region WHERE Area  >  10000",
    "pred": "SELECT T2.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID WHERE T2.Area > 10000",
    "exec_result": 0
  },
  {
    "idx": 328,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region WHERE Area  >  10000",
    "pred": "SELECT T2.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID WHERE T2.Area > 10000;",
    "exec_result": 0
  },
  {
    "idx": 329,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
    "pred": "SELECT T2.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID ORDER BY T2.Population DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 330,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID ORDER BY T2.Population DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 331,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
    "pred": "SELECT Name FROM region WHERE Area IN (SELECT MAX(area) FROM region)",
    "exec_result": 0
  },
  {
    "idx": 332,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
    "pred": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 333,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT b.Name, r.Name FROM building AS b JOIN region AS r ON b.Region_ID = r.Region_ID",
    "exec_result": 1
  },
  {
    "idx": 334,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT b.Name, r.Name FROM building AS b JOIN region AS r ON b.Region_ID = r.Region_ID;",
    "exec_result": 1
  },
  {
    "idx": 335,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT T1.Name FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(T2.Region_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 336,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT Region_ID, Name FROM region WHERE Region_ID IN (SELECT Region_ID FROM building GROUP BY Region_ID HAVING COUNT(Region_ID) > 1)",
    "exec_result": 1
  },
  {
    "idx": 337,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 338,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(T2.Region_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 339,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT b.Address, r.Capital FROM building AS b JOIN region AS r ON b.Region_ID = r.Region_ID;",
    "exec_result": 1
  },
  {
    "idx": 340,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT b.Address, r.Name FROM building AS b JOIN region AS r ON b.Region_ID = r.Region_ID",
    "exec_result": 0
  },
  {
    "idx": 341,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
    "pred": "SELECT Number_of_Stories FROM building WHERE Name = 'Abruzzo'",
    "exec_result": 0
  },
  {
    "idx": 342,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
    "pred": "SELECT Number_of_Stories FROM building WHERE Region_ID = (SELECT Region_ID FROM region WHERE Name = 'Abruzzo')",
    "exec_result": 1
  },
  {
    "idx": 343,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
    "pred": "SELECT completed_year, COUNT(region_id) FROM region JOIN building ON region.Region_ID = building.Region_ID WHERE region_id IS NOT NULL GROUP BY completed_year;",
    "exec_result": 0
  },
  {
    "idx": 344,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
    "pred": "SELECT Completed_Year, COUNT(*) FROM building GROUP BY Completed_Year",
    "exec_result": 1
  },
  {
    "idx": 345,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Completed_Year FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 346,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Completed_Year FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 347,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
    "pred": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
    "pred": "SELECT Name FROM region WHERE Area IS NULL",
    "exec_result": 0
  },
  {
    "idx": 349,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
    "pred": "SELECT T1.Completed_Year, T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID WHERE T1.Number_of_Stories > 20 OR T1.Number_of_Stories < 15",
    "exec_result": 0
  },
  {
    "idx": 350,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
    "pred": "SELECT T1.Completed_Year, T2.Completed_Year FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID WHERE T1.Number_of_Stories > 20 AND T1.Number_of_Stories < 15 OR T2.Population > 1500000000;",
    "exec_result": 0
  },
  {
    "idx": 351,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT DISTINCT Address FROM building",
    "pred": "SELECT DISTINCT Address FROM building;",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT DISTINCT Address FROM building",
    "pred": "SELECT DISTINCT building.Address FROM building;",
    "exec_result": 1
  },
  {
    "idx": 353,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
    "pred": "SELECT T1.Completed_Year, COUNT(*) FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID GROUP BY T1.Completed_Year ORDER BY COUNT(*) DESC",
    "exec_result": 0
  },
  {
    "idx": 354,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
    "pred": "SELECT T1.Name, T1.Completed_Year FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID ORDER BY T1.Number_of_Stories DESC, T2.Completed_Year DESC;",
    "exec_result": 0
  },
  {
    "idx": 355,
    "db_id": "government_shift",
    "question": "",
    "gold": "select channel_details from channels order by channel_details",
    "pred": "SELECT Channel_Details.`Channel_Name` FROM Channels ORDER BY Channel_Details.`Channel_Name` ASC;",
    "exec_result": 0
  },
  {
    "idx": 356,
    "db_id": "government_shift",
    "question": "",
    "gold": "select channel_details from channels order by channel_details",
    "pred": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC",
    "exec_result": 1
  },
  {
    "idx": 357,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM services",
    "pred": "SELECT COUNT(*) FROM Services",
    "exec_result": 1
  },
  {
    "idx": 358,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM services",
    "pred": "SELECT COUNT(*) FROM Services",
    "exec_result": 1
  },
  {
    "idx": 359,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 360,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT DISTINCT T1.Analytical_Layer_Type_Code FROM Customers_and_Services AS T1 JOIN Integration_Platform AS T2 ON T1.Integration_Platform_ID = T2.Integration_Platform_ID JOIN Analytical_Layer AS T3 ON T1.Analytical_ID = T3.Analytical_ID GROUP BY T1.Analytical_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 361,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID = (SELECT Customers.Customer_ID FROM Customers WHERE Customers_Name = 'Hardy Kutch')",
    "exec_result": 0
  },
  {
    "idx": 362,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID = (SELECT Customers.Customer_ID FROM Customers WHERE Customers_and_Services.Customer_ID = (SELECT Customers_and_Services_ID FROM Customers_and_Services WHERE Customer_ID = 'Hardy Kutch') LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 363,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id group by t1.service_details having count(*)  >  3",
    "pred": "SELECT Services_and_Channels_Details.Service_Details, COUNT(*) AS Service_Count FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID GROUP BY Services_and_Channels_Details.Service_Details HAVING Service_Count > 3",
    "exec_result": 0
  },
  {
    "idx": 364,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_details HAVING count(*)  >  3",
    "pred": "SELECT Services_and_Channels_Details.Service_Details, COUNT(*) AS Service_Count FROM Customers_and_Services JOIN Customers_interactions ON Customers_and_Services.Customer_ID = Customers_interactions.Customer_ID JOIN Integration_Platform ON Customers_interactions.Integration_Platform_ID = Integration_Platform.ID WHERE Customers_interactions.Status_Code = 'Open' GROUP BY Services_and_Channels_Details.Service_Details HAVING Service_Count > 3 ORDER BY Service_Count DESC;",
    "exec_result": 0
  },
  {
    "idx": 365,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.customer_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, MAX(Customers_and_Services_Details.Status_Code) AS Max_Status_Code FROM Customers_and_Services JOIN Customers_and_Services_Details ON Customers_and_Services.Customer_ID = Customers_and_Services_Details.Customer_ID JOIN Integration_Platform ON Customers_and_Services_Details.Integration_Platform_ID = Integration_Platform.Integration_Platform_ID GROUP BY Customers_and_Services_Details.Customer_ID ORDER BY Max_Status_Code DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 366,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 367,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, MAX(Analytical_Layer_Type_Code) AS Max_Type FROM Customers_and_Services JOIN Customers_and_Services_Details ON Customers_and_Services.Customer_ID = Customers_and_Services_Details.Customer_ID JOIN Integration_Platform ON Customers_and_Services_Details.Integration_Platform_ID = Integration_Platform.ID JOIN Analytical_Layer ON Integration_Platform_ID = Analytical_Layer.ID GROUP BY Customers_and_Services_Details.Customer_ID ORDER BY Max_Type DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 368,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, MAX(Analytical_Layer_Type_Code) AS Max_Type FROM Customers_and_Services JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Integration_Platform_ID = Integration_Platform.ID JOIN Analytical_Layer ON Integration_Platform.ID = Analytical_Layer.ID GROUP BY Customers_and_Services.Customer_ID ORDER BY Max_Type DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 369,
    "db_id": "government_shift",
    "question": "",
    "gold": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details FROM Customers_and_Services INNER JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers_and_Services.Customer_ID NOT IN (SELECT Customers_and_Services_ID FROM Customer_Interactions WHERE Status_Code = 'Open')",
    "exec_result": 0
  },
  {
    "idx": 370,
    "db_id": "government_shift",
    "question": "",
    "gold": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details FROM Customers AND Services INNER JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers_and_Services_Details.Customer_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 371,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, Customers_and_Services_Details.Status_Code FROM Customers_and_Services JOIN Customers_and_Services_Details ON Customers_and_Services.Customer_ID = Customers_and_Services_Details.Customer_ID JOIN Integration_Platform ON Customers_and_Services_Details.Integration_Platform_ID = Integration_Platform.Integration_Platform_ID WHERE Integration_Platform.Analytical_Layer_Type_Code = 'Bottom' ORDER BY Status_Code DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 372,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
    "pred": "SELECT DISTINCT Customers_and_Services_Details.Customer_Details, Customers_and_Services_Details.Status_Code FROM Customers_and_Services JOIN Customers_and_Services_Details ON Customers_and_Services.Customer_ID = Customers_and_Services_Details.Customer_ID JOIN Integration_Platform ON Customers_and_Services_Details.Integration_Platform_ID = Integration_Platform.ID JOIN Analytical_Layer ON Integration_Platform.ID = Analytical_Layer.ID WHERE Analytical_Layer.Analytical_Layer_Type_Code = 'Bottom' ORDER BY Customers_and_Services_Details.Status_Code DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 373,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
    "pred": "SELECT COUNT(DISTINCT Customers_and_Services_Details) AS NumberOfDistinctCustomerAndServicesDetails FROM Customers_and_Services",
    "exec_result": 1
  },
  {
    "idx": 374,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
    "pred": "SELECT COUNT(DISTINCT Customers_and_Services_ID) AS TotalCustomersAndServices FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID",
    "exec_result": 1
  },
  {
    "idx": 375,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
    "pred": "SELECT Customers_Details.Name FROM Customers INNER JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID INNER JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Services.Service_Details LIKE '%Kutch%'",
    "exec_result": 0
  },
  {
    "idx": 376,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, Customers_and_Services_Details.Status_Code FROM Customers_and_Services INNER JOIN Customers ON Customers_and_Services.Customers_and_Services_ID = Customers.Customers_ID WHERE Customers_and_Services_Details.Customer_Details LIKE '%Kutch%'",
    "exec_result": 0
  },
  {
    "idx": 377,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID = 'Hardy Kutch' OR Services_and_Channels_Details.Status_Code = 'Good';",
    "exec_result": 0
  },
  {
    "idx": 378,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID = 'Hardy Kutch' OR Services_and_Channels_Details.Status_Code = 'Good';",
    "exec_result": 0
  },
  {
    "idx": 379,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID = 'Hardy Kutch' AND Services_and_Channels_Details.Status_Code = 'Bad';",
    "exec_result": 0
  },
  {
    "idx": 380,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services AS Services JOIN Customers_and_Services AS Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers AS Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Customer_Interactions AS Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform AS Integration_Platform ON Customer_Interactions.Channel_ID = Integration_Platform.Channel_ID JOIN Analytical_Layer AS Analytical_Layer ON Integration_Platform.Analytical_ID = Analytical_Layer.Analytical_ID WHERE Customers_and_Services.Soldiers_and_Services_Details.Soldiers_and_Services_ID = 'Hardy Kutch' AND Services_and_Channels_Details.Service_Details = 'bad' ORDER BY Services_and_Channels_Details.Service_Details ASC",
    "exec_result": 0
  },
  {
    "idx": 381,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.service_details from services as t1 join customer_interactions as t2 on t1.service_id  =  t2.service_id join channels as t3 on t2.channel_id  =  t3.channel_id where t3.channel_details  =  \"15 ij\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.`Service_ID` = Customers_and_Services.`Service_ID` INNER JOIN Customers ON Customers_and_Services.`Customer_ID` = Customers.`Customer_ID` WHERE Customers_and_Services.`Channel_ID` = '15 ij';",
    "exec_result": 0
  },
  {
    "idx": 382,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customer_interactions AS t2 ON t1.service_id  =  t2.service_id JOIN channels AS t3 ON t2.channel_id  =  t3.channel_id WHERE t3.channel_details  =  \"15 ij\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID INNER JOIN Channels ON Customers_and_Services.Channel_ID = Channels.Channel_ID INNER JOIN Integration_Platform ON Integration_Platform.Customer_Interaction_ID = Customers_and_Services.Customer_Interaction_ID WHERE Channels.Channel_ID = '15 ij' AND Integration_Platform_Analytical_Layer.Analytical_Layer_Type_Code = 'Bottom'",
    "exec_result": 0
  },
  {
    "idx": 383,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id where t2.status_code  =  \"stuck\" and services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, Integration_Platform_Details.Integration_Platform_details FROM Customers_and_Services JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Integration_Platform_ID = Integration_Platform.Integration_Platform_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID JOIN Services ON Customer_Interactions.Service_ID = Services.Service_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID WHERE Status_Code = 'Stuck' AND Services_and_Channels_Details.Integration_Platform_details = 'bad' GROUP BY Customers_and_Services_Details.Customer_Details, Integration_Platform_Details.Integration_Platform_details HAVING COUNT(*) = 1 ORDER BY Customers_and_Services_Details.Customer_Details ASC",
    "exec_result": 0
  },
  {
    "idx": 384,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.status_code  =  \"Stuck\" AND services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, Integration_Platform_Details.Integration_Platform_details FROM Customers_and_Services JOIN Customers_and_Services_Details ON Customers_and_Services.Customer_ID = Customers_and_Services_Details.Customer_ID JOIN Integration_Platform ON Customers_and_Services_Details.Integration_Platform_ID = Integration_Platform.ID JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.ID JOIN Services ON Customer_Interactions.Service_ID = Services.ID JOIN Services AND Channels AND Integration_Platform ON Services.Service_ID = Integration_Platform.Service_ID WHERE Status_Code = 'Stuck' AND Integration_Platform_Details.Integration_Platform_details = 'bad' GROUP BY Customers_and_Services_Details.Customer_Details HAVING COUNT(*) = 1",
    "exec_result": 0
  },
  {
    "idx": 385,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
    "pred": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_ID = (SELECT Integration_Platform_ID FROM Integration_Platform WHERE Integration_Platform_ID IN (SELECT Integration_Platform_ID FROM Customer_Interactions WHERE Status_Code = 'Open'))",
    "exec_result": 0
  },
  {
    "idx": 386,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
    "pred": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details = 'Success'",
    "exec_result": 1
  },
  {
    "idx": 387,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id join integration_platform as t3 where t3.integration_platform_details  =  \"fail\"",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details, Integration_Platform_Details.Integration_Platform_Details FROM Integration_Platform JOIN Customers_and_Services ON Integration_Platform.Customer_Interaction_ID = Customers_and_Services.Customer_ID JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Channels ON Integration_Platform.Channel_ID = Channels.Channel_ID JOIN Customers_and_Services_Details ON Integration_Platform.Customer_Interaction_ID = Customers_and_Services_Details.Customer_ID JOIN Services ON Integration_Platform.Service_ID = Services.Service_ID JOIN Services_Details ON Services.Service_ID = Services_Details.Service_Details JOIN Analytical_Layer ON Integration_Platform.Analytical_ID = Analytical_Layer.Analytical_ID WHERE Integration_Platform.Integration_Platform_Type_Code = 'Fail';",
    "exec_result": 0
  },
  {
    "idx": 388,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id JOIN integration_platform AS t3 WHERE t3.integration_platform_details  =  \"Fail\"",
    "pred": "SELECT Customers_and_Services_Details.Customer_Details FROM Customers_and_Services INNER JOIN Integration_Platform ON Customers_and_Services.Integration_Platform_ID = Integration_Platform.ID WHERE Integration_Platform_Details = 'Fail';",
    "exec_result": 0
  },
  {
    "idx": 389,
    "db_id": "government_shift",
    "question": "",
    "gold": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
    "pred": "SELECT s.Service_ID, s.Service_Details FROM Services s WHERE s.Service_ID NOT IN (SELECT cs.Service_ID FROM Customers_and_Services cs) ORDER BY s.Service_ID;",
    "exec_result": 1
  },
  {
    "idx": 390,
    "db_id": "government_shift",
    "question": "",
    "gold": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID IS NULL ORDER BY Services_and_Channels_Details.Service_Details ASC;",
    "exec_result": 0
  },
  {
    "idx": 391,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
    "pred": "SELECT DISTINCT T1.Analytical_Layer_Type_Code, COUNT(*) AS Usage_Count FROM Customers_and_Services AS T1 JOIN Customers_and_Services_Details AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN Integration_Platform AS T3 ON T1.Integration_Platform_ID = T3.Integration_Platform_ID JOIN Analytical_Layer AS T4 ON T1.Analytical_ID = T4.Analytical_ID GROUP BY T1.Analytical_ID ORDER BY Usage_Count DESC;",
    "exec_result": 0
  },
  {
    "idx": 392,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 393,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id where t2.customers_and_services_details  =  \"unsatisfied\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Services_and_Channels_Details.Status_Code = 'Unsatisfied';",
    "exec_result": 0
  },
  {
    "idx": 394,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id WHERE t2.customers_and_services_details  =  \"Unsatisfied\"",
    "pred": "SELECT Services_and_Channels_Details.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Services_and_Channels_Details.Status_Code = 'Unsatisfied';",
    "exec_result": 0
  },
  {
    "idx": 395,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT count(*) FROM vehicles",
    "pred": "SELECT COUNT(*) FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 396,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT count(*) FROM vehicles",
    "pred": "SELECT COUNT(*) FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 397,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles ORDER BY model_year DESC",
    "pred": "SELECT T1.name FROM Vehicles AS T1 JOIN Customers AS T2 ON T1.id = T2.id ORDER BY T1.Model_year DESC;",
    "exec_result": 0
  },
  {
    "idx": 398,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles ORDER BY model_year DESC",
    "pred": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id JOIN Discount ON Renting_history.discount_id = Discount.id ORDER BY Vehicles.Model_year DESC;",
    "exec_result": 0
  },
  {
    "idx": 399,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT DISTINCT type_of_powertrain FROM vehicles",
    "pred": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 400,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT DISTINCT type_of_powertrain FROM vehicles",
    "pred": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 401,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
    "pred": "SELECT T1.name, T1.type_of_powertrain, T3.Cost_per_25_miles FROM Vehicles AS T1 JOIN Model_year AS T2 ON T1.Model_year = T2.model_year JOIN Vehicles AS T3 ON T1.id = T3.id WHERE T2.year IN (2013, 2014);",
    "exec_result": 0
  },
  {
    "idx": 402,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
    "pred": "SELECT T1.name, T1.type_of_powertrain, T3.Cost_per_25_miles FROM Vehicles AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.id JOIN Discount AS T3 ON T1.id = T3.id WHERE T1.Model_year IN (2013, 2014) ORDER BY T3.Cost_per_25_miles ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 403,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
    "pred": "SELECT DISTINCT Type_of_powertrain FROM Vehicles WHERE Model_year BETWEEN 2014 AND 2013",
    "exec_result": 0
  },
  {
    "idx": 404,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
    "pred": "SELECT T2.type_of_powertrain FROM Vehicles AS T1 JOIN Discount AS T2 ON T1.id = T2.discount_id WHERE T1.model_year BETWEEN 2013 AND 2014 AND T1.model_year BETWEEN 2013 AND 2014",
    "exec_result": 0
  },
  {
    "idx": 405,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
    "pred": "SELECT Type_of_powertrain, COUNT(*) FROM Vehicles GROUP BY Type_of_powertrain",
    "exec_result": 1
  },
  {
    "idx": 406,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
    "pred": "SELECT T2.Type_of_powertrain, COUNT(*) FROM Vehicles AS T1 JOIN Discount AS T2 ON T1.id = T2.discount_id JOIN Customers AS T3 ON T1.customer_id = T3.id GROUP BY T2.Type_of_powertrain",
    "exec_result": 0
  },
  {
    "idx": 407,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.type_of_powertrain, COUNT(*) FROM Vehicles AS T1 JOIN Customers AS T2 ON T1.id = T2.customer_id GROUP BY T2.type_of_powertrain ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 408,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Type_of_powertrain FROM Vehicles AS T1 JOIN Discount AS T2 ON T1.id = T2.discount_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 409,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
    "pred": "SELECT MIN(Cost_per_25_miles), MAX(Cost_per_25_miles), AVG(Cost_per_25_miles) FROM Vehicles;",
    "exec_result": 0
  },
  {
    "idx": 410,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
    "pred": "SELECT MIN(Cost_per_25_miles), MAX(Cost_per_25_miles), AVG(Cost_per_25_miles) FROM Vehicles;",
    "exec_result": 0
  },
  {
    "idx": 411,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
    "pred": "SELECT T1.name, T2.model_year FROM Vehicles AS T1 JOIN Vehicles AS T2 ON T1.id = T2.vehicles_id JOIN Discount AS T3 ON T1.id = T3.id JOIN Vehicles AS T4 ON T2.id = T4.vehicles_id JOIN Discount AS T5 ON T4.id = T5.id WHERE T1.City_fuel_economy_rate <= T2.Highway_fuel_economy_rate;",
    "exec_result": 0
  },
  {
    "idx": 412,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
    "pred": "SELECT T1.name, T1.Model_year FROM Vehicles AS T1 JOIN Vehicles AS T2 ON T1.Model_year = T2.Model_year WHERE T1.City_fuel_economy_rate <= T2.City_fuel_economy_rate;",
    "exec_result": 0
  },
  {
    "idx": 413,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 414,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
    "pred": "SELECT T2.Type_of_powertrain, AVG(T3.Cost_per_25_miles) AS Average_Cost FROM Vehicles AS T1 JOIN Discount AS T2 ON T1.id = T2.id JOIN Vehicles AS T3 ON T1.id = T3.id WHERE T2.id IN ( SELECT T2.id FROM Discount AS T2 GROUP BY T2.id HAVING COUNT(T2.id) > 1 ) GROUP BY T2.id",
    "exec_result": 0
  },
  {
    "idx": 415,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age ,  membership_credit FROM customers",
    "pred": "SELECT Customers.name, Customers.age, Discount.membership_credit FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id JOIN Discount ON Renting_history.discount_id = Discount.id",
    "exec_result": 0
  },
  {
    "idx": 416,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age ,  membership_credit FROM customers",
    "pred": "SELECT Customers.name, Customers.age, Customers.membership_credit FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 417,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
    "pred": "SELECT Customers.name, Customers.age FROM Customers JOIN ( SELECT customer_id, MAX(membership_credit) as max_credit FROM Renting_history GROUP BY customer_id ) AS max_credit_customers ON Customers.id = max_credit_customers.customer_id JOIN Customers ON Customers.id = max_credit_customers.customer_id WHERE Customers.membership_credit = max_credit_customers.max_credit;",
    "exec_result": 0
  },
  {
    "idx": 418,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
    "pred": "SELECT Customers.name, Customers.age FROM Customers JOIN ( SELECT customer_id, MAX(membership_credit) as max_credit FROM Renting_history GROUP BY customer_id ) as max_credit_customer ON Customers.id = max_credit_customer.customer_id ORDER BY max_credit_customer.max_credit DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 419,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
    "pred": "SELECT AVG(Customers.age) FROM Customers WHERE Customers.membership_credit > (SELECT AVG(membership_credit) FROM Customers)",
    "exec_result": 1
  },
  {
    "idx": 420,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
    "pred": "SELECT AVG(Customers.age) AS average_age FROM Customers WHERE Customers.age > (SELECT AVG(Age) FROM Customers)",
    "exec_result": 0
  },
  {
    "idx": 421,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT * FROM discount",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 422,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT * FROM discount",
    "pred": "SELECT Discount.name, Discount.membership_credit, Discount.id FROM Discount JOIN (SELECT id FROM Customers WHERE age = (SELECT MIN(age) FROM Customers)) AS min_age_customers ON Discount.customer_id = min_age_customers.id JOIN (SELECT id FROM Vehicles WHERE Model_year = (SELECT MIN(Model_year) FROM Vehicles)) AS min_model_year_vehicles ON Discount.vehicles_id = min_model_year_vehicles.id WHERE Discount.id IN (SELECT discount_id FROM Renting_history WHERE customer_id IN (SELECT id FROM Customers WHERE age = (SELECT MIN(age) FROM Customers)))",
    "exec_result": 0
  },
  {
    "idx": 423,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
    "pred": "SELECT V.name, SUM(R.total_hours) FROM Vehicles AS V JOIN Renting_history AS R ON V.id = R.vehicles_id GROUP BY V.id",
    "exec_result": 1
  },
  {
    "idx": 424,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
    "pred": "SELECT V.name, SUM(R.total_hours) AS total_rental_hours FROM Vehicles AS V JOIN Renting_history AS R ON V.id = R.vehicles_id JOIN Customers AS C ON R.customer_id = C.id GROUP BY V.name",
    "exec_result": 1
  },
  {
    "idx": 425,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
    "pred": "SELECT T1.name FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id WHERE T2.discount_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 426,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
    "pred": "SELECT Vehicles.name FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.customer_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 427,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
    "pred": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.id HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 428,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.name HAVING COUNT(DISTINCT Vehicles.id) > 1;",
    "exec_result": 0
  },
  {
    "idx": 429,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT V.name, V.Model_year FROM Vehicles V JOIN (SELECT discount_id, COUNT(*) as num_renting_history FROM Renting_history GROUP BY discount_id) AS T1 ON V.id = T1.discount_id ORDER BY T1.num_renting_history DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 430,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT V.name, V.Model_year FROM Vehicles AS V JOIN (SELECT discount_id, COUNT(*) as total_rentals FROM Renting_history WHERE customer_id = V.id GROUP BY discount_id) AS T ON V.id = T.discount_id ORDER BY T.total_rentals DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 431,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC",
    "pred": "SELECT V.name FROM Vehicles AS V JOIN Renting_history AS RH ON V.id = RH.vehicles_id JOIN Discount AS D ON RH.discount_id = D.id WHERE D.name = 'no discount' ORDER BY RH.total_hours DESC;",
    "exec_result": 0
  },
  {
    "idx": 432,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC",
    "pred": "SELECT Vehicles.name, SUM(Vehicles.Cost_per_25_miles) AS Total_Rent FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id JOIN Discount ON Renting_history.discount_id = Discount.id GROUP BY Vehicles.name ORDER BY Total_Rent DESC;",
    "exec_result": 0
  },
  {
    "idx": 433,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.name, T1.notes FROM Customers AS T1 JOIN Discount AS T2 ON T1.id = T2.customer_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 434,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Discount.name FROM Discount JOIN ( SELECT discount_id, COUNT(*) as total_rental_history FROM Renting_history GROUP BY discount_id ORDER BY total_rental_history DESC LIMIT 1 ) AS most_rental_history ON Discount.id = most_rental_history.discount_id",
    "exec_result": 1
  },
  {
    "idx": 435,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30",
    "pred": "SELECT T1.name, T2.type_of_powertrain FROM Vehicles AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.id JOIN Renting_history AS T3 ON T3.customer_id = T2.id AND T3.vehicles_id = T1.id JOIN Vehicles AS T4 ON T3.vehicles_id = T4.id WHERE T3.total_hours > 30 ORDER BY T1.id;",
    "exec_result": 0
  },
  {
    "idx": 436,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30",
    "pred": "SELECT T1.name, T1.type_of_powertrain FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id WHERE T2.total_hours > 30;",
    "exec_result": 1
  },
  {
    "idx": 437,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain",
    "pred": "SELECT AVG(Cost_per_25_miles), AVG(Highway_fuel_economy_rate) FROM Vehicles WHERE Type_of_powertrain = 'Electric'",
    "exec_result": 0
  },
  {
    "idx": 438,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain",
    "pred": "SELECT T3.Type_of_powertrain, AVG(T1.City_fuel_economy_rate), AVG(T1.Highway_fuel_economy_rate) FROM Vehicles AS T1 JOIN Discount AS T2 ON T1.Model_year = T2.id JOIN Vehicles AS T3 ON T1.Model_year = T3.id WHERE T1.Type_of_powertrain IN ('Electric', 'hybrid', 'electric') GROUP BY T3.Type_of_powertrain;",
    "exec_result": 0
  },
  {
    "idx": 439,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT avg(amount_of_loan) FROM Student_Loans",
    "pred": "SELECT AVG(amount_of_loan) AS average_loan_amount FROM Students_Addresses JOIN Students ON Students_Addresses.student_id = Students.student_id;",
    "exec_result": 0
  },
  {
    "idx": 440,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT avg(amount_of_loan) FROM Student_Loans",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 441,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 442,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 443,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'",
    "pred": "SELECT T1.student_details, T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id JOIN Transcripts AS T3 ON T2.student_id = T3.student_id WHERE T3.transcript_details LIKE '%data%' AND T1.student_id NOT IN ( SELECT T4.student_id FROM Students_Addresses AS T4 JOIN Classes AS T5 ON T4.student_id = T5.student_id JOIN Transcripts AS T6 ON T5.student_id = T6.student_id WHERE T6.transcript_details LIKE '%net%' )",
    "exec_result": 0
  },
  {
    "idx": 444,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 445,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)",
    "pred": "SELECT T1.bio_data FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Detention AS T3 ON T2.student_id = T3.student_id JOIN Classes AS T4 ON T1.student_id = T4.student_id JOIN Students_Addresses AS T5 ON T4.student_id = T5.student_id JOIN Detention AS T6 ON T5.student_id = T6.student_id WHERE T6.detention_type_code = 'On break' OR T6.detention_type_code = 'Leave for illness' OR T6.detention_type_code = 'During lunchtime' OR T6.detention_type_code = 'After School';",
    "exec_result": 0
  },
  {
    "idx": 446,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)",
    "pred": "SELECT T1.student_details, T1.bio_data FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Detention AS T3 ON T2.student_id = T3.student_id JOIN Classes AS T4 ON T3.student_id = T4.student_id JOIN Students_Addresses AS T5 ON T4.student_id = T5.student_id JOIN Detention AS T6 ON T5.student_id = T6.student_id JOIN Achievements AS T7 ON T6.student_id = T7.student_id WHERE T3.detention_type_code = 'On break' OR T3.detention_type_code = 'Leave for illness' OR T3.detention_type_code = 'During lunchtime' OR T3.detention_type_code = 'After School';",
    "exec_result": 0
  },
  {
    "idx": 447,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )",
    "pred": "SELECT T1.student_id, T1.student_details, T1.date_of_transcript FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Classes AS T3 ON T2.address_id = T3.class_id JOIN Students_Addresses AS T4 ON T3.student_id = T4.student_id JOIN Detention AS T5 ON T4.student_id = T5.student_id JOIN Achievements AS T6 ON T5.detention_id = T6.detention_id WHERE T6.student_id IN ( SELECT T1.student_id FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Classes AS T3 ON T2.address_id = T3.class_id JOIN Students_Addresses AS T4 ON T3.student_id = T4.student_id JOIN Detention AS T5 ON T4.student_id = T5.student_id JOIN Achievements AS T6 ON T5.detention_id = T6.detention_id GROUP BY T1.student_id HAVING COUNT(DISTINCT T6.detention_type_code) >= 2 )",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )",
    "pred": "SELECT T1.student_id, T1.date_of_loan FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Detention AS T3 ON T2.student_id = T3.student_id JOIN Achievements AS T4 ON T3.detention_id = T4.detention_id GROUP BY T1.student_id HAVING COUNT(T4.student_id) > 1;",
    "exec_result": 0
  },
  {
    "idx": 449,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.teacher_details, T1.teacher_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id, T1.teacher_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 450,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 451,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 452,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 453,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 454,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 455,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 456,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 457,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "SELECT T1.bio_data, T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id;",
    "exec_result": 1
  },
  {
    "idx": 458,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "SELECT T1.bio_data, T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id",
    "exec_result": 1
  },
  {
    "idx": 459,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 460,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 461,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 462,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )",
    "pred": "SELECT Students.bio_data, Behaviour_Monitoring.behaviour_monitoring_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id ORDER BY Students.bio_data;",
    "exec_result": 0
  },
  {
    "idx": 463,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details NOT IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 ) except select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details not in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 )",
    "pred": "-- What is the biographical information of the students who got the most common result for their behaviour monitoring details? SELECT T2.student_details FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Behaviour_Monitoring AS T3 ON T2.student_id = T3.student_id WHERE T3.student_id = (SELECT student_id FROM Students_Addresses WHERE address_type_code = 'Home' GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "-- Which students have gone through any event? List the students' biographical data and event date. SELECT Students.biography, Transcript.date_of_transcript FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id JOIN Transcript ON Student_Events.event_id = Transcript.student_id WHERE Transcript.student_id IN ( SELECT event_id FROM Student_Events GROUP BY event_id HAVING COUNT(event_id) > 0 );",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 467,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 468,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 469,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 470,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 471,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 472,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )",
    "pred": "SELECT T2.teacher_id AS teacher_id, COUNT(T2.teacher_id) AS num_teachers FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Classes AS T3 ON T2.address_id = T3.class_id JOIN Students_Addresses AS T4 ON T3.student_id = T4.student_id JOIN Detention AS T5 ON T4.student_id = T5.student_id JOIN Achievements AS T6 ON T5.detention_id = T6.detention_id WHERE T6.achievement_type_code = 'Scholastic' AND T1.student_id NOT IN ( SELECT T1.student_id FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Classes AS T3 ON T2.address_id = T3.class_id JOIN Students_Addresses AS T4 ON T3.student_id = T4.student_id JOIN Detention AS T5 ON T4.student_id = T5.student_id JOIN Achievements AS T6 ON T5.detention_id = T6.detention_id WHERE T6.achievement_type_code = 'Scholastic' AND T6.achievement_details = 'Gold' ) GROUP BY T2.teacher_id;",
    "exec_result": 0
  },
  {
    "idx": 473,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_transcript ,  transcript_details FROM Transcripts",
    "pred": "SELECT transcript_details, date_of_transcript FROM Transcripts;",
    "exec_result": 1
  },
  {
    "idx": 474,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_transcript ,  transcript_details FROM Transcripts",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 475,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 476,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 477,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention",
    "pred": "SELECT T2.datetime_detention_start, T2.datetime_detention_end FROM Detention AS T2 JOIN Students_Addresses AS T3 ON T2.student_id = T3.student_id JOIN Classes AS T4 ON T3.student_id = T4.student_id JOIN Students AS T5 ON T4.student_id = T5.student_id JOIN Students_Addresses AS T6 ON T5.student_id = T6.student_id JOIN Addresses AS T7 ON T6.address_id = T7.address_id WHERE T3.address_type_code = 'Home' AND T2.detention_type_code = 'On break' ORDER BY T2.datetime_detention_start;",
    "exec_result": 0
  },
  {
    "idx": 478,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 479,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'",
    "pred": "SELECT T1.bio_data FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id WHERE T2.address_type_code = 'Suite' AND T1.student_id IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 480,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 481,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 482,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "SELECT T1.student_id, T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id WHERE T2.class_id = 'writing';",
    "exec_result": 0
  },
  {
    "idx": 483,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 484,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.teacher_id, COUNT(T2.teacher_id) AS num_courses FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id ORDER BY num_courses DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 485,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(DISTINCT Students.student_id) AS max_courses_taken, Students.student_id FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id ORDER BY COUNT(DISTINCT Students.student_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 486,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 487,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 488,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT Students.Addres_id, Students.Name FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id JOIN Student_Events ON Students.student_id = Student_Events.student_id JOIN Classes ON Students.student_id = Classes.student_id WHERE Classes.course_count = 2;",
    "exec_result": 0
  },
  {
    "idx": 489,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 490,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T2.detention_type_code, T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T2.detention_type_code ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 491,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 492,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 493,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1",
    "pred": "SELECT MIN(date_of_loan) FROM Student_Loans;",
    "exec_result": 1
  },
  {
    "idx": 494,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1",
    "pred": "SELECT MIN(date_of_loan) FROM Student_Loans;",
    "exec_result": 1
  },
  {
    "idx": 495,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 496,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 497,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1",
    "pred": "SELECT T1.`date_of_transcript` FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id JOIN Behaviour_Monitoring AS T3 ON T2.student_id = T3.student_id JOIN Students_Addresses AS T4 ON T2.student_id = T4.student_id JOIN Addresses AS T5 ON T4.address_id = T5.address_id JOIN Ref_Event_Types AS T6 ON T2.event_type_code = T6.event_type_code JOIN Ref_Achievement_Type AS T7 ON T2.student_id = T7.student_id JOIN Ref_Detention_Type AS T8 ON T2.detention_type_code = T8.detention_type_code JOIN Students_Loans AS T9 ON T2.student_id = T9.student_id JOIN Classes AS T10 ON T9.student_id = T10.student_id JOIN Students_Addresses AS T11 ON T9.student_id = T11.student_id JOIN Detention AS T12 ON T9.detention_type_code = T12.detention_type_code JOIN Achievements AS T13 ON T9.student_id = T13.student_id WHERE T1.student_details = 'Max Loan' ORDER BY T1.student_id ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 498,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1",
    "pred": "SELECT T1.transcript_details FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Detention AS T3 ON T2.student_id = T3.student_id JOIN Classes AS T4 ON T3.detention_type_code = T4.detention_type_code JOIN Ref_Detention_Type AS T5 ON T3.detention_type_code = T5.detention_type_code JOIN Ref_Address_Types AS T6 ON T4.address_type_code = T6.address_type_code JOIN Addresses AS T7 ON T6.address_type_code = T7.address_type_code JOIN Ref_Event_Types AS T8 ON T5.event_type_code = T8.event_type_code JOIN Ref_Achievement_Type AS T9 ON T8.event_type_code = T9.event_type_code JOIN Ref_Detention_Type AS T10 ON T8.detention_type_code = T10.detention_type_code JOIN Transcript AS T11 ON T2.student_id = T11.student_id WHERE T11.student_id = (SELECT student_id FROM Students WHERE amount_of_loan = (SELECT MAX(amount_of_loan) FROM Students WHERE amount_of_loan > 0)) ORDER BY T11.transcript_details DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 499,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 500,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select student_id ,  sum(amount_of_loan) from student_loans group by student_id",
    "pred": "SELECT Students.student_id, SUM(Students_Addresses.date_from) AS total_loan FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id GROUP BY Students.student_id ORDER BY total_loan DESC;",
    "exec_result": 0
  },
  {
    "idx": 502,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT student_id ,  sum(amount_of_loan) FROM Student_Loans GROUP BY student_id",
    "pred": "SELECT Students.student_id, SUM(Students_Addresses.address_type_code) AS total_loan_amount FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id GROUP BY Students.student_id;",
    "exec_result": 0
  },
  {
    "idx": 503,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 504,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
    "pred": "SELECT Students.student_id, Students.bio_data, COUNT(DISTINCT Students_Addresses.address_id) AS number_of_courses FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id GROUP BY Students.student_id;",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) FROM Detention",
    "pred": "SELECT COUNT(DISTINCT T2.student_id) AS num_students_with_detention FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id = T2.student_id JOIN Behaviour_Monitoring AS T3 ON T1.student_id = T3.student_id JOIN Classes AS T4 ON T1.student_id = T4.student_id JOIN Students_Addresses AS T5 ON T1.student_id = T5.student_id JOIN Addresses AS T6 ON T5.address_id = T6.address_id JOIN Ref_Event_Types AS T7 ON T1.student_id = T7.student_id JOIN Ref_Detention_Type AS T8 ON T1.student_id = T8.student_id JOIN Ref_Achievement_Type AS T9 ON T1.student_id = T9.student_id WHERE T1.student_id IN ( SELECT T2.student_id FROM Transcripts AS T2 JOIN Behaviour_Monitoring AS T3 ON T2.student_id = T3.student_id WHERE T3.detention_type_code = 'On break' ) GROUP BY T1.student_id HAVING COUNT(DISTINCT T2.student_id) > 1;",
    "exec_result": 0
  },
  {
    "idx": 506,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) FROM Detention",
    "pred": "SELECT COUNT(*) FROM Students WHERE student_id IN ( SELECT student_id FROM Students_Addresses WHERE address_type_code = 'Home' )",
    "exec_result": 0
  },
  {
    "idx": 507,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 508,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 509,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 510,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id",
    "pred": "SELECT T1.bio_data FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Addresses AS T3 ON T2.address_id = T3.address_id JOIN Detention AS T4 ON T3.address_type_code = T4.address_type_code WHERE T4.detention_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 511,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )",
    "pred": "SELECT T2.date_from, T2.date_to FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Transcripts AS T3 ON T1.student_id = T3.student_id WHERE T3.student_id IN ( SELECT T1.student_id FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id = T2.student_id JOIN Transcripts AS T3 ON T1.student_id = T3.student_id GROUP BY T1.student_id HAVING COUNT(T3.student_id) = 2 )",
    "exec_result": 0
  },
  {
    "idx": 512,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 513,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start FROM Detention",
    "pred": "SELECT T1.student_id FROM Students AS T1 JOIN Student_Details AS T2 ON T1.student_id = T2.student_id JOIN Behaviour_Monitoring AS T3 ON T2.student_id = T3.student_id JOIN Addresses AS T4 ON T2.student_id = T4.student_id JOIN Ref_Event_Types AS T5 ON T2.student_id = T5.student_id JOIN Ref_Achievement_Type AS T6 ON T2.student_id = T6.student_id JOIN Ref_Address_Types AS T7 ON T2.student_id = T7.student_id JOIN Ref_Detention_Type AS T8 ON T2.student_id = T8.student_id JOIN Student_Events AS T9 ON T2.student_id = T9.student_id JOIN Teachers AS T10 ON T2.student_id = T10.teacher_id JOIN Student_Loans AS T11 ON T2.student_id = T11.student_id JOIN Classes AS T12 ON T2.student_id = T12.student_id JOIN Students_Addresses AS T13 ON T2.student_id = T13.student_id JOIN Detention AS T14 ON T2.student_id = T14.student_id WHERE T1.student_id = T3.student_id;",
    "exec_result": 0
  },
  {
    "idx": 514,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start FROM Detention",
    "pred": "-- Verify the new SQL query against the database SELECT T1.student_address_id, T1.address_id, T1.student_id, T1.datetime_detention_start FROM Students_Addresses AS T1 JOIN Detention AS T2 ON T1.student_address_id = T2.student_address_id WHERE T2.detention_type_code = 'On break';",
    "exec_result": 0
  },
  {
    "idx": 515,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Author",
    "pred": "SELECT DISTINCT T1.Name FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor = T2.Author ORDER BY T2.SalePrice DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 516,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Author",
    "pred": "SELECT DISTINCT Name FROM Author",
    "exec_result": 1
  },
  {
    "idx": 517,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client",
    "pred": "SELECT DISTINCT Client.Name, Client.Address FROM Client;",
    "exec_result": 1
  },
  {
    "idx": 518,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client",
    "pred": "SELECT DISTINCT Client.Name, Client.Address FROM Client;",
    "exec_result": 1
  },
  {
    "idx": 519,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title ,  isbn ,  SalePrice FROM Book",
    "pred": "SELECT Title, ISBN, SalePrice FROM Book",
    "exec_result": 1
  },
  {
    "idx": 520,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title ,  isbn ,  SalePrice FROM Book",
    "pred": "SELECT Title, ISBN, SalePrice FROM Book;",
    "exec_result": 1
  },
  {
    "idx": 521,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 522,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book",
    "pred": "SELECT COUNT(*) FROM Author_Book",
    "exec_result": 1
  },
  {
    "idx": 523,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 524,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT COUNT(DISTINCT Author.idAuthor) AS numAuthors FROM Author;",
    "exec_result": 1
  },
  {
    "idx": 525,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Client",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 526,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Client",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 527,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client ORDER BY name",
    "pred": "SELECT Name, Address FROM Client ORDER BY Name;",
    "exec_result": 1
  },
  {
    "idx": 528,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client ORDER BY name",
    "pred": "SELECT DISTINCT T1.Name, T1.Address FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient ORDER BY T1.Name;",
    "exec_result": 0
  },
  {
    "idx": 529,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn",
    "pred": "SELECT Title, Name FROM Book",
    "exec_result": 0
  },
  {
    "idx": 530,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn",
    "pred": "SELECT T2.Title, T1.Name FROM Author AS T1 JOIN Book AS T2 ON T1.ISBN = T2.ISBN JOIN Author_Book AS T3 ON T1.ISBN = T3.ISBN JOIN Books_Order AS T4 ON T4.ISBN = T2.ISBN JOIN Orders AS T5 ON T4.IdOrder = T5.IdOrder WHERE T3.ISBN IS NOT NULL ORDER BY T1.Name ASC;",
    "exec_result": 0
  },
  {
    "idx": 531,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT Orders.IdOrder, Orders.DateOrder FROM Orders JOIN Author ON Orders.IdAuthor = Author.idAuthor JOIN Book ON Orders.ISBN = Book.ISBN WHERE Author.Name = 'Jane Austin' ORDER BY Orders.DateOrder;",
    "exec_result": 0
  },
  {
    "idx": 532,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Author ON Orders.Author = Author.idAuthor JOIN Book ON Orders.ISBN = Book.ISBN JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Client ON Author_Book.Author = Client.IdClient WHERE Client.Name IS NOT NULL ORDER BY Orders.DateOrder;",
    "exec_result": 0
  },
  {
    "idx": 533,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor",
    "pred": "SELECT DISTINCT T1.Name, COUNT(T2.ISBN) AS BookCount FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor = T2.idAuthor JOIN Books_Order AS T3 ON T3.ISBN = T1.ISBN GROUP BY T1.idAuthor ORDER BY BookCount DESC;",
    "exec_result": 0
  },
  {
    "idx": 534,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor",
    "pred": "SELECT DISTINCT T1.Name, COUNT(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.IdAuthor = T2.Author JOIN Books_Order AS T3 ON T3.ISBN = T2.ISBN GROUP BY T1.IdAuthor",
    "exec_result": 0
  },
  {
    "idx": 535,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT DISTINCT B.ISBN, COUNT(*) AS OrderCount FROM Author AS A JOIN Author_Book AS AB ON A.idAuthor = AB.idAuthor JOIN Book AS B ON A.idAuthor = B.idAuthor JOIN Books_Order AS BO ON B.ISBN = BO.ISBN GROUP BY B.ISBN ORDER BY OrderCount DESC;",
    "exec_result": 0
  },
  {
    "idx": 536,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT TB3.ISBN AS BookISBN, COUNT(Orders.IdOrder) AS OrderCount FROM Author_Book AS TB1 JOIN Author AS TB2 ON TB1.Author = TB2.idAuthor JOIN Book AS TB3 ON TB1.ISBN = TB3.ISBN JOIN Orders AS TB4 ON TB4.ISBN = TB3.ISBN GROUP BY TB3.ISBN",
    "exec_result": 0
  },
  {
    "idx": 537,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT DISTINCT T1.ISBN, SUM(T2.amount) AS TotalAmount FROM Author AS T1 JOIN Book AS T2 ON T1.ISBN = T2.ISBN JOIN Books_Order AS T3 ON T3.ISBN = T2.ISBN GROUP BY T1.ISBN ORDER BY TotalAmount DESC;",
    "exec_result": 0
  },
  {
    "idx": 538,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT DISTINCT T1.ISBN, SUM(T2.amount) AS TotalAmount FROM Author AS T1 JOIN Book AS T2 ON T1.ISBN = T2.ISBN JOIN Books_Order AS T3 ON T3.ISBN = T2.ISBN GROUP BY T1.ISBN ORDER BY TotalAmount DESC;",
    "exec_result": 0
  },
  {
    "idx": 539,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Title FROM Book WHERE ISBN IN (SELECT ISBN FROM Books_Order WHERE amount = (SELECT MAX(amount) FROM Books_Order))",
    "exec_result": 1
  },
  {
    "idx": 540,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Title FROM Book WHERE ISBN IN (SELECT ISBN FROM Books_Order WHERE IdOrder IN (SELECT IdOrder FROM Books_Order WHERE ISBN IN (SELECT ISBN FROM Book WHERE ISBN IN (SELECT ISBN FROM Author_Book WHERE Author = Book.Author ORDER BY Name DESC LIMIT 1)))) ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 541,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1",
    "pred": "SELECT T2.Title, T3.PurchasePrice FROM Author AS T1 JOIN Book AS T2 ON T1.idAuthor = T2.Author JOIN Books_Order AS T3 ON T2.ISBN = T3.ISBN GROUP BY T2.ISBN ORDER BY SUM(T3.amount) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1",
    "pred": "SELECT Title, PurchasePrice FROM Book WHERE ISBN = (SELECT ISBN FROM Books_Order WHERE amount = (SELECT MAX(amount) FROM Books_Order));",
    "exec_result": 1
  },
  {
    "idx": 543,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT Title FROM Book WHERE ISBN IN (SELECT ISBN FROM Books_Order WHERE IdOrder IN (SELECT IdOrder FROM Author_Book WHERE Author = 1))",
    "exec_result": 0
  },
  {
    "idx": 544,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT DISTINCT Title FROM Book ORDER BY IdOrder DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 545,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient GROUP BY T1.IdClient HAVING COUNT(*) > 0",
    "exec_result": 0
  },
  {
    "idx": 546,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient WHERE Orders.DateExped IS NULL",
    "exec_result": 1
  },
  {
    "idx": 547,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient",
    "pred": "SELECT DISTINCT Client.Name, COUNT(Orders.IdOrder) FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name",
    "exec_result": 1
  },
  {
    "idx": 548,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient",
    "pred": "SELECT DISTINCT T1.Name, COUNT(T2.IdOrder) FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient GROUP BY T1.Name",
    "exec_result": 1
  },
  {
    "idx": 549,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient GROUP BY T1.IdClient ORDER BY COUNT(T2.IdOrder) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 550,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient GROUP BY T1.IdClient ORDER BY COUNT(T2.IdOrder) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 551,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient",
    "pred": "SELECT C.Name, SUM(O.amount) FROM Client AS C JOIN Orders AS O ON C.IdClient = O.IdClient JOIN Author AS A ON C.idAuthor = A.idAuthor JOIN Book AS B ON A.idBook = B.idBook JOIN Author_Book AS AB ON B.idAuthor = AB.idAuthor JOIN Books_Order AS BO ON B.idBook = BO.idBook GROUP BY C.IdClient",
    "exec_result": 0
  },
  {
    "idx": 552,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient",
    "pred": "SELECT DISTINCT C.Name, SUM(O.amount) AS TotalAmount FROM Client AS C JOIN Orders AS O ON C.IdClient = O.IdClient JOIN Author AS A ON O.Author = A.IdAuthor JOIN Book AS B ON A.IdAuthor = B.Author GROUP BY C.IdClient ORDER BY TotalAmount DESC;",
    "exec_result": 0
  },
  {
    "idx": 553,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Books_Order AS T2 ON T1.IdClient = T2.IdClient GROUP BY T1.IdClient ORDER BY SUM(T2.amount) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 554,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient JOIN Books_Order AS T3 ON T2.IdOrder = T3.IdOrder JOIN Book AS T4 ON T3.ISBN = T4.ISBN JOIN Author_Book AS T5 ON T4.ISBN = T5.ISBN WHERE T5.Author = T1.Name ORDER BY MIN(T3.amount) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT Title FROM Book WHERE ISBN NOT IN (SELECT ISBN FROM Books_Order)",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT Title FROM Book WHERE ISBN NOT IN (SELECT ISBN FROM Books_Order)",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT Client.Name FROM Client WHERE Client.IdClient NOT IN (SELECT Orders.IdClient FROM Orders)",
    "exec_result": 1
  },
  {
    "idx": 558,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient WHERE T2.IdOrder IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 559,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice) ,  min(saleprice) FROM Book",
    "pred": "SELECT MAX(Book.SalePrice), MIN(Book.SalePrice) FROM Book;",
    "exec_result": 1
  },
  {
    "idx": 560,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice) ,  min(saleprice) FROM Book",
    "pred": "SELECT MAX(Book.SalePrice), MIN(Book.SalePrice) FROM Book",
    "exec_result": 1
  },
  {
    "idx": 561,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book",
    "pred": "SELECT AVG(Book.PurchasePrice), AVG(Book.SalePrice) FROM Book",
    "exec_result": 1
  },
  {
    "idx": 562,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book",
    "pred": "SELECT AVG(T1.SalePrice), AVG(T1.PurchasePrice) FROM Author AS T1 JOIN Book AS T2 ON T1.ISBN = T2.ISBN GROUP BY T1.ISBN",
    "exec_result": 0
  },
  {
    "idx": 563,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice - purchaseprice) FROM Book",
    "pred": "SELECT MAX(Book.SalePrice - Book.PurchasePrice) AS max_difference FROM Book;",
    "exec_result": 1
  },
  {
    "idx": 564,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice - purchaseprice) FROM Book",
    "pred": "SELECT MAX(SalePrice - PurchasePrice) AS difference FROM Book;",
    "exec_result": 1
  },
  {
    "idx": 565,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)",
    "pred": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 566,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)",
    "pred": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 567,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by saleprice asc limit 1",
    "pred": "SELECT Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 568,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by saleprice asc limit 1",
    "pred": "SELECT T2.Title FROM Author AS T1 INNER JOIN Author_Book AS T2 ON T1.idAuthor = T2.author INNER JOIN Book AS T3 ON T3.ISBN = T2.ISBN WHERE T3.salePrice = (SELECT MIN(T3.salePrice) FROM Book)",
    "exec_result": 0
  },
  {
    "idx": 569,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by purchaseprice  desc limit 1",
    "pred": "SELECT Title FROM Book WHERE PurchasePrice = (SELECT MAX(PurchasePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 570,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by purchaseprice  desc limit 1",
    "pred": "SELECT Title FROM Book WHERE PurchasePrice = (SELECT MAX(PurchasePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 571,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"",
    "pred": "SELECT AVG(Book.SalePrice) FROM Author AS Author_Book_Author JOIN Author_Book AS Book ON Author_Book_Author.Author = Book.Author JOIN Book ON Book.ISBN = Book.ISBN WHERE Author_Book_Author.Name = 'George Orwell';",
    "exec_result": 0
  },
  {
    "idx": 572,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"",
    "pred": "SELECT AVG(Book.SalePrice) FROM Author AS BookAuthor JOIN Author_Book AS BookAuthorBook ON BookAuthor.BookID = BookAuthorBook.Author JOIN Books_Order AS BookOrder ON BookAuthorBook.ISBN = BookOrder.ISBN JOIN Book AS Book ON BookOrder.IdOrder = Book.IdOrder JOIN Author_Book AS AuthorBook ON BookAuthor.Author = Author.BookID WHERE Author.Name = 'George Orwell';",
    "exec_result": 0
  },
  {
    "idx": 573,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"",
    "pred": "SELECT T3.SalePrice FROM Author AS T1 INNER JOIN Author_Book AS T2 ON T1.idAuthor = T2.author_id INNER JOIN Book AS T3 ON T3.ISBN = T2.ISBN WHERE T1.Name = 'Plato'",
    "exec_result": 0
  },
  {
    "idx": 574,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"",
    "pred": "SELECT T2.sale_price FROM Author AS T1 INNER JOIN Book AS T2 ON T1.idAuthor = T2.author INNER JOIN Author_Book AS T3 ON T1.idAuthor = T3.author INNER JOIN Books_Order AS T4 ON T3.ISBN = T4.ISBN WHERE T1.Name = 'Plato';",
    "exec_result": 0
  },
  {
    "idx": 575,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1",
    "pred": "SELECT Title FROM Book WHERE Author = (SELECT Author FROM Author WHERE Name = 'George Orwell') ORDER BY SalePrice ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 576,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1",
    "pred": "SELECT Title FROM Book WHERE Author = (SELECT Author FROM Author WHERE Name = 'George Orwell') ORDER BY SalePrice ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 577,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)",
    "pred": "SELECT T2.Title FROM Author AS T1 JOIN Book AS T2 ON T1.idAuthor = T2.Author WHERE T1.Name = 'Plato' GROUP BY T1.Name ORDER BY AVG(T2.SalePrice) ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 578,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)",
    "pred": "SELECT T3.Title FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor = T2.author JOIN Book AS T3 ON T3.ISBN = T2.ISBN WHERE T3.SalePrice < (SELECT MIN(T3.SalePrice) FROM Book) GROUP BY T3.ISBN HAVING COUNT(T3.ISBN) = 1;",
    "exec_result": 0
  },
  {
    "idx": 579,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 581,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"",
    "pred": "SELECT Title FROM Book WHERE Author = (SELECT Name FROM Author WHERE Name LIKE 'Plato')",
    "exec_result": 0
  },
  {
    "idx": 582,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"",
    "pred": "SELECT Title FROM Book WHERE Author = (SELECT idAuthor FROM Author WHERE Name = 'Plato')",
    "exec_result": 0
  },
  {
    "idx": 583,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT COUNT(*) FROM Orders WHERE IdOrder IN (SELECT IdOrder FROM Author_Book WHERE ISBN = (SELECT ISBN FROM Book WHERE Title = 'Pride and Prejudice'))",
    "exec_result": 0
  },
  {
    "idx": 584,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT COUNT(*) FROM Orders WHERE IdOrder IN (SELECT IdOrder FROM Author_Book WHERE ISBN = (SELECT ISBN FROM Book WHERE Title = 'Pride and Prejudice'))",
    "exec_result": 0
  },
  {
    "idx": 585,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"",
    "pred": "SELECT DISTINCT IdOrder FROM Orders WHERE Title IN ('Pride and Prejudice', 'The Little Prince')",
    "exec_result": 0
  },
  {
    "idx": 586,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"",
    "pred": "SELECT DISTINCT O.IdOrder FROM Orders O JOIN Author A ON O.Author = A.idAuthor JOIN Book B ON O.ISBN = B.ISBN WHERE B.Title IN ('Pride and Prejudice', 'The Little Prince')",
    "exec_result": 0
  },
  {
    "idx": 587,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT DISTINCT B.ISBN FROM Author AS A JOIN Book AS B ON A.Author = B.Author JOIN Author_Book AS AB ON A.Author = AB.Author JOIN Books_Order AS BO ON AB.ISBN = BO.ISBN JOIN Orders AS O ON BO.IdOrder = O.IdOrder JOIN Client AS C ON O.IdClient = C.IdClient WHERE C.Name = 'Peter Doe' OR C.Name = 'James Smith' GROUP BY B.ISBN HAVING COUNT(*) > 1;",
    "exec_result": 0
  },
  {
    "idx": 588,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT DISTINCT B.ISBN FROM Author AS A JOIN Book AS B ON A.ISBN = B.ISBN JOIN Author_Book AS AB ON A.ISBN = AB.Author JOIN Orders AS O ON AB.ISBN = O.ISBN JOIN Client AS C ON O.IdClient = C.IdClient WHERE C.Name IN ('Peter Doe', 'James Smith') ORDER BY B.SalePrice DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 589,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT T2.Title FROM Author AS T1 INNER JOIN Book AS T2 ON T1.ISBN = T2.ISBN WHERE T1.Name = 'Peter Doe' AND T2.Author = 'James Smith' AND T1.Name != 'James Smith' AND T2.SalePrice IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 590,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT T2.Title FROM Orders AS T2 JOIN Author AS T3 ON T2.IdAuthor = T3.IdAuthor WHERE T3.Name = 'Peter Doe' AND T2.IdOrder NOT IN (SELECT T2.IdOrder FROM Orders AS T2 JOIN Author AS T3 ON T2.IdAuthor = T3.IdAuthor WHERE T3.Name = 'James Smith')",
    "exec_result": 0
  },
  {
    "idx": 591,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT DISTINCT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Author ON Author.Book.Author = Orders.Book JOIN Author_Book ON Author.Book.ISBN = Author_Book.ISBN JOIN Book ON Author_Book.ISBN = Book.ISBN JOIN Author ON Book.Author = Author WHERE Book.Title = 'Pride and Prejudice' ORDER BY Client.Name ASC",
    "exec_result": 0
  },
  {
    "idx": 592,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT DISTINCT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Author ON Author.Book.Author = Orders.Book.ISBN JOIN Author_Book ON Author_Book.ISBN = Author.Book.ISBN JOIN Book ON Book.ISBN = Author_Book.ISBN WHERE Book.Title = 'Pride and Prejudice';",
    "exec_result": 0
  },
  {
    "idx": 593,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(*) FROM book",
    "pred": "SELECT COUNT(Book_ID) FROM book",
    "exec_result": 1
  },
  {
    "idx": 594,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book ORDER BY Title ASC",
    "pred": "SELECT Title FROM book ORDER BY Title ASC",
    "exec_result": 1
  },
  {
    "idx": 595,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book ORDER BY Pages DESC",
    "pred": "SELECT Title FROM book ORDER BY Pages DESC",
    "exec_result": 1
  },
  {
    "idx": 596,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  Release FROM book",
    "pred": "SELECT Type, Release FROM book",
    "exec_result": 1
  },
  {
    "idx": 597,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT max(Chapters) ,  min(Chapters) FROM book",
    "pred": "SELECT Book.Title, MAX(Chapters) AS Max_Chapters, MIN(Chapters) AS Min_Chapters FROM book GROUP BY Book.Title",
    "exec_result": 0
  },
  {
    "idx": 598,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book WHERE TYPE != \"Poet\"",
    "pred": "SELECT Title FROM book WHERE Type != 'Poet'",
    "exec_result": 1
  },
  {
    "idx": 599,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT avg(Rating) FROM review",
    "pred": "SELECT AVG(Rating) FROM review",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID",
    "pred": "SELECT Title, Rating FROM book WHERE Book_ID IN (SELECT Book_ID FROM review GROUP BY Book_ID HAVING COUNT(*) > 1);",
    "exec_result": 0
  },
  {
    "idx": 601,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Chapters DESC LIMIT 1",
    "pred": "SELECT Rating FROM review WHERE Rank = (SELECT MAX(Rank) FROM review)",
    "exec_result": 0
  },
  {
    "idx": 602,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T2.Rank FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Pages ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 603,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rank LIMIT 1",
    "pred": "SELECT Title FROM book WHERE Rank = (SELECT MIN(Rank) FROM book)",
    "exec_result": 0
  },
  {
    "idx": 604,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT avg(T2.Readers_in_Million) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T1.Type  =  \"Novel\"",
    "pred": "SELECT AVG(Rank) FROM review WHERE Book_ID IN (SELECT Book_ID FROM book WHERE Type = 'Novel')",
    "exec_result": 0
  },
  {
    "idx": 605,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  COUNT(*) FROM book GROUP BY TYPE",
    "pred": "SELECT Type, COUNT(*) FROM book GROUP BY Type",
    "exec_result": 1
  },
  {
    "idx": 606,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Type FROM book GROUP BY Type ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 607,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book GROUP BY TYPE HAVING COUNT(*)  >=  3",
    "pred": "SELECT DISTINCT Type FROM book WHERE Book_ID IN ( SELECT Book_ID FROM ( SELECT Book_ID, COUNT(*) as count FROM review GROUP BY Book_ID HAVING count >= 3 ) AS subquery )",
    "exec_result": 0
  },
  {
    "idx": 608,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rating ASC",
    "pred": "SELECT Title FROM book ORDER BY Rating ASC",
    "exec_result": 0
  },
  {
    "idx": 609,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title ,  T1.audio FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Readers_in_Million DESC",
    "pred": "SELECT Title, Audio FROM book ORDER BY (SELECT COUNT(*) FROM review) DESC",
    "exec_result": 0
  },
  {
    "idx": 610,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)",
    "pred": "SELECT COUNT(DISTINCT book_id) FROM review",
    "exec_result": 0
  },
  {
    "idx": 611,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book WHERE Chapters  >  75 INTERSECT SELECT TYPE FROM book WHERE Chapters  <  50",
    "pred": "SELECT T1.Type FROM book AS T1 JOIN ( SELECT Book_ID, COUNT(*) AS chapters_count FROM review GROUP BY Book_ID HAVING COUNT(*) > 75 ) AS T2 ON T1.Book_ID = T2.Book_ID JOIN ( SELECT Book_ID, COUNT(*) AS chapters_count FROM review GROUP BY Book_ID HAVING COUNT(*) < 50 ) AS T3 ON T1.Book_ID = T3.Book_ID WHERE T2.chapters_count > T3.chapters_count;",
    "exec_result": 0
  },
  {
    "idx": 612,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(DISTINCT TYPE) FROM book",
    "pred": "SELECT COUNT(DISTINCT Type) FROM book",
    "exec_result": 1
  },
  {
    "idx": 613,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  title FROM book EXCEPT SELECT T1.type ,  T1.title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID;",
    "pred": "SELECT T1.Type, T1.Title FROM book AS T1 EXCEPT SELECT T2.Type, T2.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID = T2.Book_ID",
    "exec_result": 0
  },
  {
    "idx": 614,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT count(*) FROM customer",
    "pred": "SELECT COUNT(DISTINCT customer_id) AS Total_Customers FROM customer;",
    "exec_result": 1
  },
  {
    "idx": 615,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT count(*) FROM customer",
    "pred": "SELECT COUNT(*) FROM customer;",
    "exec_result": 1
  },
  {
    "idx": 616,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC",
    "pred": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;",
    "exec_result": 1
  },
  {
    "idx": 617,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC",
    "pred": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;",
    "exec_result": 1
  },
  {
    "idx": 618,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  Card_Credit FROM customer",
    "pred": "SELECT Nationality, Card_Credit FROM customer",
    "exec_result": 1
  },
  {
    "idx": 619,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  Card_Credit FROM customer",
    "pred": "SELECT T1.Nationality, T1.Card_Credit FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID",
    "exec_result": 0
  },
  {
    "idx": 620,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"",
    "pred": "SELECT DISTINCT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Nationality IN ('England', 'Australia')",
    "exec_result": 0
  },
  {
    "idx": 621,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"",
    "pred": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Nationality IN ('England', 'Australia')",
    "exec_result": 0
  },
  {
    "idx": 622,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1",
    "pred": "SELECT AVG(`Card_Credit`) FROM customer WHERE Level_of_Membership = 1",
    "exec_result": 0
  },
  {
    "idx": 623,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1",
    "pred": "SELECT AVG(co.quantity) FROM customer AS c JOIN customer_order AS co ON c.Customer_ID = co.Customer_ID JOIN branch AS b ON co.Branch_ID = b.Branch_ID WHERE c.Level_of_Membership = 2;",
    "exec_result": 0
  },
  {
    "idx": 624,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1",
    "pred": "SELECT Card_Credit FROM customer WHERE Level_of_Membership = (SELECT MAX(Level_of_Membership) FROM customer)",
    "exec_result": 1
  },
  {
    "idx": 625,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1",
    "pred": "SELECT c.Name, c.Card_Credit FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID JOIN branch b ON co.Branch_ID = b.Branch_ID WHERE c.Level_of_Membership = (SELECT MIN(Level_of_Membership) FROM customer) ORDER BY c.Card_Credit DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 626,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality",
    "pred": "SELECT T1.Nationality, COUNT(*) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Nationality",
    "exec_result": 0
  },
  {
    "idx": 627,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(Customer_ID) FROM customer GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 628,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Nationality, COUNT(*) AS Frequency FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Nationality ORDER BY Frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 629,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Nationality FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 630,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75",
    "pred": "SELECT DISTINCT T1.Nationality FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Card_Credit < 50 AND T1.Card_Credit > 75;",
    "exec_result": 0
  },
  {
    "idx": 631,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75",
    "pred": "SELECT T1.Nationality FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Card_Credit > 50 AND T1.Card_Credit < 75",
    "exec_result": 0
  },
  {
    "idx": 632,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID",
    "pred": "SELECT c.Name, d.Dish_Name FROM customer AS c JOIN customer_order AS co ON c.Customer_ID = co.Customer_ID JOIN branch AS b ON co.Branch_ID = b.Branch_ID JOIN dish AS d ON d.Dish_Name = co.Dish_Name;",
    "exec_result": 0
  },
  {
    "idx": 633,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID",
    "pred": "SELECT c.Name, d.Dish_Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID JOIN branch b ON c.Branch_ID = b.Branch_ID JOIN dish d ON co.Dish_Name = d.Dish_Name;",
    "exec_result": 0
  },
  {
    "idx": 634,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC",
    "pred": "SELECT c.Name, d.Dish_Name FROM customer AS c JOIN customer_order AS co ON c.Customer_ID = co.Customer_ID JOIN branch AS b ON co.Branch_ID = b.Branch_ID WHERE b.Branch_ID = (SELECT Branch_ID FROM customer ORDER BY Quantity DESC LIMIT 1) ORDER BY Quantity DESC;",
    "exec_result": 0
  },
  {
    "idx": 635,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC",
    "pred": "SELECT c.Name, c.Dish_Name FROM customer AS c JOIN customer_order AS co ON c.Customer_ID = co.Customer_ID JOIN branch AS b ON c.Branch_ID = b.Branch_ID WHERE b.Branch_ID = (SELECT Branch_ID FROM customer WHERE Name = 'Sid Barnes') ORDER BY co.Quantity DESC;",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name",
    "pred": "SELECT T1.Name, SUM(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID",
    "exec_result": 1
  },
  {
    "idx": 637,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "select t1.name ,  sum(t2.quantity) from customer as t1 join customer_order as t2 on t1.customer_id  =  t2.customer_id group by t1.name",
    "pred": "SELECT c.Name, SUM(co.Quantity) AS Total_Dishes FROM customer AS c JOIN customer_order AS co ON c.Customer_ID = co.Customer_ID GROUP BY c.Customer_ID",
    "exec_result": 1
  },
  {
    "idx": 638,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1",
    "pred": "SELECT Name FROM customer WHERE Customer_ID IN ( SELECT Customer_ID FROM customer_order WHERE Quantity > 1 )",
    "exec_result": 1
  },
  {
    "idx": 639,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1",
    "pred": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Customer_ID HAVING SUM(T2.Quantity) > 1",
    "exec_result": 1
  },
  {
    "idx": 640,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT DISTINCT Manager FROM branch",
    "pred": "SELECT DISTINCT Manager FROM branch",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT DISTINCT Manager FROM branch",
    "pred": "SELECT DISTINCT manager FROM branch",
    "exec_result": 1
  },
  {
    "idx": 642,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)",
    "pred": "SELECT DISTINCT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Quantity = 0",
    "exec_result": 0
  },
  {
    "idx": 643,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)",
    "pred": "SELECT DISTINCT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T2.Branch_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 644,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT count(*) FROM member",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 645,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member ORDER BY Age ASC",
    "pred": "SELECT Name FROM member ORDER BY Age ASC;",
    "exec_result": 1
  },
  {
    "idx": 646,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name ,  Nationality FROM member",
    "pred": "SELECT Name, nationality FROM member",
    "exec_result": 1
  },
  {
    "idx": 647,
    "db_id": "club_leader",
    "question": "",
    "gold": "select name from member where nationality != \"england\"",
    "pred": "SELECT DISTINCT member.name FROM member JOIN club ON member.Member_ID = club.Member_ID JOIN club_leader ON club_leader.Member_ID = member.Member_ID WHERE club_leader.Year_Join = (SELECT MIN(year_join) FROM club_leader) AND club_leader.Nationality != 'England';",
    "exec_result": 0
  },
  {
    "idx": 648,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member WHERE Age  =  19 OR Age  =  20",
    "pred": "SELECT Name FROM member WHERE Age IN (19, 20)",
    "exec_result": 1
  },
  {
    "idx": 649,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member ORDER BY Age DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 650,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality",
    "pred": "SELECT nationality, COUNT(*) FROM member GROUP BY nationality",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT nationality, COUNT(*) AS count FROM member GROUP BY nationality ORDER BY count DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 652,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.Nationality FROM member AS T1 JOIN club AS T2 ON T1.Member_ID = T2.Member_ID JOIN club_leader AS T3 ON T2.Club_ID = T3.Club_ID WHERE T3.Year_Join IS NOT NULL AND T3.Club_ID = T2.Club_ID AND COUNT(T1.Member_ID) >= 2",
    "exec_result": 0
  },
  {
    "idx": 653,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID",
    "pred": "SELECT T2.Club_Name, T1.Club_ID FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID JOIN member AS T3 ON T2.Member_ID = T3.Member_ID",
    "exec_result": 0
  },
  {
    "idx": 654,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Overall_Ranking  <  100",
    "pred": "SELECT T1.Club_Name FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Year_Join > 100",
    "exec_result": 0
  },
  {
    "idx": 655,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T1.Year_Join  <  2018",
    "pred": "SELECT T2.Club_Name, T1.Year_Join FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Year_Join < 2018;",
    "exec_result": 0
  },
  {
    "idx": 656,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Club_Name  =  \"Houston\"",
    "pred": "SELECT T1.Team_Leader FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Club_Name = 'Houston'",
    "exec_result": 0
  },
  {
    "idx": 657,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader)",
    "pred": "SELECT DISTINCT member.name FROM member JOIN club_leader ON member.Member_ID = club_leader.Member_ID WHERE club_leader.Club_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 658,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality FROM member WHERE Age  >  22 INTERSECT SELECT Nationality FROM member WHERE Age  <  19",
    "pred": "SELECT T1.Nationality FROM member AS T1 JOIN club AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Age > 22 AND T1.Age < 19 AND T2.Team_Leader = 'No award given';",
    "exec_result": 0
  },
  {
    "idx": 659,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM club_leader AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id",
    "pred": "SELECT AVG(Age) FROM club_leader",
    "exec_result": 0
  },
  {
    "idx": 660,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT club_name FROM club WHERE club_name LIKE '%state%'",
    "pred": "SELECT T1.Club_Name FROM club AS T1 JOIN club_leader AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Year_Join LIKE '%state%'",
    "exec_result": 0
  },
  {
    "idx": 661,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Subset_Name FROM Collection_Subsets;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 662,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Subset_Name FROM Collection_Subsets;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 663,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";",
    "pred": "SELECT T1.Collection_Name, T2.Collection_Description FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = 'Top collection'",
    "exec_result": 0
  },
  {
    "idx": 664,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 665,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Name FROM Document_Subsets;",
    "pred": "SELECT Document_Subset_Name FROM Document_Subsets",
    "exec_result": 1
  },
  {
    "idx": 666,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Name FROM Document_Subsets;",
    "pred": "SELECT DISTINCT Document_Subset_Name FROM Document_Subsets",
    "exec_result": 1
  },
  {
    "idx": 667,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT T1.`Document_Subset_Name`, T2.`Description` FROM Document_Subsets AS T1 JOIN Collection_Subsets AS T2 ON T1.`Collection_Subset_ID` = T2.`Collection_Subset_ID` JOIN Documents_in_Collections AS T3 ON T3.`Document_Object_ID` = T1.`Document_Object_ID` JOIN Documents_in_Collections AS T4 ON T4.`Document_Object_ID` = T3.`Document_Object_ID` JOIN Collection_Subset_Members AS T5 ON T5.`Collection_ID` = T4.`Collection_ID` JOIN Collections AS T6 ON T6.`Collection_ID` = T5.`Collection_ID` JOIN Document_Subsets AS T7 ON T7.`Document_Subset_ID` = T1.`Document_Subset_ID` WHERE T7.`Document_Subset_Name` = 'Best for 2000'",
    "exec_result": 0
  },
  {
    "idx": 668,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT Document_Subset_Name FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000'",
    "exec_result": 0
  },
  {
    "idx": 669,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects;",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections;",
    "exec_result": 0
  },
  {
    "idx": 670,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 671,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Owner = 'Marlin' GROUP BY Document_Object_ID;",
    "exec_result": 0
  },
  {
    "idx": 672,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 673,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'",
    "pred": "SELECT DISTINCT Owner FROM Collection_Subsets WHERE Collection_Name = 'Braeden Collection'",
    "exec_result": 0
  },
  {
    "idx": 674,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'",
    "pred": "SELECT T1.Owner FROM Document_Objects AS T1 INNER JOIN Documents_in_Collections AS T2 ON T1.Document_Object_ID = T2.Document_Object_ID INNER JOIN Collections AS T3 ON T2.Collection_ID = T3.Collection_ID WHERE T3.Collection_Name = 'Braeden Collection' AND T1.Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Collection_Subsets WHERE Collection_Name = 'Braeden Collection') AND Related_Document_Object_ID IS NOT NULL)",
    "exec_result": 0
  },
  {
    "idx": 675,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 676,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'",
    "pred": "SELECT Owner FROM Document_Objects WHERE Owner IN ('Ransom', 'Marlin', 'Braeden')",
    "exec_result": 0
  },
  {
    "idx": 677,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID",
    "pred": "SELECT DISTINCT T1.Collection_Description FROM Documents_in_Collections AS T1 JOIN Collection_Subsets AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Collection_Subsets_Members AS T3 ON T2.Collection_Subset_ID = T3.Collection_Subset_ID JOIN Documents_in_Collections AS T4 ON T3.Document_Object_ID = T4.Document_Object_ID JOIN Collection_Subsets AS T5 ON T4.Collection_ID = T5.Collection_ID WHERE T5.Collection_Description = (SELECT MIN(Collection_Description) FROM Collection_Subsets)",
    "exec_result": 0
  },
  {
    "idx": 678,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 679,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 680,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";",
    "pred": "SELECT COUNT(DISTINCT Owner) FROM Documents_in_Collections WHERE Owner = 'Marlin'",
    "exec_result": 0
  },
  {
    "idx": 681,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID NOT IN (SELECT Collection_ID FROM Collection_Subset_Members WHERE Related_Collection_ID IN (SELECT Collection_ID FROM Collection_Subset_Members WHERE Related_Collection_ID = Documents_in_Collections.Collection_ID))",
    "exec_result": 0
  },
  {
    "idx": 682,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID NOT IN (SELECT Collection_ID FROM Collection_Subset_Members)",
    "exec_result": 0
  },
  {
    "idx": 683,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 684,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 685,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections;",
    "pred": "SELECT DISTINCT T1.Collection_Name FROM Collection_Subsets AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T2.Collection_ID = T3.Collection_ID",
    "exec_result": 0
  },
  {
    "idx": 686,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 687,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 688,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";",
    "pred": "SELECT T2.Collection_Description FROM Collection_Subsets AS T1 INNER JOIN Document_Subsets AS T2 ON T1.Collection_Subset_ID = T2.Collection_Subset_ID WHERE T1.Collection_Description = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 689,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 690,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";",
    "pred": "SELECT DS2.Collection_Name FROM Documents_in_Collections AS DI JOIN Document_Objects AS DO ON DI.Document_Object_ID = DO.Document_Object_ID JOIN Document_Subsets AS DS ON DO.Document_Subset_ID = DS.Document_Subset_ID JOIN Collection_Subsets AS CS ON DS.Collection_ID = CS.Collection_ID JOIN Document_Subsets_Members AS DSM ON CS.Collection_Subset_ID = DSM.Document_Subset_ID JOIN Collection_Subsets_Members AS CMS ON DSM.Collection_ID = CMS.Collection_ID JOIN Document_Subsets AS DS2 ON CMS.Document_Subset_ID = DS2.Document_Subset_ID WHERE DI.Collection_ID = 'Nice' ORDER BY DS2.Collection_Name;",
    "exec_result": 0
  },
  {
    "idx": 691,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;",
    "pred": "SELECT C.Collection_Name FROM Collection_Subsets AS CS JOIN Collection_Subset_Members AS CM ON CS.Collection_ID = CM.Collection_ID JOIN Collection_Subsets AS CSM ON CSM.Collection_ID = CM.Collection_ID WHERE CM.Collection_ID IS NULL ORDER BY CSM.Collection_ID;",
    "exec_result": 0
  },
  {
    "idx": 692,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;",
    "pred": "SELECT DISTINCT T1.Collection_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T2.Collection_ID = T3.Collection_ID WHERE T3.Collection_ID != T1.Collection_ID",
    "exec_result": 0
  },
  {
    "idx": 693,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Document_Object_ID IN ( SELECT Related_Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2007' ) )",
    "exec_result": 0
  },
  {
    "idx": 694,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Document_Object_ID IN (SELECT Related_Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2007'))",
    "exec_result": 0
  },
  {
    "idx": 695,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Collection_ID) FROM Collections WHERE Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 696,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Collection_ID) FROM Collection_Subset_Members WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 1
  },
  {
    "idx": 697,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID IN ( SELECT Collection_ID FROM Collection_Subsets WHERE Owner = 'Ransom' )",
    "exec_result": 0
  },
  {
    "idx": 698,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 699,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;",
    "pred": "SELECT Collection_Subset_ID, Collection_Subset_Name, COUNT(DISTINCT Document_Object_ID) AS Collection_Count FROM Document_Subsets JOIN Collection_Subsets ON Document_Subsets.Document_Subset_ID = Collection_Subsets.Document_Subset_ID GROUP BY Collection_Subset_ID",
    "exec_result": 0
  },
  {
    "idx": 700,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;",
    "pred": "SELECT Collection_Subset_ID, Collection_Subset_Name, COUNT(DISTINCT Document_Object_ID) FROM Document_Subsets GROUP BY Collection_Subset_ID",
    "exec_result": 0
  },
  {
    "idx": 701,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Document_Object_ID, COUNT(*) FROM Documents_in_Collections GROUP BY Document_Object_ID ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 702,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Document_Object_ID, COUNT(DISTINCT related_document_object_id) AS num_children FROM Documents_in_Collections JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID JOIN Document_Subsets ON Document_Objects.Document_Object_ID = Document_Subsets.Document_Object_ID JOIN Collection_Subsets ON Document_Subsets.Collection_ID = Collection_Subsets.Collection_ID JOIN Collections ON Collection_Subsets.Collection_ID = Collections.Collection_ID GROUP BY Document_Object_ID",
    "exec_result": 0
  },
  {
    "idx": 703,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Document_Object_ID, COUNT(DISTINCT Document_Object_ID) AS Related_Documents FROM Documents_in_Collections GROUP BY Document_Object_ID ORDER BY Related_Documents DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 704,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select document_object_id , count(*) from document_subset_members group by document_object_id order by count(*) asc limit 1;",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 0
  },
  {
    "idx": 705,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select document_object_id , count(*) from document_subset_members group by document_object_id having count(*) between 2 and 4;",
    "pred": "SELECT Document_Object_ID, COUNT(*) FROM Documents_in_Collections GROUP BY Document_Object_ID HAVING COUNT(*) BETWEEN 2 AND 4",
    "exec_result": 0
  },
  {
    "idx": 706,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING count(*) BETWEEN 2 AND 4;",
    "pred": "SELECT Documents_in_Collections.Document_Object_ID, COUNT(DISTINCT Document_Subsets.Document_Subset_ID) FROM Documents_in_Collections JOIN Document_Subsets ON Documents_in_Collections.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collection_Subsets ON Documents_in_Collections.Collection_ID = Collection_Subsets.Collection_ID JOIN Document_Subsets ON Documents_in_Collections.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Documents_in_Collections.Collection_ID IN (SELECT Collection_ID FROM Collection_Subsets WHERE Collection_Subset_Name LIKE 'Best for %') GROUP BY Documents_in_Collections.Document_Object_ID HAVING COUNT(DISTINCT Document_Subsets.Document_Subset_ID) BETWEEN 2 AND 4;",
    "exec_result": 0
  },
  {
    "idx": 707,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 708,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 709,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 710,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 711,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;",
    "pred": "SELECT Document_Subset_ID, Document_Subset_Name, COUNT(DISTINCT Document_Object_ID) AS Document_Count FROM Document_Subsets GROUP BY Document_Subset_ID ORDER BY Document_Count DESC;",
    "exec_result": 0
  },
  {
    "idx": 712,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;",
    "pred": "SELECT Document_Subset_ID, Document_Subset_Name, COUNT(DISTINCT Document_Object_ID) AS Document_Count FROM Document_Subsets GROUP BY Document_Subset_ID",
    "exec_result": 0
  },
  {
    "idx": 713,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;",
    "pred": "SELECT Document_Subset_ID, Document_Subset_Name, COUNT(DISTINCT Document_Object_ID) AS Document_Count FROM Document_Subsets GROUP BY Document_Subset_ID ORDER BY Document_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;",
    "pred": "SELECT Document_Subset_Name, COUNT(DISTINCT Document_Object_ID) AS Document_Count FROM Document_Subsets GROUP BY Document_Subset_Name ORDER BY Document_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 715,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN (SELECT Related_Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000'))",
    "exec_result": 0
  },
  {
    "idx": 716,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best for 2000')",
    "exec_result": 0
  },
  {
    "idx": 717,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T3.Document_Subset_Name ,  T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subset_Members  AS T2 ON T1.Related_Document_Object_ID = T2.Document_Object_ID JOIN Document_Subsets AS T3 ON T2.Document_Subset_ID =  T3.Document_Subset_ID",
    "pred": "SELECT T1.Document_Subset_Name, T1.Document_Object_ID FROM Document_Objects AS T1 JOIN Documents_in_Collections AS T2 ON T1.Document_Object_ID = T2.Document_Object_ID JOIN Collection_Subsets AS T3 ON T2.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T3.Collection_ID = T4.Collection_ID WHERE T4.Collection_Name = 'Best';",
    "exec_result": 0
  },
  {
    "idx": 718,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select distinct t3.document_subset_name ,  t1.document_object_id from document_subset_members as t1 join document_subset_members  as t2 on t1.related_document_object_id = t2.document_object_id join document_subsets as t3 on t2.document_subset_id =  t3.document_subset_id",
    "pred": "SELECT Document_Subset_Name, Document_Subset_ID FROM Document_Subsets",
    "exec_result": 0
  },
  {
    "idx": 719,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.collection_name from collections as t1 join documents_in_collections as t2 on t1.collection_id = t2.collection_id join document_objects as t3 on t2.document_object_id  =  t3.document_object_id where t3.owner  =  'ransom'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 720,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Document_Objects AS T3 ON T2.Document_object_id  =  T3.Document_object_id WHERE T3.owner  =  'Ransom'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 721,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID",
    "pred": "SELECT Collection_ID, COUNT(*) AS Document_Count FROM Documents_in_Collections GROUP BY Collection_ID",
    "exec_result": 0
  },
  {
    "idx": 722,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID",
    "pred": "SELECT Document_Object_ID, COUNT(Collection_ID) AS Collection_Count FROM Documents_in_Collections GROUP BY Document_Object_ID;",
    "exec_result": 1
  },
  {
    "idx": 723,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Document_Object_ID) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 1
  },
  {
    "idx": 724,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 1
  },
  {
    "idx": 725,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 1
  },
  {
    "idx": 726,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Document_Object_ID) FROM Documents_in_Collections JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID JOIN Collection_Subsets ON Documents_in_Collections.Collection_ID = Collection_Subsets.Collection_ID JOIN Collection_Subsets_Members ON Collection_Subsets.Collection_ID = Collection_Subsets_Members.Collection_ID JOIN Document_Subsets ON Collection_Subsets.Collection_ID = Collection_Subsets_Members.Collection_ID JOIN Document_Subsets_Members ON Document_Subsets.Collection_ID = Document_Subsets_Members.Collection_ID JOIN Collections ON Collection_Subsets_Members.Collection_ID = Collections.Collection_ID JOIN Document_Subsets ON Collection_Subsets.Collection_ID = Document_Subsets.Collection_ID JOIN Document_Subsets ON Document_Subsets_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 727,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 728,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 729,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') AND Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Objects WHERE Description = 'Best for 2000')",
    "exec_result": 0
  },
  {
    "idx": 730,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";",
    "pred": "SELECT DISTINCT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' AND Collection_Description = 'Best for 2000') ) UNION SELECT DISTINCT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') )",
    "exec_result": 0
  },
  {
    "idx": 731,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') AND Document_Object_ID NOT IN (SELECT Document_Object_ID FROM Document_Subsets WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000'))",
    "exec_result": 0
  },
  {
    "idx": 732,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"",
    "pred": "SELECT DISTINCT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') AND Document_Object_ID NOT IN (SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000'))",
    "exec_result": 1
  },
  {
    "idx": 733,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') OR Document_Object_ID IN (SELECT Document_Object_ID FROM Documents_in_Collections WHERE Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Objects WHERE Description = 'Best for 2000'))",
    "exec_result": 0
  },
  {
    "idx": 734,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";",
    "pred": "SELECT DISTINCT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best') OR Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Objects WHERE Description = 'Best for 2000')",
    "exec_result": 0
  },
  {
    "idx": 735,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT DISTINCT T1.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subsets AS T2 ON T1.Collection_Subset_ID = T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID = T3.Collection_ID WHERE T3.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 736,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 737,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Collection_ID) FROM Collections WHERE Collection_Name = 'Best';",
    "exec_result": 0
  },
  {
    "idx": 738,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Collection_ID) FROM Collection_Subset_Members WHERE Collection_ID IN ( SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' )",
    "exec_result": 1
  },
  {
    "idx": 739,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT T2.Collection_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 740,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT DISTINCT Collection_Subset_ID FROM Collection_Subsets WHERE Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 741,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM songs WHERE name LIKE \"%Love%\"",
    "pred": "SELECT COUNT(*) FROM songs WHERE name LIKE '%Love%';",
    "exec_result": 1
  },
  {
    "idx": 742,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name FROM songs ORDER BY name",
    "pred": "SELECT name FROM songs ORDER BY name ASC",
    "exec_result": 1
  },
  {
    "idx": 743,
    "db_id": "sing_contest",
    "question": "",
    "gold": "select name , language from songs",
    "pred": "SELECT name, language FROM songs;",
    "exec_result": 1
  },
  {
    "idx": 744,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT max(voice_sound_quality) ,  min(voice_sound_quality) FROM performance_score",
    "pred": "SELECT MAX(voice_sound_quality), MIN(voice_sound_quality) FROM performance_score;",
    "exec_result": 1
  },
  {
    "idx": 745,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.voice_sound_quality ,  T1.rhythm_tempo ,  T1.stage_presence FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id  =  T2.id WHERE T2.name  =  'Freeway'",
    "pred": "SELECT T1.voice_sound_quality, T1.rhythm_tempo, T1.stage_presence FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id = T2.id WHERE T2.name = 'Freeway'",
    "exec_result": 1
  },
  {
    "idx": 746,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT id ,  LANGUAGE ,  original_artist FROM songs WHERE name != 'Love'",
    "pred": "SELECT T1.id, T1.language, T1.original_artist FROM songs AS T1 JOIN performance_score AS T2 ON T1.id = T2.songs_id WHERE T1.name != 'Love'",
    "exec_result": 0
  },
  {
    "idx": 747,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name ,  original_artist FROM songs WHERE english_translation  =  'All the streets of love'",
    "pred": "SELECT s.name, s.original_artist FROM songs s JOIN performance_score ps ON s.id = ps.songs_id WHERE ps.voice_sound_quality = (SELECT MIN(voice_sound_quality) FROM performance_score) AND ps.rhythm_tempo = (SELECT MIN(rhythm_tempo) FROM performance_score) AND ps.rhythm_tempo = 'All the streets of love'",
    "exec_result": 0
  },
  {
    "idx": 748,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT DISTINCT T2.stage_presence FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id WHERE T1.language  =  'English'",
    "pred": "SELECT DISTINCT T1.stage_presence FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id = T2.id WHERE T2.language = 'English'",
    "exec_result": 1
  },
  {
    "idx": 749,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.Name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
    "pred": "SELECT participants.id, participants.name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id GROUP BY participants.id, participants.name HAVING COUNT(songs_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 750,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.Name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id ORDER BY count(*)",
    "pred": "SELECT p.id, p.name, p.popularity FROM participants p JOIN ( SELECT participant_id, COUNT(*) as song_count FROM performance_score GROUP BY participant_id ORDER BY song_count DESC ) s ON p.id = s.participant_id ORDER BY s.song_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 751,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id WHERE T2.voice_sound_quality  =  5 OR T2.rhythm_tempo  =  5",
    "pred": "SELECT T1.id, T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T1.id = T2.participant_id WHERE T2.voice_sound_quality = 5 OR T2.rhythm_tempo = 5",
    "exec_result": 1
  },
  {
    "idx": 752,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.voice_sound_quality FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id  =  T2.id WHERE T2.name  =  ' The Balkan Girls ' AND T2.language  =  'English'",
    "pred": "SELECT T1.voice_sound_quality FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id = T2.id WHERE T2.name = 'The Balkan Girls' AND T2.language = 'English'",
    "exec_result": 0
  },
  {
    "idx": 753,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.id, T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id = T2.songs_id ORDER BY T2.voice_sound_quality DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 754,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM performance_score WHERE stage_presence  <  7 OR stage_presence  >  9",
    "pred": "SELECT COUNT(*) FROM performance_score WHERE stage_presence < 7 OR stage_presence > 9",
    "exec_result": 1
  },
  {
    "idx": 755,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM songs WHERE id NOT IN ( SELECT songs_id FROM performance_score );",
    "pred": "SELECT COUNT(*) FROM performance_score WHERE songs_id NOT IN (SELECT id FROM songs)",
    "exec_result": 0
  },
  {
    "idx": 756,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT avg(T2.rhythm_tempo) ,  T1.language FROM songs AS T1 JOIN performance_score AS T2 ON T2.songs_id  =  T1.id GROUP BY T1.language",
    "pred": "SELECT l.language, AVG(ps.rhythm_tempo) AS average_rhythm_tempo FROM songs s JOIN performance_score ps ON s.id = ps.songs_id JOIN language l ON s.language = l.language GROUP BY l.language",
    "exec_result": 0
  },
  {
    "idx": 757,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'",
    "pred": "SELECT DISTINCT participants.name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id JOIN songs ON performance_score.songs_id = songs.id WHERE songs.language = 'English';",
    "exec_result": 1
  },
  {
    "idx": 758,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'Croatian' INTERSECT SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'",
    "pred": "SELECT T1.name, T1.popularity FROM participants AS T1 JOIN ( SELECT id, name FROM participants WHERE original_artist = 'Urban Symphony' AND language = 'Croatian' GROUP BY id, name HAVING COUNT(*) > 1 ) AS T2 ON T1.id = T2.id JOIN ( SELECT id, name FROM participants WHERE original_artist = 'Urban Symphony' AND language = 'English' GROUP BY id, name HAVING COUNT(*) > 1 ) AS T3 ON T1.id = T3.id WHERE T2.name IN ('Todas as ruas do amor', 'This Is Our Night') AND T3.name IN ('Todas as ruas do amor', 'This Is Our Night')",
    "exec_result": 0
  },
  {
    "idx": 759,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name FROM songs WHERE name LIKE \"%Is%\"",
    "pred": "SELECT DISTINCT T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id = T2.songs_id WHERE T2.voice_sound_quality >= 8.0 AND T2.rhythm_tempo >= 10.0",
    "exec_result": 0
  },
  {
    "idx": 760,
    "db_id": "sing_contest",
    "question": "",
    "gold": "select t2.original_artist from performance_score as t1 join songs as t2 on t2.id  =  t1.songs_id where t1.rhythm_tempo  >  5 order by t1.voice_sound_quality desc",
    "pred": "SELECT T1.original_artist, T2.voice_sound_quality FROM participants AS T1 JOIN songs AS T2 ON T1.id = T2.participant_id JOIN performance_score AS T3 ON T1.id = T3.participant_id WHERE T2.rhythm_tempo > 5 ORDER BY T3.voice_sound_quality DESC;",
    "exec_result": 0
  },
  {
    "idx": 761,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City",
    "pred": "SELECT COUNT(city_code) FROM City;",
    "exec_result": 1
  },
  {
    "idx": 762,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City",
    "pred": "SELECT COUNT(city_code) FROM City;",
    "exec_result": 1
  },
  {
    "idx": 763,
    "db_id": "address_1",
    "question": "",
    "gold": "select distinct state from city",
    "pred": "SELECT DISTINCT state FROM City;",
    "exec_result": 1
  },
  {
    "idx": 764,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT DISTINCT state FROM City",
    "pred": "SELECT DISTINCT state FROM City;",
    "exec_result": 1
  },
  {
    "idx": 765,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country) FROM City",
    "pred": "SELECT COUNT(DISTINCT country) AS num_countries FROM City;",
    "exec_result": 1
  },
  {
    "idx": 766,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country) FROM City",
    "pred": "SELECT COUNT(city_code) FROM City;",
    "exec_result": 1
  },
  {
    "idx": 767,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name ,  city_code ,  state ,  country FROM City",
    "pred": "SELECT city_name, state, country FROM City;",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name ,  city_code ,  state ,  country FROM City",
    "pred": "SELECT city_name, city_code, state, country FROM City;",
    "exec_result": 1
  },
  {
    "idx": 769,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"",
    "pred": "SELECT T1.latitude, T1.longitude FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.city1_code = 'Baltimore'",
    "exec_result": 0
  },
  {
    "idx": 770,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"",
    "pred": "SELECT T1.latitude, T1.longitude FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.city1_code = 'Baltimore'",
    "exec_result": 0
  },
  {
    "idx": 771,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE state  =  \"PA\"",
    "pred": "SELECT DISTINCT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code WHERE T1.state = 'PA';",
    "exec_result": 0
  },
  {
    "idx": 772,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE state  =  \"PA\"",
    "pred": "SELECT DISTINCT city_name FROM City WHERE country = 'USA' AND state = 'PA'",
    "exec_result": 1
  },
  {
    "idx": 773,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"",
    "pred": "SELECT COUNT(DISTINCT City_code) FROM City WHERE country = 'Canada'",
    "exec_result": 0
  },
  {
    "idx": 774,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"",
    "pred": "SELECT COUNT(city_code) FROM City WHERE country = 'Canada'",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude",
    "pred": "SELECT DISTINCT T1.city_name, T1.latitude FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code ORDER BY T2.latitude;",
    "exec_result": 0
  },
  {
    "idx": 776,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude",
    "pred": "SELECT DISTINCT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code ORDER BY T2.latitude;",
    "exec_result": 0
  },
  {
    "idx": 777,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state ,  count(*) FROM City GROUP BY state",
    "pred": "SELECT state, COUNT(city_code) FROM City GROUP BY state",
    "exec_result": 1
  },
  {
    "idx": 778,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state ,  count(*) FROM City GROUP BY state",
    "pred": "SELECT state, COUNT(city_code) FROM City GROUP BY state",
    "exec_result": 1
  },
  {
    "idx": 779,
    "db_id": "address_1",
    "question": "",
    "gold": "select country ,  count(*) from city group by country",
    "pred": "SELECT country, COUNT(city_code) FROM City GROUP BY country",
    "exec_result": 1
  },
  {
    "idx": 780,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM City GROUP BY country",
    "pred": "SELECT country, COUNT(city_code) FROM City GROUP BY country",
    "exec_result": 1
  },
  {
    "idx": 781,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.state HAVING COUNT(T2.city1_code) >= 2",
    "exec_result": 0
  },
  {
    "idx": 782,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.state HAVING COUNT(T2.city1_code) >= 2",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.city_code ORDER BY COUNT(T1.city_code) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 784,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.state FROM City AS T1 JOIN Direct_distance AS T3 ON T1.city_code = T3.city2_code GROUP BY T1.city_code ORDER BY COUNT(T1.city_code) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 785,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T1.country FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.country ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 786,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT T1.country FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.city_code ORDER BY COUNT(T2.city1_code) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 787,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"",
    "pred": "SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'MD'",
    "exec_result": 1
  },
  {
    "idx": 788,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"",
    "pred": "SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'MD' ORDER BY T1.Fname, T1.Lname",
    "exec_result": 1
  },
  {
    "idx": 789,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"",
    "pred": "SELECT COUNT(*) FROM Student WHERE city_name = 'China'",
    "exec_result": 0
  },
  {
    "idx": 790,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"",
    "pred": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE state = 'CHINA')",
    "exec_result": 0
  },
  {
    "idx": 791,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"",
    "pred": "SELECT S.Fname, S.Major FROM Student AS S WHERE S.city_code = (SELECT city_code FROM City WHERE city_name = 'Baltimore')",
    "exec_result": 1
  },
  {
    "idx": 792,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"",
    "pred": "SELECT T1.Fname, T1.Major FROM Student AS T1 JOIN Direct_distance AS D ON T1.city_code = D.city2_code JOIN City AS C ON D.city1_code = C.city_code WHERE T1.state = 'MD' AND T1.country = 'USA';",
    "exec_result": 0
  },
  {
    "idx": 793,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country",
    "pred": "SELECT DISTINCT T1.country, COUNT(*) FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.country",
    "exec_result": 0
  },
  {
    "idx": 794,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country",
    "pred": "SELECT T1.country, COUNT(*) FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.country",
    "exec_result": 0
  },
  {
    "idx": 795,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code",
    "pred": "SELECT DISTINCT city_name, COUNT(*) FROM Student GROUP BY city_name;",
    "exec_result": 0
  },
  {
    "idx": 796,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code",
    "pred": "SELECT DISTINCT T1.city_name, COUNT(*) FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.city_name HAVING COUNT(*) > 1;",
    "exec_result": 0
  },
  {
    "idx": 797,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.state, COUNT(*) FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T1.state ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 798,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T2.state ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 799,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T2.country FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.country IS NULL ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 800,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.country FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.country IS NULL ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 801,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3",
    "pred": "SELECT DISTINCT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.city_code HAVING COUNT(T2.city_code) >= 3",
    "exec_result": 1
  },
  {
    "idx": 802,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3",
    "pred": "SELECT DISTINCT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.city_code HAVING COUNT(T2.city_code) >= 3",
    "exec_result": 1
  },
  {
    "idx": 803,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5",
    "pred": "SELECT DISTINCT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T2.state HAVING COUNT(T1.city_code) > 5",
    "exec_result": 1
  },
  {
    "idx": 804,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5",
    "pred": "SELECT DISTINCT T1.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state IS NOT NULL AND T1.city_code IN (SELECT city_code FROM Direct_distance GROUP BY city_code HAVING COUNT(city_code) > 5)",
    "exec_result": 0
  },
  {
    "idx": 805,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"",
    "pred": "SELECT DISTINCT Student.StuID FROM Student WHERE Student.city_code NOT IN ( SELECT DISTINCT Direct_distance.city2_code FROM Direct_distance WHERE Direct_distance.city1_code = Student.city_code )",
    "exec_result": 0
  },
  {
    "idx": 806,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"",
    "pred": "SELECT DISTINCT Student.StuID FROM Student WHERE Student.city_code NOT IN ( SELECT DISTINCT Direct_distance.city2_code FROM Direct_distance WHERE Direct_distance.city1_code = Student.city_code AND Direct_distance.city2_code = 'USA' )",
    "exec_result": 0
  },
  {
    "idx": 807,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'",
    "pred": "SELECT DISTINCT T1.student_id FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code JOIN Direct_distance AS D ON T2.city_code = D.city2_code WHERE T1.sex = 'F' AND T2.state = 'PA';",
    "exec_result": 0
  },
  {
    "idx": 808,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'",
    "pred": "SELECT DISTINCT T1.StuID FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Sex = 'F' AND T2.state = 'PA'",
    "exec_result": 1
  },
  {
    "idx": 809,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"",
    "pred": "SELECT DISTINCT T1.student_id FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'TX' OR T2.state = 'TX' AND T1.sex = 'M';",
    "exec_result": 0
  },
  {
    "idx": 810,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"",
    "pred": "SELECT DISTINCT T1.student_id FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.sex = 'M' AND T2.country = 'USA' AND T1.city_code NOT IN ( SELECT DISTINCT T3.city_code FROM Direct_distance AS T3 WHERE T3.city2_code = T2.city_code )",
    "exec_result": 0
  },
  {
    "idx": 811,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 812,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 813,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 814,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"",
    "pred": "SELECT distance FROM Direct_distance WHERE city1_code = 'Boston' AND city2_code = 'Newark'",
    "exec_result": 0
  },
  {
    "idx": 815,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance",
    "pred": "SELECT AVG(DISTANCE), MIN(DISTANCE), MAX(DISTANCE) FROM Direct_distance",
    "exec_result": 1
  },
  {
    "idx": 816,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance",
    "pred": "SELECT AVG(T1.city_name), MIN(T1.city_name), MAX(T1.city_name) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city_code;",
    "exec_result": 0
  },
  {
    "idx": 817,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT DISTINCT T1.city_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance = (SELECT MAX(distance) FROM Direct_distance)",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT DISTINCT city_code FROM City WHERE city_name IN (SELECT city_name FROM Direct_distance GROUP BY city_name ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)",
    "pred": "SELECT DISTINCT T1.city_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.distance > (SELECT AVG(T2.distance) FROM Direct_distance AS T2)",
    "exec_result": 0
  },
  {
    "idx": 820,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)",
    "pred": "SELECT DISTINCT T1.city_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.distance > (SELECT AVG(T2.distance) FROM Direct_distance AS T2)",
    "exec_result": 0
  },
  {
    "idx": 821,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000",
    "pred": "SELECT DISTINCT T1.city_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance < 1000",
    "exec_result": 0
  },
  {
    "idx": 822,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000",
    "pred": "SELECT DISTINCT city_code FROM City WHERE country = 'USA' AND latitude > 39 AND longitude > -120 AND latitude < 40 AND longitude < -110",
    "exec_result": 0
  },
  {
    "idx": 823,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"",
    "pred": "SELECT SUM(DISTANCE) FROM Direct_distance WHERE city1_code = 'BAL'",
    "exec_result": 1
  },
  {
    "idx": 824,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"",
    "pred": "SELECT SUM(DISTANCE) FROM Direct_distance WHERE city1_code = 'BAL'",
    "exec_result": 1
  },
  {
    "idx": 825,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"",
    "pred": "SELECT AVG(DISTANCE) FROM Direct_distance WHERE city1_code = 'Boston' AND city2_code IN ( SELECT city_code FROM Direct_distance GROUP BY city_code HAVING COUNT(city_code) > 1 );",
    "exec_result": 0
  },
  {
    "idx": 826,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"",
    "pred": "SELECT AVG(DISTANCE) FROM Direct_distance WHERE city1_code = 'Boston'",
    "exec_result": 0
  },
  {
    "idx": 827,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1",
    "pred": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city_code WHERE T2.distance < (SELECT MAX(distance) FROM Direct_distance)",
    "exec_result": 0
  },
  {
    "idx": 828,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1",
    "pred": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.distance < (SELECT MAX(distance) FROM Direct_distance)",
    "exec_result": 0
  },
  {
    "idx": 829,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.distance > (SELECT AVG(distance) FROM Direct_distance WHERE city1_code = 'Boston')",
    "exec_result": 0
  },
  {
    "idx": 830,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city_code WHERE T2.distance = (SELECT MAX(distance) FROM Direct_distance);",
    "exec_result": 0
  },
  {
    "idx": 831,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code",
    "pred": "SELECT DISTINCT city_code, SUM(DISTINCT Direct_distance.distance) AS total_distance FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code JOIN City ON Direct_distance.city2_code = City.city_code GROUP BY city_code;",
    "exec_result": 0
  },
  {
    "idx": 832,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code",
    "pred": "SELECT DISTINCT T1.city_code, SUM(T2.distance) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.city_code;",
    "exec_result": 1
  },
  {
    "idx": 833,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code",
    "pred": "SELECT DISTINCT T1.city_name, AVG(T2.distance) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.city_name",
    "exec_result": 0
  },
  {
    "idx": 834,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code",
    "pred": "SELECT DISTINCT T1.city_name, AVG(T2.distance) AS avg_distance FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city_code GROUP BY T1.city_name ORDER BY T1.city_name ASC",
    "exec_result": 0
  },
  {
    "idx": 835,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"",
    "pred": "SELECT T3.distance FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code JOIN Direct_distance AS T3 ON T2.city_code = T3.city1_code WHERE T1.Fname = 'Linda' AND T1.Lname = 'Smith' AND T1.Fname = 'Tracy' AND T1.Lname = 'Kim'",
    "exec_result": 0
  },
  {
    "idx": 836,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"",
    "pred": "SELECT T2.distance FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T1.Fname = 'Linda' AND T1.Lname = 'Smith' OR T1.Fname = 'Tracy' AND T1.Lname = 'Kim'",
    "exec_result": 0
  },
  {
    "idx": 837,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN Direct_distance AS D ON T1.city_code = D.city2_code WHERE T1.city_name = 'Linda Smith' ORDER BY T1.city_code DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 838,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN Direct_distance AS D ON T1.city_code = D.city1_code WHERE T1.city_code = (SELECT city_code FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith')",
    "exec_result": 0
  },
  {
    "idx": 839,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"",
    "pred": "SELECT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Fname = 'Linda'",
    "exec_result": 1
  },
  {
    "idx": 840,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"",
    "pred": "SELECT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.fname = 'Linda'",
    "exec_result": 1
  },
  {
    "idx": 841,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT * FROM Sailors WHERE age  >  30",
    "pred": "SELECT name FROM Sailors WHERE age > 30;",
    "exec_result": 0
  },
  {
    "idx": 842,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT * FROM Sailors WHERE age  >  30",
    "pred": "SELECT S.name, B.name, B.color, R.day FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.age > 30;",
    "exec_result": 0
  },
  {
    "idx": 843,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  <  30",
    "pred": "SELECT S.name, S.age FROM Sailors AS S WHERE S.age < 30;",
    "exec_result": 1
  },
  {
    "idx": 844,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  <  30",
    "pred": "SELECT S.name, S.age FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid WHERE R.day < '9/15'",
    "exec_result": 0
  },
  {
    "idx": 845,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1",
    "pred": "SELECT Boats.name, Boats.color FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid = 1;",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1",
    "pred": "SELECT DISTINCT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.sid = 1;",
    "exec_result": 0
  },
  {
    "idx": 847,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 848,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Reserves.day = '9/15' ORDER BY Reserves.day ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 849,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves",
    "pred": "SELECT DISTINCT bid FROM Reserves",
    "exec_result": 1
  },
  {
    "idx": 850,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves",
    "pred": "SELECT bid FROM Reserves WHERE sid IN (SELECT sid FROM Sailors)",
    "exec_result": 1
  },
  {
    "idx": 851,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "pred": "SELECT DISTINCT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.name LIKE '%e%';",
    "exec_result": 0
  },
  {
    "idx": 852,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "pred": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "exec_result": 1
  },
  {
    "idx": 853,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);",
    "pred": "SELECT DISTINCT Reserves.sid FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.rating > ALL(SELECT rating FROM Reserves WHERE sid = Reserves.sid) ORDER BY Sailors.rating DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 854,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);",
    "pred": "SELECT DISTINCT Reserves.sid FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.rating != (SELECT MIN(Sailors.rating) FROM Sailors)",
    "exec_result": 0
  },
  {
    "idx": 855,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);",
    "pred": "SELECT DISTINCT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.rating > 7 AND R.day IN ('9/15', '9/14', '9/13', '9/12')",
    "exec_result": 0
  },
  {
    "idx": 856,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);",
    "pred": "SELECT DISTINCT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.rating > 7 AND R.day IN ('9/15', '9/14', '9/13', '9/12') ORDER BY S.name;",
    "exec_result": 0
  },
  {
    "idx": 857,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid GROUP BY S.sid HAVING COUNT(DISTINCT R.day) >= 1",
    "exec_result": 0
  },
  {
    "idx": 858,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid GROUP BY S.sid HAVING COUNT(DISTINCT B.name) > 0",
    "exec_result": 0
  },
  {
    "idx": 859,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1",
    "pred": "SELECT Reserves.sid, Reserves.name FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid GROUP BY Reserves.sid HAVING COUNT(DISTINCT Boats.bid) > 1;",
    "exec_result": 0
  },
  {
    "idx": 860,
    "db_id": "boat_1",
    "question": "",
    "gold": "select distinct t1.name ,  t1.sid from sailors as t1 join reserves as t2 on t1.sid  =  t2.sid group by t2.sid having count(*)  >=  2",
    "pred": "SELECT DISTINCT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid GROUP BY Sailors.sid HAVING COUNT(DISTINCT Boats.bid) > 1",
    "exec_result": 0
  },
  {
    "idx": 861,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT Reserves.sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color = 'red' OR Boats.color = 'blue';",
    "exec_result": 1
  },
  {
    "idx": 862,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' OR Boats.color = 'blue';",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.color = 'red' OR B.color = 'blue';",
    "exec_result": 1
  },
  {
    "idx": 864,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT S.name, B.name, R.day FROM Sailors AS S JOIN Boats AS B ON S.sid = B.sid JOIN Reserves AS R ON S.sid = R.sid WHERE B.color = 'red' OR B.color = 'blue';",
    "exec_result": 0
  },
  {
    "idx": 865,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT Reserves.sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color = 'red' AND Boats.color = 'blue';",
    "exec_result": 0
  },
  {
    "idx": 866,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid, Boats.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' AND Boats.color = 'blue'",
    "exec_result": 0
  },
  {
    "idx": 867,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.color = 'red' AND B.color = 'blue';",
    "exec_result": 0
  },
  {
    "idx": 868,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT S.name, B.name, R.day FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.name IN ('Melon', 'Mars', 'Legacy') AND B.color = 'red' AND B.color = 'blue';",
    "exec_result": 0
  },
  {
    "idx": 869,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves",
    "pred": "SELECT sid FROM Reserves WHERE bid NOT IN (SELECT bid FROM Boats)",
    "exec_result": 0
  },
  {
    "idx": 870,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves",
    "pred": "SELECT sid FROM Reserves WHERE bid NOT IN (SELECT bid FROM Boats)",
    "exec_result": 0
  },
  {
    "idx": 871,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid WHERE R.day NOT IN ( SELECT B.bid FROM Boats AS B JOIN Reserves AS R ON B.bid = R.bid );",
    "exec_result": 0
  },
  {
    "idx": 872,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid WHERE R.day NOT IN ( SELECT bid FROM Boats )",
    "exec_result": 0
  },
  {
    "idx": 873,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT sid FROM Reserves WHERE bid NOT IN (SELECT bid FROM Boats)",
    "exec_result": 0
  },
  {
    "idx": 874,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT sid FROM Reserves WHERE bid NOT IN (SELECT bid FROM Boats WHERE sid IN (SELECT sid FROM Sailors))",
    "exec_result": 0
  },
  {
    "idx": 875,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.id = 103",
    "exec_result": 0
  },
  {
    "idx": 876,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.id = 103",
    "exec_result": 0
  },
  {
    "idx": 877,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid JOIN Boat AS B2 ON B.bid = B2.bid WHERE S.rating > 'Luis' ORDER BY S.rating DESC;",
    "exec_result": 0
  },
  {
    "idx": 878,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT S.name, B.name FROM Sailors AS S JOIN Boats AS B ON S.sid = B.sid JOIN Reserves AS R ON S.sid = R.sid WHERE S.rating > (SELECT MIN(S.rating) FROM Sailors WHERE name = 'Luis')",
    "exec_result": 0
  },
  {
    "idx": 879,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.rating > ( SELECT MIN(S2.rating) FROM Sailors AS S2 JOIN Reserves AS R2 ON S2.sid = R2.sid JOIN Boats AS B2 ON R2.bid = B2.bid WHERE S2.name = 'Luis' ) ORDER BY S.name;",
    "exec_result": 0
  },
  {
    "idx": 880,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.rating > ( SELECT MIN(S2.rating) FROM Sailors AS S2 WHERE S2.sid = S.sid )",
    "exec_result": 0
  },
  {
    "idx": 881,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.rating > 2;",
    "exec_result": 1
  },
  {
    "idx": 882,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2",
    "pred": "SELECT S.name, S.sid FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE S.rating >= 3;",
    "exec_result": 1
  },
  {
    "idx": 883,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 884,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )",
    "pred": "SELECT S.name, S.age FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid WHERE R.day = (SELECT MAX(day) FROM Reserves) ORDER BY S.age DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 885,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM Sailors",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 886,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM Sailors",
    "pred": "SELECT COUNT(sid) FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 887,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(age) FROM Sailors WHERE rating  =  7",
    "pred": "SELECT AVG(Sailors.age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Legacy' AND Sailors.rating = 7;",
    "exec_result": 0
  },
  {
    "idx": 888,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(age) FROM Sailors WHERE rating  =  7",
    "pred": "SELECT AVG(Sailors.age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid JOIN Boat ON Boats.bid = Sailors.bid WHERE Sailors.rating = 7;",
    "exec_result": 0
  },
  {
    "idx": 889,
    "db_id": "boat_1",
    "question": "",
    "gold": "select count(*) from sailors where name like 'd%'",
    "pred": "SELECT COUNT(DISTINCT Reserves.sid) FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.name LIKE 'D%';",
    "exec_result": 1
  },
  {
    "idx": 890,
    "db_id": "boat_1",
    "question": "",
    "gold": "select count(*) from sailors where name like 'd%'",
    "pred": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';",
    "exec_result": 1
  },
  {
    "idx": 891,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(rating) ,  MAX(age) FROM Sailors",
    "pred": "SELECT AVG(rating), MAX(age) FROM Sailors;",
    "exec_result": 1
  },
  {
    "idx": 892,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(rating) ,  MAX(age) FROM Sailors",
    "pred": "SELECT AVG(rating), MAX(age) FROM Sailors;",
    "exec_result": 1
  },
  {
    "idx": 893,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid",
    "pred": "SELECT Boats.name, COUNT(Reserves.day) FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid GROUP BY Boats.name",
    "exec_result": 0
  },
  {
    "idx": 894,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid",
    "pred": "SELECT bid, COUNT(*) FROM Reserves GROUP BY bid",
    "exec_result": 1
  },
  {
    "idx": 895,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50",
    "pred": "SELECT COUNT(*) FROM Reserves WHERE sid IN (SELECT sid FROM Sailors WHERE sid > 50)",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50",
    "pred": "SELECT COUNT(*) FROM Reserves WHERE sid IN (SELECT sid FROM Sailors WHERE sid > 50)",
    "exec_result": 0
  },
  {
    "idx": 897,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1",
    "pred": "SELECT Boats.name, COUNT(Reserves.day) AS num_reservations FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid GROUP BY Boats.name HAVING COUNT(Reserves.day) > 1",
    "exec_result": 0
  },
  {
    "idx": 898,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1",
    "pred": "SELECT bid, COUNT(*) AS count FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Reserves.day IN ('9/15', '9/14', '9/13', '9/12') GROUP BY bid HAVING count > 1",
    "exec_result": 1
  },
  {
    "idx": 899,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid",
    "pred": "SELECT Boats.name, COUNT(Reserves.day) FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.sid > 1 GROUP BY Boats.name",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid",
    "pred": "SELECT bid, COUNT(day) FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid GROUP BY bid",
    "exec_result": 0
  },
  {
    "idx": 901,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating",
    "pred": "SELECT s.rating, AVG(r.age) AS average_age FROM Reserves r JOIN Sailors s ON r.sid = s.sid JOIN Boats b ON r.bid = b.bid WHERE b.color = 'red' GROUP BY s.rating",
    "exec_result": 0
  },
  {
    "idx": 902,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating",
    "pred": "SELECT r.rating, AVG(rs.age) AS average_age FROM Sailors AS rs JOIN Reserves AS rsv ON rs.sid = rsv.sid JOIN Boats AS b ON rs.bid = b.bid JOIN Boat AS b2 ON b.name = b2.name JOIN Sailors AS s ON rs.sid = s.sid WHERE s.name = 'Luis' AND b.color = 'red' GROUP BY r.rating",
    "exec_result": 0
  },
  {
    "idx": 903,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age",
    "pred": "SELECT S.name, S.rating, S.age FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid ORDER BY S.rating, S.age;",
    "exec_result": 0
  },
  {
    "idx": 904,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age",
    "pred": "SELECT S.name, S.rating, S.age FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid ORDER BY S.rating, S.age;",
    "exec_result": 0
  },
  {
    "idx": 905,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 906,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 907,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats WHERE color  =  'red'",
    "pred": "SELECT COUNT(DISTINCT bid) FROM Reserves WHERE sid IN (SELECT sid FROM Sailors WHERE name = 'Luis') AND day IN ('9/15', '9/14', '9/13', '9/12')",
    "exec_result": 0
  },
  {
    "idx": 908,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats WHERE color  =  'red'",
    "pred": "SELECT COUNT(*) FROM Boats WHERE color = 'red'",
    "exec_result": 1
  },
  {
    "idx": 909,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30",
    "pred": "SELECT Boats.name, Reserves.day FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.age BETWEEN 20 AND 30",
    "exec_result": 0
  },
  {
    "idx": 910,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30",
    "pred": "SELECT T2.name FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid = T2.bid JOIN Sailors AS T3 ON T3.sid = T1.sid WHERE T3.age BETWEEN 20 AND 30;",
    "exec_result": 1
  },
  {
    "idx": 911,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.color = 'red' AND S.rating > (SELECT MIN(S2.rating) FROM Sailors AS S2 WHERE S2.sid = S.sid)",
    "exec_result": 0
  },
  {
    "idx": 912,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.color = 'red' GROUP BY S.sid HAVING SUM(S.rating) > (SELECT AVG(S.rating) FROM Sailors AS S WHERE S.sid = R.sid)",
    "exec_result": 0
  },
  {
    "idx": 913,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT max(rating) FROM Sailors",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 914,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT max(rating) FROM Sailors",
    "pred": "SELECT MAX(rating) FROM Sailors;",
    "exec_result": 1
  },
  {
    "idx": 915,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.name = 'Melon';",
    "exec_result": 1
  },
  {
    "idx": 916,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'",
    "pred": "SELECT S.name FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid JOIN Boats AS B ON R.bid = B.bid WHERE B.name = 'Melon';",
    "exec_result": 1
  },
  {
    "idx": 917,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors ORDER BY rating DESC",
    "pred": "SELECT name, age FROM Sailors ORDER BY rating DESC;",
    "exec_result": 1
  },
  {
    "idx": 918,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors ORDER BY rating DESC",
    "pred": "SELECT S.name, S.age FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid ORDER BY S.rating DESC;",
    "exec_result": 0
  },
  {
    "idx": 919,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1",
    "pred": "SELECT Model FROM headphone WHERE Price = (SELECT MIN(Price) FROM headphone)",
    "exec_result": 0
  },
  {
    "idx": 920,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1",
    "pred": "SELECT T1.Model, MAX(T2.Price) AS Max_Price FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Model ORDER BY Max_Price DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 921,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT DISTINCT model FROM headphone ORDER BY model",
    "pred": "SELECT DISTINCT Model FROM headphone ORDER BY Model;",
    "exec_result": 1
  },
  {
    "idx": 922,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT DISTINCT model FROM headphone ORDER BY model",
    "pred": "SELECT DISTINCT T1.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID ORDER BY T1.Model;",
    "exec_result": 0
  },
  {
    "idx": 923,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Class, COUNT(*) AS Frequency FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T2.Class ORDER BY Frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 924,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Class, COUNT(*) AS Quantity FROM headphone GROUP BY Class ORDER BY Quantity DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2",
    "pred": "SELECT Class, COUNT(*) FROM headphone GROUP BY Class HAVING COUNT(*) > 2",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2",
    "pred": "SELECT Class FROM headphone WHERE COUNT(DISTINCT Headphone_ID) <= 2 GROUP BY Class;",
    "exec_result": 0
  },
  {
    "idx": 927,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS",
    "pred": "SELECT Class, COUNT(*) FROM headphone WHERE Price > 200 GROUP BY Class",
    "exec_result": 1
  },
  {
    "idx": 928,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS",
    "pred": "SELECT Class, COUNT(*) FROM headphone WHERE Price > 200 GROUP BY Class",
    "exec_result": 1
  },
  {
    "idx": 929,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT earpads) FROM headphone",
    "pred": "SELECT COUNT(DISTINCT earpads) AS Earpads_Count FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID;",
    "exec_result": 0
  },
  {
    "idx": 930,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT earpads) FROM headphone",
    "pred": "SELECT COUNT(DISTINCT earpads) FROM stock;",
    "exec_result": 0
  },
  {
    "idx": 931,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT T1.Model, SUM(T2.Quantity) AS Total_Quantity FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Model ORDER BY Total_Quantity DESC LIMIT 2;",
    "exec_result": 0
  },
  {
    "idx": 932,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT T1.earpads, COUNT(T1.earpads) AS earpads_count FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID JOIN store AS T3 ON T1.Store_ID = T3.Store_ID WHERE T2.Model = 'SR80i' AND T2.Price > 100 GROUP BY T1.earpads ORDER BY earpads_count DESC LIMIT 2;",
    "exec_result": 0
  },
  {
    "idx": 933,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1",
    "pred": "SELECT T1.Model, T1.Class, T1.Construction FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID ORDER BY T2.Quantity LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 934,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1",
    "pred": "SELECT Model, Class, Construction FROM headphone WHERE Price = (SELECT MIN(Price) FROM headphone)",
    "exec_result": 1
  },
  {
    "idx": 935,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction",
    "pred": "SELECT T1.Class, AVG(T2.Price) FROM stock AS T2 JOIN headphone AS T1 ON T2.Headphone_ID = T1.Headphone_ID GROUP BY T1.Class;",
    "exec_result": 0
  },
  {
    "idx": 936,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction",
    "pred": "SELECT C.Construction, AVG(S.Quantity) AS Average_Price FROM stock AS S JOIN headphone AS H ON S.Headphone_ID = H.Headphone_ID JOIN store AS St ON S.Store_ID = St.Store_ID JOIN stock AS S2 ON S.Store_ID = S2.Store_ID JOIN headphone AS H2 ON S2.Headphone_ID = H2.Headphone_ID WHERE H2.Construction IS NOT NULL GROUP BY C.Construction ORDER BY C.Construction;",
    "exec_result": 0
  },
  {
    "idx": 937,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'",
    "pred": "SELECT T1.Class, T2.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Model LIKE '%Bowls%' AND T1.Model LIKE '%Comfort Pads%' AND T2.Model IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'",
    "pred": "SELECT T1.Class, T2.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Model IN ('Bowls', 'Comfort Pads') AND T2.Model IN ('Bowls', 'Comfort Pads');",
    "exec_result": 0
  },
  {
    "idx": 939,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'",
    "pred": "SELECT DISTINCT T2.earpads FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Construction = 'Hand-Crafted Mahogany / Aluminum'",
    "exec_result": 0
  },
  {
    "idx": 940,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'",
    "pred": "SELECT DISTINCT earpads FROM stock WHERE earpads NOT IN (SELECT earpads FROM headphone WHERE construction = 'Plastic')",
    "exec_result": 0
  },
  {
    "idx": 941,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)",
    "pred": "SELECT Model FROM headphone WHERE Price < (SELECT AVG(Price) FROM headphone)",
    "exec_result": 1
  },
  {
    "idx": 942,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)",
    "pred": "SELECT Model FROM headphone WHERE Price < (SELECT AVG(Price) FROM headphone)",
    "exec_result": 1
  },
  {
    "idx": 943,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store ORDER BY date_opened",
    "pred": "SELECT Name FROM store ORDER BY Date_Opened;",
    "exec_result": 1
  },
  {
    "idx": 944,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store ORDER BY date_opened",
    "pred": "SELECT Name FROM store ORDER BY Date_Opened;",
    "exec_result": 1
  },
  {
    "idx": 945,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'",
    "pred": "SELECT T1.Name, T2.Parking FROM store AS T1 JOIN headphone AS T2 ON T1.Store_ID = T2.Store_ID WHERE T1.Neighborhood = 'Tarzana' AND T2.Parking IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 946,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'",
    "pred": "SELECT T1.Name, T2.Parking FROM store AS T1 JOIN stock AS T2 ON T1.Store_ID = T2.Store_ID WHERE T1.Neighborhood = 'Tarzana' AND T2.Parking = 'n/a'",
    "exec_result": 0
  },
  {
    "idx": 947,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT neighborhood) FROM store",
    "pred": "SELECT COUNT(DISTINCT neighborhood) FROM store",
    "exec_result": 1
  },
  {
    "idx": 948,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT neighborhood) FROM store",
    "pred": "SELECT COUNT(DISTINCT store.neighborhood) FROM store JOIN stock ON store.store_id = stock.store_id WHERE stock.quantity > 0",
    "exec_result": 0
  },
  {
    "idx": 949,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood",
    "pred": "SELECT Neighborhood, COUNT(Store_ID) AS Store_Count FROM store GROUP BY Neighborhood;",
    "exec_result": 1
  },
  {
    "idx": 950,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood",
    "pred": "SELECT Neighborhood, COUNT(Store_ID) FROM store GROUP BY Neighborhood",
    "exec_result": 1
  },
  {
    "idx": 951,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT T1.Name, SUM(T2.Quantity) AS Total_Headphones FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Store_ID ORDER BY Total_Headphones DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 952,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT T1.Name, SUM(T2.Quantity) AS Total_Quantity FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Store_ID ORDER BY T1.Total_Quantity DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 953,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)",
    "pred": "SELECT T1.Name FROM store AS T1 JOIN stock AS T2 ON T1.Store_ID = T2.Store_ID WHERE T2.Quantity = 0",
    "exec_result": 0
  },
  {
    "idx": 954,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)",
    "pred": "SELECT T2.Name FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Store_ID NOT IN (SELECT Store_ID FROM stock WHERE Headphone_ID IN (SELECT Headphone_ID FROM stock WHERE Quantity > 0))",
    "exec_result": 0
  },
  {
    "idx": 955,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)",
    "pred": "SELECT DISTINCT T1.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Model HAVING COUNT(T2.Store_ID) = 0",
    "exec_result": 0
  },
  {
    "idx": 956,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)",
    "pred": "SELECT DISTINCT T1.Model FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Quantity = 0",
    "exec_result": 0
  },
  {
    "idx": 957,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT T1.Model, MAX(T2.Quantity) FROM headphone AS T1 JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T1.Model ORDER BY MAX(T2.Quantity) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 958,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT Model FROM headphone WHERE Quantity = (SELECT MAX(Quantity) FROM stock)",
    "exec_result": 0
  },
  {
    "idx": 959,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'",
    "pred": "SELECT COUNT(Headphone_ID) FROM stock WHERE Store_ID = (SELECT Store_ID FROM store WHERE Name = 'Woodman')",
    "exec_result": 0
  },
  {
    "idx": 960,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'",
    "pred": "SELECT SUM(Quantity) FROM stock WHERE Store_ID = (SELECT Store_ID FROM store WHERE Name = 'Woodman')",
    "exec_result": 1
  },
  {
    "idx": 961,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id",
    "pred": "SELECT T1.Name FROM store AS T1 JOIN stock AS T2 ON T1.Store_ID = T2.Store_ID WHERE T2.Quantity = 0",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id",
    "pred": "SELECT T1.Name FROM store AS T1 JOIN stock AS T2 ON T1.Store_ID = T2.Store_ID WHERE T2.Quantity = 0",
    "exec_result": 0
  },
  {
    "idx": 963,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 964,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT COUNT(*) FROM Author_list;",
    "exec_result": 0
  },
  {
    "idx": 965,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper",
    "pred": "SELECT COUNT(*) FROM Paper;",
    "exec_result": 1
  },
  {
    "idx": 966,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper",
    "pred": "SELECT COUNT(*) FROM Paper;",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Affiliation",
    "pred": "SELECT COUNT(affiliation_id) FROM Affiliation",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Affiliation",
    "pred": "SELECT COUNT(*) FROM Affiliation;",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL' AND year = 2000",
    "exec_result": 1
  },
  {
    "idx": 970,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'ACL' AND year = 2000",
    "exec_result": 0
  },
  {
    "idx": 971,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009",
    "pred": "SELECT COUNT(*) FROM Paper WHERE year = 2009 AND venue = 'COLING'",
    "exec_result": 0
  },
  {
    "idx": 972,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'ACL' AND year = 2009 AND affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University')",
    "exec_result": 0
  },
  {
    "idx": 973,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT name ,  address FROM Affiliation",
    "pred": "SELECT name, address FROM Affiliation;",
    "exec_result": 1
  },
  {
    "idx": 974,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT name ,  address FROM Affiliation",
    "pred": "SELECT name, address FROM Affiliation",
    "exec_result": 1
  },
  {
    "idx": 975,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR",
    "pred": "SELECT venue, year FROM Paper ORDER BY year;",
    "exec_result": 1
  },
  {
    "idx": 976,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR",
    "pred": "SELECT venue, year FROM Paper ORDER BY year",
    "exec_result": 1
  },
  {
    "idx": 977,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Affiliation AS T4 ON T3.affiliation_id = T4.affiliation_id WHERE T4.name = 'Harvard University'",
    "exec_result": 0
  },
  {
    "idx": 978,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name = 'Harvard University'",
    "exec_result": 1
  },
  {
    "idx": 979,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Affiliation AS T4 ON T3.affiliation_id = T4.affiliation_id WHERE T2.name = 'Mckeown'",
    "exec_result": 0
  },
  {
    "idx": 980,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T1.paper_id = T4.paper_id JOIN Citation AS T5 ON T4.paper_id = T5.cited_paper_id WHERE T2.name = 'Mckeown';",
    "exec_result": 0
  },
  {
    "idx": 981,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id = T3.affiliation_id WHERE T3.name IN ('Stanford University', 'Columbia University')",
    "exec_result": 0
  },
  {
    "idx": 982,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"",
    "pred": "SELECT T1.title, T2.paper_id FROM Paper AS T1 JOIN Affiliation AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Author_list AS T3 ON T1.paper_id = T3.paper_id JOIN Paper AS T4 ON T3.author_id = T4.author_id WHERE T2.name IN ('Stanford', 'Columbia University') AND T1.paper_id IN ( SELECT T3.paper_id FROM Paper AS T3 JOIN Affiliation AS T4 ON T3.affiliation_id = T4.affiliation_id WHERE T4.name IN ('Stanford', 'Columbia University') )",
    "exec_result": 0
  },
  {
    "idx": 983,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T3.author_id = T4.author_id WHERE T3.name = 'Mckeown' AND T3.email = '\u2021a&Auml' AND T4.name = 'Rambow' AND T4.email = '\u2021&Atilde' ORDER BY T1.year ASC;",
    "exec_result": 0
  },
  {
    "idx": 984,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT T2.paper_id, T3.title FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T1.author_id = T3.author_id JOIN Paper AS T4 ON T3.paper_id = T4.paper_id WHERE T1.name = 'Mckeown' AND T2.name = 'Kathleen' AND T3.venue = 'ACL' AND T4.venue = 'EMNLP' AND T1.name = 'Rambow' AND T2.name = 'Owen'",
    "exec_result": 0
  },
  {
    "idx": 985,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"",
    "pred": "SELECT T2.title, T2.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T3.author_id = T4.author_id JOIN Paper AS T5 ON T4.paper_id = T5.paper_id WHERE T2.name IN ('Mckeown', 'Rambow') AND T2.author_id NOT IN (SELECT T3.author_id FROM Author_list AS T3 JOIN Paper AS T4 ON T3.author_id = T4.author_id WHERE T4.paper_id IN (SELECT T5.paper_id FROM Paper AS T5 WHERE T5.title LIKE 'Spoken-Language Research At Carnegie Mellon') OR T4.paper_id IN (SELECT T5.paper_id FROM Paper AS T5 WHERE T5.title LIKE 'Natural Language Research'))",
    "exec_result": 0
  },
  {
    "idx": 986,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"",
    "pred": "SELECT T2.title, T2.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T3.paper_id = T4.paper_id WHERE T2.name = 'Mckeown' AND T4.venue = 'EMNLP' AND T4.year = 2019 AND T2.name != 'Rambow';",
    "exec_result": 0
  },
  {
    "idx": 987,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T1.paper_id = T4.paper_id JOIN Citation AS T5 ON T4.paper_id = T5.cited_paper_id WHERE T2.name IN ('Mckeown', 'Rambow', 'Owen');",
    "exec_result": 0
  },
  {
    "idx": 988,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT T1.title, T1.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Citation AS T4 ON T3.paper_id = T4.cited_paper_id WHERE T2.name IN ('Mckeown', 'Kathleen') AND T2.name IN ('Rambow', 'Owen') GROUP BY T1.paper_id HAVING COUNT(T1.paper_id) = 1;",
    "exec_result": 0
  },
  {
    "idx": 989,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC",
    "pred": "SELECT T1.name, COUNT(*) AS papers FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id GROUP BY T1.name ORDER BY papers DESC;",
    "exec_result": 0
  },
  {
    "idx": 990,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC",
    "pred": "SELECT Author.name, COUNT(*) AS number_of_papers FROM Author JOIN Author_list ON Author.name = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Author.name ORDER BY number_of_papers DESC;",
    "exec_result": 0
  },
  {
    "idx": 991,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC",
    "pred": "SELECT DISTINCT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Author AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T3.paper_id = T4.paper_id ORDER BY COUNT(*) DESC;",
    "exec_result": 0
  },
  {
    "idx": 992,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC",
    "pred": "SELECT T1.name FROM Affiliation AS T1 JOIN Author AS T2 ON T1.affiliation_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T3.paper_id = T4.paper_id JOIN Citation AS T5 ON T4.paper_id = T5.cited_paper_id WHERE T4.title LIKE '%papers%';",
    "exec_result": 0
  },
  {
    "idx": 993,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50",
    "pred": "SELECT DISTINCT T1.name FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T2.year > 50",
    "exec_result": 0
  },
  {
    "idx": 994,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50",
    "pred": "SELECT DISTINCT T1.name FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T2.year > 50",
    "exec_result": 0
  },
  {
    "idx": 995,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1",
    "pred": "SELECT DISTINCT T1.name FROM Author_list AS T1 JOIN Paper AS T2 ON T1.author_id = T2.author_id WHERE T2.paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT paper_id FROM Paper WHERE paper_id IN (SELECT T1.paper_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.author_id = T2.author_id WHERE T2.title LIKE '%Evaluating%' AND T2.year >= 2010 AND T2.year <= 2019))",
    "exec_result": 0
  },
  {
    "idx": 996,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 997,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT venue, year FROM Paper GROUP BY venue, year ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 998,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT venue, year FROM Paper WHERE paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id IN (SELECT paper_id FROM Paper GROUP BY paper_id ORDER BY COUNT(*) DESC LIMIT 1))",
    "exec_result": 0
  },
  {
    "idx": 999,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1",
    "pred": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1000,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1",
    "pred": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1001,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE cited_paper_id  =  \"A00-1002\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE paper_id = 'A00-1002'",
    "exec_result": 0
  },
  {
    "idx": 1002,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE cited_paper_id  =  \"A00-1002\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id = (SELECT paper_id FROM Paper WHERE title = 'A00-1002'))",
    "exec_result": 0
  },
  {
    "idx": 1003,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE paper_id  =  \"D12-1027\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE paper_id = (SELECT paper_id FROM Author_list WHERE author_id = (SELECT author_id FROM Author WHERE name = '\u2122ej') AND paper_id = (SELECT paper_id FROM Paper WHERE title = 'Evaluating The Use Of Prosodic Information In Speech Recognition And Understanding'));",
    "exec_result": 0
  },
  {
    "idx": 1004,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE paper_id  =  \"D12-1027\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE paper_id = 'D12-1027'",
    "exec_result": 0
  },
  {
    "idx": 1005,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.paper_id, COUNT(*) AS number_of_citations FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id GROUP BY T1.paper_id ORDER BY number_of_citations DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1006,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.paper_id, COUNT(*) AS number_of_citations FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Citation AS T3 ON T1.paper_id = T3.cited_paper_id GROUP BY T1.paper_id ORDER BY number_of_citations DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1007,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id GROUP BY T1.paper_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1008,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.paper_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1009,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10",
    "pred": "SELECT T1.title, COUNT(*) AS citation_count FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Citation AS T3 ON T1.paper_id = T3.cited_paper_id GROUP BY T1.paper_id ORDER BY citation_count DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 1010,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10",
    "pred": "SELECT T1.title, COUNT(*) AS citation_count FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Citation AS T3 ON T1.paper_id = T3.cited_paper_id GROUP BY T1.paper_id ORDER BY citation_count DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 1011,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1012,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT COUNT(*) FROM Author WHERE name = 'Mckeown, Kathleen'",
    "exec_result": 1
  },
  {
    "idx": 1013,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1014,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT COUNT(*) FROM Author_list WHERE author_id = (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen')",
    "exec_result": 1
  },
  {
    "idx": 1015,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.name, COUNT(C.cited_paper_id) AS number_of_citations FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON A.author_id = P.author_id JOIN Citation C ON P.paper_id = C.paper_id GROUP BY A.author_id ORDER BY number_of_citations DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1016,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.name, COUNT(*) AS number_of_citations FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T1.author_id = T3.author_id GROUP BY T1.author_id ORDER BY number_of_citations DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1017,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT venue, year FROM Paper WHERE author_id IN ( SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen' )",
    "exec_result": 0
  },
  {
    "idx": 1018,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT T1.venue, T1.year FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name = 'Mckeown, Kathleen' GROUP BY T1.venue, T1.year",
    "exec_result": 1
  },
  {
    "idx": 1019,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = \"columbia university\"",
    "pred": "SELECT venue, year FROM Paper WHERE affiliation_id IN (SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University')",
    "exec_result": 0
  },
  {
    "idx": 1020,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = \"columbia university\"",
    "pred": "SELECT paper_id, venue, year FROM Paper WHERE affiliation_id IN ( SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University' );",
    "exec_result": 0
  },
  {
    "idx": 1021,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.name, COUNT(*) AS papers FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T2.year = 2009 GROUP BY T1.author_id ORDER BY papers DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1022,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.name FROM Author_list AS T1 JOIN Paper AS T2 ON T1.author_id = T2.author_id WHERE T2.year = 2009 GROUP BY T1.author_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1023,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT T1.name, COUNT(*) AS paper_count FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Paper AS T3 ON T1.affiliation_id = T3.affiliation_id WHERE T3.year = 2009 GROUP BY T1.name ORDER BY paper_count DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1024,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT T1.name, COUNT(*) AS paper_count FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Paper AS T3 ON T1.affiliation_id = T3.affiliation_id WHERE T3.year = 2009 GROUP BY T1.affiliation_id ORDER BY paper_count DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1025,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = \"columbia university\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year >= 2009",
    "exec_result": 1
  },
  {
    "idx": 1026,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = \"columbia university\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year >= 2009;",
    "exec_result": 1
  },
  {
    "idx": 1027,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE \"Stanford University\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue IN ('ACL', 'COLING', 'EMNLP', 'EACL', 'HLT', 'CL') AND year BETWEEN 2000 AND 2009 AND affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Stanford University');",
    "exec_result": 0
  },
  {
    "idx": 1028,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE \"Stanford University\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue IN ('ACL', 'COLING', 'EMNLP', 'EACL', 'HLT', 'CL') AND year BETWEEN 2000 AND 2009 AND affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Stanford University');",
    "exec_result": 0
  },
  {
    "idx": 1029,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name IN ('\u2122ej', '\u2021a&Auml', '\u2021, Frane', '\u2021&Atilde', '\u02dcyvind Raddum', '\u02c6u&Aring') ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1030,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id GROUP BY T3.author_id ORDER BY COUNT(T2.author_id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1031,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1032,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT COUNT(*) FROM Author WHERE name = 'Mckeown, Kathleen'",
    "exec_result": 1
  },
  {
    "idx": 1033,
    "db_id": "aan_1",
    "question": "",
    "gold": "select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = \"mckeown ,  kathleen\" group by t2.author_id order by count(*) desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1034,
    "db_id": "aan_1",
    "question": "",
    "gold": "select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = \"mckeown ,  kathleen\" group by t2.author_id order by count(*) desc limit 1",
    "pred": "SELECT T2.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T1.author_id = T3.author_id WHERE T3.title LIKE '%McKee% Kathleen%' GROUP BY T1.author_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1035,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id FROM Paper WHERE title LIKE \"%translation%\"",
    "pred": "SELECT T1.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Affiliation AS T4 ON T3.affiliation_id = T4.affiliation_id WHERE T1.title LIKE '%translation%';",
    "exec_result": 0
  },
  {
    "idx": 1036,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id FROM Paper WHERE title LIKE \"%translation%\"",
    "pred": "SELECT T1.paper_id FROM Paper AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Citation AS T4 ON T3.paper_id = T4.cited_paper_id WHERE T1.title LIKE '%translation%'",
    "exec_result": 0
  },
  {
    "idx": 1037,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)",
    "pred": "SELECT T1.paper_id, T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.author_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1038,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)",
    "pred": "SELECT T1.paper_id, T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.author_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1039,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE \"%China%\" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T1.address LIKE '%China%' GROUP BY T1.name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1040,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE \"%China%\" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.name FROM Affiliation AS T1 JOIN Author AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T3.paper_id = T4.paper_id GROUP BY T1.affiliation_id ORDER BY COUNT(T4.paper_id) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1041,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR",
    "pred": "SELECT T1.year, COUNT(T2.paper_id) AS papers_per_year FROM Paper AS T1 JOIN Affiliation AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Author_list AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T1.paper_id = T4.paper_id JOIN Citation AS T5 ON T4.paper_id = T5.cited_paper_id GROUP BY T1.year ORDER BY T1.year;",
    "exec_result": 0
  },
  {
    "idx": 1042,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR",
    "pred": "SELECT venue, COUNT(*) AS number_of_papers FROM Paper GROUP BY venue ORDER BY venue;",
    "exec_result": 0
  },
  {
    "idx": 1043,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id",
    "pred": "SELECT Affiliation.name, COUNT(Citation.paper_id) AS total_papers FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.author_id = Paper.author_id JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Affiliation.name",
    "exec_result": 0
  },
  {
    "idx": 1044,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id",
    "pred": "SELECT T1.name, COUNT(T1.paper_id) AS number_of_papers FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id JOIN Author AS T3 ON T2.author_id = T3.author_id JOIN Paper AS T4 ON T3.paper_id = T4.paper_id GROUP BY T1.name",
    "exec_result": 0
  },
  {
    "idx": 1045,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1046,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50",
    "pred": "SELECT T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Citation AS T3 ON T1.paper_id = T3.cited_paper_id WHERE T3.cited_paper_id IN (SELECT T2.paper_id FROM Paper WHERE T2.author_id = (SELECT T2.author_id FROM Paper WHERE T2.paper_id = T1.paper_id AND T1.year > 2020 ORDER BY T2.year DESC LIMIT 50))",
    "exec_result": 0
  },
  {
    "idx": 1047,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)",
    "pred": "SELECT COUNT(T1.author_id) FROM Author_list AS T1 JOIN Paper AS T2 ON T1.author_id = T2.author_id WHERE T2.cited_paper_id IS NULL AND T2.year > 2023",
    "exec_result": 0
  },
  {
    "idx": 1048,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)",
    "pred": "SELECT COUNT(T1.author_id) AS authors_with_more_than_50_citations FROM Author_list AS T1 JOIN Paper AS T2 ON T1.author_id = T2.author_id WHERE T2.cited_paper_id IS NULL GROUP BY T1.author_id HAVING COUNT(T1.author_id) > 50;",
    "exec_result": 0
  },
  {
    "idx": 1049,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"NAACL\" AND T2.year  =  2009)",
    "pred": "SELECT DISTINCT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id = T2.author_id JOIN Paper AS T3 ON T3.paper_id = T2.paper_id WHERE T3.venue = 'ACL' AND T3.year = 2009 AND T3.title IN ('Evaluating The Use Of Prosodic Information In Speech Recognition And Understanding', 'Research In Natural Language Processing', 'Natural Language Research', 'Spoken-Language Research At Carnegie Mellon', 'Spoken Language Recognition And Understanding', 'Segment-Based Acoustic Models With Multi-Level Search Algorithms For Continuous Speech Recognition')",
    "exec_result": 1
  },
  {
    "idx": 1050,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"NAACL\" AND T2.year  =  2009)",
    "pred": "SELECT DISTINCT T1.name FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T2.year = 2009 AND T1.venue = 'ACL' AND T1.affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Google Inc.') AND T1.author_id = (SELECT author_id FROM Author WHERE name = '\u2122ej')",
    "exec_result": 0
  },
  {
    "idx": 1051,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\")",
    "pred": "SELECT DISTINCT T1.name FROM Author_list AS T1 JOIN Paper AS T2 ON T1.author_id = T2.author_id WHERE T2.venue = 'ACL' AND T2.year = (SELECT MAX(T3.year) FROM Paper AS T3 WHERE T3.paper_id = T2.paper_id)",
    "exec_result": 0
  },
  {
    "idx": 1052,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1053,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM conference",
    "pred": "SELECT COUNT(*) FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1054,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM conference",
    "pred": "SELECT COUNT(*) FROM conference;",
    "exec_result": 1
  },
  {
    "idx": 1055,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT conference_name FROM conference",
    "pred": "SELECT DISTINCT conference_name FROM conference;",
    "exec_result": 1
  },
  {
    "idx": 1056,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT conference_name FROM conference",
    "pred": "SELECT DISTINCT conference_name FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1057,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  YEAR ,  LOCATION FROM conference",
    "pred": "SELECT conference_name, year, location FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1058,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  YEAR ,  LOCATION FROM conference",
    "pred": "SELECT T1.Conference_Name, T1.Year, T1.Location FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T2.Institution_ID = T3.Institution_ID;",
    "exec_result": 0
  },
  {
    "idx": 1059,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name",
    "pred": "SELECT T1.conference_name, COUNT(T2.conference_id) AS conference_count FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id GROUP BY T1.conference_name ORDER BY conference_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 1060,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name",
    "pred": "SELECT T1.conference_name, COUNT(*) FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id = T3.staff_id GROUP BY T1.conference_name",
    "exec_result": 0
  },
  {
    "idx": 1061,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR",
    "pred": "SELECT Year, COUNT(*) FROM conference GROUP BY Year",
    "exec_result": 1
  },
  {
    "idx": 1062,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR",
    "pred": "SELECT COUNT(*) AS conference_count, YEAR(conference_year) AS year FROM conference WHERE conference_id IN ( SELECT conference_id FROM conference_participation GROUP BY conference_id HAVING COUNT(*) > 1 ) GROUP BY YEAR(conference_year) ORDER BY year ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1063,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.Year FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID GROUP BY T1.Year ORDER BY COUNT(*) ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1064,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.Year FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID GROUP BY T1.Year ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1065,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2",
    "pred": "SELECT Location FROM conference WHERE Conference_ID IN ( SELECT Conference_ID FROM conference_participation WHERE role = 'Participant' GROUP BY Conference_ID HAVING COUNT(DISTINCT staff_ID) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 1066,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2",
    "pred": "SELECT Location FROM conference WHERE Conference_ID IN (SELECT Conference_ID FROM conference_participation WHERE role = 'Participant' GROUP BY Conference_ID HAVING COUNT(DISTINCT Conference_ID) >= 2)",
    "exec_result": 0
  },
  {
    "idx": 1067,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION ,  founded FROM institution",
    "pred": "SELECT institution_name, location, founded FROM institution;",
    "exec_result": 1
  },
  {
    "idx": 1068,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION ,  founded FROM institution",
    "pred": "SELECT T1.Institution_Name, T1.Location, T1.Founded FROM institution AS T1 JOIN conference AS T2 ON T1.Institution_ID = T2.Institution_ID JOIN conference_participation AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.role = 'Participant';",
    "exec_result": 0
  },
  {
    "idx": 1069,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900",
    "pred": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900",
    "exec_result": 1
  },
  {
    "idx": 1070,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900",
    "pred": "SELECT COUNT(DISTINCT institution_id) FROM institution WHERE Founded BETWEEN 1850 AND 1900",
    "exec_result": 1
  },
  {
    "idx": 1071,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1",
    "pred": "SELECT T1.Institution_Name, T1.Location FROM institution AS T1 JOIN conference AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Founded DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1072,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1",
    "pred": "SELECT T2.Institution_Name, T2.Location FROM institution AS T1 JOIN conference AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Founded DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1073,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.institution_name ,  count(*) FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1800 GROUP BY T2.institution_id",
    "pred": "SELECT T3.Institution_Name, COUNT(T2.role) FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T3.Institution_ID = T2.Institution_ID WHERE T3.Founded > 1800 GROUP BY T3.Founded",
    "exec_result": 0
  },
  {
    "idx": 1074,
    "db_id": "conference",
    "question": "",
    "gold": "select t1.institution_name ,  count(*) from institution as t1 join staff as t2 on t1.institution_id  =  t2.institution_id where t1.founded  >  1800 group by t2.institution_id",
    "pred": "SELECT I.Institution_Name, COUNT(T2.Staff_ID) AS Number_of_staff FROM institution AS I JOIN staff AS T1 ON I.Institution_ID = T1.Institution_ID JOIN conference_participation AS T2 ON T2.Institution_ID = I.Institution_ID WHERE T2.Founded > 1800 GROUP BY I.Institution_ID",
    "exec_result": 0
  },
  {
    "idx": 1075,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)",
    "pred": "SELECT T2.Institution_Name FROM conference AS T1 JOIN conference_participation AS T3 ON T1.Conference_ID = T3.Conference_ID JOIN institution AS T2 ON T3.Institution_ID = T2.Institution_ID WHERE T3.role = 'Participant' AND T2.Nationality = 'United States'",
    "exec_result": 0
  },
  {
    "idx": 1076,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)",
    "pred": "SELECT T2.Institution_Name FROM conference AS T1 JOIN conference_participation AS T3 ON T1.Conference_ID = T3.Conference_ID JOIN institution AS T2 ON T3.Institution_ID = T2.Institution_ID WHERE T3.role = 'Participant' AND T2.Nationality = 'United States'",
    "exec_result": 0
  },
  {
    "idx": 1077,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)",
    "pred": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.institution_id = T2.institution_id JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T1.Age > (SELECT AVG(T1.Age) FROM staff AS T1 WHERE T1.Age > T2.Age) GROUP BY T1.name;",
    "exec_result": 0
  },
  {
    "idx": 1078,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)",
    "pred": "SELECT T1.name, T2.role FROM staff AS T1 JOIN conference_participation AS T2 ON T1.institution_id = T2.institution_id JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T1.Age > (SELECT AVG(T1.Age) FROM staff AS T1 WHERE T1.Age > T2.Age) ORDER BY T1.Age ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1079,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT max(age) ,  min(age) FROM staff",
    "pred": "SELECT MAX(staff.Age), MIN(staff.Age) FROM staff WHERE staff.Nationality = 'United States'",
    "exec_result": 0
  },
  {
    "idx": 1080,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT max(age) ,  min(age) FROM staff",
    "pred": "SELECT MAX(Age), MIN(Age) FROM staff",
    "exec_result": 1
  },
  {
    "idx": 1081,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  \"Canada\"",
    "pred": "SELECT T1.Conference_Name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T2.Institution_ID = T3.Institution_ID WHERE T3.Location = 'Canada' AND T2.role = 'Participant'",
    "exec_result": 0
  },
  {
    "idx": 1082,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  \"Canada\"",
    "pred": "SELECT T1.Conference_Name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T2.Institution_ID = T3.Institution_ID WHERE T3.Nationality = 'Canada' AND T2.role = 'Participant'",
    "exec_result": 0
  },
  {
    "idx": 1083,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'",
    "pred": "SELECT T1.name, T2.role FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN staff AS T3 ON T2.staff_ID = T3.staff_ID WHERE T3.role IN ('Speaker', 'Sponsor')",
    "exec_result": 0
  },
  {
    "idx": 1084,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'",
    "pred": "SELECT T1.name, T2.role FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN staff AS T3 ON T2.staff_ID = T3.staff_ID WHERE T3.role IN ('Speaker', 'Sponsor') AND T1.Conference_ID IN (SELECT DISTINCT T1.Conference_ID FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN staff AS T3 ON T2.staff_ID = T3.staff_ID WHERE T3.role IN ('Speaker', 'Sponsor') GROUP BY T1.Conference_ID HAVING COUNT(T2.Conference_ID) > 1)",
    "exec_result": 0
  },
  {
    "idx": 1085,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'",
    "pred": "SELECT DISTINCT T1.name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T2.Institution_ID = T3.Institution_ID WHERE T1.Conference_Name = 'ACL' AND T2.role = 'Participant' OR T1.Conference_Name = 'Naccl' AND T2.role = 'Speaker';",
    "exec_result": 0
  },
  {
    "idx": 1086,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'",
    "pred": "SELECT T1.name, T2.name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T2.Institution_ID = T3.Institution_ID WHERE T1.Conference_Name IN ('ACL', 'NACCL') AND T2.role = 'Participant' AND T3.Institution_Name IN ('Shurtleff College (defunct)', 'Millikin University', 'Lombard College (defunct)', 'Lincoln College, Illinois', 'Illinois Wesleyan University', 'Illinois State University');",
    "exec_result": 0
  },
  {
    "idx": 1087,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004",
    "pred": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.institution_id = T2.institution_id JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Founded >= 2003 AND T3.Founded <= 2004",
    "exec_result": 0
  },
  {
    "idx": 1088,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004",
    "pred": "SELECT T2.name, T3.role FROM conference AS T1 JOIN staff AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN conference_participation AS T3 ON T1.Conference_ID = T3.Conference_ID WHERE T2.Age BETWEEN 41 AND 42 AND T1.Founded BETWEEN 2003 AND 2004 AND T3.role = 'Participant'",
    "exec_result": 0
  },
  {
    "idx": 1089,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id",
    "pred": "SELECT T1.Conference_Name, T1.Year, COUNT(*) AS Number_of_Participants FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID GROUP BY T1.Conference_ID",
    "exec_result": 1
  },
  {
    "idx": 1090,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id",
    "pred": "SELECT c.Conference_Name, c.Year, COUNT(*) AS Number_of_Participants FROM conference AS c JOIN conference_participation AS cp ON c.Conference_ID = cp.Conference_ID JOIN staff AS s ON cp.staff_ID = s.staff_ID GROUP BY c.Conference_ID",
    "exec_result": 1
  },
  {
    "idx": 1091,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT c.Conference_Name FROM conference AS c JOIN conference_participation AS cp ON c.Conference_ID = cp.Conference_ID JOIN ( SELECT conference_id, COUNT(*) as attend_count FROM conference_participation GROUP BY conference_id ORDER BY attend_count DESC LIMIT 2 ) AS top_conferences ON c.Conference_ID = top_conferences.Conference_ID",
    "exec_result": 0
  },
  {
    "idx": 1092,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT T1.Conference_Name, COUNT(*) AS Attendance_Count FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID WHERE T2.role = 'Participant' GROUP BY T1.Conference_ID ORDER BY Attendance_Count DESC LIMIT 2;",
    "exec_result": 0
  },
  {
    "idx": 1093,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  \"ACL\")",
    "pred": "SELECT T2.name, T2.nationality FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID WHERE T2.role = 'Participant' AND T1.Conference_Name = 'ACL' AND T2.Conference_ID NOT IN (SELECT DISTINCT Conference_ID FROM conference_participation WHERE role = 'Participant')",
    "exec_result": 0
  },
  {
    "idx": 1094,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  \"ACL\")",
    "pred": "SELECT T2.name, T2.nationality FROM conference AS T1 JOIN conference_participation AS T3 ON T1.Conference_ID = T3.Conference_ID JOIN institution AS T2 ON T3.Institution_ID = T2.Institution_ID WHERE T1.Conference_Name = 'ACL' AND T3.role = 'Participant' AND T2.nationality NOT IN ('United States', 'Canada')",
    "exec_result": 0
  },
  {
    "idx": 1095,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)",
    "pred": "SELECT T3.Institution_Name, T3.Location FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T2.Institution_ID = T3.Institution_ID WHERE T2.role = 'Participant' AND T1.Year = 2004 AND T3.Founded NOT IN (SELECT T2.Institution_ID FROM conference_participation AS T2 WHERE T2.Conference_ID IN (SELECT Conference_ID FROM conference WHERE Year = 2004))",
    "exec_result": 0
  },
  {
    "idx": 1096,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)",
    "pred": "SELECT T2.Institution_Name, T2.Location FROM conference AS T1 JOIN conference_participation AS T3 ON T1.Conference_ID = T3.Conference_ID JOIN institution AS T2 ON T3.Institution_ID = T2.Institution_ID WHERE T1.Founded < 2004 AND T3.role = 'Participant' AND T1.Founded IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1097,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1098,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1099,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age;",
    "exec_result": 1
  },
  {
    "idx": 1100,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age ASC",
    "exec_result": 1
  },
  {
    "idx": 1101,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT * FROM PilotSkills WHERE age  <  30",
    "pred": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 30",
    "exec_result": 0
  },
  {
    "idx": 1102,
    "db_id": "pilot_1",
    "question": "",
    "gold": "select * from pilotskills where age  <  30",
    "pred": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 30 ORDER BY PilotSkills.age ASC;",
    "exec_result": 0
  },
  {
    "idx": 1103,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'",
    "pred": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35 AND Hangar.plane_name = 'Piper Cub';",
    "exec_result": 1
  },
  {
    "idx": 1104,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'",
    "pred": "SELECT PilotSkills.pilot_name, Hangar.location FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35 AND Hangar.plane_name = 'Piper Cub'",
    "exec_result": 0
  },
  {
    "idx": 1105,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1106,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'",
    "pred": "SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'F-14 Fighter'",
    "exec_result": 0
  },
  {
    "idx": 1107,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM hangar",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1108,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM hangar",
    "pred": "SELECT COUNT(DISTINCT Hangar.location) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name;",
    "exec_result": 0
  },
  {
    "idx": 1109,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1110,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1111,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  >  40",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40",
    "exec_result": 1
  },
  {
    "idx": 1112,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  >  40",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40",
    "exec_result": 1
  },
  {
    "idx": 1113,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'",
    "pred": "SELECT COUNT(DISTINCT PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35 AND Hangar.plane_name = 'B-52 Bomber';",
    "exec_result": 1
  },
  {
    "idx": 1114,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = 'B-52 Bomber' AND age < 35;",
    "exec_result": 0
  },
  {
    "idx": 1115,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills)",
    "exec_result": 1
  },
  {
    "idx": 1116,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills)",
    "exec_result": 1
  },
  {
    "idx": 1117,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1118,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1119,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T2.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1120,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1121,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE plane_name = (SELECT plane_name FROM Hangar WHERE location = 'Chicago')",
    "exec_result": 1
  },
  {
    "idx": 1122,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE plane_name = (SELECT plane_name FROM Hangar WHERE location = 'Chicago')",
    "exec_result": 1
  },
  {
    "idx": 1123,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41",
    "pred": "SELECT T1.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age = 41 AND T2.location = 'Austin'",
    "exec_result": 0
  },
  {
    "idx": 1124,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41",
    "pred": "SELECT T1.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Smith' AND T1.age = 41",
    "exec_result": 1
  },
  {
    "idx": 1125,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT plane_name) FROM pilotskills",
    "pred": "SELECT COUNT(DISTINCT PilotSkills.plane_name) FROM PilotSkills",
    "exec_result": 1
  },
  {
    "idx": 1126,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT plane_name) FROM pilotskills",
    "pred": "SELECT COUNT(DISTINCT Hangar.plane_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name;",
    "exec_result": 0
  },
  {
    "idx": 1127,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'",
    "pred": "SELECT COUNT(DISTINCT PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Smith'",
    "exec_result": 1
  },
  {
    "idx": 1128,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = 'Smith'",
    "exec_result": 1
  },
  {
    "idx": 1129,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE age  >  40",
    "pred": "SELECT COUNT(DISTINCT T1.pilot_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > 40",
    "exec_result": 1
  },
  {
    "idx": 1130,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE age  >  40",
    "pred": "SELECT COUNT(DISTINCT PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > 40",
    "exec_result": 1
  },
  {
    "idx": 1131,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC",
    "exec_result": 1
  },
  {
    "idx": 1132,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC",
    "exec_result": 1
  },
  {
    "idx": 1133,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills ORDER BY age DESC",
    "pred": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC;",
    "exec_result": 1
  },
  {
    "idx": 1134,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills ORDER BY age DESC",
    "pred": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC",
    "exec_result": 1
  },
  {
    "idx": 1135,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar ORDER BY plane_name",
    "pred": "SELECT location FROM Hangar ORDER BY plane_name;",
    "exec_result": 1
  },
  {
    "idx": 1136,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar ORDER BY plane_name",
    "pred": "SELECT T1.location FROM Hangar AS T1 JOIN PilotSkills AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.location ORDER BY T2.pilot_name;",
    "exec_result": 0
  },
  {
    "idx": 1137,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name",
    "pred": "SELECT DISTINCT T1.type FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.type ORDER BY T1.type",
    "exec_result": 0
  },
  {
    "idx": 1138,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name",
    "pred": "SELECT DISTINCT plane_name FROM PilotSkills ORDER BY plane_name;",
    "exec_result": 1
  },
  {
    "idx": 1139,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30",
    "exec_result": 0
  },
  {
    "idx": 1140,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30",
    "exec_result": 0
  },
  {
    "idx": 1141,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30",
    "pred": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age IN (SELECT MIN(age) FROM PilotSkills) AND PilotSkills.age > 35 AND Hangar.location IN ('Seattle', 'Chicago', 'Boston', 'Austin')",
    "exec_result": 0
  },
  {
    "idx": 1142,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30",
    "pred": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age IN (SELECT MIN(age) FROM PilotSkills) AND PilotSkills.plane_name IN ('Piper Cub', 'F-14 Fighter') AND PilotSkills.age < 35 OR PilotSkills.age > 30",
    "exec_result": 0
  },
  {
    "idx": 1143,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT PilotSkills.pilot_name, Hangar.location FROM PilotSkills JOIN Hangar ON PilotSkills.pilot_name = Hangar.pilot_name WHERE Hangar.location IN ('Seattle', 'Chicago', 'Boston', 'Austin') AND Hangar.pilot_name NOT IN ('Piper Cub', 'B-52 Bomber') AND Hangar.pilot_name NOT IN ('Piper Cub', 'B-52 Bomber');",
    "exec_result": 0
  },
  {
    "idx": 1144,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age = (SELECT MIN(age) FROM PilotSkills) AND Hangar.plane_name NOT IN ('B-52 Bomber', 'Piper Cub')",
    "exec_result": 0
  },
  {
    "idx": 1145,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT PilotSkills.pilot_name, Hangar.location FROM PilotSkills JOIN Hangar ON PilotSkills.pilot_name = Hangar.pilot_name WHERE Hangar.location IN ('Seattle', 'Chicago', 'Boston', 'Austin') AND Hangar.location IN ('Piper Cub', 'B-52 Bomber') ORDER BY PilotSkills.pilot_name;",
    "exec_result": 0
  },
  {
    "idx": 1146,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.plane_name IN ('Piper Cub', 'B-52 Bomber') GROUP BY PilotSkills.pilot_name HAVING COUNT(DISTINCT Hangar.location) = 2",
    "exec_result": 1
  },
  {
    "idx": 1147,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) FROM pilotskills",
    "pred": "SELECT AVG(age), MIN(age) FROM PilotSkills",
    "exec_result": 1
  },
  {
    "idx": 1148,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) FROM pilotskills",
    "pred": "SELECT AVG(age), MIN(age) FROM PilotSkills",
    "exec_result": 1
  },
  {
    "idx": 1149,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  \"Boston\"",
    "pred": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location IN ('Austin', 'Boston')",
    "exec_result": 0
  },
  {
    "idx": 1150,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  \"Boston\"",
    "pred": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location IN ('Austin', 'Boston')",
    "exec_result": 0
  },
  {
    "idx": 1151,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'",
    "pred": "SELECT PilotSkills.pilot_name, Hangar.location FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name IN ('Piper Cub', 'F-14 Fighter')",
    "exec_result": 0
  },
  {
    "idx": 1152,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'",
    "pred": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name IN ('Piper Cub', 'F-14 Fighter')",
    "exec_result": 0
  },
  {
    "idx": 1153,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT T2.location, AVG(T1.age) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T2.location",
    "exec_result": 0
  },
  {
    "idx": 1154,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT Hangar.location, AVG(PilotSkills.age) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.location",
    "exec_result": 0
  },
  {
    "idx": 1155,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT Hangar.location, COUNT(PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.location",
    "exec_result": 0
  },
  {
    "idx": 1156,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT Hangar.`plane_name`, COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.`plane_name` = Hangar.`plane_name` GROUP BY Hangar.`plane_name`",
    "exec_result": 0
  },
  {
    "idx": 1157,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name",
    "pred": "SELECT T1.pilot_name, T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age ASC",
    "exec_result": 0
  },
  {
    "idx": 1158,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name",
    "pred": "SELECT DISTINCT T1.plane_name, T2.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age;",
    "exec_result": 0
  },
  {
    "idx": 1159,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT T1.pilot_name, T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name, T1.age ORDER BY T1.age DESC",
    "exec_result": 0
  },
  {
    "idx": 1160,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT T1.plane_name, T2.pilot_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.pilot_name IS NOT NULL GROUP BY T1.plane_name, T2.pilot_name ORDER BY T1.age DESC",
    "exec_result": 0
  },
  {
    "idx": 1161,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name",
    "pred": "SELECT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name",
    "exec_result": 1
  },
  {
    "idx": 1162,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name",
    "pred": "SELECT DISTINCT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name",
    "exec_result": 1
  },
  {
    "idx": 1163,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location",
    "pred": "SELECT location, COUNT(pilot_name) AS num_pilots, AVG(age) AS avg_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY location",
    "exec_result": 1
  },
  {
    "idx": 1164,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location",
    "pred": "SELECT location, COUNT(pilot_name) AS number_of_pilots, AVG(age) AS average_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY location ORDER BY average_age DESC;",
    "exec_result": 1
  },
  {
    "idx": 1165,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35",
    "pred": "SELECT COUNT(DISTINCT PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35;",
    "exec_result": 0
  },
  {
    "idx": 1166,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35",
    "pred": "SELECT T1.plane_name, COUNT(*) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.plane_name HAVING AVG(T1.age) < 35",
    "exec_result": 1
  },
  {
    "idx": 1167,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)",
    "pred": "SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age = (SELECT MIN(age) FROM PilotSkills)",
    "exec_result": 1
  },
  {
    "idx": 1168,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)",
    "pred": "SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1169,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\"",
    "pred": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin';",
    "exec_result": 1
  },
  {
    "idx": 1170,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\"",
    "pred": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin'",
    "exec_result": 1
  },
  {
    "idx": 1171,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name",
    "pred": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > (SELECT MIN(age) FROM PilotSkills) ORDER BY PilotSkills.pilot_name;",
    "exec_result": 0
  },
  {
    "idx": 1172,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age > (SELECT MIN(age) FROM PilotSkills) ORDER BY pilot_name ASC;",
    "exec_result": 1
  },
  {
    "idx": 1173,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')",
    "pred": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE age < (SELECT MIN(age) FROM PilotSkills)",
    "exec_result": 0
  },
  {
    "idx": 1174,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')",
    "pred": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE age < (SELECT MIN(age) FROM PilotSkills)",
    "exec_result": 0
  },
  {
    "idx": 1175,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'",
    "pred": "SELECT DISTINCT Hangar.location FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name LIKE '%Bomber%'",
    "exec_result": 0
  },
  {
    "idx": 1176,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'",
    "pred": "SELECT DISTINCT T2.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age = (SELECT MIN(age) FROM PilotSkills)",
    "exec_result": 0
  },
  {
    "idx": 1177,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')",
    "pred": "SELECT COUNT(DISTINCT PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > (SELECT MIN(PilotSkills.age) FROM PilotSkills)",
    "exec_result": 0
  },
  {
    "idx": 1178,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')",
    "pred": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE pilot_name = (SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills))",
    "exec_result": 0
  },
  {
    "idx": 1179,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM district ORDER BY Area_km DESC LIMIT 1",
    "pred": "SELECT Name FROM district WHERE Area_km = (SELECT MAX(Area_km) FROM district)",
    "exec_result": 1
  },
  {
    "idx": 1180,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT area_km ,  Government_website FROM district ORDER BY Population LIMIT 1",
    "pred": "SELECT `Area_km`, `Government_website` FROM district WHERE Population = (SELECT MIN(Population) FROM district)",
    "exec_result": 1
  },
  {
    "idx": 1181,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  population FROM district WHERE area_km  >  (SELECT avg(area_km) FROM district)",
    "pred": "SELECT d.Name, d.Area_km FROM district AS d WHERE d.Area_km > ( SELECT MAX(d.Area_km) FROM district JOIN district ON d.District_ID = district.District_ID );",
    "exec_result": 0
  },
  {
    "idx": 1182,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT max(area_km) ,  avg(area_km) FROM district",
    "pred": "SELECT MAX(District_area_km), AVG(District_area_km) FROM district JOIN district ON district.District_ID = district.District_ID WHERE District_ID = (SELECT District_ID FROM spokesman WHERE Name = 'Elvis Presley');",
    "exec_result": 0
  },
  {
    "idx": 1183,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT sum(population) FROM district ORDER BY area_km DESC LIMIT 3",
    "pred": "SELECT SUM(Population) FROM district WHERE Area_km IN (SELECT MAX(Area_km) FROM district)",
    "exec_result": 0
  },
  {
    "idx": 1184,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  Government_website ,  district_id FROM district ORDER BY Population",
    "pred": "SELECT district_id, name, government_website FROM district ORDER BY population DESC;",
    "exec_result": 0
  },
  {
    "idx": 1185,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM district WHERE Government_website LIKE \"%gov%\"",
    "pred": "SELECT DISTINCT district.name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID JOIN spokesman ON spokesman_district.Spokesman_ID = spokesman.Spokesman_ID WHERE district.Density_km LIKE '%gov%'",
    "exec_result": 0
  },
  {
    "idx": 1186,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT district_id ,  name FROM district WHERE area_km  >  3000 OR population  >  4000",
    "pred": "SELECT district_id, name FROM district WHERE Population > 4000 OR Area_km > 3000;",
    "exec_result": 1
  },
  {
    "idx": 1187,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  speach_title FROM spokesman",
    "pred": "SELECT Name, speach_title FROM spokesman",
    "exec_result": 1
  },
  {
    "idx": 1188,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT avg(points) ,  avg(age) FROM spokesman WHERE rank_position  =  1",
    "pred": "SELECT AVG(points), AVG(age) FROM spokesman WHERE Rank_position = 1;",
    "exec_result": 1
  },
  {
    "idx": 1189,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  points FROM spokesman WHERE age  <  40",
    "pred": "SELECT S.Name, S.Points FROM spokesman AS S JOIN spokesman_district AS SD ON S.Spokesman_ID = SD.Spokesman_ID WHERE SD.Start_year < 2012 AND S.Age < 40 ORDER BY S.Points DESC;",
    "exec_result": 0
  },
  {
    "idx": 1190,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman ORDER BY age DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Age FROM spokesman AS T1 JOIN spokesman_district AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID WHERE T2.Start_year = (SELECT MIN(T2.Start_year) FROM spokesman_district AS T2)",
    "exec_result": 0
  },
  {
    "idx": 1191,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman WHERE points  <  (SELECT avg(points) FROM spokesman)",
    "pred": "SELECT S.Name, S.Points FROM spokesman AS S JOIN spokesman_district AS SD ON S.Spokesman_ID = SD.Spokesman_ID JOIN district AS D ON SD.District_ID = D.District_ID WHERE SD.Start_year < (SELECT MIN(D.Start_year) FROM district AS D WHERE D.District_ID = SD.District_ID AND D.Points > S.Points) ORDER BY SD.Start_year ASC;",
    "exec_result": 0
  },
  {
    "idx": 1192,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM district AS T1 JOIN spokesman AS T2 ON T1.District_ID = T2.District_ID GROUP BY T1.District_ID ORDER BY COUNT(T2.Speach_ID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1193,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID WHERE t2.start_year  <  2004",
    "pred": "SELECT S.Name, D.Start_year FROM spokesman AS S JOIN spokesman_district AS SD ON S.Spokesman_ID = SD.Spokesman_ID JOIN district AS D ON SD.District_ID = D.District_ID WHERE SD.Start_year < 2004 ORDER BY D.Start_year ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1194,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name ,  count(*) FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID",
    "pred": "SELECT district.Name, COUNT(spokesman_district.Start_year) AS Number_of_spokesmen FROM spokesman_district JOIN district ON spokesman_district.District_ID = district.District_ID GROUP BY district.Name ORDER BY Number_of_spokesmen DESC;",
    "exec_result": 1
  },
  {
    "idx": 1195,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  1 INTERSECT SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  2",
    "pred": "SELECT DISTINCT district.name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID JOIN spokesman ON spokesman_district.Spokesman_ID = spokesman.Spokesman_ID WHERE spokesman.rank_position IN (1, 2)",
    "exec_result": 0
  },
  {
    "idx": 1196,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT district.name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID JOIN spokesman ON spokesman_district.Spokesman_ID = spokesman.Spokesman_ID GROUP BY district.name HAVING COUNT(DISTINCT spokesman.Spokesman_ID) > 1;",
    "exec_result": 1
  },
  {
    "idx": 1197,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT count(*) FROM district WHERE district_id NOT IN (SELECT district_id FROM spokesman_district)",
    "pred": "SELECT COUNT(DISTINCT district_id) FROM spokesman_district WHERE district_id NOT IN (SELECT district_id FROM spokesman)",
    "exec_result": 0
  },
  {
    "idx": 1198,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman WHERE Spokesman_ID NOT IN (SELECT Spokesman_ID FROM spokesman_district)",
    "pred": "SELECT DISTINCT T1.Name FROM spokesman AS T1 JOIN spokesman_district AS T2 ON T1.Spokesman_ID = T2.Spokesman_ID GROUP BY T1.Spokesman_ID HAVING COUNT(DISTINCT T2.District_ID) = 0",
    "exec_result": 0
  },
  {
    "idx": 1199,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT sum(population) ,  avg(population) FROM district WHERE district_id IN (SELECT district_id FROM spokesman_district)",
    "pred": "SELECT SUM(Population), AVG(Population) FROM district WHERE District_ID IN (SELECT District_ID FROM spokesman_district WHERE Rank_position = 1) GROUP BY District_ID;",
    "exec_result": 0
  },
  {
    "idx": 1200,
    "db_id": "art_1",
    "question": "",
    "gold": "select title from sculptures order by year desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1201,
    "db_id": "art_1",
    "question": "",
    "gold": "select title from sculptures order by year desc limit 1",
    "pred": "SELECT Sculptures.title FROM Sculptures JOIN Paintings ON Sculptures.sculptureID = Paintings.sculptureID WHERE Paintings.year = (SELECT MAX(year) FROM Paintings) ORDER BY Sculptures.year DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1202,
    "db_id": "art_1",
    "question": "",
    "gold": "select title ,  location from paintings order by year limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1203,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "SELECT T1.title, T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID ORDER BY T1.year ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1204,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\"",
    "pred": "SELECT T2.title FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.sculptorID WHERE T2.location = 'Gallery 226'",
    "exec_result": 1
  },
  {
    "idx": 1205,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\"",
    "pred": "SELECT T1.title FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.sculptorID WHERE T2.location = 'Gallery 226'",
    "exec_result": 0
  },
  {
    "idx": 1206,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM paintings",
    "pred": "SELECT title, location FROM Paintings;",
    "exec_result": 1
  },
  {
    "idx": 1207,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM paintings",
    "pred": "SELECT DISTINCT T1.title, T2.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID",
    "exec_result": 0
  },
  {
    "idx": 1208,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM sculptures",
    "pred": "SELECT title, location FROM Sculptures;",
    "exec_result": 1
  },
  {
    "idx": 1209,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM sculptures",
    "pred": "SELECT DISTINCT Sculptures.title, Sculptures.location FROM Sculptures JOIN Paintings ON Sculptures.sculptureID = Paintings.sculptureID WHERE Paintings.year = (SELECT MAX(year) FROM Paintings) ORDER BY Sculptures.title;",
    "exec_result": 0
  },
  {
    "idx": 1210,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT medium FROM paintings WHERE paintingID  =  80",
    "pred": "SELECT medium, mediumOn FROM Paintings WHERE paintingID = 80",
    "exec_result": 0
  },
  {
    "idx": 1211,
    "db_id": "art_1",
    "question": "",
    "gold": "select medium from paintings where paintingid  =  80",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1212,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850",
    "pred": "SELECT DISTINCT Artists.fname, Artists.lname FROM Artists WHERE Artists.birthYear > 1850;",
    "exec_result": 1
  },
  {
    "idx": 1213,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850",
    "pred": "SELECT Artists.fname, Artists.lname FROM Artists WHERE Artists.birthYear > 1850;",
    "exec_result": 1
  },
  {
    "idx": 1214,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  YEAR FROM sculptures WHERE LOCATION != \"Gallery 226\"",
    "pred": "SELECT T2.title, T2.year FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.painterID WHERE T2.location != 'Gallery 226' AND T2.painterID IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1215,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  YEAR FROM sculptures WHERE LOCATION != \"Gallery 226\"",
    "pred": "SELECT T2.title, T2.year FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.painterID WHERE T2.location != 'Gallery 226';",
    "exec_result": 0
  },
  {
    "idx": 1216,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900",
    "pred": "SELECT DISTINCT A.fname, A.lname FROM Artists A JOIN Paintings P ON A.artistID = P.artistID WHERE P.year < 1900 ORDER BY P.year ASC, A.fname ASC, A.lname ASC;",
    "exec_result": 0
  },
  {
    "idx": 1217,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900",
    "pred": "SELECT DISTINCT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year < 1900;",
    "exec_result": 0
  },
  {
    "idx": 1218,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920",
    "pred": "SELECT DISTINCT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year > 1920;",
    "exec_result": 0
  },
  {
    "idx": 1219,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920",
    "pred": "SELECT DISTINCT Artists.fname, Artists.lname, Paintings.year FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year > 1920 ORDER BY Artists.birthYear;",
    "exec_result": 0
  },
  {
    "idx": 1220,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "SELECT Artists.fname, Artists.lname FROM Artists JOIN ( SELECT artistID, MIN(birthYear) as min_birth_year FROM Artists GROUP BY artistID ) as min_artist ON Artists.artistID = min_artist.artistID JOIN ( SELECT artistID, MAX(year) as max_year FROM Paintings ) as max_paintings ON Artists.artistID = max_paintings.artistID JOIN ( SELECT artistID, MIN(year) as min_year FROM Sculptures ) as min_sculptures ON Artists.artistID = min_sculptures.artistID WHERE min_artist.min_birth_year = max_paintings.max_year AND min_artist.min_year = min_sculptures.min_year ORDER BY min_artist.min_birth_year DESC, min_artist.min_year DESC;",
    "exec_result": 0
  },
  {
    "idx": 1221,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1222,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1",
    "pred": "SELECT MIN(Age) FROM Artists",
    "exec_result": 0
  },
  {
    "idx": 1223,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1",
    "pred": "SELECT artists.age FROM artists JOIN ( SELECT artistID, MIN(birthYear) AS min_birth_year FROM Artists GROUP BY artistID ) AS min_birth_year ON artists.artistID = min_birth_year.artistID JOIN ( SELECT artistID, MIN(year) AS min_year FROM Paintings GROUP BY artistID ) AS min_year ON artists.artistID = min_year.artistID JOIN ( SELECT artistID, MIN(year) AS min_year FROM Sculptures GROUP BY artistID ) AS min_year ON artists.artistID = min_year.artistID WHERE min_birth_year.min_birth_year = min_year.min_year",
    "exec_result": 0
  },
  {
    "idx": 1224,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "SELECT Artists.fname, Artists.birthYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year = (SELECT MIN(year) FROM Paintings) ORDER BY Artists.birthYear DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1225,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "SELECT Artists.fname, Artists.birthYear FROM Artists WHERE Artists.birthYear = (SELECT MIN(BirthYear) FROM Artists) ORDER BY Artists.birthYear DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1226,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT COUNT(DISTINCT Artists.artistID) FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID JOIN Sculptures ON Paintings.sculptorID = Sculptures.sculptorID WHERE Sculptures.location = 'Gallery 240';",
    "exec_result": 0
  },
  {
    "idx": 1227,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT SUM(T1.height_mm) AS total_height_mm FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.sculptorID WHERE T1.location = 'Gallery 240';",
    "exec_result": 0
  },
  {
    "idx": 1228,
    "db_id": "art_1",
    "question": "",
    "gold": "select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1",
    "pred": "SELECT COUNT(*) FROM Paintings WHERE painterID = (SELECT painterID FROM Artists ORDER BY age DESC LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 1229,
    "db_id": "art_1",
    "question": "",
    "gold": "select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1",
    "pred": "SELECT COUNT(*) AS painting_count FROM Paintings WHERE painter_id = (SELECT painter_id FROM Artists ORDER BY age DESC LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 1230,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"",
    "pred": "SELECT T1.fname, T1.birthYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.artistID WHERE T1.fname = 'Mary';",
    "exec_result": 0
  },
  {
    "idx": 1231,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"",
    "pred": "SELECT T1.title, T1.year FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.fname = 'Mary'",
    "exec_result": 1
  },
  {
    "idx": 1232,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850",
    "pred": "SELECT T1.width_mm FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.birthYear < 1850;",
    "exec_result": 1
  },
  {
    "idx": 1233,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850",
    "pred": "SELECT T1.width_mm FROM Paintings AS T1 JOIN Artists AS T2 ON T2.artistID = T1.painterID WHERE T2.birthYear < 1850",
    "exec_result": 1
  },
  {
    "idx": 1234,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"",
    "pred": "SELECT T1.location, T1.mediumType FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID JOIN Sculptures AS T3 ON T2.artistID = T3.sculptorID WHERE T2.fname = 'Pablo';",
    "exec_result": 0
  },
  {
    "idx": 1235,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"",
    "pred": "SELECT T1.location, T1.medium FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.fname = 'Pablo';",
    "exec_result": 1
  },
  {
    "idx": 1236,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID",
    "pred": "SELECT DISTINCT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Paintings.painterID IS NOT NULL AND Sculptures.sculptorID IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1237,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID",
    "pred": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID",
    "exec_result": 0
  },
  {
    "idx": 1238,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  \"lithograph\"",
    "pred": "SELECT DISTINCT A.fname, A.lname FROM Artists AS A JOIN Paintings AS P ON A.artistID = P.artistID JOIN Sculptures AS S ON A.artistID = S.sculptorID WHERE P.medium = 'lithograph' AND P.mediumOn = 'canvas';",
    "exec_result": 0
  },
  {
    "idx": 1239,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  \"lithograph\"",
    "pred": "SELECT A.fname, A.lname FROM Artists AS A JOIN Paintings AS P ON A.artistID = P.artistID JOIN Sculptures AS S ON A.artistID = S.sculptorID WHERE P.medium = 'oil' AND P.medium = 'lithograph';",
    "exec_result": 0
  },
  {
    "idx": 1240,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"",
    "pred": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year = 1884 AND Paintings.medium = 'canvas';",
    "exec_result": 0
  },
  {
    "idx": 1241,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"",
    "pred": "SELECT T1.birthYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.artistID WHERE T2.year = 1884 AND T1.birthYear = 1884;",
    "exec_result": 0
  },
  {
    "idx": 1242,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT DISTINCT A.fname FROM Artists A JOIN Paintings P ON A.artistID = P.artistID JOIN Sculptures S ON A.artistID = S.sculptorID WHERE P.medium = 'oil' AND S.location = 'Gallery 241' GROUP BY A.artistID HAVING COUNT(DISTINCT P.paintingID) = 1;",
    "exec_result": 0
  },
  {
    "idx": 1243,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT A.fname FROM Artists AS A JOIN Paintings AS P ON A.artistID = P.artistID JOIN Sculptures AS S ON A.artistID = S.sculptorID WHERE P.medium = 'oil' AND P.location = 'Gallery 241';",
    "exec_result": 0
  },
  {
    "idx": 1244,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT medium, COUNT(*) FROM Paintings JOIN Artists ON Paintings.artistID = Artists.artistID GROUP BY medium;",
    "exec_result": 0
  },
  {
    "idx": 1245,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT medium, COUNT(*) FROM Paintings JOIN Artists ON Paintings.artistID = Artists.artistID GROUP BY medium UNION ALL SELECT medium, COUNT(*) FROM Sculptures JOIN Artists ON Sculptures.sculptorID = Artists.artistID GROUP BY medium;",
    "exec_result": 0
  },
  {
    "idx": 1246,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT AVG(height_mm), medium FROM Paintings GROUP BY medium",
    "exec_result": 1
  },
  {
    "idx": 1247,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT AVG(height_mm), medium FROM Paintings GROUP BY medium",
    "exec_result": 1
  },
  {
    "idx": 1248,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION",
    "pred": "SELECT DISTINCT T1.location, COUNT(T1.paintingID) AS num_paintings FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1900 GROUP BY T1.location ORDER BY num_paintings DESC;",
    "exec_result": 1
  },
  {
    "idx": 1249,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION",
    "pred": "SELECT COUNT(DISTINCT Paintings.painterID) AS num_paintings, Paintings.year AS year FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.year < 1900 GROUP BY Paintings.year ORDER BY Paintings.year;",
    "exec_result": 0
  },
  {
    "idx": 1250,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"",
    "pred": "SELECT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year > 1910 AND T1.medium = 'oil';",
    "exec_result": 1
  },
  {
    "idx": 1251,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year > 1910 AND T1.medium = 'oil';",
    "exec_result": 1
  },
  {
    "idx": 1252,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT DISTINCT Paintings.painterID FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.location = 'Gallery 240' AND Paintings.medium = 'oil';",
    "exec_result": 1
  },
  {
    "idx": 1253,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT DISTINCT T2.painterID FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.location = 'Gallery 240' AND T1.medium = 'oil' AND T2.artistID IS NOT NULL AND T1.medium = 'oil' AND T1.location IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1254,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.sculptorID WHERE T1.height_mm > T2.height_mm",
    "exec_result": 0
  },
  {
    "idx": 1255,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.sculptorID WHERE T1.height_mm > T2.height_mm",
    "exec_result": 0
  },
  {
    "idx": 1256,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")",
    "pred": "SELECT DISTINCT paintings.paintingID FROM paintings JOIN Paintings ON paintings.painterID = paintings.painterID WHERE paintings.location = 'Gallery 240' AND paintings.year > paintings.paintingID ORDER BY paintings.paintingID ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1257,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")",
    "pred": "SELECT DISTINCT Paintings.painterID FROM Paintings JOIN ( SELECT painterID FROM Paintings WHERE paintingID IN ( SELECT Sculptures.sculptureID FROM Sculptures WHERE location = 'Gallery 240' ) ) AS older_paintings ON Paintings.painterID = older_paintings.painterID ORDER BY Paintings.painterID;",
    "exec_result": 0
  },
  {
    "idx": 1258,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "SELECT paintingID FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings)",
    "exec_result": 1
  },
  {
    "idx": 1259,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1260,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"",
    "pred": "SELECT T1.lname, T1.fname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.title LIKE '%female%'",
    "exec_result": 1
  },
  {
    "idx": 1261,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"",
    "pred": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.title LIKE '%female%' ORDER BY Paintings.year DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1262,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY title",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID ORDER BY T1.title;",
    "exec_result": 1
  },
  {
    "idx": 1263,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY title",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID ORDER BY T1.title",
    "exec_result": 1
  },
  {
    "idx": 1264,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY height_mm",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID ORDER BY LENGTH(T1.title)",
    "exec_result": 0
  },
  {
    "idx": 1265,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY height_mm",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID ORDER BY T2.height_mm ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1266,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950",
    "pred": "SELECT DISTINCT T1.title, T2.title FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.sculptorID WHERE T1.year >= 1900 AND T1.year <= 1950 AND T2.year >= 1900 AND T2.year <= 1950",
    "exec_result": 0
  },
  {
    "idx": 1267,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950",
    "pred": "SELECT T1.title, T2.title FROM Paintings AS T1 JOIN Sculptures AS T2 ON T1.painterID = T2.sculptorID WHERE T1.year >= 1900 AND T1.year <= 1950 AND T2.year >= 1900 AND T2.year <= 1950",
    "exec_result": 0
  },
  {
    "idx": 1268,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222",
    "pred": "SELECT Painting.title, Sculpture.title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.artistID = 222;",
    "exec_result": 0
  },
  {
    "idx": 1269,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222",
    "pred": "SELECT Painting.title, Sculpture.title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID JOIN Sculptures ON Paintings.sculptorID = Sculptures.sculptorID WHERE Artists.artistID = 222;",
    "exec_result": 0
  },
  {
    "idx": 1270,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT artistID, lname, fname FROM Artists WHERE artistID = ( SELECT artistID FROM ( SELECT artistID, COUNT(*) as count FROM Paintings WHERE year < 1900 GROUP BY artistID ORDER BY count DESC LIMIT 1 ) AS top_paintings JOIN ( SELECT artistID, COUNT(*) as count FROM Sculptures WHERE year < 1900 GROUP BY artistID ORDER BY count DESC LIMIT 1 ) AS top_sculptures ON top_paintings.artistID = top_sculptures.artistID WHERE top_paintings.artistID = top_sculptures.artistID",
    "exec_result": 0
  },
  {
    "idx": 1271,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT artists.artistID, artists.lname, artists.fname FROM artists WHERE artists.artistID = ( SELECT artistID FROM ( SELECT artistID, COUNT(*) as count FROM Paintings WHERE year < 1900 GROUP BY artistID ) AS subquery ORDER BY count DESC LIMIT 1 );",
    "exec_result": 0
  },
  {
    "idx": 1272,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Artists.fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.artistID ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1273,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Artists.fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.artistID ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1274,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800",
    "pred": "SELECT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.height_mm < 600 OR T1.width_mm > 800;",
    "exec_result": 0
  },
  {
    "idx": 1275,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.width_mm < 600 OR T1.height_mm > 800;",
    "exec_result": 1
  },
  {
    "idx": 1276,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930",
    "pred": "SELECT T1.location, T2.year FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1930 OR T1.year > 1885",
    "exec_result": 0
  },
  {
    "idx": 1277,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930",
    "pred": "SELECT DISTINCT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1930 OR T1.year > 1885;",
    "exec_result": 0
  },
  {
    "idx": 1278,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000",
    "pred": "SELECT PaintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;",
    "exec_result": 1
  },
  {
    "idx": 1279,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000",
    "pred": "SELECT PaintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;",
    "exec_result": 1
  },
  {
    "idx": 1280,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\"",
    "pred": "SELECT T1.location, T2.medium FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.medium = 'panel' OR T1.medium = 'canvas';",
    "exec_result": 0
  },
  {
    "idx": 1281,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\"",
    "pred": "SELECT T2.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.medium = 'on panels' OR T1.medium = 'on canvas' GROUP BY T2.location;",
    "exec_result": 0
  },
  {
    "idx": 1282,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930",
    "pred": "SELECT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1930 AND T1.year > 1885",
    "exec_result": 0
  },
  {
    "idx": 1283,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930",
    "pred": "SELECT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1930 AND T1.year > 1885",
    "exec_result": 0
  },
  {
    "idx": 1284,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT AVG(T1.height_mm), AVG(T1.width_mm) FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.medium = 'oil' AND T1.location = 'Gallery 241'",
    "exec_result": 1
  },
  {
    "idx": 1285,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT AVG(T1.height_mm), AVG(T1.width_mm) FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.medium = 'oil' AND T1.location = 'Gallery 241'",
    "exec_result": 1
  },
  {
    "idx": 1286,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900",
    "pred": "SELECT MAX(paintings.height_mm), paintings.painterID FROM Paintings JOIN Artists ON paintings.painterID = Artists.artistID WHERE paintings.year < 1900 ORDER BY paintings.height_mm DESC;",
    "exec_result": 0
  },
  {
    "idx": 1287,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900",
    "pred": "SELECT T1.height_mm, T1.paintingID FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T2.year < 1900 ORDER BY T1.height_mm DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1288,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR",
    "pred": "SELECT T1.year, T1.height_mm, T1.width_mm FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID GROUP BY T1.year",
    "exec_result": 1
  },
  {
    "idx": 1289,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR",
    "pred": "SELECT T1.year, T1.height_mm, T1.width_mm FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T2.painterID IS NULL ORDER BY T1.year DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1290,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title",
    "pred": "SELECT AVG(paintings.height_mm), AVG(paintings.width_mm) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID GROUP BY Artists.artistID ORDER BY Artists.fname;",
    "exec_result": 0
  },
  {
    "idx": 1291,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title",
    "pred": "SELECT AVG(paintings.height_mm), AVG(paintings.width_mm) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID GROUP BY Paintings.painterID ORDER BY Artists.fname ASC, Artists.lname ASC;",
    "exec_result": 0
  },
  {
    "idx": 1292,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2",
    "pred": "SELECT Artists.fname, COUNT(Paintings.paintingID) AS num_paintings FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.fname HAVING COUNT(Paintings.paintingID) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1293,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2",
    "pred": "SELECT a.fname, COUNT(p.paintingID) AS num_paintings FROM Artists a JOIN Paintings p ON a.artistID = p.artistID GROUP BY a.artistID HAVING COUNT(p.paintingID) >= 2",
    "exec_result": 0
  },
  {
    "idx": 1294,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <=  3",
    "pred": "SELECT T1.birthYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.artistID JOIN ( SELECT T3.paintingID FROM Paintings AS T3 JOIN Paintings AS T4 ON T3.paintingID = T4.paintingID WHERE T4.artistID = T1.artistID AND T4.year <= 1973 GROUP BY T3.paintingID HAVING COUNT(T4.paintingID) <= 3 ) AS T3 ON T1.artistID = T3.artistID GROUP BY T1.artistID HAVING COUNT(T2.paintingID) <= 3;",
    "exec_result": 0
  },
  {
    "idx": 1295,
    "db_id": "art_1",
    "question": "",
    "gold": "select t1.deathyear from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid having count(*)  <  4",
    "pred": "SELECT artists.fname, artists.lname, artists.birthYear, artists.deathYear FROM artists WHERE artists.age < 4 ORDER BY artists.deathYear;",
    "exec_result": 0
  },
  {
    "idx": 1296,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T1.birthYear FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T2.sculptorID) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1297,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T2.year FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T2.year) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1298,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1",
    "pred": "SELECT PaintingID, height_mm FROM Paintings WHERE location = 'Gallery 240' ORDER BY width_mm DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1299,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1",
    "pred": "SELECT PaintingID, height_mm FROM Paintings WHERE location = 'Gallery 240' ORDER BY height_mm ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1300,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')",
    "pred": "SELECT DISTINCT paintings.paintingID FROM Paintings JOIN Sculptures ON paintings.painterID = Sculptures.sculptorID WHERE paintings.location = 'Gallery 240' ORDER BY paintings.paintingID LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 1301,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')",
    "pred": "SELECT DISTINCT paintings.paintingID FROM paintings JOIN artists ON paintings.painterID = artists.artistID WHERE paintings.year < (SELECT MIN(year) FROM paintings WHERE paintings.location = 'Gallery 240')",
    "exec_result": 1
  },
  {
    "idx": 1302,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)",
    "pred": "SELECT PaintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900)",
    "exec_result": 1
  },
  {
    "idx": 1303,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)",
    "pred": "SELECT PaintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900)",
    "exec_result": 1
  },
  {
    "idx": 1304,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT a.lname, a.fname, COUNT(*) AS painting_count FROM Artists a JOIN Paintings p ON a.artistID = p.artistID JOIN Sculptures s ON a.artistID = s.sculptorID GROUP BY a.artistID ORDER BY painting_count DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1305,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT Artists.lname, Artists.fname, COUNT(*) AS num_paintings FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.lname, Artists.fname ORDER BY num_paintings DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1306,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR",
    "pred": "SELECT PaintingID, Location, Title FROM Paintings WHERE Medium = 'oil' ORDER BY Year;",
    "exec_result": 1
  },
  {
    "idx": 1307,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR",
    "pred": "SELECT PaintingID, PaintingTitle, PaintingYear, PaintingMedium, PaintingLocation FROM Paintings ORDER BY PaintingYear ASC;",
    "exec_result": 0
  },
  {
    "idx": 1308,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title",
    "pred": "SELECT T1.year, T1.location, T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.height_mm > 1000 ORDER BY T1.title;",
    "exec_result": 1
  },
  {
    "idx": 1309,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title",
    "pred": "SELECT DISTINCT T1.year, T1.location, T1.title FROM Paintings AS T1 JOIN ( SELECT T2.year, T2.location, T2.title FROM Paintings AS T2 WHERE T2.height_mm > 1000 ) AS T3 ON T1.year = T3.year AND T1.location = T3.location ORDER BY T1.title ASC;",
    "exec_result": 1
  },
  {
    "idx": 1310,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID",
    "pred": "SELECT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.artistID WHERE p.painterID IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1311,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID",
    "pred": "SELECT DISTINCT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.title NOT IN ( SELECT Sculptures.title FROM Sculptures WHERE Sculptures.sculptorID = Artists.artistID )",
    "exec_result": 0
  },
  {
    "idx": 1312,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != \"canvas\"",
    "pred": "SELECT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1885 AND T1.mediumOn = 'canvas'",
    "exec_result": 0
  },
  {
    "idx": 1313,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != \"canvas\"",
    "pred": "SELECT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.birthYear < 1885 AND T1.medium = 'canvas'",
    "exec_result": 0
  },
  {
    "idx": 1314,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(*) FROM race",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1315,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(*) FROM race",
    "pred": "SELECT COUNT(*) FROM race;",
    "exec_result": 1
  },
  {
    "idx": 1316,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC",
    "pred": "SELECT T1.Winning_driver, T1.Winning_team FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID ORDER BY T2.Winning_team ASC;",
    "exec_result": 0
  },
  {
    "idx": 1317,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC",
    "pred": "SELECT T1.Winning_driver, T1.Winning_team FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID ORDER BY T2.Winning_team ASC",
    "exec_result": 0
  },
  {
    "idx": 1318,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'",
    "pred": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Pole_Position = 'Junior Strous' AND T1.Driver_Name NOT IN (SELECT T3.Driver_Name FROM driver AS T3 WHERE T3.Driver_Name = 'Junior Strous')",
    "exec_result": 0
  },
  {
    "idx": 1319,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'",
    "pred": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Pole_Position != 'Junior Strous' AND T2.Winning_driver = 'Junior Strous'",
    "exec_result": 0
  },
  {
    "idx": 1320,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC",
    "pred": "SELECT T2.Constructor FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID ORDER BY T1.Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 1321,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC",
    "pred": "SELECT DISTINCT Constructor FROM driver ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 1322,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20",
    "pred": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20",
    "exec_result": 1
  },
  {
    "idx": 1323,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20",
    "pred": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;",
    "exec_result": 1
  },
  {
    "idx": 1324,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT max(Age) ,  min(Age) FROM driver",
    "pred": "SELECT MIN(Age), MAX(Age) FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1325,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT max(Age) ,  min(Age) FROM driver",
    "pred": "SELECT MAX(Age), MIN(Age) FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1326,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20",
    "pred": "SELECT COUNT(DISTINCT Engine) FROM driver WHERE Age > 20 OR Age < 30",
    "exec_result": 0
  },
  {
    "idx": 1327,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20",
    "pred": "SELECT COUNT(DISTINCT engine) FROM driver WHERE age BETWEEN 31 AND 20 OR age > 30 OR age < 20;",
    "exec_result": 1
  },
  {
    "idx": 1328,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "pred": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;",
    "exec_result": 1
  },
  {
    "idx": 1329,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "pred": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "exec_result": 1
  },
  {
    "idx": 1330,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID",
    "pred": "SELECT T1.Driver_Name, T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID;",
    "exec_result": 1
  },
  {
    "idx": 1331,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID",
    "pred": "SELECT T1.Driver_Name, T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID;",
    "exec_result": 1
  },
  {
    "idx": 1332,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID",
    "pred": "SELECT Driver_Name, COUNT(DISTINCT Race_Name) FROM race GROUP BY Driver_Name;",
    "exec_result": 0
  },
  {
    "idx": 1333,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID",
    "pred": "SELECT driver.Name, COUNT(DISTINCT race.Road) AS Race_Count FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_ID",
    "exec_result": 0
  },
  {
    "idx": 1334,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT MIN(Age) FROM race",
    "exec_result": 0
  },
  {
    "idx": 1335,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1336,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT Driver_Name, Age FROM driver WHERE Driver_ID IN ( SELECT Driver_ID FROM race GROUP BY Driver_ID HAVING COUNT(DISTINCT Driver_ID) > 1 )",
    "exec_result": 1
  },
  {
    "idx": 1337,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT Driver_Name, Age FROM driver WHERE Driver_ID IN ( SELECT Driver_ID FROM race GROUP BY Driver_ID HAVING COUNT(DISTINCT Race_ID) > 2 )",
    "exec_result": 0
  },
  {
    "idx": 1338,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26",
    "pred": "SELECT DISTINCT T1.Race_Name FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Age >= 26",
    "exec_result": 1
  },
  {
    "idx": 1339,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26",
    "pred": "SELECT DISTINCT race_name FROM race WHERE Driver_ID IN (SELECT Driver_ID FROM driver WHERE Age >= 26)",
    "exec_result": 1
  },
  {
    "idx": 1340,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != \"Bugatti\"",
    "pred": "SELECT Driver_Name FROM driver WHERE Constructor != 'Bugatti'",
    "exec_result": 1
  },
  {
    "idx": 1341,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != \"Bugatti\"",
    "pred": "SELECT DISTINCT T1.Constructor FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Constructor != 'Bugatti';",
    "exec_result": 0
  },
  {
    "idx": 1342,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR",
    "pred": "SELECT Constructor, COUNT(DISTINCT Driver_ID) AS Driver_count FROM driver GROUP BY Constructor",
    "exec_result": 1
  },
  {
    "idx": 1343,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR",
    "pred": "SELECT Constructor, COUNT(DISTINCT Driver_ID) FROM driver GROUP BY Constructor",
    "exec_result": 1
  },
  {
    "idx": 1344,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1345,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1346,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T2.Engine FROM ( SELECT Driver_ID, COUNT(DISTINCT T2.Engine) AS Engine_Count FROM race GROUP BY Driver_ID ) AS T1 INNER JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Engine_Count > 1",
    "exec_result": 0
  },
  {
    "idx": 1347,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.engine FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(DISTINCT T1.Driver_ID) > 1;",
    "exec_result": 0
  },
  {
    "idx": 1348,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)",
    "pred": "SELECT DISTINCT T1.name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Race_Name NOT IN ('Road Race Showcase/Road America - Race 1', 'Road Race Showcase/Road America - Race 2', 'Rexall Grand Prix of Edmonton - Race 1', 'Rexall Grand Prix of Edmonton - Race 2');",
    "exec_result": 0
  },
  {
    "idx": 1349,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)",
    "pred": "SELECT DISTINCT T1.name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Race_Name NOT IN ('SunRichGourmet.com 1000', 'Sommet des Legends', 'Road Race Showcase/Road America - Race 2', 'Road Race Showcase/Road America - Race 1', 'Rexall Grand Prix of Edmonton - Race 2', 'Rexall Grand Prix of Edmonton - Race 1')",
    "exec_result": 0
  },
  {
    "idx": 1350,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30",
    "pred": "SELECT Constructor FROM driver WHERE Age < 20 INTERSECT SELECT Constructor FROM driver WHERE Age > 30",
    "exec_result": 1
  },
  {
    "idx": 1351,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30",
    "pred": "SELECT T1.Constructor FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age < 20 AND T2.Pole_Position IN ('Jonathan Bomarito', 'James Hinchcliffe', 'Carl Skerlong') AND T1.Age > 30",
    "exec_result": 0
  },
  {
    "idx": 1352,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1",
    "pred": "SELECT T2.Constructor, T2.Engine FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Engine HAVING COUNT(T2.Engine) > 1",
    "exec_result": 0
  },
  {
    "idx": 1353,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1",
    "pred": "SELECT T2.Constructor, COUNT(T1.Race_Name) AS Race_Wins FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Constructor HAVING Race_Wins > 1",
    "exec_result": 0
  },
  {
    "idx": 1354,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"Carl Skerlong\" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT DISTINCT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Pole_Position IN ('James Hinchcliffe', 'Carl Skerlong') AND T1.Driver_Name IN ('James Hinchcliffe', 'Carl Skerlong')",
    "exec_result": 0
  },
  {
    "idx": 1355,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"Carl Skerlong\" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Pole_Position = 'James Hinchcliffe' AND T2.Pole_Position = 'Carl Skerlong'",
    "exec_result": 0
  },
  {
    "idx": 1356,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT DISTINCT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Pole_Position NOT IN ('James Hinchcliffe')",
    "exec_result": 0
  },
  {
    "idx": 1357,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT DISTINCT T1.name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Race_Name NOT IN ('SunRichGourmet.com 1000', 'Rexall Grand Prix of Edmonton - Race 1', 'Rexall Grand Prix of Edmonton - Race 2') AND T2.Pole_Position NOT IN ('James Hinchcliffe');",
    "exec_result": 0
  },
  {
    "idx": 1358,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(*) FROM languages",
    "pred": "SELECT COUNT(language_id) FROM official_languages",
    "exec_result": 0
  },
  {
    "idx": 1359,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(*) FROM languages",
    "pred": "SELECT COUNT(language_id) FROM official_languages",
    "exec_result": 0
  },
  {
    "idx": 1360,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages ORDER BY name ASC",
    "pred": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id ORDER BY T2.name ASC",
    "exec_result": 0
  },
  {
    "idx": 1361,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages ORDER BY name ASC",
    "pred": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id ORDER BY T2.name",
    "exec_result": 0
  },
  {
    "idx": 1362,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE name LIKE \"%ish%\"",
    "pred": "SELECT DISTINCT l.name FROM languages AS l JOIN official_languages AS ol ON l.id = ol.language_id WHERE l.name LIKE '%ish%'",
    "exec_result": 0
  },
  {
    "idx": 1363,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE name LIKE \"%ish%\"",
    "pred": "SELECT DISTINCT T1.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id WHERE T2.name LIKE '%ish%';",
    "exec_result": 0
  },
  {
    "idx": 1364,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY overall_score DESC",
    "pred": "-- Show the names of countries in descending order of overall scores. SELECT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id WHERE official_languages.language_id = (SELECT id FROM languages WHERE name = 'Swedish');",
    "exec_result": 0
  },
  {
    "idx": 1365,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY overall_score DESC",
    "pred": "SELECT countries.name, countries.overall_score FROM countries JOIN official_languages ON countries.id = official_languages.country_id ORDER BY countries.overall_score DESC;",
    "exec_result": 0
  },
  {
    "idx": 1366,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(justice_score) FROM countries",
    "pred": "SELECT AVG(T2.judgment_score) FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T2.id IN (SELECT T1.country_id FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T1.judgment_score IS NOT NULL GROUP BY T1.country_id HAVING COUNT(T1.judgment_score) > 1);",
    "exec_result": 0
  },
  {
    "idx": 1367,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(justice_score) FROM countries",
    "pred": "SELECT AVG(official_languages.language_id) AS average_judicial_score FROM official_languages",
    "exec_result": 0
  },
  {
    "idx": 1368,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != \"Norway\"",
    "pred": "SELECT max(health_score), min(health_score) FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)",
    "exec_result": 0
  },
  {
    "idx": 1369,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != \"Norway\"",
    "pred": "SELECT MIN(official_languages.health_score), MAX(official_languages.health_score) FROM official_languages WHERE official_languages.country_id NOT IN ('Norway') ORDER BY official_languages.health_score ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1370,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(DISTINCT language_id) FROM official_languages",
    "pred": "SELECT COUNT(DISTINCT language_id) FROM official_languages",
    "exec_result": 1
  },
  {
    "idx": 1371,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(DISTINCT language_id) FROM official_languages",
    "pred": "SELECT COUNT(DISTINCT language_id) FROM official_languages",
    "exec_result": 1
  },
  {
    "idx": 1372,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY education_score DESC",
    "pred": "SELECT T1.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id JOIN languages AS T3 ON T2.language_id = T3.id ORDER BY T3.education_score DESC;",
    "exec_result": 0
  },
  {
    "idx": 1373,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY education_score DESC",
    "pred": "SELECT countries.name, countries.overall_score FROM countries JOIN official_languages ON countries.id = official_languages.country_id WHERE official_languages.language_id = (SELECT language_id FROM languages WHERE name = 'English') ORDER BY countries.overall_score DESC;",
    "exec_result": 0
  },
  {
    "idx": 1374,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1",
    "pred": "SELECT T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T1.language_id = ( SELECT T3.language_id FROM languages AS T3 WHERE T3.name = 'Politcal' )",
    "exec_result": 0
  },
  {
    "idx": 1375,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1",
    "pred": "SELECT T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T1.language_id = ( SELECT T3.language_id FROM languages AS T3 JOIN official_languages AS T4 ON T4.language_id = T3.id WHERE T3.name = 'Politik' )",
    "exec_result": 0
  },
  {
    "idx": 1376,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id",
    "pred": "SELECT countries.name, languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id;",
    "exec_result": 1
  },
  {
    "idx": 1377,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id",
    "pred": "SELECT countries.name, languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id",
    "exec_result": 1
  },
  {
    "idx": 1378,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name",
    "pred": "SELECT T1.name, COUNT(T2.id) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id GROUP BY T1.name;",
    "exec_result": 0
  },
  {
    "idx": 1379,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name",
    "pred": "SELECT T1.name AS official_language_name, COUNT(T2.id) AS number_of_countries FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN languages AS T3 ON T1.language_id = T3.id GROUP BY T1.name ORDER BY number_of_countries DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 1380,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.name, COUNT(*) FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id GROUP BY T1.country_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1381,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.name, T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T2.id = (SELECT T1.country_id FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id GROUP BY T1.country_id ORDER BY COUNT(*) DESC LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 1382,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2",
    "pred": "SELECT T1.name, COUNT(*) FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN languages AS T3 ON T1.language_id = T3.id GROUP BY T1.name HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 1383,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.language_id, T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN languages AS T3 ON T1.language_id = T3.id GROUP BY T1.language_id HAVING COUNT(T2.id) > 1",
    "exec_result": 0
  },
  {
    "idx": 1384,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  \"English\"",
    "pred": "SELECT T1.overall_score FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id WHERE T2.language_id = (SELECT id FROM languages WHERE name = 'English')",
    "exec_result": 0
  },
  {
    "idx": 1385,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  \"English\"",
    "pred": "SELECT AVG(overall_score) FROM countries WHERE overall_score = (SELECT MIN(overall_score) FROM countries)",
    "exec_result": 0
  },
  {
    "idx": 1386,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3",
    "pred": "SELECT l.name, COUNT(*) AS count FROM official_languages AS l JOIN countries AS c ON l.country_id = c.id JOIN languages AS l1 ON l.language_id = l1.id WHERE l1.id IN ( SELECT l2.id FROM official_languages AS l2 JOIN countries AS c2 ON l2.country_id = c2.id WHERE c2.name = 'Sweden' ) GROUP BY l.name ORDER BY count DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1387,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3",
    "pred": "SELECT languages.name, COUNT(countries.id) AS country_count FROM languages JOIN official_languages ON languages.id = official_languages.language_id JOIN countries ON official_languages.country_id = countries.id GROUP BY languages.name ORDER BY country_count DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1388,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC",
    "pred": "SELECT T1.name, AVG(T2.overall_score) AS average_overall_score FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN languages AS T3 ON T1.language_id = T3.id GROUP BY T1.country_id ORDER BY average_overall_score DESC;",
    "exec_result": 0
  },
  {
    "idx": 1389,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC",
    "pred": "SELECT T1.name, AVG(T2.overall_score) AS average_overall_score FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id = T2.id GROUP BY T1.name ORDER BY average_overall_score DESC;",
    "exec_result": 0
  },
  {
    "idx": 1390,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN languages AS T3 ON T1.language_id = T3.id WHERE T3.id IS NOT NULL ORDER BY COUNT(T1.language_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1391,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.name, COUNT(T2.language_id) AS num_of_languages FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN languages AS T3 ON T1.language_id = T3.id GROUP BY T1.country_id ORDER BY num_of_languages DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1392,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)",
    "pred": "SELECT T1.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T2.id NOT IN (SELECT T2.id FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id)",
    "exec_result": 0
  },
  {
    "idx": 1393,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)",
    "pred": "SELECT DISTINCT l.name FROM official_languages AS l JOIN countries AS c ON l.country_id = c.id WHERE c.id NOT IN (SELECT country_id FROM official_languages);",
    "exec_result": 0
  },
  {
    "idx": 1394,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)",
    "pred": "SELECT DISTINCT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id WHERE official_languages.language_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1395,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)",
    "pred": "SELECT DISTINCT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id WHERE official_languages.language_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1396,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90",
    "pred": "SELECT T1.name, T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id JOIN official_languages AS T3 ON T3.country_id = T2.id JOIN countries AS T4 ON T3.country_id = T4.id JOIN official_languages AS T5 ON T5.country_id = T4.id JOIN countries AS T6 ON T5.country_id = T6.id WHERE T1.language_id IN (SELECT T3.language_id FROM official_languages AS T3 JOIN countries AS T4 ON T3.country_id = T4.id WHERE T3.overall_score > 95) AND T1.language_id IN (SELECT T5.language_id FROM official_languages AS T5 JOIN countries AS T6 ON T5.country_id = T6.id WHERE T5.overall_score < 90)",
    "exec_result": 0
  },
  {
    "idx": 1397,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90",
    "pred": "SELECT T1.name, T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id WHERE T2.overall_score > 95 AND T2.overall_score < 90;",
    "exec_result": 0
  },
  {
    "idx": 1398,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT country ,  town_city FROM Addresses;",
    "pred": "SELECT DISTINCT county_state_province, town_city FROM Addresses;",
    "exec_result": 0
  },
  {
    "idx": 1399,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT country ,  town_city FROM Addresses;",
    "pred": "SELECT town_city, county_state_province FROM Addresses",
    "exec_result": 0
  },
  {
    "idx": 1400,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1401,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;",
    "pred": "state_province: Over 60 years of age. county_state_province: Oklahoma",
    "exec_result": 0
  },
  {
    "idx": 1402,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';",
    "pred": "SELECT T2.feature_name, T2.feature_description FROM properties AS T1 JOIN property_features AS T2 ON T1.property_id = T2.property_id WHERE T1.property_name = 'rooftop';",
    "exec_result": 0
  },
  {
    "idx": 1403,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1404,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1405,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT T1.feature_name, T1.feature_description FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1406,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT min(room_count) FROM Properties;",
    "pred": "SELECT MIN(room_size) AS min_rooms FROM Rooms JOIN Properties ON Rooms.property_id = Properties.property_id;",
    "exec_result": 0
  },
  {
    "idx": 1407,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT min(room_count) FROM Properties;",
    "pred": "SELECT MIN(room_count) FROM Properties;",
    "exec_result": 1
  },
  {
    "idx": 1408,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;",
    "pred": "SELECT COUNT(*) FROM Properties WHERE property_type_code = 'parking' OR property_type_code = 'garage'",
    "exec_result": 0
  },
  {
    "idx": 1409,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;",
    "pred": "SELECT COUNT(*) FROM Properties WHERE property_type_code = 'parking' OR property_type_code = 'garage'",
    "exec_result": 0
  },
  {
    "idx": 1410,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE \"%Mother\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1411,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE \"%Mother\";",
    "pred": "SELECT age_category_code FROM Ref_Age_Categories WHERE age_category_description LIKE '%Mother%'",
    "exec_result": 0
  },
  {
    "idx": 1412,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Users.first_name FROM Users JOIN ( SELECT user_id, COUNT(*) as property_count FROM User_Property_History GROUP BY user_id ORDER BY property_count DESC LIMIT 1 ) AS property_count_users ON Users.user_id = property_count_users.user_id",
    "exec_result": 0
  },
  {
    "idx": 1413,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1414,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';",
    "pred": "SELECT AVG(T1.room_count) FROM Properties AS T1 JOIN Rooms AS T2 ON T1.property_id = T2.property_id JOIN Ref_Room_Types AS T3 ON T2.room_type_code = T3.room_type_code WHERE T1.property_type_code = 'garden';",
    "exec_result": 0
  },
  {
    "idx": 1415,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';",
    "pred": "SELECT AVG(T2.room_size) FROM Properties AS T1 JOIN Rooms AS T2 ON T1.property_id = T2.property_id WHERE T1.property_type_code = 'garden' GROUP BY T1.property_type_code",
    "exec_result": 0
  },
  {
    "idx": 1416,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';",
    "pred": "SELECT T1.town_city FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id = T2.property_id JOIN Rooms AS T3 ON T2.room_id = T3.room_id WHERE T3.room_type_code = 'swimming pool' GROUP BY T1.town_city HAVING COUNT(T2.photo_seq) > 0;",
    "exec_result": 0
  },
  {
    "idx": 1417,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1418,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;",
    "pred": "SELECT Properties.property_id, Properties.price_min FROM Properties WHERE Properties.price_min = (SELECT MIN(price_min) FROM Properties) ORDER BY Properties.price_min ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1419,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;",
    "pred": "SELECT Properties.property_id, Properties.price_min FROM Properties JOIN Property_Features ON Properties.property_id = Property_Features.property_id JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id JOIN Rooms ON Properties.property_id = Rooms.property_id JOIN User_Property_History ON Properties.property_id = User_Property_History.property_id JOIN User_Searches ON User_Property_History.user_id = User_Searches.user_id WHERE User_Searches.search_string = 'vendor requested price' ORDER BY Properties.price_min LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1420,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(room_count) FROM Properties;",
    "pred": "SELECT AVG(room_size) FROM Rooms",
    "exec_result": 0
  },
  {
    "idx": 1421,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(room_count) FROM Properties;",
    "pred": "SELECT AVG(rooms.room_size) FROM Rooms AS rooms JOIN Properties AS properties ON rooms.property_id = properties.property_id",
    "exec_result": 0
  },
  {
    "idx": 1422,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(DISTINCT room_size) FROM Rooms;",
    "pred": "SELECT COUNT(DISTINCT room_size) FROM Rooms",
    "exec_result": 1
  },
  {
    "idx": 1423,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(DISTINCT room_size) FROM Rooms;",
    "pred": "SELECT COUNT(DISTINCT room_size) AS num_of_room_sizes FROM Rooms",
    "exec_result": 1
  },
  {
    "idx": 1424,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;",
    "pred": "SELECT Users.user_id, Users.login_name, Users.password FROM Users JOIN ( SELECT user_id, COUNT(*) as search_count FROM User_Searches GROUP BY user_id HAVING COUNT(*) > 1 ) AS search_counts ON Users.user_id = search_counts.user_id ORDER BY search_counts.search_count DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 1425,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;",
    "pred": "SELECT DISTINCT Users.user_id, User_Searches.search_seq FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id GROUP BY Users.user_id, User_Searches.search_seq HAVING COUNT(User_Searches.search_seq) > 1;",
    "exec_result": 0
  },
  {
    "idx": 1426,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT max(search_datetime) FROM User_Searches;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1427,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT max(search_datetime) FROM User_Searches;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1428,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1429,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1430,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1431,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1432,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1433,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;",
    "pred": "SELECT Users.user_id, Users.age_category_code FROM Users JOIN ( SELECT user_id, COUNT(*) as count FROM User_Searches GROUP BY user_id HAVING COUNT(*) = 1 ) AS subquery ON Users.user_id = subquery.user_id",
    "exec_result": 0
  },
  {
    "idx": 1434,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1435,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;",
    "pred": "SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id = T2.user_id WHERE T2.search_string = 'repellat' ORDER BY T2.search_datetime ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1436,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name",
    "pred": "SELECT `login_name` FROM Users WHERE age_category_code = 'Senior Citizen' ORDER BY `first_name`",
    "exec_result": 0
  },
  {
    "idx": 1437,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name",
    "pred": "SELECT `login_name` FROM Users WHERE age_category_code = 'Senior Citizen' ORDER BY `first_name`",
    "exec_result": 0
  },
  {
    "idx": 1438,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;",
    "pred": "SELECT SUM(CASE WHEN User_Property_History.search_string LIKE '%buyer%' THEN 1 ELSE 0 END) AS total_searches FROM User_Property_History JOIN Properties ON User_Property_History.property_id = Properties.property_id WHERE User_Property_History.search_string LIKE '%buyer%'",
    "exec_result": 0
  },
  {
    "idx": 1439,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;",
    "pred": "SELECT COUNT(*) FROM User_Searches WHERE user_id IN (SELECT user_id FROM Users WHERE is_buyer = 1)",
    "exec_result": 1
  },
  {
    "idx": 1440,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT date_registered FROM Users WHERE login_name  =  'ratione';",
    "pred": "SELECT date_registered FROM Users WHERE login_name = 'Ratione'",
    "exec_result": 0
  },
  {
    "idx": 1441,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT date_registered FROM Users WHERE login_name  =  'ratione';",
    "pred": "SELECT date_registered FROM Users WHERE login_name = 'Ratione'",
    "exec_result": 0
  },
  {
    "idx": 1442,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1443,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1444,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';",
    "pred": "SELECT T1.`address_id`, T1.`line_1_number_building`, T1.`town_city` FROM Addresses AS T1 JOIN Properties AS T2 ON T1.`address_id` = T2.`property_id` JOIN User_Property_History AS T3 ON T2.`property_id` = T3.`property_id` JOIN Users AS T4 ON T3.`user_id` = T4.`user_id` JOIN Properties AS T5 ON T2.`property_id` = T5.`property_id` JOIN Rooms AS T6 ON T5.`property_id` = T6.`property_id` JOIN User_Searches AS T7 ON T6.`property_id` = T7.`property_id` WHERE T4.`age_category_code` = 'Senior Citizen' AND T4.`user_category_code` = 'Senior Citizen' ORDER BY T1.`town_city` ASC;",
    "exec_result": 0
  },
  {
    "idx": 1445,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';",
    "pred": "SELECT T1.address_id, T1.line_1_number_building, T1.line_2_number_street, T1.town_city, T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id = T2.property_id JOIN User_Property_History AS T3 ON T2.property_id = T3.property_id JOIN Properties AS T4 ON T2.property_id = T4.property_id JOIN Rooms AS T5 ON T4.property_id = T5.property_id JOIN User_Searches AS T6 ON T4.user_id = T6.user_id WHERE T3.search_string LIKE '%senior citizen%' ORDER BY T1.zip_postcode;",
    "exec_result": 0
  },
  {
    "idx": 1446,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;",
    "pred": "SELECT COUNT(DISTINCT Property_ID) FROM Properties WHERE property_id IN ( SELECT property_id FROM Property_Features GROUP BY property_id HAVING COUNT(feature_id) >= 2 )",
    "exec_result": 0
  },
  {
    "idx": 1447,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;",
    "pred": "SELECT COUNT(DISTINCT Property_ID) AS count FROM Properties WHERE Property_ID IN ( SELECT property_id FROM Property_Features GROUP BY property_id HAVING COUNT(feature_id) >= 2 )",
    "exec_result": 0
  },
  {
    "idx": 1448,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;",
    "pred": "SELECT Properties.property_id, COUNT(*) AS photo_count FROM Properties JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Properties.property_id",
    "exec_result": 1
  },
  {
    "idx": 1449,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;",
    "pred": "SELECT Properties.property_id, COUNT(*) AS photo_count FROM Property_Photos JOIN Properties ON Property_Photos.property_id = Properties.property_id GROUP BY Properties.property_id;",
    "exec_result": 1
  },
  {
    "idx": 1450,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;",
    "pred": "SELECT Users.user_id, COUNT(*) AS photo_count FROM Properties JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id JOIN Rooms ON Properties.property_id = Rooms.property_id JOIN User_Property_History ON Properties.property_id = User_Property_History.property_id JOIN Users ON User_Property_History.user_id = Users.user_id GROUP BY Users.user_id",
    "exec_result": 0
  },
  {
    "idx": 1451,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1452,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';",
    "pred": "SELECT MAX(price_max) FROM Properties WHERE owner_user_id IN (SELECT user_id FROM Users WHERE user_category_code IN ('1', '2'))",
    "exec_result": 0
  },
  {
    "idx": 1453,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';",
    "pred": "SELECT T1.price_max FROM Properties AS T1 JOIN User_Property_History AS T2 ON T1.property_id = T2.property_id JOIN Properties AS T3 ON T1.property_id = T3.property_id JOIN User_Searches AS T4 ON T2.user_id = T4.user_id JOIN Users AS T5 ON T4.user_id = T5.user_id WHERE T5.user_category_code = '1' AND T5.user_category_code = '1'",
    "exec_result": 0
  },
  {
    "idx": 1454,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;",
    "pred": "SELECT U.search_seq AS search_seq, U.search_string AS search_string, U.datestamp AS datestamp, P.property_name AS property_name FROM User_Searches AS U JOIN Properties AS P ON U.property_id = P.property_id WHERE P.property_type_code = 'house' -- Assuming 'house' is the property type code AND U.search_string LIKE '%25%' -- Filtering by property name containing '25%' or '25-60' ORDER BY U.search_seq;",
    "exec_result": 0
  },
  {
    "idx": 1455,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1456,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1457,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT T1.property_type_description, COUNT(T2.property_id) AS number_of_properties FROM Properties AS T1 JOIN Property_Features AS T2 ON T1.property_id = T2.property_id JOIN Ref_Room_Types AS T3 ON T1.property_id = T3.property_id JOIN Ref_Room_Types AS T4 ON T3.room_type_code = T4.room_type_code JOIN Rooms AS T5 ON T4.room_type_code = T5.room_type_code JOIN Properties AS T6 ON T5.property_id = T6.property_id JOIN User_Property_History AS T7 ON T6.property_id = T7.property_id JOIN User_Searches AS T8 ON T6.user_id = T8.user_id WHERE T1.property_id = T7.property_id GROUP BY T1.property_type_description ORDER BY number_of_properties DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1458,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';",
    "pred": "SELECT T1.age_category_description FROM Ref_Age_Categories AS T1 JOIN Ref_Age_Categories AS T2 ON T1.age_category_code = T2.age_category_code WHERE T1.age_category_code = 'Over 60' ORDER BY T1.age_category_code LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1459,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';",
    "pred": "SELECT T2.age_category_description FROM Ref_Age_Categories AS T1 JOIN Ref_Age_Categories AS T2 ON T1.age_category_code = T2.age_category_code WHERE T1.age_category_description = 'Over 60'",
    "exec_result": 0
  },
  {
    "idx": 1460,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size",
    "pred": "SELECT room_size, COUNT(room_size) AS count FROM Rooms GROUP BY room_size;",
    "exec_result": 1
  },
  {
    "idx": 1461,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size",
    "pred": "SELECT room_size, COUNT(*) AS room_count FROM Rooms GROUP BY room_size;",
    "exec_result": 1
  },
  {
    "idx": 1462,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';",
    "pred": "SELECT T1.country FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id = T2.user_id JOIN Properties AS T3 ON T2.property_id = T3.property_id JOIN Rooms AS T4 ON T3.property_id = T4.property_id JOIN Addresses AS T5 ON T4.property_id = T5.property_id JOIN Ref_Age_Categories AS T6 ON T5.town_city = T6.age_category_code WHERE T1.first_name = 'Robbie' ORDER BY T2.search_datetime DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1463,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1464,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1465,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;",
    "pred": "SELECT Users.first_name, Users.middle_name, Users.last_name FROM Users JOIN Addresses ON Users.user_address_id = Addresses.user_address_id JOIN Properties ON Addresses.property_id = Properties.property_id JOIN Property_Features ON Properties.property_id = Property_Features.property_id JOIN Rooms ON Properties.property_id = Rooms.property_id JOIN User_Property_History ON Properties.property_id = User_Property_History.property_id JOIN User_Searches ON User_Property_History.user_id = User_Searches.user_id WHERE Users.user_address_id IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1466,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;",
    "pred": "SELECT DISTINCT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.property_id = T2.property_id JOIN Rooms AS T3 ON T2.property_id = T3.property_id WHERE T2.property_type_code = 'house' AND T3.room_type_code = 'single' AND T1.search_string NOT IN ( SELECT T2.search_string FROM Properties AS T2 JOIN Rooms AS T3 ON T2.property_id = T3.property_id WHERE T2.property_type_code = 'house' AND T3.room_type_code = 'single' )",
    "exec_result": 0
  },
  {
    "idx": 1467,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1468,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1469,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;",
    "pred": "SELECT T1.first_name, T1.user_id FROM Users AS T1 JOIN ( SELECT user_id, COUNT(*) as count FROM User_Property_History WHERE datestamp >= '2015-01-01' AND datestamp <= '2016-01-01' GROUP BY user_id HAVING COUNT(*) <= 2 ) AS T2 ON T1.user_id = T2.user_id JOIN ( SELECT property_id, COUNT(*) as count FROM Properties WHERE datestamp >= '2015-01-01' AND datestamp <= '2016-01-01' GROUP BY property_id HAVING COUNT(*) >= 2 ) AS T3 ON T1.property_id = T3.property_id WHERE T2.count <= 2 OR T3.count <= 2 ORDER BY T1.user_id;",
    "exec_result": 0
  },
  {
    "idx": 1470,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(*) FROM bike WHERE weight  >  780",
    "pred": "SELECT COUNT(*) FROM bike WHERE weight > 780;",
    "exec_result": 1
  },
  {
    "idx": 1471,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT product_name ,  weight FROM bike ORDER BY price ASC",
    "pred": "SELECT product_name, weight FROM bike ORDER BY price ASC",
    "exec_result": 1
  },
  {
    "idx": 1472,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT heat ,  name ,  nation FROM cyclist",
    "pred": "SELECT heat, name, nation FROM cyclist",
    "exec_result": 1
  },
  {
    "idx": 1473,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT max(weight) ,  min(weight) FROM bike",
    "pred": "SELECT MAX(weight), MIN(weight) FROM bike;",
    "exec_result": 1
  },
  {
    "idx": 1474,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT avg(price) FROM bike WHERE material  =  'Carbon CC'",
    "pred": "SELECT AVG(price) FROM bike WHERE material = 'Carbon CC'",
    "exec_result": 1
  },
  {
    "idx": 1475,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM cyclist WHERE nation != 'Russia'",
    "pred": "SELECT T1.name, T1.result FROM cyclists AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id WHERE T2.purchase_year NOT IN (SELECT T1.purchase_year FROM cyclists AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id WHERE T2.cyclist_id NOT IN (SELECT DISTINCT T1.id FROM cyclists AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id WHERE T2.purchase_year = T1.purchase_year))",
    "exec_result": 0
  },
  {
    "idx": 1476,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id WHERE T2.purchase_year  >  2015",
    "pred": "SELECT DISTINCT bike_id, product_name FROM bikes WHERE purchase_year > 2015",
    "exec_result": 0
  },
  {
    "idx": 1477,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id GROUP BY T1.id HAVING count(*)  >=  4",
    "pred": "SELECT bike_id, bike.product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclists ON cyclists_own_bikes.cyclist_id = cyclists.id WHERE cyclists_own_bikes.purchase_year >= 2017 AND cyclists_own_bikes.purchase_year <= 2018 AND cyclists_id IN (SELECT cyclist_id FROM cyclists WHERE result = '4:26.644') GROUP BY bike_id, bike.product_name HAVING COUNT(*) >= 4;",
    "exec_result": 0
  },
  {
    "idx": 1478,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT bike_id, name FROM cyclists_own_bikes WHERE purchase_year = ( SELECT MIN(purchase_year) FROM ( SELECT bike_id, name FROM cyclists_own_bikes JOIN bike ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclist.id = bike.cyclist_id WHERE bike.product_name = 'Ibis ||' GROUP BY bike_id, name ORDER BY bike_id, name ASC ) )",
    "exec_result": 0
  },
  {
    "idx": 1479,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.nation  =  'Russia' OR T1.nation  =  'Great Britain'",
    "pred": "SELECT DISTINCT T1.product_name FROM bike AS T1 JOIN cyclists AS T2 ON T1.id = T2.bike_id WHERE T2.nation IN ('Russia', 'Great Britain');",
    "exec_result": 0
  },
  {
    "idx": 1480,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(DISTINCT heat) FROM cyclist",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1481,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(*) FROM cyclist WHERE id NOT IN ( SELECT cyclist_id FROM cyclists_own_bikes WHERE purchase_year  >  2015 )",
    "pred": "SELECT COUNT(*) FROM cyclists_own_bikes WHERE purchase_year NOT IN (SELECT purchase_year FROM bike WHERE id IN (SELECT bike_id FROM cyclists_own_bikes WHERE purchase_year >= 2015))",
    "exec_result": 0
  },
  {
    "idx": 1482,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.result  <  '4:21.558'",
    "pred": "SELECT DISTINCT T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id WHERE T2.result > '4:21.558' ORDER BY T2.purchase_year ASC",
    "exec_result": 0
  },
  {
    "idx": 1483,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Bradley Wiggins' INTERSECT SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Antonio Tauler'",
    "pred": "SELECT T1.product_name, T1.price FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id JOIN cyclists AS T3 ON T2.cyclist_id = T3.id WHERE T3.name = 'Bradley Wiggins' AND T3.name = 'Antonio Tauler';",
    "exec_result": 0
  },
  {
    "idx": 1484,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT name ,  nation ,  RESULT FROM cyclist EXCEPT SELECT T1.name ,  T1.nation ,  T1.result FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id",
    "pred": "SELECT T1.name, T1.nation, T1.result FROM cyclists AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.cyclist_id WHERE T2.bike_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 1485,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT product_name FROM bike WHERE material LIKE \"%fiber%\"",
    "pred": "SELECT T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id WHERE T2.material LIKE '%fiber%'",
    "exec_result": 0
  },
  {
    "idx": 1486,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT cyclist_id ,  count(*) FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY cyclist_id",
    "pred": "SELECT cyclist.name, COUNT(bike_id) AS bike_count FROM cyclists_own_bikes AS cyclists_own_bikes JOIN bike AS bike ON cyclists_own_bikes.bike_id = bike.id GROUP BY cyclist.name ORDER BY bike_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 1487,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY price DESC LIMIT 1",
    "pred": "SELECT T2.Flavor, T2.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item ORDER BY T2.Price DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1488,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY price DESC LIMIT 1",
    "pred": "SELECT T1.Item, T1.Flavor FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Price = (SELECT MIN(Price) FROM goods);",
    "exec_result": 0
  },
  {
    "idx": 1489,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cookie\" ORDER BY price LIMIT 1",
    "pred": "SELECT T2.Flavor, T2.Food FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item ORDER BY T2.Price DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1490,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cookie\" ORDER BY price LIMIT 1",
    "pred": "SELECT T1.Item, T1.Flavor FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Price = (SELECT MIN(Price) FROM goods);",
    "exec_result": 0
  },
  {
    "idx": 1491,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
    "pred": "SELECT Id FROM goods WHERE flavor = 'Apple'",
    "exec_result": 1
  },
  {
    "idx": 1492,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1493,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  <  3",
    "pred": "SELECT Item.Id FROM items JOIN goods ON items.Item = goods.Id WHERE goods.Price < 3",
    "exec_result": 0
  },
  {
    "idx": 1494,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  <  3",
    "pred": "SELECT Id FROM goods WHERE Price < 3;",
    "exec_result": 1
  },
  {
    "idx": 1495,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  \"Lemon\" AND T1.Food  =  \"Cake\"",
    "pred": "SELECT DISTINCT T1.Id FROM ( SELECT DISTINCT T1.Id FROM customers AS T1 JOIN items AS T2 ON T1.Id = T2.CustomerId JOIN goods AS T3 ON T2.ItemId = T3.Id WHERE T3.Flavor = 'Lemon' ) AS T4 JOIN customers AS T5 ON T4.Id = T5.Id ORDER BY T5.Id ASC;",
    "exec_result": 0
  },
  {
    "idx": 1496,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  \"Lemon\" AND T1.Food  =  \"Cake\"",
    "pred": "SELECT DISTINCT T1.id FROM ( SELECT DISTINCT T1.id FROM customers AS T1 INNER JOIN items AS T2 ON T1.id = T2.CustomerId INNER JOIN goods AS T3 ON T2.ItemId = T3.Id WHERE T3.Flavor = 'Lemon' ) AS T4 JOIN customers AS T5 ON T4.id = T5.id ORDER BY T4.id ASC;",
    "exec_result": 0
  },
  {
    "idx": 1497,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food",
    "pred": "SELECT T2.Flavor, COUNT(T1.CustomerId) FROM items AS T1 JOIN goods AS T2 ON T1.ItemId = T2.Id JOIN customers AS T3 ON T1.CustomerId = T3.Id GROUP BY T2.Flavor",
    "exec_result": 0
  },
  {
    "idx": 1498,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food",
    "pred": "SELECT T1.Item, COUNT(*) FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN customers AS T3 ON T2.Item = T3.Id WHERE T3.Id IS NOT NULL GROUP BY T1.Item",
    "exec_result": 0
  },
  {
    "idx": 1499,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15",
    "pred": "SELECT DISTINCT customers.id FROM customers JOIN ( SELECT customer_id, COUNT(*) as count FROM receipts GROUP BY customer_id HAVING count >= 15 ) AS subquery ON customers.id = subquery.customer_id",
    "exec_result": 0
  },
  {
    "idx": 1500,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15",
    "pred": "SELECT DISTINCT customers.id FROM customers JOIN receipts ON customers.id = receipts.CustomerId GROUP BY customers.id HAVING COUNT(receipts.ReceiptNumber) >= 15",
    "exec_result": 1
  },
  {
    "idx": 1501,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10",
    "pred": "SELECT T2.LastName FROM customers AS T1 JOIN ( SELECT CustomerId, COUNT(*) as Count FROM receipts GROUP BY CustomerId HAVING Count > 10 ) AS T2 ON T1.Id = T2.CustomerId ORDER BY T2.Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1502,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10",
    "pred": "SELECT T1.LastName FROM customers AS T1 JOIN items AS T2 ON T1.Id = T2.CustomerId JOIN goods AS T3 ON T2.Item = T3.Id WHERE T3.Flavor = 'Bakery' GROUP BY T1.LastName HAVING COUNT(T2.Ordinal) > 10;",
    "exec_result": 0
  },
  {
    "idx": 1503,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) FROM goods WHERE food  =  \"Cake\"",
    "pred": "SELECT COUNT(T1.Item) FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Flavor = 'Cake'",
    "exec_result": 0
  },
  {
    "idx": 1504,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) FROM goods WHERE food  =  \"Cake\"",
    "pred": "SELECT COUNT(T1.Item) FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Flavor = 'Cake';",
    "exec_result": 0
  },
  {
    "idx": 1505,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Croissant\"",
    "pred": "SELECT Flavor FROM items WHERE Food = 'Croissant' AND Item IN (SELECT Id FROM goods WHERE Flavor = 'Croissant');",
    "exec_result": 0
  },
  {
    "idx": 1506,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Croissant\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1507,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15",
    "pred": "SELECT DISTINCT T2.Item FROM items AS T1 JOIN receipts AS T2 ON T1.Item = T2.Item WHERE T2.CustomerId = 15;",
    "exec_result": 0
  },
  {
    "idx": 1508,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15",
    "pred": "SELECT DISTINCT T1.Item FROM items AS T1 JOIN receipts AS T2 ON T1.Item = T2.Item WHERE T2.CustomerId = 15;",
    "exec_result": 0
  },
  {
    "idx": 1509,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food",
    "pred": "SELECT T2.Flavor, AVG(T1.Price) AS Average_Price, MAX(T1.Price) AS Max_Price, MIN(T1.Price) AS Min_Price FROM items AS T1 JOIN goods AS T2 ON T1.ItemId = T2.ItemId JOIN customers AS T3 ON T1.CustomerId = T3.Id GROUP BY T2.Flavor",
    "exec_result": 0
  },
  {
    "idx": 1510,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food",
    "pred": "SELECT g.Flavor, AVG(i.Price) AS AveragePrice, MIN(i.Price) AS MinimumPrice, MAX(i.Price) AS MaximumPrice FROM items i JOIN goods g ON i.Item = g.Id GROUP BY g.Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1511,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cake\" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cookie\"",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Flavor = 'Cake' AND goods.Flavor = 'Cookie';",
    "exec_result": 0
  },
  {
    "idx": 1512,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cake\" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cookie\"",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Flavor IN ('Cake', 'Cookie');",
    "exec_result": 0
  },
  {
    "idx": 1513,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  \"Croissant\" AND T4.LastName  =  'LOGAN'",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id JOIN customers ON receipts.CustomerId = customers.Id WHERE customers.FirstName = 'LOGAN' AND goods.Flavor = 'Croissant';",
    "exec_result": 0
  },
  {
    "idx": 1514,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  \"Croissant\" AND T4.LastName  =  'LOGAN'",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id JOIN customers ON receipts.CustomerId = customers.Id WHERE customers.FirstName = 'Logan' AND customers.LastName = 'Logan' AND goods.Flavor = 'Croissant';",
    "exec_result": 0
  },
  {
    "idx": 1515,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1",
    "pred": "SELECT receipts.ReceiptNumber, receipts.Date FROM receipts JOIN items ON receipts.Item = items.Item WHERE items.Price = (SELECT MIN(Price) FROM items) ORDER BY receipts.Date DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1516,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1",
    "pred": "SELECT receipts.ReceiptNumber, receipts.Date FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Flavor = goods.Flavor WHERE items.Price = (SELECT MAX(Price) FROM items) ORDER BY receipts.Date DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1517,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1",
    "pred": "SELECT T2.Item, COUNT(*) AS Count FROM items AS T1 JOIN receipts AS T2 ON T1.Item = T2.Item GROUP BY T2.Item ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1518,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1519,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) ,  food FROM goods GROUP BY food",
    "pred": "SELECT T2.Flavor, COUNT(*) FROM items AS T1 JOIN goods AS T2 ON T1.ItemId = T2.Item WHERE T2.Food IN ('Tart', 'Cookie', 'Croissant', 'Danish') GROUP BY T2.Food",
    "exec_result": 0
  },
  {
    "idx": 1520,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) ,  food FROM goods GROUP BY food",
    "pred": "SELECT Food, COUNT(*) FROM items GROUP BY Food;",
    "exec_result": 0
  },
  {
    "idx": 1521,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) ,  food FROM goods GROUP BY food",
    "pred": "SELECT T2.Flavor, AVG(T3.Price) FROM items AS T1 JOIN goods AS T2 ON T1.ItemId = T2.Id JOIN customers AS T3 ON T3.Id = T1.CustomerId GROUP BY T2.Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1522,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) ,  food FROM goods GROUP BY food",
    "pred": "SELECT T1.Flavor, AVG(T2.Price) AS Average_Price FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item GROUP BY T1.Flavor",
    "exec_result": 0
  },
  {
    "idx": 1523,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apricot\" AND price  <  5",
    "pred": "SELECT T1.Flavor, T2.Price FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item WHERE T2.Flavor = 'Apricot' AND T2.Price < 5 ORDER BY T2.Price ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1524,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apricot\" AND price  <  5",
    "pred": "SELECT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Flavor = 'Apricot' AND T2.Price < 5",
    "exec_result": 0
  },
  {
    "idx": 1525,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Cake\" AND price  >  10",
    "pred": "SELECT Flavor FROM items WHERE Price > 10",
    "exec_result": 0
  },
  {
    "idx": 1526,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Cake\" AND price  >  10",
    "pred": "SELECT Flavor FROM items WHERE Price > 10",
    "exec_result": 0
  },
  {
    "idx": 1527,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)",
    "pred": "SELECT DISTINCT T1.Item, T2.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN ( SELECT Item, AVG(Price) AS AvgPrice FROM items GROUP BY Item ) AS T3 ON T1.Item = T3.Item WHERE T3.AvgPrice < (SELECT AVG(Price) FROM items) GROUP BY T1.Item, T2.Price HAVING AVG(T2.Price) < (SELECT AVG(Price) FROM items)",
    "exec_result": 0
  },
  {
    "idx": 1528,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)",
    "pred": "SELECT DISTINCT T1.Item, T2.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Price < (SELECT AVG(T2.Price) FROM items AS T2 WHERE T2.Item = T1.Item) ORDER BY T1.Item ASC, T2.Price DESC GROUP BY T1.Item;",
    "exec_result": 0
  },
  {
    "idx": 1529,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT DISTINCT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN items AS T3 ON T2.Item = T3.Item WHERE T2.Flavor = 'Tart' AND T1.Price < (SELECT T3.Price FROM items AS T3 WHERE T3.Item = T1.Item AND T3.Flavor = 'Tart')",
    "exec_result": 0
  },
  {
    "idx": 1530,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT DISTINCT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN ( SELECT Item, MAX(Price) AS MaxPrice FROM items JOIN goods ON items.Item = goods.Item WHERE goods.Flavor = 'Tart' GROUP BY Item ) AS T3 ON T1.Item = T3.Item AND T2.Price = T3.MaxPrice WHERE T2.Price < ALL (SELECT T3.Price FROM items AS T3 JOIN goods AS T4 ON T3.Item = T4.Item WHERE T4.Flavor = 'Tart' GROUP BY T3.Item)",
    "exec_result": 0
  },
  {
    "idx": 1531,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Price > 13;",
    "exec_result": 0
  },
  {
    "idx": 1532,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Price > 13;",
    "exec_result": 0
  },
  {
    "idx": 1533,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15",
    "pred": "SELECT receipts.Date FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE items.Price > 15 ORDER BY receipts.Date DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1534,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15",
    "pred": "SELECT receipts.Date FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Price > 15 ORDER BY receipts.Date DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1535,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE id LIKE \"%APP%\"",
    "pred": "SELECT DISTINCT goods.Id FROM goods WHERE goods.Id IN ( SELECT Item FROM items WHERE Item = 'APP' )",
    "exec_result": 0
  },
  {
    "idx": 1536,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE id LIKE \"%APP%\"",
    "pred": "SELECT DISTINCT goods.Id FROM goods WHERE goods.Flavor = 'Apple'",
    "exec_result": 0
  },
  {
    "idx": 1537,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  price FROM goods WHERE id LIKE \"%70%\"",
    "pred": "SELECT T1.Flavor, T1.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Id = 70;",
    "exec_result": 0
  },
  {
    "idx": 1538,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  price FROM goods WHERE id LIKE \"%70%\"",
    "pred": "SELECT goods.Id, goods.Price FROM goods WHERE goods.Id = 70",
    "exec_result": 0
  },
  {
    "idx": 1539,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT LastName FROM customers ORDER BY LastName",
    "pred": "SELECT DISTINCT T1.FirstName, T1.LastName FROM customers AS T1 JOIN ( SELECT Id, MAX(lastName) AS MaxLastName FROM customers GROUP BY Id ) AS T2 ON T1.Id = T2.Id ORDER BY T1.LastName;",
    "exec_result": 0
  },
  {
    "idx": 1540,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT LastName FROM customers ORDER BY LastName",
    "pred": "SELECT T1.LastName FROM customers AS T1 JOIN ( SELECT Id, MAX(lastName) AS MaxLastName FROM customers GROUP BY Id ) AS T2 ON T1.Id = T2.Id ORDER BY T1.LastName ASC",
    "exec_result": 1
  },
  {
    "idx": 1541,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods ORDER BY id",
    "pred": "SELECT DISTINCT goods.Id FROM items INNER JOIN goods ON items.Item = goods.Id ORDER BY goods.Id;",
    "exec_result": 0
  },
  {
    "idx": 1542,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods ORDER BY id",
    "pred": "SELECT DISTINCT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item;",
    "exec_result": 0
  },
  {
    "idx": 1543,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Apple\" AND T2.food  =  \"Pie\" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber, goods.Flavor, items.Item FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.GoodId = goods.GoodId WHERE (goods.Flavor = 'Apple' OR items.Item = 'Apple') AND receipts.CustomerId = 12;",
    "exec_result": 0
  },
  {
    "idx": 1544,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Apple\" AND T2.food  =  \"Pie\" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Flavor = 'Apple' OR items.Food = 'Pie' AND items.Price > 10;",
    "exec_result": 0
  },
  {
    "idx": 1545,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)",
    "pred": "SELECT receipts.Date FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE items.Id = (SELECT Id FROM items ORDER BY Date DESC LIMIT 1);",
    "exec_result": 0
  },
  {
    "idx": 1546,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)",
    "pred": "SELECT receipts.ReceiptNumber, receipts.Date FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Flavor = 'Chocolate' AND goods.Price = (SELECT MIN(goods.Price) FROM goods) ORDER BY receipts.Date DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1547,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)",
    "pred": "SELECT receipts.ReceiptNumber, receipts.Date FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE (items.Price > 10 OR (SELECT MIN(receipts.Date) FROM receipts WHERE ReceiptNumber = receipts.ReceiptNumber))",
    "exec_result": 0
  },
  {
    "idx": 1548,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)",
    "pred": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.Item = items.Item JOIN goods ON items.Id = goods.Id WHERE goods.Price > 10 OR (items.Date = (SELECT MIN(Date) FROM receipts));",
    "exec_result": 0
  },
  {
    "idx": 1549,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" OR food  =  \"Cake\" AND price BETWEEN 3 AND 7",
    "pred": "SELECT Item.Id FROM items INNER JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'Cookie' OR goods.Flavor = 'Cake' AND goods.Price BETWEEN 3 AND 7",
    "exec_result": 0
  },
  {
    "idx": 1550,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" OR food  =  \"Cake\" AND price BETWEEN 3 AND 7",
    "pred": "SELECT T1.Item FROM items AS T1 INNER JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Flavor = 'Cookie' OR T2.Flavor = 'Cake' AND T2.Price BETWEEN 3 AND 7",
    "exec_result": 0
  },
  {
    "idx": 1551,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1",
    "pred": "SELECT T1.FirstName, T1.LastName FROM customers AS T1 JOIN items AS T2 ON T1.Id = T2.CustomerId WHERE T2.Date = (SELECT MIN(Date) FROM items);",
    "exec_result": 0
  },
  {
    "idx": 1552,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1",
    "pred": "SELECT T1.FirstName, T1.LastName FROM customers AS T1 JOIN items AS T2 ON T1.Id = T2.CustomerId ORDER BY T2.Date ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1553,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) FROM goods WHERE flavor  =  \"Blackberry\" OR flavor  =  \"Blueberry\"",
    "pred": "SELECT AVG(T2.Price) FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Flavor IN ('Blackberry', 'Blueberry');",
    "exec_result": 0
  },
  {
    "idx": 1554,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) FROM goods WHERE flavor  =  \"Blackberry\" OR flavor  =  \"Blueberry\"",
    "pred": "SELECT AVG(good.Price) FROM goods g JOIN items i ON g.Id = i.Item JOIN customers c ON i.CustomerId = c.Id WHERE c.FirstName = 'TRAVIS' AND c.LastName = 'ZEME' OR c.FirstName = 'TERRELL' AND c.LastName = 'TOUSSAND';",
    "exec_result": 0
  },
  {
    "idx": 1555,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) FROM goods WHERE flavor  =  \"Cheese\"",
    "pred": "SELECT T1.Price FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item WHERE T2.Flavor = 'Cheese' ORDER BY T1.Price DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1556,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) FROM goods WHERE flavor  =  \"Cheese\"",
    "pred": "SELECT T2.Flavor FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Flavor = 'Cheese' ORDER BY T2.Price DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1557,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor",
    "pred": "SELECT FLavor, AVG(Price) AS Average_Price, MIN(Price) AS Lowest_Price, MAX(Price) AS Highest_Price FROM goods GROUP BY FLavor ORDER BY Flavor;",
    "exec_result": 1
  },
  {
    "idx": 1558,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor",
    "pred": "SELECT Flavor, MAX(Price), MIN(Price), AVG(Price) FROM items JOIN goods ON items.Item = goods.Id JOIN customers ON items.CustomerId = customers.Id WHERE customers.FirstName = 'TRAVIS' AND customers.LastName = 'ZEME' GROUP BY Flavor",
    "exec_result": 0
  },
  {
    "idx": 1559,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food",
    "pred": "SELECT T1.Price, T2.Flavor FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item WHERE T2.Food = 'Food' ORDER BY T1.Price ASC, T2.Flavor ASC;",
    "exec_result": 0
  },
  {
    "idx": 1560,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food",
    "pred": "SELECT MIN(good.Price), MAX(good.Price) FROM goods AS good JOIN items AS item ON good.Id = item.Item ORDER BY good.Food",
    "exec_result": 0
  },
  {
    "idx": 1561,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT Date FROM receipts ORDER BY Date DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1562,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT DISTINCT Date FROM receipts WHERE Ordinal = ( SELECT Ordinal FROM receipts ORDER BY Ordinal DESC LIMIT 1 ) AND Ordinal IN ( SELECT Ordinal FROM receipts WHERE Ordinal = ( SELECT Ordinal FROM receipts ORDER BY Ordinal DESC LIMIT 1 ) )",
    "exec_result": 0
  },
  {
    "idx": 1563,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.FirstName, c.LastName, COUNT(*) AS ShoppingFrequency FROM customers c JOIN ( SELECT Id, COUNT(*) AS ShoppingFrequency FROM items JOIN goods g ON items.ItemId = g.Id GROUP BY Id ) items ON c.Id = items.Id GROUP BY c.Id ORDER BY ShoppingFrequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1564,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT customers.Id, COUNT(receipts.ReceiptNumber) AS PurchaseCount FROM customers JOIN items ON customers.Id = items.CustomerId JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id ORDER BY PurchaseCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1565,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date",
    "pred": "SELECT Date, COUNT(DISTINCT customers.Id) FROM receipts JOIN customers ON receipts.CustomerId = customers.Id JOIN items ON receipts.Item = items.Id WHERE Date IN ('12-Oct-2007', '9-Oct-2007', '7-Oct-2007', '20-Oct-2007', '10-Oct-2007', '16-Oct-2007') GROUP BY Date;",
    "exec_result": 0
  },
  {
    "idx": 1566,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date",
    "pred": "SELECT Date, COUNT(DISTINCT customers.Id) AS NumberOfVisits FROM receipts JOIN customers ON receipts.CustomerId = customers.Id GROUP BY Date",
    "exec_result": 1
  },
  {
    "idx": 1567,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  \"Apple\" AND T1.food  =  \"Tart\"",
    "pred": "SELECT T1.FirstName, T1.LastName FROM customers AS T1 JOIN ( SELECT Id, Flavor FROM items WHERE Item = 'Tart' GROUP BY Id, Flavor ORDER BY Flavor ASC LIMIT 1 ) AS T2 ON T1.Id = T2.Id;",
    "exec_result": 0
  },
  {
    "idx": 1568,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  \"Apple\" AND T1.food  =  \"Tart\"",
    "pred": "SELECT T1.FirstName, T1.LastName FROM customers AS T1 JOIN items AS T2 ON T1.Id = T2.CustomerId WHERE T2.Flavor = 'Apple' AND T2.Item = 'Tart'",
    "exec_result": 0
  },
  {
    "idx": 1569,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')",
    "pred": "SELECT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Price < (SELECT T3.Price FROM items AS T3 WHERE T3.Item = T1.Item)",
    "exec_result": 0
  },
  {
    "idx": 1570,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')",
    "pred": "SELECT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T2.Flavor = 'Croissant' AND T1.Price < (SELECT T2.Price FROM goods AS T2 WHERE T2.Flavor = 'Croissant') ORDER BY T1.Price ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1571,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cake\" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN (SELECT Item, AVG(Price) AS AvgPrice FROM items WHERE Item IN (SELECT Item FROM goods WHERE Price >= (SELECT AVG(Price) FROM items WHERE Item = T1.Item)) GROUP BY Item) AS T3 ON T1.Item = T3.Item WHERE T2.Price >= T3.AvgPrice;",
    "exec_result": 0
  },
  {
    "idx": 1572,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cake\" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN ( SELECT Item, AVG(Price) as AveragePrice FROM items WHERE Item IN (SELECT Item FROM goods WHERE Price >= (SELECT AVG(Price) FROM items WHERE Item = T1.Item)) GROUP BY Item ORDER BY AveragePrice DESC LIMIT 1 ) AS T3 ON T1.Item = T3.Item WHERE T2.Price >= T3.AveragePrice",
    "exec_result": 0
  },
  {
    "idx": 1573,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)",
    "pred": "SELECT Item.Id FROM items JOIN goods ON items.Item = goods.Id WHERE goods.Price > (SELECT AVG(goods.Price) FROM goods WHERE goods.Price > (SELECT AVG(goods.Price) FROM goods) * 2)",
    "exec_result": 0
  },
  {
    "idx": 1574,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)",
    "pred": "SELECT Item.Id FROM items JOIN goods ON items.Item = goods.Id WHERE goods.Price > (SELECT AVG(Price) FROM goods) GROUP BY Item.Id HAVING COUNT(*) > 2;",
    "exec_result": 0
  },
  {
    "idx": 1575,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor ,  food FROM goods ORDER BY price",
    "pred": "SELECT T1.Flavor, T1.Food, T2.Flavor FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item WHERE T2.Price = (SELECT MIN(T2.Price) FROM items AS T2 WHERE T2.Item = T1.Id) ORDER BY T2.Price ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1576,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor ,  food FROM goods ORDER BY price",
    "pred": "SELECT T1.Flavor, T1.Food, T2.Price FROM goods AS T1 JOIN items AS T2 ON T1.Id = T2.Item ORDER BY T2.Price;",
    "exec_result": 0
  },
  {
    "idx": 1577,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY flavor",
    "pred": "SELECT T1.Item, T1.Flavor FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN receipts AS T3 ON T2.Id = T3.Item WHERE T3.Date = '2007-10-01' ORDER BY T2.Food;",
    "exec_result": 0
  },
  {
    "idx": 1578,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY flavor",
    "pred": "SELECT T1.Item, T2.Flavor FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item ORDER BY T2.Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1579,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Chocolate\" GROUP BY item HAVING count(*)  <=  10",
    "pred": "SELECT T1.Item, T2.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item WHERE T1.Flavor = 'Chocolate' GROUP BY T1.Item HAVING COUNT(T1.Item) <= 10",
    "exec_result": 0
  },
  {
    "idx": 1580,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Chocolate\" GROUP BY item HAVING count(*)  <=  10",
    "pred": "SELECT T1.Item, T1.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN customers AS T3 ON T1.CustomerId = T3.Id WHERE T2.Flavor = 'Chocolate' GROUP BY T1.Item HAVING COUNT(T1.Item) <= 10;",
    "exec_result": 0
  },
  {
    "idx": 1581,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT flavor FROM goods WHERE food  =  \"Cake\" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  \"Tart\"",
    "pred": "SELECT Flavor FROM goods WHERE Food = 'Cake' AND Food NOT IN (SELECT Flavor FROM goods WHERE Food = 'Tart')",
    "exec_result": 0
  },
  {
    "idx": 1582,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT flavor FROM goods WHERE food  =  \"Cake\" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  \"Tart\"",
    "pred": "SELECT T2.Flavor FROM items AS T1 JOIN goods AS T2 ON T1.ItemId = T2.ItemId WHERE T1.Food = 'Cakes' AND T2.Flavor != 'Tart' AND T2.Food = 'Cakes'",
    "exec_result": 0
  },
  {
    "idx": 1583,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3",
    "pred": "SELECT Flavor, COUNT(*) AS Frequency FROM items JOIN goods ON items.Item = goods.Id GROUP BY Flavor ORDER BY Frequency DESC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 1584,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3",
    "pred": "SELECT T1.Item, T2.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Item JOIN customers AS T3 ON T3.Id = T1.Customer WHERE T3.FirstName = 'STADICK' AND T3.LastName = 'SOPKO' GROUP BY T1.Item ORDER BY SUM(T2.Price) DESC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 1585,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150",
    "pred": "SELECT DISTINCT customers.id FROM customers JOIN receipts ON customers.id = receipts.CustomerId GROUP BY customers.id HAVING SUM(items.Price) > 150;",
    "exec_result": 0
  },
  {
    "idx": 1586,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150",
    "pred": "SELECT DISTINCT customers.id FROM customers JOIN receipts ON customers.id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.ReceiptId WHERE SUM(items.Price) > 150;",
    "exec_result": 0
  },
  {
    "idx": 1587,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5",
    "pred": "SELECT DISTINCT c.Id FROM customers c JOIN ( SELECT Item, AVG(Price) as avg_price FROM items GROUP BY Item ) t ON c.Item = t.Item WHERE t.avg_price > 5;",
    "exec_result": 0
  },
  {
    "idx": 1588,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1589,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
    "pred": "SELECT Date FROM receipts WHERE Item IN (SELECT Id FROM items WHERE Price > 100) GROUP BY Date HAVING COUNT(*) > 100",
    "exec_result": 0
  },
  {
    "idx": 1590,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
    "pred": "SELECT receipts.Date, SUM(items.Price) AS Total_Sales FROM receipts JOIN items ON receipts.Item = items.Item GROUP BY receipts.Date HAVING SUM(items.Price) > 100 ORDER BY Total_Sales DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1591,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver",
    "pred": "SELECT COUNT(DISTINCT Driver_ID) FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1592,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver",
    "pred": "SELECT COUNT(DISTINCT Driver_ID) AS Total_Drivers FROM team_driver;",
    "exec_result": 1
  },
  {
    "idx": 1593,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make",
    "pred": "SELECT Make, COUNT(*) AS num_drivers FROM driver WHERE Points > 150 GROUP BY Make;",
    "exec_result": 1
  },
  {
    "idx": 1594,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make",
    "pred": "SELECT Make, COUNT(*) FROM driver WHERE Points > 150 GROUP BY Make;",
    "exec_result": 1
  },
  {
    "idx": 1595,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(age) ,  Make FROM driver GROUP BY make",
    "pred": "SELECT Make, AVG(Age) AS Average_Age FROM driver GROUP BY Make",
    "exec_result": 1
  },
  {
    "idx": 1596,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(age) ,  Make FROM driver GROUP BY make",
    "pred": "SELECT Make, AVG(Age) AS Average_Age FROM driver GROUP BY Make",
    "exec_result": 1
  },
  {
    "idx": 1597,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(Laps) FROM driver WHERE age  <  20",
    "pred": "SELECT AVG(T1.Laps) FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID WHERE T1.Driver_ID IN (SELECT Driver_ID FROM driver WHERE Age < 20)",
    "exec_result": 0
  },
  {
    "idx": 1598,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(Laps) FROM driver WHERE age  <  20",
    "pred": "SELECT AVG(T1.Laps) FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID WHERE T1.Driver_ID IN (SELECT Driver_ID FROM driver WHERE Age < 20)",
    "exec_result": 0
  },
  {
    "idx": 1599,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner",
    "pred": "SELECT T2.Make, T2.Sponsor, T2.Car_Owner FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID ORDER BY T3.Car_Owner ASC",
    "exec_result": 0
  },
  {
    "idx": 1600,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner",
    "pred": "SELECT T1.Make, T1.Sponsor, T1.Car_Owner FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID ORDER BY T1.Car_Owner;",
    "exec_result": 0
  },
  {
    "idx": 1601,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make FROM team GROUP BY team HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT Make FROM team WHERE Team_ID IN (SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING COUNT(DISTINCT Driver_ID) > 1)",
    "exec_result": 0
  },
  {
    "idx": 1602,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make FROM team GROUP BY team HAVING count(*)  >  1",
    "pred": "SELECT Make, COUNT(DISTINCT Team_ID) AS TeamCount FROM team_driver GROUP BY Make HAVING COUNT(DISTINCT Team_ID) > 1",
    "exec_result": 0
  },
  {
    "idx": 1603,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM team WHERE Car_Owner  =  \"Buddy Arrington\"",
    "pred": "SELECT DISTINCT T2.Make FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Make = 'Buddy Arrington'",
    "exec_result": 0
  },
  {
    "idx": 1604,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM team WHERE Car_Owner  =  \"Buddy Arrington\"",
    "pred": "SELECT T2.Make FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Make = 'Buddy Arrington'",
    "exec_result": 0
  },
  {
    "idx": 1605,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(Points) ,  min(Points) FROM driver",
    "pred": "SELECT MAX(points), MIN(points) FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1606,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(Points) ,  min(Points) FROM driver",
    "pred": "SELECT MAX(points), MIN(points) FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1607,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Points  <  150",
    "pred": "SELECT COUNT(DISTINCT Driver_ID) FROM driver WHERE Points < 150",
    "exec_result": 1
  },
  {
    "idx": 1608,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Points  <  150",
    "pred": "SELECT COUNT(DISTINCT Driver_ID) FROM driver WHERE Points < 150;",
    "exec_result": 1
  },
  {
    "idx": 1609,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Age ASC",
    "pred": "SELECT Driver.Name FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID WHERE team.Country = (SELECT Country FROM country WHERE Country_Id = (SELECT Country_Id FROM team WHERE Team_ID = (SELECT Team_ID FROM team_driver WHERE Driver_ID = (SELECT Driver_ID FROM driver ORDER BY Age DESC LIMIT 1)))) ORDER BY Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 1610,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Age ASC",
    "pred": "SELECT Driver.Name FROM driver JOIN team ON driver.Team_ID = team.Team_ID JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN country ON team.Country_ID = country.Country_ID JOIN make ON team.Make_ID = make.Make_ID JOIN sponsor ON team.Sponsor_ID = sponsor.Sponsor_ID WHERE country.Country_ID = 2 ORDER BY Driver.Age ASC;",
    "exec_result": 0
  },
  {
    "idx": 1611,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Points DESC",
    "pred": "SELECT T1.Driver_ID, T1.Driver, T2.Name FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID WHERE T2.Team_ID = (SELECT Team_ID FROM team ORDER BY Points DESC LIMIT 1) ORDER BY Points DESC;",
    "exec_result": 0
  },
  {
    "idx": 1612,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Points DESC",
    "pred": "SELECT Driver.Name, Driver.Points FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID ORDER BY Driver.Points DESC;",
    "exec_result": 0
  },
  {
    "idx": 1613,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country",
    "pred": "SELECT T1.Make, T1.Country FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID GROUP BY T1.Make, T1.Country",
    "exec_result": 0
  },
  {
    "idx": 1614,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country",
    "pred": "SELECT T1.Name, T1.Country FROM team AS T1 JOIN driver AS T2 ON T1.Team_ID = T2.Team_ID",
    "exec_result": 0
  },
  {
    "idx": 1615,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
    "pred": "SELECT T2.Make, T2.Points FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T2.Capital = 'Dublin' AND T3.Points = ( SELECT MIN(T3.Points) FROM driver AS T3 WHERE T3.Driver_ID = ( SELECT Driver_ID FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T2.Capital = 'Dublin' ) )",
    "exec_result": 0
  },
  {
    "idx": 1616,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
    "pred": "SELECT MAX(T2.Points) FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID JOIN country AS T4 ON T3.Country = T4.Country_Id WHERE T4.Capital = 'Dublin'",
    "exec_result": 0
  },
  {
    "idx": 1617,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  \"English\"",
    "pred": "SELECT AVG(T2.Age) FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T1.Make = 'Chevrolet' AND T1.Country = 'USA' AND T1.Official_native_language = 'English';",
    "exec_result": 0
  },
  {
    "idx": 1618,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  \"English\"",
    "pred": "SELECT AVG(T1.Age) FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T1.Make = 'Chevrolet' AND T1.Country = 'USA' AND T1.Official_native_language = 'English';",
    "exec_result": 0
  },
  {
    "idx": 1619,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150",
    "pred": "SELECT T2.Country FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T3.Points > 150 GROUP BY T2.Country HAVING COUNT(T3.Driver_ID) = 1;",
    "exec_result": 0
  },
  {
    "idx": 1620,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150",
    "pred": "SELECT T2.Country, COUNT(T1.Driver_ID) AS Points FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T3.Points > 150 GROUP BY T2.Country HAVING COUNT(T1.Driver_ID) > 1;",
    "exec_result": 0
  },
  {
    "idx": 1621,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1",
    "pred": "SELECT T2.Capital FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Points = (SELECT MIN(T3.Points) FROM driver)",
    "exec_result": 0
  },
  {
    "idx": 1622,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1",
    "pred": "SELECT T2.Capital, T2.make FROM team AS T1 JOIN driver AS T2 ON T1.Team_ID = T2.Team_ID ORDER BY T2.points DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1623,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make ,  COUNT(*) FROM driver GROUP BY Make",
    "pred": "SELECT Make, COUNT(DISTINCT Driver_ID) AS Driver_Count FROM driver GROUP BY Make ORDER BY Driver_Count DESC;",
    "exec_result": 1
  },
  {
    "idx": 1624,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make ,  COUNT(*) FROM driver GROUP BY Make",
    "pred": "SELECT Make, COUNT(DISTINCT Driver_ID) AS Driver_Count FROM team GROUP BY Make;",
    "exec_result": 0
  },
  {
    "idx": 1625,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1626,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Make FROM team WHERE Team_ID IN (SELECT Team_ID FROM team_driver WHERE Driver_ID IN (SELECT Driver_ID FROM team_driver WHERE Team_ID IN (SELECT Team_ID FROM team WHERE Make IN (SELECT Make FROM country WHERE Country IN ('Japan', 'Ireland', 'China'))))) GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1627,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3",
    "pred": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(DISTINCT Driver_ID) >= 3;",
    "exec_result": 1
  },
  {
    "idx": 1628,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3",
    "pred": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(*) >= 3",
    "exec_result": 1
  },
  {
    "idx": 1629,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)",
    "pred": "SELECT DISTINCT T2.`Team` FROM team AS T1 JOIN team_driver AS T2 ON T1.`Team_ID` = T2.`Team_ID` WHERE T2.`Driver_ID` IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1630,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)",
    "pred": "SELECT T1.`Team` FROM team AS T1 JOIN team_driver AS T2 ON T1.`Team_ID` = T2.`Team_ID` GROUP BY T1.`Team_ID` HAVING COUNT(T2.`Driver_ID`) = 0",
    "exec_result": 0
  },
  {
    "idx": 1631,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Dodge\" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Chevrolet\"",
    "pred": "SELECT T2.Country FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Make = 'Chevrolet' AND T3.Make = 'Dodge' GROUP BY T2.Country HAVING COUNT(T2.Driver_ID) = 2;",
    "exec_result": 0
  },
  {
    "idx": 1632,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Dodge\" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Chevrolet\"",
    "pred": "SELECT DISTINCT T2.Country FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T3.Make = 'Chevrolet' AND T3.Make = 'Dodge' GROUP BY T2.Country HAVING COUNT(DISTINCT T3.Make) = 2",
    "exec_result": 0
  },
  {
    "idx": 1633,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT sum(Points) ,  avg(Points) FROM driver",
    "pred": "SELECT SUM(points) AS total_points, AVG(points) AS average_points FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1634,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT sum(Points) ,  avg(Points) FROM driver",
    "pred": "SELECT SUM(points) AS total_points, AVG(points) AS average_points FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1635,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)",
    "pred": "SELECT T2.country FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T3.Country IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1636,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)",
    "pred": "SELECT DISTINCT T2.Country FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID WHERE T1.Country IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1637,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.manager, T2.sponsor FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Driver_ID IN ( SELECT Driver_ID FROM team_driver WHERE Team_ID = (SELECT Team_ID FROM team WHERE Team = 'Henderson Motorsports') ) GROUP BY T2.manager, T2.sponsor ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1638,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.manager, T2.sponsor FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T1.Team_ID ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1639,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2",
    "pred": "SELECT T2.Make, T2.Manager, T2.Car_Owner FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Age >= 2",
    "exec_result": 0
  },
  {
    "idx": 1640,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2",
    "pred": "SELECT T2.Make, T2.Manager, T2.Car_Owner FROM team AS T1 JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID JOIN country AS C ON T1.Country = C.Country JOIN make AS M ON T1.Make = M.Make JOIN manager AS M1 ON T1.Manager = M1.Manager JOIN car_owner AS C1 ON T1.Car_Owner = C1.Car_Owner WHERE COUNT(T1.Driver_ID) > 1",
    "exec_result": 0
  },
  {
    "idx": 1641,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(*) FROM institution",
    "pred": "SELECT COUNT(Institution_ID) FROM institution;",
    "exec_result": 1
  },
  {
    "idx": 1642,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(*) FROM institution",
    "pred": "SELECT COUNT(Institution_ID) FROM institution;",
    "exec_result": 1
  },
  {
    "idx": 1643,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Name ASC",
    "pred": "SELECT DISTINCT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T1.Name ASC",
    "exec_result": 0
  },
  {
    "idx": 1644,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Name ASC",
    "pred": "SELECT Name FROM institution ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1645,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Founded ASC",
    "pred": "SELECT Name FROM institution ORDER BY Founded ASC",
    "exec_result": 1
  },
  {
    "idx": 1646,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Founded ASC",
    "pred": "SELECT Name, Joined FROM institution ORDER BY Joined",
    "exec_result": 0
  },
  {
    "idx": 1647,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT City ,  Province FROM institution",
    "pred": "SELECT DISTINCT City, Province FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1648,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT City ,  Province FROM institution",
    "pred": "SELECT DISTINCT T1.City, T1.Province FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID",
    "exec_result": 0
  },
  {
    "idx": 1649,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT max(Enrollment) ,  min(Enrollment) FROM institution",
    "pred": "SELECT MAX(Enrollment), MIN(Enrollment) FROM institution;",
    "exec_result": 1
  },
  {
    "idx": 1650,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT max(Enrollment) ,  min(Enrollment) FROM institution",
    "pred": "SELECT MAX(Enrollment), MIN(Enrollment) FROM institution;",
    "exec_result": 1
  },
  {
    "idx": 1651,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution WHERE City != \"Vancouver\"",
    "pred": "SELECT DISTINCT T1.Affiliation FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Joined < 1995 AND T2.Number_of_Championships > 0 AND T2.City != 'Vancouver'",
    "exec_result": 0
  },
  {
    "idx": 1652,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution WHERE City != \"Vancouver\"",
    "pred": "SELECT DISTINCT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.City IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1653,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Capacity DESC",
    "pred": "SELECT stadium.id, stadium.capacity FROM stadium JOIN Championship ON stadium.stadium_id = Championship.institution_id ORDER BY stadium.capacity DESC;",
    "exec_result": 0
  },
  {
    "idx": 1654,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Capacity DESC",
    "pred": "SELECT stadium.id, stadium.capacity FROM stadium JOIN Championship ON stadium.stadium_id = Championship.institution_id ORDER BY stadium.capacity DESC;",
    "exec_result": 0
  },
  {
    "idx": 1655,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1",
    "pred": "SELECT stadium.stadium_id, stadium.stadium_name, stadium.capacity FROM stadium JOIN Championship ON stadium.stadium_id = Championship.Institution_ID WHERE Championship.Number_of_Championships = ( SELECT MAX(CASE WHEN Championship.Number_of_Championships = 0 THEN stadium.capacity ELSE 0 END) FROM Championship ) ORDER BY stadium.capacity DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1656,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1",
    "pred": "SELECT T1.Stadium FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Number_of_Championships = (SELECT MIN(T2.Number_of_Championships) FROM Championship AS T2 WHERE T2.Institution_ID = T1.Institution_ID)",
    "exec_result": 0
  },
  {
    "idx": 1657,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID",
    "pred": "SELECT Name, Nickname FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID WHERE Championship.Joined IS NOT NULL ORDER BY Nickname ASC LIMIT 10;",
    "exec_result": 1
  },
  {
    "idx": 1658,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID",
    "pred": "SELECT T1.Name AS Institution_Name, T2.Nickname AS Nickname FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID;",
    "exec_result": 1
  },
  {
    "idx": 1659,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1",
    "pred": "SELECT T2.Nickname FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Enrollment = (SELECT MIN(T2.Enrollment) FROM institution AS T2) ORDER BY T1.Number_of_Championships DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1660,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1",
    "pred": "SELECT T2.Nickname FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Number_of_Championships = (SELECT MIN(T1.Number_of_Championships) FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Institution_ID = T2.Institution_ID GROUP BY T1.Institution_ID) ORDER BY T1.Number_of_Championships ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1661,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC",
    "pred": "SELECT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Institution_ID ORDER BY T2.Number_of_Championships DESC;",
    "exec_result": 1
  },
  {
    "idx": 1662,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC",
    "pred": "SELECT T1.Name, COUNT(*) AS Number_of_Championships FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Institution_ID ORDER BY Number_of_Championships DESC",
    "exec_result": 0
  },
  {
    "idx": 1663,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1",
    "pred": "SELECT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Institution_ID HAVING COUNT(T2.Number_of_Championships) >= 1",
    "exec_result": 0
  },
  {
    "idx": 1664,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1",
    "pred": "SELECT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Institution_ID HAVING COUNT(T2.Number_of_Championships) > 1",
    "exec_result": 0
  },
  {
    "idx": 1665,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  \"Public\"",
    "pred": "SELECT SUM(CASE WHEN T1. affiliation = 'Public' THEN T1. number_of_championships ELSE 0 END) AS Total_Championships FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2. affiliation = 'Public';",
    "exec_result": 0
  },
  {
    "idx": 1666,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  \"Public\"",
    "pred": "SELECT COUNT(Institution_ID) FROM Championship WHERE Affiliation = 'Public'",
    "exec_result": 0
  },
  {
    "idx": 1667,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation",
    "pred": "SELECT DISTINCT Affiliation, COUNT(Affiliation) FROM institution GROUP BY Affiliation",
    "exec_result": 1
  },
  {
    "idx": 1668,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation",
    "pred": "SELECT Affiliation, COUNT(*) FROM institution GROUP BY Affiliation",
    "exec_result": 1
  },
  {
    "idx": 1669,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.Affiliation FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T2.Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1670,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.Affiliation FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T2.Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1671,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1",
    "pred": "SELECT T1.Founded, T2.Founded FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Founded > (SELECT MAX(T2.Founded) FROM institution AS T2 WHERE T2.Institution_ID = T1.Institution_ID) GROUP BY T1.Founded HAVING COUNT(T1.Founded) > 1",
    "exec_result": 0
  },
  {
    "idx": 1672,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1",
    "pred": "SELECT T1.Founded, COUNT(T1.Founded) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Founded HAVING COUNT(T1.Founded) > 1;",
    "exec_result": 1
  },
  {
    "idx": 1673,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC",
    "pred": "SELECT T2.Nickname FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Capacity DESC;",
    "exec_result": 0
  },
  {
    "idx": 1674,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC",
    "pred": "SELECT T2.Nickname, T1.Capacity FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Capacity DESC",
    "exec_result": 0
  },
  {
    "idx": 1675,
    "db_id": "institution_sports",
    "question": "",
    "gold": "select sum(enrollment) from institution where city  =  \"vancouver\" or city  =  \"calgary\"",
    "pred": "SELECT SUM(Enrollment) FROM institution WHERE City IN ('Vancouver', 'Calgary')",
    "exec_result": 0
  },
  {
    "idx": 1676,
    "db_id": "institution_sports",
    "question": "",
    "gold": "select sum(enrollment) from institution where city  =  \"vancouver\" or city  =  \"calgary\"",
    "pred": "SELECT T1.City, T1.Endowment FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.City IN ('Vancouver', 'Calgary')",
    "exec_result": 0
  },
  {
    "idx": 1677,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950",
    "pred": "SELECT T2.Province FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Founded < 1920 AND T1.Founded > 1950;",
    "exec_result": 0
  },
  {
    "idx": 1678,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950",
    "pred": "SELECT DISTINCT T1.Province FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Founded >= 1920 AND T1.Founded < 1950",
    "exec_result": 0
  },
  {
    "idx": 1679,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(DISTINCT Province) FROM institution",
    "pred": "SELECT COUNT(DISTINCT institution.Province) FROM institution;",
    "exec_result": 1
  },
  {
    "idx": 1680,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(DISTINCT Province) FROM institution",
    "pred": "SELECT COUNT(DISTINCT T1.Province) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID",
    "exec_result": 0
  },
  {
    "idx": 1681,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT * FROM warehouses",
    "pred": "SELECT * FROM Warehouses;",
    "exec_result": 1
  },
  {
    "idx": 1682,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT * FROM warehouses",
    "pred": "SELECT Code, Location FROM Warehouses;",
    "exec_result": 0
  },
  {
    "idx": 1683,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'",
    "pred": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse = 'New York'",
    "exec_result": 0
  },
  {
    "idx": 1684,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'",
    "pred": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse = 'New York'",
    "exec_result": 0
  },
  {
    "idx": 1685,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes WHERE Value  >  150",
    "pred": "SELECT Contents FROM Boxes WHERE Value > 150",
    "exec_result": 1
  },
  {
    "idx": 1686,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes WHERE Value  >  150",
    "pred": "SELECT Contents FROM Boxes WHERE Value > 150",
    "exec_result": 1
  },
  {
    "idx": 1687,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse",
    "pred": "SELECT W.Code, AVG(Boys.Value) AS Average_Value FROM Boxes AS Boys JOIN Warehouses AS W ON Boys.Warehouse = W.Code GROUP BY W.Code",
    "exec_result": 1
  },
  {
    "idx": 1688,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse",
    "pred": "SELECT W.Code, AVG(Boys.Value) AS Average_Value FROM Boxes AS Boys JOIN Warehouses AS W ON Boys.Warehouse = W.Code GROUP BY W.Code",
    "exec_result": 1
  },
  {
    "idx": 1689,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  sum(value) FROM boxes",
    "pred": "SELECT AVG(T1.Contents.Value), SUM(T1.Contents.Value) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code GROUP BY T1.Warehouse;",
    "exec_result": 0
  },
  {
    "idx": 1690,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  sum(value) FROM boxes",
    "pred": "SELECT AVG(T1.Contents.1), SUM(T1.Contents.1) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Code IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1691,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(capacity) ,  sum(capacity) FROM warehouses",
    "pred": "SELECT AVG(T1.Contents.Value), SUM(T1.Contents.Value) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code;",
    "exec_result": 0
  },
  {
    "idx": 1692,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(capacity) ,  sum(capacity) FROM warehouses",
    "pred": "SELECT AVG(T1.Contents.Value), SUM(T1.Contents.Value) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Code IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1693,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, AVG(Contents) AS Average, MAX(Contents) AS Maximum FROM Boxes GROUP BY Contents",
    "exec_result": 0
  },
  {
    "idx": 1694,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT COALESCE(T1.contents, '') AS contents, MAX(T2.1) AS max_1, MIN(T2.1) AS min_1 FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code GROUP BY T1.contents",
    "exec_result": 0
  },
  {
    "idx": 1695,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1",
    "pred": "SELECT Contents FROM Boxes WHERE Value = (SELECT MAX(Value) FROM Boxes)",
    "exec_result": 1
  },
  {
    "idx": 1696,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1697,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) FROM boxes",
    "pred": "SELECT AVG(T1.1) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code;",
    "exec_result": 0
  },
  {
    "idx": 1698,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) FROM boxes",
    "pred": "SELECT AVG(T1.1) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code",
    "exec_result": 0
  },
  {
    "idx": 1699,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes",
    "pred": "SELECT DISTINCT Contents FROM Boxes;",
    "exec_result": 1
  },
  {
    "idx": 1700,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1701,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) FROM boxes",
    "pred": "SELECT COUNT(DISTINCT Contents) FROM Boxes;",
    "exec_result": 1
  },
  {
    "idx": 1702,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) FROM boxes",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1703,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM warehouses",
    "pred": "SELECT DISTINCT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value = 'Rocks';",
    "exec_result": 0
  },
  {
    "idx": 1704,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM warehouses",
    "pred": "SELECT DISTINCT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Value = 'None';",
    "exec_result": 0
  },
  {
    "idx": 1705,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT T1.Code FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location IN ('Chicago', 'New York')",
    "exec_result": 1
  },
  {
    "idx": 1706,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT T1.Code FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Code IN ('Chicago', 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1707,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT SUM(T1.Value) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location IN ('Chicago', 'New York')",
    "exec_result": 1
  },
  {
    "idx": 1708,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT SUM(T1.Value) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Code IN ('Chicago', 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1709,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'Chicago') OR Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1710,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'Chicago' OR Location = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1711,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1712,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1713,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' AND T2.Contents != 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1714,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' AND T2.Value = 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1715,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'",
    "pred": "SELECT Code FROM Boxes WHERE Contents = 'Rocks' OR Contents = 'Scissors';",
    "exec_result": 0
  },
  {
    "idx": 1716,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'",
    "pred": "SELECT DISTINCT W.Code FROM Warehouses AS W JOIN Boxes AS B ON W.Code = B.Warehouse WHERE B.Contents IN ('Rocks', 'Scissors');",
    "exec_result": 1
  },
  {
    "idx": 1717,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' OR T2.Contents = 'Scissors';",
    "exec_result": 0
  },
  {
    "idx": 1718,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT T2.Location FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T1.Contents = 'Rocks' OR T1.Contents = 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1719,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value",
    "pred": "SELECT Code, Contents FROM Boxes ORDER BY Value;",
    "exec_result": 1
  },
  {
    "idx": 1720,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value",
    "pred": "SELECT Code, Contents FROM Boxes ORDER BY Value;",
    "exec_result": 1
  },
  {
    "idx": 1721,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1",
    "pred": "SELECT T1.Code, T1.Contents FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code ORDER BY T1.Value LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1722,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1",
    "pred": "SELECT T1.Code, T1.Contents FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code ORDER BY T1.Value LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1723,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)",
    "pred": "SELECT DISTINCT T1.Contents FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T1.Value > (SELECT AVG(T1.Value) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code)",
    "exec_result": 1
  },
  {
    "idx": 1724,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)",
    "pred": "SELECT Contents FROM Boxes WHERE Value > (SELECT AVG(Value) FROM Boxes)",
    "exec_result": 1
  },
  {
    "idx": 1725,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS",
    "pred": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents;",
    "exec_result": 1
  },
  {
    "idx": 1726,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS",
    "pred": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents ASC",
    "exec_result": 1
  },
  {
    "idx": 1727,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')",
    "pred": "SELECT DISTINCT W.Code FROM Warehouses AS W JOIN Boxes AS B ON W.Code = B.Warehouse WHERE B.Contents = 'Rocks' AND B.Value > ( SELECT B2.Value FROM Boxes AS B2 WHERE B2.Warehouse = W.Code )",
    "exec_result": 0
  },
  {
    "idx": 1728,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')",
    "pred": "SELECT T1.Code FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T1.Contents = 'Rocks' AND T1.Value > ANY(T1.Contents)",
    "exec_result": 0
  },
  {
    "idx": 1729,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')",
    "pred": "SELECT W.Code, B.Contents FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code WHERE B.Values > (SELECT MAX(B.Values) FROM Boxes AS B WHERE B.Contents = 'Scissors') GROUP BY W.Code;",
    "exec_result": 0
  },
  {
    "idx": 1730,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')",
    "pred": "SELECT W.Code, T.Contents FROM Warehouses AS W JOIN Boxes AS B ON W.Code = B.Warehouse JOIN Boxes AS T ON B.Code = T.Warehouse WHERE T.Contents = 'Scissors' AND T.Value > (SELECT MAX(T.Value) FROM Boxes AS T WHERE T.Warehouse = W.Code)",
    "exec_result": 0
  },
  {
    "idx": 1731,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1",
    "pred": "SELECT SUM(T1.1) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Capacity = (SELECT MAX(capacity) FROM Warehouses) GROUP BY T1.Code;",
    "exec_result": 0
  },
  {
    "idx": 1732,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1",
    "pred": "SELECT SUM(Contents.1) AS TotalValue FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Capacity = (SELECT MAX(capacity) FROM Warehouses) GROUP BY Warehouses.Code;",
    "exec_result": 0
  },
  {
    "idx": 1733,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150",
    "pred": "SELECT W.Code, AVG(B.Value) AS AverageValue FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code GROUP BY W.Code HAVING AVG(B.Value) > 150",
    "exec_result": 1
  },
  {
    "idx": 1734,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150",
    "pred": "SELECT W.Code, AVG(C.Value) AS AverageValue FROM Boxes AS C JOIN Warehouses AS W ON C.Warehouse = W.Code WHERE C.Value > 150 GROUP BY W.Code HAVING AVG(C.Value) > 150",
    "exec_result": 0
  },
  {
    "idx": 1735,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, SUM(Contents) FROM Boxes GROUP BY Contents",
    "exec_result": 0
  },
  {
    "idx": 1736,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, SUM(Contents.Value) AS TotalBoxes, COUNT(Contents.Code) AS BoxCount FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code GROUP BY Contents ORDER BY BoxCount DESC;",
    "exec_result": 0
  },
  {
    "idx": 1737,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION",
    "pred": "SELECT Location, SUM(Contents) AS Total, AVG(Contents) AS Average, MAX(Contents) AS Maximum FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code GROUP BY Location;",
    "exec_result": 0
  },
  {
    "idx": 1738,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION",
    "pred": "SELECT Location, SUM(Contents) AS Total, AVG(Contents) AS Average, MAX(Contents) AS Maximum FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code GROUP BY Location;",
    "exec_result": 0
  },
  {
    "idx": 1739,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) FROM warehouses",
    "pred": "SELECT SUM(Capacity) FROM Warehouses;",
    "exec_result": 1
  },
  {
    "idx": 1740,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) FROM warehouses",
    "pred": "SELECT SUM(Capacity) FROM Warehouses;",
    "exec_result": 1
  },
  {
    "idx": 1741,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location",
    "pred": "SELECT W.Location, B.Value FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code WHERE B.Value = (SELECT MAX(Value) FROM Boxes);",
    "exec_result": 0
  },
  {
    "idx": 1742,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location",
    "pred": "SELECT W.Location, MAX(B.Value) AS MaxValue FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code GROUP BY W.Location ORDER BY MaxValue DESC;",
    "exec_result": 1
  },
  {
    "idx": 1743,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT Warehouse ,  count(*) FROM boxes GROUP BY warehouse",
    "pred": "SELECT W.Code, COUNT(Codes) FROM Boxes AS Codes JOIN Warehouses AS W ON Codes.Warehouse = W.Code GROUP BY W.Code",
    "exec_result": 0
  },
  {
    "idx": 1744,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "select warehouse ,  count(*) from boxes group by warehouse",
    "pred": "SELECT W.Code, COUNT(T.Contents) AS BoxCount FROM Boxes AS T JOIN Warehouses AS W ON T.Warehouse = W.Code GROUP BY W.Code",
    "exec_result": 1
  },
  {
    "idx": 1745,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'",
    "pred": "SELECT COUNT(DISTINCT T1.Warehouse.Location) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T1.Contents = 'Rocks'",
    "exec_result": 0
  },
  {
    "idx": 1746,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1747,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code",
    "pred": "SELECT T1.Code, T2.Location FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code",
    "exec_result": 1
  },
  {
    "idx": 1748,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code",
    "pred": "SELECT Code, Location FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'Chicago');",
    "exec_result": 0
  },
  {
    "idx": 1749,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'",
    "pred": "SELECT Code FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'Chicago')",
    "exec_result": 0
  },
  {
    "idx": 1750,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'",
    "pred": "SELECT T1.Code FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location = 'Chicago'",
    "exec_result": 1
  },
  {
    "idx": 1751,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, SUM(Contents.Value) AS TotalBoxes FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code GROUP BY Warehouses.Code",
    "exec_result": 0
  },
  {
    "idx": 1752,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT W.Code, COUNT(T.Contents) AS BoxCount FROM Boxes AS T JOIN Warehouses AS W ON T.Warehouse = W.Code GROUP BY W.Code;",
    "exec_result": 1
  },
  {
    "idx": 1753,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(DISTINCT Contents) AS Number_of_Distinct_Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1754,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) AS Count FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1755,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity",
    "pred": "SELECT Code FROM Warehouses WHERE Capacity > (SELECT Capacity FROM Warehouses)",
    "exec_result": 0
  },
  {
    "idx": 1756,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity",
    "pred": "SELECT Code FROM Warehouses WHERE Capacity > (SELECT Capacity FROM Boxes)",
    "exec_result": 0
  },
  {
    "idx": 1757,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'",
    "pred": "SELECT SUM(T1.Value) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location = 'Chicago'",
    "exec_result": 0
  },
  {
    "idx": 1758,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'",
    "pred": "SELECT SUM(T1.Contents.1) FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Code NOT IN ('Chicago') GROUP BY T2.Code;",
    "exec_result": 0
  },
  {
    "idx": 1759,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name ,  city ,  state FROM University ORDER BY university_name",
    "pred": "SELECT University_Name, City, State FROM university ORDER BY University_Name;",
    "exec_result": 1
  },
  {
    "idx": 1760,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name ,  city ,  state FROM University ORDER BY university_name",
    "pred": "SELECT University_Name, City, State FROM university ORDER BY University_Name;",
    "exec_result": 1
  },
  {
    "idx": 1761,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'",
    "pred": "SELECT COUNT(DISTINCT university_id) FROM university WHERE city IN ('St. Louis', 'Waukesha', 'Mequon')",
    "exec_result": 0
  },
  {
    "idx": 1762,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'",
    "pred": "SELECT COUNT(DISTINCT university_id) FROM university WHERE city IN ('St. Louis', 'Waukesha', 'Mequon') AND state IN ('Illinois', 'Ohio')",
    "exec_result": 0
  },
  {
    "idx": 1763,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University",
    "pred": "SELECT MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM university;",
    "exec_result": 1
  },
  {
    "idx": 1764,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University",
    "pred": "SELECT MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM university;",
    "exec_result": 1
  },
  {
    "idx": 1765,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT team_name FROM University WHERE enrollment  >  (SELECT avg(enrollment) FROM University)",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Reputation_point > (SELECT AVG(T2.Reputation_point) FROM overall_ranking AS T2 WHERE T2.University_ID = T1.University_ID)",
    "exec_result": 0
  },
  {
    "idx": 1766,
    "db_id": "university_rank",
    "question": "",
    "gold": "select team_name from university where enrollment  >  (select avg(enrollment) from university)",
    "pred": "SELECT T1.Team_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN overall_ranking AS T3 ON T1.University_ID = T3.University_ID JOIN major_ranking AS T4 ON T2.Major_ID = T4.Major_ID WHERE T3.Reputation_point > (SELECT MAX(T3.Reputation_point) FROM overall_ranking AS T3 WHERE T3.Reputation_point > T3.Reputation_point ORDER BY T3.Reputation_point DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 1767,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT DISTINCT home_conference FROM University",
    "pred": "SELECT Home_Conference FROM university",
    "exec_result": 1
  },
  {
    "idx": 1768,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT DISTINCT home_conference FROM University",
    "pred": "SELECT DISTINCT Home_Conference FROM university;",
    "exec_result": 1
  },
  {
    "idx": 1769,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference ,  count(*) FROM University GROUP BY home_conference",
    "pred": "SELECT Home_Conference, COUNT(DISTINCT University_ID) FROM overall_ranking GROUP BY Home_Conference",
    "exec_result": 0
  },
  {
    "idx": 1770,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference ,  count(*) FROM University GROUP BY home_conference",
    "pred": "SELECT COUNT(DISTINCT T1.University_ID) FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID JOIN major AS T3 ON T3.Major_ID = T2.Major_ID WHERE T2.Reputation_point = (SELECT MIN(T2.Reputation_point) FROM overall_ranking AS T2 JOIN major AS T3 ON T3.Major_ID = T2.Major_ID WHERE T2.Reputation_point = T3.Reputation_point)",
    "exec_result": 0
  },
  {
    "idx": 1771,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.State, COUNT(T1.University_ID) AS University_Count FROM university AS T1 JOIN major AS T2 ON T1.Major_ID = T2.Major_ID GROUP BY T1.State ORDER BY University_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1772,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT State FROM university WHERE University_ID IN (SELECT University_ID FROM overall_ranking WHERE Rank = (SELECT MAX(Rank) FROM overall_ranking))",
    "exec_result": 1
  },
  {
    "idx": 1773,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000",
    "pred": "SELECT T1.Home_Conference FROM university AS T1 JOIN major AS T2 ON T1.Major_ID = T2.Major_ID JOIN overall_ranking AS T3 ON T1.Home_Conference = T3.Home_Conference WHERE T1.Enrollment > 2000 GROUP BY T1.Home_Conference;",
    "exec_result": 0
  },
  {
    "idx": 1774,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000",
    "pred": "SELECT T1.Home_Conference FROM university AS T1 JOIN major AS T2 ON T1.Major_ID = T2.Major_ID JOIN overall_ranking AS T3 ON T1.University_ID = T3.University_ID JOIN major_ranking AS T4 ON T2.Major_ID = T4.Major_ID WHERE T3.Reputation_point > 2000 AND T4.Total > 2000;",
    "exec_result": 0
  },
  {
    "idx": 1775,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1",
    "pred": "SELECT T1.concert_Name, T1.Enrollment FROM concert AS T1 JOIN ( SELECT T2.concert_ID, SUM(T2.Enrollment) AS Total FROM concert AS T2 JOIN ( SELECT T1.concert_ID, COUNT(*) AS Enrollment FROM concert AS T1 JOIN stadium AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID ) AS T3 ON T1.concert_ID = T3.concert_ID ) AS T4 ON T4.concert_ID = T1.concert_ID ORDER BY T4.Total DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1776,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1",
    "pred": "SELECT T1.Home_Conference, T2.Enrollment FROM university AS T1 JOIN major AS T2 ON T1.Major_ID = T2.Major_ID JOIN overall_ranking AS T3 ON T1.University_ID = T3.University_ID ORDER BY T3.Total LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1777,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT major_name ,  major_code FROM Major ORDER BY major_code",
    "pred": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;",
    "exec_result": 1
  },
  {
    "idx": 1778,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT major_name ,  major_code FROM Major ORDER BY major_code",
    "pred": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;",
    "exec_result": 1
  },
  {
    "idx": 1779,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'",
    "pred": "SELECT Major_Name, Major_ID FROM major WHERE Major_ID IN ( SELECT Major_ID FROM major_ranking WHERE University_ID = ( SELECT University_ID FROM university WHERE University_Name = 'Augustana College' ) )",
    "exec_result": 0
  },
  {
    "idx": 1780,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'",
    "pred": "SELECT T1.Reputation_point, T1.Major_Name, T2.Reputation_point FROM major AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID JOIN overall_ranking AS T3 ON T2.University_ID = T3.University_ID JOIN major_ranking AS T4 ON T2.University_ID = T4.University_ID WHERE T2.University_Name = 'Augustana College'",
    "exec_result": 0
  },
  {
    "idx": 1781,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'",
    "pred": "SELECT T1.University_Name, T1.City, T1.State FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.University_ID = (SELECT University_ID FROM university WHERE Major_Name = 'Accounting' ORDER BY T3.Rank DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 1782,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'",
    "pred": "SELECT T1.University_Name, T1.City, T1.State FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.University_ID = (SELECT University_ID FROM overall_ranking ORDER BY T3.Total DESC LIMIT 1) AND T3.Major_Name = 'Accounting'",
    "exec_result": 0
  },
  {
    "idx": 1783,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.rank = 1 ORDER BY T2.Reputation_point DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1784,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Reputation_point = (SELECT MIN(T3.Reputation_point) FROM major AS T3 WHERE T3.University_ID = T1.University_ID AND T3.Reputation_point > T2.Reputation_point) ORDER BY T2.Reputation_point LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1785,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1",
    "pred": "SELECT University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major WHERE Rank = 1)",
    "exec_result": 0
  },
  {
    "idx": 1786,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Reputation_point != 1",
    "exec_result": 0
  },
  {
    "idx": 1787,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.University_ID = T1.University_ID AND T2.Major_Name = 'Accounting' AND T2.Major_Name = 'Urban Education';",
    "exec_result": 0
  },
  {
    "idx": 1788,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'",
    "pred": "SELECT T1.Major_Name FROM major AS T1 JOIN major_ranking AS T2 ON T1.Major_ID = T2.Major_ID WHERE T2.Reputation_point = (SELECT MIN(T2.Reputation_point) FROM major_ranking AS T2 WHERE T2.Major_ID = T1.Major_ID AND T2.Reputation_point > 0) AND T1.Major_Name IN ('Accounting', 'Urban Education')",
    "exec_result": 0
  },
  {
    "idx": 1789,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'",
    "pred": "SELECT T1.University_Name, T2.Reputation_point, T2.Reputation_point * T2.Citation_point AS Total FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID WHERE T1.City = 'Waukesha' AND T1.State = 'Wisconsin' ORDER BY T2.Reputation_point DESC, T2.Citation_point DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1790,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'",
    "pred": "SELECT University_Name, Rank FROM university WHERE State = 'Wisconsin'",
    "exec_result": 0
  },
  {
    "idx": 1791,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1",
    "pred": "SELECT T1.university_name FROM university AS T1 JOIN major AS T2 ON T1.university_id = T2.university_id JOIN major_ranking AS T3 ON T2.major_id = T3.major_id WHERE T3.reputation_point = (SELECT MAX(T4.reputation_point) FROM university AS T4 WHERE T4.university_id = T1.university_id) ORDER BY T3.reputation_point DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1792,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.Reputation_point = (SELECT MAX(T3.Reputation_point) FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.Major_ID = T3.Major_ID) ORDER BY T3.Reputation_point DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1793,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point",
    "pred": "SELECT University_Name FROM university ORDER BY Reputation_point ASC;",
    "exec_result": 0
  },
  {
    "idx": 1794,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point",
    "pred": "SELECT University_Name FROM university ORDER BY Reputation_point ASC",
    "exec_result": 0
  },
  {
    "idx": 1795,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  \"Accounting\"",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN overall_ranking AS T3 ON T1.University_ID = T3.University_ID JOIN major_ranking AS T4 ON T2.Major_ID = T4.Major_ID WHERE T3.Reputation_point >= 3 ORDER BY T4.Rank ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1796,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  \"Accounting\"",
    "pred": "SELECT T1.University_Name, T2.Reputation_point, T3.Reputation_point FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID JOIN major_ranking AS T3 ON T2.Major_ID = T3.Major_ID WHERE T3.Rank >= 3;",
    "exec_result": 0
  },
  {
    "idx": 1797,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5",
    "pred": "SELECT SUM(T1.Enrollment) FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Rank < 5",
    "exec_result": 0
  },
  {
    "idx": 1798,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5",
    "pred": "SELECT SUM(T2.Reputation_point) FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Rank <= 5;",
    "exec_result": 0
  },
  {
    "idx": 1799,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3",
    "pred": "SELECT T1.Major_Name, T1.Reputation_point FROM major AS T1 JOIN major_ranking AS T2 ON T1.Major_ID = T2.Major_ID WHERE T2.Reputation_point >= 3 ORDER BY T1.Reputation_point DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1800,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3",
    "pred": "SELECT T1.Major_Name, T2.Reputation_point FROM major AS T1 JOIN university AS T2 ON T1.Major_ID = T2.Major_ID ORDER BY T2.Reputation_point DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1801,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2",
    "pred": "SELECT T1.University_Name FROM university AS T1 JOIN major AS T2 ON T1.University_ID = T2.University_ID WHERE T1.Enrollment < 3000 GROUP BY T1.University_ID HAVING COUNT(DISTINCT T2.University_ID) > 2;",
    "exec_result": 0
  },
  {
    "idx": 1802,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2",
    "pred": "SELECT T1.State, COUNT(T1.University_ID) FROM university AS T1 JOIN major AS T2 ON T1.Major_ID = T2.Major_ID JOIN overall_ranking AS T3 ON T1.University_ID = T3.University_ID JOIN major_ranking AS T4 ON T2.Major_ID = T4.Major_ID WHERE T3.Reputation_point > 2 AND T3.Total < 3000 GROUP BY T1.State",
    "exec_result": 0
  },
  {
    "idx": 1803,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'null'",
    "pred": "SELECT DISTINCT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Movie IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 1804,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'null'",
    "pred": "SELECT DISTINCT T1.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Movie IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1805,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G'",
    "pred": "SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G'",
    "exec_result": 0
  },
  {
    "idx": 1806,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G'",
    "pred": "SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G'",
    "exec_result": 0
  },
  {
    "idx": 1807,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT T2.Title FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T1.Movie = 'Odeon'",
    "exec_result": 0
  },
  {
    "idx": 1808,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT Title FROM Movies WHERE Code IN (SELECT Movie FROM MovieTheaters WHERE Name = 'Odeon')",
    "exec_result": 1
  },
  {
    "idx": 1809,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT T1.Name AS TheaterName, T2.Name AS MovieName FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T1.Movie IN (SELECT T2.Name FROM Movies AS T2 WHERE T2.Code IS NOT NULL)",
    "exec_result": 0
  },
  {
    "idx": 1810,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1811,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies WHERE rating  =  'G'",
    "pred": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1812,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies WHERE rating  =  'G'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1813,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(DISTINCT MovieTheaters.Movie) AS TotalMovies FROM MovieTheaters;",
    "exec_result": 1
  },
  {
    "idx": 1814,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(DISTINCT MovieTheaters.Movie) FROM MovieTheaters;",
    "exec_result": 1
  },
  {
    "idx": 1815,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1816,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1817,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT name) FROM movietheaters",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1818,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT name) FROM movietheaters",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1819,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT rating FROM movies WHERE title LIKE '%Citizen%'",
    "pred": "SELECT T2.Rating FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Title LIKE '%Citizen%' AND T2.Movie IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1820,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT rating FROM movies WHERE title LIKE '%Citizen%'",
    "pred": "SELECT T1.Rating FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Name LIKE '%Citizen%' AND T2.Movie IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1821,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating IN ('G', 'PG')",
    "exec_result": 0
  },
  {
    "idx": 1822,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating IN ('G', 'PG')",
    "exec_result": 0
  },
  {
    "idx": 1823,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T1.Movie IN ('Odeon', 'Imperial')",
    "exec_result": 0
  },
  {
    "idx": 1824,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'",
    "pred": "SELECT DISTINCT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name IN ('Odeon', 'Imperial')",
    "exec_result": 1
  },
  {
    "idx": 1825,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T1.Movie IN ('Odeon', 'Imperial')",
    "exec_result": 1
  },
  {
    "idx": 1826,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'",
    "pred": "SELECT T2.Title FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T1.Movie = (SELECT Movie FROM Movies WHERE Code = (SELECT Code FROM MovieTheaters WHERE Name = 'Odeon') INTERSECT SELECT Movie FROM Movies WHERE Code = (SELECT Code FROM MovieTheaters WHERE Name = 'Imperial'))",
    "exec_result": 0
  },
  {
    "idx": 1827,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT DISTINCT T1.Movie FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T1.Movie NOT IN ('Odeon')",
    "exec_result": 0
  },
  {
    "idx": 1828,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT DISTINCT T1.Movie FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T1.Movie != 'Odeon'",
    "exec_result": 0
  },
  {
    "idx": 1829,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY title",
    "pred": "SELECT Title FROM Movies ORDER BY Title;",
    "exec_result": 1
  },
  {
    "idx": 1830,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY title",
    "pred": "SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code ORDER BY T1.Name;",
    "exec_result": 0
  },
  {
    "idx": 1831,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY rating",
    "pred": "SELECT Title FROM Movies ORDER BY Rating;",
    "exec_result": 1
  },
  {
    "idx": 1832,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY rating",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code ORDER BY T2.Rating;",
    "exec_result": 0
  },
  {
    "idx": 1833,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code GROUP BY T1.Movie ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1834,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code GROUP BY T1.Movie ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1835,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code GROUP BY T1.Movie ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1836,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code GROUP BY T1.Movie ORDER BY COUNT(T1.Movie) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1837,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies GROUP BY rating",
    "pred": "SELECT Rating, COUNT(*) FROM Movies GROUP BY Rating",
    "exec_result": 1
  },
  {
    "idx": 1838,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies GROUP BY rating",
    "pred": "SELECT Rating, COUNT(*) FROM Movies GROUP BY Rating",
    "exec_result": 1
  },
  {
    "idx": 1839,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating",
    "pred": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1840,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating",
    "pred": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1841,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code GROUP BY T1.Movie HAVING COUNT(T1.Movie) > 0",
    "exec_result": 0
  },
  {
    "idx": 1842,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies)",
    "exec_result": 0
  },
  {
    "idx": 1843,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'",
    "pred": "SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code",
    "exec_result": 0
  },
  {
    "idx": 1844,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'",
    "pred": "SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code",
    "exec_result": 0
  },
  {
    "idx": 1845,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1846,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'",
    "pred": "SELECT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1847,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies",
    "pred": "SELECT Title FROM Movies;",
    "exec_result": 1
  },
  {
    "idx": 1848,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies",
    "pred": "SELECT DISTINCT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie;",
    "exec_result": 0
  },
  {
    "idx": 1849,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT rating FROM movies",
    "pred": "SELECT DISTINCT Rating FROM Movies;",
    "exec_result": 1
  },
  {
    "idx": 1850,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT rating FROM movies",
    "pred": "SELECT DISTINCT Rating FROM Movies;",
    "exec_result": 1
  },
  {
    "idx": 1851,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT * FROM movies WHERE rating  =  'null'",
    "pred": "SELECT Title FROM Movies WHERE Rating = 'None'",
    "exec_result": 1
  },
  {
    "idx": 1852,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT * FROM movies WHERE rating  =  'null'",
    "pred": "SELECT DISTINCT T1.Title, T1.Rating FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 1853,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')",
    "pred": "SELECT DISTINCT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Movie IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 1854,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')",
    "pred": "SELECT DISTINCT T1.Name FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code WHERE T2.Code IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 1855,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1",
    "pred": "SELECT T2.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Recipient ORDER BY T2.Weight DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1856,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1",
    "pred": "SELECT C.Name FROM Client AS C JOIN Package AS P ON C.AccountNumber = P.Sender JOIN Shipment AS S ON P.Shipment = S.ShipmentID JOIN Has_Clearance AS H ON S.Planet = H.Planet WHERE H.Level = 4 ORDER BY P.Weight DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1857,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT SUM(Weight) FROM Package WHERE Sender = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1858,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT SUM(Weight) FROM Package WHERE Sender = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1859,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT POSITION FROM Employee WHERE Name  =  \"Amy Wong\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1860,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT POSITION FROM Employee WHERE Name  =  \"Amy Wong\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1861,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Salary ,  POSITION FROM Employee WHERE Name  =  \"Turanga Leela\";",
    "pred": "SELECT `Salary`, `Position` FROM Employee WHERE Name = 'Turanga Leela';",
    "exec_result": 1
  },
  {
    "idx": 1862,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Salary ,  POSITION FROM Employee WHERE Name  =  \"Turanga Leela\";",
    "pred": "SELECT Salary, Position FROM Employee WHERE Name = 'Turanga Leela';",
    "exec_result": 1
  },
  {
    "idx": 1863,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT avg(Salary) FROM Employee WHERE POSITION  =  \"Intern\";",
    "pred": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern'",
    "exec_result": 1
  },
  {
    "idx": 1864,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT avg(Salary) FROM Employee WHERE POSITION  =  \"Intern\";",
    "pred": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern'",
    "exec_result": 1
  },
  {
    "idx": 1865,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  \"Physician\";",
    "pred": "SELECT Level FROM Client WHERE Name = 'Physician' AND EmployeeID IN (SELECT EmployeeID FROM Has_Clearance WHERE PlanetID IN (SELECT PlanetID FROM Planet WHERE Name = 'Tarantulon VI'))",
    "exec_result": 0
  },
  {
    "idx": 1866,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  \"Physician\";",
    "pred": "SELECT Level FROM Has_Clearance WHERE Employee = 'Physician'",
    "exec_result": 1
  },
  {
    "idx": 1867,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT PackageNumber FROM Package WHERE Sender = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1868,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT COUNT(*) FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T1.AccountNumber HAVING T1.Name = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1869,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t1.packagenumber from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber where t2.name = \"leo wong\";",
    "pred": "SELECT PackageNumber FROM Package WHERE Sender = 'Leo Wong' AND Recipient = 'Judge John Whitey'",
    "exec_result": 1
  },
  {
    "idx": 1870,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\";",
    "pred": "SELECT PackageNumber FROM Package WHERE Sender = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1871,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT T2.Contents, T3.Shipment AS ShipmentID FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender JOIN Package AS T3 ON T3.Shipment = T2.Shipment JOIN Employee AS T4 ON T3.Sender = T4.Employee WHERE T4.Name = 'Leo Wong';",
    "exec_result": 0
  },
  {
    "idx": 1872,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT DISTINCT PackageNumber FROM Client WHERE Name = 'Leo Wong' AND PackageNumber IN (SELECT PackageNumber FROM Shipment WHERE Manager = 'Leo Wong' AND Sender = 'Leo Wong')",
    "exec_result": 0
  },
  {
    "idx": 1873,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = \"Ogden Wernstrom\" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT COUNT(*) FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender JOIN Package AS T3 ON T2.Shipment = T3.Shipment JOIN Has_Clearance AS T4 ON T3.Shipment = T4.ShipmentID JOIN Employee AS T5 ON T4.Employee = T5.EmployeeID WHERE T5.Name = 'Ogden Wernstrom' AND T5.Name = 'Leo Wong';",
    "exec_result": 0
  },
  {
    "idx": 1874,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = \"Ogden Wernstrom\" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT COUNT(*) FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender JOIN Package AS T3 ON T2.Shipment = T3.Shipment JOIN Client AS T4 ON T3.Recipient = T4.AccountNumber WHERE T4.Name = 'Ogden Wernstrom' AND T1.Name = 'Leo Wong'",
    "exec_result": 1
  },
  {
    "idx": 1875,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"John Zoidfarb\";",
    "pred": "SELECT Contents FROM Package WHERE Sender = 'John Zoidfarb' AND Recipient = 'Judge John Whitey'",
    "exec_result": 0
  },
  {
    "idx": 1876,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"John Zoidfarb\";",
    "pred": "SELECT T1.Contents FROM Client AS T1 JOIN Has_Clearance AS T2 ON T1.AccountNumber = T2.Employee WHERE T2.Name = 'John Zoidfarb' GROUP BY T1.AccountNumber, T1.Name",
    "exec_result": 0
  },
  {
    "idx": 1877,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE \"John\";",
    "pred": "SELECT T1.ShipmentID, T1.Weight FROM Client AS T1 JOIN Has_Clearance AS T2 ON T1.AccountNumber = T2.Employee WHERE T1.Name LIKE '%John%' AND T2.Level = 4 ORDER BY T1.Weight DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1878,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE \"John\";",
    "pred": "SELECT T3.ShipmentID, MAX(T3.Weight) AS MaxWeight FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender JOIN Package AS T3 ON T2.Shipment.ShipmentID = T3.ShipmentID WHERE T1.Name LIKE '%John%' OR T1.Name LIKE '%%John%' OR T1.Name LIKE '%%John%' OR T1.Name LIKE '%%John%' GROUP BY T3.ShipmentID;",
    "exec_result": 0
  },
  {
    "idx": 1879,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;",
    "pred": "SELECT PackageNumber, Weight FROM Package WHERE Weight < (SELECT MIN(Weight) FROM Package) ORDER BY Weight DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1880,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;",
    "pred": "SELECT T1.PackageNumber, T1.Weight FROM Package AS T1 JOIN ( SELECT PackageNumber, Weight FROM Package ORDER BY Weight ASC LIMIT 3 ) AS T2 ON T1.PackageNumber = T2.PackageNumber",
    "exec_result": 0
  },
  {
    "idx": 1881,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT C.Name, COUNT(P.PackageNumber) AS PackageCount FROM Client AS C JOIN Has_Clearance AS H ON C.AccountNumber = H.Employee JOIN Package AS P ON H.Planet = P.Planet GROUP BY C.AccountNumber ORDER BY PackageCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1882,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT C.Name, COUNT(P.PackageNumber) AS PackageCount FROM Client AS C JOIN Package AS P ON C.AccountNumber = P.Sender GROUP BY C.AccountNumber ORDER BY PackageCount DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1883,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;",
    "pred": "SELECT C.Name, COUNT(P.PackageNumber) AS PackageCount FROM Client AS C JOIN Has_Clearance AS H ON C.AccountNumber = H.Employee JOIN Package AS P ON H.Planet = P.Planet GROUP BY C.AccountNumber ORDER BY PackageCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1884,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;",
    "pred": "SELECT T2.Recipient, SUM(T2.Weight) AS TotalWeight FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T2.Recipient ORDER BY TotalWeight DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1885,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;",
    "pred": "SELECT C.Name FROM Client AS C JOIN Has_Clearance AS H ON C.AccountNumber = H.Employee JOIN Package AS P ON H.Planet = P.Shipment GROUP BY C.AccountNumber HAVING COUNT(DISTINCT P.Shipment) > 1;",
    "exec_result": 0
  },
  {
    "idx": 1886,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;",
    "pred": "SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender GROUP BY T1.AccountNumber HAVING COUNT(T2.Shipment) > 1",
    "exec_result": 0
  },
  {
    "idx": 1887,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Coordinates FROM Planet WHERE Name  =  \"Mars\";",
    "pred": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';",
    "exec_result": 1
  },
  {
    "idx": 1888,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Coordinates FROM Planet WHERE Name  =  \"Mars\";",
    "pred": "SELECT T2.Coordinates FROM Planet AS T1 JOIN Has_Clearance AS T2 ON T1.PlanetID = T2.Planet WHERE T1.Name = 'Mars';",
    "exec_result": 0
  },
  {
    "idx": 1889,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name ,  Coordinates FROM Planet ORDER BY Name",
    "pred": "SELECT Name, Coordinates FROM Planet ORDER BY Name;",
    "exec_result": 1
  },
  {
    "idx": 1890,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name ,  Coordinates FROM Planet ORDER BY Name",
    "pred": "SELECT Name, Coordinates FROM Planet ORDER BY Name;",
    "exec_result": 1
  },
  {
    "idx": 1891,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = \"Phillip J. Fry\";",
    "pred": "SELECT DISTINCT Shipment.ShipmentID FROM Shipment JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Client ON Has_Clearance.Manager = Client.AccountNumber JOIN Planet ON Has_Clearance.Planet = Planet.PlanetID JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID WHERE Employee.Name = 'Phillip J. Fry';",
    "exec_result": 0
  },
  {
    "idx": 1892,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = \"Phillip J. Fry\";",
    "pred": "SELECT DISTINCT Shipment.ShipmentID FROM Shipment JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Client ON Has_Clearance.Manager = Client.AccountNumber JOIN Package ON Has_Clearance.Employee = Client.AccountNumber WHERE Has_Clearance.Level = 2 AND Has_Clearance.PlanetID = Has_Clearance.PlanetID AND Has_Clearance.ShipmentID IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1893,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Date FROM Shipment;",
    "pred": "SELECT DISTINCT Shipment.Date FROM Shipment JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Client ON Has_Clearance.Manager = Client.AccountNumber",
    "exec_result": 0
  },
  {
    "idx": 1894,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Date FROM Shipment;",
    "pred": "SELECT DISTINCT Shipment.Date FROM Shipment JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Client ON Has_Clearance.Manager = Client.AccountNumber",
    "exec_result": 0
  },
  {
    "idx": 1895,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  \"Mars\";",
    "pred": "SELECT DISTINCT Shipment.ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';",
    "exec_result": 1
  },
  {
    "idx": 1896,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  \"Mars\";",
    "pred": "SELECT DISTINCT Shipment.ShipmentID FROM Shipment JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Planet ON Has_Clearance.PlanetID = Planet.PlanetID WHERE Planet.Name = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1897,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" AND T3.Name = \"Turanga Leela\";",
    "pred": "SELECT DISTINCT Shipment.ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID JOIN Client ON Has_Clearance.Manager = Client.AccountNumber WHERE Planet.Name = 'Tarantulon VI' AND Planet.PlanetID = 65498721354.688 AND Planet.Coordinates = 65498463216.3466 AND Planet.Coordinates = 65432135979.6547 AND Planet.Coordinates = 6543219894.1654 AND Planet.Coordinates = 849842198.354654 AND Planet.Coordinates = 654321987.21654",
    "exec_result": 0
  },
  {
    "idx": 1898,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" AND T3.Name = \"Turanga Leela\";",
    "pred": "SELECT PackageNumber FROM Package WHERE Shipment.ShippingID IN ( SELECT Shipment.ShipmentID FROM Shipment JOIN Has_Clearance ON Shipment.ShippingID = Has_Clearance.ShippingID JOIN Planet ON Has_Clearance.Planet = Planet.PlanetID JOIN Client ON Has_Clearance.Manager = Client.AccountNumber WHERE Planet.Name = 'Tarantulon VI' AND Has_Clearance.Level = 2 AND Client.Name = 'Zapp Brannigan' AND Has_Clearance.ShipmentID IS NOT NULL AND PackageContents = 'Undeclared' )",
    "exec_result": 0
  },
  {
    "idx": 1899,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" OR T3.Name = \"Turanga Leela\";",
    "pred": "SELECT DISTINCT Shipment.ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID WHERE Planet.Name = 'Mars' OR Planet.Name = 'Omicron Persei 8' OR Planet.Name = 'Omega III' OR Planet.Name = 'Nintenduu 64' OR Planet.Name = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1900,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" OR T3.Name = \"Turanga Leela\";",
    "pred": "SELECT PackageNumber FROM Package WHERE Shipments IN (SELECT ShipmentID FROM Shipment WHERE Planet = 'Mars' AND Manager = 'Turanga Leela')",
    "exec_result": 0
  },
  {
    "idx": 1901,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;",
    "pred": "SELECT Planet.Name, SUM(Has_Clearance.Weight) AS Total_Weight FROM Planet JOIN Has_Clearance ON Planet.PlanetID = Has_Clearance.Planet WHERE Has_Clearance.Employee = (SELECT EmployeeID FROM Client WHERE AccountNumber = 'Judge John Whitey') GROUP BY Planet.Name",
    "exec_result": 0
  },
  {
    "idx": 1902,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;",
    "pred": "SELECT Planet.Name, COUNT(*) AS Number_of_shipments FROM Shipment JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.ShipmentID JOIN Planet ON Has_Clearance.PlanetID = Planet.PlanetID GROUP BY Planet.Name ORDER BY Number_of_shipments DESC;",
    "exec_result": 0
  },
  {
    "idx": 1903,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Planet.Name FROM Planet JOIN Has_Clearance ON Planet.PlanetID = Has_Clearance.Planet JOIN Shipment ON Has_Clearance.Planet = Shipment.Planet GROUP BY Planet.Name ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1904,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Planet.Name FROM Planet JOIN Has_Clearance ON Planet.PlanetID = Has_Clearance.Planet JOIN Shipment ON Has_Clearance.Planet = Shipment.Planet WHERE Shipment.ShipmentID = (SELECT MAX(Shipment.ShipmentID) FROM Shipment) ORDER BY Planet.Name DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1905,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;",
    "pred": "SELECT T3.`Name`, COUNT(*) FROM Has_Clearance AS T1 JOIN Shipment AS T2 ON T1.`Planet` = T2.`Planet` JOIN Employee AS T3 ON T1.`Manager` = T3.`EmployeeID` GROUP BY T3.`Name`",
    "exec_result": 0
  },
  {
    "idx": 1906,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;",
    "pred": "SELECT T3.Name, COUNT(*) AS Number_of_shipments FROM Has_Clearance AS T1 JOIN Shipment AS T2 ON T1.ShipmentID = T2.ShipmentID JOIN Employee AS T3 ON T1.Manager = T3.EmployeeID GROUP BY T3.Name ORDER BY Number_of_shipments DESC;",
    "exec_result": 0
  },
  {
    "idx": 1907,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT SUM(Weight) FROM Package WHERE Sender = 'Judge John Whitey' AND Recipient = 'Leo Wong' AND Planet = 'Mars' GROUP BY Sender, Recipient;",
    "exec_result": 0
  },
  {
    "idx": 1908,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT SUM(Weight) FROM Package WHERE Sender = 'Judge John Whitey' AND Recipient = 'Judge John Whitey' AND Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars')",
    "exec_result": 0
  },
  {
    "idx": 1909,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;",
    "pred": "SELECT Planet.Name, SUM(Weight) AS TotalWeight FROM Has_Clearance JOIN Shipment ON Has_Clearance.Planet = Shipment.Planet JOIN Package ON Shipment.ShipmentID = Package.ShipmentID GROUP BY Planet.Name ORDER BY TotalWeight DESC;",
    "exec_result": 0
  },
  {
    "idx": 1910,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;",
    "pred": "SELECT P.Name AS PlanetName, SUM(P.Weight) AS TotalWeight FROM Has_Clearance H JOIN Shipment S ON H.Planet = S.Planet JOIN Package P ON S.ShipmentID = P.ShipmentID GROUP BY P.Name ORDER BY TotalWeight DESC;",
    "exec_result": 0
  },
  {
    "idx": 1911,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;",
    "pred": "SELECT P.Name FROM Planet P JOIN Has_Clearance HC ON P.PlanetID = HC.Planet JOIN Shipment S ON HC.Planet = S.Planet WHERE S.Weight > 30 ORDER BY S.Date DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1912,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;",
    "pred": "SELECT P.Name FROM Planet P JOIN Has_Clearance HC ON P.PlanetID = HC.Planet JOIN Shipment S ON HC.Planet = S.Planet WHERE S.Weight > 30",
    "exec_result": 0
  },
  {
    "idx": 1913,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = \"Zapp Brannigan\" AND T4.Name = \"Omicron Persei 8\";",
    "pred": "SELECT PackageNumber FROM Package WHERE Planet = 'Omicron Persei 8' AND Sender = 'Zapp Brannigan' AND Planet = PlanetID",
    "exec_result": 0
  },
  {
    "idx": 1914,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = \"Zapp Brannigan\" AND T4.Name = \"Omicron Persei 8\";",
    "pred": "SELECT COUNT(*) AS Number_of_Packages, Planet.Name AS Planet_Name FROM Planet JOIN Has_Clearance ON Planet.PlanetID = Has_Clearance.Planet WHERE Has_Clearance.Manager = 'Zapp Brannigan' GROUP BY Planet.Name",
    "exec_result": 0
  },
  {
    "idx": 1915,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  \"Zapp Brannigan\" OR T4.Name  =  \"Omicron Persei 8\";",
    "pred": "SELECT PackageNumber FROM Package WHERE Planet = 'Omicron Persei 8' OR Sender = 'Zapp Brannigan' OR Planet = 'Omicron Persei 8' AND Sender = 'Zapp Brannigan'",
    "exec_result": 0
  },
  {
    "idx": 1916,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  \"Zapp Brannigan\" OR T4.Name  =  \"Omicron Persei 8\";",
    "pred": "SELECT COUNT(*) AS PackageCount, Planet.Name AS PlanetName FROM Planet JOIN Has_Clearance ON Planet.PlanetID = Has_Clearance.Planet WHERE Planet.Name = 'Omicron Persei 8' OR (Planet.Name = 'Tarantulon VI' AND Has_Clearance.Employee = 'Zapp Brannigan')",
    "exec_result": 0
  },
  {
    "idx": 1917,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;",
    "pred": "SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30",
    "exec_result": 1
  },
  {
    "idx": 1918,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;",
    "pred": "SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30",
    "exec_result": 1
  },
  {
    "idx": 1919,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Has_Clearance AS T2 ON T1.AccountNumber = T2.EmployeeID WHERE T2.Planet = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1920,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Has_Clearance AS T2 ON T1.AccountNumber = T2.Employee WHERE T2.Planet = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1921,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  \"Omega III\";",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Has_Clearance AS T2 ON T1.AccountNumber = T2.Employee WHERE T2.Level = 3 AND T1.Planet = 'Omega III'",
    "exec_result": 0
  },
  {
    "idx": 1922,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  \"Omega III\";",
    "pred": "SELECT T1.Name FROM Client AS T1 JOIN Has_Clearance AS T2 ON T1.AccountNumber = T2.Employee WHERE T2.Level = 4 AND T1.Shipment.Planet = 'Omega III'",
    "exec_result": 0
  },
  {
    "idx": 1923,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;",
    "pred": "SELECT Planet.Name FROM Planet JOIN Has_Clearance ON Planet.PlanetID = Has_Clearance.Planet WHERE Has_Clearance.Level = 2;",
    "exec_result": 0
  },
  {
    "idx": 1924,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;",
    "pred": "SELECT Planet.Name FROM Planet JOIN Has_Clearance ON Planet.PlanetID = Has_Clearance.Planet JOIN Client ON Has_Clearance.Employee = Client.AccountNumber WHERE Has_Clearance.Level = 2",
    "exec_result": 0
  },
  {
    "idx": 1925,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000",
    "pred": "SELECT T1.Name FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.Salary BETWEEN 5000 AND 10000",
    "exec_result": 0
  },
  {
    "idx": 1926,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000",
    "pred": "SELECT Employee.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee JOIN Shipment ON Has_Clearance.ShipmentID = Shipment.ShipmentID JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Has_Clearance.Salary BETWEEN 5000 AND 10000 GROUP BY Employee.Name;",
    "exec_result": 0
  },
  {
    "idx": 1927,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)",
    "pred": "SELECT Name FROM Employee WHERE Salary > (SELECT AVG(Salary) FROM Employee)",
    "exec_result": 0
  },
  {
    "idx": 1928,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)",
    "pred": "SELECT T1.Name FROM Employee AS T1 JOIN ( SELECT EmployeeID, AVG(Salary) as AverageSalary FROM Shipment GROUP BY EmployeeID ) AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.AverageSalary > 5000 OR T1.Salary > T2.AverageSalary;",
    "exec_result": 0
  },
  {
    "idx": 1929,
    "db_id": "planet_1",
    "question": "",
    "gold": "select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = \"mars\" );",
    "pred": "SELECT COUNT(*) FROM Client WHERE AccountNumber IN (SELECT Client.AccountNumber FROM Client JOIN Has_Clearance ON Client.AccountNumber = Has_Clearance.Employee WHERE Has_Clearance.Planet = 'Mars' AND Has_Clearance.Employee = 0)",
    "exec_result": 0
  },
  {
    "idx": 1930,
    "db_id": "planet_1",
    "question": "",
    "gold": "select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = \"mars\" );",
    "pred": "SELECT COUNT(*) FROM Client WHERE AccountNumber IN ( SELECT Client.AccountNumber FROM Client JOIN Package ON Client.AccountNumber = Package.Sender JOIN Has_Clearance ON Client.AccountNumber = Has_Clearance.Employee JOIN Shipment ON Has_Clearance.ShipmentID = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet = 'Mars' )",
    "exec_result": 0
  },
  {
    "idx": 1931,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM game",
    "pred": "SELECT COUNT(*) FROM game;",
    "exec_result": 1
  },
  {
    "idx": 1932,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM game",
    "pred": "SELECT COUNT(*) FROM game;",
    "exec_result": 1
  },
  {
    "idx": 1933,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC",
    "pred": "SELECT Title, Developers FROM game ORDER BY Units_sold_Millions DESC;",
    "exec_result": 1
  },
  {
    "idx": 1934,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC",
    "pred": "SELECT Title, Developers FROM game ORDER BY Units_sold_Millions DESC",
    "exec_result": 1
  },
  {
    "idx": 1935,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'",
    "pred": "SELECT AVG(units_sold_Millions) FROM game WHERE Platform_ID NOT IN (SELECT Platform_ID FROM platform WHERE Platform_name = 'Nintendo')",
    "exec_result": 0
  },
  {
    "idx": 1936,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'",
    "pred": "SELECT AVG(units_sold_Millions) FROM game WHERE Franchise NOT LIKE 'Nintendo%'",
    "exec_result": 0
  },
  {
    "idx": 1937,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Market_district FROM platform",
    "pred": "SELECT Platform_name, Market_district FROM platform",
    "exec_result": 1
  },
  {
    "idx": 1938,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Market_district FROM platform",
    "pred": "SELECT Platform_name, Market_district FROM platform;",
    "exec_result": 1
  },
  {
    "idx": 1939,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1",
    "pred": "SELECT Platform_name, Platform_ID FROM platform WHERE Download_rank = 1",
    "exec_result": 1
  },
  {
    "idx": 1940,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1",
    "pred": "SELECT Platform_name, Platform_ID FROM platform WHERE Download_rank = 1",
    "exec_result": 1
  },
  {
    "idx": 1941,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player",
    "pred": "SELECT MAX(Rank_of_the_year), MIN(Rank_of_the_year) FROM player",
    "exec_result": 1
  },
  {
    "idx": 1942,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player",
    "pred": "SELECT MAX(Rank_of_the_year), MIN(Rank_of_the_year) FROM player",
    "exec_result": 1
  },
  {
    "idx": 1943,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3",
    "pred": "SELECT COUNT(DISTINCT player_id) FROM game_player WHERE if_active = 'T' AND Game_ID IN (SELECT Game_ID FROM game WHERE Rank_of_the_year < 3)",
    "exec_result": 0
  },
  {
    "idx": 1944,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3",
    "pred": "SELECT COUNT(DISTINCT T1.Player_ID) FROM game_player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.Rank_of_the_year <= 3",
    "exec_result": 0
  },
  {
    "idx": 1945,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "pred": "SELECT Player_name FROM player ORDER BY Player_name ASC;",
    "exec_result": 1
  },
  {
    "idx": 1946,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "pred": "SELECT DISTINCT player.name FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game.Game_ID = game_player.Game_ID WHERE game_player.If_active = 'T' ORDER BY player.name ASC;",
    "exec_result": 0
  },
  {
    "idx": 1947,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC",
    "pred": "SELECT Player_name, College FROM player WHERE Rank_of_the_year = (SELECT MIN(Rank_of_the_year) FROM player) ORDER BY Rank_of_the_year DESC;",
    "exec_result": 0
  },
  {
    "idx": 1948,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC",
    "pred": "SELECT Player_name, College FROM player WHERE Rank_of_the_year = (SELECT MIN(Rank_of_the_year) FROM player) ORDER BY Rank_of_the_year DESC",
    "exec_result": 0
  },
  {
    "idx": 1949,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  \"Super Mario World\"",
    "pred": "SELECT Player_name, Rank_of_the_year FROM player WHERE Player_ID IN (SELECT Player_ID FROM game_player WHERE Game_ID = (SELECT Game_ID FROM game WHERE Title = 'Super Mario World'));",
    "exec_result": 1
  },
  {
    "idx": 1950,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  \"Super Mario World\"",
    "pred": "SELECT P.Player_name, P.Rank_of_the_year FROM player AS P JOIN game_player AS GP ON P.Player_ID = GP.Player_ID JOIN game AS G ON GP.Game_ID = G.Game_ID WHERE G.Title = 'Super Mario World' ORDER BY P.Rank_of_the_year;",
    "exec_result": 1
  },
  {
    "idx": 1951,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT DISTINCT T1.Developers FROM player AS T1 JOIN game_player AS T2 ON T1.Player_ID = T2.Player_ID JOIN game AS T3 ON T2.Game_ID = T3.Game_ID WHERE T3.Developers = 'Nintendo' AND T1.College = 'Auburn' GROUP BY T1.Developers HAVING COUNT(T2.Player_ID) = 1 ORDER BY T1.Developers ASC",
    "exec_result": 0
  },
  {
    "idx": 1952,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT DISTINCT T1.Developers FROM player AS T1 JOIN game_player AS T2 ON T1.Player_ID = T2.Player_ID JOIN game AS T3 ON T2.Game_ID = T3.Game_ID WHERE T1.College = 'Auburn' AND T2.If_active = 'T'",
    "exec_result": 0
  },
  {
    "idx": 1953,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT AVG(T2.units_sold_Millions) FROM player AS T1 JOIN game AS T2 ON T1.Game_ID = T2.Game_ID JOIN game_player AS T3 ON T2.Game_ID = T3.Game_ID WHERE T1.Position = 'Guard';",
    "exec_result": 0
  },
  {
    "idx": 1954,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT AVG(T1.Units_sold_Millions) FROM game_player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.Position = 'Guard';",
    "exec_result": 0
  },
  {
    "idx": 1955,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID",
    "pred": "SELECT Title, Platform_name FROM game",
    "exec_result": 0
  },
  {
    "idx": 1956,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID",
    "pred": "SELECT Title, Platform_name FROM game WHERE Platform_ID = (SELECT Platform_ID FROM platform WHERE Platform_name = 'Super Mario Bros.');",
    "exec_result": 0
  },
  {
    "idx": 1957,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  \"Asia\" OR T2.Market_district  =  \"USA\"",
    "pred": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Market_district IN ('Asia', 'USA')",
    "exec_result": 1
  },
  {
    "idx": 1958,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  \"Asia\" OR T2.Market_district  =  \"USA\"",
    "pred": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID WHERE T2.Market_district IN ('Asia', 'USA')",
    "exec_result": 1
  },
  {
    "idx": 1959,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise",
    "pred": "SELECT T1.Platform_ID, T1.Platform_name, COUNT(T2.Game_ID) AS Game_Count FROM platform AS T1 JOIN game AS T2 ON T1.Platform_ID = T2.Platform_ID GROUP BY T1.Platform_ID, T1.Platform_name ORDER BY Game_Count DESC;",
    "exec_result": 0
  },
  {
    "idx": 1960,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise",
    "pred": "SELECT Platform_name, COUNT(*) FROM platform JOIN game ON platform.Platform_ID = game.Platform_ID GROUP BY Platform_name",
    "exec_result": 0
  },
  {
    "idx": 1961,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T2.`Franchise` FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Game_ID JOIN game_player AS T3 ON T1.Game_ID = T3.Game_ID WHERE T3.If_active = 'T' GROUP BY T2.`Franchise` ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1962,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Franchise FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Game_ID JOIN game_player AS T3 ON T1.Game_ID = T3.Game_ID WHERE T3.If_active = 'T' GROUP BY T1.Franchise ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1963,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.Franchise FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Game_ID JOIN game_player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.If_active = 'T' GROUP BY T1.Game_ID HAVING COUNT(T2.Position) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 1964,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.franchise FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID GROUP BY T1.franchise HAVING COUNT(T2.If_active) > 1",
    "exec_result": 1
  },
  {
    "idx": 1965,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)",
    "pred": "SELECT DISTINCT T1.Player_name FROM player AS T1 JOIN game_player AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.If_active = 'T';",
    "exec_result": 0
  },
  {
    "idx": 1966,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)",
    "pred": "SELECT DISTINCT p.name FROM player p JOIN game_player gp ON p.Player_ID = gp.Player_ID WHERE gp.Game_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 1967,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Oklahoma\" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT g.Title FROM game g JOIN player p ON g.Game_ID = p.Game_ID WHERE p.College IN ('Oklahoma', 'Auburn') GROUP BY g.Title HAVING COUNT(DISTINCT p.Player_ID) = 1;",
    "exec_result": 0
  },
  {
    "idx": 1968,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Oklahoma\" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT T1.Title FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Game_ID WHERE T2.College IN ('Oklahoma', 'Auburn') AND T1.Platform_ID = (SELECT Platform_ID FROM platform WHERE Platform_name = 'Oklahoma College' OR Platform_name = 'Auburn College')",
    "exec_result": 0
  },
  {
    "idx": 1969,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT Franchise FROM game",
    "pred": "SELECT DISTINCT T1.Franchise FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Game_ID JOIN game_player AS T3 ON T1.Game_ID = T3.Game_ID WHERE T3.Player_ID IN ( SELECT MIN(T3.Player_ID) FROM game_player AS T3 WHERE T3.Game_ID = T1.Game_ID ) GROUP BY T1.Franchise HAVING COUNT(T2.Player_ID) = ( SELECT MIN(COUNT(T2.Player_ID)) FROM game_player AS T3 WHERE T3.Game_ID = T1.Game_ID )",
    "exec_result": 0
  },
  {
    "idx": 1970,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT Franchise FROM game",
    "pred": "SELECT DISTINCT T1.Franchise FROM game_player AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID GROUP BY T1.Platform_ID HAVING COUNT(T1.Player_ID) = ( SELECT MIN(T3.Count) FROM ( SELECT COUNT(T1.Player_ID) AS Count FROM game_player AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID GROUP BY T1.Platform_ID ) AS T3 )",
    "exec_result": 0
  },
  {
    "idx": 1971,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT DISTINCT T1.Title FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Game_ID WHERE T2.Position = 'Guard' GROUP BY T1.Game_ID HAVING COUNT(DISTINCT T2.Player_ID) = 0",
    "exec_result": 0
  },
  {
    "idx": 1972,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT DISTINCT T1.Title FROM game AS T1 JOIN player AS T2 ON T1.Game_ID = T2.Game_ID WHERE T2.Position = 'Guard' GROUP BY T1.Title HAVING COUNT(T2.Player_ID) = 0",
    "exec_result": 0
  },
  {
    "idx": 1973,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Year_Profits_billion DESC",
    "pred": "SELECT Name FROM press ORDER BY Year_Profits_billion DESC",
    "exec_result": 1
  },
  {
    "idx": 1974,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Year_Profits_billion DESC",
    "pred": "SELECT Name FROM press ORDER BY Year_Profits_billion DESC",
    "exec_result": 1
  },
  {
    "idx": 1975,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1",
    "pred": "SELECT Name FROM press WHERE Year_Profits_billion > 15 OR Month_Profits_billion > 1000000",
    "exec_result": 0
  },
  {
    "idx": 1976,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1",
    "pred": "SELECT Name FROM press WHERE Year_Profits_billion > 15 OR Month_Profits_billion > 1",
    "exec_result": 1
  },
  {
    "idx": 1977,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press",
    "pred": "SELECT AVG(Year_Profits_billion), MAX(Year_Profits_billion) FROM press",
    "exec_result": 1
  },
  {
    "idx": 1978,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press",
    "pred": "SELECT press.name, MAX(Year_Profits_billion), AVG(Year_Profits_billion) FROM press JOIN book ON press.press_id = book.press_id GROUP BY press.name",
    "exec_result": 0
  },
  {
    "idx": 1979,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1",
    "pred": "SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press)",
    "exec_result": 1
  },
  {
    "idx": 1980,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1",
    "pred": "SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press)",
    "exec_result": 1
  },
  {
    "idx": 1981,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)",
    "pred": "SELECT T1.Name AS Publisher_Name, T2.Name AS Publisher_Name FROM press AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Month_Profits_billion = ( SELECT MAX(T3.Month_Profits_billion) FROM press AS T3 WHERE T3.Book_ID = T2.Book_ID ) OR T1.Month_Profits_billion = ( SELECT MIN(T3.Month_Profits_billion) FROM press AS T3 WHERE T3.Book_ID = T2.Book_ID );",
    "exec_result": 0
  },
  {
    "idx": 1982,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)",
    "pred": "SELECT Name FROM press WHERE Sale_Amount = (SELECT MAX(Sale_Amount) FROM press) UNION ALL SELECT Name FROM press WHERE Sale_Amount = (SELECT MIN(Sale_Amount) FROM press);",
    "exec_result": 0
  },
  {
    "idx": 1983,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) FROM author WHERE age  <  30",
    "pred": "SELECT COUNT(DISTINCT author_id) FROM author WHERE age < 30",
    "exec_result": 1
  },
  {
    "idx": 1984,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) FROM author WHERE age  <  30",
    "pred": "SELECT COUNT(*) FROM author WHERE Age < 30",
    "exec_result": 1
  },
  {
    "idx": 1985,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(age) ,  gender FROM author GROUP BY gender",
    "pred": "SELECT gender, AVG(Age) FROM author GROUP BY gender",
    "exec_result": 1
  },
  {
    "idx": 1986,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(age) ,  gender FROM author GROUP BY gender",
    "pred": "SELECT Gender, AVG(Age) FROM author GROUP BY Gender",
    "exec_result": 1
  },
  {
    "idx": 1987,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender",
    "pred": "SELECT gender, COUNT(*) FROM author WHERE Age > 30 GROUP BY gender",
    "exec_result": 1
  },
  {
    "idx": 1988,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender",
    "pred": "SELECT gender, COUNT(*) FROM author WHERE Age > 30 GROUP BY gender",
    "exec_result": 1
  },
  {
    "idx": 1989,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title FROM book ORDER BY release_date DESC",
    "pred": "SELECT Title FROM book ORDER BY Release_date DESC;",
    "exec_result": 1
  },
  {
    "idx": 1990,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title FROM book ORDER BY release_date DESC",
    "pred": "SELECT Title FROM book ORDER BY Release_date DESC",
    "exec_result": 1
  },
  {
    "idx": 1991,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  book_series FROM book GROUP BY book_series",
    "pred": "SELECT Press_ID, COUNT(*) AS Book_Count FROM book JOIN press ON book.Press_ID = press.Press_ID GROUP BY Press_ID",
    "exec_result": 0
  },
  {
    "idx": 1992,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  book_series FROM book GROUP BY book_series",
    "pred": "SELECT Press_ID, COUNT(*) AS Book_Count, Book_Series FROM book GROUP BY Press_ID, Book_Series",
    "exec_result": 0
  },
  {
    "idx": 1993,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5",
    "pred": "SELECT T1.Title, T1.Release_date FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID ORDER BY T1.Sale_Amount DESC LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 1994,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5",
    "pred": "SELECT T1.Title, T1.Release_date FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID ORDER BY T1.Sale_Amount DESC LIMIT 5;",
    "exec_result": 1
  },
  {
    "idx": 1995,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500",
    "pred": "SELECT T2.`Book_Series` FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID WHERE T1.Sale_Amount > 1000 AND T1.Sale_Amount < 500;",
    "exec_result": 0
  },
  {
    "idx": 1996,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500",
    "pred": "SELECT T1.Book_Series, T2.Sale_Amount FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID WHERE T1.Sale_Amount BETWEEN 500 AND 1000 AND T1.Sale_Amount NOT IN (SELECT T3.Sale_Amount FROM book AS T3 WHERE T3.Sale_Amount < 500)",
    "exec_result": 0
  },
  {
    "idx": 1997,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'",
    "pred": "SELECT DISTINCT T1.Name FROM author AS T1 JOIN press AS T2 ON T1.Author_ID = T2.Author_ID JOIN book AS T3 ON T3.Book_ID = T2.Book_ID WHERE T3.Book_Series = 'MM' AND T3.Book_Series = 'LT' AND T2.Press_ID IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1998,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'",
    "pred": "SELECT DISTINCT T1.Name FROM author AS T1 JOIN press AS T2 ON T1.Author_ID = T2.Author_ID JOIN book AS T3 ON T2.Press_ID = T3.Press_ID WHERE T3.Title IN ('MM', 'LT')",
    "exec_result": 0
  },
  {
    "idx": 1999,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name ,  age FROM author WHERE author_id NOT IN (SELECT author_id FROM book)",
    "pred": "SELECT T1.Name, T1.Age FROM author AS T1 JOIN press AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Book_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 2000,
    "db_id": "book_press",
    "question": "",
    "gold": "select name from author where author_id not in (select author_id from book)",
    "pred": "SELECT DISTINCT T1.Name FROM author AS T1 JOIN press AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Book_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 2001,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT T1.Name FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T1.Author_ID HAVING COUNT(T2.Book_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 2002,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1",
    "pred": "SELECT a.Name FROM author a JOIN press p ON a.Author_ID = p.Author_ID WHERE p.Year_Profits_billion > 1 GROUP BY a.Name HAVING COUNT(*) > 1;",
    "exec_result": 0
  },
  {
    "idx": 2003,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3",
    "pred": "SELECT T1.Title, T1.Name AS Publisher_Name, T2.Name AS Press_Name FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID ORDER BY T1.Sale_Amount DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 2004,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3",
    "pred": "SELECT T1.Title, T1.Author.Name, T1.Press.Name FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID WHERE T1.Sale_Amount = ( SELECT MAX(T1.Sale_Amount) FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID ) ORDER BY T1.Sale_Amount DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 2005,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id",
    "pred": "SELECT press.name, SUM(book.sale_amount) FROM press JOIN book ON press.press_id = book.press_id GROUP BY press.name",
    "exec_result": 1
  },
  {
    "idx": 2006,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id",
    "pred": "SELECT press.name, SUM(book.sale_amount) AS total_sale_amount FROM book JOIN press ON book.press_id = press.press_id GROUP BY press.name",
    "exec_result": 1
  },
  {
    "idx": 2007,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name",
    "pred": "SELECT press.name, COUNT(*) AS book_count FROM press JOIN book ON press.press_id = book.press_id GROUP BY press.name HAVING SUM(book.sale_amount) > 1000;",
    "exec_result": 1
  },
  {
    "idx": 2008,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name",
    "pred": "SELECT press.name, COUNT(*) FROM press JOIN book ON press.press_id = book.press_id GROUP BY press.name HAVING SUM(book.sale_amount) > 1000",
    "exec_result": 1
  },
  {
    "idx": 2009,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1",
    "pred": "SELECT T1.Name FROM author AS T1 JOIN press AS T2 ON T1.Author_ID = T2.Author_ID JOIN book AS T3 ON T2.Press_ID = T3.Press_ID ORDER BY T3.Sale_Amount DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 2010,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2011,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Gender FROM author AS T1 JOIN book AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T1.Author_ID ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 2012,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.Name, T2.Gender FROM book AS T1 JOIN author AS T2 ON T1.Author_ID = T2.Author_ID GROUP BY T2.Author_ID ORDER BY SUM(T1.Sale_Amount) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2013,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'",
    "pred": "SELECT DISTINCT T1.Name FROM author AS T1 JOIN press AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Name = 'Accor' AND T2.Press_ID IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 2014,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'",
    "pred": "SELECT DISTINCT T1.Name FROM author AS T1 JOIN press AS T2 ON T1.Author_ID = T2.Author_ID WHERE T2.Name != 'Accor' AND T2.Name IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 2015,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2",
    "pred": "SELECT T1.Name, T2.Year_Profits_billion FROM press AS T1 JOIN book AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Year_Profits_billion > 2 GROUP BY T1.Book_ID HAVING COUNT(T1.Book_ID) > 2;",
    "exec_result": 0
  },
  {
    "idx": 2016,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2",
    "pred": "SELECT T2.Name, T2.Year_Profits_billion FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID GROUP BY T2.Press_ID HAVING COUNT(T1.Book_ID) > 2",
    "exec_result": 1
  },
  {
    "idx": 2017,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Authors",
    "pred": "SELECT COUNT(DISTINCT Documents.Process_id) AS author_count FROM Documents JOIN Documents_Processes ON Documents.document_id = Documents_Processes.document_id JOIN Ref_Staff_Roles ON Documents.Process_id = Ref_Staff_Roles.process_id JOIN Authors ON Ref_Staff_Roles.staff_role_code = Authors.staff_role_code;",
    "exec_result": 0
  },
  {
    "idx": 2018,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Authors",
    "pred": "SELECT DISTINCT Authors.author_name FROM Authors;",
    "exec_result": 1
  },
  {
    "idx": 2019,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name ,  other_details FROM Authors",
    "pred": "SELECT T1.author_name, T1.other_details FROM Authors AS T1 JOIN Documents AS T2 ON T1.author_name = T2.author_name;",
    "exec_result": 0
  },
  {
    "idx": 2020,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT other_details FROM Authors WHERE author_name  =  \"Addison Denesik\"",
    "pred": "SELECT T1.author_name, T1.other_details FROM Authors AS T1 JOIN Documents AS T2 ON T1.author_name = T2.author_name WHERE T1.author_name = 'Addison Denesik';",
    "exec_result": 0
  },
  {
    "idx": 2021,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(*) FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 2022,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents WHERE document_id  =  4",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2023,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents WHERE document_name  =  \"Travel to Brazil\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2024,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Documents WHERE author_name  =  \"Era Kerluke\"",
    "pred": "SELECT COUNT(*) FROM Documents WHERE author_name = 'Era Kerluke'",
    "exec_result": 1
  },
  {
    "idx": 2025,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_name ,  document_description FROM Documents",
    "pred": "SELECT document_name, document_description FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 2026,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_id ,  document_name FROM Documents WHERE author_name  =  \"Bianka Cummings\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2027,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T2.author_name ,  T2.other_details FROM Documents AS T1 JOIN Authors AS T2 ON T1.author_name  =  T2.author_name WHERE document_name  =  \"Travel to China\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2028,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name ,  count(*) FROM Documents GROUP BY author_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2029,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents GROUP BY author_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2030,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents GROUP BY author_name HAVING count(*)  >=  2",
    "pred": "SELECT T2.author_name FROM Documents AS T1 JOIN Documents_Processes AS T2 ON T1.document_id = T2.document_id GROUP BY T2.document_id HAVING COUNT(T2.document_id) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 2031,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Business_processes",
    "pred": "SELECT COUNT(*) FROM Business_Processes;",
    "exec_result": 1
  },
  {
    "idx": 2032,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT next_process_id ,  process_name ,  process_description FROM Business_processes WHERE process_id  =  9",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2033,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_name FROM Business_processes WHERE process_id  =  (SELECT next_process_id FROM Business_processes WHERE process_id  =  9)",
    "pred": "SELECT T1.process_name FROM Documents_Processes AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id INNER JOIN Process_Name AS T3 ON T1.process_id = T3.process_id WHERE T1.process_id = 9 GROUP BY T1.process_id, T3.process_id HAVING COUNT(*) = 1;",
    "exec_result": 0
  },
  {
    "idx": 2034,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Process_outcomes",
    "pred": "SELECT COUNT(*) FROM Documents_Processes",
    "exec_result": 0
  },
  {
    "idx": 2035,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_outcome_code ,  process_outcome_description FROM Process_outcomes",
    "pred": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes;",
    "exec_result": 1
  },
  {
    "idx": 2036,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_outcome_description FROM Process_outcomes WHERE process_outcome_code  =  \"working\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2037,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Process_status",
    "pred": "SELECT COUNT(*) FROM Documents_Processes",
    "exec_result": 0
  },
  {
    "idx": 2038,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_status_code ,  process_status_description FROM Process_status",
    "pred": "SELECT process_status_code, process_status_description FROM Process_Status;",
    "exec_result": 1
  },
  {
    "idx": 2039,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_status_description FROM Process_status WHERE process_status_code  =  \"ct\"",
    "pred": "-- Execute the corrected query SELECT process_status_description FROM Documents_Processes INNER JOIN Documents ON Documents_Processes.document_id = Documents.document_id WHERE process_status_code = 'ct';",
    "exec_result": 0
  },
  {
    "idx": 2040,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "SELECT COUNT(DISTINCT Staff_id) AS Staff_Count FROM Staff_in_Processes;",
    "exec_result": 0
  },
  {
    "idx": 2041,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM Staff",
    "pred": "SELECT Documents.Processes.process_id, Documents.Processes.process_outcome_code, Documents.Processes.process_status_code, Documents.Processes.process_name, Documents.document_id, Documents.Processes.next_process_id, Documents.Processes.date_from, Documents.Processes.date_to, Documents.Processes.other_details FROM Documents JOIN Business_Processes ON Documents.Processes.process_id = Business_Processes.process_id JOIN Documents_Processes ON Documents.Processes.process_id = Documents_Processes.process_id JOIN Process_Outcomes ON Documents.Processes.process_outcome_code = Process_Outcomes.process_outcome_code JOIN Process_Status ON Process_Outcomes.process_status_code = Process_Status.process_status_code JOIN Ref_Staff_Roles ON Process_Status.process_status_code = Ref_Staff_Roles.staff_role_code JOIN Staff_in_Processes ON Documents.Processes.process_id = Staff_in_Processes.process_id JOIN Documents_Processes ON Staff_in_Processes.document_id = Documents_Processes.document_id JOIN Documents ON Documents.Processes.process_id = Documents_Processes.process_id JOIN Process_Outcomes ON Documents.Processes.process_outcome_code = Process_Outcomes.process_outcome_code JOIN Process_Status ON Process_Outcomes.process_status_code = Process_Status.process_status_code JOIN Ref_Staff_Roles ON Process_Status.process_status_code = Ref_Staff_Roles.staff_role_code WHERE Documents.Processes.process_id IS NOT NULL ORDER BY Documents.Processes.process_id;",
    "exec_result": 0
  },
  {
    "idx": 2042,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_details FROM Staff WHERE staff_id  =  100",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2043,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Ref_staff_roles",
    "pred": "SELECT COUNT(DISTINCT Ref_Staff_Roles.staff_role_code) AS num_staff_roles FROM Ref_Staff_Roles;",
    "exec_result": 1
  },
  {
    "idx": 2044,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_code ,  staff_role_description FROM Ref_staff_roles",
    "pred": "SELECT staff_role_code, staff_role_description FROM Ref_Staff_Roles;",
    "exec_result": 1
  },
  {
    "idx": 2045,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_description FROM Ref_staff_roles WHERE staff_role_code  =  \"HR\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2046,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(DISTINCT document_id) FROM Documents_processes",
    "pred": "SELECT COUNT(*) FROM Documents WHERE document_id IN (SELECT document_id FROM Documents_Processes WHERE process_id IN (SELECT process_id FROM Documents_Processes WHERE document_id IN (SELECT document_id FROM Documents WHERE author_name = 'Santina Cronin')) AND process_status_code = 'postpone')",
    "exec_result": 0
  },
  {
    "idx": 2047,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT DISTINCT process_id FROM Documents_processes",
    "pred": "SELECT DISTINCT Documents.Process_id FROM Documents JOIN Documents_Processes ON Documents.Process_id = Documents_Processes.Process_id JOIN Ref_Staff_Roles ON Documents.Process_id = Documents_Processes.Process_id JOIN Staff_in_Processes ON Documents.Process_id = Documents_Processes.Process_id JOIN Ref_Staff_Roles ON Staff_in_Processes.staff_id = Ref_Staff_Roles.staff_role_code WHERE Documents_Processes.process_status_code = 'postpone';",
    "exec_result": 0
  },
  {
    "idx": 2048,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_processes",
    "pred": "SELECT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_Processes)",
    "exec_result": 1
  },
  {
    "idx": 2049,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_id FROM Business_processes EXCEPT SELECT process_id FROM Documents_processes",
    "pred": "SELECT DISTINCT Process_id FROM Documents_Processes WHERE document_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 2050,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T2.process_outcome_description ,  T3.process_status_description FROM Documents_processes AS T1 JOIN Process_outcomes AS T2 ON T1.process_outcome_code  =  T2.process_outcome_code JOIN Process_Status AS T3 ON T1.process_status_code  =  T3.process_status_code WHERE T1.document_id  =  0",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2051,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T3.process_name FROM Documents_processes AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id JOIN Business_processes AS T3 ON T1.process_id  =  T3.process_id WHERE T2.document_name  =  \"Travel to Brazil\"",
    "pred": "SELECT T1.process_name, T2.process_id, T3.process_outcome_code, T4.process_status_code FROM Documents AS T1 INNER JOIN Documents_Processes AS T2 ON T1.document_id = T2.document_id INNER JOIN Business_Processes AS T3 ON T2.process_id = T3.process_id INNER JOIN Process_Outcomes AS T4 ON T3.process_outcome_code = T4.process_outcome_code INNER JOIN Process_Status AS T5 ON T4.process_status_code = T5.process_status_code WHERE T1.document_name = 'Travel to Brazil'",
    "exec_result": 0
  },
  {
    "idx": 2052,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_id ,  count(*) FROM Documents_processes GROUP BY process_id",
    "pred": "SELECT process_id, COUNT(*) FROM Documents_Processes GROUP BY process_id;",
    "exec_result": 1
  },
  {
    "idx": 2053,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Staff_in_processes WHERE document_id  =  0 AND process_id  =  9",
    "pred": "SELECT COUNT(DISTINCT Documents.Process_id) FROM Documents JOIN Documents_Processes ON Documents.document_id = Documents_Processes.document_id JOIN Staff_in_Processes ON Documents.Process_id = Documents_Processes.Process_id JOIN Staff ON Staff_in_Processes.staff_id = Staff.staff_id WHERE Documents.Process_id = 9 AND Documents.document_id = 0;",
    "exec_result": 0
  },
  {
    "idx": 2054,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_processes GROUP BY staff_id",
    "pred": "SELECT Staff.staff_id, COUNT(DISTINCT Documents.Process_id) AS document_count FROM Documents JOIN Staff_in_Processes ON Documents.Process_id = Documents_Processes.Process_id JOIN Staff ON Documents_staff_id = Staff.staff_id GROUP BY Staff.staff_id;",
    "exec_result": 0
  },
  {
    "idx": 2055,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_code ,  count(*) FROM Staff_in_processes GROUP BY staff_role_code",
    "pred": "SELECT Ref_Staff_Roles.staff_role_code, COUNT(DISTINCT Documents.Process_id) AS distinct_process_count FROM Ref_Staff_Roles JOIN Documents ON Ref_Staff_Roles.process_id = Documents.Process_id GROUP BY Ref_Staff_Roles.staff_role_code ORDER BY distinct_process_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 2056,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_role_code) FROM Staff_in_processes WHERE staff_id  =  3",
    "pred": "SELECT COUNT(DISTINCT Ref_Staff_Roles.staff_role_code) FROM Ref_Staff_Roles WHERE staff_role_code IN (SELECT staff_role_code FROM Staff_in_Processes WHERE staff_id = 3);",
    "exec_result": 1
  },
  {
    "idx": 2057,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Agencies",
    "pred": "SELECT count(*) FROM Agencies;",
    "exec_result": 1
  },
  {
    "idx": 2058,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Agencies",
    "pred": "SELECT COUNT(*) FROM Agencies;",
    "exec_result": 1
  },
  {
    "idx": 2059,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  agency_details FROM Agencies",
    "pred": "SELECT agency_id, agency_details FROM Agencies;",
    "exec_result": 1
  },
  {
    "idx": 2060,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  agency_details FROM Agencies",
    "pred": "SELECT agency_id, agency_details FROM Agencies;",
    "exec_result": 1
  },
  {
    "idx": 2061,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Clients",
    "pred": "SELECT COUNT(*) FROM Clients;",
    "exec_result": 1
  },
  {
    "idx": 2062,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Clients",
    "pred": "SELECT COUNT(client_id) FROM Clients;",
    "exec_result": 1
  },
  {
    "idx": 2063,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients",
    "pred": "SELECT DISTINCT Clients.client_id, Clients.client_details FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Invoices.meeting_id = Meetings.meeting_id JOIN Payments ON Meetings.meeting_id = Payments.meeting_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id WHERE Payments.payment_details = 'Visa';",
    "exec_result": 0
  },
  {
    "idx": 2064,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients",
    "pred": "SELECT DISTINCT Clients.client_id, Clients.client_details FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Invoices.meeting_id = Meetings.meeting_id JOIN Payments ON Meetings.meeting_id = Payments.meeting_id WHERE Invoices.meeting_id IS NOT NULL ORDER BY Clients.client_id;",
    "exec_result": 0
  },
  {
    "idx": 2065,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id",
    "pred": "SELECT DISTINCT T1.agency_id, COUNT(T1.client_id) AS num_clients FROM Agencies AS T1 JOIN Invoices AS T2 ON T1.agency_id = T2.agency_id JOIN Clients AS T3 ON T2.client_id = T3.client_id GROUP BY T1.agency_id ORDER BY num_clients DESC;",
    "exec_result": 0
  },
  {
    "idx": 2066,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id",
    "pred": "SELECT Agencies.agency_id, COUNT(DISTINCT Staff_in_Meetings.staff_id) AS num_of_staff FROM Agencies JOIN Staff_in_Meetings ON Agencies.agency_id = Staff_in_Meetings.agency_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Clients ON Meetings.client_id = Clients.client_id GROUP BY Agencies.agency_id",
    "exec_result": 0
  },
  {
    "idx": 2067,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id, T1.agency_details ORDER BY COUNT(T2.client_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 2068,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id ORDER BY COUNT(T2.client_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 2069,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2",
    "pred": "SELECT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id HAVING COUNT(T2.client_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 2070,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.client_id JOIN Invoices AS T3 ON T2.client_id = T3.client_id JOIN Meetings AS T4 ON T3.client_id = T4.client_id JOIN Payments AS T5 ON T4.client_id = T5.client_id JOIN Staff_in_Meetings AS T6 ON T5.client_id = T6.meeting_id WHERE T1.agency_id = (SELECT MAX(agency_id) FROM Agencies) GROUP BY T1.agency_id, T1.agency_details HAVING COUNT(T3.invoice_id) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 2071,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'",
    "pred": "SELECT a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id JOIN Invoices i ON c.client_id = i.client_id JOIN Meetings m ON i.meeting_id = m.meeting_id JOIN Staff_in_Meetings smi ON m.meeting_id = smi.meeting_id WHERE c.client_details = 'Mac' ORDER BY a.agency_details;",
    "exec_result": 0
  },
  {
    "idx": 2072,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'",
    "pred": "SELECT T1.agency_details FROM Agencies AS T1 INNER JOIN Clients AS T2 ON T1.agency_id = T2.agency_id WHERE T2.detail = 'Mac';",
    "exec_result": 0
  },
  {
    "idx": 2073,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT Clients.client_details, Agencies.agency_details FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Staff_in_Meetings ON Invoices.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Agencies ON Staff.agency_id = Agencies.agency_id",
    "exec_result": 0
  },
  {
    "idx": 2074,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT Clients.client_details, Agencies.agency_details FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Invoices.meeting_id = Meetings.meeting_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Agencies ON Staff_in_Meetings.agency_id = Agencies.agency_id WHERE Invoices.meeting_outcome = 'Finish';",
    "exec_result": 0
  },
  {
    "idx": 2075,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code",
    "pred": "SELECT sic_code, COUNT(client_id) FROM Clients GROUP BY sic_code",
    "exec_result": 1
  },
  {
    "idx": 2076,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code",
    "pred": "SELECT DISTINCT T1.sic_code, COUNT(T2.client_id) AS num_of_clients FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T1.sic_code",
    "exec_result": 0
  },
  {
    "idx": 2077,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  \"Bad\";",
    "pred": "SELECT DISTINCT Clients.client_id, Clients.sic_code FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Invoices.meeting_id = Meetings.meeting_id JOIN Payments ON Meetings.meeting_id = Payments.meeting_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Agencies ON Staff.agency_id = Agencies.agency_id WHERE Agencies.agency_details LIKE '%Bad%'",
    "exec_result": 0
  },
  {
    "idx": 2078,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  \"Bad\";",
    "pred": "SELECT T2.client_details FROM Clients AS T1 JOIN Staff_in_Meetings AS T2 ON T1.client_id = T2.client_id WHERE T1.sic_code = 'Bad';",
    "exec_result": 0
  },
  {
    "idx": 2079,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2080,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT DISTINCT T1.agency_id, T1.agency_details FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id JOIN Meetings AS T3 ON T2.meeting_id = T3.meeting_id JOIN Payments AS T4 ON T3.meeting_id = T4.meeting_id JOIN Staff_in_Meetings AS T5 ON T4.invoice_id = T5.invoice_id JOIN Staff AS T6 ON T5.staff_id = T6.staff_id WHERE T4.purpose_of_meeting IN ('monthly report', 'vote for solutions') ORDER BY T1.agency_id, T1.agency_details ASC",
    "exec_result": 0
  },
  {
    "idx": 2081,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients",
    "pred": "SELECT DISTINCT Agencies.agency_id FROM Agencies",
    "exec_result": 0
  },
  {
    "idx": 2082,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients",
    "pred": "SELECT DISTINCT Agencies.agency_id FROM Agencies WHERE Agencies.agency_id NOT IN (SELECT DISTINCT Staff_in_Meetings.meeting_id FROM Staff_in_Meetings)",
    "exec_result": 0
  },
  {
    "idx": 2083,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Invoices",
    "pred": "SELECT COUNT(*) FROM Invoices",
    "exec_result": 1
  },
  {
    "idx": 2084,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Invoices",
    "pred": "SELECT COUNT(*) FROM Invoices;",
    "exec_result": 1
  },
  {
    "idx": 2085,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices",
    "pred": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id WHERE Invoices.status = 'Finish';",
    "exec_result": 0
  },
  {
    "idx": 2086,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices",
    "pred": "SELECT DISTINCT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id JOIN Meetings ON Invoices.invoice_id = Meetings.invoice_id JOIN Payments ON Meetings.meeting_id = Payments.meeting_id WHERE Invoices.invoice_status = 'Finish';",
    "exec_result": 0
  },
  {
    "idx": 2087,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) AS invoice_count FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id;",
    "exec_result": 1
  },
  {
    "idx": 2088,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) AS invoice_count FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id",
    "exec_result": 1
  },
  {
    "idx": 2089,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.client_id, T1.client_details FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id ORDER BY COUNT(T2.invoice_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 2090,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.client_id, T1.client_details FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2091,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.client_id FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id HAVING COUNT(T2.invoice_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 2092,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT Clients.client_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id HAVING COUNT(Invoices.invoice_id) > 1;",
    "exec_result": 1
  },
  {
    "idx": 2093,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status",
    "pred": "SELECT DISTINCT invoice_status, COUNT(*) FROM Invoices GROUP BY invoice_status",
    "exec_result": 1
  },
  {
    "idx": 2094,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status",
    "pred": "SELECT DISTINCT T2.purpose_of_meeting, COUNT(*) FROM Meetings AS T1 JOIN Invoices AS T2 ON T1.meeting_id = T2.meeting_id JOIN Staff_in_Meetings AS T3 ON T1.meeting_id = T3.meeting_id JOIN Clients AS T4 ON T3.client_id = T4.client_id WHERE T4.sic_code = 'Mutual' GROUP BY T2.purpose_of_meeting;",
    "exec_result": 0
  },
  {
    "idx": 2095,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T2.invoice_status FROM Invoices AS T1 JOIN Meetings AS T2 ON T1.invoice_id = T2.invoice_id GROUP BY T2.invoice_id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 2096,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.invoice_status FROM Invoices AS T1 JOIN Meetings AS T2 ON T1.invoice_id = T2.invoice_id JOIN Staff_in_Meetings AS T3 ON T2.meeting_id = T3.meeting_id JOIN Staff AS T4 ON T3.staff_id = T4.staff_id JOIN Clients AS T5 ON T4.client_id = T5.client_id WHERE T5.agency_id = (SELECT T1.agency_id FROM Invoices AS T1 JOIN Meetings AS T2 ON T1.invoice_id = T2.invoice_id GROUP BY T1.invoice_id ORDER BY COUNT(*) DESC LIMIT 1) ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2097,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id",
    "pred": "SELECT T1.invoice_status, T1.invoice_details, T2.agency_id, T2.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id JOIN Agencies AS T3 ON T2.agency_id = T3.agency_id JOIN Staff AS T4 ON T3.agency_id = T4.agency_id JOIN Staff_in_Meetings AS T5 ON T4.staff_id = T5.staff_id JOIN Meetings AS T6 ON T5.meeting_id = T6.meeting_id JOIN Payments AS T7 ON T6.payment_id = T7.payment_id WHERE T1.invoice_status = 'Starting' ORDER BY T1.invoice_id ASC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 2098,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id",
    "pred": "SELECT T1.invoice_status, T1.invoice_details, T1.client_details, T2.agency_details FROM Invoices AS T1 JOIN Meetings AS T2 ON T1.meeting_id = T2.meeting_id JOIN Clients AS T3 ON T1.client_id = T3.client_id JOIN Agencies AS T4 ON T2.agency_id = T4.agency_id WHERE T1.meeting_status = 'Finish' ORDER BY T1.invoice_id;",
    "exec_result": 0
  },
  {
    "idx": 2099,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  other_details FROM meetings",
    "pred": "SELECT DISTINCT T1.meeting_type, T1.meeting_details FROM Meetings AS T1 JOIN Staff_in_Meetings AS T2 ON T1.meeting_id = T2.meeting_id",
    "exec_result": 0
  },
  {
    "idx": 2100,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  other_details FROM meetings",
    "pred": "SELECT DISTINCT T1.meeting_type, T1.other_details FROM Meetings AS T1 JOIN Staff_in_Meetings AS T2 ON T1.meeting_id = T2.meeting_id",
    "exec_result": 0
  },
  {
    "idx": 2101,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  purpose_of_meeting FROM meetings",
    "pred": "SELECT T1.meeting_outcome, T1.meeting_type, T1.purpose_of_meeting FROM Meetings AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id",
    "exec_result": 0
  },
  {
    "idx": 2102,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  purpose_of_meeting FROM meetings",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2103,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'",
    "pred": "SELECT DISTINCT T1.payment_id, T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id WHERE T2.status = 'Working'",
    "exec_result": 0
  },
  {
    "idx": 2104,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'",
    "pred": "SELECT DISTINCT T1.payment_id, T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id WHERE T2.status = 'Working'",
    "exec_result": 0
  },
  {
    "idx": 2105,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT DISTINCT Invoices.invoice_id, Invoices.invoice_status FROM Invoices WHERE Invoices.invoice_id NOT IN (SELECT DISTINCT payments.invoice_id FROM payments)",
    "exec_result": 1
  },
  {
    "idx": 2106,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT T1.invoice_id, T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id = T2.invoice_id WHERE T2.payment_id IS NULL",
    "exec_result": 0
  },
  {
    "idx": 2107,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Payments",
    "pred": "SELECT COUNT(*) FROM Payments",
    "exec_result": 1
  },
  {
    "idx": 2108,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Payments",
    "pred": "SELECT COUNT(*) FROM Payments",
    "exec_result": 1
  },
  {
    "idx": 2109,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT payment_id ,  invoice_id ,  payment_details FROM Payments",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2110,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT payment_id ,  invoice_id ,  payment_details FROM Payments",
    "pred": "SELECT T1.payment_id, T1.invoice_id, T1.payment_details FROM Payments AS T1 JOIN Staff_in_Meetings AS T2 ON T1.staff_id = T2.staff_id JOIN Meetings AS T3 ON T2.meeting_id = T3.meeting_id WHERE T3.purpose_of_meeting IN ('monthly report', 'vote for solutions')",
    "exec_result": 0
  },
  {
    "idx": 2111,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT DISTINCT T1.invoice_id, T1.invoice_status FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id WHERE T2.invoice_status = ( SELECT MIN(T2.invoice_status) FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id )",
    "exec_result": 0
  },
  {
    "idx": 2112,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT DISTINCT T1.invoice_id, T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id GROUP BY T1.invoice_id, T1.payment_details",
    "exec_result": 0
  },
  {
    "idx": 2113,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id",
    "pred": "SELECT Invoices.invoice_id, COUNT(Payments.payment_id) AS number_of_payments FROM Invoices JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id",
    "exec_result": 1
  },
  {
    "idx": 2114,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id",
    "pred": "SELECT T2.payment_id, COUNT(T1.invoice_id) AS payment_count FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id GROUP BY T2.payment_id HAVING payment_count > 1",
    "exec_result": 0
  },
  {
    "idx": 2115,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.invoice_id, T1.invoice_status, T1.invoice_details FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id = T2.invoice_id WHERE T2.purpose_of_meeting = 'monthly report' ORDER BY T2.payment_details DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2116,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.invoice_id, T1.invoice_status, T1.invoice_details FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id = T2.invoice_id WHERE T2.payment_id IN ( SELECT payment_id FROM Payments GROUP BY payment_id ORDER BY COUNT(payment_id) DESC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 2117,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2118,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "SELECT COUNT(DISTINCT Staff_id) AS Staff_Count FROM Staff_in_Meetings",
    "exec_result": 1
  },
  {
    "idx": 2119,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id",
    "pred": "SELECT T1.agency_id, COUNT(T2.staff_id) AS staff_count FROM Agencies AS T1 JOIN Staff_in_Meetings AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id",
    "exec_result": 0
  },
  {
    "idx": 2120,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id",
    "pred": "SELECT DISTINCT T1.agency_id, COUNT(T2.staff_id) AS staff_count FROM Agencies AS T1 JOIN Staff_in_Meetings AS T2 ON T1.agency_id = T2.agency_id GROUP BY T1.agency_id",
    "exec_result": 0
  },
  {
    "idx": 2121,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Staff AS T2 ON T1.agency_id = T2.agency_id JOIN Clients AS T3 ON T2.client_id = T3.client_id JOIN Invoices AS T4 ON T3.client_id = T4.client_id JOIN Meetings AS T5 ON T4.client_id = T5.client_id JOIN Payments AS T6 ON T5.client_id = T6.client_id JOIN Staff_in_Meetings AS T7 ON T6.invoice_id = T7.meeting_id WHERE T7.staff_id IS NOT NULL ORDER BY COUNT(T2.staff_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2122,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT DISTINCT T1.agency_id, T2.staff_details FROM Agencies AS T1 JOIN Staff_in_Meetings AS T2 ON T1.agency_id = T2.agency_id WHERE T2.staff_id IN ( SELECT staff_id FROM Staff_in_Meetings GROUP BY staff_id ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 2123,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome",
    "pred": "SELECT T1.meeting_outcome, COUNT(*) FROM Meetings AS T1 JOIN Staff_in_Meetings AS T2 ON T1.meeting_id = T2.meeting_id GROUP BY T1.meeting_outcome",
    "exec_result": 0
  },
  {
    "idx": 2124,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome",
    "pred": "SELECT T1.meeting_outcome, COUNT(T1.meeting_id) FROM Meetings AS T1 JOIN Invoices AS T2 ON T1.meeting_id = T2.meeting_id JOIN Staff_in_Meetings AS T3 ON T1.meeting_id = T3.meeting_id JOIN Staff AS T4 ON T3.staff_id = T4.staff_id WHERE T4.client_id = (SELECT T2.client_id FROM Invoices AS T2 JOIN Meetings AS T1 ON T2.meeting_id = T1.meeting_id WHERE T1.meeting_id = T2.meeting_id) GROUP BY T1.meeting_outcome",
    "exec_result": 0
  },
  {
    "idx": 2125,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) AS meeting_count FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Invoices.meeting_id = Meetings.meeting_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id GROUP BY Clients.client_id",
    "exec_result": 0
  },
  {
    "idx": 2126,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id",
    "pred": "SELECT C.client_id, COUNT(T2.meeting_id) AS meeting_count FROM Clients AS C JOIN Invoices AS I ON C.client_id = I.client_id JOIN Meetings AS M ON I.meeting_id = M.meeting_id JOIN Staff_in_Meetings AS SMI ON M.meeting_id = SMI.meeting_id GROUP BY C.client_id",
    "exec_result": 0
  },
  {
    "idx": 2127,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type",
    "pred": "SELECT T1.meeting_type, COUNT(*) FROM Meetings AS T1 JOIN Staff_in_Meetings AS T2 ON T1.meeting_id = T2.meeting_id GROUP BY T1.meeting_type",
    "exec_result": 0
  },
  {
    "idx": 2128,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type",
    "pred": "SELECT Meetings.meeting_type, COUNT(Meetings.meeting_id) AS meeting_count FROM Meetings JOIN Clients ON Meetings.client_id = Clients.client_id GROUP BY Meetings.meeting_type ORDER BY meeting_count DESC;",
    "exec_result": 1
  },
  {
    "idx": 2129,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT T1.meeting_id, T1.meeting_outcome, T1.meeting_type, T2.client_details FROM Meetings AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id WHERE T1.meeting_id IN (SELECT T3.meeting_id FROM Staff_in_Meetings AS T3 WHERE T3.staff_id IN (SELECT T1.staff_id FROM Staff_in_Meetings AS T1 WHERE T1.meeting_id IN (SELECT T2.meeting_id FROM Meetings AS T2 WHERE T2.client_id = T1.client_id)))",
    "exec_result": 0
  },
  {
    "idx": 2130,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT T1.meeting_id, T2.meeting_outcome, T3.meeting_type, T4.client_details FROM Meetings AS T1 JOIN Staff_in_Meetings AS T2 ON T1.meeting_id = T2.meeting_id JOIN Clients AS T4 ON T1.client_id = T4.client_id JOIN Invoices AS T3 ON T1.meeting_id = T3.meeting_id JOIN Payments AS T5 ON T1.meeting_id = T5.meeting_id WHERE T2.meeting_id IS NOT NULL ORDER BY T1.meeting_id;",
    "exec_result": 0
  },
  {
    "idx": 2131,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id",
    "pred": "SELECT Meetings.meeting_id, COUNT(DISTINCT Staff_in_Meetings.staff_id) AS num_of_staff FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id GROUP BY Meetings.meeting_id",
    "exec_result": 1
  },
  {
    "idx": 2132,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id",
    "pred": "SELECT T1.meeting_id, COUNT(T2.staff_id) AS staff_count FROM Meetings AS T1 JOIN Staff_in_Meetings AS T2 ON T1.meeting_id = T2.meeting_id GROUP BY T1.meeting_id",
    "exec_result": 1
  },
  {
    "idx": 2133,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Staff_in_Meetings.`staff_id`, COUNT(Meetings.meeting_id) FROM Staff_in_Meetings JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id WHERE Meetings.meeting_id IN ( SELECT MIN(Meeting_id) FROM Meetings GROUP BY Meeting_id HAVING COUNT(Meeting_id) = ( SELECT MIN(Meeting_id) FROM Meetings GROUP BY Meeting_id ) ) GROUP BY Staff_in_Meetings.`staff_id` HAVING COUNT(Meetings.meeting_id) > 1",
    "exec_result": 0
  },
  {
    "idx": 2134,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Staff.id FROM Staff JOIN Staff_in_Meetings ON Staff.id = Staff_in_Meetings.staff_id WHERE Staff_in_Meetings.meeting_id IN ( SELECT MIN(meeting_id) FROM Meetings GROUP BY meeting_id );",
    "exec_result": 0
  },
  {
    "idx": 2135,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_id) FROM Staff_in_meetings",
    "pred": "SELECT COUNT(DISTINCT Staff_in_Meetings.staff_id) AS num_staff_attended FROM Staff_in_Meetings JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Clients ON Meetings.client_id = Clients.client_id WHERE Meetings.meeting_type = 'Team'",
    "exec_result": 0
  },
  {
    "idx": 2136,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_id) FROM Staff_in_meetings",
    "pred": "SELECT COUNT(DISTINCT Staff_in_Meetings.staff_id) AS distinct_staff_count FROM Staff_in_Meetings JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Clients ON Meetings.client_id = Clients.client_id WHERE Meetings.meeting_type = 'Company'",
    "exec_result": 0
  },
  {
    "idx": 2137,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )",
    "pred": "SELECT COUNT(DISTINCT Staff_in_Meetings.staff_id) FROM Staff_in_Meetings",
    "exec_result": 0
  },
  {
    "idx": 2138,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )",
    "pred": "SELECT COUNT(DISTINCT Staff_in_Meetings.staff_id) AS staff_count FROM Staff_in_Meetings WHERE Staff_in_Meetings.meeting_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 2139,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT DISTINCT Clients.client_id, Clients.client_details FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Invoices.meeting_id = Meetings.meeting_id JOIN Payments ON Meetings.meeting_id = Payments.meeting_id WHERE Payments.payment_id IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 2140,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT T1.client_id, T1.client_details FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id WHERE T2.meeting_id IS NOT NULL OR T2.meeting_type = 'Meeting'",
    "exec_result": 0
  },
  {
    "idx": 2141,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE \"%s%\" GROUP BY staff_id HAVING count(*)  >=  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2142,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE \"%s%\" GROUP BY staff_id HAVING count(*)  >=  1",
    "pred": "SELECT T2.staff_id, T2.staff_details FROM Staff AS T1 JOIN Staff_in_Meetings AS T2 ON T1.staff_id = T2.staff_id JOIN Meetings AS T3 ON T2.meeting_id = T3.meeting_id WHERE T3.meeting_type = 'Group' AND T1.s in ('Sergeant', 'Staff')",
    "exec_result": 0
  },
  {
    "idx": 2143,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT T1.client_id, T1.sic_code, T1.agency_id FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id JOIN Meetings AS T3 ON T1.client_id = T3.client_id JOIN Staff_in_Meetings AS T4 ON T3.meeting_id = T4.meeting_id WHERE T4.meeting_id = (SELECT meeting_id FROM Meetings WHERE purpose_of_meeting = 'Summary') GROUP BY T1.client_id, T1.sic_code, T1.agency_id HAVING COUNT(T2.invoice_id) > 0;",
    "exec_result": 0
  },
  {
    "idx": 2144,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT T1.client_id, T1.sic_code, T1.agency_id FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id JOIN Meetings AS T3 ON T1.client_id = T3.client_id JOIN Staff_in_Meetings AS T4 ON T3.meeting_id = T4.meeting_id JOIN Staff AS T5 ON T4.staff_id = T5.staff_id WHERE T4.meeting_id = (SELECT meeting_id FROM Meetings WHERE purpose_of_meeting = 'Finish') GROUP BY T1.client_id, T1.sic_code, T1.agency_id HAVING COUNT(T2.invoice_id) = 1;",
    "exec_result": 0
  },
  {
    "idx": 2145,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id",
    "pred": "SELECT T1.start_date_time, T1.end_date_time, T2.client_details, T3.staff_details FROM Meetings AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id JOIN Staff_in_Meetings AS T3 ON T1.meeting_id = T3.meeting_id ORDER BY T1.start_date_time;",
    "exec_result": 0
  },
  {
    "idx": 2146,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id",
    "pred": "SELECT T1.start_date_time, T1.end_date_time, T2.client_details, T2.staff_details FROM Meetings AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id WHERE T1.meeting_type = 'Team' ORDER BY T1.start_date_time;",
    "exec_result": 0
  }
]