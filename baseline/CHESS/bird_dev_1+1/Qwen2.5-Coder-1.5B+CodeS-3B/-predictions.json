{
    "0": "SELECT max(cast(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) FROM schools WHERE County = 'Alameda County'\t----- bird -----\tcalifornia_schools",
    "1": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` FROM frpm WHERE `Free Meal Count (Ages 5-17)` IS NOT NULL ORDER BY `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` LIMIT 3\t----- bird -----\tcalifornia_schools",
    "2": "SELECT DISTINCT schools.MailZip FROM schools INNER JOIN fprm ON schools.CDSCode = fprm.CDSCode WHERE fprm.CharterSchool = 1\t----- bird -----\tcalifornia_schools",
    "3": "SELECT schools.MailStrAbr FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode ORDER BY frpm.`FRPM Count (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "4": "SELECT DISTINCT Phone FROM schools WHERE CDSCode IN ( SELECT CDSCode FROM frpm WHERE `Charter School (Y/N)` = 1 AND OpenDate > '2000-01-01' )\t----- bird -----\tcalifornia_schools",
    "5": "SELECT count(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath < 400 AND schools.Virtual = 'F'\t----- bird -----\tcalifornia_schools",
    "6": "SELECT DISTINCT cds FROM satscores WHERE NumTstTakr > 500 AND Magnet = 1\t----- bird -----\tcalifornia_schools",
    "7": "SELECT DISTINCT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 1500\t----- bird -----\tcalifornia_schools",
    "8": "SELECT count(satscores.numtsttakr) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode ORDER BY schools.FRPMCountK12 DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "9": "SELECT count(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 560 AND schools.Charter = 1\t----- bird -----\tcalifornia_schools",
    "10": "SELECT schools.FRPM FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrRead = ( SELECT max(satscores.AvgScrRead) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "11": "SELECT CDSCode FROM schools WHERE Enrollment (K-12) + Enrollment (Ages 5-17) > 500\t----- bird -----\tcalifornia_schools",
    "12": "SELECT schools.CDSCode FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrMath > 0.3 ORDER BY schools.`Free Meal Count (Ages 5-17)` / schools.`Enrollment (Ages 5-17)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "13": "SELECT DISTINCT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE cast(satscores.NumGE1500 AS REAL) / satscores.NumTstTakr > 0.3\t----- bird -----\tcalifornia_schools",
    "14": "SELECT School, NCESSchool FROM schools ORDER BY Enrollment (Ages 5-17) DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "15": "SELECT DISTINCT dname FROM satscores WHERE rtype = 'Reading' ORDER BY cast(avgscrread AS REAL) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "16": "SELECT count(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumTstTakr < 100\t----- bird -----\tcalifornia_schools",
    "17": "SELECT DISTINCT CharterNum FROM schools WHERE CDSCode = ( SELECT cds FROM satscores WHERE AvgScrWrite = 499 )\t----- bird -----\tcalifornia_schools",
    "18": "SELECT count(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumTstTakr <= 250\t----- bird -----\tcalifornia_schools",
    "19": "SELECT sname, phone FROM satscores WHERE AvgScrMath = ( SELECT max(AvgScrMath) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "20": "SELECT count(CDSCode) FROM schools WHERE CDSCode IN ( SELECT CDSCode FROM frpm WHERE LowGrade = 9 AND HighGrade = 12 )\t----- bird -----\tcalifornia_schools",
    "21": "SELECT count(schools.CDSCode) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.FRPM Count (K-12) BETWEEN 500 AND 700\t----- bird -----\tcalifornia_schools",
    "22": "SELECT sname FROM satscores WHERE sname = 'Contra Costa High School' ORDER BY NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "23": "SELECT DISTINCT schools.School, schools.Street FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.enroll12 - satscores.NumGE1500 > 30\t----- bird -----\tcalifornia_schools",
    "24": "SELECT DISTINCT schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Percent (%) Eligible Free (K-12) > 0.1 AND satscores.NumTstTakr >= 1500\t----- bird -----\tcalifornia_schools",
    "25": "SELECT DISTINCT schools.School, schools.FundingType FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.City = 'Riverside' AND satscores.AvgScrMath > 400\t----- bird -----\tcalifornia_schools",
    "26": "SELECT DISTINCT schools.School, schools.MailStreet, schools.MailCity, schools.MailState, schools.MailZip FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.State = 'CA' AND schools.City = 'Monterey' AND frpm.`Free Meal Count (Ages 15-17)` > 800\t----- bird -----\tcalifornia_schools",
    "27": "SELECT cast(sum(CASE WHEN OpenDate > 1991 THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN OpenDate > 1991 THEN 1 ELSE 0 END + CASE WHEN OpenDate < 2000 THEN 1 ELSE 0 END) AS AVG, schools.CDSCode, schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds GROUP BY schools.CDSCode, schools.Phone\t----- bird -----\tcalifornia_schools",
    "28": "SELECT schools.School, schools.DOCType FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.cds WHERE schools.FundingType = 'Local' AND schools.DOCType = 'Charter' AND schools.Enrollment12 - schools.Enrollment1500 > ( SELECT avg(schools.Enrollment12 - schools.Enrollment1500) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.cds WHERE schools.FundingType = 'Local' AND schools.DOCType = 'Charter' )\t----- bird -----\tcalifornia_schools",
    "29": "SELECT OpenDate FROM schools WHERE TYPE = 'K-12' ORDER BY Enrollment DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "30": "SELECT DISTINCT City FROM schools WHERE CDSCode IN ( SELECT cds FROM satscores WHERE enroll12 IS NOT NULL ORDER BY enroll12 ASC LIMIT 5 )\t----- bird -----\tcalifornia_schools",
    "31": "SELECT schools.`Free Meal Count (K-12)`, schools.`Enrollment (K-12)` FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.enroll12 = ( SELECT max(enroll12) FROM satscores ) ORDER BY schools.`Free Meal Count (K-12)` DESC LIMIT 10, 1\t----- bird -----\tcalifornia_schools",
    "32": "SELECT cast(sum(CASE WHEN schools.CDSCode = 66 THEN frpm.FRPM Count (K-12) ELSE 0 END) AS REAL) / sum(CASE WHEN schools.CDSCode = 66 THEN 1 ELSE 0 END) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.CDSCode = 66\t----- bird -----\tcalifornia_schools",
    "33": "SELECT DISTINCT schools.Website FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.Free Meal Count (Ages 5-17) BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools",
    "34": "SELECT cast(Free Meal Count (Ages 5-17) AS REAL) / Enrollment (Ages 5-17) FROM schools WHERE School = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools",
    "35": "SELECT DISTINCT schools.AdmEmail1 FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.Charter School (Y/N) = 1 ORDER BY frpm.Enrollment (K-12) ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "36": "SELECT DISTINCT schools.AdmLName1, schools.AdmLName2, schools.AdmLName3 FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 = ( SELECT max(NumGE1500) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "37": "SELECT DISTINCT schools.Street, schools.City, schools.State, schools.Zip FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumGE1500 IS NOT NULL ORDER BY cast(satscores.NumGE1500 AS REAL) / satscores.NumTstTakr ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "38": "SELECT DISTINCT schools.Website FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.enroll12 BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools",
    "39": "SELECT cast(sum(NumTstTakr) AS REAL) / count(CDSCode) FROM satscores WHERE strftime('%Y', OpenDate) BETWEEN '1980' AND '1980'\t----- bird -----\tcalifornia_schools",
    "40": "SELECT DISTINCT schools.Phone FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.District = 'Fresno Unified' ORDER BY satscores.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "41": "SELECT DISTINCT schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Virtual = 'F' ORDER BY satscores.AvgScrRead DESC LIMIT 5\t----- bird -----\tcalifornia_schools",
    "42": "SELECT DISTINCT rtype FROM satscores WHERE AvgScrMath = ( SELECT max(AvgScrMath) FROM satscores )\t----- bird -----\tcalifornia_schools",
    "43": "SELECT avg(schools.AvgScrMath), schools.county FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds GROUP BY schools.county ORDER BY sum(schools.AvgScrMath + schools.AvgScrRead + schools.AvgScrWrite) LIMIT 1\t----- bird -----\tcalifornia_schools",
    "44": "SELECT avg(satscores.AvgScrWrite), schools.City FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumTstTakr = ( SELECT max(NumTstTakr) FROM satscores ) AND satscores.NumGE1500 = 1\t----- bird -----\tcalifornia_schools",
    "45": "SELECT schools.School, avg(satscores.AvgScrWrite) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Edopsname = 'Ricci Ulrich' GROUP BY schools.School\t----- bird -----\tcalifornia_schools",
    "46": "SELECT DISTINCT schools.State FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.rtype = 'K-12' AND schools.DOC = 31 GROUP BY schools.State ORDER BY count(schools.State) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "47": "SELECT cast(count(DISTINCT CDSCode) AS REAL) / 12 FROM schools WHERE DOC = 52 AND YEAR(OpenDate) = 1980\t----- bird -----\tcalifornia_schools",
    "48": "SELECT cast(sum(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) FROM schools\t----- bird -----\tcalifornia_schools",
    "49": "SELECT DISTINCT County, School, ClosedDate FROM schools WHERE StatusType = 'Closed'\t----- bird -----\tcalifornia_schools",
    "50": "SELECT schools.Street, schools.MailStreet FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds ORDER BY satscores.AvgScrMath DESC LIMIT 5, 1\t----- bird -----\tcalifornia_schools",
    "51": "SELECT schools.Street, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Street IS NOT NULL ORDER BY satscores.AvgScrRead ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "52": "SELECT count(schools.CDSCode) FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.enroll12 >= 1500 AND schools.City = 'Lakeport'\t----- bird -----\tcalifornia_schools",
    "53": "SELECT count(schools.CDSCode) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.MailCity = 'Fresno'\t----- bird -----\tcalifornia_schools",
    "54": "SELECT DISTINCT schools.School, schools.MailZip FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.AdmLName1 = 'Avetik' AND schools.AdmLName2 = 'Atoian'\t----- bird -----\tcalifornia_schools",
    "55": "SELECT cast(sum(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools\t----- bird -----\tcalifornia_schools",
    "56": "SELECT count(CDSCode) FROM schools WHERE MailState = 'CA' AND StatusType = 'Active'\t----- bird -----\tcalifornia_schools",
    "57": "SELECT schools.Phone, schools.Ext FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.AvgScrWrite = ( SELECT max(satscores.AvgScrWrite) FROM satscores INNER JOIN schools ON satscores.cds = schools.CDSCode )\t----- bird -----\tcalifornia_schools",
    "58": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'\t----- bird -----\tcalifornia_schools",
    "59": "SELECT Website FROM schools WHERE AdmLName1 = 'Mike' AND AdmLName2 = 'Larson' OR AdmLName1 = 'Dante' AND AdmLName2 = 'Alvarez'\t----- bird -----\tcalifornia_schools",
    "60": "SELECT Website FROM schools WHERE Virtual = 'P' AND Charter = 1\t----- bird -----\tcalifornia_schools",
    "61": "SELECT count(CDSCode) FROM schools WHERE City = 'Hickman' AND DOC = 52 AND Charter = 1\t----- bird -----\tcalifornia_schools",
    "62": "SELECT sum(CASE WHEN Charter = 0 THEN 1 ELSE 0 END) FROM schools WHERE `Free Meal Count (K-12)` * 100 / `Enrollment (K-12)` < 18\t----- bird -----\tcalifornia_schools",
    "63": "SELECT AdmLName1, AdmLName2, AdmLName3, City FROM schools WHERE Charter = 1 AND CharterNum = '00D2'\t----- bird -----\tcalifornia_schools",
    "64": "SELECT count(CDSCode) FROM schools WHERE CDSCode IN ( SELECT CDSCode FROM frpm WHERE CDSCode IN ( SELECT CDSCode FROM schools WHERE County = 'Hickman' AND CharterNum = '00D4' ) )\t----- bird -----\tcalifornia_schools",
    "65": "SELECT cast(sum(CASE WHEN FundingType = 'Locally Funded' THEN 1 ELSE 0 END) AS REAL) * 100 / count(CDSCode) FROM schools WHERE County = 'Santa Clara County'\t----- bird -----\tcalifornia_schools",
    "66": "SELECT count(CDSCode) FROM schools WHERE FundingType = 'Directly Funded' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31'\t----- bird -----\tcalifornia_schools",
    "67": "SELECT sum(CASE WHEN City = 'San Francisco' THEN 1 ELSE 0 END) FROM schools WHERE ClosedDate LIKE '1989%'\t----- bird -----\tcalifornia_schools",
    "68": "SELECT county FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND SOC = 11 GROUP BY county ORDER BY count(CDSCode) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "69": "SELECT DISTINCT schools.NCESDist FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.rtype = 'State Special Schools'\t----- bird -----\tcalifornia_schools",
    "70": "SELECT count(DISTINCT CDSCode) FROM schools WHERE County = 'Alpine' AND StatusType = 'Active' OR StatusType = 'Closed'\t----- bird -----\tcalifornia_schools",
    "71": "SELECT DISTINCT District FROM schools WHERE City = 'Fresno' AND Magnet = 0\t----- bird -----\tcalifornia_schools",
    "72": "SELECT count(schools.CDSCode) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.Educational Option Type = 'State Special School' AND schools.Edopscode = 'SSS' AND schools.Academic Year = '2014-2015'\t----- bird -----\tcalifornia_schools",
    "73": "SELECT sum(schools.FreeMealCount5to17) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.MailStreet = 'PO Box 1040'\t----- bird -----\tcalifornia_schools",
    "74": "SELECT DISTINCT Low Grade FROM frpm WHERE CDSCode = ( SELECT CDSCode FROM schools WHERE Edopscode = 'SPECON' )\t----- bird -----\tcalifornia_schools",
    "75": "SELECT DISTINCT schools.EducationalOptionType, schools.School FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.County Code = 37 AND schools.EducationalOptionType = 'Breakfast Provision 2'\t----- bird -----\tcalifornia_schools",
    "76": "SELECT schools.City FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.District = 'Merced' AND frpm.High Grade = 9 AND frpm.Low Grade = 12 AND schools.EILCode = 'HS'\t----- bird -----\tcalifornia_schools",
    "77": "SELECT schools.School, cast(schools.FreeMealCountAges517 AS REAL) * 100 / schools.EnrollmentAges517 FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.County = 'Los Angeles' AND schools.GradeSpan = 'Kindergarten to 9th grade'\t----- bird -----\tcalifornia_schools",
    "78": "SELECT DISTINCT GradeSpan FROM schools WHERE City = 'Adelanto' GROUP BY GradeSpan ORDER BY count(GradeSpan) DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "79": "SELECT county, count(CDSCode) FROM schools WHERE City IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY county\t----- bird -----\tcalifornia_schools",
    "80": "SELECT DISTINCT schools.School, schools.Latitude FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.Latitude IS NOT NULL ORDER BY schools.Latitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "81": "SELECT schools.City, schools.AdmLName1, schools.AdmLName2, schools.AdmLName3 FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE schools.State = 'CA' ORDER BY schools.Latitude ASC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "82": "SELECT DISTINCT CASE WHEN Longitude IS NOT NULL THEN 'Grade Span: 5-12' ELSE 'Grade Span: 1-5' END FROM schools ORDER BY Longitude DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "83": "SELECT count(DISTINCT schools.CDSCode) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.District Name = 'Kindergarten to 8th grade' AND frpm.Magnet = 1\t----- bird -----\tcalifornia_schools",
    "84": "SELECT AdmFName1, AdmFName2 FROM schools GROUP BY AdmFName1, AdmFName2 ORDER BY count(AdmFName1) DESC LIMIT 2\t----- bird -----\tcalifornia_schools",
    "85": "SELECT cast(sum(CASE WHEN AdmLName1 = 'Alusine' THEN `Free Meal Count (K-12)` ELSE 0 END) AS REAL) * 100 / sum(CASE WHEN AdmLName1 = 'Alusine' THEN `Enrollment (K-12)` ELSE 0 END) FROM schools\t----- bird -----\tcalifornia_schools",
    "86": "SELECT AdmLName1, District, County, School FROM schools WHERE CharterNum = 40\t----- bird -----\tcalifornia_schools",
    "87": "SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'District of San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = 62 OR DOC = 54)\t----- bird -----\tcalifornia_schools",
    "88": "SELECT schools.AdmEmail1, schools.School FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.NumTstTakr > 1500 ORDER BY satscores.NumTstTakr DESC LIMIT 1\t----- bird -----\tcalifornia_schools",
    "89": "SELECT count(account_id) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A3 = 'POPLATEK PO OBRATU' )\t----- bird -----\tfinancial",
    "90": "SELECT count(account_id) FROM account WHERE A3 = 'Prague'\t----- bird -----\tfinancial",
    "91": "SELECT A12, A13 FROM district ORDER BY A12 - A13 DESC LIMIT 1\t----- bird -----\tfinancial",
    "92": "SELECT count(district_id) FROM district WHERE A11 BETWEEN 6000 AND 10000 AND gender = 'F'\t----- bird -----\tfinancial",
    "93": "SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A3 = 'North Bohemia' AND client.gender = 'M' AND district.A11 > 8000\t----- bird -----\tfinancial",
    "94": "SELECT account.account_id, avg(district.A11) FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN account ON district.district_id = account.district_id WHERE client.gender = 'F' GROUP BY account.account_id ORDER BY avg(district.A11) LIMIT 1\t----- bird -----\tfinancial",
    "95": "SELECT client.account_id FROM client INNER JOIN district ON client.district_id = district.district_id ORDER BY client.birth_date LIMIT 1\t----- bird -----\tfinancial",
    "96": "SELECT count(client.client_id) FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE loan.status = 'Owner' AND loan.duration = 1\t----- bird -----\tfinancial",
    "97": "SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id WHERE disp.type = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "98": "SELECT account.account_id FROM account INNER JOIN loan ON account.account_id = loan.account_id WHERE strftime('%Y', loan.date) = '1997' AND loan.status = 'approved' AND account.frequency = 'POPLATEK TYDNE' ORDER BY loan.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "99": "SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration > 12 AND account.date LIKE '1993%' ORDER BY loan.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "100": "SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A2 = 'Slokolov' AND client.gender = 'F' AND client.birth_date < '1950-01-01'\t----- bird -----\tfinancial",
    "101": "SELECT account_id FROM trans WHERE strftime('%Y', `date`) = '1995' ORDER BY `date` ASC LIMIT 1\t----- bird -----\tfinancial",
    "102": "SELECT account_id FROM account WHERE strftime('%Y', date) < '1997' AND amount > 3000\t----- bird -----\tfinancial",
    "103": "SELECT client_id FROM card WHERE issued = '1994-03-03'\t----- bird -----\tfinancial",
    "104": "SELECT account.date FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.account_id = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\t----- bird -----\tfinancial",
    "105": "SELECT district_id FROM account WHERE date = '1994-08-25'\t----- bird -----\tfinancial",
    "106": "SELECT sum(t.amount) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id INNER JOIN trans t ON client.client_id = t.account_id WHERE card.issued = '1996-10-21'\t----- bird -----\tfinancial",
    "107": "SELECT client.gender FROM client INNER JOIN ( SELECT district_id, avg(A11) AS avg FROM district GROUP BY district_id ) AS t2 ON client.district_id = t2.district_id ORDER BY client.birth_date LIMIT 1\t----- bird -----\tfinancial",
    "108": "SELECT t.amount FROM ( SELECT client.client_id, sum(order.amount) AS amount FROM client INNER JOIN loan ON client.client_id = loan.account_id INNER JOIN order ON loan.account_id = order.account_id GROUP BY client.client_id ORDER BY sum(order.amount) DESC LIMIT 1 ) t\t----- bird -----\tfinancial",
    "109": "SELECT count(client_id) FROM client WHERE district_id = 1 AND gender = 'F'\t----- bird -----\tfinancial",
    "110": "SELECT DISTINCT disp_id FROM trans WHERE account_id = 5100 AND strftime('%Y', `date`) = '1998' AND strftime('%Y', `date`) = '1999'\t----- bird -----\tfinancial",
    "111": "SELECT count(account_id) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Litomerice' ) AND strftime('%Y', date) = '1996'\t----- bird -----\tfinancial",
    "112": "SELECT district.A2 FROM district INNER JOIN client ON district.district_id = client.district_id WHERE client.gender = 'F' AND client.birth_date = '1976-01-29'\t----- bird -----\tfinancial",
    "113": "SELECT client.birth_date FROM client INNER JOIN loan ON client.client_id = loan.client_id WHERE loan.date = '1996-01-03' AND loan.amount = 98832\t----- bird -----\tfinancial",
    "114": "SELECT account_id FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A3 = 'Prague' )\t----- bird -----\tfinancial",
    "115": "SELECT cast(sum(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / count(gender) FROM district WHERE A3 = 'South Bohemia'\t----- bird -----\tfinancial",
    "116": "SELECT cast((sum(CASE WHEN t.date = '1998-12-27' THEN balance ELSE 0 END) - sum(CASE WHEN t.date = '1993-03-22' THEN balance ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN t.date = '1993-03-22' THEN balance ELSE 0 END) FROM account AS t WHERE t.account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' )\t----- bird -----\tfinancial",
    "117": "SELECT cast(sum(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100 / sum(amount) FROM loan\t----- bird -----\tfinancial",
    "118": "SELECT cast(sum(CASE WHEN status = 'C' THEN amount ELSE 0 END) AS REAL) * 100 / sum(amount) FROM loan WHERE amount < 100000\t----- bird -----\tfinancial",
    "119": "SELECT account.account_id, district.A2, district.A3 FROM account INNER JOIN district ON account.district_id = district.district_id WHERE substr(account.date, 1, 4) = '1993' AND account.frequency = 'after transaction'\t----- bird -----\tfinancial",
    "120": "SELECT account_id, frequency FROM account WHERE strftime('%Y', date) BETWEEN '1995' AND '2000' AND district_id = ( SELECT district_id FROM district WHERE A12 = 'east Bohemia' )\t----- bird -----\tfinancial",
    "121": "SELECT account_id, date FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Prachatice' )\t----- bird -----\tfinancial",
    "122": "SELECT district.A2, district.A3 FROM loan INNER JOIN district ON loan.district_id = district.district_id WHERE loan_id = 4990\t----- bird -----\tfinancial",
    "123": "SELECT account.account_id, district.A2, district.A3 FROM account INNER JOIN loan ON account.account_id = loan.account_id INNER JOIN district ON account.district_id = district.district_id WHERE loan.amount > 300000\t----- bird -----\tfinancial",
    "124": "SELECT district.A3, avg(district.A11) FROM district INNER JOIN loan ON district.district_id = loan.district_id WHERE loan.duration = 60\t----- bird -----\tfinancial",
    "125": "SELECT district.A11, district.A12, district.A13 FROM district INNER JOIN loan ON district.district_id = loan.district_id WHERE loan.status = 'D'\t----- bird -----\tfinancial",
    "126": "SELECT cast(sum(CASE WHEN district.A3 = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100 / count(account.account_id) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE strftime('%Y', account.date) = '1993'\t----- bird -----\tfinancial",
    "127": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "128": "SELECT district_id FROM district WHERE A2 = 'F' ORDER BY A14 DESC LIMIT 10\t----- bird -----\tfinancial",
    "129": "SELECT district.A2 FROM district INNER JOIN account ON district.district_id = account.district_id WHERE account.date LIKE '1996-01%' AND account.type = 'VYDAJ' GROUP BY district.A2 ORDER BY count(district.A2) DESC LIMIT 10\t----- bird -----\tfinancial",
    "130": "SELECT count(client_id) FROM client WHERE district_id IN ( SELECT district_id FROM district WHERE A3 = 'South Bohemia' )\t----- bird -----\tfinancial",
    "131": "SELECT district.A3 FROM district INNER JOIN loan ON district.district_id = loan.account_id WHERE loan.status = 'C' GROUP BY district.A3 ORDER BY count(loan.loan_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "132": "SELECT avg(loan.amount) FROM loan INNER JOIN client ON loan.account_id = client.client_id WHERE client.gender = 'M'\t----- bird -----\tfinancial",
    "133": "SELECT A2, A13 FROM district ORDER BY A13 DESC LIMIT 1\t----- bird -----\tfinancial",
    "134": "SELECT count(account_id) FROM account WHERE strftime('%Y', date) = '1996' GROUP BY district_id ORDER BY sum(A16) DESC LIMIT 1\t----- bird -----\tfinancial",
    "135": "SELECT count(account_id) FROM account WHERE balance < 0 AND frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial",
    "136": "SELECT count(loan_id) FROM loan WHERE account_id IN ( SELECT account_id FROM account WHERE date BETWEEN '1995-01-01' AND '1997-12-31' AND frequency = 'POPLATEK MESICNE' AND amount >= 250000 )\t----- bird -----\tfinancial",
    "137": "SELECT count(account_id) FROM loan WHERE status = 'C'\t----- bird -----\tfinancial",
    "138": "SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A15 = ( SELECT max(A15) FROM district ) AND client.gender = 'M'\t----- bird -----\tfinancial",
    "139": "SELECT count(disp_id) FROM disp WHERE TYPE = 'disponent'\t----- bird -----\tfinancial",
    "140": "SELECT count(district_id) FROM district WHERE A2 = 'Pisek'\t----- bird -----\tfinancial",
    "141": "SELECT district.A11 FROM district INNER JOIN trans ON district.district_id = trans.account_id WHERE strftime('%Y', date) = '1997' AND trans.amount > 10000\t----- bird -----\tfinancial",
    "142": "SELECT account_id FROM order WHERE k_symbol = 'SIPO'\t----- bird -----\tfinancial",
    "143": "SELECT account_id FROM card WHERE TYPE = 'gold' AND TYPE = 'junior'\t----- bird -----\tfinancial",
    "144": "SELECT sum(amount) / count(trans_id) FROM trans WHERE TYPE = 'VYBER KARTOU' AND strftime('%Y', `date`) = '2021'\t----- bird -----\tfinancial",
    "145": "SELECT account_id FROM card WHERE TYPE = 'VISA' AND issuedt----- bird -----\tfinancial",
    "146": "SELECT client.client_id FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'F'\t----- bird -----\tfinancial",
    "147": "SELECT count(client_id) FROM client WHERE gender = 'F' AND A3 = 'south Bohemia'\t----- bird -----\tfinancial",
    "148": "SELECT account_id FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Tabor' ) AND account_id IN ( SELECT account_id FROM loan WHERE status = 'Eligible' )\t----- bird -----\tfinancial",
    "149": "SELECT DISTINCT TYPE FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A11 BETWEEN 8000 AND 9000 ) AND TYPE != 'OWNER'\t----- bird -----\tfinancial",
    "150": "SELECT count(account_id) FROM account WHERE district_id IN ( SELECT district_id FROM district WHERE A3 = 'North Bohemia' ) AND bank_to = 'AB'\t----- bird -----\tfinancial",
    "151": "SELECT district.A2 FROM district INNER JOIN trans ON district.district_id = trans.account_id WHERE trans.type = 'VYDAJ'\t----- bird -----\tfinancial",
    "152": "SELECT cast(sum(CASE WHEN A15 > 4000 THEN 1 ELSE 0 END) AS REAL) / count(district_id) FROM district INNER JOIN account ON district.district_id = account.district_id WHERE substr(date, 1, 4) = '1997'\t----- bird -----\tfinancial",
    "153": "SELECT count(card_id) FROM card WHERE TYPE = 'classic' AND account_id IN ( SELECT account_id FROM account WHERE TYPE = 'OWNER' )\t----- bird -----\tfinancial",
    "154": "SELECT count(client_id) FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha' ) AND gender = 'M'\t----- bird -----\tfinancial",
    "155": "SELECT cast(sum(CASE WHEN TYPE = 'Gold' THEN 1 ELSE 0 END) AS REAL) * 100 / count(card_id) FROM card WHERE strftime('%Y', issued) < '1998'\t----- bird -----\tfinancial",
    "156": "SELECT client.client_id FROM client INNER JOIN loan ON client.client_id = loan.account_id ORDER BY loan.amount DESC LIMIT 1\t----- bird -----\tfinancial",
    "157": "SELECT sum(CASE WHEN substr(A15, 1, 4) = '1995' THEN cast(A15 AS REAL) ELSE 0 END) FROM district WHERE district_id = 532\t----- bird -----\tfinancial",
    "158": 0,
    "159": "SELECT trans.amount FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN trans ON card.card_id = trans.card_id WHERE client.client_id = 3356 AND trans.operation = 'VYBER'\t----- bird -----\tfinancial",
    "160": "SELECT count(account_id) FROM loan WHERE account_id IN ( SELECT account_id FROM account WHERE frequency = 'POPLATEK TYDNE' ) AND payments < 200000\t----- bird -----\tfinancial",
    "161": "SELECT card.type FROM card INNER JOIN client ON card.disp_id = client.client_id WHERE client.client_id = 13539\t----- bird -----\tfinancial",
    "162": "SELECT A3 FROM client WHERE client_id = 3541\t----- bird -----\tfinancial",
    "163": "SELECT district.district_id FROM district INNER JOIN loan ON district.district_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id ORDER BY count(loan.account_id) DESC LIMIT 1\t----- bird -----\tfinancial",
    "164": "SELECT account_id FROM order WHERE order_id = 32423\t----- bird -----\tfinancial",
    "165": "SELECT trans.trans_id FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.district_id = 5\t----- bird -----\tfinancial",
    "166": "SELECT count(account_id) FROM account WHERE district_id = 1\t----- bird -----\tfinancial",
    "167": "SELECT client.client_id FROM client INNER JOIN card ON client.client_id = card.disp_id WHERE strftime('%Y', card.issued) > '1996'\t----- bird -----\tfinancial",
    "168": "SELECT cast(sum(CASE WHEN district.A11 > 10000 THEN 1 ELSE 0 END) AS REAL) * 100 / count(district.district_id) FROM district INNER JOIN client ON district.district_id = client.district_id WHERE client.gender = 'F'\t----- bird -----\tfinancial",
    "169": "SELECT cast((sum(CASE WHEN substr(cast(date AS TEXT), -4) = '1997' THEN amount ELSE 0 END) - sum(CASE WHEN substr(cast(date AS TEXT), -4) = '1996' THEN amount ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN substr(cast(date AS TEXT), -4) = '1996' THEN amount ELSE 0 END) FROM loan WHERE client_id IN ( SELECT client_id FROM client WHERE gender = 'M' AND substr(cast(birth_date AS TEXT), -4) BETWEEN '1996' AND '1997' )\t----- bird -----\tfinancial",
    "170": "SELECT count(trans_id) FROM trans WHERE operation = 'VYBER KARTOU' AND strftime('%Y', `date`) > '1995'\t----- bird -----\tfinancial",
    "171": "SELECT sum(CASE WHEN A3 = 'East Bohemia' THEN 1 ELSE 0 END) - sum(CASE WHEN A3 = 'North Bohemia' THEN 1 ELSE 0 END) AS diff FROM district\t----- bird -----\tfinancial",
    "172": "SELECT count(disp_id) FROM disp WHERE account_id BETWEEN 1 AND 10\t----- bird -----\tfinancial",
    "173": "SELECT frequency, sum(amount) FROM order WHERE account_id = 3 GROUP BY frequency\t----- bird -----\tfinancial",
    "174": "SELECT strftime('%Y', birth_date) FROM client WHERE client_id = 130\t----- bird -----\tfinancial",
    "175": "SELECT count(account_id) FROM account WHERE frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial",
    "176": "SELECT sum(loan.amount) FROM loan INNER JOIN client ON loan.account_id = client.client_id WHERE client.client_id = 992\t----- bird -----\tfinancial",
    "177": "SELECT sum(CASE WHEN client.gender = 'male' THEN 1 ELSE 0 END) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id WHERE client.client_id = 4 AND account.account_id = 851\t----- bird -----\tfinancial",
    "178": "SELECT card.type FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id WHERE client.client_id = 9\t----- bird -----\tfinancial",
    "179": "SELECT sum(t.amount) FROM account a INNER JOIN trans t ON a.account_id = t.account_id WHERE strftime('%Y', t.date) = '1998' AND a.district_id = 617\t----- bird -----\tfinancial",
    "180": "SELECT client.client_id FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A16 = 1 AND client.birth_date BETWEEN '1983-01-01' AND '1987-12-31' AND district.district_id = 1\t----- bird -----\tfinancial",
    "181": "SELECT t.loan_id FROM ( SELECT loan_id, sum(amount) AS num FROM loan WHERE status = 'Paid' GROUP BY loan_id ) AS t ORDER BY t.num DESC LIMIT 3\t----- bird -----\tfinancial",
    "182": "SELECT count(client.client_id) FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'M' AND loan.amount > 4000 AND strftime('%Y', client.birth_date) BETWEEN '1974' AND '1976'\t----- bird -----\tfinancial",
    "183": "SELECT count(account_id) FROM account WHERE strftime('%Y', `date`) > '1996'\t----- bird -----\tfinancial",
    "184": "SELECT count(client_id) FROM client WHERE gender = 'F' AND card_id IN ( SELECT card_id FROM card WHERE TYPE = 'junior' )\t----- bird -----\tfinancial",
    "185": "SELECT cast(sum(CASE WHEN gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / count(gender) FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A3 = 'Prague' )\t----- bird -----\tfinancial",
    "186": "SELECT cast(sum(CASE WHEN gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / count(gender) FROM client WHERE district_id = 1\t----- bird -----\tfinancial",
    "187": "SELECT count(client_id) FROM client WHERE frequency = 'POPLATEK TYDNE'\t----- bird -----\tfinancial",
    "188": "SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE loan.duration > 24 AND account.date < '1997-01-01' ORDER BY loan.amount ASC LIMIT 1\t----- bird -----\tfinancial",
    "189": "SELECT account.account_id FROM client INNER JOIN account ON client.district_id = account.district_id WHERE client.gender = 'F' ORDER BY client.birth_date ASC, account.A11 ASC LIMIT 1\t----- bird -----\tfinancial",
    "190": "SELECT count(client_id) FROM client WHERE district_id = ( SELECT district_id FROM district WHERE A3 = 'east Bohemia' ) AND birth_date LIKE '192%'\t----- bird -----\tfinancial",
    "191": "SELECT count(account_id) FROM loan WHERE frequency = 'POPLATEK TYDNE' AND duration = 24\t----- bird -----\tfinancial",
    "192": "SELECT avg(amount) FROM loan WHERE status = 'C' AND date > ( SELECT max(date) FROM trans )\t----- bird -----\tfinancial",
    "193": "SELECT client.client_id, district.district_id FROM client INNER JOIN account ON client.client_id = account.district_id WHERE account.frequency = 'permanent' OR account.frequency = 'loan'\t----- bird -----\tfinancial",
    "194": "SELECT client.client_id, client.birth_date FROM client INNER JOIN disp ON client.client_id = disp.client_id WHERE disp.type = 'gold'\t----- bird -----\tfinancial",
    "195": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY count(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "196": "SELECT count(molecule_id) FROM molecule WHERE label = '-' AND element = 'cl'\t----- bird -----\ttoxicology",
    "197": "SELECT avg(CASE WHEN element = 'o' THEN 1 ELSE 0 END) FROM atom INNER JOIN bond ON atom.atom_id = bond.atom_id WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "198": "SELECT cast(sum(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / count(atom_id) FROM bond\t----- bird -----\ttoxicology",
    "199": "SELECT count(atom.atom_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '-' AND atom.element = 'na'\t----- bird -----\ttoxicology",
    "200": "SELECT molecule.label FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.atom_id WHERE connected.bond_type = '#' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "201": "SELECT cast(sum(CASE WHEN element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / count(atom_id) FROM atom INNER JOIN bond ON atom.atom_id = bond.atom_id WHERE bond_type = ' = '\t----- bird -----\ttoxicology",
    "202": "SELECT count(bond_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "203": "SELECT count(atom_id) FROM atom WHERE element != 'br'\t----- bird -----\ttoxicology",
    "204": "SELECT count(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology",
    "205": "SELECT molecule_id FROM atom WHERE element = 'si'\t----- bird -----\ttoxicology",
    "206": "SELECT DISTINCT element FROM bond WHERE bond_id = 'TR004_8_9'\t----- bird -----\ttoxicology",
    "207": "SELECT DISTINCT element FROM bond WHERE bond_type = ' = ' AND element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "208": "SELECT label FROM ( SELECT label, count(label) AS num FROM atom WHERE element = 'h' GROUP BY label ) t ORDER BY t.num DESC LIMIT 1\t----- bird -----\ttoxicology",
    "209": "SELECT bond_type FROM atom WHERE element = 'te'\t----- bird -----\ttoxicology",
    "210": "SELECT atom_id FROM connected WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "211": "SELECT atom_id FROM connected WHERE bond_type = 'non-carcinogenic'\t----- bird -----\ttoxicology",
    "212": "SELECT element FROM molecule WHERE label = '-' ORDER BY count(element) LIMIT 1\t----- bird -----\ttoxicology",
    "213": "SELECT bond_type FROM connected WHERE atom_id = 'TR004_8' AND atom_id2 = 'TR004_20'\t----- bird -----\ttoxicology",
    "214": "SELECT DISTINCT CASE WHEN label = '+' THEN 'carcinogenic' WHEN label = '-' THEN 'non-carcinogenic' END FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE element != 'sn'\t----- bird -----\ttoxicology",
    "215": "SELECT count(atom.atom_id) FROM atom INNER JOIN bond ON atom.atom_id = bond.atom_id WHERE bond.bond_type = '-' AND atom.element IN ('i', 's')\t----- bird -----\ttoxicology",
    "216": "SELECT atom_id, atom_id2 FROM connected WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "217": "SELECT atom_id FROM connected WHERE molecule_id = 'TR181'\t----- bird -----\ttoxicology",
    "218": "SELECT cast(sum(CASE WHEN element = 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "219": "SELECT cast(sum(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / count(bond_id) FROM bond WHERE label = '+'\t----- bird -----\ttoxicology",
    "220": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3\t----- bird -----\ttoxicology",
    "221": "SELECT atom.atom_id FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.atom_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE molecule.molecule_id = 'TR001' AND connected.bond_id = 'TR001_2_6'\t----- bird -----\ttoxicology",
    "222": "SELECT sum(CASE WHEN label = '+' THEN 1 ELSE 0 END) - sum(CASE WHEN label = '-' THEN 1 ELSE 0 END) FROM molecule\t----- bird -----\ttoxicology",
    "223": "SELECT atom_id FROM connected WHERE bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology",
    "224": "SELECT bond_id FROM connected WHERE atom_id = 'TR000_2' AND atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "225": "SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = ' = ' GROUP BY molecule.label ORDER BY count(bond.bond_id) DESC LIMIT 5\t----- bird -----\ttoxicology",
    "226": "SELECT cast(sum(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / count(bond_id) FROM bond WHERE molecule_id = 'TR008'\t----- bird -----\ttoxicology",
    "227": "SELECT cast(sum(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule_id) FROM molecule\t----- bird -----\ttoxicology",
    "228": "SELECT cast(sum(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / count(atom_id) FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology",
    "229": "SELECT bond_type FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule.molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "230": "SELECT DISTINCT element, label FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.atom_id WHERE molecule.molecule_id = 'TR060'\t----- bird -----\ttoxicology",
    "231": "SELECT bond_type FROM bond WHERE molecule_id = 'TR018' GROUP BY bond_type ORDER BY count(bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "232": "SELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM bond WHERE bond_type = '-' GROUP BY molecule_id HAVING count(molecule_id) = 1 ) ORDER BY label LIMIT 3\t----- bird -----\ttoxicology",
    "233": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id LIMIT 2\t----- bird -----\ttoxicology",
    "234": "SELECT count(bond_id) FROM connected WHERE atom_id = 'TR009_12' OR atom_id2 = 'TR009_12'\t----- bird -----\ttoxicology",
    "235": "SELECT count(molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE element = 'br' AND label = '+'\t----- bird -----\ttoxicology",
    "236": "SELECT bond_type, atom_id, atom_id2 FROM bond WHERE bond_id = 'TR001_6_9'\t----- bird -----\ttoxicology",
    "237": "SELECT label FROM molecule WHERE molecule_id = ( SELECT molecule_id FROM atom WHERE atom_id = 'TR001_10' )\t----- bird -----\ttoxicology",
    "238": "SELECT count(molecule_id) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "239": "SELECT count(bond_id) FROM connected WHERE atom_id = 'TR%_19'\t----- bird -----\ttoxicology",
    "240": "SELECT DISTINCT CASE WHEN element = 'cl' THEN 'Chlorine' WHEN element = 'c' THEN 'Carbon' WHEN element = 'h' THEN 'Hydrogen' WHEN element = 'o' THEN 'Oxygen' WHEN element = 's' THEN 'Sulfur' WHEN element = 'n' THEN 'Nitrogen' WHEN element = 'p' THEN 'Phosphorus' WHEN element = 'na' THEN 'Sodium' WHEN element = 'br' THEN 'Bromine' WHEN element = 'f' THEN 'Fluorine' WHEN element = 'i' THEN 'Iodine' WHEN element = 'sn' THEN 'Tin' WHEN element = 'pb' THEN 'Lead' WHEN element = 'te' THEN 'Tellurium' WHEN element = 'ca' THEN 'Calcium' END FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR004'\t----- bird -----\ttoxicology",
    "241": "SELECT count(label) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "242": "SELECT DISTINCT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE atom_id BETWEEN '21' AND '25' )\t----- bird -----\ttoxicology",
    "243": "SELECT bond_id FROM bond WHERE bond_type = 'single' AND (SELECT element FROM atom WHERE atom_id = bond.atom_id) = 'p' AND (SELECT element FROM atom WHERE atom_id = bond.atom_id2) = 'n'\t----- bird -----\ttoxicology",
    "244": "SELECT label FROM molecule WHERE molecule_id = ( SELECT molecule_id FROM molecule ORDER BY count(molecule_id) DESC LIMIT 1 )\t----- bird -----\ttoxicology",
    "245": "SELECT cast(count(bond_id) AS REAL) / count(DISTINCT atom_id) FROM atom WHERE element = 'i'\t----- bird -----\ttoxicology",
    "246": "SELECT bond_type, bond_id FROM bond WHERE atom_id = '45'\t----- bird -----\ttoxicology",
    "247": "SELECT DISTINCT element FROM atom WHERE element NOT IN ( SELECT element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id )\t----- bird -----\ttoxicology",
    "248": "SELECT atom.atom_id FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN atom ON atom.molecule_id = bond.molecule_id WHERE molecule.molecule_id = 'TR447' AND bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "249": "SELECT DISTINCT CASE WHEN element = 'cl' THEN 'Chlorine' WHEN element = 'c' THEN 'Carbon' WHEN element = 'h' THEN 'Hydrogen' WHEN element = 'o' THEN 'Oxygen' WHEN element = 's' THEN 'Sulfur' WHEN element = 'n' THEN 'Nitrogen' WHEN element = 'p' THEN 'Phosphorus' WHEN element = 'na' THEN 'Sodium' WHEN element = 'br' THEN 'Bromine' WHEN element = 'f' THEN 'Fluorine' WHEN element = 'i' THEN 'Iodine' WHEN element = 'sn' THEN 'Tin' WHEN element = 'pb' THEN 'Lead' WHEN element = 'te' THEN 'Tellurium' WHEN element = 'ca' THEN 'Calcium' END FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE bond_id = 'TR144_8_19'\t----- bird -----\ttoxicology",
    "250": "SELECT label FROM molecule WHERE label = '+' ORDER BY count(bond_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "251": "SELECT element FROM atom WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) GROUP BY element ORDER BY count(element) ASC LIMIT 1\t----- bird -----\ttoxicology",
    "252": "SELECT atom_id FROM atom WHERE element = 'pb'\t----- bird -----\ttoxicology",
    "253": "SELECT DISTINCT element FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "254": "SELECT cast(count(bond_id) AS REAL) * 100 / count(DISTINCT atom_id) FROM bond GROUP BY atom_id2, atom_id3 ORDER BY count(atom_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "255": "SELECT cast(sum(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / count(bond_id) FROM bond\t----- bird -----\ttoxicology",
    "256": "SELECT count(atom_id) FROM atom WHERE element IN ('c', 'h')\t----- bird -----\ttoxicology",
    "257": "SELECT connected.atom_id2 FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element = 's'\t----- bird -----\ttoxicology",
    "258": "SELECT bond_type FROM bond WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'Tin' )\t----- bird -----\ttoxicology",
    "259": "SELECT count(DISTINCT atom.element) FROM bond INNER JOIN atom ON bond.atom_id = atom.atom_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "260": "SELECT count(atom.atom_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id INNER JOIN bond ON atom.atom_id = bond.atom_id WHERE bond.bond_type = '#' AND atom.element = 'p' OR atom.element = 'br'\t----- bird -----\ttoxicology",
    "261": "SELECT bond_id FROM bond WHERE label = '+'\t----- bird -----\ttoxicology",
    "262": "SELECT molecule_id FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "263": "SELECT cast(sum(CASE WHEN element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / count(atom_id) FROM atom INNER JOIN bond ON atom.atom_id = bond.atom_id WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "264": "SELECT label FROM molecule WHERE molecule_id IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology",
    "265": "SELECT molecule_id FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology",
    "266": "SELECT count(molecule_id) FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030'\t----- bird -----\ttoxicology",
    "267": "SELECT bond_type FROM bond WHERE molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology",
    "268": "SELECT DISTINCT CASE WHEN element = 'cl' THEN 'Chlorine' WHEN element = 'c' THEN 'Carbon' WHEN element = 'h' THEN 'Hydrogen' WHEN element = 'o' THEN 'Oxygen' WHEN element = 's' THEN 'Sulfur' WHEN element = 'n' THEN 'Nitrogen' WHEN element = 'p' THEN 'Phosphorus' WHEN element = 'na' THEN 'Sodium' WHEN element = 'br' THEN 'Bromine' WHEN element = 'f' THEN 'Fluorine' WHEN element = 'i' THEN 'Iodine' WHEN element = 'sn' THEN 'Tin' WHEN element = 'pb' THEN 'Lead' WHEN element = 'te' THEN 'Tellurium' WHEN element = 'ca' THEN 'Calcium' END FROM bond WHERE bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "269": "SELECT count(bond_id) FROM bond WHERE element = 'i'\t----- bird -----\ttoxicology",
    "270": "SELECT label FROM molecule WHERE element = 'ca' GROUP BY label ORDER BY count(label) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "271": "SELECT bond_id FROM atom WHERE element = 'cl' AND element = 'c'\t----- bird -----\ttoxicology",
    "272": "SELECT molecule.molecule_id FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '-' AND atom.element = 'c' LIMIT 2\t----- bird -----\ttoxicology",
    "273": "SELECT cast(sum(CASE WHEN `element` = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "274": "SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR001'\t----- bird -----\ttoxicology",
    "275": "SELECT molecule_id FROM bond WHERE bond_type = ' = '\t----- bird -----\ttoxicology",
    "276": "SELECT atom_id, atom_id2 FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "277": "SELECT DISTINCT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM bond WHERE bond_id = 'TR005_16_26' )\t----- bird -----\ttoxicology",
    "278": "SELECT count(molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '-'\t----- bird -----\ttoxicology",
    "279": "SELECT label FROM bond WHERE bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "280": "SELECT bond_id, CASE WHEN label = '+' THEN 'carcinogenic' ELSE 'non-carcinogenic' END AS label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond_type = '#'\t----- bird -----\ttoxicology",
    "281": "SELECT DISTINCT element FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE substr(atom.atom_id, 7, 1) = 4 AND label = '+' AND element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "282": "SELECT cast(sum(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / count(element) AS per FROM atom WHERE molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "283": "SELECT label FROM molecule WHERE label = ( SELECT label FROM molecule WHERE element = 'ca' )\t----- bird -----\ttoxicology",
    "284": "SELECT bond_type FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE element = 'te' )\t----- bird -----\ttoxicology",
    "285": "SELECT DISTINCT element FROM bond WHERE bond_id = 'TR001_10_11'\t----- bird -----\ttoxicology",
    "286": "SELECT cast(sum(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule_id) FROM bond\t----- bird -----\ttoxicology",
    "287": "SELECT cast(sum(CASE WHEN bond_type = ' = ' THEN 1 ELSE 0 END) AS REAL) * 100 / count(bond_id) FROM bond WHERE molecule_id = 'TR047'\t----- bird -----\ttoxicology",
    "288": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS RESULT FROM molecule WHERE molecule_id = 'TR001_1'\t----- bird -----\ttoxicology",
    "289": "SELECT label FROM molecule WHERE molecule_id = 'TR151'\t----- bird -----\ttoxicology",
    "290": "SELECT DISTINCT element FROM atom WHERE molecule_id = ( SELECT molecule_id FROM molecule WHERE label = 'TR151' )\t----- bird -----\ttoxicology",
    "291": "SELECT count(molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "292": "SELECT atom_id FROM atom WHERE molecule_id BETWEEN 'TR010' AND 'TR050' AND element = 'c'\t----- bird -----\ttoxicology",
    "293": "SELECT count(atom_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "294": "SELECT bond_id FROM bond WHERE bond_type = ' = '\t----- bird -----\ttoxicology",
    "295": "SELECT count(atom.atom_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' AND atom.element = 'h'\t----- bird -----\ttoxicology",
    "296": "SELECT molecule_id FROM bond WHERE bond_id = ( SELECT bond_id FROM bond WHERE atom_id = 'TR00_1' )\t----- bird -----\ttoxicology",
    "297": "SELECT atom_id FROM atom WHERE element = 'c' AND label = '-'\t----- bird -----\ttoxicology",
    "298": "SELECT cast(sum(CASE WHEN label = '+' AND element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule_id) FROM molecule\t----- bird -----\ttoxicology",
    "299": "SELECT label FROM molecule WHERE molecule_id = 'TR124'\t----- bird -----\ttoxicology",
    "300": "SELECT atom_id FROM molecule WHERE molecule_id = 'TR186'\t----- bird -----\ttoxicology",
    "301": "SELECT bond_type FROM bond WHERE molecule_id = ( SELECT molecule_id FROM molecule WHERE molecule_id = 'TR007_4_19' )\t----- bird -----\ttoxicology",
    "302": "SELECT DISTINCT element FROM atom INNER JOIN bond ON atom.atom_id = bond.atom_id WHERE bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "303": "SELECT count(bond_id) FROM bond WHERE bond_type = ' = ' AND molecule_id = 'TR006'\t----- bird -----\ttoxicology",
    "304": "SELECT label, element FROM molecule WHERE label = '+' AND element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology",
    "305": "SELECT bond_id, atom_id, atom_id2 FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "306": "SELECT DISTINCT molecule.label, atom.element FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.atom_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology",
    "307": "SELECT DISTINCT element FROM atom INNER JOIN bond ON atom.atom_id = bond.atom_id2 WHERE bond_id = 'TR000_2_3'\t----- bird -----\ttoxicology",
    "308": "SELECT count(bond_id) FROM atom WHERE element = 'cl'\t----- bird -----\ttoxicology",
    "309": "SELECT atom.atom_id, count(bond.bond_type) FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.molecule_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE molecule.molecule_id = 'TR346' GROUP BY atom.atom_id\t----- bird -----\ttoxicology",
    "310": "SELECT count(molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = ' = ' AND molecule.label = '+'\t----- bird -----\ttoxicology",
    "311": "SELECT count(molecule_id) FROM ( SELECT molecule_id FROM atom WHERE element = 's' GROUP BY molecule_id HAVING count(molecule_id) > 1 ) AS t2\t----- bird -----\ttoxicology",
    "312": "SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology",
    "313": "SELECT count(atom_id) FROM atom WHERE molecule_id = 'TR005'\t----- bird -----\ttoxicology",
    "314": "SELECT count(bond_id) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology",
    "315": "SELECT label FROM molecule WHERE element = 'cl'\t----- bird -----\ttoxicology",
    "316": "SELECT label FROM molecule WHERE element = 'c' AND label = '-'\t----- bird -----\ttoxicology",
    "317": "SELECT cast(sum(CASE WHEN label = '+' AND element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule_id) FROM molecule\t----- bird -----\ttoxicology",
    "318": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology",
    "319": "SELECT count(DISTINCT element) FROM bond WHERE bond_id = 'TR001_3_4'\t----- bird -----\ttoxicology",
    "320": "SELECT bond_type FROM bond WHERE atom_id = 'TR000_1' AND atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology",
    "321": "SELECT molecule_id FROM connected WHERE atom_id = 'TR000_2' AND atom_id2 = 'TR000_4'\t----- bird -----\ttoxicology",
    "322": "SELECT element FROM atom WHERE atom_id = 'TR000_1'\t----- bird -----\ttoxicology",
    "323": "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology",
    "324": "SELECT cast(sum(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / count(bond_id) FROM bond\t----- bird -----\ttoxicology",
    "325": "SELECT count(molecule_id) FROM molecule WHERE label = '+' AND element = 'n'\t----- bird -----\ttoxicology",
    "326": "SELECT molecule.label FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.molecule_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 's' AND connected.bond_type = ' = '\t----- bird -----\ttoxicology",
    "327": "SELECT label FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM molecule GROUP BY molecule_id HAVING count(molecule_id) > 5 )\t----- bird -----\ttoxicology",
    "328": "SELECT DISTINCT atom.element FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.atom_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE molecule.molecule_id = 'TR024' AND atom.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND connected.bond_type = '='\t----- bird -----\ttoxicology",
    "329": "SELECT label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE label = '+' GROUP BY label ORDER BY count(atom.molecule_id) DESC LIMIT 1\t----- bird -----\ttoxicology",
    "330": "SELECT cast(sum(CASE WHEN label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule_id) FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.molecule_id WHERE molecule.label = '+' AND connected.bond_type = '#' AND molecule.element = 'h'\t----- bird -----\ttoxicology",
    "331": "SELECT count(molecule_id) FROM molecule WHERE label = '+'\t----- bird -----\ttoxicology",
    "332": "SELECT count(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR004' AND 'TR010' AND bond_type = '-'\t----- bird -----\ttoxicology",
    "333": "SELECT count(atom_id) FROM atom WHERE element = 'c'\t----- bird -----\ttoxicology",
    "334": "SELECT DISTINCT element FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '-' AND atom.atom_id = 'TR004_7'\t----- bird -----\ttoxicology",
    "335": "SELECT count(molecule_id) FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.atom_id WHERE bond_type = ' = ' AND element = 'o'\t----- bird -----\ttoxicology",
    "336": "SELECT count(molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '-'\t----- bird -----\ttoxicology",
    "337": "SELECT DISTINCT element, bond_type FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE molecule_id = 'TR016'\t----- bird -----\ttoxicology",
    "338": "SELECT atom_id FROM atom WHERE element = 'c' AND bond_type = ' = '\t----- bird -----\ttoxicology",
    "339": "SELECT atom.atom_id FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+' AND atom.element = 'o'\t----- bird -----\ttoxicology",
    "340": "SELECT name FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "341": "SELECT name FROM cards WHERE borderColor IS NULL AND cardKingdomId IS NULL AND cardKingdomFoilId IS NULL\t----- bird -----\tcard_games",
    "342": "SELECT name FROM cards WHERE faceConvertedManaCost = ( SELECT max(faceConvertedManaCost) FROM cards )\t----- bird -----\tcard_games",
    "343": "SELECT name FROM cards WHERE frameVersion = 2015 AND edhrecRank < 100\t----- bird -----\tcard_games",
    "344": "SELECT t.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode INNER JOIN cards ON sets.id = cards.setcode INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.isOnlineOnly = 0 AND sets.isForeignOnly = 0 AND sets.isFoilOnly = 0 AND sets.isPartialPreview = 0 AND sets.block = 'online' AND sets.type = 'online' AND sets.code = 'online' AND set_translations.language = 'en' AND rarity = 'mythic' AND status = 'Banned' AND format = 'gladiator'\t----- bird -----\tcard_games",
    "345": "SELECT DISTINCT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Artifact' AND side IS NULL AND legalities.format = 'vintage'\t----- bird -----\tcard_games",
    "346": "SELECT t.id, t.artist FROM ( SELECT cards.id, cards.artist FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Legal' AND legalities.format = 'commander' AND (power = '*' OR power IS NULL) ) t\t----- bird -----\tcard_games",
    "347": "SELECT t.text, t.hasContentWarning FROM cards AS t WHERE t.artist = 'Stephen Daniel'\t----- bird -----\tcard_games",
    "348": "SELECT text FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Sublime Epiphany' AND number = '74s' )\t----- bird -----\tcard_games",
    "349": "SELECT cards.name, cards.artist, cards.isPromo FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid GROUP BY cards.name, cards.artist, cards.isPromo ORDER BY count(rulings.uuid) DESC LIMIT 1\t----- bird -----\tcard_games",
    "350": "SELECT DISTINCT t.language FROM cards AS t WHERE t.name = 'annul' AND t.number = '29'\t----- bird -----\tcard_games",
    "351": "SELECT name FROM cards WHERE LANGUAGE = 'Japanese'\t----- bird -----\tcard_games",
    "352": "SELECT cast(sum(CASE WHEN LANGUAGE = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM cards\t----- bird -----\tcard_games",
    "353": "SELECT count(t.setCode) FROM sets t WHERE t.language = 'Italian'\t----- bird -----\tcard_games",
    "354": "SELECT count(DISTINCT cards.id) FROM cards INNER JOIN artist ON cards.artist = artist.name WHERE artist.name = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "355": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "356": "SELECT count(uuid) FROM cards WHERE power = '*'\t----- bird -----\tcard_games",
    "357": "SELECT DISTINCT promoTypes FROM cards WHERE name = 'Duress'\t----- bird -----\tcard_games",
    "358": "SELECT borderColor FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "359": "SELECT originalType FROM cards WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "360": "SELECT DISTINCT set_translations.language FROM cards INNER JOIN sets ON cards.setCode = sets.code INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.name = 'Angel of Mercy'\t----- bird -----\tcard_games",
    "361": "SELECT count(id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND isTextless = 0\t----- bird -----\tcard_games",
    "362": "SELECT text FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Condemn' )\t----- bird -----\tcard_games",
    "363": "SELECT count(uuid) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE isStarter = 1 AND status = 'restricted'\t----- bird -----\tcard_games",
    "364": "SELECT status FROM cards WHERE name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games",
    "365": "SELECT TYPE FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "366": "SELECT DISTINCT legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Benalish Knight'\t----- bird -----\tcard_games",
    "367": "SELECT artist FROM cards WHERE artist IS NOT NULL AND artist <> '' AND LANGUAGE = 'Phyrexian'\t----- bird -----\tcard_games",
    "368": "SELECT cast(sum(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM cards\t----- bird -----\tcard_games",
    "369": "SELECT count(t.uuid) FROM cards AS t INNER JOIN set_translations AS s ON t.setCode = s.setCode WHERE s.language = 'de' AND t.isReprint = 1\t----- bird -----\tcard_games",
    "370": "SELECT count(id) FROM cards WHERE borderColor = 'borderless' AND language = 'Russian'\t----- bird -----\tcard_games",
    "371": "SELECT cast(sum(CASE WHEN language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM cards WHERE isStorySpotlight = 1\t----- bird -----\tcard_games",
    "372": "SELECT count(id) FROM cards WHERE toughness = 99\t----- bird -----\tcard_games",
    "373": "SELECT name FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games",
    "374": "SELECT count(id) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "375": "SELECT id FROM cards WHERE convertedManaCost = 0\t----- bird -----\tcard_games",
    "376": "SELECT DISTINCT layout FROM cards WHERE keywords LIKE '%flying%'\t----- bird -----\tcard_games",
    "377": "SELECT count(t.id) FROM ( SELECT cards.id FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.name = 'Summon - Angel' AND foreign_data.subtypes != 'Angel' GROUP BY cards.id ) t\t----- bird -----\tcard_games",
    "378": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "379": "SELECT id FROM cards WHERE duelDeck = 'a'\t----- bird -----\tcard_games",
    "380": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games",
    "381": "SELECT DISTINCT artist FROM cards WHERE LANGUAGE = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "382": "SELECT name FROM cards WHERE availability = 'paper' AND language = 'Japanese'\t----- bird -----\tcard_games",
    "383": "SELECT count(uuid) FROM cards WHERE borderColor = 'white' AND status = 'Banned'\t----- bird -----\tcard_games",
    "384": "SELECT t.uuid, t.language FROM foreign_data AS t WHERE t.format = 'legacy'\t----- bird -----\tcard_games",
    "385": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Beacon of Immortality'\t----- bird -----\tcard_games",
    "386": "SELECT count(uuid) FROM cards WHERE frameVersion = 'future' AND status = 'legal'\t----- bird -----\tcard_games",
    "387": "SELECT name, colors FROM cards WHERE setCode = 'OGW'\t----- bird -----\tcard_games",
    "388": "SELECT t.translation, t.language FROM sets INNER JOIN set_translations AS t ON sets.code = t.setCode WHERE sets.code = '10E' AND convertedManaCost = 5\t----- bird -----\tcard_games",
    "389": "SELECT cards.name, rulings.date FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.originalType = 'Creature - Elf'\t----- bird -----\tcard_games",
    "390": "SELECT colors, format FROM cards WHERE id BETWEEN 1 AND 20\t----- bird -----\tcard_games",
    "391": "SELECT t.name FROM foreign_data AS t WHERE t.originalType = 'Artifact' AND t.colors = 'B' AND t.language IS NOT NULL\t----- bird -----\tcard_games",
    "392": "SELECT cards.name FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE rulings.rarity = 'uncommon' ORDER BY rulings.date ASC LIMIT 3\t----- bird -----\tcard_games",
    "393": "SELECT count(t.id) FROM cards t WHERE t.artist = 'John Avon' AND t.cardKingdomId IS NOT NULL AND t.cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "394": "SELECT count(id) FROM cards WHERE borderColor = 'white' AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games",
    "395": "SELECT count(id) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1\t----- bird -----\tcard_games",
    "396": "SELECT count(id) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games",
    "397": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = 2003 AND borderColor = 'black' AND availability = 'paper' AND availability = 'mtgo'\t----- bird -----\tcard_games",
    "398": "SELECT sum(CASE WHEN artist = 'Rob Alexander' THEN cast(replace(manaCost, '{', '') AS INTEGER) ELSE 0 END) FROM cards\t----- bird -----\tcard_games",
    "399": "SELECT DISTINCT types FROM cards WHERE availability = 'arena'\t----- bird -----\tcard_games",
    "400": "SELECT DISTINCT setCode FROM set_translations WHERE LANGUAGE = 'Spanish'\t----- bird -----\tcard_games",
    "401": "SELECT cast(sum(CASE WHEN hand = '+3' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM cards WHERE frameEffects = 'legendary'\t----- bird -----\tcard_games",
    "402": "SELECT cast(sum(CASE WHEN isStorySpotlight = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM cards\t----- bird -----\tcard_games",
    "403": "SELECT cast(sum(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM foreign_data\t----- bird -----\tcard_games",
    "404": "SELECT DISTINCT t.language FROM sets INNER JOIN set_translations AS t ON sets.code = t.setCode WHERE sets.baseSetSize = 309\t----- bird -----\tcard_games",
    "405": "SELECT count(t.setCode) FROM sets AS t WHERE t.block = 'Commander' AND t.language = 'Portuguese (Brazilian)'\t----- bird -----\tcard_games",
    "406": "SELECT t.id FROM cards AS t WHERE t.types = 'Creature' AND t.status = 'legal'\t----- bird -----\tcard_games",
    "407": "SELECT DISTINCT TYPE FROM cards WHERE TYPE IS NOT NULL AND supertypes IS NOT NULL AND subtypes IS NOT NULL\t----- bird -----\tcard_games",
    "408": "SELECT count(id) FROM cards WHERE power IS NULL OR power = '*'\t----- bird -----\tcard_games",
    "409": "SELECT count(uuid) FROM cards WHERE side IS NULL AND (SELECT count(uuid) FROM cards WHERE side IS NULL) = 1 AND ( SELECT count(uuid) FROM cards WHERE side IS NULL AND rulings.text = 'This is a triggered mana ability' ) = 1\t----- bird -----\tcard_games",
    "410": "SELECT id FROM cards WHERE artist = 'Erica Yang' AND availability = 'paper'\t----- bird -----\tcard_games",
    "411": "SELECT artist FROM cards WHERE text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games",
    "412": "SELECT foreign_data.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'French' AND cards.borderColor = 'black' AND cards.artist = 'Matthew D. Wilson' AND cards.layout = 'normal' AND cards.types = 'Creature'\t----- bird -----\tcard_games",
    "413": "SELECT count(uuid) FROM rulings WHERE date = '2009-01-10' AND rarity = 'rare'\t----- bird -----\tcard_games",
    "414": "SELECT t.language FROM sets INNER JOIN set_translations t ON sets.code = t.setCode WHERE sets.baseSetSize = 180 AND sets.block = 'Ravnica'\t----- bird -----\tcard_games",
    "415": "SELECT cast(sum(CASE WHEN hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM legalities WHERE format = 'commander' AND status = 'legal'\t----- bird -----\tcard_games",
    "416": "SELECT cast(sum(CASE WHEN power IS NULL OR power = '*' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM cards\t----- bird -----\tcard_games",
    "417": "SELECT cast(sum(CASE WHEN LANGUAGE = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / count(LANGUAGE) FROM set_translations\t----- bird -----\tcard_games",
    "418": "SELECT DISTINCT availability FROM cards WHERE artist = 'Daren Bader'\t----- bird -----\tcard_games",
    "419": "SELECT count(t.id) FROM ( SELECT cards.id FROM cards INNER JOIN ( SELECT uuid, max(edhrecRank) AS edhrecRank FROM cards GROUP BY uuid ) AS t2 ON cards.uuid = t2.uuid WHERE t2.edhrecRank > 12000 AND cards.borderColor = 'borderless' ) AS t\t----- bird -----\tcard_games",
    "420": "SELECT count(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games",
    "421": "SELECT name FROM cards WHERE power IS NULL OR power = '*' AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3\t----- bird -----\tcard_games",
    "422": "SELECT language FROM foreign_data WHERE multiverseid = 149934\t----- bird -----\tcard_games",
    "423": "SELECT cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games",
    "424": "SELECT cast(sum(CASE WHEN layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM cards WHERE isTextless = 1\t----- bird -----\tcard_games",
    "425": "SELECT DISTINCT cardKingdomId FROM cards WHERE side IS NULL AND (subtypes LIKE '%Angel%' OR subtypes LIKE '%Wizard%')\t----- bird -----\tcard_games",
    "426": "SELECT name FROM sets WHERE mtgoCode IS NULL OR mtgoCode = '' LIMIT 3\t----- bird -----\tcard_games",
    "427": "SELECT DISTINCT language FROM set_translations WHERE setCode = 'ARC' AND mcmName = 'Archenemy'\t----- bird -----\tcard_games",
    "428": "SELECT t.translation FROM sets t WHERE t.id = 5\t----- bird -----\tcard_games",
    "429": "SELECT t.language, t.expansionType FROM set_translations AS t WHERE t.setCode = 206\t----- bird -----\tcard_games",
    "430": "SELECT sets.name, sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'it' AND sets.block = 'Shadowmoor' ORDER BY sets.name LIMIT 2\t----- bird -----\tcard_games",
    "431": "SELECT DISTINCT sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND set_translations.language = 'Japanese'\t----- bird -----\tcard_games",
    "432": "SELECT name FROM sets WHERE language = 'Russian' ORDER BY baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "433": "SELECT cast(sum(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / count(isOnlineOnly) FROM sets WHERE LANGUAGE = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "434": "SELECT count(code) FROM sets WHERE language = 'Japanese' AND (mtgoCode IS NULL OR mtgoCode = '')\t----- bird -----\tcard_games",
    "435": "SELECT count(id) FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games",
    "436": "SELECT count(id) FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games",
    "437": "SELECT name FROM cards WHERE borderColor = 'white' AND isFullArt = 1\t----- bird -----\tcard_games",
    "438": "SELECT language FROM set_translations WHERE setCode = '174'\t----- bird -----\tcard_games",
    "439": "SELECT name FROM sets WHERE code = 'ALL'\t----- bird -----\tcard_games",
    "440": "SELECT LANGUAGE FROM foreign_data WHERE name = 'A Pedra Fellwar'\t----- bird -----\tcard_games",
    "441": "SELECT DISTINCT setCode FROM sets WHERE releaseDate = '2007-07-13'\t----- bird -----\tcard_games",
    "442": "SELECT sets.baseSetSize, sets.code FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'en' AND set_translations.translation = 'Masques' AND sets.block = 'Masques' UNION SELECT sets.baseSetSize, sets.code FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'en' AND set_translations.translation = 'Mirage' AND sets.block = 'Mirage'\t----- bird -----\tcard_games",
    "443": "SELECT code FROM sets WHERE TYPE = 'expansion'\t----- bird -----\tcard_games",
    "444": "SELECT foreign_data.name, foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.watermark = 'BOROS'\t----- bird -----\tcard_games",
    "445": "SELECT foreign_data.language, foreign_data.flavorText, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie'\t----- bird -----\tcard_games",
    "446": "SELECT cast(sum(CASE WHEN convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / count(convertedManaCost) FROM cards WHERE name = 'Abyssal Horror'\t----- bird -----\tcard_games",
    "447": "SELECT code FROM sets WHERE TYPE = 'expansion'\t----- bird -----\tcard_games",
    "448": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan'\t----- bird -----\tcard_games",
    "449": "SELECT DISTINCT foreign_data.language, foreign_data.type FROM foreign_data INNER JOIN cards ON foreign_data.uuid = cards.uuid WHERE cards.watermark = 'Azorius'\t----- bird -----\tcard_games",
    "450": "SELECT count(id) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games",
    "451": "SELECT count(id) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games",
    "452": "SELECT name FROM cards WHERE isTextless = 0\t----- bird -----\tcard_games",
    "453": "SELECT manaCost FROM cards WHERE name = 'Ancestor`s Chosen'\t----- bird -----\tcard_games",
    "454": "SELECT count(id) FROM cards WHERE power = '*' OR power IS NULL AND borderColor = 'W'\t----- bird -----\tcard_games",
    "455": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL\t----- bird -----\tcard_games",
    "456": "SELECT DISTINCT types, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games",
    "457": "SELECT DISTINCT purchaseUrls FROM cards WHERE promoTypes = 'bundle'\t----- bird -----\tcard_games",
    "458": "SELECT count(DISTINCT artist) FROM cards WHERE borderColor = 'black' AND availability LIKE '%arena,mtgo%'\t----- bird -----\tcard_games",
    "459": "SELECT name FROM cards WHERE name = 'Serra Angel' OR name = 'Shrine Keeper' ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "460": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games",
    "461": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games",
    "462": "SELECT sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'Italian' AND set_translations.translation = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "463": "SELECT count(id) FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Angel of Mercy' )\t----- bird -----\tcard_games",
    "464": "SELECT name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "465": "SELECT t.translation FROM sets INNER JOIN set_translations t ON sets.code = t.setcode WHERE t.language = 'Korean' AND sets.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "466": "SELECT count(t.id) FROM sets INNER JOIN set_translations t ON t.setcode = sets.code WHERE t.translation = 'Hauptset Zehnte Edition' AND artist = 'Adam Rex'\t----- bird -----\tcard_games",
    "467": "SELECT count(t.id) FROM sets t WHERE t.name = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games",
    "468": "SELECT t.translation FROM sets AS t WHERE t.name = 'Eighth Edition' AND t.language = 'zh-cn'\t----- bird -----\tcard_games",
    "469": "SELECT CASE WHEN count(t.mtgoCode) > 0 THEN 'YES' ELSE 'NO' END AS RESULT FROM ( SELECT DISTINCT CASE WHEN name = 'Angel of Mercy' THEN 'YES' ELSE 'NO' END AS RESULT FROM sets ) t\t----- bird -----\tcard_games",
    "470": "SELECT releaseDate FROM sets WHERE name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games",
    "471": "SELECT t.type FROM sets AS t WHERE t.name = 'Hauptset Zehnte Edition' AND t.type IS NOT NULL\t----- bird -----\tcard_games",
    "472": "SELECT count(id) FROM sets WHERE block = 'Ice Age' AND language = 'Italian'\t----- bird -----\tcard_games",
    "473": "SELECT count(t.name) FROM sets AS t WHERE t.name = 'Adarkar Valkyrie' AND t.isForeignOnly = 1\t----- bird -----\tcard_games",
    "474": "SELECT count(t.setCode) FROM sets t WHERE t.isForeignOnly = 1 AND t.language = 'Italian' AND t.baseSetSize < 10\t----- bird -----\tcard_games",
    "475": "SELECT count(id) FROM cards WHERE name = 'Coldsnap' AND borderColor = 'black'\t----- bird -----\tcard_games",
    "476": "SELECT name FROM cards WHERE name LIKE 'Coldsnap%' ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "477": "SELECT name FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND name = 'Coldsnap'\t----- bird -----\tcard_games",
    "478": "SELECT number FROM cards WHERE name = 'Coldsnap' AND number = 4\t----- bird -----\tcard_games",
    "479": "SELECT count(id) FROM cards WHERE name = 'Coldsnap' AND convertedManaCost > 5 AND (power = '*' OR (power IS NULL AND t1.power IS NULL))\t----- bird -----\tcard_games",
    "480": "SELECT flavorText FROM foreign_data WHERE name = 'Ancestor''s Chosen' AND language = 'Italian'\t----- bird -----\tcard_games",
    "481": "SELECT DISTINCT foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Ancestor''s Chosen' AND foreign_data.flavorText IS NOT NULL\t----- bird -----\tcard_games",
    "482": "SELECT DISTINCT TYPE FROM cards WHERE name = 'Ancestor''s Chosen' AND LANGUAGE = 'German'\t----- bird -----\tcard_games",
    "483": "SELECT DISTINCT rulings.text FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode INNER JOIN rulings ON sets.code = rulings.uuid WHERE sets.name = 'Coldsnap' AND set_translations.language = 'Italian'\t----- bird -----\tcard_games",
    "484": "SELECT name FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setcode WHERE name = 'Coldsnap' AND set_translations.language = 'Italian' ORDER BY cast(convertedManaCost AS REAL) DESC LIMIT 1\t----- bird -----\tcard_games",
    "485": "SELECT date FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Reminisce' )\t----- bird -----\tcard_games",
    "486": "SELECT cast(sum(CASE WHEN convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / count(convertedManaCost) FROM cards WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "487": "SELECT cast(sum(CASE WHEN cardKingdomId = cardKingdomFoilId THEN 1 ELSE 0 END) AS REAL) * 100 / count(name) FROM cards WHERE name = 'Coldsnap'\t----- bird -----\tcard_games",
    "488": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'\t----- bird -----\tcard_games",
    "489": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'\t----- bird -----\tcard_games",
    "490": "SELECT mcmId FROM sets WHERE code = 'SS2'\t----- bird -----\tcard_games",
    "491": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09'\t----- bird -----\tcard_games",
    "492": "SELECT t.type FROM sets AS t WHERE t.name LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games",
    "493": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized'\t----- bird -----\tcard_games",
    "494": "SELECT DISTINCT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec' AND cards.hasContentWarning = 1\t----- bird -----\tcard_games",
    "495": "SELECT sets.releaseDate FROM sets INNER JOIN cards ON sets.code = cards.setCode WHERE cards.name = 'Evacuation'\t----- bird -----\tcard_games",
    "496": "SELECT baseSetSize FROM set_translations WHERE translation = 'Rinascita di Alara'\t----- bird -----\tcard_games",
    "497": "SELECT DISTINCT t.translation, t.type FROM sets INNER JOIN set_translations t ON sets.code = t.setCode WHERE t.translation = 'Huiti\u00e8me \u00e9dition'\t----- bird -----\tcard_games",
    "498": "SELECT name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'French' AND name = 'Tendo Ice Bridge'\t----- bird -----\tcard_games",
    "499": "SELECT count(id) FROM set_translations WHERE name = 'Salvat 2011' AND translation IS NOT NULL\t----- bird -----\tcard_games",
    "500": "SELECT t.name FROM sets AS t INNER JOIN set_translations AS tt ON t.code = tt.setcode INNER JOIN cards AS c ON t.code = c.setcode WHERE tt.language = 'Japanese' AND c.name = 'Fellwar Stone'\t----- bird -----\tcard_games",
    "501": "SELECT name FROM cards WHERE name = 'Journey into Nyx Hero''s Path' ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "502": "SELECT releaseDate FROM set_translations WHERE translation = 'Ola de fr\u00edo'\t----- bird -----\tcard_games",
    "503": "SELECT DISTINCT sets.type FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode INNER JOIN cards ON set_translations.id = cards.setcode WHERE cards.name = 'Samite Pilgrim'\t----- bird -----\tcard_games",
    "504": "SELECT count(cards.id) FROM cards INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'World Championship Decks 2004' AND cards.convertedManaCost = 3\t----- bird -----\tcard_games",
    "505": "SELECT translation FROM set_translations WHERE name = 'Mirrodin' AND language = 'Chinese Simplified'\t----- bird -----\tcard_games",
    "506": "SELECT cast(sum(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / count(code) FROM sets WHERE LANGUAGE = 'Japanese'\t----- bird -----\tcard_games",
    "507": "SELECT cast(sum(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games",
    "508": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1\t----- bird -----\tcard_games",
    "509": "SELECT id FROM sets WHERE baseSetSize = ( SELECT max(baseSetSize) FROM sets )\t----- bird -----\tcard_games",
    "510": "SELECT artist FROM cards WHERE side IS NULL ORDER BY faceConvertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games",
    "511": "SELECT frameEffects FROM cards WHERE cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL GROUP BY frameEffects ORDER BY count(frameEffects) DESC LIMIT 1\t----- bird -----\tcard_games",
    "512": "SELECT count(id) FROM cards WHERE duelDeck = 'a' AND power IS NULL AND hasFoil = 0\t----- bird -----\tcard_games",
    "513": "SELECT sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'en' AND sets.type = 'commander' ORDER BY sets.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games",
    "514": "SELECT name FROM cards WHERE manaCost = ( SELECT max(manaCost) FROM cards ) AND format = 'duel' ORDER BY name LIMIT 10\t----- bird -----\tcard_games",
    "515": "SELECT min(originalReleaseDate), status FROM cards WHERE rarity = 'mythic' AND status = 'legal'\t----- bird -----\tcard_games",
    "516": "SELECT count(foreign_data.uuid) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'French' AND cards.artist = 'Volkan Baga'\t----- bird -----\tcard_games",
    "517": "SELECT count(t.uuid) FROM cards AS t INNER JOIN legalities AS s ON t.uuid = s.uuid WHERE t.types = 'Enchantment' AND t.name = 'Abundance' AND s.status = 'Legal' AND t.rarity = 'rare'\t----- bird -----\tcard_games",
    "518": "SELECT t.format, t.name FROM ( SELECT format, name, count(status) AS num FROM legalities WHERE status = 'banned' GROUP BY format, name ) t ORDER BY t.num DESC LIMIT 1\t----- bird -----\tcard_games",
    "519": "SELECT t.language FROM sets AS t WHERE t.name = 'Battlebond'\t----- bird -----\tcard_games",
    "520": "SELECT artist, format FROM cards GROUP BY artist, format ORDER BY count(artist) LIMIT 1\t----- bird -----\tcard_games",
    "521": "SELECT DISTINCT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameVersion = '1997' AND cards.artist = 'D. Alexander Gregory' AND cards.hasContentWarning = 1 AND legalities.format = 'legacy'\t----- bird -----\tcard_games",
    "522": "SELECT name, status FROM cards WHERE edhrecRank = 1\t----- bird -----\tcard_games",
    "523": "SELECT cast(count(id) AS REAL) / 12 FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY tcgplayerGroupId ORDER BY count(tcgplayerGroupId) DESC LIMIT 1\t----- bird -----\tcard_games",
    "524": "SELECT artist FROM cards WHERE availability = 'arena' AND borderColor = 'black'\t----- bird -----\tcard_games",
    "525": "SELECT t.uuid FROM cards AS t INNER JOIN legalities AS l ON t.uuid = l.uuid WHERE l.status IN ('banned', 'restricted')\t----- bird -----\tcard_games",
    "526": "SELECT count(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games",
    "527": "SELECT text FROM rulings WHERE uuid IN ( SELECT uuid FROM cards WHERE artist = 'Kev Walker' ORDER BY date DESC )\t----- bird -----\tcard_games",
    "528": "SELECT DISTINCT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN sets ON sets.code = cards.setCode WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'legal'\t----- bird -----\tcard_games",
    "529": "SELECT name FROM sets WHERE name NOT LIKE '%Japanese%' AND LANGUAGE = 'Korean'\t----- bird -----\tcard_games",
    "530": "SELECT DISTINCT frameVersion, artist FROM cards WHERE artist = 'Allen Williams' AND status = 'banned'\t----- bird -----\tcard_games",
    "531": "SELECT DisplayName FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "532": "SELECT DisplayName FROM users WHERE strftime('%Y', CreationDate) = '2014'\t----- bird -----\tcodebase_community",
    "533": "SELECT count(Id) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community",
    "534": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "535": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE votes.Upvotes > 100 AND votes.Downvotes > 1\t----- bird -----\tcodebase_community",
    "536": "SELECT count(Id) FROM users WHERE Views > 10 AND strftime('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community",
    "537": "SELECT count(Id) FROM posts WHERE OwnerDisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "538": "SELECT Title FROM posts WHERE OwnerDisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "539": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "540": "SELECT Title FROM posts WHERE OwnerDisplayName = 'csgillespie' ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "541": "SELECT OwnerDisplayName FROM posts ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "542": "SELECT sum(CommentCount) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "543": "SELECT AnswerCount FROM posts WHERE OwnerDisplayName = 'csgillespie' ORDER BY AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "544": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community",
    "545": "SELECT count(Id) FROM posts WHERE OwnerDisplayName = 'csgillespie' AND ParentId IS NULL\t----- bird -----\tcodebase_community",
    "546": "SELECT OwnerDisplayName FROM posts WHERE ClosedDate IS NOT NULL\t----- bird -----\tcodebase_community",
    "547": "SELECT count(Id) FROM posts WHERE OwnerUserId IN ( SELECT Id FROM users WHERE Age > 65 ) AND Score >= 20\t----- bird -----\tcodebase_community",
    "548": "SELECT users.Location FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community",
    "549": "SELECT posts.Body FROM tags INNER JOIN posts ON tags.ExcerptPostId = posts.Id WHERE tags.TagName = 'bayesian'\t----- bird -----\tcodebase_community",
    "550": "SELECT posts.Body FROM tags INNER JOIN posts ON tags.ExcerptPostId = posts.Id ORDER BY tags.Count DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "551": "SELECT count(Id) FROM badges WHERE DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "552": "SELECT Name FROM badges WHERE DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "553": "SELECT count(DISTINCT badges.Name) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.DisplayName = 'csgillespie' AND strftime('%Y', badges.Date) = '2011'\t----- bird -----\tcodebase_community",
    "554": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId GROUP BY users.DisplayName ORDER BY count(badges.UserId) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "555": "SELECT avg(Score) FROM posts WHERE OwnerDisplayName = 'csgillespie'\t----- bird -----\tcodebase_community",
    "556": "SELECT cast(count(Id) AS REAL) / count(DISTINCT DisplayName) FROM badges WHERE UserId IN ( SELECT Id FROM users WHERE Views > 200 )\t----- bird -----\tcodebase_community",
    "557": "SELECT cast(sum(CASE WHEN Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / count(Id) FROM posts WHERE Score > 20\t----- bird -----\tcodebase_community",
    "558": "SELECT count(Id) FROM votes WHERE CreationDate = '2010-07-19' AND UserId = 58\t----- bird -----\tcodebase_community",
    "559": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY count(Id) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "560": "SELECT count(Id) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community",
    "561": "SELECT posts.Title FROM comments INNER JOIN posts ON comments.PostId = posts.Id ORDER BY comments.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "562": "SELECT count(comments.Id) FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.ViewCount = 1910\t----- bird -----\tcodebase_community",
    "563": "SELECT FavoriteCount FROM posts WHERE OwnerUserId = 3025 AND CreationDate = '2014/4/23 20:29:39.0'\t----- bird -----\tcodebase_community",
    "564": "SELECT Body FROM posts WHERE ParentId = 107829 AND CommentCount = 1\t----- bird -----\tcodebase_community",
    "565": "SELECT CASE WHEN ClosedDate IS NULL THEN 'NOT well-finished' ELSE 'well-finished' END AS RESULT FROM posts WHERE OwnerUserId = 23853 AND CreationDate = '2013-07-12 09:08:18.0'\t----- bird -----\tcodebase_community",
    "566": "SELECT Reputation FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE Id = 65041 )\t----- bird -----\tcodebase_community",
    "567": "SELECT count(Id) FROM posts WHERE OwnerDisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community",
    "568": "SELECT UserDisplayName FROM users WHERE Id = ( SELECT UserId FROM votes WHERE Id = 6347 )\t----- bird -----\tcodebase_community",
    "569": "SELECT sum(votes.VoteTypeId) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data visualization%'\t----- bird -----\tcodebase_community",
    "570": "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'DatEpicCoderGuyWhoPrograms' )\t----- bird -----\tcodebase_community",
    "571": "SELECT cast(count(posts.Id) AS REAL) / count(votes.Id) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN votes ON users.Id = votes.UserId WHERE users.Id = 24\t----- bird -----\tcodebase_community",
    "572": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'\t----- bird -----\tcodebase_community",
    "573": "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community",
    "574": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community",
    "575": "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'SilentGhost' )\t----- bird -----\tcodebase_community",
    "576": "SELECT UserDisplayName FROM comments WHERE Text = 'thank you user93!'\t----- bird -----\tcodebase_community",
    "577": "SELECT Text FROM comments WHERE UserDisplayName = 'A Lion'\t----- bird -----\tcodebase_community",
    "578": "SELECT users.DisplayName, users.Reputation FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Title = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community",
    "579": "SELECT comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community",
    "580": "SELECT DISTINCT DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community",
    "581": "SELECT OwnerDisplayName FROM posts WHERE Title = 'Open source tools for visualizing multi-dimensional data?'\t----- bird -----\tcodebase_community",
    "582": "SELECT Title FROM posts WHERE LastEditorUserId = ( SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa' )\t----- bird -----\tcodebase_community",
    "583": "SELECT sum(Score), WebsiteUrl FROM users INNER JOIN posts ON users.Id = posts.LastEditorUserId WHERE DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community",
    "584": "SELECT comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'\t----- bird -----\tcodebase_community",
    "585": "SELECT sum(votes.BountyAmount) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE posts.Title LIKE '%data%'\t----- bird -----\tcodebase_community",
    "586": "SELECT DISTINCT users.DisplayName FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN posts ON posts.Id = votes.PostId WHERE votes.BountyAmount = 50\t----- bird -----\tcodebase_community",
    "587": "SELECT avg(ViewCount), Title, Text FROM posts WHERE Tags LIKE '%humor%'\t----- bird -----\tcodebase_community",
    "588": 0,
    "589": "SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "590": "SELECT OwnerUserId FROM posts ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "591": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE strftime('%Y', badges.Date) = '2011' AND badges.Name = 'Supporter'\t----- bird -----\tcodebase_community",
    "592": "SELECT count(DISTINCT UserId) FROM badges WHERE Name > 5\t----- bird -----\tcodebase_community",
    "593": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Teachers' AND users.Location = 'New York'\t----- bird -----\tcodebase_community",
    "594": "SELECT users.DisplayName, users.Reputation FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE posts.Id = 1\t----- bird -----\tcodebase_community",
    "595": "SELECT DISTINCT users.DisplayName FROM users INNER JOIN postHistory ON users.Id = postHistory.UserId WHERE postHistory.Views >= 1000 GROUP BY users.DisplayName HAVING count(DISTINCT postHistory.PostId) = 1\t----- bird -----\tcodebase_community",
    "596": "SELECT users.DisplayName, badges.Name FROM users INNER JOIN badges ON users.Id = badges.UserId INNER JOIN ( SELECT UserId, count(Id) AS num FROM comments GROUP BY UserId ) AS t2 ON users.Id = t2.UserId ORDER BY t2.num DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "597": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Teacher' AND users.Location = 'India'\t----- bird -----\tcodebase_community",
    "598": "SELECT cast(sum(CASE WHEN strftime('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) * 100 / count(Name) - cast(sum(CASE WHEN strftime('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / count(Name) FROM badges WHERE Name = 'Student'\t----- bird -----\tcodebase_community",
    "599": "SELECT DISTINCT PostHistoryTypeId, count(DISTINCT UserId) FROM postHistory WHERE PostId = 3720\t----- bird -----\tcodebase_community",
    "600": "SELECT RelatedPostId, ViewCount FROM posts WHERE Id = 61217\t----- bird -----\tcodebase_community",
    "601": "SELECT Score, LinkTypeId FROM postLinks WHERE PostId = 395\t----- bird -----\tcodebase_community",
    "602": 0,
    "603": "SELECT sum(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "604": "SELECT cast(sum(UpVotes) AS REAL) / count(DISTINCT Id) AS AVG_UPVOTE, cast(sum(Age) AS REAL) / count(DISTINCT Id) AS AVG_AGE FROM posts WHERE PostTypeId = 1\t----- bird -----\tcodebase_community",
    "605": "SELECT count(DISTINCT UserId) FROM badges WHERE Name = 'Announcer'\t----- bird -----\tcodebase_community",
    "606": "SELECT Name FROM badges WHERE Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "607": "SELECT count(Id) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community",
    "608": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'\t----- bird -----\tcodebase_community",
    "609": 0,
    "610": "SELECT DISTINCT Name FROM badges WHERE UserId IN ( SELECT Id FROM users ORDER BY Reputation DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "611": "SELECT users.Reputation FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "612": "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'Pierre' )\t----- bird -----\tcodebase_community",
    "613": "SELECT badges.Date FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'Rochester, NY'\t----- bird -----\tcodebase_community",
    "614": "SELECT cast(count(CASE WHEN badges.Name = 'Teacher' THEN 1 ELSE NULL END) AS REAL) * 100 / count(users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId\t----- bird -----\tcodebase_community",
    "615": "SELECT cast(sum(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) AS REAL) * 100 / count(Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "616": "SELECT Score FROM comments WHERE CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community",
    "617": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33'\t----- bird -----\tcodebase_community",
    "618": "SELECT users.Age FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'Vienna, Austria'\t----- bird -----\tcodebase_community",
    "619": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Supporter' AND users.Age >= 19 AND users.Age <= 65\t----- bird -----\tcodebase_community",
    "620": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community",
    "621": "SELECT Name FROM badges WHERE UserId IN ( SELECT Id FROM users ORDER BY Reputation ASC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "622": "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'Sharpie' )\t----- bird -----\tcodebase_community",
    "623": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Supporter' AND users.Age > 65\t----- bird -----\tcodebase_community",
    "624": "SELECT DisplayName FROM users WHERE Id = 30\t----- bird -----\tcodebase_community",
    "625": "SELECT count(Id) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community",
    "626": "SELECT count(Id) FROM votes WHERE strftime('%Y', CreationDate) = '2010'\t----- bird -----\tcodebase_community",
    "627": "SELECT count(Id) FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "628": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "629": "SELECT cast(sum(CASE WHEN strftime('%Y', CreationDate) = '2010' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) FROM votes\t----- bird -----\tcodebase_community",
    "630": "SELECT DISTINCT tags.TagName FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN tags ON tags.Id = votes.PostId WHERE users.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community",
    "631": "SELECT count(Id) FROM posts WHERE OwnerDisplayName = 'Daniel Vassallo'\t----- bird -----\tcodebase_community",
    "632": "SELECT count(Id) FROM votes WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'Harlan' )\t----- bird -----\tcodebase_community",
    "633": "SELECT Id FROM posts WHERE OwnerDisplayName = 'slashnick' ORDER BY AnswerCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "634": "SELECT CASE WHEN DisplayName = 'Harvey Motulsky' THEN PostTypeId ELSE PostTypeId + 1 END FROM posts WHERE OwnerDisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY PostTypeId ORDER BY sum(ViewCount) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "635": "SELECT count(DISTINCT PostId) FROM votes WHERE PostId > 4 AND DisplayName = 'Matt Parker'\t----- bird -----\tcodebase_community",
    "636": "SELECT count(comments.Id) FROM users INNER JOIN comments ON users.Id = comments.UserId WHERE users.DisplayName = 'Neil McGuigan' AND comments.Score < 60\t----- bird -----\tcodebase_community",
    "637": "SELECT DISTINCT tags.TagName FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN tags ON posts.Id = tags.WikiPostId WHERE users.DisplayName = 'Mark Meckes' AND tags.TagName IS NOT NULL AND posts.CommentCount = 0\t----- bird -----\tcodebase_community",
    "638": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Organizer'\t----- bird -----\tcodebase_community",
    "639": "SELECT cast(sum(CASE WHEN TagName = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / count(PostId) FROM posts\t----- bird -----\tcodebase_community",
    "640": "SELECT sum(CASE WHEN DisplayName = 'Mornington' THEN ViewCount ELSE 0 END) - sum(CASE WHEN DisplayName = 'Amos' THEN ViewCount ELSE 0 END) AS RESULT FROM posts\t----- bird -----\tcodebase_community",
    "641": "SELECT count(DISTINCT UserId) FROM badges WHERE Name = 'commentator' AND strftime('%Y', Date) = '2014'\t----- bird -----\tcodebase_community",
    "642": "SELECT count(Id) FROM posts WHERE strftime('%Y-%m-%d', CreationDate) = '2010-07-21'\t----- bird -----\tcodebase_community",
    "643": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT max(Views) FROM users )\t----- bird -----\tcodebase_community",
    "644": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community",
    "645": "SELECT count(Id) FROM comments WHERE Score < 60 AND UserId = 13\t----- bird -----\tcodebase_community",
    "646": "SELECT DISTINCT posts.Title, users.DisplayName FROM comments INNER JOIN users ON comments.UserId = users.Id INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.Score > 60\t----- bird -----\tcodebase_community",
    "647": "SELECT DISTINCT Name FROM badges WHERE Date LIKE '2011%' AND LOCATION = 'North Pole'\t----- bird -----\tcodebase_community",
    "648": "SELECT DISTINCT OwnerDisplayName, WebsiteUrl FROM posts WHERE FavoriteCount > 150\t----- bird -----\tcodebase_community",
    "649": "SELECT count(DISTINCT PostHistory.PostId), max(PostHistory.CreationDate) FROM posts INNER JOIN postHistory ON posts.Id = postHistory.PostId WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?'\t----- bird -----\tcodebase_community",
    "650": "SELECT users.LastAccessDate, users.Location FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Outliers'\t----- bird -----\tcodebase_community",
    "651": "SELECT posts.Title FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId WHERE postLinks.LinkTypeId = 2 AND posts.Title LIKE 'How to tell if something happened in a data set which monitors a value over time'\t----- bird -----\tcodebase_community",
    "652": "SELECT DISTINCT PostId, Name FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE UserDisplayName = 'Samuel' AND strftime('%Y', CreationDate) = '2013'\t----- bird -----\tcodebase_community",
    "653": "SELECT OwnerDisplayName FROM posts ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "654": "SELECT users.DisplayName, users.Location FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'hypothesis-testing'\t----- bird -----\tcodebase_community",
    "655": "SELECT posts.Title, postLinks.LinkTypeId FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId WHERE posts.Title = 'What are principal component scores?'\t----- bird -----\tcodebase_community",
    "656": "SELECT OwnerDisplayName FROM posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "657": "SELECT users.DisplayName, users.WebsiteUrl FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE votes.VoteTypeId = 8 ORDER BY votes.BountyAmount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "658": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community",
    "659": "SELECT count(Id) FROM tags WHERE Count BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community",
    "660": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "661": "SELECT Age FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "662": "SELECT count(DISTINCT PostId) FROM votes WHERE strftime('%Y', CreationDate) = '2011' AND BountyAmount = 50\t----- bird -----\tcodebase_community",
    "663": "SELECT Id FROM users ORDER BY Age ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "664": "SELECT posts.Score FROM tags INNER JOIN posts ON tags.Id = posts.Id ORDER BY tags.Count DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "665": "SELECT cast(count(DISTINCT PostId) AS REAL) / 12 FROM posts WHERE YEAR(CreationDate) = 2010 AND AnswerCount <= 2\t----- bird -----\tcodebase_community",
    "666": 0,
    "667": "SELECT posts.Title FROM posts INNER JOIN postLinks ON posts.Id = postLinks.PostId ORDER BY postLinks.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "668": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId GROUP BY users.DisplayName ORDER BY count(badges.Name) DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "669": "SELECT min(CreationDate) FROM votes WHERE PostId IN ( SELECT Id FROM posts WHERE Title LIKE '%chl%' )\t----- bird -----\tcodebase_community",
    "670": "SELECT min(CreationDate) FROM users\t----- bird -----\tcodebase_community",
    "671": "SELECT users.DisplayName FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Autobiographer' ORDER BY badges.Date ASC LIMIT 1\t----- bird -----\tcodebase_community",
    "672": "SELECT count(DISTINCT OwnerUserId) FROM posts WHERE FavoriteCount >= 4 AND LOCATION = 'United Kingdom'\t----- bird -----\tcodebase_community",
    "673": "SELECT avg(PostId) FROM votes GROUP BY UserId ORDER BY Age LIMIT 1\t----- bird -----\tcodebase_community",
    "674": "SELECT DisplayName FROM users ORDER BY Reputation DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "675": "SELECT count(Id) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community",
    "676": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community",
    "677": "SELECT count(Id) FROM posts WHERE strftime('%Y', CreationDate) = '2010' AND OwnerDisplayName = 'Jay Stevens'\t----- bird -----\tcodebase_community",
    "678": "SELECT Title, Id FROM posts WHERE OwnerDisplayName = 'Harvey Motulsky' ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "679": "SELECT Id, Title FROM posts WHERE Score = ( SELECT max(Score) FROM posts )\t----- bird -----\tcodebase_community",
    "680": "SELECT avg(Score) FROM posts WHERE OwnerDisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community",
    "681": "SELECT DISTINCT DisplayName FROM posts WHERE ViewCount > 20000 AND strftime('%Y', CreationDate) = '2011'\t----- bird -----\tcodebase_community",
    "682": "SELECT Id, OwnerDisplayName FROM posts WHERE strftime('%Y', CreationDate) = '2010' ORDER BY FavoriteCount DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "683": "SELECT cast(sum(CASE WHEN strftime('%Y', CreationDate) = '2011' THEN 1 ELSE 0 END) AS REAL) * 100 / count(Id) FROM users WHERE Reputation > 1000\t----- bird -----\tcodebase_community",
    "684": "SELECT cast(sum(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) AS REAL) * 100 / count(Id) FROM users\t----- bird -----\tcodebase_community",
    "685": "SELECT users.DisplayName, users.Views FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Title = 'Computer Game Datasets'\t----- bird -----\tcodebase_community",
    "686": "SELECT count(Id) FROM posts WHERE ViewCount > ( SELECT avg(ViewCount) FROM posts )\t----- bird -----\tcodebase_community",
    "687": "SELECT count(Id) FROM comments WHERE PostId = ( SELECT Id FROM posts ORDER BY Score DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "688": "SELECT count(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community",
    "689": "SELECT OwnerDisplayName, Location FROM users WHERE Id = ( SELECT LastEditorUserId FROM posts WHERE Id = 183 ORDER BY LastEditDate DESC LIMIT 1 )\t----- bird -----\tcodebase_community",
    "690": "SELECT Name FROM badges WHERE Name = 'Gold' AND UserId = ( SELECT Id FROM users WHERE DisplayName = 'Emmett' ) ORDER BY Date DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "691": "SELECT count(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000\t----- bird -----\tcodebase_community",
    "692": "SELECT strftime('%J', Date) - strftime('%J', CreationDate) FROM users WHERE DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community",
    "693": "SELECT count(Id) FROM users ORDER BY CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "694": "SELECT comments.Text, users.DisplayName FROM users INNER JOIN comments ON users.Id = comments.UserId INNER JOIN posts ON posts.Id = comments.PostId WHERE posts.Title = 'Analysing wind data with R' ORDER BY comments.CreationDate DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "695": "SELECT count(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community",
    "696": "SELECT count(Id) FROM tags WHERE TagName = 'careers'\t----- bird -----\tcodebase_community",
    "697": "SELECT Reputation, Views FROM users WHERE DisplayName = 'Jarrod Dixon'\t----- bird -----\tcodebase_community",
    "698": "SELECT count(comments.Id) FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.Title = 'Clustering 1D data'\t----- bird -----\tcodebase_community",
    "699": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community",
    "700": "SELECT count(PostId) FROM votes WHERE BountyAmount > 30\t----- bird -----\tcodebase_community",
    "701": "SELECT cast(sum(CASE WHEN Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / count(Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id\t----- bird -----\tcodebase_community",
    "702": "SELECT count(Id) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community",
    "703": "SELECT count(TagName) FROM tags WHERE Id < 15 AND Count <= 20\t----- bird -----\tcodebase_community",
    "704": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample'\t----- bird -----\tcodebase_community",
    "705": "SELECT users.Reputation, users.UpVotes FROM users INNER JOIN postHistory ON users.Id = postHistory.UserId WHERE postHistory.Text = 'fine, you win :)'\t----- bird -----\tcodebase_community",
    "706": "SELECT Text FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Title = 'How can I adapt ANOVA for binary data?' )\t----- bird -----\tcodebase_community",
    "707": "SELECT comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE posts.ViewCount BETWEEN 100 AND 150 ORDER BY comments.Score DESC LIMIT 1\t----- bird -----\tcodebase_community",
    "708": "SELECT CreationDate, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', CreationDate) AS age FROM users WHERE WebsiteUrl LIKE '%http://%'\t----- bird -----\tcodebase_community",
    "709": "SELECT count(PostId) FROM posts WHERE ViewCount < 5 AND Score = 0\t----- bird -----\tcodebase_community",
    "710": "SELECT count(Id) FROM comments WHERE Score = 0 AND CommentCount = 1\t----- bird -----\tcodebase_community",
    "711": 0,
    "712": "SELECT PostId, count(Id) FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE Title = 'Group differences on a five point Likert item' ) GROUP BY PostId\t----- bird -----\tcodebase_community",
    "713": "SELECT votes.BountyAmount FROM votes INNER JOIN comments ON votes.PostId = comments.PostId WHERE comments.Text = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community",
    "714": "SELECT Text FROM comments WHERE UserDisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community",
    "715": "SELECT UserDisplayName FROM comments WHERE Score BETWEEN 1 AND 5 AND DownVotes = 0\t----- bird -----\tcodebase_community",
    "716": "SELECT cast(sum(CASE WHEN UpVotes = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / count(Score) FROM comments WHERE Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community",
    "717": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "718": "SELECT count(hero_power.hero_id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "719": "SELECT count(superhero.id) FROM superhero_attribute INNER JOIN superpower ON superhero_attribute.power_id = superpower.id INNER JOIN superhero ON superhero_attribute.hero_id = superhero.id WHERE superhero_attribute.attribute_id = 1 AND superhero.height_cm > 200 AND superpower.power_name = 'Super Strength'\t----- bird -----\tsuperhero",
    "720": "SELECT superhero.full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.full_name HAVING count(superhero.full_name) > 15\t----- bird -----\tsuperhero",
    "721": "SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue'\t----- bird -----\tsuperhero",
    "722": "SELECT skin_colour_id FROM superhero WHERE superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero",
    "723": "SELECT count(superhero.id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superpower.power_name = 'Agility' AND colour.colour = 'Blue'\t----- bird -----\tsuperhero",
    "724": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE superpower.power_name = 'Agility' AND colour.colour = 'Blue' AND colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "725": "SELECT count(id) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' )\t----- bird -----\tsuperhero",
    "726": "SELECT superhero.full_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ORDER BY superhero.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "727": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron'\t----- bird -----\tsuperhero",
    "728": "SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' AND superhero.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "729": "SELECT avg(height_cm) FROM superhero WHERE publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "730": "SELECT cast(sum(CASE WHEN power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "731": "SELECT count(id) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' )\t----- bird -----\tsuperhero",
    "732": "SELECT publisher.publisher_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'Speed' GROUP BY publisher.publisher_name ORDER BY sum(hero_attribute.attribute_value) ASC LIMIT 1\t----- bird -----\tsuperhero",
    "733": "SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Gold' AND superhero.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero",
    "734": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero",
    "735": "SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'\t----- bird -----\tsuperhero",
    "736": "SELECT superhero.full_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_name = 'Intelligence' ORDER BY hero_attribute.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "737": "SELECT race FROM superhero WHERE superhero_name = 'Copycat'\t----- bird -----\tsuperhero",
    "738": "SELECT count(hero_attribute.hero_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Durability' AND hero_attribute.attribute_value < 50\t----- bird -----\tsuperhero",
    "739": "SELECT superhero.superhero_name FROM superhero_power INNER JOIN superpower ON superhero_power.power_id = superpower.id INNER JOIN superhero ON superhero_power.hero_id = superhero.id WHERE superpower.power_name = 'Death Touch'\t----- bird -----\tsuperhero",
    "740": "SELECT count(superhero.id) FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = 100 AND superhero.gender_id = 2\t----- bird -----\tsuperhero",
    "741": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.superhero_name ORDER BY count(superhero.superhero_name) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "742": "SELECT count(id) FROM superhero WHERE race_id = ( SELECT id FROM race WHERE race = 'Vampire' )\t----- bird -----\tsuperhero",
    "743": "SELECT cast(sum(CASE WHEN alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM superhero\t----- bird -----\tsuperhero",
    "744": "SELECT sum(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - sum(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "745": "SELECT publisher_id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero",
    "746": "SELECT avg(attribute_value) FROM hero_attribute\t----- bird -----\tsuperhero",
    "747": "SELECT count(id) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero",
    "748": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.id = 75\t----- bird -----\tsuperhero",
    "749": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Deathlok'\t----- bird -----\tsuperhero",
    "750": "SELECT avg(weight_kg) FROM superhero WHERE gender_id = 2\t----- bird -----\tsuperhero",
    "751": "SELECT power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.gender_id = 1 LIMIT 5\t----- bird -----\tsuperhero",
    "752": "SELECT superhero_name FROM superhero WHERE race_id = ( SELECT id FROM race WHERE race = 'Alien' )\t----- bird -----\tsuperhero",
    "753": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.height_cm BETWEEN 170 AND 190 AND superhero.eye_colour_id = 1\t----- bird -----\tsuperhero",
    "754": "SELECT power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id WHERE hero_power.hero_id = 56\t----- bird -----\tsuperhero",
    "755": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero",
    "756": "SELECT count(id) FROM superhero WHERE alignment_id = 1\t----- bird -----\tsuperhero",
    "757": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 169\t----- bird -----\tsuperhero",
    "758": "SELECT colour.colour FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE race.race = 'human' AND superhero.height_cm = 185\t----- bird -----\tsuperhero",
    "759": "SELECT DISTINCT colour.colour FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN colour ON colour.id = hero_attribute.attribute_value WHERE superhero.weight_kg = ( SELECT max(weight_kg) FROM superhero )\t----- bird -----\tsuperhero",
    "760": "SELECT cast(sum(CASE WHEN publisher.id = 13 THEN 1 ELSE 0 END) AS REAL) * 100 / count(publisher.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero",
    "761": "SELECT full_name FROM superhero WHERE gender_id = 1 AND weight_kg > ( SELECT avg(weight_kg) FROM superhero ) * 0.79\t----- bird -----\tsuperhero",
    "762": "SELECT power_name FROM superpower GROUP BY power_name ORDER BY count(power_name) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "763": "SELECT attribute_value FROM hero_attribute WHERE hero_id IN ( SELECT id FROM superhero WHERE superhero_name = 'Abomination' )\t----- bird -----\tsuperhero",
    "764": "SELECT power_name FROM hero_power WHERE hero_id = 1\t----- bird -----\tsuperhero",
    "765": "SELECT count(hero_power.hero_id) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero",
    "766": "SELECT superhero.full_name FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE attribute.attribute_name = 'strength' ORDER BY hero_attribute.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "767": "SELECT cast(count(id) AS REAL) / sum(CASE WHEN skin_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero\t----- bird -----\tsuperhero",
    "768": "SELECT count(id) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics' )\t----- bird -----\tsuperhero",
    "769": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE attribute.attribute_name = 'durability' AND publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY sum(hero_attribute.attribute_value) DESC LIMIT 1\t----- bird -----\tsuperhero",
    "770": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero",
    "771": "SELECT superhero.superhero_name FROM superhero_power INNER JOIN superpower ON superhero_power.power_id = superpower.id INNER JOIN superhero ON superhero_power.hero_id = superhero.id WHERE superpower.power_name = 'Flight'\t----- bird -----\tsuperhero",
    "772": "SELECT DISTINCT superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id = 2\t----- bird -----\tsuperhero",
    "773": "SELECT superhero.superhero_name, publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.hair_colour_id = superhero.skin_colour_id AND superhero.hair_colour_id = superhero.eye_colour_id\t----- bird -----\tsuperhero",
    "774": "SELECT race FROM superhero WHERE superhero_name = 'A-Bomb'\t----- bird -----\tsuperhero",
    "775": "SELECT cast(sum(CASE WHEN skin_colour_id = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / count(skin_colour_id) FROM superhero WHERE gender_id = 2\t----- bird -----\tsuperhero",
    "776": "SELECT superhero.superhero_name, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "777": "SELECT gender.gender FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE superhero.superhero_name = 'Agent 13'\t----- bird -----\tsuperhero",
    "778": "SELECT superhero.full_name FROM superhero_power INNER JOIN superpower ON superhero_power.power_id = superpower.id INNER JOIN superhero ON superhero_power.hero_id = superhero.id WHERE superpower.power_name = 'Adaptation'\t----- bird -----\tsuperhero",
    "779": "SELECT count(power_name) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Amazo'\t----- bird -----\tsuperhero",
    "780": "SELECT power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id WHERE superhero.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero",
    "781": "SELECT height_cm FROM superhero WHERE eye_colour_id = ( SELECT id FROM colour WHERE colour = 'Amber' )\t----- bird -----\tsuperhero",
    "782": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Black'\t----- bird -----\tsuperhero",
    "783": "SELECT DISTINCT colour.colour FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE colour.colour = 'Gold'\t----- bird -----\tsuperhero",
    "784": "SELECT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'\t----- bird -----\tsuperhero",
    "785": "SELECT superhero_name FROM superhero WHERE alignment_id = 2\t----- bird -----\tsuperhero",
    "786": "SELECT count(superhero.id) FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' ORDER BY hero_attribute.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "787": "SELECT race.race, alignment.alignment FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero",
    "788": "SELECT cast(sum(iif(gender = 'Female', 1, 0)) AS REAL) * 100 / count(publisher_name) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "789": "SELECT avg(weight_kg) FROM superhero WHERE race_id = ( SELECT id FROM race WHERE race = 'Alien' )\t----- bird -----\tsuperhero",
    "790": "SELECT sum(CASE WHEN full_name = 'Emil Blonsky' THEN weight_kg ELSE 0 END) - sum(CASE WHEN full_name = 'Charles Chandler' THEN weight_kg ELSE 0 END) FROM superhero\t----- bird -----\tsuperhero",
    "791": "SELECT avg(height_cm) FROM superhero\t----- bird -----\tsuperhero",
    "792": "SELECT power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "793": "SELECT count(superhero.id) FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE race.race = 'god/eternal' AND gender.gender = 'male'\t----- bird -----\tsuperhero",
    "794": "SELECT superhero.superhero_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "795": "SELECT count(id) FROM superhero WHERE alignment_id = 3\t----- bird -----\tsuperhero",
    "796": "SELECT attribute.attribute_name, hero_attribute.attribute_value FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = '3-D Man'\t----- bird -----\tsuperhero",
    "797": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.id = 7 AND colour.id = 9\t----- bird -----\tsuperhero",
    "798": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')\t----- bird -----\tsuperhero",
    "799": "SELECT count(id) FROM superhero WHERE publisher_id = 1\t----- bird -----\tsuperhero",
    "800": "SELECT cast(sum(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / count(superhero_name) FROM superhero\t----- bird -----\tsuperhero",
    "801": "SELECT cast(sum(iif(gender_id = 1, 1, 0)) AS REAL) / sum(iif(gender_id = 2, 1, 0)) FROM superhero\t----- bird -----\tsuperhero",
    "802": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "803": "SELECT id FROM superpower WHERE power_name = 'cryokinesis'\t----- bird -----\tsuperhero",
    "804": "SELECT superhero_name FROM superhero WHERE id = 294\t----- bird -----\tsuperhero",
    "805": "SELECT full_name FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL\t----- bird -----\tsuperhero",
    "806": "SELECT DISTINCT colour.colour FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN colour ON hero_attribute.attribute_id = colour.id WHERE superhero.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero",
    "807": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.full_name = 'Helen Parr'\t----- bird -----\tsuperhero",
    "808": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.weight_kg = 108 AND superhero.height_cm = 188\t----- bird -----\tsuperhero",
    "809": "SELECT publisher.publisher_name FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.id = 38\t----- bird -----\tsuperhero",
    "810": "SELECT race.race FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN race ON superhero.race_id = race.id ORDER BY hero_attribute.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero",
    "811": "SELECT alignment.alignment, superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.full_name = 'Atom IV'\t----- bird -----\tsuperhero",
    "812": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' LIMIT 5\t----- bird -----\tsuperhero",
    "813": "SELECT avg(attribute_value) FROM hero_attribute WHERE alignment_id = 3\t----- bird -----\tsuperhero",
    "814": "SELECT DISTINCT colour.colour FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "815": "SELECT count(superhero.id) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 1 AND gender.id = 2\t----- bird -----\tsuperhero",
    "816": "SELECT superhero.superhero_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero",
    "817": "SELECT race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id INNER JOIN gender ON superhero.gender_id = gender.id INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blue' AND gender.gender = 'male'\t----- bird -----\tsuperhero",
    "818": "SELECT cast(sum(CASE WHEN gender.id = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / count(alignment.id) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE alignment.id = 2\t----- bird -----\tsuperhero",
    "819": "SELECT sum(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - sum(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) AS diff FROM superhero\t----- bird -----\tsuperhero",
    "820": "SELECT attribute_value FROM hero_attribute WHERE attribute_name = 'Strength' AND superhero_name = 'Hulk'\t----- bird -----\tsuperhero",
    "821": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax'\t----- bird -----\tsuperhero",
    "822": "SELECT count(superhero.id) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN colour ON superhero.skin_colour_id = colour.id WHERE alignment.alignment = 'Good' AND colour.colour = 'Green'\t----- bird -----\tsuperhero",
    "823": "SELECT count(id) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) AND gender_id = ( SELECT id FROM gender WHERE gender = 'Female' )\t----- bird -----\tsuperhero",
    "824": "SELECT superhero.superhero_name FROM superhero_power INNER JOIN superpower ON superhero_power.power_id = superpower.id INNER JOIN superhero ON superhero_power.hero_id = superhero.id WHERE superpower.power_name = 'Wind Control'\t----- bird -----\tsuperhero",
    "825": "SELECT gender.gender FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE superpower.power_name = 'Phoenix Force'\t----- bird -----\tsuperhero",
    "826": "SELECT superhero_name FROM superhero WHERE publisher_name = 'DC Comics' ORDER BY weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero",
    "827": "SELECT avg(height_cm) FROM superhero WHERE race_id != 1 AND publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics' )\t----- bird -----\tsuperhero",
    "828": "SELECT count(superhero.id) FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id WHERE hero_attribute.attribute_name = 'Speed' AND hero_attribute.attribute_value = 100\t----- bird -----\tsuperhero",
    "829": "SELECT sum(CASE WHEN publisher.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - sum(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "830": "SELECT attribute.attribute_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Black Panther' ORDER BY hero_attribute.attribute_value LIMIT 1\t----- bird -----\tsuperhero",
    "831": "SELECT DISTINCT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Abomination'\t----- bird -----\tsuperhero",
    "832": "SELECT full_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero",
    "833": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero",
    "834": "SELECT cast(sum(iif(gender = 'Female', 1, 0)) AS REAL) * 100 / count(gender) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'George Lucas'\t----- bird -----\tsuperhero",
    "835": "SELECT cast(sum(CASE WHEN alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / count(publisher_name) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id\t----- bird -----\tsuperhero",
    "836": "SELECT count(id) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero",
    "837": "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero",
    "838": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'\t----- bird -----\tsuperhero",
    "839": "SELECT superhero.full_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'eyes' AND hero_attribute.attribute_value = 2 AND superhero.weight_kg < 100\t----- bird -----\tsuperhero",
    "840": "SELECT attribute_value FROM hero_attribute WHERE hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Aquababy' )\t----- bird -----\tsuperhero",
    "841": "SELECT weight_kg, race FROM superhero WHERE id = 40\t----- bird -----\tsuperhero",
    "842": "SELECT avg(height_cm) FROM superhero WHERE gender_id = 2\t----- bird -----\tsuperhero",
    "843": "SELECT hero_id FROM superpower WHERE power_name = 'Intelligence'\t----- bird -----\tsuperhero",
    "844": "SELECT DISTINCT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero",
    "845": "SELECT power_name FROM superhero_power INNER JOIN superpower ON superhero_power.power_id = superpower.id WHERE height_cm > ( SELECT avg(height_cm) * 0.8 FROM superhero )\t----- bird -----\tsuperhero",
    "846": "SELECT driverRef FROM qualifying WHERE raceId = 18 AND q1 = ( SELECT max(q1) FROM qualifying WHERE raceId = 18 )\t----- bird -----\tformula_1",
    "847": "SELECT drivers.surname FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.q2 = ( SELECT min(q2) FROM qualifying ) AND qualifying.raceId = 19\t----- bird -----\tformula_1",
    "848": "SELECT DISTINCT YEAR FROM races WHERE LOCATION = 'Shanghai'\t----- bird -----\tformula_1",
    "849": "SELECT url FROM races WHERE name = 'Circuit de Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "850": "SELECT DISTINCT circuits.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'Germany'\t----- bird -----\tformula_1",
    "851": "SELECT DISTINCT POSITION FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructors.name = 'Renault'\t----- bird -----\tformula_1",
    "852": "SELECT count(raceId) FROM races WHERE YEAR = 2010 AND country NOT IN ('Asia', 'Europe')\t----- bird -----\tformula_1",
    "853": "SELECT DISTINCT name FROM circuits WHERE country = 'Spain'\t----- bird -----\tformula_1",
    "854": "SELECT lat, lng FROM circuits WHERE country = 'Australia'\t----- bird -----\tformula_1",
    "855": "SELECT url FROM races WHERE name = 'Sepang International Circuit'\t----- bird -----\tformula_1",
    "856": "SELECT DISTINCT time FROM races WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit' )\t----- bird -----\tformula_1",
    "857": "SELECT lat, lng FROM circuits WHERE name = 'Abu Dhabi Grand Prix'\t----- bird -----\tformula_1",
    "858": "SELECT constructors.nationality FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE results.raceId = 24 GROUP BY constructors.nationality\t----- bird -----\tformula_1",
    "859": "SELECT q1 FROM qualifying WHERE raceId = 354 AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna' )\t----- bird -----\tformula_1",
    "860": "SELECT constructors.nationality FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId INNER JOIN qualifying ON constructorResults.raceId = qualifying.raceId WHERE qualifying.q2 = '0:01:40' AND qualifying.number = 355\t----- bird -----\tformula_1",
    "861": "SELECT driverId FROM qualifying WHERE raceId = 903 AND q3 = '0:01:54'\t----- bird -----\tformula_1",
    "862": "SELECT count(driverId) FROM results WHERE YEAR = 2007 AND statusId = 1\t----- bird -----\tformula_1",
    "863": "SELECT DISTINCT seasons.url FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901\t----- bird -----\tformula_1",
    "864": "SELECT count(results.driverId) FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.date = '2015-11-29'\t----- bird -----\tformula_1",
    "865": "SELECT driverId FROM results WHERE raceId = 592 AND time <> '' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "866": "SELECT drivers.url FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE pitStops.time = '00:01:27' AND pitStops.raceId = 161\t----- bird -----\tformula_1",
    "867": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE raceId = 933 ORDER BY fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "868": "SELECT LOCATION FROM circuits WHERE name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1",
    "869": "SELECT constructors.url FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructorResults.raceId = 9 ORDER BY constructorResults.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "870": "SELECT results.q1 FROM results INNER JOIN races ON results.raceId = races.raceId WHERE races.raceId = 345 AND results.driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'Di-Grassi' )\t----- bird -----\tformula_1",
    "871": "SELECT nationality FROM drivers WHERE driverId = ( SELECT driverId FROM qualifying WHERE raceId = 347 AND q2 = '0:01:15' )\t----- bird -----\tformula_1",
    "872": "SELECT DISTINCT drivers.code FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.q3 = '00:01:33' AND qualifying.raceId = 45\t----- bird -----\tformula_1",
    "873": "SELECT pitStops.time FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.forename = 'Bruce' AND drivers.surname = 'McLaren' AND pitStops.raceId = 743\t----- bird -----\tformula_1",
    "874": "SELECT driverId FROM results WHERE YEAR = 2006 AND POSITION = 2\t----- bird -----\tformula_1",
    "875": "SELECT DISTINCT seasons.url FROM races INNER JOIN seasons ON races.year = seasons.year WHERE races.raceId = 901\t----- bird -----\tformula_1",
    "876": "SELECT count(driverId) FROM results WHERE substr(time, 1, 10) = '2015-11-29'\t----- bird -----\tformula_1",
    "877": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.raceId = 872 ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "878": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.raceId = 348 ORDER BY lapTimes.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "879": "SELECT drivers.nationality FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.raceId = 348 ORDER BY results.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "880": "SELECT cast((results.fastestLapSpeed - results.fastestLapSpeed) AS REAL) * 100 / results.fastestLapSpeed FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.raceId = 853\t----- bird -----\tformula_1",
    "881": "SELECT cast(sum(CASE WHEN RESULTS.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / count(RESULTS.driverId) FROM RESULTS INNER JOIN races ON RESULTS.raceId = races.raceId WHERE races.date = '1983-07-16'\t----- bird -----\tformula_1",
    "882": "SELECT DISTINCT YEAR FROM races WHERE YEAR IS NOT NULL ORDER BY YEAR ASC LIMIT 1\t----- bird -----\tformula_1",
    "883": "SELECT name FROM races WHERE YEAR = 2005 ORDER BY name DESC\t----- bird -----\tformula_1",
    "884": "SELECT name FROM races WHERE substr(date, 1, 7) = ( SELECT substr(date, 1, 7) FROM races ORDER BY substr(date, 1, 7) LIMIT 1 )\t----- bird -----\tformula_1",
    "885": "SELECT name, date FROM races WHERE YEAR = 1999 ORDER BY round DESC LIMIT 1\t----- bird -----\tformula_1",
    "886": "SELECT YEAR FROM races GROUP BY YEAR ORDER BY count(YEAR) DESC LIMIT 1\t----- bird -----\tformula_1",
    "887": "SELECT name FROM races WHERE YEAR = 2017 AND YEAR NOT IN (SELECT YEAR FROM races WHERE YEAR = 2000)\t----- bird -----\tformula_1",
    "888": "SELECT DISTINCT country, name, LOCATION FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE YEAR = ( SELECT min(YEAR) FROM races )\t----- bird -----\tformula_1",
    "889": "SELECT max(YEAR) FROM seasons WHERE name = 'Brands Hatch'\t----- bird -----\tformula_1",
    "890": "SELECT count(DISTINCT YEAR) FROM races WHERE name = 'British Grand Prix'\t----- bird -----\tformula_1",
    "891": "SELECT DISTINCT driverId FROM driverStandings WHERE raceId IN ( SELECT raceId FROM races WHERE YEAR = 2010 ) ORDER BY position\t----- bird -----\tformula_1",
    "892": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId ORDER BY results.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "893": "SELECT drivers.forename, drivers.surname, results.points FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.year = 2017 AND results.points > 0 ORDER BY results.points DESC LIMIT 3\t----- bird -----\tformula_1",
    "894": "SELECT driverId, raceId FROM lapTimes ORDER BY cast(substr(time, 1, instr(time, ':') - 1) AS REAL) ASC LIMIT 1\t----- bird -----\tformula_1",
    "895": "SELECT avg(milliseconds) FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Sebastian' AND surname = 'Vettel' ) AND YEAR = 2009\t----- bird -----\tformula_1",
    "896": "SELECT cast(sum(CASE WHEN drivers.surname = 'Hamilton' THEN 1 ELSE 0 END) AS REAL) * 100 / count(races.raceId) FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN races ON results.raceId = races.raceId WHERE races.year >= 2010 AND results.position > 1\t----- bird -----\tformula_1",
    "897": "SELECT drivers.forename, drivers.surname, drivers.nationality, avg(driverStandings.points) FROM drivers INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId GROUP BY drivers.forename, drivers.surname, drivers.nationality ORDER BY driverStandings.wins DESC LIMIT 1\t----- bird -----\tformula_1",
    "898": "SELECT dob, forename, surname FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "899": "SELECT name FROM circuits WHERE YEAR(date) BETWEEN 1990 AND 2000 GROUP BY name HAVING count(name) = 4\t----- bird -----\tformula_1",
    "900": "SELECT circuits.name, circuits.location, races.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006\t----- bird -----\tformula_1",
    "901": "SELECT circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE substr(races.date, 1, 7) = '2005-09'\t----- bird -----\tformula_1",
    "902": "SELECT name FROM races WHERE POSITION < 10 AND driverId = ( SELECT driverId FROM results WHERE fastestLapSpeed = '100' )\t----- bird -----\tformula_1",
    "903": "SELECT count(results.resultId) FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE constructors.name = 'Michael Schumacher'\t----- bird -----\tformula_1",
    "904": "SELECT races.name, races.year FROM results INNER JOIN races ON results.raceId = races.raceId WHERE results.driverId = ( SELECT driverId FROM results ORDER BY milliseconds LIMIT 1 )\t----- bird -----\tformula_1",
    "905": "SELECT avg(points) FROM results WHERE YEAR = 2000\t----- bird -----\tformula_1",
    "906": "SELECT name, points FROM races WHERE YEAR = ( SELECT min(YEAR) FROM races )\t----- bird -----\tformula_1",
    "907": "SELECT name, country FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE substr(races.date, 1, 4) = '2017' ORDER BY races.date\t----- bird -----\tformula_1",
    "908": "SELECT name, YEAR, LOCATION FROM races WHERE raceId IN ( SELECT raceId FROM lapTimes GROUP BY raceId ORDER BY count(raceId) DESC LIMIT 1 )\t----- bird -----\tformula_1",
    "909": "SELECT cast(sum(CASE WHEN country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / count(name) FROM races\t----- bird -----\tformula_1",
    "910": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "911": "SELECT name FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1\t----- bird -----\tformula_1",
    "912": "SELECT name FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1",
    "913": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1\t----- bird -----\tformula_1",
    "914": "SELECT count(driverId) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1",
    "915": "SELECT nationality FROM drivers ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "916": "SELECT surname FROM drivers WHERE nationality = 'italian'\t----- bird -----\tformula_1",
    "917": "SELECT url FROM drivers WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson' )\t----- bird -----\tformula_1",
    "918": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'\t----- bird -----\tformula_1",
    "919": "SELECT circuits.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.year = 2009 AND circuits.country = 'Spain'\t----- bird -----\tformula_1",
    "920": "SELECT DISTINCT YEAR FROM races WHERE name = 'Silverstone Circuit'\t----- bird -----\tformula_1",
    "921": "SELECT DISTINCT name FROM races WHERE url = 'https://en.wikipedia.org/wiki/Silverstone_Circuit'\t----- bird -----\tformula_1",
    "922": "SELECT DISTINCT TIME FROM races WHERE YEAR = 2010 AND name = 'Formula_1'\t----- bird -----\tformula_1",
    "923": "SELECT count(raceId) FROM races WHERE YEAR = 2010 AND name = 'Formula 1' AND country = 'Italy'\t----- bird -----\tformula_1",
    "924": "SELECT DISTINCT date FROM races WHERE name = 'Barcelona-Catalunya'\t----- bird -----\tformula_1",
    "925": "SELECT url FROM circuits WHERE YEAR = 2009\t----- bird -----\tformula_1",
    "926": "SELECT min(fastestLapTime) FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1",
    "927": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId ORDER BY results.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1",
    "928": "SELECT drivers.driverRef FROM drivers INNER JOIN results ON drivers.driverId = results.driverId WHERE results.year = 2008 AND results.position = 1\t----- bird -----\tformula_1",
    "929": "SELECT name FROM races WHERE name LIKE '%Lewis Hamilton%'\t----- bird -----\tformula_1",
    "930": "SELECT name FROM races WHERE raceId = ( SELECT raceId FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) ORDER BY rank ASC LIMIT 1 )\t----- bird -----\tformula_1",
    "931": "SELECT max(fastestLapSpeed) FROM results WHERE YEAR = 2009\t----- bird -----\tformula_1",
    "932": "SELECT DISTINCT YEAR FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1",
    "933": "SELECT POSITION FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND YEAR = 2008\t----- bird -----\tformula_1",
    "934": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.grid = 4 AND results.year = 2008\t----- bird -----\tformula_1",
    "935": "SELECT count(driverId) FROM results WHERE YEAR = 2008 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "936": "SELECT fastestLap FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND YEAR = 2008\t----- bird -----\tformula_1",
    "937": "SELECT results.time FROM results INNER JOIN driverStandings ON results.driverId = driverStandings.driverId WHERE driverStandings.position = 2 AND results.year = 2008\t----- bird -----\tformula_1",
    "938": "SELECT drivers.forename, drivers.surname, circuits.name FROM races INNER JOIN results ON races.raceId = results.raceId INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2008 AND results.position = 1 AND results.fastestLapTime IS NOT NULL AND results.fastestLapTime LIKE '00:00:00.%'\t----- bird -----\tformula_1",
    "939": "SELECT count(driverId) FROM drivers WHERE nationality = 'American' AND YEAR = 2008\t----- bird -----\tformula_1",
    "940": "SELECT count(raceId) FROM results WHERE YEAR = 2008\t----- bird -----\tformula_1",
    "941": "SELECT sum(results.points) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "942": "SELECT avg(cast(replace(substr(fastestLapTime, instr(fastestLapTime, ':') + 1), ',', '') AS REAL)) FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1",
    "943": "SELECT cast(sum(CASE WHEN time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / count(raceId) FROM lapTimes WHERE YEAR = 2008\t----- bird -----\tformula_1",
    "944": "SELECT cast((cast(replace(substr(results.time, instr(results.time, ':') + 1), ',', '') AS REAL) - cast(replace(substr(pitStops.time, instr(pitStops.time, ':') + 1), ',', '') AS REAL)) AS REAL) * 100 / (cast(replace(substr(pitStops.time, instr(pitStops.time, ':') + 1), ',', '') AS REAL) - cast(replace(substr(lapTimes.time, instr(lapTimes.time, ':') + 1), ',', '') AS REAL)) FROM results INNER JOIN pitStops ON results.raceId = pitStops.raceId AND results.driverId = pitStops.driverId INNER JOIN lapTimes ON pitStops.raceId = lapTimes.raceId AND pitStops.driverId = lapTimes.driverId WHERE results.status = '1' AND results.milliseconds IS NOT NULL AND results.milliseconds <> 0 AND results.milliseconds IS NOT NULL AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.milliseconds <> 0 AND results.\t----- bird -----\tformula_1",
    "945": "SELECT count(circuitId) FROM circuits WHERE country = 'Australia' AND LOCATION = 'Melbourne'\t----- bird -----\tformula_1",
    "946": "SELECT DISTINCT lat, lng FROM circuits WHERE country = 'USA'\t----- bird -----\tformula_1",
    "947": "SELECT count(driverId) FROM drivers WHERE dob > 1980 AND nationality = 'British'\t----- bird -----\tformula_1",
    "948": "SELECT cast(sum(points) AS REAL) / count(constructorId) FROM constructors WHERE nationality = 'British'\t----- bird -----\tformula_1",
    "949": "SELECT constructors.name FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId ORDER BY results.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "950": "SELECT DISTINCT constructors.name FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructorResults.raceId = 291 AND constructorResults.points = 0\t----- bird -----\tformula_1",
    "951": "SELECT count(constructorId) FROM results WHERE constructorId IN ( SELECT constructorId FROM constructors WHERE nationality = 'Japanese' ) AND points = 0\t----- bird -----\tformula_1",
    "952": "SELECT name FROM constructors WHERE constructorId IN ( SELECT constructorId FROM constructorStandings WHERE POSITION = 1 )\t----- bird -----\tformula_1",
    "953": "SELECT count(DISTINCT constructors.name) FROM constructors INNER JOIN results ON constructors.constructorId = results.constructorId WHERE constructors.nationality = 'French' AND results.laps > 50\t----- bird -----\tformula_1",
    "954": "SELECT cast(sum(CASE WHEN YEAR BETWEEN 2007 AND 2009 THEN 1 ELSE 0 END) AS REAL) * 100 / count(driverId) FROM races WHERE YEAR BETWEEN 2007 AND 2009 AND time IS NOT NULL\t----- bird -----\tformula_1",
    "955": "SELECT cast(sum(cast(replace(substr(time, instr(time, ':') + 1), ',', '') AS REAL)) AS REAL) / count(raceId) FROM results WHERE time IS NOT NULL\t----- bird -----\tformula_1",
    "956": "SELECT forename, surname FROM drivers WHERE dob > 1975 AND rank = 2\t----- bird -----\tformula_1",
    "957": "SELECT count(driverId) FROM results WHERE time IS NULL\t----- bird -----\tformula_1",
    "958": "SELECT DISTINCT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverId = results.driverId ORDER BY results.milliseconds DESC LIMIT 1\t----- bird -----\tformula_1",
    "959": "SELECT fastestLap FROM results WHERE YEAR = 2009 ORDER BY fastestLap DESC LIMIT 1\t----- bird -----\tformula_1",
    "960": "SELECT avg(fastestLapSpeed) FROM results WHERE name = 'Spanish Grand Prix' AND YEAR = 2009\t----- bird -----\tformula_1",
    "961": "SELECT name, YEAR FROM races WHERE milliseconds IS NOT NULL ORDER BY milliseconds ASC LIMIT 1\t----- bird -----\tformula_1",
    "962": "SELECT cast(sum(CASE WHEN drivers.dob < 1985 THEN 1 ELSE 0 END) AS REAL) * 100 / count(drivers.driverId) FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE substr(lapTimes.time, 1, 4) BETWEEN '2000' AND '2005' AND lapTimes.lap > 50\t----- bird -----\tformula_1",
    "963": "SELECT count(driverId) FROM lapTimes WHERE milliseconds < 120 AND driverId IN ( SELECT driverId FROM drivers WHERE nationality = 'FRANCE' )\t----- bird -----\tformula_1",
    "964": "SELECT driverRef FROM drivers WHERE nationality = 'America'\t----- bird -----\tformula_1",
    "965": "SELECT raceId FROM races WHERE YEAR = 2009\t----- bird -----\tformula_1",
    "966": "SELECT count(driverId) FROM results WHERE raceId = 18\t----- bird -----\tformula_1",
    "967": "SELECT driverRef FROM drivers WHERE country = 'Netherlands' ORDER BY dob DESC LIMIT 3\t----- bird -----\tformula_1",
    "968": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1",
    "969": "SELECT count(driverId) FROM drivers WHERE dob LIKE '1980%' AND nationality = 'Australia'\t----- bird -----\tformula_1",
    "970": "SELECT DISTINCT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'Germany' AND strftime('%Y', drivers.dob) BETWEEN '1980' AND '1990' ORDER BY lapTimes.time ASC LIMIT 3\t----- bird -----\tformula_1",
    "971": "SELECT driverRef FROM drivers WHERE nationality = 'Germany' ORDER BY dob ASC LIMIT 1\t----- bird -----\tformula_1",
    "972": "SELECT DISTINCT driverId, code FROM results WHERE dob LIKE '1971%' ORDER BY fastestLapTime DESC LIMIT 1\t----- bird -----\tformula_1",
    "973": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.nationality = 'Spanish' AND strftime('%Y', drivers.dob) < 1982 ORDER BY lapTimes.time DESC LIMIT 10\t----- bird -----\tformula_1",
    "974": "SELECT DISTINCT YEAR FROM races WHERE fastestLapTime IS NOT NULL\t----- bird -----\tformula_1",
    "975": "SELECT DISTINCT YEAR FROM lapTimes WHERE time = ( SELECT max(time) FROM lapTimes )\t----- bird -----\tformula_1",
    "976": "SELECT driverId FROM pitStops ORDER BY substr(time, 1, instr(time, ':') - 1) * 60 + substr(time, instr(time, ':') + 1) * 1000, milliseconds LIMIT 5\t----- bird -----\tformula_1",
    "977": "SELECT count(raceId) FROM results WHERE statusId = 2 AND time IS NOT NULL AND raceId BETWEEN 50 AND 100\t----- bird -----\tformula_1",
    "978": "SELECT name, lng, lat FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1",
    "979": "SELECT raceId FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY count(raceId) DESC LIMIT 1\t----- bird -----\tformula_1",
    "980": "SELECT drivers.driverRef, drivers.nationality, drivers.dob FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId WHERE qualifying.q2 IS NOT NULL AND qualifying.raceId = 23\t----- bird -----\tformula_1",
    "981": "SELECT DISTINCT races.year, races.date, races.time FROM drivers INNER JOIN qualifying ON drivers.driverId = qualifying.driverId INNER JOIN races ON qualifying.raceId = races.raceId ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "982": "SELECT count(driverId) FROM results WHERE statusId = 2\t----- bird -----\tformula_1",
    "983": "SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId WHERE constructors.nationality = 'Italy' ORDER BY constructorStandings.points DESC LIMIT 1\t----- bird -----\tformula_1",
    "984": "SELECT constructors.url FROM constructors INNER JOIN constructorStandings ON constructors.constructorId = constructorStandings.constructorId ORDER BY constructorStandings.wins DESC LIMIT 1\t----- bird -----\tformula_1",
    "985": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'FRANCE' ORDER BY cast(replace(substr(pitStops.time, instr(pitStops.time, ':') + 1), ',', '') AS REAL) DESC LIMIT 1\t----- bird -----\tformula_1",
    "986": "SELECT raceId, milliseconds FROM results WHERE fastestLap = '1'\t----- bird -----\tformula_1",
    "987": "SELECT avg(milliseconds) FROM results WHERE YEAR = 2006 AND POSITION < 11\t----- bird -----\tformula_1",
    "988": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN pitStops ON drivers.driverId = pitStops.driverId WHERE drivers.nationality = 'Germany' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.forename, drivers.surname ORDER BY sum(cast(replace(substr(pitStops.duration, 4), ',', '') AS REAL)) / count(pitStops.duration) LIMIT 5\t----- bird -----\tformula_1",
    "989": "SELECT results.time FROM results INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE constructors.name = 'Canadian Grand Prix' AND results.year = 2008 ORDER BY results.milliseconds DESC LIMIT 1\t----- bird -----\tformula_1",
    "990": "SELECT constructors.constructorRef, constructors.url FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId INNER JOIN results ON constructorResults.raceId = results.raceId WHERE results.time = ( SELECT max(time) FROM results ) AND constructors.name = 'Singapore Grand Prix' AND constructors.year = 2009\t----- bird -----\tformula_1",
    "991": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1",
    "992": "SELECT forename, surname, url, dob FROM drivers WHERE nationality = 'Germany' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC\t----- bird -----\tformula_1",
    "993": "SELECT LOCATION, country, lng, lat FROM circuits WHERE name = 'Hungaroring'\t----- bird -----\tformula_1",
    "994": "SELECT constructors.name, constructors.nationality, constructorResults.points FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructorResults.raceId IN ( SELECT raceId FROM races WHERE YEAR BETWEEN 1980 AND 2010 ) GROUP BY constructors.name, constructors.nationality, constructorResults.points ORDER BY count(constructorResults.points) DESC LIMIT 1\t----- bird -----\tformula_1",
    "995": "SELECT avg(results.points) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1",
    "996": "SELECT cast(count(raceId) AS REAL) / 10 FROM races WHERE substr(date, 1, 4) BETWEEN '2000' AND '2010'\t----- bird -----\tformula_1",
    "997": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY count(nationality) DESC LIMIT 1\t----- bird -----\tformula_1",
    "998": "SELECT sum(CASE WHEN POSITION = 91 THEN 1 ELSE 0 END) FROM driverStandings\t----- bird -----\tformula_1",
    "999": "SELECT name FROM races WHERE fastestLapSpeed = ( SELECT min(fastestLapTime) FROM races )\t----- bird -----\tformula_1",
    "1000": "SELECT circuits.location, circuits.country FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId ORDER BY races.date DESC LIMIT 1\t----- bird -----\tformula_1",
    "1001": "SELECT drivers.forename, drivers.surname FROM qualifying INNER JOIN drivers ON qualifying.driverId = drivers.driverId WHERE drivers.dob IS NOT NULL AND drivers.nationality IS NOT NULL AND drivers.number IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND drivers.forename IS NOT NULL AND drivers.driverId IS NOT NULL AND drivers.driverRef IS NOT NULL AND drivers.surname IS NOT NULL AND\t----- bird -----\tformula_1",
    "1002": "SELECT drivers.forename, drivers.surname, constructors.name, constructors.nationality FROM drivers INNER JOIN results ON drivers.driverId = results.driverId INNER JOIN constructors ON constructors.constructorId = results.constructorId ORDER BY drivers.dob DESC LIMIT 1\t----- bird -----\tformula_1",
    "1003": "SELECT count(statusId) FROM results WHERE statusId = 3\t----- bird -----\tformula_1",
    "1004": "SELECT driverId, forename, surname FROM drivers WHERE dob = ( SELECT min(dob) FROM drivers )\t----- bird -----\tformula_1",
    "1005": "SELECT max(milliseconds) FROM pitStops\t----- bird -----\tformula_1",
    "1006": "SELECT time FROM lapTimes ORDER BY milliseconds DESC LIMIT 1\t----- bird -----\tformula_1",
    "1007": "SELECT max(milliseconds) FROM pitStops WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1",
    "1008": "SELECT DISTINCT lap FROM pitStops WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND raceId = ( SELECT raceId FROM races WHERE YEAR = 2011 )\t----- bird -----\tformula_1",
    "1009": "SELECT DISTINCT time FROM pitStops WHERE raceId IN ( SELECT raceId FROM races WHERE YEAR = 2011 )\t----- bird -----\tformula_1",
    "1010": "SELECT milliseconds FROM lapTimes WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1",
    "1011": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId ORDER BY lapTimes.time ASC LIMIT 1\t----- bird -----\tformula_1",
    "1012": "SELECT position FROM lapTimes WHERE driverId = ( SELECT driverId FROM lapTimes ORDER BY cast(replace(substr(time, instr(time, ':') + 1), ',', '') AS REAL) ASC LIMIT 1 )\t----- bird -----\tformula_1",
    "1013": "SELECT DISTINCT milliseconds FROM lapTimes WHERE raceId IN ( SELECT raceId FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix' ) )\t----- bird -----\tformula_1",
    "1014": "SELECT DISTINCT lapTimes.time FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE circuits.country = 'Italy'\t----- bird -----\tformula_1",
    "1015": "SELECT name FROM races WHERE name = 'Austrian Grand Prix'\t----- bird -----\tformula_1",
    "1016": "SELECT DISTINCT duration FROM pitStops WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Austrian Grand Prix' )\t----- bird -----\tformula_1",
    "1017": "SELECT DISTINCT circuits.lat, circuits.lng FROM circuits INNER JOIN lapTimes ON circuits.circuitId = lapTimes.raceId WHERE lapTimes.time = '1:29.488'\t----- bird -----\tformula_1",
    "1018": "SELECT avg(milliseconds) FROM pitStops WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1",
    "1019": "SELECT avg(milliseconds) FROM lapTimes WHERE raceId IN ( SELECT raceId FROM races WHERE YEAR = 2013 )\t----- bird -----\tformula_1",
    "1020": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1021": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1022": "SELECT preferred_foot FROM Player_Attributes ORDER BY potential ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1023": "SELECT count(player_api_id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1024": "SELECT player_api_id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1025": "SELECT League.name FROM `Match` INNER JOIN League ON Match.league_id = League.id WHERE season = '2015/2016' GROUP BY League.name ORDER BY sum(CASE WHEN home_team_goal > away_team_goal THEN 1 ELSE 0 END) - sum(CASE WHEN home_team_goal < away_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1026": "SELECT home_team_api_id FROM `Match` WHERE season = '2016/2017' GROUP BY home_team_api_id ORDER BY sum(CASE WHEN home_team_goal - away_team_goal < 0 THEN 1 ELSE 0 END) LIMIT 1\t----- bird -----\teuropean_football_2",
    "1027": "SELECT player_name FROM Player ORDER BY penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1028": "SELECT away_team_api_id FROM `Match` WHERE season = '2010/2011' GROUP BY away_team_api_id ORDER BY sum(CASE WHEN away_team_goal - home_team_goal > 0 THEN 1 ELSE 0 END) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1029": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4\t----- bird -----\teuropean_football_2",
    "1030": "SELECT League.name FROM `Match` INNER JOIN League ON League.id = Match.league_id WHERE season = '2016/2017' GROUP BY League.name ORDER BY sum(CASE WHEN home_team_goal = away_team_goal THEN 1 ELSE 0 END) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1031": "SELECT player_name FROM Player_Attributes WHERE sprint_speed >= 97 AND strftime('%Y', `date`) BETWEEN '2013' AND '2015'\t----- bird -----\teuropean_football_2",
    "1032": "SELECT name, count(name) FROM `Match` GROUP BY name ORDER BY count(name) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1033": "SELECT avg(height) FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59'\t----- bird -----\teuropean_football_2",
    "1034": "SELECT player_api_id FROM Player_Attributes WHERE substr(date, 1, 4) = '2010' ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1035": "SELECT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59 GROUP BY team_fifa_api_id HAVING count(team_fifa_api_id) > 50\t----- bird -----\teuropean_football_2",
    "1036": "SELECT team_long_name FROM Team_Attributes WHERE strftime('%Y', `date`) = '2012' AND buildUpPlayPassing IS NOT NULL GROUP BY team_long_name ORDER BY sum(buildUpPlayPassing) / count(team_long_name) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1037": "SELECT cast(sum(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / count(player_fifa_api_id) FROM `Player` WHERE birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2",
    "1038": "SELECT name FROM League ORDER BY sum(home_team_goal + away_team_goal) DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1039": "SELECT avg(long_shots) FROM Player_Attributes WHERE player_fifa_api_id = ( SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag' )\t----- bird -----\teuropean_football_2",
    "1040": "SELECT player_name FROM Player_Attributes WHERE height > 180 ORDER BY avg(heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1041": "SELECT team_long_name FROM `Team_Attributes` WHERE `date` LIKE '2014%' AND buildUpPlayDribblingClass = 'Normal' GROUP BY team_long_name ORDER BY sum(chanceCreationPassing) / count(id) ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1042": "SELECT League.name FROM `Match` INNER JOIN League ON Match.league_id = League.id WHERE season = '2009/2010' GROUP BY League.name HAVING avg(home_team_goal) > avg(away_team_goal)\t----- bird -----\teuropean_football_2",
    "1043": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2",
    "1044": "SELECT player_name FROM Player WHERE birthday LIKE '1970-10%'\t----- bird -----\teuropean_football_2",
    "1045": "SELECT attacking_work_rate FROM Player_Attributes WHERE player_name = 'Franco Zennaro'\t----- bird -----\teuropean_football_2",
    "1046": "SELECT DISTINCT CASE WHEN buildUpPlayPositioningClass = 'Very low' THEN 'Very low' WHEN buildUpPlayPositioningClass = 'Low' THEN 'Low' WHEN buildUpPlayPositioningClass = 'Medium' THEN 'Medium' WHEN buildUpPlayPositioningClass = 'High' THEN 'High' ELSE 'Very high' END FROM Team_Attributes WHERE team_long_name = 'ADO Den Haag'\t----- bird -----\teuropean_football_2",
    "1047": "SELECT DISTINCT Player_Attributes.heading_accuracy FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Francois Affolter' AND Player_Attributes.date = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2",
    "1048": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas' ) AND strftime('%Y', date) = '2011'\t----- bird -----\teuropean_football_2",
    "1049": "SELECT count(MATCH.match_api_id) FROM `MATCH` INNER JOIN League ON MATCH.league_id = League.id WHERE League.name = 'Scotland Premier League' AND MATCH.season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1050": "SELECT preferred_foot FROM Player_Attributes ORDER BY birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1051": "SELECT player_name FROM Player ORDER BY potential DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1052": "SELECT count(player_fifa_api_id) FROM Player_Attributes WHERE preferred_foot = 'Left' AND weight < 130\t----- bird -----\teuropean_football_2",
    "1053": "SELECT DISTINCT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.chanceCreationPassingClass = 'Risky'\t----- bird -----\teuropean_football_2",
    "1054": "SELECT DISTINCT defensive_work_rate FROM Player_Attributes WHERE player_fifa_api_id = ( SELECT player_fifa_api_id FROM Player WHERE player_name = 'David Wilson' )\t----- bird -----\teuropean_football_2",
    "1055": "SELECT birthday FROM Player ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1056": "SELECT name FROM League WHERE country_id = ( SELECT id FROM country WHERE name = 'Netherlands' )\t----- bird -----\teuropean_football_2",
    "1057": "SELECT avg(home_team_goal) FROM `Match` WHERE season = '2010/2011' AND country_id = ( SELECT id FROM Country WHERE name = 'Poland' )\t----- bird -----\teuropean_football_2",
    "1058": "SELECT player_name FROM Player WHERE height = ( SELECT min(height) FROM Player ) OR height = ( SELECT max(height) FROM Player ) GROUP BY player_name ORDER BY avg(finishing) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1059": "SELECT player_name FROM Player WHERE height > 180\t----- bird -----\teuropean_football_2",
    "1060": "SELECT count(player_name) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2",
    "1061": "SELECT count(Player.player_name) FROM Player INNER JOIN Team_Attributes ON Player.player_api_id = Team_Attributes.team_fifa_api_id WHERE Player.player_name LIKE 'Adam%' AND Player.weight > 170 AND Team_Attributes.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1062": "SELECT player_name FROM Player_Attributes WHERE overall_rating > 80 AND strftime('%Y', date) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2",
    "1063": "SELECT potential FROM Player WHERE player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2",
    "1064": "SELECT player_name FROM Player WHERE preferred_foot = 'left'\t----- bird -----\teuropean_football_2",
    "1065": "SELECT team_long_name FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2",
    "1066": "SELECT DISTINCT buildUpPlayPassingClass FROM Team_Attributes WHERE team_short_name = 'CLB'\t----- bird -----\teuropean_football_2",
    "1067": "SELECT DISTINCT Team.team_short_name FROM `Team_Attributes` INNER JOIN `Team` ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team_Attributes.buildUpPlayPassing > 70\t----- bird -----\teuropean_football_2",
    "1068": "SELECT avg(overall_rating) FROM Player_Attributes WHERE height > 170 AND strftime('%Y', `date`) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2",
    "1069": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1070": "SELECT country.name FROM League INNER JOIN `country` ON League.country_id = country.id WHERE League.name = 'Italy Serie A'\t----- bird -----\teuropean_football_2",
    "1071": "SELECT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeed = 31 AND Team_Attributes.buildUpPlayDribbling = 53 AND Team_Attributes.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2",
    "1072": "SELECT avg(overall_rating) FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran' )\t----- bird -----\teuropean_football_2",
    "1073": "SELECT count(MATCH.match_api_id) FROM `MATCH` INNER JOIN League ON MATCH.league_id = League.id WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', MATCH.date) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2",
    "1074": "SELECT DISTINCT Team.team_short_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.home_team_goal = 10\t----- bird -----\teuropean_football_2",
    "1075": "SELECT player_name FROM Player_Attributes WHERE balance = ( SELECT max(balance) FROM Player_Attributes ) AND potential = 61\t----- bird -----\teuropean_football_2",
    "1076": "SELECT avg(Player_Attributes.ball_control) - avg(Player_Attributes.ball_control) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Abdou Diallo' OR Player.player_name = 'Aaron Appindangoye'\t----- bird -----\teuropean_football_2",
    "1077": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'\t----- bird -----\teuropean_football_2",
    "1078": "SELECT player_name FROM Player WHERE birthday = ( SELECT min(birthday) FROM Player ) OR birthday = ( SELECT max(birthday) FROM Player )\t----- bird -----\teuropean_football_2",
    "1079": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1080": "SELECT count(Player.player_name) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.preferred_foot = 'left' AND Player_Attributes.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2",
    "1081": "SELECT country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2",
    "1082": "SELECT League.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany'\t----- bird -----\teuropean_football_2",
    "1083": "SELECT player_name FROM Player ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1084": "SELECT count(Player.player_name) FROM `Player` INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE strftime('%Y', Player.birthday) < '1986' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1085": "SELECT player_name FROM Player WHERE player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ORDER BY crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1086": "SELECT heading_accuracy FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk' )\t----- bird -----\teuropean_football_2",
    "1087": "SELECT count(player_api_id) FROM Player_Attributes WHERE height > 180 AND volleys > 70\t----- bird -----\teuropean_football_2",
    "1088": "SELECT player_name FROM Player WHERE volleys > 70 AND dribbling > 70\t----- bird -----\teuropean_football_2",
    "1089": "SELECT count(id) FROM `Match` WHERE season = '2008/2009' AND country_id = ( SELECT id FROM Country WHERE name = 'Belgium' )\t----- bird -----\teuropean_football_2",
    "1090": "SELECT long_passing FROM Player ORDER BY birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1091": "SELECT count(match_api_id) FROM `Match` WHERE strftime('%Y', `date`) = '2009' AND strftime('%m', `date`) = '04' AND league_id = ( SELECT id FROM League WHERE name = 'Belgium Jupiler League' )\t----- bird -----\teuropean_football_2",
    "1092": "SELECT name FROM `league` WHERE season = '2008/2009' GROUP BY name ORDER BY count(name) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1093": "SELECT avg(overall_rating) FROM Player WHERE strftime('%Y', birthday) < '1986'\t----- bird -----\teuropean_football_2",
    "1094": "SELECT cast((sum(CASE WHEN player_name = 'Ariel Borysiuk' THEN overall_rating ELSE 0 END) - sum(CASE WHEN player_name = 'Paulin Puel' THEN overall_rating ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN player_name = 'Paulin Puel' THEN overall_rating ELSE 0 END) FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1095": "SELECT avg(buildUpPlaySpeed) FROM Team_Attributes WHERE team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2",
    "1096": "SELECT avg(overall_rating) FROM Player_Attributes WHERE player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2",
    "1097": "SELECT sum(Player_Attributes.crossing) FROM `Player` INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2",
    "1098": "SELECT max(chanceCreationPassing), chanceCreationPassingClass FROM Team_Attributes WHERE team_long_name = 'Ajax'\t----- bird -----\teuropean_football_2",
    "1099": "SELECT preferred_foot FROM Player WHERE player_name = 'Abdou Diallo'\t----- bird -----\teuropean_football_2",
    "1100": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Dorlan Pabon' ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1101": "SELECT avg(away_team_goal) FROM `Match` WHERE away_team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Parma' )\t----- bird -----\teuropean_football_2",
    "1102": "SELECT player_name FROM Player WHERE player_api_id IN ( SELECT player_api_id FROM Player_Attributes WHERE overall_rating = 77 AND `date` = '2016/6/23' ORDER BY birthday LIMIT 1 )\t----- bird -----\teuropean_football_2",
    "1103": "SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Aaron Mooy' AND `date` = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2",
    "1104": "SELECT potential FROM Player_Attributes WHERE player_name = 'Francesco Parravicini' AND `date` = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2",
    "1105": "SELECT DISTINCT buildUpPlayPassing FROM Team_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore' ) AND `date` = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2",
    "1106": "SELECT defensive_work_rate FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Kevin Berigaud' AND birthday = '2013-02-22' )\t----- bird -----\teuropean_football_2",
    "1107": "SELECT DISTINCT `date` FROM `Player_Attributes` WHERE player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1108": "SELECT DISTINCT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_long_name = 'Willem II' AND `date` = '2011-02-22'\t----- bird -----\teuropean_football_2",
    "1109": "SELECT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_short_name = 'LEI' AND `date` = '2015-09-10'\t----- bird -----\teuropean_football_2",
    "1110": "SELECT DISTINCT buildUpPlayPassingClass FROM Team_Attributes WHERE team_long_name = 'FC Lorient' AND `date` = '2010-02-22'\t----- bird -----\teuropean_football_2",
    "1111": "SELECT DISTINCT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_fifa_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'PEC Zwolle' ) AND `date` = '2013-09-20'\t----- bird -----\teuropean_football_2",
    "1112": "SELECT DISTINCT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_long_name = 'Hull City' AND `date` = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2",
    "1113": "SELECT DISTINCT defenceAggressionClass FROM Team_Attributes WHERE team_long_name = 'Hannover 96' AND `date` = '2015-09-10'\t----- bird -----\teuropean_football_2",
    "1114": "SELECT avg(overall_rating) FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND `date` BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2",
    "1115": "SELECT cast((sum(CASE WHEN player_name = 'Landon Donovan' THEN overall_rating ELSE 0 END) - sum(CASE WHEN player_name = 'Jordan Bowery' THEN overall_rating ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN player_name = 'Landon Donovan' THEN overall_rating ELSE 0 END) FROM `Player_Attributes`\t----- bird -----\teuropean_football_2",
    "1116": "SELECT player_name FROM Player ORDER BY height DESC LIMIT 5\t----- bird -----\teuropean_football_2",
    "1117": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\t----- bird -----\teuropean_football_2",
    "1118": "SELECT player_name FROM Player WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday) > 35\t----- bird -----\teuropean_football_2",
    "1119": "SELECT sum(home_team_goal) FROM `Match` WHERE home_player_1 = ( SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennon' )\t----- bird -----\teuropean_football_2",
    "1120": "SELECT sum(CASE WHEN player_name = 'Daan Smith' THEN 1 ELSE 0 END) + sum(CASE WHEN player_name = 'Filipe Ferreira' THEN 1 ELSE 0 END) FROM `Match` INNER JOIN Player ON player_api_id = home_player_11 OR player_api_id = away_player_11\t----- bird -----\teuropean_football_2",
    "1121": "SELECT sum(CASE WHEN strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', Player.birthday) < 30 THEN 1 ELSE 0 END) FROM Player INNER JOIN Team_Attributes ON Player.player_fifa_api_id = Team_Attributes.team_api_id\t----- bird -----\teuropean_football_2",
    "1122": "SELECT player_name FROM Player_Attributes WHERE overall_rating = ( SELECT max(overall_rating) FROM Player_Attributes ) LIMIT 10\t----- bird -----\teuropean_football_2",
    "1123": "SELECT player_name FROM Player ORDER BY potential DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1124": "SELECT player_name FROM Player_Attributes WHERE attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2",
    "1125": "SELECT player_name FROM Player_Attributes WHERE finishing = 1 ORDER BY strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1126": "SELECT DISTINCT Player.player_name FROM Player INNER JOIN Country ON Player.player_api_id = Country.id WHERE Country.name = 'Belgium'\t----- bird -----\teuropean_football_2",
    "1127": "SELECT DISTINCT country.name FROM `Player` INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id INNER JOIN Country ON Player.country_id = Country.id WHERE Player_Attributes.vision > 89\t----- bird -----\teuropean_football_2",
    "1128": "SELECT country.name FROM country INNER JOIN League ON country.id = League.country_id INNER JOIN Player_Attributes ON Player_Attributes.player_api_id = League.id GROUP BY country.name ORDER BY avg(Player_Attributes.weight) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1129": "SELECT team_long_name FROM Team_Attributes WHERE buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2",
    "1130": "SELECT DISTINCT team_short_name FROM Team_Attributes WHERE chanceCreationPassingClass = 'Safe'\t----- bird -----\teuropean_football_2",
    "1131": "SELECT avg(Player.height) FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id INNER JOIN `Match` ON Player.player_api_id = Match.home_player_11 WHERE Player.country_id = ( SELECT id FROM Country WHERE name = 'Italy' )\t----- bird -----\teuropean_football_2",
    "1132": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1133": "SELECT count(player_api_id) FROM Player WHERE player_name LIKE 'Aaron%' AND birthday > '1990'\t----- bird -----\teuropean_football_2",
    "1134": "SELECT sum(CASE WHEN id = 6 THEN jumping ELSE 0 END) - sum(CASE WHEN id = 23 THEN jumping ELSE 0 END) AS difference FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1135": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 3\t----- bird -----\teuropean_football_2",
    "1136": "SELECT count(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = ( SELECT max(crossing) FROM Player_Attributes )\t----- bird -----\teuropean_football_2",
    "1137": "SELECT cast(sum(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / count(player_api_id) FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1138": "SELECT country_id FROM League WHERE name = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2",
    "1139": "SELECT home_team_goal, away_team_goal FROM `Match` WHERE date LIKE '2008-09-24%'\t----- bird -----\teuropean_football_2",
    "1140": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2",
    "1141": "SELECT DISTINCT CASE WHEN buildUpPlaySpeedClass = 'Slow' THEN 'Slow' WHEN buildUpPlaySpeedClass = 'Balanced' THEN 'Balanced' ELSE 'Fast' END FROM Team_Attributes WHERE team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2",
    "1142": "SELECT count(id) FROM `Match` WHERE season = '2015/2016'\t----- bird -----\teuropean_football_2",
    "1143": "SELECT max(home_team_goal) FROM `Match` WHERE league_id = ( SELECT id FROM League WHERE name = 'Netherlands Eredivisie' )\t----- bird -----\teuropean_football_2",
    "1144": "SELECT finishing, curve FROM Player WHERE weight = ( SELECT max(weight) FROM Player )\t----- bird -----\teuropean_football_2",
    "1145": "SELECT League.name FROM `Match` INNER JOIN League ON League.id = Match.league_id WHERE season = '2015/2016' GROUP BY League.name ORDER BY count(league_id) DESC LIMIT 1\t----- bird -----\teuropean_football_2",
    "1146": "SELECT team_long_name FROM Team WHERE team_api_id = ( SELECT away_team_api_id FROM `Match` GROUP BY away_team_api_id ORDER BY sum(away_team_goal) DESC LIMIT 1 )\t----- bird -----\teuropean_football_2",
    "1147": "SELECT player_name FROM Player WHERE overall_rating = ( SELECT max(overall_rating) FROM Player )\t----- bird -----\teuropean_football_2",
    "1148": "SELECT cast(sum(CASE WHEN height < 180 AND overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM Player_Attributes\t----- bird -----\teuropean_football_2",
    "1149": "SELECT cast((sum(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) - sum(CASE WHEN Admission = '-' THEN 1 ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) FROM Patient WHERE SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1150": "SELECT cast(sum(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient WHERE strftime('%Y', Birthday) > '1930'\t----- bird -----\tthrombosis_prediction",
    "1151": "SELECT cast(sum(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient WHERE strftime('%Y', Birthday) BETWEEN '1930' AND '1940'\t----- bird -----\tthrombosis_prediction",
    "1152": "SELECT cast(sum(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM Patient WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1153": "SELECT DISTINCT Laboratory.Date FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.ID = '30609'\t----- bird -----\tthrombosis_prediction",
    "1154": "SELECT SEX, Birthday, `Examination Date`, Symptoms FROM Examination WHERE ID = 163109\t----- bird -----\tthrombosis_prediction",
    "1155": "SELECT ID, SEX, Birthday FROM Patient WHERE LDH > 500\t----- bird -----\tthrombosis_prediction",
    "1156": "SELECT ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', Birthday) AS age FROM Patient WHERE RVVT = '+'\t----- bird -----\tthrombosis_prediction",
    "1157": "SELECT DISTINCT ID, SEX, Diagnosis FROM Patient WHERE Thrombosis = 2\t----- bird -----\tthrombosis_prediction",
    "1158": "SELECT ID FROM Laboratory WHERE Date LIKE '1937%' AND `T-CHO` > 250\t----- bird -----\tthrombosis_prediction",
    "1159": "SELECT ID, SEX, Diagnosis FROM Patient WHERE ALB < 3.5\t----- bird -----\tthrombosis_prediction",
    "1160": "SELECT cast(sum(CASE WHEN TP < 6 OR TP > 8.5 THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient WHERE SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1161": "SELECT avg(aCL IgG) FROM Patient WHERE Admission = '+' AND `In-Patient Age` >= 50\t----- bird -----\tthrombosis_prediction",
    "1162": "SELECT count(ID) FROM Patient WHERE strftime('%Y', Description) = '1997' AND SEX = 'F' AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1163": "SELECT max(strftime('%Y', Birthday)) - max(strftime('%Y', `First Date`)) AS RESULT FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1164": "SELECT count(DISTINCT ID) FROM Examination WHERE Thrombosis = '1' AND SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1165": "SELECT max(strftime('%Y', Birthday)) - min(strftime('%Y', Birthday)) FROM Patient WHERE tg >= 200\t----- bird -----\tthrombosis_prediction",
    "1166": "SELECT DISTINCT Symptoms, Diagnosis FROM Examination ORDER BY Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1167": "SELECT cast(count(DISTINCT ID) AS REAL) / 12 FROM Laboratory WHERE Date BETWEEN '1998-01-01' AND '1998-12-31' AND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1168": "SELECT max(Patient.Birthday), strftime('%Y', max(Patient.Birthday)) - strftime('%Y', Patient.Birthday) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date = ( SELECT min(Date) FROM Laboratory )\t----- bird -----\tthrombosis_prediction",
    "1169": "SELECT cast(sum(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) FROM Laboratory WHERE UA <= 8\t----- bird -----\tthrombosis_prediction",
    "1170": "SELECT count(ID) FROM Patient WHERE strftime('%Y', `First Date`) - strftime('%Y', `Examination Date`) < 1\t----- bird -----\tthrombosis_prediction",
    "1171": "SELECT count(ID) FROM Patient WHERE strftime('%Y', Birthday) < 18 AND strftime('%Y', `Examination Date`) BETWEEN '1990' AND '1993'\t----- bird -----\tthrombosis_prediction",
    "1172": "SELECT count(ID) FROM Patient WHERE SEX = 'M' AND `T-BIL` > 2\t----- bird -----\tthrombosis_prediction",
    "1173": "SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY count(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1174": "SELECT avg(strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', Birthday)) FROM Laboratory WHERE Date BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction",
    "1175": "SELECT strftime('%Y', `Examination Date`) - strftime('%Y', Birthday) AS age, Diagnosis FROM Patient WHERE HGB = ( SELECT max(HGB) FROM Patient )\t----- bird -----\tthrombosis_prediction",
    "1176": "SELECT `aCL IgA` FROM Laboratory WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction",
    "1177": "SELECT CASE WHEN sum(CASE WHEN Date = '1995-9-4' THEN HCT ELSE 0 END) < 250 THEN 'YES' ELSE 'NO' END AS RESULT FROM Laboratory WHERE ID = 2927464\t----- bird -----\tthrombosis_prediction",
    "1178": "SELECT SEX FROM Patient WHERE Diagnosis = 'AORTITIS'\t----- bird -----\tthrombosis_prediction",
    "1179": "SELECT `aCL IgM` FROM Examination WHERE `Examination Date` = '1993-11-12' AND Diagnosis = 'SLE' AND `aCL IgM` IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1180": "SELECT SEX FROM Patient WHERE Date = '1992-06-12' AND GPT = 9\t----- bird -----\tthrombosis_prediction",
    "1181": "SELECT 1992 - strftime('%Y', Birthday) FROM Laboratory WHERE Date = '1991-10-21' AND UA = '8.4'\t----- bird -----\tthrombosis_prediction",
    "1182": "SELECT count(ID) FROM Laboratory WHERE Date LIKE '1995%' AND Diagnosis = 'SJS' AND `First Date` = '1991-06-13'\t----- bird -----\tthrombosis_prediction",
    "1183": "SELECT DISTINCT Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1184": "SELECT Symptoms FROM Examination WHERE `Examination Date` = '1993-09-27' AND ID IN ( SELECT ID FROM Patient WHERE Birthday = '1959-03-01' )\t----- bird -----\tthrombosis_prediction",
    "1185": "SELECT sum(CASE WHEN Date LIKE '1981-11%' THEN T-CHO ELSE 0 END) - sum(CASE WHEN Date LIKE '1981-12%' THEN T-CHO ELSE 0 END) FROM Laboratory WHERE Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction",
    "1186": "SELECT DISTINCT ID FROM Patient WHERE Diagnosis = 'Behcet' AND strftime('%Y', Description) BETWEEN '1997' AND '1997'\t----- bird -----\tthrombosis_prediction",
    "1187": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4\t----- bird -----\tthrombosis_prediction",
    "1188": "SELECT count(ID) FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1189": "SELECT cast(sum(CASE WHEN `aCL IgM` > ( SELECT avg(`aCL IgM`) FROM Laboratory ) THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Laboratory WHERE Thrombosis = 2 AND ANA = 'S'\t----- bird -----\tthrombosis_prediction",
    "1190": "SELECT cast(sum(CASE WHEN UA <= 6.5 AND `U-PRO` > 0 AND `U-PRO` < 30 THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1191": "SELECT cast(sum(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient WHERE strftime('%Y', `First Date`) = '1981' AND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1192": "SELECT DISTINCT ID FROM Laboratory WHERE Date LIKE '1991-10%' AND T-BIL < 2 AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1193": "SELECT count(DISTINCT ID) FROM Patient WHERE `ANA Pattern` != 'p' AND SEX = 'F' AND Birthday BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction",
    "1194": "SELECT DISTINCT SEX FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE (Diagnosis = 'PSS' OR Diagnosis = 'pss') AND CRP > 2 AND CRE = 1 AND LDH = 123\t----- bird -----\tthrombosis_prediction",
    "1195": "SELECT avg(ALB) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'F' AND PLT > 400 AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1196": "SELECT Symptoms FROM Patient WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY count(Symptoms) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1197": "SELECT `First Date`, Diagnosis FROM Patient WHERE ID = 48473\t----- bird -----\tthrombosis_prediction",
    "1198": "SELECT count(ID) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS'\t----- bird -----\tthrombosis_prediction",
    "1199": "SELECT count(ID) FROM ( SELECT ID FROM Examination WHERE `Examination Date` LIKE '1997%' AND (cast(TP AS REAL) > 6 OR cast(TP AS REAL) < 8.5) GROUP BY ID )\t----- bird -----\tthrombosis_prediction",
    "1200": "SELECT cast(sum(CASE WHEN Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1201": "SELECT cast(sum(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / count(SEX) FROM Patient WHERE strftime('%Y', Birthday) = '1980' AND Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction",
    "1202": "SELECT count(DISTINCT ID) FROM Patient WHERE SEX = 'M' AND `Examination Date` BETWEEN '1995' AND '1997' AND Admission = '-' AND Diagnosis = 'BEHCET'\t----- bird -----\tthrombosis_prediction",
    "1203": "SELECT count(ID) FROM Patient WHERE SEX = 'F' AND WBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1204": "SELECT strftime('%J', `Examination Date`) - strftime('%J', `First Date`) FROM Patient WHERE ID = 821298\t----- bird -----\tthrombosis_prediction",
    "1205": "SELECT CASE WHEN UA > 8.0 THEN 'YES' ELSE 'NO' END AS RESULT FROM Laboratory WHERE ID = 57266\t----- bird -----\tthrombosis_prediction",
    "1206": "SELECT `Examination Date` FROM Laboratory WHERE ID = 48473 AND GOT >= 60\t----- bird -----\tthrombosis_prediction",
    "1207": "SELECT DISTINCT SEX, Birthday FROM Laboratory WHERE Date LIKE '1994%' AND GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1208": "SELECT ID FROM Patient WHERE SEX = 'M' AND GPT > 60\t----- bird -----\tthrombosis_prediction",
    "1209": "SELECT DISTINCT Diagnosis FROM Patient WHERE GPT > 60 ORDER BY Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1210": "SELECT avg(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction",
    "1211": "SELECT ID, strftime('%Y', `Examination Date`) - strftime('%Y', Birthday) AS age FROM Patient WHERE LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction",
    "1212": "SELECT CASE WHEN sum(CASE WHEN ALP < 300 THEN 1 ELSE 0 END) > 0 THEN 'inpatient' ELSE 'outpatient' END FROM Patient\t----- bird -----\tthrombosis_prediction",
    "1213": "SELECT ID FROM Patient WHERE Birthday = '1982-04-01' AND ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1214": "SELECT ID, SEX, Birthday FROM Patient WHERE cast(TP AS REAL) < 6\t----- bird -----\tthrombosis_prediction",
    "1215": "SELECT (TP - 8.5) FROM Patient WHERE SEX = 'F' AND TP > 8.5\t----- bird -----\tthrombosis_prediction",
    "1216": "SELECT DISTINCT ID FROM Patient WHERE SEX = 'M' AND (ALB <= 3.5 OR ALB >= 5.5)\t----- bird -----\tthrombosis_prediction",
    "1217": "SELECT CASE WHEN ALB BETWEEN 3.5 AND 5.5 THEN 'YES' ELSE 'NO' END AS RESULT FROM Patient WHERE strftime('%Y', Birthday) = '1982'\t----- bird -----\tthrombosis_prediction",
    "1218": "SELECT cast(sum(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Laboratory WHERE UA > 8 OR (UA > 6.5 AND SEX = 'F')\t----- bird -----\tthrombosis_prediction",
    "1219": "SELECT avg(UA) FROM Laboratory WHERE UA < 8.0 AND SEX = 'M' OR UA < 6.5 AND SEX = 'F'\t----- bird -----\tthrombosis_prediction",
    "1220": "SELECT ID, SEX, Birthday FROM Patient WHERE UN BETWEEN 29 AND 31\t----- bird -----\tthrombosis_prediction",
    "1221": "SELECT ID, SEX, Birthday FROM Patient WHERE Diagnosis = 'RA' AND UN < 30\t----- bird -----\tthrombosis_prediction",
    "1222": "SELECT count(ID) FROM Patient WHERE SEX = 'M' AND CRE > 1.5\t----- bird -----\tthrombosis_prediction",
    "1223": "SELECT (sum(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) - sum(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END)) AS RESULT FROM Patient WHERE CRE >= 1.5\t----- bird -----\tthrombosis_prediction",
    "1224": "SELECT ID, SEX, Birthday FROM Patient WHERE ID = ( SELECT ID FROM Patient ORDER BY T-BIL DESC LIMIT 1 )\t----- bird -----\tthrombosis_prediction",
    "1225": "SELECT DISTINCT SEX FROM Laboratory WHERE `T-BIL` > 2\t----- bird -----\tthrombosis_prediction",
    "1226": "SELECT ID, `T-CHO` FROM Patient ORDER BY Birthday ASC, `T-CHO` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1227": "SELECT avg(strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday)) FROM Patient WHERE SEX = 'M' AND `T-CHO` > 250\t----- bird -----\tthrombosis_prediction",
    "1228": "SELECT DISTINCT Patient.ID, Patient.Diagnosis FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.TG > 300\t----- bird -----\tthrombosis_prediction",
    "1229": "SELECT count(ID) FROM Laboratory WHERE cast(strftime('%Y', Date) AS INT) - strftime('%Y', Birthday) > 50 AND TG >= 200\t----- bird -----\tthrombosis_prediction",
    "1230": "SELECT DISTINCT ID FROM Laboratory WHERE CPK < 250 AND Admission = '-'\t----- bird -----\tthrombosis_prediction",
    "1231": "SELECT count(ID) FROM Patient WHERE strftime('%Y', Birthday) BETWEEN '1936' AND '1956' AND SEX = 'M' AND CPK >= 250\t----- bird -----\tthrombosis_prediction",
    "1232": "SELECT ID, SEX, TIMESTAMPDIFF(YEAR, Birthday, CURRENT_TIMESTAMP) AS age FROM Patient WHERE GLU > 180 AND `T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1233": "SELECT ID, GLU FROM Laboratory WHERE strftime('%Y', Description) > '1990' AND GLU < 180\t----- bird -----\tthrombosis_prediction",
    "1234": "SELECT ID, SEX, Birthday FROM Patient WHERE WBC BETWEEN 3.5 AND 9.0 GROUP BY SEX, Birthday ORDER BY Birthday ASC\t----- bird -----\tthrombosis_prediction",
    "1235": "SELECT DISTINCT ID, strftime('%Y', `Current Date`) - strftime('%Y', Birthday) AS age FROM Patient WHERE RBC < 3.5\t----- bird -----\tthrombosis_prediction",
    "1236": "SELECT CASE WHEN Admission = '+' THEN 'YES' ELSE 'NO' END AS RESULT FROM Laboratory WHERE ID IN ( SELECT ID FROM Patient WHERE Sex = 'F' AND `Age` - strftime('%Y', Birthday) > 50 ) AND RBC BETWEEN 3.5 AND 6.0\t----- bird -----\tthrombosis_prediction",
    "1237": "SELECT DISTINCT ID, SEX FROM Patient WHERE Admission = '-' AND HBG < 10\t----- bird -----\tthrombosis_prediction",
    "1238": "SELECT ID, SEX FROM Patient WHERE Diagnosis = 'SLE' AND HGB BETWEEN 10 AND 17 ORDER BY Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1239": "SELECT DISTINCT ID, strftime('%Y', `Examination Date`) - strftime('%Y', Birthday) AS age FROM Laboratory WHERE HCT >= 52\t----- bird -----\tthrombosis_prediction",
    "1240": "SELECT avg(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction",
    "1241": "SELECT sum(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) - sum(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) FROM Laboratory\t----- bird -----\tthrombosis_prediction",
    "1242": "SELECT DISTINCT ID FROM Laboratory WHERE Date LIKE '1984%' AND PLT BETWEEN 100 AND 400 AND YEAR(CURRENT_TIMESTAMP) - strftime('%Y', Birthday) < 50\t----- bird -----\tthrombosis_prediction",
    "1243": "SELECT cast(sum(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', Birthday) > 55\t----- bird -----\tthrombosis_prediction",
    "1244": "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Laboratory.`First Date`) > '1992' AND Laboratory.PT < 14\t----- bird -----\tthrombosis_prediction",
    "1245": "SELECT count(ID) FROM Examination WHERE `Examination Date` > '1997-01-01' AND APTT < 45\t----- bird -----\tthrombosis_prediction",
    "1246": "SELECT count(DISTINCT ID) FROM ( SELECT ID FROM Examination WHERE Thrombosis = 3 AND APTT > 45 )\t----- bird -----\tthrombosis_prediction",
    "1247": "SELECT count(ID) FROM Laboratory WHERE ID IN ( SELECT ID FROM Patient WHERE SEX = 'M' AND WBC BETWEEN 3.5 AND 9.0 ) AND FG BETWEEN 150 AND 450\t----- bird -----\tthrombosis_prediction",
    "1248": "SELECT count(DISTINCT ID) FROM Laboratory WHERE FG BETWEEN 150 AND 450 AND Date LIKE '1980%'\t----- bird -----\tthrombosis_prediction",
    "1249": "SELECT DISTINCT Diagnosis FROM Laboratory WHERE `U-PRO` > 30\t----- bird -----\tthrombosis_prediction",
    "1250": "SELECT ID FROM Patient WHERE `U-PRO` BETWEEN 0 AND 30 AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1251": "SELECT count(ID) FROM ( SELECT ID FROM Patient WHERE IGG < 900 AND Symptoms = 'abortion' )\t----- bird -----\tthrombosis_prediction",
    "1252": "SELECT count(ID) FROM ( SELECT ID FROM Patient WHERE IGG BETWEEN 900 AND 2000 AND Symptoms IS NOT NULL )\t----- bird -----\tthrombosis_prediction",
    "1253": "SELECT DISTINCT Diagnosis FROM Patient WHERE IGA BETWEEN 80 AND 500 ORDER BY IGA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1254": "SELECT count(ID) FROM Patient WHERE strftime('%Y', `First Date`) > '1990' AND IGA BETWEEN 80 AND 500\t----- bird -----\tthrombosis_prediction",
    "1255": "SELECT Diagnosis FROM Patient WHERE IGM NOT BETWEEN 40 AND 400 GROUP BY Diagnosis ORDER BY count(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1256": "SELECT count(ID) FROM Patient WHERE CRP LIKE '%+' OR CRP LIKE '%-' OR CRP < 1.0 AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1257": "SELECT count(DISTINCT ID) FROM Laboratory WHERE CRP NOT IN ('+-', '-') AND cast(substr(CRP, 2) AS REAL) >= 1 AND cast(substr(CRP, 2) AS REAL) < 2\t----- bird -----\tthrombosis_prediction",
    "1258": "SELECT count(DISTINCT ID) FROM Laboratory WHERE RA IN ('-', '+-') AND KCT = '+'\t----- bird -----\tthrombosis_prediction",
    "1259": "SELECT DISTINCT Diagnosis FROM Patient WHERE strftime('%Y', Birthday) > '1995' AND RA IN ('-', '+')\t----- bird -----\tthrombosis_prediction",
    "1260": "SELECT ID FROM Patient WHERE RF < 20 AND TIMESTAMPDIFF(YEAR, Birthday, CURDATE()) > 60\t----- bird -----\tthrombosis_prediction",
    "1261": "SELECT count(DISTINCT ID) FROM Laboratory WHERE RF < 20 AND Thrombosis = '0'\t----- bird -----\tthrombosis_prediction",
    "1262": "SELECT count(DISTINCT ID) FROM Laboratory WHERE C3 > 35 AND ANA = 1 AND ANA Pattern = 'P'\t----- bird -----\tthrombosis_prediction",
    "1263": "SELECT ID FROM Patient WHERE `aCL IgA` > 29 AND `aCL IgA` < 52 ORDER BY `aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1264": "SELECT count(DISTINCT ID) FROM Laboratory WHERE C4 > 10\t----- bird -----\tthrombosis_prediction",
    "1265": "SELECT count(DISTINCT ID) FROM Laboratory WHERE RNP IN ('-', '+-') AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1266": "SELECT Birthday FROM Patient WHERE RNP NOT IN ('-', '+') ORDER BY Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1267": "SELECT count(Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Thrombosis = '1' AND (SM = '0' OR SM = '1')\t----- bird -----\tthrombosis_prediction",
    "1268": "SELECT ID FROM ( SELECT t.ID, t.Birthday, row_number() OVER (PARTITION BY t.ID ORDER BY t.Birthday DESC) AS num FROM ( SELECT ID, Birthday FROM Patient WHERE SM NOT IN ('-', '+') ) AS t ) AS t2 WHERE t2.num <= 3\t----- bird -----\tthrombosis_prediction",
    "1269": "SELECT DISTINCT ID FROM Examination WHERE `Examination Date` > '1997-01-01' AND SC170 IN ('-', '+-')\t----- bird -----\tthrombosis_prediction",
    "1270": "SELECT count(DISTINCT ID) FROM ( SELECT t.ID FROM ( SELECT DISTINCT ID FROM Laboratory WHERE SC170 IN ('-', '+-') AND SEX = 'M' AND symptoms = 'vertigo' ) t )\t----- bird -----\tthrombosis_prediction",
    "1271": "SELECT count(DISTINCT ID) FROM Patient WHERE strftime('%Y', `First Date`) < '1990' AND SSA IN ('-','+')\t----- bird -----\tthrombosis_prediction",
    "1272": "SELECT ID FROM Patient WHERE `First Date` IS NOT NULL AND SSA NOT IN ('-', '+-') ORDER BY `First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1273": "SELECT count(DISTINCT ID) FROM Laboratory WHERE SSB IN ('-', '+-') AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1274": "SELECT count(DISTINCT ID) FROM ( SELECT ID FROM Laboratory WHERE SSB IN ('-', '+-') AND Symptoms IS NOT NULL )\t----- bird -----\tthrombosis_prediction",
    "1275": "SELECT count(ID) FROM Laboratory WHERE CENTROMEA IN ('-', '+') AND SSB IN ('-', '+') AND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1276": "SELECT DISTINCT Diagnosis FROM Patient WHERE `aCL IgG` > 8\t----- bird -----\tthrombosis_prediction",
    "1277": "SELECT count(DISTINCT ID) FROM Laboratory WHERE DNA < 8 AND Description IS NULL\t----- bird -----\tthrombosis_prediction",
    "1278": "SELECT count(DISTINCT ID) FROM Examination WHERE `aCL IgA` < 8 AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1279": "SELECT cast(sum(CASE WHEN GOT >= 60 THEN 1 ELSE 0 END) AS REAL) * 100 / count(ID) FROM Patient WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction",
    "1280": "SELECT count(ID) FROM Patient WHERE SEX = 'M' AND GOT < 60\t----- bird -----\tthrombosis_prediction",
    "1281": "SELECT min(Birthday) FROM Patient WHERE GOT > 60\t----- bird -----\tthrombosis_prediction",
    "1282": "SELECT DISTINCT Birthday FROM Patient WHERE GPT < 60 ORDER BY GPT DESC LIMIT 3\t----- bird -----\tthrombosis_prediction",
    "1283": "SELECT count(ID) FROM Laboratory WHERE GOT < 60 AND SEX = 'M'\t----- bird -----\tthrombosis_prediction",
    "1284": "SELECT `First Date` FROM Laboratory WHERE LDH < 500 ORDER BY `First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1285": "SELECT `First Date` FROM Laboratory WHERE LDH >= 500 ORDER BY `First Date` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1286": "SELECT count(ID) FROM Laboratory WHERE ALP > 300 AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1287": "SELECT count(ID) FROM Patient WHERE Admission = '-' AND ALP < 300\t----- bird -----\tthrombosis_prediction",
    "1288": "SELECT DISTINCT Diagnosis FROM Patient WHERE cast(TP AS REAL) < 6\t----- bird -----\tthrombosis_prediction",
    "1289": "SELECT count(ID) FROM ( SELECT ID FROM Patient WHERE Diagnosis = 'SJS' AND (TP > 6.0 AND TP < 8.5) )\t----- bird -----\tthrombosis_prediction",
    "1290": "SELECT `Examination Date` FROM Examination WHERE ALB BETWEEN 3.5 AND 5.5\t----- bird -----\tthrombosis_prediction",
    "1291": "SELECT count(ID) FROM ( SELECT ID FROM Patient WHERE SEX = 'M' AND (ALB > 3.5 AND ALB < 5.5) AND (TP > 6.0 AND TP < 8.5) )\t----- bird -----\tthrombosis_prediction",
    "1292": "SELECT max(aCL IgG), max(aCL IgM), max(aCL IgA) FROM Laboratory WHERE Sex = 'F' AND UA > 6.50\t----- bird -----\tthrombosis_prediction",
    "1293": "SELECT max(ANA) FROM Patient WHERE CRE < 1.5\t----- bird -----\tthrombosis_prediction",
    "1294": "SELECT ID FROM Patient WHERE CRE < 1.5 ORDER BY `aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction",
    "1295": "SELECT count(DISTINCT ID) FROM ( SELECT ID FROM Examination WHERE `ANA Pattern` LIKE '%P%' AND `T-BIL` > 2.0 )\t----- bird -----\tthrombosis_prediction",
    "1296": "SELECT ANA FROM ( SELECT ANA, max(`T-BIL`) AS maxT FROM Laboratory WHERE `T-BIL` < 2.0 ) WHERE ANA IS NOT NULL\t----- bird -----\tthrombosis_prediction",
    "1297": "SELECT count(ID) FROM ( SELECT t.ID FROM ( SELECT ID, sum(TAT) AS TAT FROM Laboratory WHERE `T-CHO` > 250 GROUP BY ID ) AS t WHERE t.TAT < 0 )\t----- bird -----\tthrombosis_prediction",
    "1298": "SELECT count(DISTINCT ID) FROM Examination WHERE `aCL IgA` IS NOT NULL AND `ANA Pattern` = 'P' AND `T-CHO` < 250\t----- bird -----\tthrombosis_prediction",
    "1299": "SELECT count(ID) FROM ( SELECT ID FROM Examination WHERE Symptoms IS NOT NULL AND TG < 200 GROUP BY ID )\t----- bird -----\tthrombosis_prediction",
    "1300": "SELECT DISTINCT Diagnosis FROM Patient WHERE TG < 200\t----- bird -----\tthrombosis_prediction",
    "1301": "SELECT ID FROM Patient WHERE Thrombosis = 0 AND CPK < 250\t----- bird -----\tthrombosis_prediction",
    "1302": "SELECT count(Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE (CPK < 250 OR CPK IS NULL) AND (KCT = '+' OR RVVT = '+' OR LAC = '+')\t----- bird -----\tthrombosis_prediction",
    "1303": "SELECT min(Birthday) FROM Patient WHERE GLU > 180\t----- bird -----\tthrombosis_prediction",
    "1304": "SELECT count(ID) FROM ( SELECT ID FROM Patient WHERE GLU < 180 AND Thrombosis = 0 GROUP BY ID )\t----- bird -----\tthrombosis_prediction",
    "1305": "SELECT count(ID) FROM Laboratory WHERE WBC BETWEEN 3.5 AND 9.0 AND Admission = '+'\t----- bird -----\tthrombosis_prediction",
    "1306": "SELECT count(ID) FROM Patient WHERE Diagnosis = 'SLE' AND WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction",
    "1307": "SELECT ID FROM Patient WHERE Admission = '-' AND (RBC < 3.5 OR RBC > 6.0)\t----- bird -----\tthrombosis_prediction",
    "1308": "SELECT count(ID) FROM ( SELECT ID FROM Patient WHERE PLT BETWEEN 100 AND 399 GROUP BY ID HAVING count(DISTINCT Symptoms) > 0 )\t----- bird -----\tthrombosis_prediction",
    "1309": "SELECT PLT FROM Patient WHERE PLT BETWEEN 100 AND 400 AND Diagnosis = 'MCTD'\t----- bird -----\tthrombosis_prediction",
    "1310": "SELECT avg(PT) FROM Patient WHERE SEX = 'M' AND PT < 14\t----- bird -----\tthrombosis_prediction",
    "1311": "SELECT count(DISTINCT ID) FROM Examination WHERE Thrombosis = 2 AND PT < 14\t----- bird -----\tthrombosis_prediction",
    "1312": "SELECT major_name FROM major WHERE major_id = ( SELECT link_to_major FROM member WHERE first_name = 'Angela' AND last_name = 'Sanders' )\t----- bird -----\tstudent_club",
    "1313": "SELECT count(member_id) FROM member WHERE link_to_major = 'Engineering'\t----- bird -----\tstudent_club",
    "1314": "SELECT member.first_name, member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Art and Design'\t----- bird -----\tstudent_club",
    "1315": "SELECT count(attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1316": "SELECT member.phone FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1317": "SELECT count(member.member_id) FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1318": "SELECT event.event_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event GROUP BY event.event_name ORDER BY count(attendance.link_to_event) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1319": "SELECT college FROM major WHERE major_name = 'Student_Club'\t----- bird -----\tstudent_club",
    "1320": "SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE attendance.link_to_member = 'Mclean, Maya'\t----- bird -----\tstudent_club",
    "1321": "SELECT count(event_id) FROM attendance WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison' ) AND strftime('%Y', event_date) = '2019'\t----- bird -----\tstudent_club",
    "1322": "SELECT count(event_id) FROM event WHERE TYPE = 'Meeting' GROUP BY event_id HAVING count(event_id) > 10\t----- bird -----\tstudent_club",
    "1323": "SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id GROUP BY event.event_name HAVING count(attendance.link_to_member) > 20\t----- bird -----\tstudent_club",
    "1324": "SELECT cast(count(event_id) AS REAL) / count(DISTINCT event_name) FROM event WHERE strftime('%Y', event_date) = '2020' AND TYPE = 'Meeting'\t----- bird -----\tstudent_club",
    "1325": "SELECT expense_description FROM expense WHERE cost = ( SELECT max(cost) FROM expense )\t----- bird -----\tstudent_club",
    "1326": "SELECT count(member.member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1327": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club",
    "1328": "SELECT member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club",
    "1329": "SELECT county FROM zip_code WHERE state = 'California' AND short_state = 'CA' AND zip_code = 91770\t----- bird -----\tstudent_club",
    "1330": "SELECT college FROM major WHERE major_id = ( SELECT link_to_major FROM member WHERE first_name = 'Tyler' AND last_name = 'Hewitt' )\t----- bird -----\tstudent_club",
    "1331": "SELECT sum(income.amount) FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1332": "SELECT sum(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Meeting' AND budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1333": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE POSITION = 'President'\t----- bird -----\tstudent_club",
    "1334": "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'IL'\t----- bird -----\tstudent_club",
    "1335": "SELECT sum(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Meeting' AND budget.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "1336": "SELECT department FROM major WHERE major_name = 'Pierce and Guidi'\t----- bird -----\tstudent_club",
    "1337": "SELECT sum(amount) FROM budget WHERE event_name = 'October Speaker'\t----- bird -----\tstudent_club",
    "1338": "SELECT approved FROM expense WHERE event_name = 'October Meeting' AND event_date = '2019-10-08'\t----- bird -----\tstudent_club",
    "1339": "SELECT sum(cost) / count(expense_id) FROM expense WHERE substr(expense_date, 1, 7) IN ('2016-09', '2016-10') AND link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen' )\t----- bird -----\tstudent_club",
    "1340": "SELECT sum(CASE WHEN substr(event.event_date, -4) = '2019' THEN budget.spent ELSE 0 END) - sum(CASE WHEN substr(event.event_date, -4) = '2020' THEN budget.spent ELSE 0 END) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Student_Club'\t----- bird -----\tstudent_club",
    "1341": "SELECT LOCATION FROM event WHERE event_name = 'Spring Budget Review'\t----- bird -----\tstudent_club",
    "1342": "SELECT expense.cost FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_date = '2019-09-04' AND event.event_name = 'Posters'\t----- bird -----\tstudent_club",
    "1343": "SELECT max(amount) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1344": "SELECT notes FROM income WHERE date_received = '2019-09-14' AND source = 'Fundraising'\t----- bird -----\tstudent_club",
    "1345": "SELECT count(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1346": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club",
    "1347": "SELECT county FROM zip_code WHERE city = 'Adela O''Gallagher'\t----- bird -----\tstudent_club",
    "1348": "SELECT count(budget_id) FROM budget WHERE event_name = 'November Meeting' AND remaining < 0\t----- bird -----\tstudent_club",
    "1349": "SELECT sum(amount) FROM budget WHERE event_name = 'September Speaker'\t----- bird -----\tstudent_club",
    "1350": "SELECT event.status FROM event INNER JOIN expense ON event.event_id = expense.link_to_event WHERE expense.expense_description = 'Post Cards, Posters' AND expense.expense_date = '2019-8-20'\t----- bird -----\tstudent_club",
    "1351": "SELECT major_name FROM major WHERE major_id = ( SELECT link_to_major FROM member WHERE first_name = 'Brent' AND last_name = 'Thomason' )\t----- bird -----\tstudent_club",
    "1352": "SELECT count(member_id) FROM member WHERE link_to_major = ( SELECT major_id FROM major WHERE major_name = 'Human Development and Family Studies' ) AND t_shirt_size = 'Large'\t----- bird -----\tstudent_club",
    "1353": "SELECT TYPE FROM zip_code WHERE zip_code = 95131\t----- bird -----\tstudent_club",
    "1354": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Vice President'\t----- bird -----\tstudent_club",
    "1355": "SELECT state FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison'\t----- bird -----\tstudent_club",
    "1356": "SELECT department FROM major WHERE major_name = 'President of Student Club'\t----- bird -----\tstudent_club",
    "1357": "SELECT DISTINCT date_received FROM income WHERE source = 'Dues'\t----- bird -----\tstudent_club",
    "1358": "SELECT member.first_name, member.last_name FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.source = 'Dues' ORDER BY income.date_received LIMIT 1\t----- bird -----\tstudent_club",
    "1359": "SELECT cast(sum(CASE WHEN event.event_name = 'Yearly Kickoff' THEN budget.amount ELSE 0 END) AS REAL) / sum(CASE WHEN event.event_name = 'October Meeting' THEN budget.amount ELSE 0 END) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Advertisement' AND budget.category = 'Advertisement'\t----- bird -----\tstudent_club",
    "1360": "SELECT cast(sum(CASE WHEN category = 'Parking' THEN amount ELSE 0 END) AS REAL) * 100 / sum(amount) FROM budget WHERE event_name = 'November Speaker'\t----- bird -----\tstudent_club",
    "1361": "SELECT sum(cost) FROM expense WHERE expense_description = 'Pizza'\t----- bird -----\tstudent_club",
    "1362": "SELECT count(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club",
    "1363": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club",
    "1364": "SELECT zip_code.city, zip_code.county, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE first_name = 'Amy' AND last_name = 'Firth'\t----- bird -----\tstudent_club",
    "1365": "SELECT expense_description FROM expense WHERE link_to_budget = ( SELECT budget_id FROM budget ORDER BY remaining LIMIT 1 )\t----- bird -----\tstudent_club",
    "1366": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'October Meeting'\t----- bird -----\tstudent_club",
    "1367": "SELECT college FROM member GROUP BY college ORDER BY count(college) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1368": "SELECT major_name FROM member WHERE phone = '809-555-3360'\t----- bird -----\tstudent_club",
    "1369": "SELECT event_name FROM budget ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1370": "SELECT expense_description FROM expense WHERE link_to_member = ( SELECT member_id FROM member WHERE position = 'Vice President' )\t----- bird -----\tstudent_club",
    "1371": "SELECT count(attendance.link_to_member) FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club",
    "1372": "SELECT income.date_received FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Casey' AND member.last_name = 'Mason'\t----- bird -----\tstudent_club",
    "1373": "SELECT count(DISTINCT zip) FROM zip_code WHERE state = 'Maryland'\t----- bird -----\tstudent_club",
    "1374": "SELECT count(event_id) FROM attendance WHERE link_to_member = ( SELECT member_id FROM member WHERE phone = '954-555-6240' )\t----- bird -----\tstudent_club",
    "1375": "SELECT first_name, last_name FROM member WHERE link_to_major = ( SELECT major_id FROM major WHERE major_name = 'School of Applied Sciences, Technology and Education' )\t----- bird -----\tstudent_club",
    "1376": "SELECT event_name FROM event WHERE status = 'Closed' ORDER BY cast(spent AS REAL) / amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1377": "SELECT count(member_id) FROM member WHERE POSITION = 'President'\t----- bird -----\tstudent_club",
    "1378": "SELECT max(spent) FROM budget\t----- bird -----\tstudent_club",
    "1379": "SELECT count(event_id) FROM event WHERE strftime('%Y', event_date) = '2020' AND TYPE = 'Meeting'\t----- bird -----\tstudent_club",
    "1380": "SELECT sum(amount) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club",
    "1381": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member GROUP BY attendance.link_to_member HAVING count(attendance.link_to_event) > 7\t----- bird -----\tstudent_club",
    "1382": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community Theater' AND member.link_to_major = 'INTERIOR DESIGN'\t----- bird -----\tstudent_club",
    "1383": "SELECT first_name, last_name FROM member WHERE city = 'Georgetown' AND state = 'South Carolina'\t----- bird -----\tstudent_club",
    "1384": "SELECT count(income_id) FROM income WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour' )\t----- bird -----\tstudent_club",
    "1385": "SELECT member.first_name, member.last_name FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.amount > 40\t----- bird -----\tstudent_club",
    "1386": "SELECT sum(expense.cost) FROM event INNER JOIN budget ON event.event_id = budget.link_to_event INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1387": "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club",
    "1388": "SELECT member.first_name, member.last_name, income.source FROM income INNER JOIN member ON income.link_to_member = member.member_id ORDER BY income.amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1389": "SELECT event_name FROM budget ORDER BY cost ASC LIMIT 1\t----- bird -----\tstudent_club",
    "1390": "SELECT cast(sum(CASE WHEN event_name = 'Yearly Kickoff' THEN cost ELSE 0 END) AS REAL) * 100 / sum(cost) FROM budget\t----- bird -----\tstudent_club",
    "1391": "SELECT cast(sum(CASE WHEN major.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN major.major_name = 'Physics' THEN 1 ELSE 0 END) FROM member INNER JOIN major ON member.link_to_major = major.major_id\t----- bird -----\tstudent_club",
    "1392": "SELECT source FROM income WHERE date_received LIKE '2019-09%' GROUP BY source ORDER BY sum(amount) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1393": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1394": "SELECT count(member_id) FROM member WHERE link_to_major = ( SELECT major_id FROM major WHERE major_name = 'Physics Teaching' )\t----- bird -----\tstudent_club",
    "1395": "SELECT count(DISTINCT link_to_member) FROM attendance WHERE event_name = 'Community Theater' AND strftime('%Y', event_date) = '2019'\t----- bird -----\tstudent_club",
    "1396": "SELECT count(attendance.link_to_event), major.major_name FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Luisa' AND member.last_name = 'Guidi'\t----- bird -----\tstudent_club",
    "1397": "SELECT sum(spent) / count(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed'\t----- bird -----\tstudent_club",
    "1398": "SELECT event_name FROM budget WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1399": "SELECT CASE WHEN count(attendance.link_to_member) > 0 THEN 'YES' ELSE 'NO' END AS RESULT FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND attendance.link_to_member = 'Mclean, Maya'\t----- bird -----\tstudent_club",
    "1400": "SELECT cast(sum(CASE WHEN TYPE = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / count(event_id) FROM event WHERE event_date LIKE '2019%'\t----- bird -----\tstudent_club",
    "1401": "SELECT sum(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1402": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY count(t_shirt_size) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1403": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.status = 'Closed' AND budget.remaining < 0 ORDER BY budget.remaining DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1404": "SELECT expense_description, sum(cost) FROM expense WHERE link_to_event = 'October Meeting' GROUP BY expense_description\t----- bird -----\tstudent_club",
    "1405": "SELECT category FROM budget WHERE event_name = 'April Speaker' ORDER BY amount ASC\t----- bird -----\tstudent_club",
    "1406": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1407": "SELECT budget_id FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club",
    "1408": "SELECT sum(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club",
    "1409": "SELECT sum(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club",
    "1410": "SELECT member.first_name, member.last_name, sum(expense.cost) FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY member.first_name, member.last_name\t----- bird -----\tstudent_club",
    "1411": "SELECT DISTINCT expense_description FROM expense WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison' )\t----- bird -----\tstudent_club",
    "1412": "SELECT expense_description FROM expense WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1413": "SELECT zip FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE cost < 50\t----- bird -----\tstudent_club",
    "1414": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.first_name = 'Phillip' AND member.last_name = 'Cullen'\t----- bird -----\tstudent_club",
    "1415": "SELECT member.position FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1416": "SELECT count(member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND t_shirt_size = 'Medium'\t----- bird -----\tstudent_club",
    "1417": "SELECT event.type FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.remaining > 30\t----- bird -----\tstudent_club",
    "1418": "SELECT DISTINCT category FROM event WHERE LOCATION = 'MU 215'\t----- bird -----\tstudent_club",
    "1419": "SELECT DISTINCT category FROM budget WHERE event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club",
    "1420": "SELECT major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE member.position = 'Student Club Vice President'\t----- bird -----\tstudent_club",
    "1421": "SELECT cast(sum(CASE WHEN position = 'Member' AND major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / count(member_id) FROM member\t----- bird -----\tstudent_club",
    "1422": "SELECT DISTINCT category FROM event WHERE LOCATION = 'MU 215'\t----- bird -----\tstudent_club",
    "1423": "SELECT count(income_id) FROM income WHERE amount = 50\t----- bird -----\tstudent_club",
    "1424": "SELECT count(member_id) FROM member WHERE t_shirt_size = 'X-Large' AND position = 'Member'\t----- bird -----\tstudent_club",
    "1425": "SELECT count(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club",
    "1426": "SELECT member.last_name, major.department, major.college FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club",
    "1427": "SELECT DISTINCT category FROM budget WHERE event_status = 'Attended' AND location = 'MU 215' AND TYPE = 'Guest Speaker' AND spent = 0\t----- bird -----\tstudent_club",
    "1428": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'Member' AND member.department = 'Electrical and Computer Engineering'\t----- bird -----\tstudent_club",
    "1429": "SELECT event.event_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'Vice President' AND event.type = 'Social' AND event.location = '900 E. Washington St.'\t----- bird -----\tstudent_club",
    "1430": "SELECT member.last_name, member.position FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_description = 'Pizza' AND expense.expense_date = '2019-09-10'\t----- bird -----\tstudent_club",
    "1431": "SELECT DISTINCT member.last_name FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND member.position = 'Member'\t----- bird -----\tstudent_club",
    "1432": "SELECT cast(sum(CASE WHEN amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / count(member_id) FROM attendance WHERE t_shirt_size = 'Medium' AND POSITION = 'Member'\t----- bird -----\tstudent_club",
    "1433": "SELECT DISTINCT short_state FROM zip_code WHERE TYPE = 'PO Box'\t----- bird -----\tstudent_club",
    "1434": "SELECT zip_code FROM zip_code WHERE TYPE = 'PO Box' AND state = 'Puerto Rico'\t----- bird -----\tstudent_club",
    "1435": "SELECT event_name FROM event WHERE event_date BETWEEN '2019-03-15' AND '2020-03-20' AND TYPE = 'Game' AND status = 'Closed'\t----- bird -----\tstudent_club",
    "1436": "SELECT DISTINCT event.event_name FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE expense.cost > 50\t----- bird -----\tstudent_club",
    "1437": "SELECT member.first_name, member.last_name, attendance.link_to_event FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN attendance ON attendance.link_to_member = member.member_id WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'\t----- bird -----\tstudent_club",
    "1438": "SELECT college FROM major WHERE major_id = ( SELECT link_to_major FROM member WHERE first_name = 'Katy' )\t----- bird -----\tstudent_club",
    "1439": "SELECT member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Agriculture and Applied Sciences' AND major.major_name = 'Business'\t----- bird -----\tstudent_club",
    "1440": "SELECT email FROM member WHERE member_id IN ( SELECT link_to_member FROM expense WHERE expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND cost > 20 )\t----- bird -----\tstudent_club",
    "1441": "SELECT count(member_id) FROM member WHERE position = 'Member' AND major_name = 'Education'\t----- bird -----\tstudent_club",
    "1442": "SELECT cast(sum(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / count(event_id) FROM budget\t----- bird -----\tstudent_club",
    "1443": "SELECT event_id, LOCATION, status FROM EVENT WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club",
    "1444": "SELECT expense_description FROM expense WHERE cast(sum(cost) AS REAL) / count(expense_id) > 50\t----- bird -----\tstudent_club",
    "1445": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club",
    "1446": "SELECT cast(sum(CASE WHEN TYPE = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / count(zip_code) FROM zip_code\t----- bird -----\tstudent_club",
    "1447": "SELECT event.event_name, event.location FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.remaining > 0\t----- bird -----\tstudent_club",
    "1448": "SELECT event.event_name, event.event_date FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE expense.expense_description = 'Pizza' AND expense.cost BETWEEN 50 AND 99\t----- bird -----\tstudent_club",
    "1449": "SELECT member.first_name, member.last_name, major.major_name FROM member INNER JOIN expense ON member.member_id = expense.link_to_member INNER JOIN major ON member.link_to_major = major.major_id WHERE expense.cost > 100\t----- bird -----\tstudent_club",
    "1450": "SELECT zip_code.city, zip_code.county FROM income INNER JOIN member ON income.link_to_member = member.member_id INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE income.amount > 40\t----- bird -----\tstudent_club",
    "1451": "SELECT member.first_name, member.last_name FROM expense INNER JOIN member ON expense.link_to_member = member.member_id GROUP BY member.first_name, member.last_name ORDER BY sum(expense.cost) DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1452": "SELECT sum(expense.cost) / count(event.event_id) FROM expense INNER JOIN attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.status = 'Paid' AND attendance.position != 'Member'\t----- bird -----\tstudent_club",
    "1453": "SELECT event_name FROM budget WHERE category = 'Parking' ORDER BY cost / count(event_id) LIMIT 1\t----- bird -----\tstudent_club",
    "1454": "SELECT cast(sum(cost) AS REAL) * 100 / count(event_id) FROM expense WHERE TYPE = 'Game'\t----- bird -----\tstudent_club",
    "1455": "SELECT expense_description FROM expense WHERE expense_description = 'Water, chips, cookies' ORDER BY cost DESC LIMIT 1\t----- bird -----\tstudent_club",
    "1456": "SELECT member.first_name, member.last_name FROM member INNER JOIN expense ON member.member_id = expense.link_to_member ORDER BY expense.cost DESC LIMIT 5\t----- bird -----\tstudent_club",
    "1457": "SELECT member.first_name, member.last_name, member.phone FROM expense INNER JOIN member ON expense.link_to_member = member.member_id GROUP BY expense.link_to_member, member.first_name, member.last_name, member.phone HAVING sum(expense.cost) > ( SELECT avg(cost) FROM expense )\t----- bird -----\tstudent_club",
    "1458": "SELECT cast(sum(CASE WHEN state = 'Maine' THEN 1 ELSE 0 END) AS REAL) * 100 / count(position) - cast(sum(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) * 100 / count(position) FROM member\t----- bird -----\tstudent_club",
    "1459": "SELECT major_name, department FROM major WHERE major_name = 'Computer Science'\t----- bird -----\tstudent_club",
    "1460": "SELECT member.first_name, member.last_name, expense.cost FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club",
    "1461": "SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'\t----- bird -----\tstudent_club",
    "1462": "SELECT category, amount FROM budget WHERE event_name = 'January Speaker'\t----- bird -----\tstudent_club",
    "1463": "SELECT event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Food'\t----- bird -----\tstudent_club",
    "1464": "SELECT member.first_name, member.last_name, income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'\t----- bird -----\tstudent_club",
    "1465": "SELECT category FROM expense WHERE expense_description = 'Posters'\t----- bird -----\tstudent_club",
    "1466": "SELECT first_name, last_name, college FROM member WHERE position = 'Secretary'\t----- bird -----\tstudent_club",
    "1467": "SELECT sum(budget.spent), event.event_name FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Speaker Gifts'\t----- bird -----\tstudent_club",
    "1468": "SELECT city FROM member WHERE first_name = 'Garrett' AND last_name = 'Girke'\t----- bird -----\tstudent_club",
    "1469": "SELECT first_name, last_name, position FROM member WHERE zip = 28092 AND city = 'Lincolnton' AND state = 'North Carolina'\t----- bird -----\tstudent_club",
    "1470": "SELECT count(DISTINCT GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing",
    "1471": "SELECT cast(sum(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1472": "SELECT DISTINCT customers.CustomerID FROM customers INNER JOIN `yearmonth` ON customers.CustomerID = yearmonth.CustomerID WHERE strftime('%Y', Date) = '2012' ORDER BY sum(Consumption) LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1473": "SELECT avg(Consumption) / 12 FROM `yearmonth` WHERE Date LIKE '2013%'\t----- bird -----\tdebit_card_specializing",
    "1474": "SELECT customers.CustomerID FROM customers INNER JOIN `yearmonth` ON customers.CustomerID = yearmonth.CustomerID WHERE strftime('%Y', Date) = '2011' AND Currency = 'CZK' GROUP BY customers.CustomerID ORDER BY sum(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1475": "SELECT count(DISTINCT CustomerID) FROM yearmonth WHERE strftime('%Y', Date) = '2012' AND Consumption < 30000\t----- bird -----\tdebit_card_specializing",
    "1476": "SELECT sum(CASE WHEN customers.Currency = 'CZK' THEN yearmonth.Consumption ELSE 0 END) - sum(CASE WHEN customers.Currency = 'EUR' THEN yearmonth.Consumption ELSE 0 END) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE substr(yearmonth.Date, 1, 7) = '201201' OR substr(yearmonth.Date, 1, 7) = '201212'\t----- bird -----\tdebit_card_specializing",
    "1477": "SELECT strftime('%Y', Date) FROM transactions_1k GROUP BY strftime('%Y', Date) ORDER BY count(Date) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1478": "SELECT Segment FROM customers WHERE Segment IS NOT NULL ORDER BY sum(Consumption) LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1479": "SELECT substr(Date, 1, 4) FROM yearmonth GROUP BY substr(Date, 1, 4) ORDER BY count(substr(Date, 1, 4)) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1480": "SELECT DISTINCT substr(Date, 5, 2) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE substr(Date, 1, 4) = '2013' AND Segment = 'SME'\t----- bird -----\tdebit_card_specializing",
    "1481": "SELECT sum(Consumption) / count(DISTINCT CustomerID) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE substr(Date, 1, 4) = '2013'\t----- bird -----\tdebit_card_specializing",
    "1482": "SELECT Segment FROM ( SELECT Segment, sum(Consumption) AS consumption FROM yearmonth WHERE Date BETWEEN '201201' AND '201312' GROUP BY Segment ) AS t ORDER BY consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1483": "SELECT sum(Consumption) FROM `yearmonth` WHERE substr(`Date`, 1, 4) BETWEEN '2013' AND '2014' AND CustomerID = 6\t----- bird -----\tdebit_card_specializing",
    "1484": "SELECT sum(CASE WHEN Country = 'Czech Republic' THEN 1 ELSE 0 END) - sum(CASE WHEN Country = 'Slovakia' THEN 1 ELSE 0 END) AS RESULT FROM gasstations WHERE Segment = 'discount'\t----- bird -----\tdebit_card_specializing",
    "1485": "SELECT sum(CASE WHEN CustomerID = 7 THEN Consumption ELSE 0 END) - sum(CASE WHEN CustomerID = 5 THEN Consumption ELSE 0 END) FROM `yearmonth` WHERE Date LIKE '201304%'\t----- bird -----\tdebit_card_specializing",
    "1486": "SELECT sum(CASE WHEN Currency = 'CZK' THEN 1 ELSE 0 END) - sum(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS RESULT FROM customers\t----- bird -----\tdebit_card_specializing",
    "1487": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'Euro' AND strftime('%Y%m', Date) = '201310' ORDER BY yearmonth.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1488": "SELECT customers.CustomerID, sum(yearmonth.Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID GROUP BY customers.CustomerID ORDER BY sum(yearmonth.Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1489": "SELECT sum(Consumption) FROM yearmonth WHERE Date LIKE '201305%'\t----- bird -----\tdebit_card_specializing",
    "1490": "SELECT cast(sum(CASE WHEN Consumption > 46.73 THEN 1 ELSE 0 END) AS REAL) * 100 / count(Consumption) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE Segment = 'LAM'\t----- bird -----\tdebit_card_specializing",
    "1491": "SELECT t.Country, count(t.Country) FROM ( SELECT gasstations.Country, count(DISTINCT gasstations.GasStationID) AS num FROM gasstations INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID GROUP BY gasstations.Country ) t GROUP BY t.Country ORDER BY sum(t.num) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1492": "SELECT cast(sum(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / count(CustomerID) FROM customers\t----- bird -----\tdebit_card_specializing",
    "1493": "SELECT cast(sum(CASE WHEN Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / count(*) FROM yearmonth WHERE Date LIKE '201202%'\t----- bird -----\tdebit_card_specializing",
    "1494": "SELECT cast(sum(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / count(GasStationID) FROM gasstations\t----- bird -----\tdebit_card_specializing",
    "1495": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE strftime('%Y-%m', Date) = '201309' GROUP BY customers.CustomerID ORDER BY sum(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1496": "SELECT customers.Segment FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE substr(yearmonth.`Date`, 1, 7) = '201309' GROUP BY customers.Segment ORDER BY sum(Consumption) LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1497": "SELECT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE substr(yearmonth.`Date`, 1, 7) = '201206' ORDER BY yearmonth.Consumption LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1498": "SELECT max(Consumption) FROM yearmonth WHERE Date LIKE '2012%'\t----- bird -----\tdebit_card_specializing",
    "1499": "SELECT sum(Consumption) / 12 FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1500": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID WHERE substr(`Date`, 1, 4) = '2013' AND substr(`Date`, 6, 2) = '09'\t----- bird -----\tdebit_card_specializing",
    "1501": "SELECT DISTINCT t.Country FROM ( SELECT DISTINCT gasstations.Country, substr(transactions_1k.Date, 1, 4) AS y FROM gasstations INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE substr(transactions_1k.Date, 6, 2) = '06' ) t\t----- bird -----\tdebit_card_specializing",
    "1502": "SELECT DISTINCT ChainID FROM gasstations INNER JOIN transactions_1k ON gasstations.GasStationID = transactions_1k.GasStationID WHERE Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1503": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID WHERE Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1504": "SELECT avg(Price) FROM transactions_1k WHERE Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing",
    "1505": "SELECT count(DISTINCT t.CustomerID) FROM ( SELECT DISTINCT customers.CustomerID FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE customers.Currency = 'EUR' AND yearmonth.Consumption > 1000 ) t\t----- bird -----\tdebit_card_specializing",
    "1506": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID INNER JOIN gasstations ON gasstations.GasStationID = transactions_1k.GasStationID WHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1507": "SELECT DISTINCT Time FROM transactions_1k WHERE ChainID = 11\t----- bird -----\tdebit_card_specializing",
    "1508": "SELECT count(DISTINCT TransactionID) FROM transactions_1k INNER JOIN gasstations ON gasstations.GasStationID = transactions_1k.GasStationID WHERE gasstations.Country = 'CZE' AND Price > 1000\t----- bird -----\tdebit_card_specializing",
    "1509": "SELECT count(DISTINCT TransactionID) FROM transactions_1k WHERE Date > '2012-01-01' AND Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1510": "SELECT avg(Price) FROM transactions_1k WHERE Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1511": "SELECT avg(Price) FROM transactions_1k WHERE Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1512": "SELECT customers.CustomerID FROM customers INNER JOIN `yearmonth` ON customers.CustomerID = yearmonth.CustomerID WHERE strftime('%Y-%m-%d', Date) = '2012-08-25' GROUP BY customers.CustomerID ORDER BY sum(Consumption) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1513": "SELECT DISTINCT t.Country FROM ( SELECT DISTINCT customers.Country, min(yearmonth.Date) AS Date FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE strftime('%Y-%m-%d', Date) = '2012-08-25' GROUP BY customers.Country ) t\t----- bird -----\tdebit_card_specializing",
    "1514": "SELECT DISTINCT Currency FROM transactions_1k WHERE Date = '2012-08-24 16:25:00'\t----- bird -----\tdebit_card_specializing",
    "1515": "SELECT DISTINCT Segment FROM customers INNER JOIN transactions_1k AS T1 ON customers.CustomerID = T1.CustomerID WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1516": "SELECT count(DISTINCT TransactionID) FROM transactions_1k WHERE Date LIKE '2012-08-26%' AND Currency = 'EUR'\t----- bird -----\tdebit_card_specializing",
    "1517": "SELECT Segment FROM customers WHERE CustomerID = ( SELECT min(CustomerID) FROM customers )\t----- bird -----\tdebit_card_specializing",
    "1518": "SELECT DISTINCT t.Country FROM transactions_1k AS t WHERE t.Date = '2012-08-24' AND t.Time = '12:42:00'\t----- bird -----\tdebit_card_specializing",
    "1519": "SELECT DISTINCT ProductID FROM transactions_1k AS T1 WHERE Date = '2012-08-23' AND Time = '21:20:00'\t----- bird -----\tdebit_card_specializing",
    "1520": "SELECT sum(t.Amount) FROM transactions_1k t WHERE t.Date = '2012-01-01' AND t.Amount = 124.05\t----- bird -----\tdebit_card_specializing",
    "1521": "SELECT count(DISTINCT TransactionID) FROM transactions_1k WHERE substr(`Time`, 1, 10) = '2012-08-26' AND substr(`Time`, 13, 5) = '08:00:00' AND substr(`Time`, 18, 3) = '09:00' AND Country = 'CZE'\t----- bird -----\tdebit_card_specializing",
    "1522": "SELECT DISTINCT customers.Currency FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE substr(yearmonth.`Date`, 1, 4) = '2013' AND substr(yearmonth.`Date`, 6, 2) = '06'\t----- bird -----\tdebit_card_specializing",
    "1523": "SELECT DISTINCT Country FROM customers WHERE CustomerID = ( SELECT DISTINCT CustomerID FROM transactions_1k WHERE CardID = 667467 )\t----- bird -----\tdebit_card_specializing",
    "1524": "SELECT customers.Nationality FROM customers INNER JOIN `yearmonth` ON customers.CustomerID = yearmonth.CustomerID WHERE strftime('%Y-%m-%d', Date) = '2012-08-24' AND customers.Nationality IS NOT NULL\t----- bird -----\tdebit_card_specializing",
    "1525": "SELECT cast(sum(CASE WHEN Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / count(CustomerID) FROM customers WHERE Date LIKE '2012-08-25'\t----- bird -----\tdebit_card_specializing",
    "1526": "SELECT (sum(Consumption) - sum(Consumption * 0.1)) / sum(Consumption) FROM `yearmonth` WHERE Date LIKE '2012-08-24%'\t----- bird -----\tdebit_card_specializing",
    "1527": "SELECT gasstations.GasStationID FROM transactions_1k INNER JOIN gasstations ON gasstations.GasStationID = transactions_1k.GasStationID GROUP BY gasstations.GasStationID ORDER BY sum(transactions_1k.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1528": "SELECT cast(sum(CASE WHEN Segment = 'premium' THEN 1 ELSE 0 END) AS REAL) * 100 / count(CustomerID) FROM customers WHERE Segment = 'SVK'\t----- bird -----\tdebit_card_specializing",
    "1529": "SELECT sum(CASE WHEN substr(Date, 6, 2) = '01' AND CustomerID = 38508 THEN Amount ELSE 0 END) FROM transactions_1k\t----- bird -----\tdebit_card_specializing",
    "1530": "SELECT DISTINCT products.Description FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID ORDER BY transactions_1k.Amount DESC LIMIT 5\t----- bird -----\tdebit_card_specializing",
    "1531": "SELECT customers.CustomerID, avg(transactions_1k.Price / transactions_1k.Amount), customers.Currency FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID GROUP BY customers.CustomerID, customers.Currency ORDER BY sum(transactions_1k.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1532": "SELECT DISTINCT t.Country FROM ( SELECT gasstations.Country, count(DISTINCT products.ProductID) AS num FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID INNER JOIN gasstations ON gasstations.GasStationID = transactions_1k.GasStationID WHERE products.ProductID = 2 GROUP BY gasstations.Country ) t ORDER BY t.num DESC LIMIT 1\t----- bird -----\tdebit_card_specializing",
    "1533": "SELECT DISTINCT CASE WHEN sum(CASE WHEN Date LIKE '201208%' THEN Price / Amount ELSE 0 END) > 29 THEN 'YES' ELSE 'NO' END FROM transactions_1k WHERE ProductID = 5\t----- bird -----\tdebit_card_specializing"
}