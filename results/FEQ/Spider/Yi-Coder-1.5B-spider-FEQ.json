[
    {
        "question_id": 0,
        "answer_sql": "SELECT COUNT(*) FROM club ;"
    },
    {
        "question_id": 1,
        "answer_sql": "SELECT COUNT(*) FROM club;"
    },
    {
        "question_id": 2,
        "answer_sql": "SELECT club.Name FROM club ORDER BY club.Name ASC;"
    },
    {
        "question_id": 3,
        "answer_sql": "SELECT Name FROM club ORDER BY Name ;"
    },
    {
        "question_id": 4,
        "answer_sql": "SELECT Club_ID , Name , Manager , Captain FROM club ;"
    },
    {
        "question_id": 5,
        "answer_sql": "SELECT club . Manager , club . Captain FROM club ;"
    },
    {
        "question_id": 6,
        "answer_sql": "SELECT club.Name FROM club WHERE club.Manufacturer != 'Nike';"
    },
    {
        "question_id": 7,
        "answer_sql": "SELECT club.Name FROM club WHERE club.Manufacturer != 'Nike';"
    },
    {
        "question_id": 8,
        "answer_sql": "SELECT player.Name FROM player ORDER BY player.Wins_count ASC;"
    },
    {
        "question_id": 9,
        "answer_sql": "SELECT player.Name FROM player JOIN club ON player.Club_ID = club.Club_ID ORDER BY player.Wins_count ASC;"
    },
    {
        "question_id": 10,
        "answer_sql": "SELECT player.Name FROM player WHERE player.Earnings = (SELECT MAX(Earnings) FROM player);"
    },
    {
        "question_id": 11,
        "answer_sql": "SELECT player.Name FROM player WHERE player.Earnings = ( SELECT MAX(player2.Earnings) FROM player as player2 );"
    },
    {
        "question_id": 12,
        "answer_sql": "SELECT DISTINCT Country FROM player WHERE Earnings > 1200000;"
    },
    {
        "question_id": 13,
        "answer_sql": "SELECT player.Country FROM player JOIN club ON player.Club_ID = club.Club_ID WHERE player.Earnings > 1200000 GROUP BY player.Country ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 14,
        "answer_sql": "SELECT player.Country FROM player WHERE player.Earnings = ( SELECT MAX(player2.Earnings) FROM player AS player2 WHERE player2.Wins_count > 2 ) AND player.Wins_count > 2;"
    },
    {
        "question_id": 15,
        "answer_sql": "SELECT p.Country FROM player p WHERE p.Wins_count > 2 ORDER BY p.Earnings DESC LIMIT 1;"
    },
    {
        "question_id": 16,
        "answer_sql": "SELECT p.Name AS Player_Name, c.Name AS Club_Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID;"
    },
    {
        "question_id": 17,
        "answer_sql": "SELECT player.Name, club.Name FROM player JOIN club ON player.Club_ID = club.Club_ID;"
    },
    {
        "question_id": 18,
        "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2"
    },
    {
        "question_id": 19,
        "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2;"
    },
    {
        "question_id": 20,
        "answer_sql": "SELECT player . Name FROM player JOIN club ON player . Club_ID = club . Club_ID WHERE club . Manager = 'Sam Allardyce';"
    },
    {
        "question_id": 21,
        "answer_sql": "SELECT player . Name FROM player JOIN club ON player . Club_ID = club . Club_ID WHERE club . Manager = 'Sam Allardyce';"
    },
    {
        "question_id": 22,
        "answer_sql": "SELECT club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID GROUP BY club.Name ORDER BY AVG(player.Earnings) DESC;"
    },
    {
        "question_id": 23,
        "answer_sql": "SELECT c.Name, AVG(p.Earnings) as Average_Earnings FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Name ORDER BY Average_Earnings DESC;"
    },
    {
        "question_id": 24,
        "answer_sql": "SELECT Manufacturer, COUNT(Club_ID) as Number_of_Clubs FROM club GROUP BY Manufacturer;"
    },
    {
        "question_id": 25,
        "answer_sql": "SELECT c.Manufacturer, COUNT(c.Club_ID) as Number_of_Clubs FROM club c GROUP BY c.Manufacturer;"
    },
    {
        "question_id": 26,
        "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 27,
        "answer_sql": "SELECT Manufacturer, COUNT(*) as Total_Clubs FROM club GROUP BY Manufacturer ORDER BY Total_Clubs DESC LIMIT 1;"
    },
    {
        "question_id": 28,
        "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(Club_ID) > 1;"
    },
    {
        "question_id": 29,
        "answer_sql": "SELECT Manufacturer, COUNT(Club_ID) as Number_of_Clubs FROM club GROUP BY Manufacturer HAVING Number_of_Clubs > 1;"
    },
    {
        "question_id": 30,
        "answer_sql": "SELECT Country, COUNT(*) as Player_Count FROM player GROUP BY Country HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 31,
        "answer_sql": "SELECT Country FROM player GROUP BY Country HAVING COUNT(Player_ID) > 1;"
    },
    {
        "question_id": 32,
        "answer_sql": "SELECT c.Name FROM club c LEFT JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Player_ID IS NULL;"
    },
    {
        "question_id": 33,
        "answer_sql": "SELECT club.Name FROM club LEFT JOIN player ON club.Club_ID = player.Club_ID WHERE player.Club_ID IS NULL;"
    },
    {
        "question_id": 34,
        "answer_sql": ""
    },
    {
        "question_id": 35,
        "answer_sql": "SELECT DISTINCT player.Country FROM player WHERE player.Earnings BETWEEN 1100000 AND 1400000;"
    },
    {
        "question_id": 36,
        "answer_sql": "SELECT DISTINCT Country FROM player;"
    },
    {
        "question_id": 37,
        "answer_sql": "SELECT COUNT(DISTINCT Country) FROM player;"
    },
    {
        "question_id": 38,
        "answer_sql": "SELECT player.Earnings FROM player WHERE player.Country IN ('Australia', 'Zimbabwe');"
    },
    {
        "question_id": 39,
        "answer_sql": "SELECT player.Earnings FROM player JOIN club ON player.Club_ID = club.Club_ID WHERE player.Country IN ('Australia', 'Zimbabwe')"
    },
    {
        "question_id": 40,
        "answer_sql": ""
    },
    {
        "question_id": 41,
        "answer_sql": "SELECT Customers.customer_id, Customers.customer_first_name, Customers.customer_last_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_id, Customers.customer_first_name, Customers.customer_last_name HAVING COUNT(Order_Items.order_item_id) > 2 AND COUNT(DISTINCT Order_Items.product_id) >= 3;"
    },
    {
        "question_id": 42,
        "answer_sql": "SELECT Orders.order_id, Orders.order_status_code, COUNT(Products.product_id) as product_count FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.order_status_code;"
    },
    {
        "question_id": 43,
        "answer_sql": "SELECT Orders.order_id, Orders.order_status_code, COUNT(Order_Items.order_item_id) as product_count FROM Orders LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.order_status_code;"
    },
    {
        "question_id": 44,
        "answer_sql": "SELECT Orders.date_order_placed FROM Orders WHERE Orders.order_id IN ( SELECT Order_Items.order_id FROM Order_Items GROUP BY Order_Items.order_id HAVING COUNT(Order_Items.order_id) > 1 ) AND Orders.date_order_placed IN ( SELECT MIN(Orders.date_order_placed) FROM Orders GROUP BY Orders.order_id )"
    },
    {
        "question_id": 45,
        "answer_sql": "SELECT Orders.date_order_placed AS 'Earliest Order Date', GROUP_CONCAT(DISTINCT Order_Items.order_item_id) AS 'Order IDs with More than 1 Item' FROM Orders LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id HAVING COUNT(Order_Items.order_item_id) > 1 ORDER BY Orders.date_order_placed ASC;"
    },
    {
        "question_id": 46,
        "answer_sql": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.order_id IS NULL;"
    },
    {
        "question_id": 47,
        "answer_sql": "SELECT `customer_first_name`, `customer_last_name`, `customer_middle_initial` FROM `Customers` WHERE `customer_id` NOT IN ( SELECT `customer_id` FROM `Orders` WHERE EXISTS ( SELECT * FROM `Order_Items` WHERE `Order_Items`.`order_id` = `Orders`.`order_id` ) )"
    },
    {
        "question_id": 48,
        "answer_sql": "SELECT Products.product_id, Products.product_name, Products.product_price, Products.product_color FROM Products WHERE Products.product_id NOT IN ( SELECT Order_Items.product_id FROM Order_Items JOIN Orders ON Order_Items.order_id = Orders.order_id GROUP BY Order_Items.product_id HAVING COUNT(DISTINCT Orders.customer_id) < 2 )"
    },
    {
        "question_id": 49,
        "answer_sql": "SELECT Products.product_id, Products.product_name, Products.product_price, Products.product_color FROM Products JOIN (SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(order_item_id) < 2) AS orders_products ON Products.product_id = orders_products.product_id;"
    },
    {
        "question_id": 50,
        "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed HAVING COUNT(Products.product_id) >= 2;"
    },
    {
        "question_id": 51,
        "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed HAVING COUNT(Products.product_id) >= 2;"
    },
    {
        "question_id": 52,
        "answer_sql": "SELECT Products.product_id, Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id GROUP BY Products.product_id, Products.product_name, Products.product_price ORDER BY COUNT(Order_Items.order_item_id) DESC;"
    },
    {
        "question_id": 53,
        "answer_sql": "SELECT Products.product_id, Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id GROUP BY Products.product_id, Products.product_name, Products.product_price ORDER BY COUNT(Order_Items.order_item_id) DESC;"
    },
    {
        "question_id": 54,
        "answer_sql": "SELECT o.order_id, SUM(p.product_price) as total_price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id GROUP BY o.order_id ORDER BY total_price ASC LIMIT 1;"
    },
    {
        "question_id": 55,
        "answer_sql": "SELECT o.order_id, SUM(p.product_price) as total_cost FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id GROUP BY o.order_id ORDER BY total_cost ASC LIMIT 1;"
    },
    {
        "question_id": 56,
        "answer_sql": "SELECT `payment_method_code`, COUNT(`payment_method_code`) as 'Number of Orders' FROM `Customer_Payment_Methods` GROUP BY `payment_method_code` ORDER BY 'Number of Orders' DESC LIMIT 1;"
    },
    {
        "question_id": 57,
        "answer_sql": "SELECT Customers.customer_id, Customers.customer_first_name, Customers.customer_last_name, Customers.email_address, Customers.login_name, Customers.login_password, Customers.phone_number, Customers.address_line_1, Customers.town_city, Customers.county, Customers.country, Customer_Payment_Methods.payment_method_code FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id GROUP BY Customer_Payment_Methods.payment_method_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 58,
        "answer_sql": "SELECT Customers.gender_code, COUNT(Products.product_id) as Number_of_Products FROM Customers JOIN Order_Items ON Customers.customer_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Customers.gender_code;"
    },
    {
        "question_id": 59,
        "answer_sql": "SELECT Customers.gender_code, COUNT(Products.product_id) as product_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Customers.gender_code;"
    },
    {
        "question_id": 60,
        "answer_sql": "SELECT gender_code, COUNT(*) as number_of_orders FROM Customers GROUP BY gender_code;"
    },
    {
        "question_id": 61,
        "answer_sql": "SELECT gender_code, COUNT(customer_id) as number_of_orders FROM Customers GROUP BY gender_code;"
    },
    {
        "question_id": 62,
        "answer_sql": "SELECT `Customers`.`customer_first_name`, `Customers`.`customer_middle_initial`, `Customers`.`customer_last_name`, `Customer_Payment_Methods`.`payment_method_code` FROM `Customers` JOIN `Customer_Payment_Methods` ON `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id` ORDER BY `Customers`.`customer_first_name`, `Customers`.`customer_middle_initial`, `Customers`.`customer_last_name`;"
    },
    {
        "question_id": 63,
        "answer_sql": "SELECT `Customers`.`customer_first_name`, `Customers`.`customer_middle_initial`, `Customers`.`customer_last_name`, `Customer_Payment_Methods`.`payment_method_code` FROM `Customers` JOIN `Customer_Payment_Methods` ON `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id`"
    },
    {
        "question_id": 64,
        "answer_sql": "SELECT Invoices.invoice_status_code, Invoices.invoice_date, Shipments.shipment_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;"
    },
    {
        "question_id": 65,
        "answer_sql": "SELECT `Order_Items`.`order_item_id`, `Invoices`.`invoice_status_code`, `Orders`.`order_status_code`, `Shipments`.`shipment_id`, `Shipments`.`shipment_date`, `Invoices`.`invoice_date` FROM `Order_Items` JOIN `Shipment_Items` ON `Order_Items`.`order_item_id` = `Shipment_Items`.`order_item_id` JOIN `Shipments` ON `Shipment_Items`.`shipment_id` = `Shipments`.`shipment_id` JOIN `Orders` ON `Orders`.`order_id` = `Shipments`.`order_id` JOIN `Invoices` ON `Invoices`.`invoice_number` = `Orders`.`customer_id` WHERE `Invoices`.`invoice_status_code` = 'Paid' AND `Orders`.`order_status_code` = 'Delivered' AND `Shipments`.`shipment_date` IS NOT NULL AND `Invoices`.`invoice_date` IS NOT NULL ORDER BY `Invoices`.`invoice_number`;"
    },
    {
        "question_id": 66,
        "answer_sql": "SELECT Products.product_name, Shipments.shipment_date FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id ORDER BY Products.product_name;"
    },
    {
        "question_id": 67,
        "answer_sql": "SELECT S.shipment_date, P.product_name FROM Shipments AS S JOIN Order_Items AS OI ON S.shipment_id = OI.order_item_id JOIN Products AS P ON OI.product_id = P.product_id ORDER BY S.shipment_date;"
    },
    {
        "question_id": 68,
        "answer_sql": ""
    },
    {
        "question_id": 69,
        "answer_sql": ""
    },
    {
        "question_id": 70,
        "answer_sql": "SELECT Products.product_name, Products.product_color FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE Shipments.shipment_date IS NOT NULL GROUP BY Order_Items.order_item_id;"
    },
    {
        "question_id": 71,
        "answer_sql": "SELECT Products.product_name, Products.product_color FROM Products JOIN Shipment_Items ON Products.product_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id ORDER BY Products.product_name;"
    },
    {
        "question_id": 72,
        "answer_sql": ""
    },
    {
        "question_id": 73,
        "answer_sql": ""
    },
    {
        "question_id": 74,
        "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_status_code, Orders.order_status_code FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id JOIN Invoices ON Shipments.invoice_number = Invoices.invoice_number WHERE Orders.order_status_code != 'Shipped'"
    },
    {
        "question_id": 75,
        "answer_sql": ""
    },
    {
        "question_id": 76,
        "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed, SUM(Order_Items.order_item_status_code * Products.product_price) as total_cost FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed;"
    },
    {
        "question_id": 77,
        "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed, SUM(Order_Items.product_id * Order_Items.order_item_status_code) as total_amount_paid FROM Orders JOIN Shipment_Items ON Orders.order_id = Shipment_Items.order_item_id JOIN Order_Items ON Shipment_Items.order_item_id = Order_Items.order_item_id GROUP BY Orders.order_id, Orders.date_order_placed;"
    },
    {
        "question_id": 78,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) as Total_Customers FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;"
    },
    {
        "question_id": 79,
        "answer_sql": "SELECT COUNT(DISTINCT Orders.customer_id) AS Number_of_Customers FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Invoices ON Shipments.invoice_number = Invoices.invoice_number WHERE Orders.order_status_code = 'ordered'"
    },
    {
        "question_id": 80,
        "answer_sql": "SELECT DISTINCT `Order_Items`.`order_item_status_code` FROM `Order_Items`;"
    },
    {
        "question_id": 81,
        "answer_sql": "SELECT COUNT(DISTINCT `order_item_status_code`) AS `Number of Different Item Status Codes` FROM `Order_Items`;"
    },
    {
        "question_id": 82,
        "answer_sql": "SELECT COUNT(DISTINCT `payment_method_code`) as 'Number of Different Payment Methods' FROM `Customer_Payment_Methods`;"
    },
    {
        "question_id": 83,
        "answer_sql": "SELECT COUNT(DISTINCT `payment_method_code`) FROM `Customer_Payment_Methods` JOIN `Customers` ON `Customer_Payment_Methods`.`customer_id` = `Customers`.`customer_id`;"
    },
    {
        "question_id": 84,
        "answer_sql": "SELECT Customers.login_name, Customers.login_password FROM Customers WHERE Customers.phone_number LIKE '+12%';"
    },
    {
        "question_id": 85,
        "answer_sql": "SELECT Customers.login_name, Customers.login_password FROM Customers WHERE Customers.phone_number LIKE '+12%';"
    },
    {
        "question_id": 86,
        "answer_sql": "SELECT Products.product_size FROM Products WHERE product_name LIKE '%Dell%';"
    },
    {
        "question_id": 87,
        "answer_sql": "SELECT Products.product_size FROM Products WHERE Products.product_name LIKE '%Dell%';"
    },
    {
        "question_id": 88,
        "answer_sql": "SELECT product_price, product_size FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products)"
    },
    {
        "question_id": 89,
        "answer_sql": "SELECT product_name, product_price, product_size FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products) AND product_price > 0;"
    },
    {
        "question_id": 90,
        "answer_sql": "SELECT COUNT(*) FROM Products LEFT JOIN (SELECT product_id FROM Order_Items WHERE order_item_id NOT IN (SELECT order_item_id FROM Shipment_Items)) AS unordered_products ON Products.product_id = unordered_products.product_id WHERE unordered_products.product_id IS NULL;"
    },
    {
        "question_id": 91,
        "answer_sql": "SELECT COUNT(*) FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL;"
    },
    {
        "question_id": 92,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods );"
    },
    {
        "question_id": 93,
        "answer_sql": "SELECT COUNT(*) FROM Customers LEFT JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id WHERE Customer_Payment_Methods.customer_id IS NULL;"
    },
    {
        "question_id": 94,
        "answer_sql": "SELECT Orders.order_status_code, Orders.date_order_placed FROM Orders"
    },
    {
        "question_id": 95,
        "answer_sql": "SELECT Orders.order_status_code, Orders.date_order_placed FROM Orders"
    },
    {
        "question_id": 96,
        "answer_sql": "SELECT `address_line_1`, `town_city`, `county` FROM `Customers` WHERE `country` = 'USA';"
    },
    {
        "question_id": 97,
        "answer_sql": ""
    },
    {
        "question_id": 98,
        "answer_sql": ""
    },
    {
        "question_id": 99,
        "answer_sql": "SELECT Customers.customer_first_name, Products.product_name FROM Customers JOIN Order_Items ON Customers.customer_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Customers.customer_first_name, Products.product_name"
    },
    {
        "question_id": 100,
        "answer_sql": "SELECT COUNT(*) FROM `Shipments`;"
    },
    {
        "question_id": 101,
        "answer_sql": "SELECT COUNT(*) FROM `Products` JOIN `Shipment_Items` ON `Products`.`product_id` = `Shipment_Items`.`order_item_id`;"
    },
    {
        "question_id": 102,
        "answer_sql": "SELECT AVG(product_price) AS 'Product Average Price' FROM Products;"
    },
    {
        "question_id": 103,
        "answer_sql": "SELECT AVG(Products.product_price) AS Average_Product_Price FROM Products;"
    },
    {
        "question_id": 104,
        "answer_sql": "SELECT AVG(product_price) as Average_Price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id"
    },
    {
        "question_id": 105,
        "answer_sql": "SELECT AVG(product_price) as average_product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id;"
    },
    {
        "question_id": 106,
        "answer_sql": "SELECT Customers.email_address, Customers.town_city, Customers.county FROM Customers WHERE Customers.gender_code IN (SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY COUNT(*) ASC LIMIT 1)"
    },
    {
        "question_id": 107,
        "answer_sql": "SELECT Customers.email_address, Customers.town_city, Customers.county FROM Customers JOIN (SELECT customer_id, COUNT(*) as orders_count FROM Orders GROUP BY customer_id ORDER BY orders_count ASC LIMIT 1) as orders_count ON Customers.customer_id = orders_count.customer_id"
    },
    {
        "question_id": 108,
        "answer_sql": "SELECT Orders.date_order_placed FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id GROUP BY Orders.date_order_placed HAVING COUNT(DISTINCT Customer_Payment_Methods.payment_method_code) >= 2;"
    },
    {
        "question_id": 109,
        "answer_sql": "SELECT Orders.date_order_placed FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id GROUP BY Orders.date_order_placed HAVING COUNT(DISTINCT Customer_Payment_Methods.payment_method_code) >= 2;"
    },
    {
        "question_id": 110,
        "answer_sql": "SELECT o.order_status_code FROM Orders o WHERE o.order_status_code NOT IN ( SELECT o.order_status_code FROM Orders o GROUP BY o.order_status_code HAVING COUNT(*) = 1 ) ORDER BY o.order_status_code DESC LIMIT 1;"
    },
    {
        "question_id": 111,
        "answer_sql": "SELECT o.order_status_code, COUNT(*) as frequency FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id GROUP BY o.order_status_code ORDER BY frequency ASC LIMIT 1;"
    },
    {
        "question_id": 112,
        "answer_sql": "SELECT Products.product_id, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id GROUP BY Products.product_id, Products.product_name HAVING COUNT(Order_Items.order_item_id) > 3;"
    },
    {
        "question_id": 113,
        "answer_sql": "SELECT Products.product_id, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id GROUP BY Products.product_id, Products.product_name HAVING COUNT(Order_Items.order_item_id) > 3;"
    },
    {
        "question_id": 114,
        "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number GROUP BY Invoices.invoice_number, Invoices.invoice_date HAVING COUNT(Shipments.shipment_id) >= 2;"
    },
    {
        "question_id": 115,
        "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number GROUP BY Invoices.invoice_number, Invoices.invoice_date HAVING COUNT(Shipments.shipment_id) >= 2;"
    },
    {
        "question_id": 116,
        "answer_sql": "SELECT Shipments.shipment_date, Shipments.shipment_tracking_number FROM Shipments"
    },
    {
        "question_id": 117,
        "answer_sql": "SELECT `shipment_tracking_number`, `shipment_date` FROM `Shipments`"
    },
    {
        "question_id": 118,
        "answer_sql": "SELECT Products.product_color, Products.product_description, Products.product_size FROM Products WHERE Products.product_price < ( SELECT MAX(Products.product_price) FROM Products );"
    },
    {
        "question_id": 119,
        "answer_sql": "SELECT Products.product_color, Products.product_description, Products.product_size, Products.product_price FROM Products WHERE Products.product_price < (SELECT MAX(product_price) FROM Products);"
    },
    {
        "question_id": 120,
        "answer_sql": "SELECT D.Name FROM director D WHERE D.Age > ( SELECT AVG(D2.Age) FROM director D2 );"
    },
    {
        "question_id": 121,
        "answer_sql": "SELECT d.Name FROM director d WHERE d.Age = (SELECT MAX(Age) FROM director);"
    },
    {
        "question_id": 122,
        "answer_sql": "SELECT COUNT(*) FROM channel JOIN director_admin ON channel.Channel_ID = director_admin.Channel_ID JOIN director ON director_admin.Director_ID = director.Director_ID JOIN program ON channel.Channel_ID = program.Channel_ID WHERE program.Title LIKE '%bbc%' AND director_admin.Is_first_director = TRUE;"
    },
    {
        "question_id": 123,
        "answer_sql": "SELECT COUNT(DISTINCT Digital_terrestrial_channel) FROM channel;"
    },
    {
        "question_id": 124,
        "answer_sql": "SELECT Title, Start_Year FROM program ORDER BY Start_Year DESC;"
    },
    {
        "question_id": 125,
        "answer_sql": "SELECT d.Name, COUNT(p.Program_ID) as Total_Programs FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID JOIN program p ON da.Channel_ID = p.Channel_ID GROUP BY d.Name ORDER BY Total_Programs DESC LIMIT 1;"
    },
    {
        "question_id": 126,
        "answer_sql": ""
    },
    {
        "question_id": 127,
        "answer_sql": "SELECT Title FROM program WHERE Start_Year = (SELECT MAX(Start_Year) FROM program);"
    },
    {
        "question_id": 128,
        "answer_sql": "SELECT channel.Name, channel.Analogue_terrestrial_channel, channel.Digital_terrestrial_channel, channel.Internet FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY channel.Name, channel.Analogue_terrestrial_channel, channel.Digital_terrestrial_channel, channel.Internet HAVING COUNT(program.Program_ID) > 1;"
    },
    {
        "question_id": 129,
        "answer_sql": "SELECT c.Name, COUNT(p.Program_ID) as Number_of_Programs FROM channel c JOIN program p ON c.Channel_ID = p.Channel_ID GROUP BY c.Channel_ID, c.Name;"
    },
    {
        "question_id": 130,
        "answer_sql": "SELECT COUNT(*) FROM channel LEFT JOIN program ON channel.Channel_ID = program.Channel_ID WHERE program.Channel_ID IS NULL;"
    },
    {
        "question_id": 131,
        "answer_sql": ""
    },
    {
        "question_id": 132,
        "answer_sql": "SELECT c.Name, c.Internet FROM channel c JOIN (SELECT d.Name, d.Director_ID, COUNT(d.Director_ID) as Num_Directors FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID GROUP BY d.Director_ID ORDER BY Num_Directors DESC LIMIT 1) pd ON c.Channel_ID = pd.Director_ID"
    },
    {
        "question_id": 133,
        "answer_sql": "SELECT d.Name FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID WHERE d.Age BETWEEN 30 AND 60;"
    },
    {
        "question_id": 134,
        "answer_sql": "SELECT channel.Name FROM channel JOIN director_admin ON channel.Channel_ID = director_admin.Channel_ID JOIN director ON director_admin.Director_ID = director.Director_ID WHERE director.Age >= 40 AND director.Age <= 60;"
    },
    {
        "question_id": 135,
        "answer_sql": "SELECT Channel_ID , Name FROM channel WHERE Channel_ID NOT IN (SELECT Channel_ID FROM director_admin WHERE Director_ID IN (SELECT Director_ID FROM director WHERE Name = 'Hank Baskett'));"
    },
    {
        "question_id": 136,
        "answer_sql": "SELECT COUNT(DISTINCT radio.Radio_ID) FROM radio JOIN city_channel_radio ON radio.Radio_ID = city_channel_radio.Radio_ID JOIN city_channel ON city_channel_radio.City_channel_ID = city_channel.ID;"
    },
    {
        "question_id": 137,
        "answer_sql": "SELECT r.Transmitter FROM radio r JOIN city_channel_radio cc ON r.Radio_ID = cc.Radio_ID JOIN city_channel c ON cc.City_channel_ID = c.ID ORDER BY r.ERP_kW ASC;"
    },
    {
        "question_id": 138,
        "answer_sql": "SELECT tv_show_name , Original_Airdate FROM tv_show ;"
    },
    {
        "question_id": 139,
        "answer_sql": "SELECT c.Station_name FROM city_channel c WHERE c.Affiliation <> 'ABC';"
    },
    {
        "question_id": 140,
        "answer_sql": "SELECT r.Transmitter FROM radio r WHERE CAST(r.ERP_kW AS INTEGER) > 150 OR CAST(r.ERP_kW AS INTEGER) < 30;"
    },
    {
        "question_id": 141,
        "answer_sql": "SELECT radio.Transmitter, radio.ERP_kW FROM radio JOIN city_channel_radio ON radio.Radio_ID = city_channel_radio.Radio_ID WHERE radio.ERP_kW = (SELECT MAX(ERP_kW) FROM radio);"
    },
    {
        "question_id": 142,
        "answer_sql": "SELECT AVG(ERP_kW) FROM radio;"
    },
    {
        "question_id": 143,
        "answer_sql": "SELECT Affiliation, COUNT(*) FROM city_channel GROUP BY Affiliation;"
    },
    {
        "question_id": 144,
        "answer_sql": "SELECT city_channel.Affiliation, COUNT(*) as 'Count' FROM city_channel JOIN city_channel_radio ON city_channel.ID = city_channel_radio.City_channel_ID JOIN radio ON city_channel_radio.Radio_ID = radio.Radio_ID GROUP BY city_channel.Affiliation ORDER BY 'Count' DESC LIMIT 1;"
    },
    {
        "question_id": 145,
        "answer_sql": "SELECT DISTINCT Affiliation FROM city_channel WHERE ID IN (SELECT DISTINCT City_channel_ID FROM city_channel_radio) AND Affiliation IN (SELECT DISTINCT Affiliation FROM city_channel WHERE ID IN (SELECT DISTINCT City_channel_ID FROM city_channel_radio)) GROUP BY Affiliation HAVING COUNT(DISTINCT ID) > 3;"
    },
    {
        "question_id": 146,
        "answer_sql": "SELECT City , Station_name FROM city_channel ORDER BY Station_name ASC;"
    },
    {
        "question_id": 147,
        "answer_sql": "SELECT radio.Transmitter, city_channel.City FROM radio JOIN city_channel_radio ON radio.Radio_ID = city_channel_radio.Radio_ID JOIN city_channel ON city_channel.ID = city_channel_radio.City_channel_ID;"
    },
    {
        "question_id": 148,
        "answer_sql": "SELECT r.Transmitter, c.Station_name FROM radio r JOIN city_channel_radio cc ON r.Radio_ID = cc.Radio_ID JOIN city_channel c ON cc.City_channel_ID = c.ID ORDER BY r.ERP_kW DESC;"
    },
    {
        "question_id": 149,
        "answer_sql": "SELECT r.Transmitter, COUNT(DISTINCT ccr.City_channel_ID) as 'Number_of_City_Channels' FROM radio r JOIN city_channel_radio ccr ON r.Radio_ID = ccr.Radio_ID GROUP BY r.Transmitter;"
    },
    {
        "question_id": 150,
        "answer_sql": "SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio) OR Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_tv_show);"
    },
    {
        "question_id": 151,
        "answer_sql": "SELECT vehicle.Model FROM vehicle JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE vehicle.Power > 6000 AND vehicle.Top_Speed = ( SELECT MAX(Top_Speed) FROM vehicle WHERE Power > 6000 ) AND driver.Racing_Series IS NOT NULL;"
    },
    {
        "question_id": 152,
        "answer_sql": "SELECT v.Model, v.Top_Speed FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE v.Power > 6000 GROUP BY v.Model, v.Top_Speed ORDER BY v.Top_Speed DESC LIMIT 1;"
    },
    {
        "question_id": 153,
        "answer_sql": "SELECT D.Name FROM driver D JOIN vehicle_driver V ON D.Driver_ID = V.Driver_ID WHERE D.Citizenship = 'United States';"
    },
    {
        "question_id": 154,
        "answer_sql": "SELECT driver . Name FROM driver WHERE driver . Citizenship = 'United States';"
    },
    {
        "question_id": 155,
        "answer_sql": "SELECT d.Driver_ID, d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID GROUP BY d.Driver_ID HAVING COUNT(vd.Vehicle_ID) = ( SELECT COUNT(vd2.Vehicle_ID) FROM vehicle_driver vd2 WHERE vd2.Driver_ID = d.Driver_ID ) ORDER BY COUNT(vd.Vehicle_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 156,
        "answer_sql": "SELECT d.Name, COUNT(v.Vehicle_ID) as Vehicle_Count FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID GROUP BY d.Name ORDER BY Vehicle_Count DESC LIMIT 1;"
    },
    {
        "question_id": 157,
        "answer_sql": "SELECT MAX(Power) as Max_Power, AVG(Power) as Avg_Power FROM vehicle WHERE Builder = 'Zhuzhou';"
    },
    {
        "question_id": 158,
        "answer_sql": "SELECT MAX(vehicle.Power) as Maximum_Power, AVG(vehicle.Power) as Average_Power FROM vehicle JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE driver.Name = 'Zhuzhou'"
    },
    {
        "question_id": 159,
        "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(vd.Driver_ID) ASC LIMIT 1;"
    },
    {
        "question_id": 160,
        "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(vd.Driver_ID) ASC LIMIT 1;"
    },
    {
        "question_id": 161,
        "answer_sql": "SELECT Top_Speed , Power FROM vehicle WHERE Build_Year = '1996';"
    },
    {
        "question_id": 162,
        "answer_sql": "SELECT Top_Speed , Power FROM vehicle WHERE Build_Year = '1996';"
    },
    {
        "question_id": 163,
        "answer_sql": "SELECT Build_Year , Model , Builder FROM vehicle ;"
    },
    {
        "question_id": 164,
        "answer_sql": "SELECT vehicle . Build_Year , vehicle . Model , vehicle . Builder FROM vehicle JOIN vehicle_driver ON vehicle . Vehicle_ID = vehicle_driver . Vehicle_ID JOIN driver ON vehicle_driver . Driver_ID = driver . Driver_ID ;"
    },
    {
        "question_id": 165,
        "answer_sql": "SELECT COUNT(*) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Build_Year = '2012';"
    },
    {
        "question_id": 166,
        "answer_sql": "SELECT COUNT(DISTINCT vd.Driver_ID) FROM vehicle_driver vd JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Build_Year = '2012';"
    },
    {
        "question_id": 167,
        "answer_sql": "SELECT COUNT(DISTINCT driver.Citizenship) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID WHERE driver.Racing_Series = 'NASCAR';"
    },
    {
        "question_id": 168,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Racing_Series = 'NASCAR';"
    },
    {
        "question_id": 169,
        "answer_sql": "SELECT AVG( Top_Speed ) FROM vehicle ;"
    },
    {
        "question_id": 170,
        "answer_sql": "SELECT AVG( Top_Speed ) FROM vehicle ;"
    },
    {
        "question_id": 171,
        "answer_sql": "SELECT DISTINCT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Power > 5000;"
    },
    {
        "question_id": 172,
        "answer_sql": "SELECT D.Name FROM driver D JOIN vehicle_driver VD ON D.Driver_ID = VD.Driver_ID JOIN vehicle V ON VD.Vehicle_ID = V.Vehicle_ID WHERE V.Power > 5000;"
    },
    {
        "question_id": 173,
        "answer_sql": "SELECT v.Model, v.Build_Year, v.Top_Speed, v.Power, v.Builder, v.Total_Production FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Total_Production > '100' AND v.Top_Speed > 150;"
    },
    {
        "question_id": 174,
        "answer_sql": "SELECT vehicle . Model FROM vehicle JOIN vehicle_driver ON vehicle . Vehicle_ID = vehicle_driver . Vehicle_ID WHERE ( vehicle . Total_Production > 100 OR vehicle . Top_Speed > 150) GROUP BY vehicle . Vehicle_ID , vehicle . Model ;"
    },
    {
        "question_id": 175,
        "answer_sql": "SELECT Model, Build_Year FROM vehicle WHERE Model LIKE '%DJ%'"
    },
    {
        "question_id": 176,
        "answer_sql": "SELECT v.Model, v.Build_Year FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE v.Model LIKE '%DJ%'"
    },
    {
        "question_id": 177,
        "answer_sql": "SELECT vehicle.Model FROM vehicle LEFT JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID WHERE vehicle_driver.Driver_ID IS NULL;"
    },
    {
        "question_id": 178,
        "answer_sql": "SELECT vehicle.Model FROM vehicle LEFT JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID WHERE vehicle_driver.Driver_ID IS NULL;"
    },
    {
        "question_id": 179,
        "answer_sql": ""
    },
    {
        "question_id": 180,
        "answer_sql": ""
    },
    {
        "question_id": 181,
        "answer_sql": ""
    },
    {
        "question_id": 182,
        "answer_sql": "SELECT vehicle.Vehicle_ID, vehicle.Model FROM vehicle JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE driver.Name IN ('Jeff Gordon') OR (SELECT COUNT(*) FROM vehicle_driver WHERE Vehicle_ID = vehicle.Vehicle_ID) > 2 GROUP BY vehicle.Vehicle_ID, vehicle.Model;"
    },
    {
        "question_id": 183,
        "answer_sql": "SELECT MAX(Top_Speed) FROM vehicle;"
    },
    {
        "question_id": 184,
        "answer_sql": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle);"
    },
    {
        "question_id": 185,
        "answer_sql": "SELECT Name FROM driver ORDER BY Name;"
    },
    {
        "question_id": 186,
        "answer_sql": "SELECT Name FROM driver ORDER BY Name;"
    },
    {
        "question_id": 187,
        "answer_sql": "SELECT driver.Racing_Series, COUNT(vehicle_driver.Driver_ID) as Total_Drivers FROM driver LEFT JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID GROUP BY driver.Racing_Series;"
    },
    {
        "question_id": 188,
        "answer_sql": "SELECT d.Racing_Series, COUNT(v.Vehicle_ID) FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID GROUP BY d.Racing_Series;"
    },
    {
        "question_id": 189,
        "answer_sql": "SELECT d.Name, d.Citizenship FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Model = 'DJ1';"
    },
    {
        "question_id": 190,
        "answer_sql": "SELECT d.Name, d.Citizenship FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Model = 'DJ1';"
    },
    {
        "question_id": 191,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver);"
    },
    {
        "question_id": 192,
        "answer_sql": "SELECT COUNT(*) FROM driver LEFT JOIN vehicle_driver AS dv ON driver.Driver_ID = dv.Driver_ID WHERE dv.Vehicle_ID IS NULL;"
    },
    {
        "question_id": 193,
        "answer_sql": "SELECT COUNT(*) FROM Exams;"
    },
    {
        "question_id": 194,
        "answer_sql": "SELECT COUNT(*) FROM Exams;"
    },
    {
        "question_id": 195,
        "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"
    },
    {
        "question_id": 196,
        "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code;"
    },
    {
        "question_id": 197,
        "answer_sql": "SELECT Exams.Exam_Name, Exams.Exam_Date FROM Exams WHERE Subject_Code != 'Database'"
    },
    {
        "question_id": 198,
        "answer_sql": "SELECT Exams.Exam_Date, Exams.Exam_Name, Exams.Subject_Code FROM Exams WHERE Exams.Subject_Code != 'Database';"
    },
    {
        "question_id": 199,
        "answer_sql": "SELECT Exams.Exam_Date, Exams.Subject_Code FROM Exams WHERE Exams.Subject_Code LIKE '%data%' ORDER BY Exams.Exam_Date DESC;"
    },
    {
        "question_id": 200,
        "answer_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC;"
    },
    {
        "question_id": 201,
        "answer_sql": "SELECT Questions.Type_of_Question_Code, COUNT(*) FROM Questions JOIN Questions_in_Exams ON Questions.Question_ID = Questions_in_Exams.Question_ID JOIN Student_Answers ON Student_Answers.Question_ID = Questions_in_Exams.Question_ID GROUP BY Questions.Type_of_Question_Code;"
    },
    {
        "question_id": 202,
        "answer_sql": "SELECT Questions.Type_of_Question_Code, COUNT(*) FROM Questions JOIN Questions_in_Exams ON Questions.Question_ID = Questions_in_Exams.Question_ID GROUP BY Questions.Type_of_Question_Code"
    },
    {
        "question_id": 203,
        "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal' GROUP BY Student_Answer_Text;"
    },
    {
        "question_id": 204,
        "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal' GROUP BY Student_Answer_Text;"
    },
    {
        "question_id": 205,
        "answer_sql": "SELECT COUNT(DISTINCT Comments) as Number_of_Different_Comments FROM Student_Answers;"
    },
    {
        "question_id": 206,
        "answer_sql": "SELECT COUNT(DISTINCT Student_Answers.Comments) as 'Number of different comments' FROM Student_Answers JOIN Student_Assessments ON Student_Answers.Student_Answer_ID = Student_Assessments.Student_Answer_ID;"
    },
    {
        "question_id": 207,
        "answer_sql": "SELECT Student_Answer_Text, COUNT(*) as Answer_Count FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY Answer_Count DESC;"
    },
    {
        "question_id": 208,
        "answer_sql": "SELECT Questions.Question_ID, Questions.Type_of_Question_Code, Questions.Question_Text, Student_Answers.Student_Answer_Text, COUNT(Student_Answers.Student_Answer_Text) as Frequency FROM Questions JOIN Questions_in_Exams ON Questions.Question_ID = Questions_in_Exams.Question_ID JOIN Student_Answers ON Student_Answers.Question_ID = Questions.Question_ID JOIN Exams ON Exams.Exam_ID = Student_Answers.Exam_ID WHERE Student_Answers.Student_Answer_Text IN (SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC) GROUP BY Questions.Question_ID, Questions.Type_of_Question_Code, Questions.Question_Text, Student_Answers.Student_Answer_Text ORDER BY Frequency DESC;"
    },
    {
        "question_id": 209,
        "answer_sql": "SELECT First_Name, Date_of_Answer FROM Students INNER JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID;"
    },
    {
        "question_id": 210,
        "answer_sql": "SELECT First_Name, Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID;"
    },
    {
        "question_id": 211,
        "answer_sql": "SELECT Email_Adress, Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID ORDER BY Date_of_Answer DESC;"
    },
    {
        "question_id": 212,
        "answer_sql": "SELECT Students.Email_Adress, Student_Answers.Date_of_Answer FROM Student_Answers JOIN Students ON Student_Answers.Student_ID = Students.Student_ID JOIN Questions ON Student_Answers.Question_ID = Questions.Question_ID JOIN Valid_Answers ON Student_Answers.Student_Answer_Text = Valid_Answers.Valid_Answer_Text ORDER BY Student_Answers.Date_of_Answer DESC;"
    },
    {
        "question_id": 213,
        "answer_sql": "SELECT Student_Answer_Text FROM Student_Assessments WHERE Assessment = (SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1);"
    },
    {
        "question_id": 214,
        "answer_sql": "SELECT Assessment, COUNT(*) as Frequency FROM Student_Assessments GROUP BY Assessment ORDER BY Frequency ASC LIMIT 1;"
    },
    {
        "question_id": 215,
        "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID IN (SELECT Student_ID FROM Student_Answers GROUP BY Student_ID HAVING COUNT(Student_Answer_ID) >= 2);"
    },
    {
        "question_id": 216,
        "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID IN ( SELECT Student_ID FROM Student_Answers GROUP BY Student_ID HAVING COUNT(*) >= 2 );"
    },
    {
        "question_id": 217,
        "answer_sql": "SELECT Valid_Answer_Text FROM Valid_Answers WHERE Question_ID IN (SELECT Question_ID FROM Questions_in_Exams GROUP BY Question_ID HAVING COUNT(Question_ID) = (SELECT COUNT(Question_ID) FROM Questions_in_Exams GROUP BY Question_ID ORDER BY COUNT(Question_ID) DESC LIMIT 1))"
    },
    {
        "question_id": 218,
        "answer_sql": "SELECT Valid_Answers.Valid_Answer_Text, COUNT(*) as Frequency FROM Student_Assessments JOIN Valid_Answers ON Student_Assessments.Valid_Answer_ID = Valid_Answers.Valid_Answer_ID GROUP BY Valid_Answers.Valid_Answer_Text ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 219,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU <> 'M';"
    },
    {
        "question_id": 220,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU <> 'M';"
    },
    {
        "question_id": 221,
        "answer_sql": "SELECT Gender_MFU, COUNT(*) FROM Students WHERE Gender_MFU IN ('M', 'F') GROUP BY Gender_MFU;"
    },
    {
        "question_id": 222,
        "answer_sql": "SELECT Gender_MFU, COUNT(*) FROM Students WHERE Gender_MFU IN ('M', 'F') GROUP BY Gender_MFU;"
    },
    {
        "question_id": 223,
        "answer_sql": "SELECT Students.Last_Name FROM Students WHERE Students.Gender_MFU IN ('F', 'M');"
    },
    {
        "question_id": 224,
        "answer_sql": "SELECT Students.Last_Name FROM Students WHERE Students.Gender_MFU IN ('F', 'M');"
    },
    {
        "question_id": 225,
        "answer_sql": "SELECT Students.First_Name FROM Students LEFT JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID WHERE Student_Answers.Student_ID IS NULL;"
    },
    {
        "question_id": 226,
        "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers);"
    },
    {
        "question_id": 227,
        "answer_sql": ""
    },
    {
        "question_id": 228,
        "answer_sql": ""
    },
    {
        "question_id": 229,
        "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(Question_ID) >= 3;"
    },
    {
        "question_id": 230,
        "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(Question_ID) >= 3;"
    },
    {
        "question_id": 231,
        "answer_sql": "SELECT * FROM Students;"
    },
    {
        "question_id": 232,
        "answer_sql": "SELECT * FROM Students;"
    },
    {
        "question_id": 233,
        "answer_sql": "SELECT COUNT(*) FROM Addresses;"
    },
    {
        "question_id": 234,
        "answer_sql": "SELECT COUNT(*) FROM Addresses;"
    },
    {
        "question_id": 235,
        "answer_sql": "SELECT `Addresses`.`address_id`, `Addresses`.`address_details` FROM `Customers` JOIN `Addresses` ON `Customers`.`address_id` = `Addresses`.`address_id`;"
    },
    {
        "question_id": 236,
        "answer_sql": "SELECT Addresses.address_id, Addresses.address_details FROM Addresses;"
    },
    {
        "question_id": 237,
        "answer_sql": "SELECT COUNT(*) FROM Products;"
    },
    {
        "question_id": 238,
        "answer_sql": "SELECT COUNT(*) FROM Products;"
    },
    {
        "question_id": 239,
        "answer_sql": "SELECT `product_id`, `product_type_code`, `product_name` FROM `Products`;"
    },
    {
        "question_id": 240,
        "answer_sql": "SELECT Products.product_id, Products.product_type_code, Products.product_name, Products.product_price FROM Products;"
    },
    {
        "question_id": 241,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products WHERE product_name = 'Monitor';"
    },
    {
        "question_id": 242,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products WHERE Products.product_name = 'Monitor';"
    },
    {
        "question_id": 243,
        "answer_sql": "SELECT MIN(product_price) as min_price, AVG(product_price) as avg_price, MAX(product_price) as max_price FROM Products;"
    },
    {
        "question_id": 244,
        "answer_sql": "SELECT MIN(Products.product_price) AS Minimum_Price, AVG(Products.product_price) AS Average_Price, MAX(Products.product_price) AS Maximum_Price FROM Products;"
    },
    {
        "question_id": 245,
        "answer_sql": "SELECT AVG(Products.product_price) AS average_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Clothes';"
    },
    {
        "question_id": 246,
        "answer_sql": "SELECT AVG(Products.product_price) AS Average_Price FROM Products WHERE Products.product_type_code = 'Clothes';"
    },
    {
        "question_id": 247,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';"
    },
    {
        "question_id": 248,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';"
    },
    {
        "question_id": 249,
        "answer_sql": "SELECT product_name, product_price FROM Products WHERE product_price > ( SELECT AVG(product_price) FROM Products )"
    },
    {
        "question_id": 250,
        "answer_sql": "SELECT product_name FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products);"
    },
    {
        "question_id": 251,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' AND Products.product_price > ( SELECT AVG(Products.product_price) FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' )"
    },
    {
        "question_id": 252,
        "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Hardware' AND product_price > ( SELECT AVG(product_price) FROM Products WHERE product_type_code = 'Hardware' );"
    },
    {
        "question_id": 253,
        "answer_sql": "SELECT Products.product_name, Products.product_price, Products.product_type_code, Products.product_id FROM Products WHERE Products.product_type_code = 'Clothes' ORDER BY Products.product_price DESC LIMIT 1;"
    },
    {
        "question_id": 254,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products WHERE Products.product_price = (SELECT MAX(Products.product_price) FROM Products);"
    },
    {
        "question_id": 255,
        "answer_sql": "SELECT Products.product_id, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customers ON Order_Items.order_id = Customers.customer_id WHERE Products.product_type_code = 'Hardware' AND Order_Items.order_quantity = ( SELECT MIN(order_quantity) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id JOIN Customers ON Order_Items.order_id = Customers.customer_id WHERE Products.product_type_code = 'Hardware' )"
    },
    {
        "question_id": 256,
        "answer_sql": "SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC LIMIT 1;"
    },
    {
        "question_id": 257,
        "answer_sql": "SELECT `product_name`, `product_price` FROM `Products` ORDER BY `product_price` DESC;"
    },
    {
        "question_id": 258,
        "answer_sql": "SELECT `product_name`, `product_price` FROM `Products` ORDER BY `product_price` DESC;"
    },
    {
        "question_id": 259,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' ORDER BY Products.product_price ASC;"
    },
    {
        "question_id": 260,
        "answer_sql": "SELECT Products.product_name, Products.product_price, Products.product_type_code FROM Products WHERE Products.product_type_code = 'Hardware' ORDER BY Products.product_price ASC;"
    },
    {
        "question_id": 261,
        "answer_sql": "SELECT `product_type_code`, COUNT(`product_id`) as `product_count` FROM `Products` GROUP BY `product_type_code`;"
    },
    {
        "question_id": 262,
        "answer_sql": "SELECT `product_type_code`, COUNT(`product_id`) as 'Number of Products' FROM `Products` GROUP BY `product_type_code`;"
    },
    {
        "question_id": 263,
        "answer_sql": "SELECT Products.product_type_code, AVG(Products.product_price) as average_price FROM Products GROUP BY Products.product_type_code;"
    },
    {
        "question_id": 264,
        "answer_sql": "SELECT `product_type_code`, AVG(`product_price`) as `average_price` FROM `Products` GROUP BY `product_type_code`;"
    },
    {
        "question_id": 265,
        "answer_sql": "SELECT Products.product_type_code FROM Products GROUP BY Products.product_type_code HAVING COUNT(Products.product_id) >= 2;"
    },
    {
        "question_id": 266,
        "answer_sql": "SELECT Products.product_type_code FROM Products GROUP BY Products.product_type_code HAVING COUNT(Products.product_id) >= 2;"
    },
    {
        "question_id": 267,
        "answer_sql": "SELECT `product_type_code`, COUNT(`product_id`) as `product_count` FROM `Products` GROUP BY `product_type_code` ORDER BY `product_count` DESC LIMIT 1;"
    },
    {
        "question_id": 268,
        "answer_sql": "SELECT Products.product_type_code, COUNT(Products.product_id) as frequency FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Products.product_type_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 269,
        "answer_sql": "SELECT COUNT(*) FROM Customers JOIN Addresses ON Customers.address_id = Addresses.address_id;"
    },
    {
        "question_id": 270,
        "answer_sql": "SELECT COUNT(*) FROM Customers;"
    },
    {
        "question_id": 271,
        "answer_sql": "SELECT `Customers`.`customer_id`, `Customers`.`customer_name` FROM `Customers`;"
    },
    {
        "question_id": 272,
        "answer_sql": "SELECT customer_id, customer_name FROM Customers;"
    },
    {
        "question_id": 273,
        "answer_sql": "SELECT `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy';"
    },
    {
        "question_id": 274,
        "answer_sql": "SELECT Addresses.address_details, Customers.customer_phone, Customers.customer_email, Customers.customer_name FROM Customers JOIN Addresses ON Customers.address_id = Addresses.address_id WHERE Customers.customer_name = 'Jeromy';"
    },
    {
        "question_id": 275,
        "answer_sql": "SELECT `payment_method_code`, COUNT(`customer_id`) as `Number of Customers` FROM `Customers` GROUP BY `payment_method_code`;"
    },
    {
        "question_id": 276,
        "answer_sql": "SELECT Customers.payment_method_code, COUNT(Customers.customer_id) as customer_count FROM Customers GROUP BY Customers.payment_method_code;"
    },
    {
        "question_id": 277,
        "answer_sql": "SELECT Customers.payment_method_code, COUNT(Customers.customer_number) as customer_count FROM Customers GROUP BY Customers.payment_method_code ORDER BY customer_count DESC LIMIT 1;"
    },
    {
        "question_id": 278,
        "answer_sql": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 279,
        "answer_sql": "SELECT Customers.customer_name, Customers.customer_address, Customers.customer_phone, Customers.customer_email, Customers.payment_method_code FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customers.customer_id IN ( SELECT customer_id FROM Customer_Orders GROUP BY customer_id ORDER BY COUNT(order_id) ASC LIMIT 1 )"
    },
    {
        "question_id": 280,
        "answer_sql": "SELECT Customers.customer_name, Customers.payment_method_code FROM Customers WHERE Customers.payment_method_code IN ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) ASC LIMIT 1 )"
    },
    {
        "question_id": 281,
        "answer_sql": "SELECT `Customers`.`customer_name`, `Customers`.`customer_number`, `Customers`.`customer_name`, `Customers`.`customer_number` FROM `Customers` WHERE `Customers`.`customer_name` = 'Jeromy';"
    },
    {
        "question_id": 282,
        "answer_sql": "SELECT Customers.payment_method_code, Customers.customer_number FROM Customers WHERE Customers.customer_name = 'Jeromy';"
    },
    {
        "question_id": 283,
        "answer_sql": "SELECT DISTINCT Customers.payment_method_code FROM Customers JOIN Order_Items ON Customers.customer_id = Order_Items.order_id"
    },
    {
        "question_id": 284,
        "answer_sql": "SELECT Customers.payment_method_code FROM Customers WHERE Customers.customer_name IN (SELECT customer_name FROM Customers WHERE payment_method_code IS NOT NULL);"
    },
    {
        "question_id": 285,
        "answer_sql": "SELECT Products.product_id, Products.product_type_code FROM Products ORDER BY Products.product_name;"
    },
    {
        "question_id": 286,
        "answer_sql": "SELECT Products.product_id, Products.product_type_code, Products.product_name FROM Products ORDER BY Products.product_name ASC;"
    },
    {
        "question_id": 287,
        "answer_sql": "SELECT Products.product_type_code, COUNT(Products.product_id) as product_count FROM Products GROUP BY Products.product_type_code ORDER BY product_count ASC LIMIT 1;"
    },
    {
        "question_id": 288,
        "answer_sql": "SELECT Products.product_type_code FROM Products JOIN ( SELECT order_item_id, product_id FROM Order_Items GROUP BY product_id ORDER BY COUNT(*) ASC LIMIT 1 ) AS subquery ON Products.product_id = subquery.product_id ORDER BY Products.product_type_code ASC LIMIT 1;"
    },
    {
        "question_id": 289,
        "answer_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "question_id": 290,
        "answer_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "question_id": 291,
        "answer_sql": "SELECT `Customer_Orders`.`order_id`, `Customer_Orders`.`order_date`, `Customer_Orders`.`order_status_code` FROM `Customer_Orders` JOIN `Customers` ON `Customer_Orders`.`customer_id` = `Customers`.`customer_id` WHERE `Customers`.`customer_name` = 'Jeromy'"
    },
    {
        "question_id": 292,
        "answer_sql": "SELECT `order_id`, `order_date`, `order_status_code` FROM `Customer_Orders` JOIN `Customers` ON `Customer_Orders`.`customer_id` = `Customers`.`customer_id` WHERE `Customers`.`customer_name` = 'Jeromy'"
    },
    {
        "question_id": 293,
        "answer_sql": "SELECT Customers.customer_id, Customers.customer_name, COUNT(Customer_Orders.order_id) as Number_of_Orders FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id, Customers.customer_name ORDER BY Number_of_Orders DESC;"
    },
    {
        "question_id": 294,
        "answer_sql": "SELECT Customers.customer_name, Customers.customer_id, Customers.customer_number, COUNT(Customer_Orders.order_id) AS Number_of_Orders FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id, Customers.customer_name, Customers.customer_number;"
    },
    {
        "question_id": 295,
        "answer_sql": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email ORDER BY COUNT(Order_Items.product_id) DESC LIMIT 1;"
    },
    {
        "question_id": 296,
        "answer_sql": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Customers.customer_id ORDER BY COUNT(Order_Items.order_id) DESC LIMIT 1;"
    },
    {
        "question_id": 297,
        "answer_sql": "SELECT Order_Items.product_id, Products.product_name, COUNT(Order_Items.order_id) as total_orders FROM Order_Items JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Order_Items.product_id, Products.product_name ORDER BY total_orders DESC;"
    },
    {
        "question_id": 298,
        "answer_sql": "SELECT Customer_Orders.order_status_code, COUNT(Customer_Orders.order_id) as Order_Count FROM Customer_Orders GROUP BY Customer_Orders.order_status_code;"
    },
    {
        "question_id": 299,
        "answer_sql": "SELECT Customers.customer_name, Customer_Orders.order_status_code, COUNT(Customer_Orders.order_id) as order_count FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customer_Orders.order_status_code, Customers.customer_name ORDER BY order_count DESC LIMIT 1;"
    },
    {
        "question_id": 300,
        "answer_sql": "SELECT o.order_status_code, COUNT(o.order_status_code) as frequency FROM Customer_Orders o GROUP BY o.order_status_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 301,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders);"
    },
    {
        "question_id": 302,
        "answer_sql": "SELECT COUNT(*) FROM Customers LEFT JOIN (SELECT customer_id FROM Customer_Orders WHERE order_id IS NULL) AS unordered_customers ON Customers.customer_id = unordered_customers.customer_id WHERE unordered_customers.customer_id IS NULL;"
    },
    {
        "question_id": 303,
        "answer_sql": "SELECT Products.product_name FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.order_id IS NULL;"
    },
    {
        "question_id": 304,
        "answer_sql": "SELECT Products.product_name, Products.product_id FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL;"
    },
    {
        "question_id": 305,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_name = 'Monitor';"
    },
    {
        "question_id": 306,
        "answer_sql": "SELECT COUNT(*) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_type_code = 'Monitor';"
    },
    {
        "question_id": 307,
        "answer_sql": "SELECT COUNT(*) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id WHERE Products.product_name = 'Monitor';"
    },
    {
        "question_id": 308,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_type_code = 'Monitor';"
    },
    {
        "question_id": 309,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id;"
    },
    {
        "question_id": 310,
        "answer_sql": "SELECT COUNT(DISTINCT customer_id) FROM Customer_Orders;"
    },
    {
        "question_id": 311,
        "answer_sql": "SELECT c.customer_id FROM Customers c LEFT JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_id IS NULL;"
    },
    {
        "question_id": 312,
        "answer_sql": "SELECT c.customer_id FROM Customers c LEFT JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_id IS NULL;"
    },
    {
        "question_id": 313,
        "answer_sql": "SELECT Customer_Orders.order_id, Customer_Orders.order_date FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE (Products.product_name, Order_Items.order_quantity) IN ( SELECT product_name, MAX(order_quantity) FROM Order_Items GROUP BY product_id ) OR ( SELECT COUNT(*) FROM Order_Items WHERE Order_Items.order_quantity > 6 ) > 3"
    },
    {
        "question_id": 314,
        "answer_sql": "SELECT order_id, order_date FROM Customer_Orders WHERE order_status_code = 'Delivered' AND (SELECT COUNT(*) FROM Order_Items WHERE Order_Items.order_id = Customer_Orders.order_id) > 3 OR (SELECT SUM(order_quantity) FROM Order_Items WHERE Order_Items.order_id = Customer_Orders.order_id) > 6;"
    },
    {
        "question_id": 315,
        "answer_sql": "SELECT COUNT(*) FROM building;"
    },
    {
        "question_id": 316,
        "answer_sql": "SELECT COUNT(*) FROM building;"
    },
    {
        "question_id": 317,
        "answer_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC;"
    },
    {
        "question_id": 318,
        "answer_sql": "SELECT b.Name, COUNT(b.Number_of_Stories) as Number_of_Stories FROM building b WHERE b.Number_of_Stories IN (SELECT MAX(Number_of_Stories) FROM building) GROUP BY b.Name ORDER BY Number_of_Stories ASC;"
    },
    {
        "question_id": 319,
        "answer_sql": "SELECT b.Address FROM building b WHERE b.Number_of_Stories > 10 ORDER BY b.Completed_Year DESC;"
    },
    {
        "question_id": 320,
        "answer_sql": "SELECT building.Address FROM building ORDER BY building.Completed_Year DESC;"
    },
    {
        "question_id": 321,
        "answer_sql": "SELECT MAX(Number_of_Stories) FROM building WHERE Completed_Year < 1980;"
    },
    {
        "question_id": 322,
        "answer_sql": "SELECT MAX(building.Number_of_Stories) FROM building WHERE building.Completed_Year < 1980;"
    },
    {
        "question_id": 323,
        "answer_sql": "SELECT AVG( Population ) FROM region ;"
    },
    {
        "question_id": 324,
        "answer_sql": "SELECT AVG( region . Population ) as Average_Population FROM region ;"
    },
    {
        "question_id": 325,
        "answer_sql": "SELECT Name FROM region ORDER BY Name ASC;"
    },
    {
        "question_id": 326,
        "answer_sql": "SELECT r.Name FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Name ORDER BY r.Name ASC;"
    },
    {
        "question_id": 327,
        "answer_sql": "SELECT region.Capital FROM region WHERE region.Area > 10000;"
    },
    {
        "question_id": 328,
        "answer_sql": "SELECT region.Name, region.Capital FROM region JOIN building ON region.Region_ID = building.Region_ID WHERE region.Area > 10000;"
    },
    {
        "question_id": 329,
        "answer_sql": "SELECT r.Name as Region, r.Capital as Capital FROM region r WHERE r.Population = (SELECT MAX(Population) FROM region)"
    },
    {
        "question_id": 330,
        "answer_sql": "SELECT r.Name, r.Capital FROM region AS r WHERE r.Population = ( SELECT MAX(r2.Population) FROM region AS r2 );"
    },
    {
        "question_id": 331,
        "answer_sql": "SELECT r.Name FROM region r JOIN ( SELECT Region_ID, COUNT(*) as Count FROM building GROUP BY Region_ID ORDER BY Count DESC LIMIT 5 ) b ON r.Region_ID = b.Region_ID ORDER BY b.Count DESC;"
    },
    {
        "question_id": 332,
        "answer_sql": "SELECT r.Name, r.Area FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Name, r.Area ORDER BY r.Area DESC LIMIT 5;"
    },
    {
        "question_id": 333,
        "answer_sql": "SELECT b.Name, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 334,
        "answer_sql": "SELECT building . Name , region . Name FROM building JOIN region ON building . Region_ID = region . Region_ID"
    },
    {
        "question_id": 335,
        "answer_sql": ""
    },
    {
        "question_id": 336,
        "answer_sql": ""
    },
    {
        "question_id": 337,
        "answer_sql": "SELECT r.Name AS Region_Name, r.Capital AS Capital_Name FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Region_ID ORDER BY COUNT(b.Building_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 338,
        "answer_sql": "SELECT r.Name AS Region , b.Number_of_Stories AS Number_of_Buildings FROM region AS r JOIN building AS b ON r.Region_ID = b.Region_ID WHERE b.Number_of_Stories = (SELECT MAX(Number_of_Stories) FROM building)"
    },
    {
        "question_id": 339,
        "answer_sql": "SELECT building . Address , region . Capital FROM building JOIN region ON building . Region_ID = region . Region_ID ;"
    },
    {
        "question_id": 340,
        "answer_sql": "SELECT b.Address, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 341,
        "answer_sql": "SELECT Number_of_Stories FROM building JOIN region ON building.Region_ID = region.Region_ID WHERE region.Name = 'Abruzzo';"
    },
    {
        "question_id": 342,
        "answer_sql": "SELECT b.Number_of_Stories FROM building b JOIN region r ON b.Region_ID = r.Region_ID WHERE r.Name = 'Abruzzo';"
    },
    {
        "question_id": 343,
        "answer_sql": "SELECT Completed_Year, COUNT(Building_ID) as Number_of_Buildings FROM building GROUP BY Completed_Year ORDER BY Completed_Year;"
    },
    {
        "question_id": 344,
        "answer_sql": "SELECT b.Completed_Year, COUNT(b.Building_ID) as Number_of_Buildings FROM building b WHERE b.Completed_Year IS NOT NULL GROUP BY b.Completed_Year ORDER BY b.Completed_Year DESC;"
    },
    {
        "question_id": 345,
        "answer_sql": "SELECT b.Completed_Year FROM building b GROUP BY b.Completed_Year ORDER BY COUNT(b.Completed_Year) DESC LIMIT 1;"
    },
    {
        "question_id": 346,
        "answer_sql": "SELECT MAX(Completed_Year) as Most_Construction_Year FROM building;"
    },
    {
        "question_id": 347,
        "answer_sql": "SELECT r.Name FROM region r LEFT JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Building_ID IS NULL;"
    },
    {
        "question_id": 348,
        "answer_sql": "SELECT r.Name FROM region r WHERE r.Region_ID NOT IN ( SELECT b.Region_ID FROM building b )"
    },
    {
        "question_id": 349,
        "answer_sql": "SELECT b. Completed_Year FROM building b WHERE b. Number_of_Stories > 20 AND b. Completed_Year IN ( SELECT b2. Completed_Year FROM building b2 WHERE b2. Number_of_Stories < 15 );"
    },
    {
        "question_id": 350,
        "answer_sql": "SELECT DISTINCT building.Completed_Year FROM building WHERE building.Number_of_Stories > 20 OR building.Number_of_Stories < 15;"
    },
    {
        "question_id": 351,
        "answer_sql": "SELECT building.Address FROM building WHERE building.Address IN (SELECT DISTINCT building.Address FROM building);"
    },
    {
        "question_id": 352,
        "answer_sql": "SELECT DISTINCT building.Address FROM building JOIN region ON building.Region_ID = region.Region_ID WHERE building.Address IN (SELECT DISTINCT Address FROM building);"
    },
    {
        "question_id": 353,
        "answer_sql": "SELECT b.Completed_Year, COUNT(b.Number_of_Stories) as Number_of_Buildings FROM building b WHERE b.Number_of_Stories > 0 GROUP BY b.Completed_Year ORDER BY Number_of_Buildings DESC;"
    },
    {
        "question_id": 354,
        "answer_sql": "SELECT b. Completed_Year , b. Number_of_Stories FROM building b ORDER BY b. Number_of_Stories DESC;"
    },
    {
        "question_id": 355,
        "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details;"
    },
    {
        "question_id": 356,
        "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details;"
    },
    {
        "question_id": 357,
        "answer_sql": "SELECT COUNT(*) FROM Services;"
    },
    {
        "question_id": 358,
        "answer_sql": "SELECT COUNT(*) FROM Services;"
    },
    {
        "question_id": 359,
        "answer_sql": "SELECT Analytical_Layer.Analytical_Layer_Type_Code, COUNT(*) as Frequency FROM Analytical_Layer JOIN Customers_and_Services ON Analytical_Layer.Customers_and_Services_ID = Customers_and_Services.Customers_and_Services_ID GROUP BY Analytical_Layer.Analytical_Layer_Type_Code ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 360,
        "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Frequency FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 361,
        "answer_sql": "SELECT Customers_and_Services.Service_ID, Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"
    },
    {
        "question_id": 362,
        "answer_sql": "SELECT Services.Service_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"
    },
    {
        "question_id": 363,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID GROUP BY Services.Service_Details HAVING COUNT(Customers_and_Services.Service_ID) > 3;"
    },
    {
        "question_id": 364,
        "answer_sql": "SELECT Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Services.Service_Details HAVING COUNT(*) > 3;"
    },
    {
        "question_id": 365,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Customers_and_Services_ID) as Service_Usage FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID GROUP BY Customers.Customer_Details ORDER BY Service_Usage DESC LIMIT 1;"
    },
    {
        "question_id": 366,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Service_ID) as Service_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers.Customer_Details ORDER BY Service_Count DESC LIMIT 1;"
    },
    {
        "question_id": 367,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(DISTINCT Customers_and_Services.Service_ID) as Service_Count FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID GROUP BY Customers.Customer_Details ORDER BY Service_Count DESC LIMIT 1;"
    },
    {
        "question_id": 368,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(Services.Service_ID) as Number_of_Services FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers.Customer_Details ORDER BY Number_of_Services DESC LIMIT 1;"
    },
    {
        "question_id": 369,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers_and_Services.Customer_ID IS NULL;"
    },
    {
        "question_id": 370,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers_and_Services.Service_ID IS NULL;"
    },
    {
        "question_id": 371,
        "answer_sql": "SELECT Customers.Customer_Details, Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Services.Service_ID = ( SELECT Service_ID FROM Customers_and_Services GROUP BY Service_ID ORDER BY COUNT(*) ASC LIMIT 1 )"
    },
    {
        "question_id": 372,
        "answer_sql": "SELECT DISTINCT Customers.Customer_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Services.Service_ID IN ( SELECT Service_ID FROM Services GROUP BY Service_ID ORDER BY COUNT(*) ASC LIMIT 1 )"
    },
    {
        "question_id": 373,
        "answer_sql": "SELECT COUNT(DISTINCT Customers_and_Services.Customers_and_Services_Details) AS 'Distinct Customer and Services Details' FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID;"
    },
    {
        "question_id": 374,
        "answer_sql": "SELECT COUNT(*) FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID;"
    },
    {
        "question_id": 375,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%';"
    },
    {
        "question_id": 376,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%'"
    },
    {
        "question_id": 377,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Service_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch' OR Customer_Interactions.Status_Code = 'good' GROUP BY Services.Service_Details;"
    },
    {
        "question_id": 378,
        "answer_sql": ""
    },
    {
        "question_id": 379,
        "answer_sql": ""
    },
    {
        "question_id": 380,
        "answer_sql": ""
    },
    {
        "question_id": 381,
        "answer_sql": ""
    },
    {
        "question_id": 382,
        "answer_sql": ""
    },
    {
        "question_id": 383,
        "answer_sql": "SELECT C.Customer_Details, CI.Status_Code, S.Service_Details, CI.Services_and_Channels_Details FROM Customer_Interactions AS CI JOIN Customers AS C ON CI.Customer_ID = C.Customer_ID JOIN Services AS S ON CI.Service_ID = S.Service_ID WHERE CI.Status_Code = 'Stuck' AND CI.Services_and_Channels_Details = 'bad'"
    },
    {
        "question_id": 384,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = 'Stuck' AND Customer_Interactions.Services_and_Channels_Details = 'bad';"
    },
    {
        "question_id": 385,
        "answer_sql": "SELECT COUNT(*) FROM Customers_and_Services JOIN Integration_Platform ON Customers_and_Services.Customers_and_Services_ID = Integration_Platform.Customer_Interaction_ID WHERE Customers_and_Services.Customers_and_Services_Details = 'successful'"
    },
    {
        "question_id": 386,
        "answer_sql": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details LIKE '%Success%';"
    },
    {
        "question_id": 387,
        "answer_sql": ""
    },
    {
        "question_id": 388,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail'"
    },
    {
        "question_id": 389,
        "answer_sql": ""
    },
    {
        "question_id": 390,
        "answer_sql": ""
    },
    {
        "question_id": 391,
        "answer_sql": "SELECT Analytical_Layer.Pattern_Recognition, Analytical_Layer.Analytical_Layer_Type_Code, COUNT(Analytical_Layer.Analytical_ID) as Usage_Count FROM Analytical_Layer JOIN Customers_and_Services ON Analytical_Layer.Customers_and_Services_ID = Customers_and_Services.Customers_and_Services_ID GROUP BY Analytical_Layer.Pattern_Recognition, Analytical_Layer.Analytical_Layer_Type_Code ORDER BY Usage_Count DESC;"
    },
    {
        "question_id": 392,
        "answer_sql": "SELECT Analytical_Layer.Analytical_Layer_Type_Code, COUNT(Analytical_Layer.Analytical_ID) as Number_of_Times_Used FROM Analytical_Layer JOIN Customers_and_Services ON Analytical_Layer.Customers_and_Services_ID = Customers_and_Services.Customers_and_Services_ID GROUP BY Analytical_Layer.Analytical_Layer_Type_Code;"
    },
    {
        "question_id": 393,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customers_and_Services_Details = 'Unsatisfied';"
    },
    {
        "question_id": 394,
        "answer_sql": ""
    },
    {
        "question_id": 395,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 396,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 397,
        "answer_sql": "SELECT Vehicles.name, Customers.name FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id JOIN Customers ON Renting_history.customer_id = Customers.id ORDER BY Vehicles.Model_year DESC;"
    },
    {
        "question_id": 398,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles ORDER BY Vehicles.Model_year DESC;"
    },
    {
        "question_id": 399,
        "answer_sql": "SELECT Type_of_powertrain FROM Vehicles GROUP BY Type_of_powertrain;"
    },
    {
        "question_id": 400,
        "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;"
    },
    {
        "question_id": 401,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Annual_fuel_cost FROM Vehicles WHERE Vehicles.Model_year IN (2013, 2014);"
    },
    {
        "question_id": 402,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, Vehicles.Cost_per_25_miles, Vehicles.Model_year FROM Vehicles WHERE Vehicles.Model_year IN (2013, 2014);"
    },
    {
        "question_id": 403,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain FROM Vehicles WHERE Vehicles.Model_year IN (2014, 2013);"
    },
    {
        "question_id": 404,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Vehicles.Model_year IN (2013, 2014) GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 405,
        "answer_sql": "SELECT Type_of_powertrain, COUNT(*) as Number_of_Vehicles FROM Vehicles GROUP BY Type_of_powertrain;"
    },
    {
        "question_id": 406,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, COUNT(Vehicles.id) as 'Number of Vehicles' FROM Vehicles GROUP BY Vehicles.Type_of_powertrain;"
    },
    {
        "question_id": 407,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, COUNT(Vehicles.id) as Number_of_Vehicles FROM Vehicles GROUP BY Vehicles.Type_of_powertrain ORDER BY Number_of_Vehicles DESC LIMIT 1;"
    },
    {
        "question_id": 408,
        "answer_sql": "SELECT Type_of_powertrain , COUNT(*) as Count FROM Vehicles GROUP BY Type_of_powertrain ORDER BY Count DESC LIMIT 1;"
    },
    {
        "question_id": 409,
        "answer_sql": "SELECT MIN(Vehicles.Cost_per_25_miles) as Min_Annual_Cost, MAX(Vehicles.Cost_per_25_miles) as Max_Annual_Cost, AVG(Vehicles.Cost_per_25_miles) as Avg_Annual_Cost FROM Vehicles;"
    },
    {
        "question_id": 410,
        "answer_sql": "SELECT MIN(Vehicles.Cost_per_25_miles) as Min_Annual_Cost, MAX(Vehicles.Cost_per_25_miles) as Max_Annual_Cost, AVG(Vehicles.Cost_per_25_miles) as Avg_Annual_Cost FROM Vehicles;"
    },
    {
        "question_id": 411,
        "answer_sql": ""
    },
    {
        "question_id": 412,
        "answer_sql": ""
    },
    {
        "question_id": 413,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Renting_history.total_hours) as average_annual_fuel_cost FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(Vehicles.id) >= 2;"
    },
    {
        "question_id": 414,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.Annual_fuel_cost) as Average_Annual_Fuel_Cost FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(Renting_history.vehicles_id) >= 2;"
    },
    {
        "question_id": 415,
        "answer_sql": "SELECT name , age , membership_credit FROM Customers ;"
    },
    {
        "question_id": 416,
        "answer_sql": "SELECT Customers.name, Customers.age, Customers.membership_credit FROM Customers;"
    },
    {
        "question_id": 417,
        "answer_sql": "SELECT name , age FROM Customers WHERE membership_credit = (SELECT MAX( membership_credit ) FROM Customers );"
    },
    {
        "question_id": 418,
        "answer_sql": "SELECT Customers.name, Customers.age FROM Customers WHERE Customers.membership_credit = (SELECT MAX(Customers.membership_credit) FROM Customers);"
    },
    {
        "question_id": 419,
        "answer_sql": "SELECT AVG(Customers.age) AS average_age FROM Customers WHERE Customers.membership_credit > ( SELECT AVG(Customers.membership_credit) FROM Customers );"
    },
    {
        "question_id": 420,
        "answer_sql": "SELECT Customers.name, Customers.age, AVG(Customers.age) OVER() AS average_age FROM Customers WHERE Customers.membership_credit > (SELECT AVG(Customers.age) FROM Customers)"
    },
    {
        "question_id": 421,
        "answer_sql": "SELECT * FROM Discount;"
    },
    {
        "question_id": 422,
        "answer_sql": "SELECT Discount .* FROM Discount ;"
    },
    {
        "question_id": 423,
        "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) as Total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name;"
    },
    {
        "question_id": 424,
        "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) as Total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name;"
    },
    {
        "question_id": 425,
        "answer_sql": "SELECT Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL;"
    },
    {
        "question_id": 426,
        "answer_sql": "SELECT Vehicles.name FROM Vehicles WHERE id NOT IN (SELECT vehicles_id FROM Renting_history);"
    },
    {
        "question_id": 427,
        "answer_sql": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.name HAVING COUNT(Renting_history.customer_id) >= 2;"
    },
    {
        "question_id": 428,
        "answer_sql": "SELECT name FROM Customers WHERE id IN (SELECT customer_id FROM Renting_history GROUP BY customer_id HAVING COUNT(*) >= 2);"
    },
    {
        "question_id": 429,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id ORDER BY COUNT(Renting_history.id) DESC LIMIT 1;"
    },
    {
        "question_id": 430,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name, Vehicles.Model_year ORDER BY SUM(Renting_history.total_hours) DESC LIMIT 1;"
    },
    {
        "question_id": 431,
        "answer_sql": "SELECT Vehicles.name, Renting_history.total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id ORDER BY Renting_history.total_hours DESC;"
    },
    {
        "question_id": 432,
        "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) as total_hours_rented FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name ORDER BY total_hours_rented DESC;"
    },
    {
        "question_id": 433,
        "answer_sql": "SELECT D.name, COUNT(R.discount_id) as Renting_Count FROM Renting_history R JOIN Customers C ON R.customer_id = C.id JOIN Discount D ON R.discount_id = D.id GROUP BY R.discount_id ORDER BY Renting_Count DESC LIMIT 1;"
    },
    {
        "question_id": 434,
        "answer_sql": "SELECT D.name FROM Discount D JOIN Renting_history R ON D.id = R.discount_id GROUP BY D.id ORDER BY COUNT(R.id) DESC LIMIT 1;"
    },
    {
        "question_id": 435,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.total_hours > 30;"
    },
    {
        "question_id": 436,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.total_hours > 30;"
    },
    {
        "question_id": 437,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.City_fuel_economy_rate) AS Avg_City_Fuel_Rate, AVG(Vehicles.Highway_fuel_economy_rate) AS Avg_Highway_Fuel_Rate FROM Vehicles GROUP BY Vehicles.Type_of_powertrain"
    },
    {
        "question_id": 438,
        "answer_sql": "SELECT Type_of_powertrain, AVG(City_fuel_economy_rate) as 'Average_City_Fuel_Economy_Rate', AVG(Highway_fuel_economy_rate) as 'Average_Highway_Fuel_Economy_Rate' FROM Vehicles GROUP BY Type_of_powertrain;"
    },
    {
        "question_id": 439,
        "answer_sql": "SELECT AVG(Student_Loans.amount_of_loan) FROM Student_Loans JOIN Students ON Student_Loans.student_id = Students.student_id;"
    },
    {
        "question_id": 440,
        "answer_sql": "SELECT AVG(Student_Loans.amount_of_loan) FROM Student_Loans JOIN Students ON Student_Loans.student_id = Students.student_id;"
    },
    {
        "question_id": 441,
        "answer_sql": "SELECT Students.bio_data, Students.student_id FROM Students JOIN (SELECT Classes.student_id FROM Classes GROUP BY Classes.student_id HAVING COUNT(Classes.class_id) >= 2) AS Class_Students ON Students.student_id = Class_Students.student_id JOIN (SELECT Detention.student_id FROM Detention GROUP BY Detention.student_id HAVING COUNT(Detention.detention_id) < 2) AS Detention_Students ON Students.student_id = Detention_Students.student_id"
    },
    {
        "question_id": 442,
        "answer_sql": "SELECT Students.bio_data, Students.student_id FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id WHERE ( SELECT COUNT(*) FROM Classes WHERE Classes.student_id = Students.student_id ) >= 2 OR ( SELECT COUNT(*) FROM Detention WHERE Detention.student_id = Students.student_id ) < 2"
    },
    {
        "question_id": 443,
        "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details, Classes.class_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details LIKE '%data%' AND Classes.class_details NOT LIKE '%net%'"
    },
    {
        "question_id": 444,
        "answer_sql": "SELECT teacher_details FROM Teachers WHERE teacher_id IN ( SELECT DISTINCT teacher_id FROM Classes WHERE class_details LIKE '%data%' AND class_details NOT LIKE 'net%' );"
    },
    {
        "question_id": 445,
        "answer_sql": ""
    },
    {
        "question_id": 446,
        "answer_sql": ""
    },
    {
        "question_id": 447,
        "answer_sql": "SELECT S.student_id, SL.amount_of_loan, SL.date_of_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id JOIN Achievements A ON S.student_id = A.student_id GROUP BY S.student_id HAVING COUNT(A.achievement_id) >= 2;"
    },
    {
        "question_id": 448,
        "answer_sql": "SELECT S.student_id, SL.amount_of_loan, SL.date_of_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id JOIN Achievements A ON S.student_id = A.student_id GROUP BY S.student_id, SL.amount_of_loan, SL.date_of_loan HAVING COUNT(A.achievement_id) >= 2;"
    },
    {
        "question_id": 449,
        "answer_sql": "SELECT t.teacher_details, t.teacher_id FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id GROUP BY t.teacher_details, t.teacher_id ORDER BY COUNT(c.class_id) DESC LIMIT 1;"
    },
    {
        "question_id": 450,
        "answer_sql": "SELECT t.teacher_id, t.teacher_details, COUNT(c.class_id) as total_classes FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id GROUP BY t.teacher_id, t.teacher_details ORDER BY total_classes DESC LIMIT 1;"
    },
    {
        "question_id": 451,
        "answer_sql": "SELECT DISTINCT Ref_Detention_Type.detention_type_description FROM Detention JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code;"
    },
    {
        "question_id": 452,
        "answer_sql": "SELECT DISTINCT detention_summary FROM Detention;"
    },
    {
        "question_id": 453,
        "answer_sql": "SELECT Students.student_id, Students.bio_data AS Personal_Details , Addresses.address_details AS Address_Type_Descriptions FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id WHERE Students.bio_data IS NOT NULL AND Addresses.address_details IS NOT NULL;"
    },
    {
        "question_id": 454,
        "answer_sql": ""
    },
    {
        "question_id": 455,
        "answer_sql": ""
    },
    {
        "question_id": 456,
        "answer_sql": "SELECT Students.bio_data, Addresses.address_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id;"
    },
    {
        "question_id": 457,
        "answer_sql": "SELECT Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id ORDER BY Students.bio_data, Transcripts.date_of_transcript;"
    },
    {
        "question_id": 458,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id;"
    },
    {
        "question_id": 459,
        "answer_sql": "SELECT Students.student_id, Behaviour_Monitoring.behaviour_monitoring_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY Behaviour_Monitoring.behaviour_monitoring_details ORDER BY COUNT(*) DESC, Behaviour_Monitoring.behaviour_monitoring_details LIMIT 1;"
    },
    {
        "question_id": 460,
        "answer_sql": "SELECT Behaviour_Monitoring.behaviour_monitoring_details, COUNT(*) as count FROM Behaviour_Monitoring GROUP BY Behaviour_Monitoring.behaviour_monitoring_details ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 461,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details, Behaviour_Monitoring.behaviour_monitoring_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id JOIN (SELECT student_id, event_type_code, COUNT(*) as event_count FROM Student_Events GROUP BY student_id, event_type_code HAVING event_count = (SELECT MAX(event_count) FROM (SELECT student_id, event_type_code, COUNT(*) as event_count FROM Student_Events GROUP BY student_id, event_type_code ) as subquery ) ) as subquery2 ON Students.student_id = subquery2.student_id WHERE Students.student_id IN (subquery2.student_id) ORDER BY subquery2.event_count DESC;"
    },
    {
        "question_id": 462,
        "answer_sql": "SELECT Students.bio_data, Students.student_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY Students.bio_data, Students.student_details HAVING COUNT(*) IN (SELECT COUNT(*) FROM Behaviour_Monitoring GROUP BY student_id) ORDER BY COUNT(*) DESC;"
    },
    {
        "question_id": 463,
        "answer_sql": "SELECT S.bio_data, COUNT(B.behaviour_monitoring_details) as occurrence FROM Students S JOIN Behaviour_Monitoring B ON S.student_id = B.student_id GROUP BY S.bio_data ORDER BY occurrence DESC LIMIT 1;"
    },
    {
        "question_id": 464,
        "answer_sql": "SELECT Students.bio_data FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id GROUP BY Students.bio_data ORDER BY COUNT(Transcripts.transcript_id) DESC LIMIT 1;"
    },
    {
        "question_id": 465,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Student_Events.event_date FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id WHERE Student_Events.event_date IS NOT NULL"
    },
    {
        "question_id": 466,
        "answer_sql": "SELECT Students.bio_data, Student_Events.event_date FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id"
    },
    {
        "question_id": 467,
        "answer_sql": "SELECT COUNT(DISTINCT Student_Events.student_id) as Number_of_Students, Ref_Event_Types.event_type_code, Ref_Event_Types.event_type_description FROM Student_Events JOIN Ref_Event_Types ON Student_Events.event_type_code = Ref_Event_Types.event_type_code GROUP BY Student_Events.event_type_code, Ref_Event_Types.event_type_description ORDER BY COUNT(Student_Events.student_id) DESC;"
    },
    {
        "question_id": 468,
        "answer_sql": "SELECT Ref_Event_Types.event_type_code, COUNT(Students.student_id) as Number_of_Students, Ref_Event_Types.event_type_description FROM Student_Events JOIN Students ON Student_Events.student_id = Students.student_id JOIN Ref_Event_Types ON Student_Events.event_type_code = Ref_Event_Types.event_type_code GROUP BY Ref_Event_Types.event_type_code, Ref_Event_Types.event_type_description ORDER BY Number_of_Students DESC;"
    },
    {
        "question_id": 469,
        "answer_sql": "SELECT Ref_Achievement_Type.achievement_type_description, Ref_Achievement_Type.achievement_type_code, Students.student_id, Achievements.achievement_details FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code JOIN Students ON Achievements.student_id = Students.student_id ORDER BY Ref_Achievement_Type.achievement_type_description, Students.student_id;"
    },
    {
        "question_id": 470,
        "answer_sql": ""
    },
    {
        "question_id": 471,
        "answer_sql": "SELECT COUNT(DISTINCT Teachers.teacher_id) FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id LEFT JOIN Achievements ON Students.student_id = Achievements.student_id WHERE Achievements.achievement_id IS NULL;"
    },
    {
        "question_id": 472,
        "answer_sql": "SELECT COUNT(*) FROM Teachers T JOIN Classes C ON T.teacher_id = C.teacher_id JOIN Students S ON C.student_id = S.student_id JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Detention D ON S.student_id = D.student_id WHERE NOT EXISTS ( SELECT 1 FROM Achievements A WHERE A.student_id = S.student_id );"
    },
    {
        "question_id": 473,
        "answer_sql": "SELECT Transcripts.date_of_transcript, Transcripts.transcript_details FROM Transcripts;"
    },
    {
        "question_id": 474,
        "answer_sql": "SELECT Transcripts.transcript_details, Students.student_id, Students.bio_data, Transcripts.date_of_transcript FROM Transcripts JOIN Students ON Transcripts.student_id = Students.student_id;"
    },
    {
        "question_id": 475,
        "answer_sql": "SELECT Ref_Achievement_Type.achievement_type_code, Ref_Achievement_Type.achievement_type_description, Achievements.date_achievement, Achievements.achievement_details FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code ORDER BY Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 476,
        "answer_sql": "SELECT `achievement_type_code`, `achievement_details`, `date_achievement` FROM Achievements;"
    },
    {
        "question_id": 477,
        "answer_sql": "SELECT Detention.datetime_detention_start, Detention.datetime_detention_end FROM Detention JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code JOIN Students ON Detention.student_id = Students.student_id WHERE Detention.datetime_detention_start IS NOT NULL AND Detention.datetime_detention_end IS NOT NULL;"
    },
    {
        "question_id": 478,
        "answer_sql": ""
    },
    {
        "question_id": 479,
        "answer_sql": "SELECT Students.bio_data FROM Students WHERE Students.student_details LIKE '%Suite%';"
    },
    {
        "question_id": 480,
        "answer_sql": "SELECT Students.bio_data, Students.student_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id JOIN Transcripts ON Students.student_id = Transcripts.student_id WHERE Students.student_details LIKE '%Suite%'"
    },
    {
        "question_id": 481,
        "answer_sql": "SELECT Classes.class_id, Teachers.teacher_details AS 'Teacher Details', Students.student_details AS 'Student Details' FROM Classes JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id JOIN Students ON Classes.student_id = Students.student_id GROUP BY Classes.class_id, Teachers.teacher_details, Students.student_details;"
    },
    {
        "question_id": 482,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Teachers.teacher_id, Teachers.teacher_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id;"
    },
    {
        "question_id": 483,
        "answer_sql": "SELECT T.teacher_id, T.teacher_details, COUNT(C.class_id) AS num_courses FROM Classes AS C JOIN Teachers AS T ON C.teacher_id = T.teacher_id GROUP BY T.teacher_id, T.teacher_details ORDER BY num_courses DESC LIMIT 1;"
    },
    {
        "question_id": 484,
        "answer_sql": "SELECT T.teacher_id, COUNT(C.class_id) AS num_courses FROM Teachers AS T JOIN Classes AS C ON T.teacher_id = C.teacher_id GROUP BY T.teacher_id ORDER BY num_courses DESC LIMIT 1;"
    },
    {
        "question_id": 485,
        "answer_sql": "SELECT S.student_id, COUNT(C.class_id) as total_courses FROM Students S JOIN Classes C ON S.student_id = C.student_id GROUP BY S.student_id ORDER BY total_courses DESC LIMIT 1;"
    },
    {
        "question_id": 486,
        "answer_sql": "SELECT Students.student_id, COUNT(DISTINCT Classes.class_id) as total_courses FROM Students LEFT JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id ORDER BY total_courses DESC LIMIT 1;"
    },
    {
        "question_id": 487,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id, Students.bio_data, Students.student_details HAVING COUNT(Classes.class_id) = 2;"
    },
    {
        "question_id": 488,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Classes JOIN Students ON Classes.student_id = Students.student_id GROUP BY Students.student_id, Students.bio_data, Students.student_details HAVING COUNT(DISTINCT Classes.class_details) = 2;"
    },
    {
        "question_id": 489,
        "answer_sql": "SELECT Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description FROM Detention JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code WHERE (SELECT COUNT(*) FROM Detention WHERE Detention.detention_type_code = Ref_Detention_Type.detention_type_code) = (SELECT MIN(count) FROM (SELECT DISTINCT(detention_type_code), COUNT(*) as count FROM Detention GROUP BY detention_type_code) as subquery);"
    },
    {
        "question_id": 490,
        "answer_sql": "SELECT `detention_type_code`, `detention_type_description` FROM `Ref_Detention_Type` WHERE `detention_type_code` IN ( SELECT `detention_type_code` FROM `Detention` GROUP BY `detention_type_code` HAVING COUNT(*) = 1 ) ORDER BY `detention_type_code` ASC;"
    },
    {
        "question_id": 491,
        "answer_sql": "SELECT Students.bio_data, Students.student_id, Student_Loans.amount_of_loan, Students.student_details FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan > (SELECT AVG(amount_of_loan) FROM Student_Loans) ORDER BY Student_Loans.amount_of_loan DESC;"
    },
    {
        "question_id": 492,
        "answer_sql": "SELECT Students.bio_data, Students.student_details FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan > ( SELECT AVG(amount_of_loan) FROM Student_Loans )"
    },
    {
        "question_id": 493,
        "answer_sql": "SELECT MIN(`date_of_loan`) as earliest_date_of_loan FROM Student_Loans;"
    },
    {
        "question_id": 494,
        "answer_sql": "SELECT MIN(`date_of_loan`) as earliest_date_of_loan FROM `Student_Loans` JOIN `Students` ON `Student_Loans`.`student_id` = `Students`.`student_id`;"
    },
    {
        "question_id": 495,
        "answer_sql": "SELECT S.student_id, S.bio_data FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id WHERE SL.amount_of_loan = (SELECT MIN(amount_of_loan) FROM Student_Loans) ;"
    },
    {
        "question_id": 496,
        "answer_sql": "SELECT Students.bio_data FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.student_loan_id = (SELECT MIN(student_loan_id) FROM Student_Loans)"
    },
    {
        "question_id": 497,
        "answer_sql": "SELECT Transcripts.date_of_transcript FROM Transcripts JOIN Student_Loans ON Transcripts.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan = (SELECT MAX(amount_of_loan) FROM Student_Loans) ORDER BY Transcripts.date_of_transcript DESC;"
    },
    {
        "question_id": 498,
        "answer_sql": "SELECT Transcripts.transcript_details, Students.student_id FROM Transcripts JOIN Students ON Transcripts.student_id = Students.student_id JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan = ( SELECT MAX(amount_of_loan) FROM Student_Loans ) ORDER BY Transcripts.transcript_details DESC LIMIT 1;"
    },
    {
        "question_id": 499,
        "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Classes.student_id = Students.student_id WHERE Students.student_id IN ( SELECT Transcripts.student_id FROM Transcripts ORDER BY Transcripts.date_of_transcript ASC LIMIT 1 )"
    },
    {
        "question_id": 500,
        "answer_sql": "SELECT teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Classes.student_id = Students.student_id JOIN Transcripts ON Students.student_id = Transcripts.student_id WHERE Transcripts.date_of_transcript = (SELECT MIN(date_of_transcript) FROM Transcripts)"
    },
    {
        "question_id": 501,
        "answer_sql": "SELECT Students.student_id, SUM(Student_Loans.amount_of_loan) as total_loan FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id GROUP BY Students.student_id ORDER BY total_loan DESC;"
    },
    {
        "question_id": 502,
        "answer_sql": "SELECT S.student_id, SUM(L.amount_of_loan) as total_loan_amount FROM Students S LEFT JOIN Student_Loans L ON S.student_id = L.student_id GROUP BY S.student_id;"
    },
    {
        "question_id": 503,
        "answer_sql": "SELECT Students.bio_data, Students.student_id, COUNT(Student_Events.event_id) as course_count FROM Students LEFT JOIN Student_Events ON Students.student_id = Student_Events.student_id GROUP BY Students.bio_data, Students.student_id ORDER BY Students.bio_data, Students.student_id;"
    },
    {
        "question_id": 504,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, COUNT(Student_Events.event_id) as num_courses FROM Students LEFT JOIN Student_Events ON Students.student_id = Student_Events.student_id GROUP BY Students.student_id, Students.bio_data;"
    },
    {
        "question_id": 505,
        "answer_sql": "SELECT COUNT(*) FROM Detention JOIN Students ON Detention.student_id = Students.student_id JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code;"
    },
    {
        "question_id": 506,
        "answer_sql": "SELECT COUNT(*) FROM Students JOIN Detention ON Students.student_id = Detention.student_id;"
    },
    {
        "question_id": 507,
        "answer_sql": "SELECT `address_type_code`, `address_type_description` FROM `Ref_Address_Types` WHERE `address_type_code` IN ( SELECT `address_type_code` FROM `Students_Addresses` GROUP BY `address_type_code` ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 508,
        "answer_sql": "SELECT Ref_Address_Types.address_type_code, Ref_Address_Types.address_type_description FROM Students_Addresses JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code GROUP BY Ref_Address_Types.address_type_code, Ref_Address_Types.address_type_description ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 509,
        "answer_sql": "SELECT `bio_data` FROM `Students` WHERE `student_id` NOT IN (SELECT `student_id` FROM `Student_Loans`);"
    },
    {
        "question_id": 510,
        "answer_sql": "SELECT bio_data FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Loans);"
    },
    {
        "question_id": 511,
        "answer_sql": "SELECT S.student_id, SA.date_from, SA.date_to FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Transcripts T1 ON S.student_id = T1.student_id JOIN Transcripts T2 ON S.student_id = T2.student_id WHERE T1.transcript_id < T2.transcript_id"
    },
    {
        "question_id": 512,
        "answer_sql": "SELECT S.student_id, A.address_details, SA.date_from, SA.date_to FROM Students AS S JOIN Students_Addresses AS SA ON S.student_id = SA.student_id JOIN Addresses AS A ON SA.address_id = A.address_id WHERE (SELECT COUNT(*) FROM Transcripts WHERE student_id = S.student_id) = 2"
    },
    {
        "question_id": 513,
        "answer_sql": "SELECT datetime_detention_start FROM Detention;"
    },
    {
        "question_id": 514,
        "answer_sql": "SELECT datetime_detention_start FROM Detention;"
    },
    {
        "question_id": 515,
        "answer_sql": "SELECT DISTINCT `Author`.`Name` FROM `Author` JOIN `Author_Book` ON `Author`.`idAuthor` = `Author_Book`.`Author`;"
    },
    {
        "question_id": 516,
        "answer_sql": "SELECT `Author`.`Name` FROM `Author`;"
    },
    {
        "question_id": 517,
        "answer_sql": "SELECT Client.Name, Client.Address FROM Client;"
    },
    {
        "question_id": 518,
        "answer_sql": "SELECT Client.Name, Client.Address FROM Client;"
    },
    {
        "question_id": 519,
        "answer_sql": "SELECT Title, ISBN, SalePrice FROM Book;"
    },
    {
        "question_id": 520,
        "answer_sql": "SELECT Title, ISBN, SalePrice FROM `Book`;"
    },
    {
        "question_id": 521,
        "answer_sql": "SELECT COUNT(*) FROM `Book`;"
    },
    {
        "question_id": 522,
        "answer_sql": "SELECT COUNT(*) FROM `Book`;"
    },
    {
        "question_id": 523,
        "answer_sql": "SELECT COUNT(DISTINCT Author) FROM `Book`;"
    },
    {
        "question_id": 524,
        "answer_sql": "SELECT COUNT(*) FROM `Author`;"
    },
    {
        "question_id": 525,
        "answer_sql": "SELECT COUNT(*) FROM Client;"
    },
    {
        "question_id": 526,
        "answer_sql": "SELECT COUNT(*) FROM Client;"
    },
    {
        "question_id": 527,
        "answer_sql": "SELECT Client.Name, Client.Address FROM Client ORDER BY Client.Name;"
    },
    {
        "question_id": 528,
        "answer_sql": "SELECT Client.Name, Client.Address FROM Client ORDER BY Client.Name;"
    },
    {
        "question_id": 529,
        "answer_sql": "SELECT `Book`.Title, `Author`.Name FROM `Book` JOIN `Author_Book` ON `Book`.ISBN = `Author_Book`.ISBN JOIN `Author` ON `Author_Book`.Author = `Author`.idAuthor;"
    },
    {
        "question_id": 530,
        "answer_sql": "SELECT B.Title, A.Name FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor;"
    },
    {
        "question_id": 531,
        "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient;"
    },
    {
        "question_id": 532,
        "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient;"
    },
    {
        "question_id": 533,
        "answer_sql": "SELECT A.Name, COUNT(B.ISBN) as NumberOfBooks FROM Author A JOIN Author_Book AB ON A.idAuthor = AB.Author JOIN Book B ON AB.ISBN = B.ISBN GROUP BY A.Name;"
    },
    {
        "question_id": 534,
        "answer_sql": "SELECT A.Name, COUNT(B.ISBN) as NumberOfBooks FROM Author A JOIN Author_Book AB ON A.idAuthor = AB.Author JOIN Book B ON AB.ISBN = B.ISBN GROUP BY A.Name;"
    },
    {
        "question_id": 535,
        "answer_sql": "SELECT B.ISBN, COUNT(DISTINCT O.IdOrder) as NumOrders FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN JOIN Orders O ON BO.IdOrder = O.IdOrder GROUP BY B.ISBN;"
    },
    {
        "question_id": 536,
        "answer_sql": "SELECT B.ISBN, COUNT(B.ISBN) as TotalOrders FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN GROUP BY B.ISBN;"
    },
    {
        "question_id": 537,
        "answer_sql": "SELECT B.ISBN, SUM(B.amount) as TotalAmountOrdered FROM Books_Order B JOIN Orders O ON B.IdOrder = O.IdOrder GROUP BY B.ISBN;"
    },
    {
        "question_id": 538,
        "answer_sql": "SELECT B.ISBN, SUM(B.amount) as TotalAmountOrdered FROM Books_Order B JOIN Orders O ON B.IdOrder = O.IdOrder GROUP BY B.ISBN;"
    },
    {
        "question_id": 539,
        "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE BO.amount = ( SELECT MAX(amount) FROM Books_Order ) GROUP BY B.Title;"
    },
    {
        "question_id": 540,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE bo.IdOrder IN ( SELECT IdOrder FROM Books_Order GROUP BY IdOrder ORDER BY SUM(amount) DESC LIMIT 1 ) GROUP BY b.Title;"
    },
    {
        "question_id": 541,
        "answer_sql": "SELECT B.Title, B.PurchasePrice FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE BO.amount = (SELECT MAX(amount) FROM Books_Order)"
    },
    {
        "question_id": 542,
        "answer_sql": "SELECT Book.Title, Book.PurchasePrice FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Books_Order.amount = (SELECT MAX(amount) FROM Books_Order);"
    },
    {
        "question_id": 543,
        "answer_sql": "SELECT B.Title FROM `Book` B JOIN `Author_Book` AB ON B.ISBN = AB.ISBN JOIN `Books_Order` BO ON B.ISBN = BO.ISBN WHERE BO.IdOrder IN (SELECT IdOrder FROM `Orders`);"
    },
    {
        "question_id": 544,
        "answer_sql": ""
    },
    {
        "question_id": 545,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name HAVING COUNT(Orders.IdOrder) > 0;"
    },
    {
        "question_id": 546,
        "answer_sql": "SELECT DISTINCT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient;"
    },
    {
        "question_id": 547,
        "answer_sql": "SELECT Client.Name, COUNT(Orders.IdOrder) as NumOrders FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name;"
    },
    {
        "question_id": 548,
        "answer_sql": "SELECT Client.Name, COUNT(Orders.IdOrder) as 'Number of Orders' FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name;"
    },
    {
        "question_id": 549,
        "answer_sql": "SELECT Name FROM Client WHERE IdClient=(SELECT IdClient FROM Orders ORDER BY IdOrder DESC LIMIT 1);"
    },
    {
        "question_id": 550,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name ORDER BY COUNT(Orders.IdOrder) DESC LIMIT 1;"
    },
    {
        "question_id": 551,
        "answer_sql": "SELECT Client.Name, SUM(Books_Order.amount) as TotalAmount FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN GROUP BY Client.Name;"
    },
    {
        "question_id": 552,
        "answer_sql": "SELECT Client.Name, SUM(Books_Order.amount) as Total_Books_Ordered FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN GROUP BY Client.Name;"
    },
    {
        "question_id": 553,
        "answer_sql": "SELECT c.Name FROM Client c JOIN Orders o ON c.IdClient = o.IdClient JOIN Books_Order bo ON o.IdOrder = bo.IdOrder JOIN Book b ON bo.ISBN = b.ISBN WHERE b.PurchasePrice > 0 GROUP BY c.IdClient, c.Name ORDER BY SUM(b.SalePrice * bo.amount) DESC LIMIT 1;"
    },
    {
        "question_id": 554,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.PurchasePrice > 0 GROUP BY Client.Name ORDER BY SUM(Book.PurchasePrice * Books_Order.amount) DESC LIMIT 1;"
    },
    {
        "question_id": 555,
        "answer_sql": "SELECT Book.Title FROM Book LEFT JOIN Author_Book ON Book.ISBN = Author_Book.ISBN LEFT JOIN Author ON Author_Book.Author = Author.idAuthor LEFT JOIN Books_Order ON Book.ISBN = Books_Order.ISBN WHERE Books_Order.IdOrder IS NULL;"
    },
    {
        "question_id": 556,
        "answer_sql": "SELECT B.Title FROM Book B LEFT JOIN Author_Book AB ON B.Author = AB.Author LEFT JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE BO.ISBN IS NULL AND AB.Author IS NULL;"
    },
    {
        "question_id": 557,
        "answer_sql": "SELECT Client.Name FROM Client LEFT JOIN Orders ON Client.IdClient = Orders.IdClient WHERE Orders.IdClient IS NULL;"
    },
    {
        "question_id": 558,
        "answer_sql": "SELECT DISTINCT Client.Name FROM Client LEFT JOIN Orders ON Client.IdClient = Orders.IdClient WHERE Orders.IdClient IS NULL;"
    },
    {
        "question_id": 559,
        "answer_sql": "SELECT MIN(SalePrice) as Min_Sale_Price, MAX(SalePrice) as Max_Sale_Price FROM Book;"
    },
    {
        "question_id": 560,
        "answer_sql": "SELECT MAX(SalePrice), MIN(SalePrice) FROM Book;"
    },
    {
        "question_id": 561,
        "answer_sql": "SELECT AVG(PurchasePrice) AS AveragePurchasePrice, AVG(SalePrice) AS AverageSalePrice FROM Book;"
    },
    {
        "question_id": 562,
        "answer_sql": "SELECT AVG(PurchasePrice) as Avg_Purchase_Price, AVG(SalePrice) as Avg_Sale_Price FROM Book;"
    },
    {
        "question_id": 563,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) as Difference FROM Book;"
    },
    {
        "question_id": 564,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) AS Difference FROM Book;"
    },
    {
        "question_id": 565,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 566,
        "answer_sql": "SELECT Book.Title FROM Book INNER JOIN Author_Book ON Book.ISBN = Author_Book.ISBN INNER JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Book.SalePrice > (SELECT AVG(SalePrice) FROM Book) ORDER BY Book.Title;"
    },
    {
        "question_id": 567,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book)"
    },
    {
        "question_id": 568,
        "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN WHERE B.SalePrice = (SELECT MIN(SalePrice) FROM Book);"
    },
    {
        "question_id": 569,
        "answer_sql": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Book.PurchasePrice = ( SELECT MAX(PurchasePrice) FROM Book WHERE PurchasePrice > 0 ) ORDER BY Book.Title;"
    },
    {
        "question_id": 570,
        "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN WHERE B.PurchasePrice = (SELECT MAX(PurchasePrice) FROM Book) ORDER BY B.Title;"
    },
    {
        "question_id": 571,
        "answer_sql": "SELECT AVG(SalePrice) FROM Book WHERE Author='George Orwell';"
    },
    {
        "question_id": 572,
        "answer_sql": "SELECT AVG(SalePrice) FROM Book WHERE Author='George Orwell';"
    },
    {
        "question_id": 573,
        "answer_sql": "SELECT SalePrice FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN WHERE Author_Book.Author = (SELECT idAuthor FROM Author WHERE Name = 'Plato');"
    },
    {
        "question_id": 574,
        "answer_sql": ""
    },
    {
        "question_id": 575,
        "answer_sql": "SELECT `Book`.Title FROM `Book` JOIN `Author_Book` ON `Book`.ISBN = `Author_Book`.ISBN JOIN `Author` ON `Author_Book`.Author = `Author`.idAuthor WHERE `Author`.Name = 'George Orwell' ORDER BY `Book`.SalePrice ASC LIMIT 1;"
    },
    {
        "question_id": 576,
        "answer_sql": "SELECT `Book`.Title FROM `Book` JOIN `Author_Book` ON `Book`.ISBN = `Author_Book`.ISBN JOIN `Author` ON `Author_Book`.Author = `Author`.idAuthor WHERE `Author`.Name = 'George Orwell' ORDER BY `Book`.SalePrice ASC LIMIT 1;"
    },
    {
        "question_id": 577,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'Plato' AND b.SalePrice < (SELECT AVG(SalePrice) FROM Book) ORDER BY b.Title;"
    },
    {
        "question_id": 578,
        "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name = 'Plato' AND B.SalePrice < (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 579,
        "answer_sql": "SELECT `Author`.Name FROM `Author` JOIN `Author_Book` ON `Author`.idAuthor = `Author_Book`.Author JOIN `Book` ON `Book`.ISBN = `Author_Book`.ISBN WHERE `Book`.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 580,
        "answer_sql": "SELECT `Author`.Name FROM `Author` JOIN `Author_Book` ON `Author`.idAuthor = `Author_Book`.Author JOIN `Book` ON `Book`.ISBN = `Author_Book`.ISBN WHERE `Book`.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 581,
        "answer_sql": "SELECT B.Title FROM `Author` A JOIN `Author_Book` AB ON A.idAuthor = AB.Author JOIN `Book` B ON AB.ISBN = B.ISBN WHERE A.Name LIKE '%Plato%';"
    },
    {
        "question_id": 582,
        "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name LIKE '%Plato%';"
    },
    {
        "question_id": 583,
        "answer_sql": "SELECT COUNT(*) FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient JOIN Book ON Client.IdClient = Book.Author WHERE Book.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 584,
        "answer_sql": ""
    },
    {
        "question_id": 585,
        "answer_sql": "SELECT Orders.IdOrder FROM Orders JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title IN ('Pride and Prejudice', 'The Little Prince');"
    },
    {
        "question_id": 586,
        "answer_sql": "SELECT Orders.IdOrder FROM Orders JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title IN ('Pride and Prejudice', 'The Little Prince');"
    },
    {
        "question_id": 587,
        "answer_sql": ""
    },
    {
        "question_id": 588,
        "answer_sql": ""
    },
    {
        "question_id": 589,
        "answer_sql": ""
    },
    {
        "question_id": 590,
        "answer_sql": ""
    },
    {
        "question_id": 591,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 592,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 593,
        "answer_sql": "SELECT COUNT(*) FROM book;"
    },
    {
        "question_id": 594,
        "answer_sql": "SELECT book.Title FROM book ORDER BY book.Title ASC;"
    },
    {
        "question_id": 595,
        "answer_sql": "SELECT Title FROM book ORDER BY Pages DESC;"
    },
    {
        "question_id": 596,
        "answer_sql": "SELECT book.Type, book.Release FROM book"
    },
    {
        "question_id": 597,
        "answer_sql": "SELECT b. Book_ID , b. Chapters , MAX(b. Chapters ) OVER (PARTITION BY b. Book_ID ) AS max_chapters, MIN(b. Chapters ) OVER (PARTITION BY b. Book_ID ) AS min_chapters FROM book b JOIN review r ON b. Book_ID = r. Book_ID ORDER BY b. Book_ID ;"
    },
    {
        "question_id": 598,
        "answer_sql": "SELECT book.Title FROM book WHERE book.Type != 'Poet';"
    },
    {
        "question_id": 599,
        "answer_sql": "SELECT AVG( Rating ) FROM review ;"
    },
    {
        "question_id": 600,
        "answer_sql": "SELECT book.Title, review.Rating FROM book JOIN review ON book.Book_ID = review.Book_ID;"
    },
    {
        "question_id": 601,
        "answer_sql": "SELECT b.Title, r.Rating FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE b.Chapters = (SELECT MAX(Chapters) FROM book)"
    },
    {
        "question_id": 602,
        "answer_sql": "SELECT `Rank` FROM `review` WHERE `Book_ID`=(SELECT `Book_ID` FROM `book` ORDER BY `Pages` ASC LIMIT 1);"
    },
    {
        "question_id": 603,
        "answer_sql": "SELECT book.Title FROM book JOIN review ON book.Book_ID = review.Book_ID WHERE review.Rank = (SELECT MAX(Rank) FROM review)"
    },
    {
        "question_id": 604,
        "answer_sql": "SELECT AVG(review.Readers_in_Million) FROM review JOIN book ON review.Book_ID = book.Book_ID WHERE book.Type = 'Novel';"
    },
    {
        "question_id": 605,
        "answer_sql": "SELECT book.Type, COUNT(*) FROM book JOIN review ON book.Book_ID = review.Book_ID GROUP BY book.Type;"
    },
    {
        "question_id": 606,
        "answer_sql": "SELECT book.Type, COUNT(*) as Total_Books FROM book JOIN review ON book.Book_ID = review.Book_ID GROUP BY book.Type ORDER BY Total_Books DESC LIMIT 1;"
    },
    {
        "question_id": 607,
        "answer_sql": "SELECT b.Type FROM book b WHERE b.Type IN ( SELECT b1.Type FROM book b1 GROUP BY b1.Type HAVING COUNT(b1.Book_ID) >= 3 )"
    },
    {
        "question_id": 608,
        "answer_sql": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID ORDER BY r.Rating ASC;"
    },
    {
        "question_id": 609,
        "answer_sql": "SELECT book.Title, book.Audio FROM book JOIN review ON book.Book_ID = review.Book_ID WHERE review.Readers_in_Million = ( SELECT MAX(Readers_in_Million) FROM review WHERE Book_ID = book.Book_ID ) ORDER BY book.Audio DESC;"
    },
    {
        "question_id": 610,
        "answer_sql": "SELECT COUNT(*) FROM book LEFT JOIN review ON book.Book_ID = review.Book_ID WHERE review.Book_ID IS NULL;"
    },
    {
        "question_id": 611,
        "answer_sql": ""
    },
    {
        "question_id": 612,
        "answer_sql": "SELECT DISTINCT Type FROM book ;"
    },
    {
        "question_id": 613,
        "answer_sql": "SELECT book.Type, book.Title FROM book LEFT JOIN review ON book.Book_ID = review.Book_ID WHERE review.Book_ID IS NULL;"
    },
    {
        "question_id": 614,
        "answer_sql": "SELECT COUNT(*) FROM customer;"
    },
    {
        "question_id": 615,
        "answer_sql": "SELECT COUNT(*) FROM customer;"
    },
    {
        "question_id": 616,
        "answer_sql": "SELECT Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID JOIN branch ON customer_order.Branch_ID = branch.Branch_ID WHERE customer.Level_of_Membership < 10 ORDER BY customer.Level_of_Membership ASC;"
    },
    {
        "question_id": 617,
        "answer_sql": "SELECT Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID JOIN branch ON customer_order.Branch_ID = branch.Branch_ID WHERE customer.Level_of_Membership < 5 ORDER BY customer.Level_of_Membership ASC;"
    },
    {
        "question_id": 618,
        "answer_sql": "SELECT c.Name, c.Nationality, c.Card_Credit FROM customer c"
    },
    {
        "question_id": 619,
        "answer_sql": "SELECT customer.Nationality, customer.Card_Credit FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Customer_ID;"
    },
    {
        "question_id": 620,
        "answer_sql": "SELECT customer.Name, customer.Nationality FROM customer WHERE customer.Nationality IN ('England', 'Australia');"
    },
    {
        "question_id": 621,
        "answer_sql": "SELECT customer.Name, customer.Nationality FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID WHERE customer.Nationality IN ('England', 'Australia')"
    },
    {
        "question_id": 622,
        "answer_sql": "SELECT AVG( Card_Credit ) FROM `customer` WHERE `Level_of_Membership` > 1;"
    },
    {
        "question_id": 623,
        "answer_sql": "SELECT AVG( Card_Credit ) FROM `customer` WHERE `Level_of_Membership` > 1;"
    },
    {
        "question_id": 624,
        "answer_sql": "SELECT Card_Credit FROM customer WHERE Level_of_Membership =(SELECT MAX( Level_of_Membership ) FROM customer );"
    },
    {
        "question_id": 625,
        "answer_sql": "SELECT c.Name, c.Card_Credit FROM customer c WHERE c.Level_of_Membership = ( SELECT MAX(cm.Level_of_Membership) FROM customer cm )"
    },
    {
        "question_id": 626,
        "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality;"
    },
    {
        "question_id": 627,
        "answer_sql": "SELECT c.Nationality, COUNT(c.Customer_ID) as Number_of_Customers FROM customer c GROUP BY c.Nationality;"
    },
    {
        "question_id": 628,
        "answer_sql": "SELECT c.Nationality, COUNT(*) as 'Number of Customers' FROM customer c GROUP BY c.Nationality ORDER BY 'Number of Customers' DESC LIMIT 1;"
    },
    {
        "question_id": 629,
        "answer_sql": "SELECT customer.Nationality, COUNT(customer.Customer_ID) as Customer_Count FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Nationality ORDER BY Customer_Count DESC LIMIT 1;"
    },
    {
        "question_id": 630,
        "answer_sql": ""
    },
    {
        "question_id": 631,
        "answer_sql": "SELECT c.Nationality FROM customer c JOIN customer o ON c.Customer_ID = o.Customer_ID WHERE c.Card_Credit > 50 AND o.Card_Credit < 75;"
    },
    {
        "question_id": 632,
        "answer_sql": "SELECT customer.Name, customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID"
    },
    {
        "question_id": 633,
        "answer_sql": "SELECT customer.Name, customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Name, customer_order.Dish_Name;"
    },
    {
        "question_id": 634,
        "answer_sql": "SELECT c.Name, co.Dish_Name, co.Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name, co.Dish_Name ORDER BY co.Quantity DESC;"
    },
    {
        "question_id": 635,
        "answer_sql": "SELECT c.Name, co.Dish_Name, co.Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY co.Dish_Name, c.Name ORDER BY co.Quantity DESC;"
    },
    {
        "question_id": 636,
        "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name;"
    },
    {
        "question_id": 637,
        "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name;"
    },
    {
        "question_id": 638,
        "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name HAVING Total_Quantity > 1;"
    },
    {
        "question_id": 639,
        "answer_sql": "SELECT c.Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE c.Customer_ID IN ( SELECT co2.Customer_ID FROM customer_order co2 GROUP BY co2.Customer_ID HAVING SUM(co2.Quantity) > 1 )"
    },
    {
        "question_id": 640,
        "answer_sql": "SELECT DISTINCT Manager FROM branch;"
    },
    {
        "question_id": 641,
        "answer_sql": "SELECT DISTINCT Manager FROM branch;"
    },
    {
        "question_id": 642,
        "answer_sql": "SELECT c.Name FROM customer c LEFT JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE co.Customer_ID IS NULL;"
    },
    {
        "question_id": 643,
        "answer_sql": "SELECT c.Name FROM customer c LEFT JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE co.Customer_ID IS NULL;"
    },
    {
        "question_id": 644,
        "answer_sql": "SELECT COUNT(*) FROM `member`;"
    },
    {
        "question_id": 645,
        "answer_sql": "SELECT member.Name, member.Age FROM member ORDER BY member.Age ASC;"
    },
    {
        "question_id": 646,
        "answer_sql": "SELECT m.Name, m.Nationality FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID;"
    },
    {
        "question_id": 647,
        "answer_sql": "SELECT member.Name FROM member WHERE member.Nationality != 'England';"
    },
    {
        "question_id": 648,
        "answer_sql": "SELECT Name FROM member WHERE Age IN (19, 20);"
    },
    {
        "question_id": 649,
        "answer_sql": "SELECT Name FROM member WHERE Age = (SELECT MIN(Age) FROM member);"
    },
    {
        "question_id": 650,
        "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Members FROM member GROUP BY Nationality;"
    },
    {
        "question_id": 651,
        "answer_sql": "SELECT member.Nationality, COUNT(member.Member_ID) as 'Number of Members' FROM member JOIN club_leader ON member.Member_ID = club_leader.Member_ID JOIN club ON club_leader.Club_ID = club.Club_ID GROUP BY member.Nationality ORDER BY COUNT(member.Member_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 652,
        "answer_sql": "SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 653,
        "answer_sql": "SELECT m.Name AS Member_Name, c.Club_Name AS Club_Name FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID;"
    },
    {
        "question_id": 654,
        "answer_sql": "SELECT m.Name FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID WHERE c.Overall_Ranking > 100;"
    },
    {
        "question_id": 655,
        "answer_sql": "SELECT `member`.`Name` FROM `member` JOIN `club_leader` ON `member`.`Member_ID` = `club_leader`.`Member_ID` WHERE `club_leader`.`Year_Join` < '2018';"
    },
    {
        "question_id": 656,
        "answer_sql": "SELECT m.Name FROM club_leader cl JOIN club c ON cl.Club_ID = c.Club_ID JOIN member m ON cl.Member_ID = m.Member_ID WHERE c.Club_Name = 'Houston'"
    },
    {
        "question_id": 657,
        "answer_sql": "SELECT member.Name FROM member LEFT JOIN club_leader ON member.Member_ID = club_leader.Member_ID WHERE club_leader.Club_ID IS NULL;"
    },
    {
        "question_id": 658,
        "answer_sql": ""
    },
    {
        "question_id": 659,
        "answer_sql": "SELECT AVG( Age ) FROM member JOIN club_leader ON member . Member_ID = club_leader . Member_ID ;"
    },
    {
        "question_id": 660,
        "answer_sql": "SELECT `Club_Name` FROM `club` WHERE `Club_Name` LIKE '%state%';"
    },
    {
        "question_id": 661,
        "answer_sql": "SELECT c.Collection_Name, cs.Collection_Subset_ID FROM Collections c JOIN Collection_Subset_Members csm ON c.Collection_ID = csm.Collection_ID JOIN Collection_Subsets cs ON csm.Collection_Subset_ID = cs.Collection_Subset_ID GROUP BY c.Collection_Name, cs.Collection_Subset_ID;"
    },
    {
        "question_id": 662,
        "answer_sql": "SELECT c.Collection_Subset_Name FROM Collection_Subsets c JOIN Collection_Subset_Members cs ON c.Collection_Subset_ID = cs.Collection_Subset_ID GROUP BY c.Collection_Subset_Name;"
    },
    {
        "question_id": 663,
        "answer_sql": ""
    },
    {
        "question_id": 664,
        "answer_sql": "SELECT Collection_Subsets.Collection_Subset_Name, Collections.Collection_Description FROM Collection_Subset_Members JOIN Collection_Subsets ON Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID JOIN Collections ON Collection_Subset_Members.Related_Collection_ID = Collections.Collection_ID WHERE Collection_Subsets.Collection_Subset_Name = 'Top collection';"
    },
    {
        "question_id": 665,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_Name FROM Document_Subsets;"
    },
    {
        "question_id": 666,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets;"
    },
    {
        "question_id": 667,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 668,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 669,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects;"
    },
    {
        "question_id": 670,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects;"
    },
    {
        "question_id": 671,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID WHERE D.Owner = 'Marlin'"
    },
    {
        "question_id": 672,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE D.Owner = 'Marlin';"
    },
    {
        "question_id": 673,
        "answer_sql": "SELECT Document_Objects.Owner FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Document_Objects.Description = 'Braeden Collection'"
    },
    {
        "question_id": 674,
        "answer_sql": ""
    },
    {
        "question_id": 675,
        "answer_sql": "SELECT D.Owner FROM Document_Objects D JOIN Documents_in_Collections DIC ON D.Document_Object_ID = DIC.Document_Object_ID WHERE D.Owner = 'Marlin';"
    },
    {
        "question_id": 676,
        "answer_sql": "SELECT Document_Objects.Owner FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID WHERE Document_Subset_Members.Document_Subset_ID IN ( SELECT Document_Subset_ID FROM Document_Subset_Members WHERE Related_Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin' ) )"
    },
    {
        "question_id": 677,
        "answer_sql": "SELECT D.Description AS Parent_Document_Description FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID GROUP BY D.Description;"
    },
    {
        "question_id": 678,
        "answer_sql": "SELECT D.Description FROM Document_Objects D JOIN Document_Objects P ON D.Parent_Document_Object_ID = P.Document_Object_ID GROUP BY P.Document_Object_ID HAVING COUNT(D.Document_Object_ID) = 1;"
    },
    {
        "question_id": 679,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 680,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 681,
        "answer_sql": ""
    },
    {
        "question_id": 682,
        "answer_sql": ""
    },
    {
        "question_id": 683,
        "answer_sql": "SELECT D.Document_Object_ID, COUNT(DMS.Related_Document_Object_ID) as Child_Documents FROM Document_Objects D JOIN Document_Subset_Members DMS ON D.Document_Object_ID = DMS.Document_Object_ID GROUP BY D.Document_Object_ID;"
    },
    {
        "question_id": 684,
        "answer_sql": "SELECT D.Parent_Document_Object_ID, COUNT(D.Document_Object_ID) as Child_Count FROM Document_Objects D JOIN Documents_in_Collections DI ON DI.Document_Object_ID = D.Document_Object_ID GROUP BY D.Parent_Document_Object_ID;"
    },
    {
        "question_id": 685,
        "answer_sql": "SELECT Collection_Name FROM Collections;"
    },
    {
        "question_id": 686,
        "answer_sql": "SELECT Collections.Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID;"
    },
    {
        "question_id": 687,
        "answer_sql": "SELECT Collections.Collection_Description FROM Collections WHERE Collections.Collection_Name = 'Best';"
    },
    {
        "question_id": 688,
        "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Best';"
    },
    {
        "question_id": 689,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Collections d ON c.Parent_Collection_ID = d.Collection_ID WHERE c.Collection_Name = 'Nice';"
    },
    {
        "question_id": 690,
        "answer_sql": "SELECT DISTINCT c.Collection_Name FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Collection_Subset_Members csm ON c.Collection_ID = csm.Collection_ID WHERE c.Collection_Name = 'Nice'"
    },
    {
        "question_id": 691,
        "answer_sql": ""
    },
    {
        "question_id": 692,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c WHERE c.Collection_ID NOT IN ( SELECT Parent_Collection_ID FROM Collections WHERE Parent_Collection_ID IS NOT NULL )"
    },
    {
        "question_id": 693,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID GROUP BY D.Document_Object_ID HAVING COUNT(DSM.Related_Document_Object_ID) > 1;"
    },
    {
        "question_id": 694,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE EXISTS ( SELECT 1 FROM Document_Subset_Members DS WHERE DS.Related_Document_Object_ID = D.Document_Object_ID GROUP BY DS.Related_Document_Object_ID HAVING COUNT(*) > 1 );"
    },
    {
        "question_id": 695,
        "answer_sql": "SELECT COUNT(*) FROM Collections JOIN Documents_in_Collections di ON di.Collection_ID = Collections.Collection_ID JOIN Document_Subset_Members dsm ON dsm.Document_Object_ID = di.Document_Object_ID WHERE Collections.Collection_Name = 'Best'"
    },
    {
        "question_id": 696,
        "answer_sql": "SELECT COUNT(*) FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Subset_Members ON Documents_in_Collections.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Collections.Collection_Name = 'Best' AND Document_Subsets.Document_Subset_Name = 'Best Document Subset';"
    },
    {
        "question_id": 697,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collection_Subset_Members CSM ON DC.Collection_ID = CSM.Collection_ID JOIN Collections C ON CSM.Collection_ID = C.Collection_ID WHERE D.Owner = 'Ransom'"
    },
    {
        "question_id": 698,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Owner = 'Ransom';"
    },
    {
        "question_id": 699,
        "answer_sql": "SELECT Collection_Subsets.Collection_Subset_ID, Collection_Subsets.Collection_Subset_Name, COUNT(Collections.Collection_ID) as Number_of_Collections FROM Collection_Subset_Members JOIN Collection_Subsets ON Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID JOIN Collections ON Collection_Subset_Members.Related_Collection_ID = Collections.Collection_ID GROUP BY Collection_Subset_Members.Collection_Subset_ID, Collection_Subsets.Collection_Subset_Name ORDER BY Number_of_Collections DESC;"
    },
    {
        "question_id": 700,
        "answer_sql": "SELECT Collection_Subsets.Collection_Subset_ID, Collection_Subsets.Collection_Subset_Name, COUNT(DISTINCT Collections.Collection_ID) as Number_of_Collections FROM Collection_Subsets JOIN Collection_Subset_Members ON Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID JOIN Collections ON Collections.Collection_ID = Collection_Subset_Members.Related_Collection_ID GROUP BY Collection_Subsets.Collection_Subset_ID, Collection_Subsets.Collection_Subset_Name;"
    },
    {
        "question_id": 701,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(Document_Subset_Members.Related_Document_Object_ID) as Child_Count FROM Document_Objects JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Document_Object_ID WHERE Document_Objects.Description IS NOT NULL GROUP BY Document_Objects.Document_Object_ID ORDER BY Child_Count DESC;"
    },
    {
        "question_id": 702,
        "answer_sql": "SELECT do.Document_Object_ID, COUNT(dsm.Related_Document_Object_ID) as Number_of_Children FROM Document_Objects do LEFT JOIN Document_Subset_Members dsm ON do.Document_Object_ID = dsm.Related_Document_Object_ID GROUP BY do.Document_Object_ID;"
    },
    {
        "question_id": 703,
        "answer_sql": "SELECT D.Document_Object_ID, COUNT(DMS.Related_Document_Object_ID) as Related_Documents_Count FROM Document_Objects D JOIN Document_Subset_Members DMS ON DMS.Document_Object_ID = D.Document_Object_ID GROUP BY D.Document_Object_ID ORDER BY Related_Documents_Count ASC LIMIT 1;"
    },
    {
        "question_id": 704,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID ORDER BY COUNT(Documents_in_Collections.Document_Object_ID) ASC LIMIT 1;"
    },
    {
        "question_id": 705,
        "answer_sql": "SELECT D.Document_Object_ID, COUNT(DMS.Related_Document_Object_ID) as Number_of_Related_Documents FROM Document_Objects D JOIN Document_Subset_Members DMS ON D.Document_Object_ID = DMS.Document_Object_ID GROUP BY D.Document_Object_ID HAVING COUNT(DMS.Related_Document_Object_ID) BETWEEN 2 AND 4;"
    },
    {
        "question_id": 706,
        "answer_sql": "SELECT DOC.Document_Object_ID, COUNT(DOC.Document_Object_ID) as Related_Documents FROM Document_Subset_Members DSM JOIN Document_Objects DOC ON DSM.Related_Document_Object_ID = DOC.Document_Object_ID GROUP BY DOC.Document_Object_ID HAVING COUNT(DSM.Related_Document_Object_ID) BETWEEN 2 AND 4;"
    },
    {
        "question_id": 707,
        "answer_sql": "SELECT Document_Objects.Owner FROM Document_Objects JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID WHERE Document_Objects.Owner = 'Braeden' GROUP BY Document_Objects.Owner;"
    },
    {
        "question_id": 708,
        "answer_sql": "SELECT D.Owner FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subset_Members DSM2 ON D.Document_Object_ID = DSM2.Related_Document_Object_ID WHERE D.Owner = 'Braeden' GROUP BY D.Owner;"
    },
    {
        "question_id": 709,
        "answer_sql": ""
    },
    {
        "question_id": 710,
        "answer_sql": "SELECT DSM.Document_Subset_ID, DS.Document_Subset_Name FROM Document_Subset_Members DSM JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID JOIN Document_Objects DO ON DSM.Document_Object_ID = DO.Document_Object_ID WHERE DO.Owner = 'Braeden' GROUP BY DSM.Document_Subset_ID, DS.Document_Subset_Name;"
    },
    {
        "question_id": 711,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_ID, Document_Subsets.Document_Subset_Name, COUNT(DISTINCT Document_Subset_Members.Related_Document_Object_ID) as Number_of_Documents FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID JOIN Document_Objects ON Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Subsets.Document_Subset_ID, Document_Subsets.Document_Subset_Name ORDER BY Number_of_Documents DESC;"
    },
    {
        "question_id": 712,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_ID, Document_Subsets.Document_Subset_Name, COUNT(DISTINCT Document_Subset_Members.Related_Document_Object_ID) as Number_of_Documents FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID JOIN Document_Objects ON Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Subsets.Document_Subset_ID, Document_Subsets.Document_Subset_Name ORDER BY Number_of_Documents DESC;"
    },
    {
        "question_id": 713,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_ID, Document_Subsets.Document_Subset_Name, COUNT(DISTINCT Document_Subset_Members.Related_Document_Object_ID) as Number_of_Documents FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID GROUP BY Document_Subsets.Document_Subset_ID, Document_Subsets.Document_Subset_Name ORDER BY Number_of_Documents DESC LIMIT 1;"
    },
    {
        "question_id": 714,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_Name, Document_Subsets.Document_Subset_ID, COUNT(DISTINCT Document_Subset_Members.Related_Document_Object_ID) as Number_of_Documents FROM Document_Subset_Members INNER JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID INNER JOIN Document_Objects ON Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Subsets.Document_Subset_Name, Document_Subsets.Document_Subset_ID ORDER BY Number_of_Documents DESC LIMIT 1;"
    },
    {
        "question_id": 715,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Subset_Members AS DS JOIN Document_Objects AS D ON DS.Related_Document_Object_ID = D.Document_Object_ID WHERE DS.Document_Subset_ID IN ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' )"
    },
    {
        "question_id": 716,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Subset_Members AS DS JOIN Document_Objects AS D ON DS.Related_Document_Object_ID = D.Document_Object_ID JOIN Document_Subsets AS DS2 ON DS.Document_Subset_ID = DS2.Document_Subset_ID WHERE DS2.Document_Subset_Name = 'Best for 2000'"
    },
    {
        "question_id": 717,
        "answer_sql": "SELECT DSM.Document_Subset_ID, DS.Document_Subset_Name FROM Document_Subset_Members DSM JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID GROUP BY DSM.Document_Subset_ID, DS.Document_Subset_Name ORDER BY DS.Document_Subset_Name;"
    },
    {
        "question_id": 718,
        "answer_sql": ""
    },
    {
        "question_id": 719,
        "answer_sql": ""
    },
    {
        "question_id": 720,
        "answer_sql": "SELECT D.Document_Object_ID, D.Owner, C.Collection_Name FROM Document_Objects D JOIN Documents_in_Collections DI ON D.Document_Object_ID = DI.Document_Object_ID JOIN Collections C ON DI.Collection_ID = C.Collection_ID WHERE D.Owner = 'Ransom'"
    },
    {
        "question_id": 721,
        "answer_sql": "SELECT DOC.Document_Object_ID, COUNT(COL.Collection_ID) AS Number_of_Collections FROM Document_Objects DOC LEFT JOIN Documents_in_Collections DIC ON DOC.Document_Object_ID = DIC.Document_Object_ID LEFT JOIN Collections COL ON DIC.Collection_ID = COL.Collection_ID GROUP BY DOC.Document_Object_ID;"
    },
    {
        "question_id": 722,
        "answer_sql": "SELECT D.Document_Object_ID, COUNT(C.Collection_ID) as Number_of_Collections FROM Document_Objects D JOIN Documents_in_Collections DI ON DI.Document_Object_ID = D.Document_Object_ID JOIN Collections C ON C.Collection_ID = DI.Collection_ID GROUP BY D.Document_Object_ID;"
    },
    {
        "question_id": 723,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'"
    },
    {
        "question_id": 724,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best';"
    },
    {
        "question_id": 725,
        "answer_sql": "SELECT D.Document_Object_ID FROM Documents_in_Collections DI JOIN Collections C ON DI.Collection_ID = C.Collection_ID JOIN Document_Objects D ON DI.Document_Object_ID = D.Document_Object_ID WHERE C.Collection_Name = 'Best'"
    },
    {
        "question_id": 726,
        "answer_sql": "SELECT COUNT(DISTINCT Document_Object_ID) FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collection_Name = 'Best';"
    },
    {
        "question_id": 727,
        "answer_sql": "SELECT Collections.Collection_ID, Collections.Collection_Name, COUNT(DISTINCT Document_Subset_Members.Related_Document_Object_ID) as Number_of_Documents FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Subset_Members ON Documents_in_Collections.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID GROUP BY Collections.Collection_ID, Collections.Collection_Name ORDER BY Number_of_Documents DESC LIMIT 1;"
    },
    {
        "question_id": 728,
        "answer_sql": "SELECT C.Collection_ID, C.Collection_Name, MAX(D.Document_Object_ID) AS Most_Documents_ID, COUNT(D.Document_Object_ID) AS Document_Count\nFROM Documents_in_Collections DI JOIN Collections C ON DI.Collection_ID = C.Collection_ID\nJOIN Document_Objects D ON DI.Document_Object_ID = D.Document_Object_ID\nWHERE C.Collection_Name = 'Best'\nGROUP BY C.Collection_ID, C.Collection_Name\nORDER BY Document_Count DESC\nLIMIT 1;"
    },
    {
        "question_id": 729,
        "answer_sql": ""
    },
    {
        "question_id": 730,
        "answer_sql": "SELECT DISTINCT Document_Subset_Members.Related_Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Documents_in_Collections ON Document_Subset_Members.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Document_Subsets.Document_Subset_Name = 'Best for 2000' AND Collections.Collection_Name = 'Best';"
    },
    {
        "question_id": 731,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collections C ON DC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Best' AND NOT EXISTS ( SELECT 1 FROM Document_Subset_Members DSM JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE D.Document_Object_ID = DSM.Related_Document_Object_ID AND DS.Document_Subset_Name = 'Best' ) LIMIT 2000;"
    },
    {
        "question_id": 732,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DS.Document_Subset_ID = DSM.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Best for 2000' AND D.Document_Object_ID NOT IN ( SELECT DSM2.Related_Document_Object_ID FROM Document_Subset_Members DSM2 JOIN Document_Subsets DS2 ON DS2.Document_Subset_ID = DSM2.Document_Subset_ID WHERE DS2.Document_Subset_Name = 'Best' )"
    },
    {
        "question_id": 733,
        "answer_sql": ""
    },
    {
        "question_id": 734,
        "answer_sql": "SELECT DISTINCT Document_Subset_Members.Related_Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subsets.Document_Subset_Name = 'Best for 2000'"
    },
    {
        "question_id": 735,
        "answer_sql": ""
    },
    {
        "question_id": 736,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Subset_Members dsm ON di.Document_Object_ID = dsm.Related_Document_Object_ID WHERE c.Collection_Name = 'Best' GROUP BY c.Collection_Name;"
    },
    {
        "question_id": 737,
        "answer_sql": "SELECT COUNT(*) FROM Collections JOIN Collection_Subset_Members ON Collections.Collection_ID = Collection_Subset_Members.Collection_ID JOIN Collection_Subsets ON Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID WHERE Collection_Subset_Name = 'Best'"
    },
    {
        "question_id": 738,
        "answer_sql": "SELECT COUNT(DISTINCT c.Collection_ID) FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Subset_Members dsm ON di.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Best'"
    },
    {
        "question_id": 739,
        "answer_sql": ""
    },
    {
        "question_id": 740,
        "answer_sql": "SELECT c.Collection_Name, cs.Collection_Subset_ID FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Subset_Members dsm ON di.Document_Object_ID = dsm.Document_Object_ID JOIN Document_Objects do ON dsm.Document_Object_ID = do.Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID JOIN Collection_Subset_Members csm ON c.Collection_ID = csm.Collection_ID JOIN Collection_Subsets cs ON csm.Collection_Subset_ID = cs.Collection_Subset_ID WHERE c.Collection_Name = 'Best' GROUP BY cs.Collection_Subset_ID, c.Collection_Name;"
    },
    {
        "question_id": 741,
        "answer_sql": "SELECT COUNT(*) FROM songs JOIN performance_score ON songs.id = performance_score.songs_id WHERE songs.name LIKE '%Love%'"
    },
    {
        "question_id": 742,
        "answer_sql": "SELECT s.name FROM songs s ORDER BY s.name ASC;"
    },
    {
        "question_id": 743,
        "answer_sql": "SELECT `songs`.`name`, `songs`.`language` FROM `songs` JOIN `performance_score` ON `performance_score`.`songs_id` = `songs`.`id` WHERE `performance_score`.`stage_presence` > 0.5 AND `performance_score`.`rhythm_tempo` > 0.5 AND `performance_score`.`voice_sound_quality` > 0.5;"
    },
    {
        "question_id": 744,
        "answer_sql": "SELECT MAX(voice_sound_quality) AS max_voice_sound_quality, MIN(voice_sound_quality) AS min_voice_sound_quality FROM performance_score;"
    },
    {
        "question_id": 745,
        "answer_sql": "SELECT performance_score.voice_sound_quality, performance_score.rhythm_tempo, performance_score.stage_presence FROM performance_score JOIN participants ON performance_score.participant_id = participants.id WHERE participants.name = 'Freeway';"
    },
    {
        "question_id": 746,
        "answer_sql": "SELECT id , language , original_artist FROM songs WHERE name != 'Love';"
    },
    {
        "question_id": 747,
        "answer_sql": "SELECT `songs`.`name`, `songs`.`original_artist` FROM `songs` WHERE `songs`.`english_translation` = 'All the streets of love';"
    },
    {
        "question_id": 748,
        "answer_sql": "SELECT s.language, sp.stage_presence FROM songs s JOIN performance_score sp ON sp.songs_id = s.id WHERE s.language = 'English' GROUP BY s.language, sp.stage_presence ORDER BY s.language, sp.stage_presence;"
    },
    {
        "question_id": 749,
        "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id GROUP BY p.id, p.name HAVING COUNT(DISTINCT songs_id) >= 2;"
    },
    {
        "question_id": 750,
        "answer_sql": "SELECT participants.id, participants.name, participants.popularity FROM participants JOIN performance_score ON participants.id = performance_score.participant_id GROUP BY participants.id, participants.name, participants.popularity ORDER BY COUNT(performance_score.songs_id) DESC;"
    },
    {
        "question_id": 751,
        "answer_sql": "SELECT participants.id, participants.name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id WHERE performance_score.voice_sound_quality = 5 OR performance_score.rhythm_tempo = 5;"
    },
    {
        "question_id": 752,
        "answer_sql": ""
    },
    {
        "question_id": 753,
        "answer_sql": "SELECT s.id, s.name FROM songs s JOIN performance_score ps ON s.id = ps.songs_id JOIN participants p ON p.id = ps.participant_id WHERE p.popularity = ( SELECT MAX(popularity) FROM participants ) GROUP BY s.id, s.name ORDER BY COUNT(DISTINCT p.id) DESC, s.id;"
    },
    {
        "question_id": 754,
        "answer_sql": "SELECT COUNT(*) FROM performance_score WHERE stage_presence < 7 OR stage_presence > 9;"
    },
    {
        "question_id": 755,
        "answer_sql": "SELECT COUNT(*) FROM songs LEFT JOIN performance_score ON songs.id = performance_score.songs_id WHERE performance_score.songs_id IS NULL;"
    },
    {
        "question_id": 756,
        "answer_sql": "SELECT s.language, AVG(ps.rhythm_tempo) as average_rhythm_tempo FROM songs s JOIN performance_score ps ON ps.songs_id = s.id GROUP BY s.language;"
    },
    {
        "question_id": 757,
        "answer_sql": "SELECT DISTINCT p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id WHERE ps.songs_id IN (SELECT id FROM songs WHERE language = 'English')"
    },
    {
        "question_id": 758,
        "answer_sql": "SELECT p.name, p.popularity FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON s.id = ps.songs_id WHERE s.language IN ('Croatian', 'English') GROUP BY p.id, p.name, p.popularity HAVING COUNT(DISTINCT s.language) = 2;"
    },
    {
        "question_id": 759,
        "answer_sql": "SELECT songs.name FROM songs JOIN performance_score ON songs.id = performance_score.songs_id WHERE songs.name LIKE '%Is%'"
    },
    {
        "question_id": 760,
        "answer_sql": "SELECT s.original_artist FROM songs s JOIN performance_score ps ON s.id = ps.songs_id WHERE ps.rhythm_tempo > 5 GROUP BY s.original_artist ORDER BY AVG(ps.voice_sound_quality) DESC;"
    },
    {
        "question_id": 761,
        "answer_sql": "SELECT COUNT(*) FROM City;"
    },
    {
        "question_id": 762,
        "answer_sql": "SELECT COUNT(*) FROM City;"
    },
    {
        "question_id": 763,
        "answer_sql": "SELECT DISTINCT state FROM City;"
    },
    {
        "question_id": 764,
        "answer_sql": "SELECT DISTINCT City.state FROM Student JOIN City ON Student.city_code = City.city_code;"
    },
    {
        "question_id": 765,
        "answer_sql": "SELECT COUNT(DISTINCT City.country) as 'Number of Countries' FROM Student JOIN City ON Student.city_code = City.city_code"
    },
    {
        "question_id": 766,
        "answer_sql": "SELECT COUNT(DISTINCT City.country) FROM Student JOIN City ON Student.city_code = City.city_code;"
    },
    {
        "question_id": 767,
        "answer_sql": "SELECT City.city_code, City.city_name, City.state, City.country, City.latitude, City.longitude FROM City;"
    },
    {
        "question_id": 768,
        "answer_sql": "SELECT City.city_name, City.city_code, City.state, City.country FROM City;"
    },
    {
        "question_id": 769,
        "answer_sql": "SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore';"
    },
    {
        "question_id": 770,
        "answer_sql": "SELECT City.latitude, City.longitude FROM City WHERE City.city_name = 'Baltimore';"
    },
    {
        "question_id": 771,
        "answer_sql": "SELECT city_name FROM City WHERE state = 'PA';"
    },
    {
        "question_id": 772,
        "answer_sql": "SELECT city_name FROM City WHERE state = 'PA';"
    },
    {
        "question_id": 773,
        "answer_sql": "SELECT COUNT(*) FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 774,
        "answer_sql": "SELECT COUNT(*) FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 775,
        "answer_sql": "SELECT City.city_name, City.latitude, City.longitude FROM City ORDER BY City.latitude;"
    },
    {
        "question_id": 776,
        "answer_sql": "SELECT City.city_name FROM City WHERE City.country = 'USA' ORDER BY City.latitude;"
    },
    {
        "question_id": 777,
        "answer_sql": "SELECT City.state, COUNT(Student.city_code) as 'Number of Cities' FROM City LEFT JOIN Student ON City.city_code = Student.city_code GROUP BY City.state;"
    },
    {
        "question_id": 778,
        "answer_sql": "SELECT City.state, COUNT(DISTINCT City.city_code) as Num_Cities FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state;"
    },
    {
        "question_id": 779,
        "answer_sql": "SELECT City.country, COUNT(City.city_code) as 'Number of Cities' FROM City GROUP BY City.country;"
    },
    {
        "question_id": 780,
        "answer_sql": "SELECT country, COUNT(city_code) as total_cities FROM City GROUP BY country;"
    },
    {
        "question_id": 781,
        "answer_sql": "SELECT City.state, COUNT(City.city_code) as city_count FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state HAVING city_count >= 2;"
    },
    {
        "question_id": 782,
        "answer_sql": "SELECT City.state, COUNT(*) as num_cities FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 783,
        "answer_sql": "SELECT City.state, COUNT(*) as Num_Cities FROM City JOIN Student ON City.city_code = Student.city_code JOIN Direct_distance ON City.city_code = Direct_distance.city1_code GROUP BY City.state ORDER BY Num_Cities DESC LIMIT 1;"
    },
    {
        "question_id": 784,
        "answer_sql": "SELECT City.state FROM City GROUP BY City.state ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 785,
        "answer_sql": "SELECT country FROM City GROUP BY country ORDER BY COUNT(city_code) ASC LIMIT 1;"
    },
    {
        "question_id": 786,
        "answer_sql": "SELECT City.country FROM City GROUP BY City.country ORDER BY COUNT(City.city_code) ASC LIMIT 1;"
    },
    {
        "question_id": 787,
        "answer_sql": "SELECT Student.Fname, Student.LName FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.state = 'MD';"
    },
    {
        "question_id": 788,
        "answer_sql": "SELECT Student.Fname, Student.LName FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.state = 'MD';"
    },
    {
        "question_id": 789,
        "answer_sql": "SELECT COUNT(*) FROM Student INNER JOIN City ON Student.city_code = City.city_code WHERE City.country = 'China';"
    },
    {
        "question_id": 790,
        "answer_sql": "SELECT COUNT(*) FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.country = 'China';"
    },
    {
        "question_id": 791,
        "answer_sql": "SELECT Student.Fname, Student.Major FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.city_name = 'Baltimore';"
    },
    {
        "question_id": 792,
        "answer_sql": "SELECT Fname, Major FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.city_name = 'Baltimore' AND Student.Sex = 'M';"
    },
    {
        "question_id": 793,
        "answer_sql": "SELECT City.country, COUNT(Student.StuID) as Number_of_Students FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.country;"
    },
    {
        "question_id": 794,
        "answer_sql": "SELECT City.country, COUNT(Student.StuID) FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.country;"
    },
    {
        "question_id": 795,
        "answer_sql": "SELECT City.city_name, COUNT(Student.StuID) FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_name;"
    },
    {
        "question_id": 796,
        "answer_sql": "SELECT S.city_code, C.city_name, COUNT(S.StuID) as NumStudents FROM Student S JOIN City C ON S.city_code = C.city_code GROUP BY S.city_code, C.city_name;"
    },
    {
        "question_id": 797,
        "answer_sql": "SELECT City.state, COUNT(Student.StuID) as Student_Count FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state ORDER BY Student_Count DESC LIMIT 1;"
    },
    {
        "question_id": 798,
        "answer_sql": "SELECT City.state, COUNT(Student.StuID) as Student_Count FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state ORDER BY Student_Count DESC LIMIT 1;"
    },
    {
        "question_id": 799,
        "answer_sql": "SELECT City.country, COUNT(Student.StuID) as Student_Count FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.country ORDER BY Student_Count ASC LIMIT 1;"
    },
    {
        "question_id": 800,
        "answer_sql": "SELECT City.country FROM City INNER JOIN ( SELECT Student.city_code, COUNT(*) as student_count FROM Student GROUP BY Student.city_code ) as student_count ON City.city_code = student_count.city_code ORDER BY student_count.student_count ASC LIMIT 1;"
    },
    {
        "question_id": 801,
        "answer_sql": "SELECT City.city_name FROM City JOIN Student ON City.city_code = Student.city_code WHERE Student.city_code IS NOT NULL GROUP BY City.city_name HAVING COUNT(Student.StuID) >= 3;"
    },
    {
        "question_id": 802,
        "answer_sql": "SELECT City.city_name FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_name HAVING COUNT(Student.StuID) >= 3;"
    },
    {
        "question_id": 803,
        "answer_sql": "SELECT City.state FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state HAVING COUNT(Student.StuID) > 5;"
    },
    {
        "question_id": 804,
        "answer_sql": "SELECT City.state FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state HAVING COUNT(Student.StuID) > 5;"
    },
    {
        "question_id": 805,
        "answer_sql": "SELECT Student.StuID FROM Student LEFT JOIN City ON Student.city_code = City.city_code WHERE City.country != 'USA';"
    },
    {
        "question_id": 806,
        "answer_sql": "SELECT Student.StuID FROM Student WHERE Student.city_code != 'USA'"
    },
    {
        "question_id": 807,
        "answer_sql": "SELECT Student.StuID FROM Student JOIN City ON Student.city_code = City.city_code WHERE Student.Sex = 'F' AND City.state = 'PA';"
    },
    {
        "question_id": 808,
        "answer_sql": "SELECT Student.StuID FROM Student JOIN City ON Student.city_code = City.city_code WHERE Student.Sex = 'F' AND City.state = 'PA';"
    },
    {
        "question_id": 809,
        "answer_sql": "SELECT Student.StuID FROM Student JOIN City ON Student.city_code = City.city_code WHERE Student.Sex = 'M' AND City.country <> 'USA';"
    },
    {
        "question_id": 810,
        "answer_sql": "SELECT Student.StuID FROM Student WHERE Student.Sex = 'M' AND Student.city_code NOT IN (SELECT city_code FROM City WHERE Country = 'USA')"
    },
    {
        "question_id": 811,
        "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.city2_code = 'BAL' AND City.city_code = 'CHI';"
    },
    {
        "question_id": 812,
        "answer_sql": "SELECT C.city_name, C.latitude, C.longitude, ( SELECT 6371 * ACOS( COS( ( PI() * C.latitude / 180 ) ) * COS( ( PI() * CURRENT_RENT.latitude / 180 ) ) * COS((CURRENT_RENT.longitude - C.longitude) * PI() / 180) + SIN( ( PI() * C.latitude / 180 ) ) * SIN( ( PI() * CURRENT_RENT.latitude / 180 ) ) ) AS distance ) FROM City C, City CURRENT_RENT WHERE C.city_code = 'BAL' AND CURRENT_RENT.city_code = 'CHI'"
    },
    {
        "question_id": 813,
        "answer_sql": "SELECT d.distance FROM Direct_distance d JOIN City c1 ON d.city1_code = c1.city_code JOIN City c2 ON d.city2_code = c2.city_code WHERE c1.city_name = 'Boston' AND c2.city_name = 'Newark';"
    },
    {
        "question_id": 814,
        "answer_sql": "SELECT d1.distance FROM Direct_distance d1 JOIN City c1 ON d1.city1_code = c1.city_code JOIN City c2 ON d1.city2_code = c2.city_code WHERE c1.city_name = 'Boston' AND c2.city_name = 'Newark';"
    },
    {
        "question_id": 815,
        "answer_sql": "SELECT City.state, City.city_name, AVG(Direct_distance.distance) AS average_distance, MIN(Direct_distance.distance) AS minimum_distance, MAX(Direct_distance.distance) AS maximum_distance FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY City.state, City.city_name;"
    },
    {
        "question_id": 816,
        "answer_sql": "SELECT City.city_code, City.city_name, AVG(Direct_distance.distance) as Average_Distance, MIN(Direct_distance.distance) as Minimum_Distance, MAX(Direct_distance.distance) as Maximum_Distance FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY City.city_code, City.city_name"
    },
    {
        "question_id": 817,
        "answer_sql": "SELECT city1_code, city2_code, distance FROM Direct_distance WHERE distance = (SELECT MAX(distance) FROM Direct_distance);"
    },
    {
        "question_id": 818,
        "answer_sql": "SELECT DISTINCT Direct_distance.city1_code, City.city_name FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code WHERE Direct_distance.distance = ( SELECT MAX(distance) FROM Direct_distance );"
    },
    {
        "question_id": 819,
        "answer_sql": "SELECT Student.city_code FROM Student JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code WHERE Direct_distance.distance > ( SELECT AVG(distance) FROM Direct_distance )"
    },
    {
        "question_id": 820,
        "answer_sql": "SELECT city_code FROM City WHERE latitude > (SELECT AVG(latitude) FROM City) AND longitude > (SELECT AVG(longitude) FROM City);"
    },
    {
        "question_id": 821,
        "answer_sql": "SELECT Direct_distance.city1_code, City.city_name FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code WHERE Direct_distance.distance < 1000;"
    },
    {
        "question_id": 822,
        "answer_sql": "SELECT DISTINCT Direct_distance.city1_code FROM Direct_distance JOIN Student ON Direct_distance.city1_code = Student.city_code WHERE Student.Age > 25 AND Student.Sex = 'M' AND Direct_distance.distance < 1000;"
    },
    {
        "question_id": 823,
        "answer_sql": "SELECT SUM(Direct_distance.distance) as Total_Distance FROM City C1 JOIN ( SELECT city1_code, city2_code, distance FROM Direct_distance WHERE city1_code = 'BAL' ) Direct_distance ON C1.city_code = Direct_distance.city2_code;"
    },
    {
        "question_id": 824,
        "answer_sql": "SELECT SUM(D.distance) FROM Direct_distance D JOIN City C1 ON D.city1_code = C1.city_code JOIN City C2 ON D.city2_code = C2.city_code WHERE C1.city_name = 'BAL' AND C2.city_name NOT IN ('BAL');"
    },
    {
        "question_id": 825,
        "answer_sql": "SELECT AVG(Direct_distance.distance) as Average_Distance FROM Direct_distance JOIN City as Boston ON Direct_distance.city1_code = Boston.city_code JOIN City as Other_Cities ON Direct_distance.city2_code = Other_Cities.city_code WHERE Boston.city_name = 'Boston';"
    },
    {
        "question_id": 826,
        "answer_sql": "SELECT AVG(Direct_distance.distance) FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code WHERE City.city_name = 'Boston' AND City.city_name <> 'Boston';"
    },
    {
        "question_id": 827,
        "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.distance <= (SELECT MIN(distance) FROM Direct_distance WHERE city1_code = 'CHI') ORDER BY Direct_distance.distance ASC LIMIT 1;"
    },
    {
        "question_id": 828,
        "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE City.city_name = 'Chicago' ORDER BY Direct_distance.distance ASC LIMIT 1;"
    },
    {
        "question_id": 829,
        "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.city2_code = 'BOS' ORDER BY Direct_distance.distance DESC LIMIT 1;"
    },
    {
        "question_id": 830,
        "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.distance > (SELECT MAX(distance) FROM Direct_distance WHERE city1_code = 'BOS') ORDER BY Direct_distance.distance DESC LIMIT 1;"
    },
    {
        "question_id": 831,
        "answer_sql": "SELECT City.city_code, City.city_name, City.state, City.country, City.latitude, City.longitude, SUM(Direct_distance.distance) AS total_distance FROM City, City OtherCity, Direct_distance WHERE City.city_code = OtherCity.city_code AND Direct_distance.city1_code = City.city_code AND Direct_distance.city2_code = OtherCity.city_code GROUP BY City.city_code, OtherCity.city_code;"
    },
    {
        "question_id": 832,
        "answer_sql": "SELECT City.city_code, SUM(Direct_distance.distance) as Total_Distance FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code GROUP BY City.city_code;"
    },
    {
        "question_id": 833,
        "answer_sql": "SELECT City.city_name, AVG(Direct_distance.distance) FROM City JOIN Student ON City.city_code = Student.city_code JOIN Direct_distance ON (City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code) GROUP BY City.city_name;"
    },
    {
        "question_id": 834,
        "answer_sql": "SELECT City.city_name, AVG(Direct_distance.distance) as average_distance FROM City LEFT JOIN Direct_distance ON City.city_code = Direct_distance.city1_code GROUP BY City.city_name;"
    },
    {
        "question_id": 835,
        "answer_sql": "SELECT City.city_name, Direct_distance.distance FROM Student JOIN City ON Student.city_code = City.city_code JOIN Direct_distance ON (City.city_code = Direct_distance.city1_code AND Student.city_code = Direct_distance.city2_code) WHERE Student.LName = 'Smith' AND Student.Fname = 'Linda' OR Student.LName = 'Kim' AND Student.Fname = 'Tracy';"
    },
    {
        "question_id": 836,
        "answer_sql": "SELECT D.distance FROM Student S JOIN Direct_distance D ON (S.city_code = D.city1_code OR S.city_code = D.city2_code) WHERE S.LName = 'Smith' AND S.Fname = 'Linda' AND D.city1_code IN (SELECT city_code FROM Student WHERE Fname = 'Tracy' AND LName = 'Kim')"
    },
    {
        "question_id": 837,
        "answer_sql": ""
    },
    {
        "question_id": 838,
        "answer_sql": "SELECT Student.StuID, Student.Fname, Student.LName, Direct_distance.distance FROM Student JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code WHERE Student.LName = 'Smith' AND Student.Sex = 'F' ORDER BY Direct_distance.distance DESC LIMIT 1;"
    },
    {
        "question_id": 839,
        "answer_sql": "SELECT City.state FROM Student INNER JOIN City ON Student.city_code = City.city_code WHERE Student.Fname = 'Linda';"
    },
    {
        "question_id": 840,
        "answer_sql": "SELECT City.state FROM Student JOIN City ON Student.city_code = City.city_code WHERE Student.Fname = 'Linda'"
    },
    {
        "question_id": 841,
        "answer_sql": "SELECT Sailors.name, Sailors.rating, Sailors.age, Boats.name, Boats.color FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.age > 30;"
    },
    {
        "question_id": 842,
        "answer_sql": "SELECT Sailors.name, Sailors.rating, Boats.color FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.age > 30;"
    },
    {
        "question_id": 843,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors WHERE Sailors.age < 30;"
    },
    {
        "question_id": 844,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.age < 30;"
    },
    {
        "question_id": 845,
        "answer_sql": "SELECT Boats.name, Boats.color FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid = 1;"
    },
    {
        "question_id": 846,
        "answer_sql": "SELECT Boats.bid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid WHERE Reserves.sid = 1;"
    },
    {
        "question_id": 847,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;"
    },
    {
        "question_id": 848,
        "answer_sql": "SELECT Sailors.name FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.bid = 102;"
    },
    {
        "question_id": 849,
        "answer_sql": "SELECT Boats.bid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid;"
    },
    {
        "question_id": 850,
        "answer_sql": "SELECT Boats.bid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid;"
    },
    {
        "question_id": 851,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.name LIKE '%e%';"
    },
    {
        "question_id": 852,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.name LIKE '%e%';"
    },
    {
        "question_id": 853,
        "answer_sql": "SELECT Sailors.sid FROM Sailors WHERE Sailors.sid NOT IN ( SELECT Reserves.sid FROM Reserves WHERE Reserves.day = 'current' )"
    },
    {
        "question_id": 854,
        "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN ( SELECT sid FROM Sailors ORDER BY age ASC LIMIT 1 )"
    },
    {
        "question_id": 855,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.age > (SELECT MAX(Sailors.age) FROM Sailors WHERE Sailors.rating > 7);"
    },
    {
        "question_id": 856,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.age > ( SELECT Sailors.age FROM Sailors WHERE Sailors.rating > 7 )"
    },
    {
        "question_id": 857,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid GROUP BY Sailors.name, Sailors.sid HAVING COUNT(Boats.bid) >= 1;"
    },
    {
        "question_id": 858,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name, Sailors.sid;"
    },
    {
        "question_id": 859,
        "answer_sql": ""
    },
    {
        "question_id": 860,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid GROUP BY Sailors.name HAVING COUNT(Boats.bid) >= 2;"
    },
    {
        "question_id": 861,
        "answer_sql": "SELECT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 862,
        "answer_sql": ""
    },
    {
        "question_id": 863,
        "answer_sql": ""
    },
    {
        "question_id": 864,
        "answer_sql": ""
    },
    {
        "question_id": 865,
        "answer_sql": "SELECT Reserves.sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 866,
        "answer_sql": "SELECT Reserves.sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color IN ('red', 'blue')"
    },
    {
        "question_id": 867,
        "answer_sql": ""
    },
    {
        "question_id": 868,
        "answer_sql": ""
    },
    {
        "question_id": 869,
        "answer_sql": "SELECT Sailors.sid FROM Sailors WHERE Sailors.sid NOT IN ( SELECT Reserves.sid FROM Reserves );"
    },
    {
        "question_id": 870,
        "answer_sql": "SELECT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 871,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 872,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 873,
        "answer_sql": "SELECT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 874,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 875,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"
    },
    {
        "question_id": 876,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"
    },
    {
        "question_id": 877,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > ( SELECT Sailors.rating FROM Sailors WHERE Sailors.name = 'Luis' );"
    },
    {
        "question_id": 878,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis');"
    },
    {
        "question_id": 879,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > (SELECT Sailors.rating FROM Sailors WHERE Sailors.name = 'Luis');"
    },
    {
        "question_id": 880,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > ( SELECT rating FROM Sailors WHERE name = 'Luis' );"
    },
    {
        "question_id": 881,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > 2;"
    },
    {
        "question_id": 882,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating >= 3;"
    },
    {
        "question_id": 883,
        "answer_sql": "SELECT name, age FROM Sailors WHERE age = (SELECT MAX(age) FROM Sailors);"
    },
    {
        "question_id": 884,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors WHERE Sailors.age = (SELECT MAX(Sailors.age) FROM Sailors);"
    },
    {
        "question_id": 885,
        "answer_sql": "SELECT COUNT(*) FROM Sailors;"
    },
    {
        "question_id": 886,
        "answer_sql": "SELECT COUNT(*) FROM Sailors;"
    },
    {
        "question_id": 887,
        "answer_sql": "SELECT AVG(Sailors.age) as average_age FROM Sailors WHERE Sailors.rating = 7;"
    },
    {
        "question_id": 888,
        "answer_sql": "SELECT AVG(Sailors.age) FROM Sailors WHERE Sailors.rating = 7;"
    },
    {
        "question_id": 889,
        "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 890,
        "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 891,
        "answer_sql": "SELECT AVG(rating), MAX(age) FROM Sailors;"
    },
    {
        "question_id": 892,
        "answer_sql": "SELECT AVG(rating) as average_rating, MAX(age) as largest_age FROM Sailors;"
    },
    {
        "question_id": 893,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) as Number_of_Reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name;"
    },
    {
        "question_id": 894,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) as Number_of_Reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name;"
    },
    {
        "question_id": 895,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) as 'Number of Reservations' FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.bid > 50 GROUP BY Boats.name;"
    },
    {
        "question_id": 896,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) as num_reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.bid > 50 GROUP BY Boats.name;"
    },
    {
        "question_id": 897,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) as num_reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name HAVING COUNT(Reserves.bid) > 1;"
    },
    {
        "question_id": 898,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name HAVING COUNT(Reserves.bid) > 1;"
    },
    {
        "question_id": 899,
        "answer_sql": "SELECT B.name, COUNT(R.sid) as num_reservations FROM Boats B JOIN Reserves R ON B.bid = R.bid WHERE R.sid > 1 GROUP BY B.name;"
    },
    {
        "question_id": 900,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) FROM Boats JOIN Reserves ON Reserves.bid = Boats.bid WHERE Reserves.sid > 1 GROUP BY Boats.name;"
    },
    {
        "question_id": 901,
        "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) as average_age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"
    },
    {
        "question_id": 902,
        "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) as average_age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"
    },
    {
        "question_id": 903,
        "answer_sql": "SELECT Sailors.name, Sailors.rating, Sailors.age FROM Sailors ORDER BY Sailors.rating, Sailors.age;"
    },
    {
        "question_id": 904,
        "answer_sql": "SELECT name, rating, age FROM Sailors ORDER BY rating, age;"
    },
    {
        "question_id": 905,
        "answer_sql": "SELECT COUNT(*) FROM Boats;"
    },
    {
        "question_id": 906,
        "answer_sql": "SELECT COUNT(*) FROM Boats;"
    },
    {
        "question_id": 907,
        "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"
    },
    {
        "question_id": 908,
        "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"
    },
    {
        "question_id": 909,
        "answer_sql": "SELECT Boats.name FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 910,
        "answer_sql": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 911,
        "answer_sql": ""
    },
    {
        "question_id": 912,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > ( SELECT rating FROM Sailors WHERE sid IN ( SELECT sid FROM Reserves WHERE bid IN ( SELECT bid FROM Boats WHERE color = 'red' ) ) );"
    },
    {
        "question_id": 913,
        "answer_sql": "SELECT MAX(Sailors.rating) as Highest_Rating FROM Sailors"
    },
    {
        "question_id": 914,
        "answer_sql": "SELECT MAX(rating) as Max_Rating FROM Sailors;"
    },
    {
        "question_id": 915,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid IN (SELECT bid FROM Boats WHERE name = 'Melon');"
    },
    {
        "question_id": 916,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid IN (SELECT bid FROM Boats WHERE name = 'Melon');"
    },
    {
        "question_id": 917,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > 0 ORDER BY Sailors.rating DESC;"
    },
    {
        "question_id": 918,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > 0 ORDER BY Sailors.rating DESC;"
    },
    {
        "question_id": 919,
        "answer_sql": "SELECT Model FROM headphone WHERE Price = (SELECT MAX( Price ) FROM headphone );"
    },
    {
        "question_id": 920,
        "answer_sql": "SELECT headphone . Model , headphone . Price FROM headphone WHERE headphone . Price = ( SELECT MAX( headphone . Price ) FROM headphone )"
    },
    {
        "question_id": 921,
        "answer_sql": "SELECT Model FROM headphone ORDER BY Model;"
    },
    {
        "question_id": 922,
        "answer_sql": "SELECT DISTINCT headphone.Model FROM headphone JOIN (SELECT Headphone_ID FROM stock WHERE Quantity > 0) stock ON headphone.Headphone_ID = stock.Headphone_ID ORDER BY headphone.Model;"
    },
    {
        "question_id": 923,
        "answer_sql": "SELECT h.Class, COUNT(h.Class) as frequency FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE s.Quantity > 0 GROUP BY h.Class ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 924,
        "answer_sql": "SELECT h.Class, COUNT(h.Headphone_ID) as Total_Headphones FROM headphone h GROUP BY h.Class ORDER BY Total_Headphones DESC LIMIT 1;"
    },
    {
        "question_id": 925,
        "answer_sql": "SELECT h.Class, COUNT(*) as Number_of_Headphones FROM headphone h WHERE h.Class NOT IN (SELECT h1.Class FROM headphone h1 GROUP BY h1.Class HAVING COUNT(*) > 2) GROUP BY h.Class ORDER BY Number_of_Headphones DESC LIMIT 1;"
    },
    {
        "question_id": 926,
        "answer_sql": "SELECT h.Class FROM headphone h JOIN ( SELECT h1.Class, COUNT(*) as cnt FROM headphone h1 GROUP BY h1.Class ) g ON h.Class = g.Class WHERE g.cnt <= 2;"
    },
    {
        "question_id": 927,
        "answer_sql": "SELECT h.Class, COUNT(h.Headphone_ID) as Num_Headphones FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID JOIN store st ON s.Store_ID = st.Store_ID WHERE h.Price > 200 GROUP BY h.Class;"
    },
    {
        "question_id": 928,
        "answer_sql": "SELECT Class, COUNT(*) as Number_of_Headphones FROM headphone WHERE Price > 200 GROUP BY Class;"
    },
    {
        "question_id": 929,
        "answer_sql": "SELECT COUNT(DISTINCT Earpads) FROM headphone;"
    },
    {
        "question_id": 930,
        "answer_sql": "SELECT COUNT(DISTINCT Earpads) FROM headphone;"
    },
    {
        "question_id": 931,
        "answer_sql": "SELECT h.Earpads, COUNT(s.Store_ID) as Usage FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Earpads ORDER BY Usage DESC LIMIT 2;"
    },
    {
        "question_id": 932,
        "answer_sql": "SELECT h.Earpads, COUNT(s.Headphone_ID) as 'Number of Headphones' FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Earpads ORDER BY COUNT(s.Headphone_ID) DESC LIMIT 2;"
    },
    {
        "question_id": 933,
        "answer_sql": "SELECT Model , Class , Construction FROM headphone WHERE Price = (SELECT MIN( Price ) FROM headphone )"
    },
    {
        "question_id": 934,
        "answer_sql": "SELECT Model , Class , Construction FROM headphone WHERE Price = (SELECT MIN( Price ) FROM headphone )"
    },
    {
        "question_id": 935,
        "answer_sql": "SELECT hp.Construction, AVG(hp.Price) as Average_Price FROM headphone hp GROUP BY hp.Construction;"
    },
    {
        "question_id": 936,
        "answer_sql": "SELECT headphone.Construction, AVG(headphone.Price) as Average_Price FROM headphone JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID GROUP BY headphone.Construction ORDER BY Average_Price DESC;"
    },
    {
        "question_id": 937,
        "answer_sql": "SELECT h.Class FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE h.Earpads = 'Bowls' AND s.Quantity > 0 GROUP BY h.Class HAVING COUNT(h.Class) = 2;"
    },
    {
        "question_id": 938,
        "answer_sql": ""
    },
    {
        "question_id": 939,
        "answer_sql": "SELECT h.Model, h.Earpads FROM headphone h WHERE h.Construction != 'Plastic' AND h.Earpads IS NOT NULL AND h.Earpads != '' ORDER BY h.Earpads;"
    },
    {
        "question_id": 940,
        "answer_sql": "SELECT h.Earpads FROM headphone h WHERE h.Construction != 'Plastic'"
    },
    {
        "question_id": 941,
        "answer_sql": "SELECT headphone.Model FROM headphone INNER JOIN ( SELECT AVG(Price) as AvgPrice FROM headphone ) as AvgHeadphonePrice ON headphone.Price < AvgHeadphonePrice.AvgPrice;"
    },
    {
        "question_id": 942,
        "answer_sql": "SELECT h.Model FROM headphone h JOIN ( SELECT AVG(Price) as avg_price FROM headphone ) avg_price_table ON h.Price < avg_price_table.avg_price"
    },
    {
        "question_id": 943,
        "answer_sql": "SELECT s.Name, s.Date_Opened FROM store s JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Quantity > 100 ORDER BY s.Date_Opened;"
    },
    {
        "question_id": 944,
        "answer_sql": "SELECT Name FROM store ORDER BY Date_Opened ;"
    },
    {
        "question_id": 945,
        "answer_sql": "SELECT s.Name, s.Parking FROM store s JOIN stock st ON s.Store_ID = st.Store_ID JOIN headphone h ON h.Headphone_ID = st.Headphone_ID WHERE s.Neighborhood = 'Tarzana'"
    },
    {
        "question_id": 946,
        "answer_sql": "SELECT s.Name, s.Parking FROM store s JOIN stock st ON s.Store_ID = st.Store_ID WHERE s.Neighborhood = 'Tarzana'"
    },
    {
        "question_id": 947,
        "answer_sql": "SELECT DISTINCT Neighborhood FROM store ;"
    },
    {
        "question_id": 948,
        "answer_sql": "SELECT DISTINCT Neighborhood FROM store;"
    },
    {
        "question_id": 949,
        "answer_sql": "SELECT s.Neighborhood, COUNT(s.Store_ID) as Num_Stores FROM store s JOIN stock st ON s.Store_ID = st.Store_ID GROUP BY s.Neighborhood;"
    },
    {
        "question_id": 950,
        "answer_sql": "SELECT s.Neighborhood, COUNT(DISTINCT st.Store_ID) as Number_of_Stores FROM store s JOIN stock st ON s.Store_ID = st.Store_ID GROUP BY s.Neighborhood;"
    },
    {
        "question_id": 951,
        "answer_sql": "SELECT store.Name, SUM(stock.Quantity) as Total_Headphones FROM store JOIN stock ON store.Store_ID = stock.Store_ID GROUP BY store.Name ORDER BY Total_Headphones DESC LIMIT 1;"
    },
    {
        "question_id": 952,
        "answer_sql": "SELECT store.Name, SUM(stock.Quantity) as Total_Quantity FROM store JOIN stock ON store.Store_ID = stock.Store_ID WHERE stock.Quantity > 0 GROUP BY store.Store_ID, store.Name ORDER BY Total_Quantity DESC;"
    },
    {
        "question_id": 953,
        "answer_sql": "SELECT s.Name FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL;"
    },
    {
        "question_id": 954,
        "answer_sql": "SELECT store.Name FROM store LEFT JOIN stock ON store.Store_ID = stock.Store_ID WHERE stock.Headphone_ID IS NULL"
    },
    {
        "question_id": 955,
        "answer_sql": "SELECT headphone.Model FROM headphone LEFT JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID WHERE stock.Store_ID IS NULL;"
    },
    {
        "question_id": 956,
        "answer_sql": "SELECT h.Model FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID AND s.Store_ID NOT IN (SELECT Store_ID FROM store) WHERE s.Store_ID IS NULL;"
    },
    {
        "question_id": 957,
        "answer_sql": "SELECT h.Model, SUM(s.Quantity) as Total_Quantity FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model ORDER BY Total_Quantity DESC LIMIT 1;"
    },
    {
        "question_id": 958,
        "answer_sql": "SELECT h.Model, SUM(s.Quantity) as Total_Quantity FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID JOIN store st ON s.Store_ID = st.Store_ID GROUP BY h.Model ORDER BY Total_Quantity DESC LIMIT 1;"
    },
    {
        "question_id": 959,
        "answer_sql": "SELECT COUNT(*) FROM `stock` JOIN `store` ON `stock`.`Store_ID` = `store`.`Store_ID` WHERE `store`.`Name` = 'Woodman';"
    },
    {
        "question_id": 960,
        "answer_sql": "SELECT SUM(stock.Quantity) FROM stock JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = 'Woodman';"
    },
    {
        "question_id": 961,
        "answer_sql": "SELECT s.Neighborhood FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Quantity IS NULL;"
    },
    {
        "question_id": 962,
        "answer_sql": "SELECT s.Neighborhood FROM store s LEFT JOIN stock s1 ON s.Store_ID = s1.Store_ID WHERE s1.Headphone_ID IS NULL;"
    },
    {
        "question_id": 963,
        "answer_sql": "SELECT COUNT(*) FROM Author;"
    },
    {
        "question_id": 964,
        "answer_sql": "SELECT COUNT(*) FROM Author;"
    },
    {
        "question_id": 965,
        "answer_sql": "SELECT COUNT(*) FROM Paper;"
    },
    {
        "question_id": 966,
        "answer_sql": "SELECT COUNT(*) FROM Paper;"
    },
    {
        "question_id": 967,
        "answer_sql": "SELECT COUNT(DISTINCT Affiliation.affiliation_id) FROM Affiliation;"
    },
    {
        "question_id": 968,
        "answer_sql": "SELECT COUNT(*) FROM Affiliation;"
    },
    {
        "question_id": 969,
        "answer_sql": "SELECT COUNT(DISTINCT Paper.paper_id) FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Citation ON Paper.paper_id = Citation.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Paper.year = 2000;"
    },
    {
        "question_id": 970,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000';"
    },
    {
        "question_id": 971,
        "answer_sql": "SELECT COUNT(*) FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Paper.year = 2009 AND Affiliation.name = 'Columbia University';"
    },
    {
        "question_id": 972,
        "answer_sql": "SELECT COUNT(DISTINCT Paper.paper_id) FROM Paper JOIN Author ON Paper.paper_id = Author.author_id JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Columbia University' AND Paper.year = 2009;"
    },
    {
        "question_id": 973,
        "answer_sql": ""
    },
    {
        "question_id": 974,
        "answer_sql": ""
    },
    {
        "question_id": 975,
        "answer_sql": "SELECT Paper.venue, Paper.year FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Paper.year IS NOT NULL GROUP BY Paper.venue, Paper.year ORDER BY Paper.year DESC;"
    },
    {
        "question_id": 976,
        "answer_sql": "SELECT DISTINCT `venue`, `year` FROM `Paper` ORDER BY `year`;"
    },
    {
        "question_id": 977,
        "answer_sql": ""
    },
    {
        "question_id": 978,
        "answer_sql": "SELECT Paper.title, Author_list.paper_id FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = 'Harvard University';"
    },
    {
        "question_id": 979,
        "answer_sql": ""
    },
    {
        "question_id": 980,
        "answer_sql": ""
    },
    {
        "question_id": 981,
        "answer_sql": "SELECT P.paper_id, P.title FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Affiliation A ON AL.affiliation_id = A.affiliation_id WHERE A.name IN ('Stanford University', 'Columbia University')"
    },
    {
        "question_id": 982,
        "answer_sql": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Affiliation.affiliation_id = Author_list.affiliation_id WHERE Affiliation.name IN ('Stanford University', 'Columbia University') GROUP BY Paper.title, Paper.paper_id HAVING COUNT(DISTINCT Affiliation.name) = 2"
    },
    {
        "question_id": 983,
        "answer_sql": ""
    },
    {
        "question_id": 984,
        "answer_sql": ""
    },
    {
        "question_id": 985,
        "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id WHERE AL.author_id IN ( SELECT author_id FROM Author WHERE name LIKE '%Mckeown%' ) AND AL.author_id NOT IN ( SELECT author_id FROM Author WHERE name LIKE '%Rambow%' )"
    },
    {
        "question_id": 986,
        "answer_sql": ""
    },
    {
        "question_id": 987,
        "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id WHERE AL.author_id IN ( SELECT author_id FROM Author WHERE name IN ('Mckeown, Kathleen', 'Rambow, Owen') )"
    },
    {
        "question_id": 988,
        "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id WHERE AL.author_id IN ( SELECT author_id FROM Author WHERE name IN ('Mckeown, Kathleen', 'Rambow, Owen') )"
    },
    {
        "question_id": 989,
        "answer_sql": ""
    },
    {
        "question_id": 990,
        "answer_sql": ""
    },
    {
        "question_id": 991,
        "answer_sql": ""
    },
    {
        "question_id": 992,
        "answer_sql": ""
    },
    {
        "question_id": 993,
        "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON P.paper_id = AL.paper_id WHERE P.paper_id IN ( SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > 50 ) AND P.paper_id NOT IN ( SELECT paper_id FROM Paper WHERE year < 2000 )"
    },
    {
        "question_id": 994,
        "answer_sql": "SELECT A.name FROM Author A WHERE ( SELECT COUNT(*) FROM Author_list AL WHERE AL.author_id = A.author_id ) > 50;"
    },
    {
        "question_id": 995,
        "answer_sql": ""
    },
    {
        "question_id": 996,
        "answer_sql": ""
    },
    {
        "question_id": 997,
        "answer_sql": "SELECT Paper.venue, Paper.year FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id GROUP BY Paper.venue, Paper.year ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 998,
        "answer_sql": "SELECT P.venue, P.year FROM Paper P WHERE P.paper_id IN ( SELECT C.paper_id FROM Citation C GROUP BY C.paper_id ORDER BY COUNT(*) DESC LIMIT 1 )"
    },
    {
        "question_id": 999,
        "answer_sql": "SELECT Paper.venue, COUNT(Paper.paper_id) as publication_count FROM Paper GROUP BY Paper.venue ORDER BY publication_count ASC LIMIT 1;"
    },
    {
        "question_id": 1000,
        "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1001,
        "answer_sql": "SELECT COUNT(DISTINCT Citation.cited_paper_id) as total_citations FROM Citation JOIN Paper ON Citation.cited_paper_id = Paper.paper_id WHERE Paper.paper_id = 'A00-1002';"
    },
    {
        "question_id": 1002,
        "answer_sql": "SELECT COUNT(DISTINCT Citation.cited_paper_id) as total_cited_papers FROM Citation JOIN Paper ON Citation.cited_paper_id = Paper.paper_id WHERE Paper.paper_id = 'A00-1002';"
    },
    {
        "question_id": 1003,
        "answer_sql": "SELECT COUNT(DISTINCT Citation.cited_paper_id) FROM Citation JOIN Paper ON Citation.cited_paper_id = Paper.paper_id WHERE Paper.paper_id = 'D12-1027';"
    },
    {
        "question_id": 1004,
        "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'D12-1027';"
    },
    {
        "question_id": 1005,
        "answer_sql": "SELECT Paper.paper_id, Paper.title, Paper.year, COUNT(Citation.cited_paper_id) as citation_count FROM Paper LEFT JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.paper_id, Paper.title, Paper.year ORDER BY citation_count DESC LIMIT 1;"
    },
    {
        "question_id": 1006,
        "answer_sql": "SELECT P.paper_id, COUNT(C.cited_paper_id) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id ORDER BY citation_count DESC LIMIT 1;"
    },
    {
        "question_id": 1007,
        "answer_sql": "SELECT P.title FROM Paper P WHERE P.paper_id IN ( SELECT C.cited_paper_id FROM Citation C GROUP BY C.cited_paper_id ORDER BY COUNT(*) DESC LIMIT 1 )"
    },
    {
        "question_id": 1008,
        "answer_sql": "SELECT Paper.title FROM Paper JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.title ORDER BY COUNT(Citation.cited_paper_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1009,
        "answer_sql": "SELECT Paper.paper_id, Paper.title, COUNT(Citation.cited_paper_id) as citation_count FROM Paper JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.paper_id, Paper.title ORDER BY citation_count DESC LIMIT 10;"
    },
    {
        "question_id": 1010,
        "answer_sql": "SELECT P.paper_id, P.title, COUNT(C.cited_paper_id) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id, P.title ORDER BY citation_count DESC LIMIT 10;"
    },
    {
        "question_id": 1011,
        "answer_sql": "SELECT COUNT(*) FROM Citation JOIN Paper ON Citation.paper_id = Paper.paper_id JOIN Author_list ON Paper.paper_id = Author_list.paper_id WHERE Author_list.author_id = (SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen')"
    },
    {
        "question_id": 1012,
        "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'Mckeown' AND cited_paper_id = 'Kathleen';"
    },
    {
        "question_id": 1013,
        "answer_sql": "SELECT COUNT(*) FROM Citation JOIN Paper ON Citation.paper_id = Paper.paper_id JOIN Author ON Citation.cited_paper_id = Author.author_id WHERE Author.name = 'Mckeown, Kathleen';"
    },
    {
        "question_id": 1014,
        "answer_sql": "SELECT COUNT(*) FROM Paper JOIN Citation ON Paper.paper_id = Citation.paper_id JOIN Author ON Citation.cited_paper_id = Author.author_id WHERE Author.name = 'Mckeown' AND Author.name = 'Kathleen';"
    },
    {
        "question_id": 1015,
        "answer_sql": "SELECT a.name, COUNT(c.paper_id) as num_citations FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Citation c ON al.paper_id = c.paper_id GROUP BY a.author_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1016,
        "answer_sql": "SELECT Author.name AS Author_Name , COUNT(Citation.cited_paper_id) AS Citations_Count FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Citation ON Author_list.paper_id = Citation.paper_id GROUP BY Author.author_id ORDER BY Citations_Count DESC LIMIT 1;"
    },
    {
        "question_id": 1017,
        "answer_sql": ""
    },
    {
        "question_id": 1018,
        "answer_sql": ""
    },
    {
        "question_id": 1019,
        "answer_sql": "SELECT Paper.venue, Paper.year FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Citation ON Paper.paper_id = Citation.paper_id WHERE Affiliation.name = 'Columbia University' GROUP BY Paper.venue, Paper.year ORDER BY Paper.venue, Paper.year;"
    },
    {
        "question_id": 1020,
        "answer_sql": "SELECT P.venue, P.year FROM Paper P WHERE P.venue IS NOT NULL AND P.year IS NOT NULL GROUP BY P.venue, P.year ORDER BY P.venue, P.year;"
    },
    {
        "question_id": 1021,
        "answer_sql": "SELECT A.author_id, A.name, COUNT(P.paper_id) as num_papers FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.year = 2009 GROUP BY A.author_id, A.name ORDER BY num_papers DESC LIMIT 1;"
    },
    {
        "question_id": 1022,
        "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id JOIN Citation C ON P.paper_id = C.paper_id WHERE P.year = 2009 GROUP BY A.author_id ORDER BY COUNT(P.paper_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1023,
        "answer_sql": "SELECT A.name AS Affiliation_name FROM Affiliation A JOIN ( SELECT author_id, affiliation_id FROM Author_list WHERE paper_id IN ( SELECT paper_id FROM Paper WHERE year = 2009 ) ) B ON A.affiliation_id = B.affiliation_id GROUP BY A.name ORDER BY COUNT(B.author_id) DESC LIMIT 3;"
    },
    {
        "question_id": 1024,
        "answer_sql": "SELECT a.name AS Affiliation, COUNT(p.paper_id) AS PaperCount FROM Author_list AS al JOIN Author AS a ON al.author_id = a.author_id JOIN Affiliation AS af ON al.affiliation_id = af.affiliation_id JOIN Paper AS p ON al.paper_id = p.paper_id WHERE p.year = 2009 GROUP BY af.name ORDER BY PaperCount DESC LIMIT 3;"
    },
    {
        "question_id": 1025,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year <= 2009;"
    },
    {
        "question_id": 1026,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia' AND year <= 2009;"
    },
    {
        "question_id": 1027,
        "answer_sql": "SELECT COUNT(DISTINCT Paper.paper_id) FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Stanford University' AND Paper.year BETWEEN 2000 AND 2009;"
    },
    {
        "question_id": 1028,
        "answer_sql": "SELECT COUNT(DISTINCT Paper.paper_id) FROM Paper JOIN Author ON Paper.paper_id = Author.author_id JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Paper.year BETWEEN 2000 AND 2009 AND Affiliation.name = 'Stanford University';"
    },
    {
        "question_id": 1029,
        "answer_sql": "SELECT P.title FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id GROUP BY P.title ORDER BY COUNT(AL.author_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1030,
        "answer_sql": "SELECT `Paper`.`title` FROM `Paper` JOIN `Author_list` ON `Paper`.`paper_id` = `Author_list`.`paper_id` GROUP BY `Paper`.`paper_id` ORDER BY COUNT(`Author_list`.`author_id`) DESC LIMIT 1;"
    },
    {
        "question_id": 1031,
        "answer_sql": "SELECT COUNT(DISTINCT Author.author_id) FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = 'Mckeown, Kathleen' AND Paper.paper_id = 'Mckeown, Kathleen';"
    },
    {
        "question_id": 1032,
        "answer_sql": "SELECT COUNT(DISTINCT Author.author_id) FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.paper_id IN ( SELECT cited_paper_id FROM Citation WHERE paper_id = 'Mckeown, Kathleen' );"
    },
    {
        "question_id": 1033,
        "answer_sql": ""
    },
    {
        "question_id": 1034,
        "answer_sql": ""
    },
    {
        "question_id": 1035,
        "answer_sql": ""
    },
    {
        "question_id": 1036,
        "answer_sql": "SELECT paper_id FROM Paper WHERE title LIKE '%translation%';"
    },
    {
        "question_id": 1037,
        "answer_sql": "SELECT Paper.paper_id, Paper.title FROM Paper LEFT JOIN Author_list ON Paper.paper_id = Author_list.paper_id WHERE Author_list.author_id IS NULL;"
    },
    {
        "question_id": 1038,
        "answer_sql": ""
    },
    {
        "question_id": 1039,
        "answer_sql": "SELECT A.name AS Affiliation_name FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Author AO ON AL.author_id = AO.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE A.address LIKE '%China%' GROUP BY A.name, P.paper_id ORDER BY COUNT(P.paper_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1040,
        "answer_sql": "SELECT A.name AS Affiliation_name, P.venue AS Paper_venue, P.title AS Paper_title, P.year AS Paper_year FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.paper_id = P.paper_id JOIN Citation C ON P.paper_id = C.paper_id WHERE A.address LIKE '%China%' GROUP BY A.name, P.venue, P.title, P.year ORDER BY COUNT(P.paper_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1041,
        "answer_sql": "SELECT Paper.year , COUNT(DISTINCT Paper.paper_id) AS 'Number of Papers' FROM Paper GROUP BY Paper.year ORDER BY Paper.year;"
    },
    {
        "question_id": 1042,
        "answer_sql": "SELECT Paper.venue, Paper.year, COUNT(DISTINCT Paper.paper_id) as num_papers FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.venue, Paper.year;"
    },
    {
        "question_id": 1043,
        "answer_sql": ""
    },
    {
        "question_id": 1044,
        "answer_sql": ""
    },
    {
        "question_id": 1045,
        "answer_sql": "SELECT Paper.title FROM Paper JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.title HAVING COUNT(Citation.cited_paper_id) > 50;"
    },
    {
        "question_id": 1046,
        "answer_sql": "SELECT title FROM Paper WHERE paper_id IN ( SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > 50 )"
    },
    {
        "question_id": 1047,
        "answer_sql": "SELECT COUNT(DISTINCT a.author_id) FROM Author a LEFT JOIN ( SELECT c.paper_id, COUNT(*) as citation_count FROM Citation c GROUP BY c.paper_id HAVING citation_count > 50 ) as citation_count ON a.author_id = citation_count.paper_id WHERE citation_count.paper_id IS NULL;"
    },
    {
        "question_id": 1048,
        "answer_sql": "SELECT COUNT(DISTINCT a.author_id) FROM Author a LEFT JOIN ( SELECT paper_id, COUNT(*) as citation_count FROM Citation GROUP BY paper_id HAVING citation_count <= 50 ) c ON a.author_id = c.paper_id WHERE c.paper_id IS NULL;"
    },
    {
        "question_id": 1049,
        "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009;"
    },
    {
        "question_id": 1050,
        "answer_sql": "SELECT A.name, A.email FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009 GROUP BY A.name, A.email;"
    },
    {
        "question_id": 1051,
        "answer_sql": "SELECT A.name FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id WHERE AL.paper_id IS NULL;"
    },
    {
        "question_id": 1052,
        "answer_sql": ""
    },
    {
        "question_id": 1053,
        "answer_sql": "SELECT COUNT(*) FROM conference;"
    },
    {
        "question_id": 1054,
        "answer_sql": "SELECT COUNT(*) FROM conference;"
    },
    {
        "question_id": 1055,
        "answer_sql": "SELECT DISTINCT Conference_Name FROM conference;"
    },
    {
        "question_id": 1056,
        "answer_sql": "SELECT DISTINCT Conference_Name FROM conference;"
    },
    {
        "question_id": 1057,
        "answer_sql": "SELECT Conference_Name , Year , Location FROM conference ;"
    },
    {
        "question_id": 1058,
        "answer_sql": "SELECT Conference_Name , Year , Location FROM conference ;"
    },
    {
        "question_id": 1059,
        "answer_sql": "SELECT conference.Conference_Name, COUNT(*) FROM conference JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Conference_Name;"
    },
    {
        "question_id": 1060,
        "answer_sql": "SELECT c.Conference_Name, COUNT(*) as occurrence FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name;"
    },
    {
        "question_id": 1061,
        "answer_sql": "SELECT Year, COUNT(*) as Number_of_Conferences FROM conference JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY Year ORDER BY Year;"
    },
    {
        "question_id": 1062,
        "answer_sql": "SELECT c.Conference_Name, c.Year FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Year ORDER BY c.Year;"
    },
    {
        "question_id": 1063,
        "answer_sql": "SELECT MIN(Year) as Min_Year FROM conference JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Year ORDER BY Min_Year ASC LIMIT 1;"
    },
    {
        "question_id": 1064,
        "answer_sql": "SELECT MIN(c.Year) as Fewest_Conferences_Year FROM conference c JOIN ( SELECT Conference_ID FROM conference_participation GROUP BY Conference_ID HAVING COUNT(staff_ID) IN (SELECT COUNT(*) FROM staff) ) cp ON c.Conference_ID = cp.Conference_ID ;"
    },
    {
        "question_id": 1065,
        "answer_sql": "SELECT conference.Location FROM conference JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Location HAVING COUNT(DISTINCT conference.Conference_ID) >= 2;"
    },
    {
        "question_id": 1066,
        "answer_sql": "SELECT DISTINCT c.Location FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.name IN ( SELECT DISTINCT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID GROUP BY s.staff_ID HAVING COUNT(cp.staff_ID) >= 2 )"
    },
    {
        "question_id": 1067,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location, institution.Founded FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID GROUP BY institution.Institution_ID;"
    },
    {
        "question_id": 1068,
        "answer_sql": "SELECT Institution_Name , Location , Founded FROM institution;"
    },
    {
        "question_id": 1069,
        "answer_sql": "SELECT COUNT(DISTINCT institution.Institution_Name) FROM institution WHERE institution.Founded BETWEEN 1850 AND 1900;"
    },
    {
        "question_id": 1070,
        "answer_sql": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900;"
    },
    {
        "question_id": 1071,
        "answer_sql": "SELECT Institution_Name, Location FROM institution WHERE Founded = (SELECT MAX(Founded) FROM institution);"
    },
    {
        "question_id": 1072,
        "answer_sql": "SELECT Institution_Name, Location FROM institution WHERE Founded = (SELECT MAX(Founded) FROM institution);"
    },
    {
        "question_id": 1073,
        "answer_sql": "SELECT institution.Institution_Name, COUNT(staff.staff_ID) as Number_of_Staff FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_Name ORDER BY Number_of_Staff DESC;"
    },
    {
        "question_id": 1074,
        "answer_sql": "SELECT institution.Institution_Name, COUNT(staff.staff_ID) as Staff_Count FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_Name ORDER BY Staff_Count DESC;"
    },
    {
        "question_id": 1075,
        "answer_sql": "SELECT i.Institution_Name FROM institution i LEFT JOIN staff s ON i.Institution_ID = s.Institution_ID WHERE s.staff_ID IS NULL;"
    },
    {
        "question_id": 1076,
        "answer_sql": "SELECT institution.Institution_Name FROM institution LEFT JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE staff.staff_ID IS NULL;"
    },
    {
        "question_id": 1077,
        "answer_sql": "SELECT name, Age FROM staff WHERE Age > (SELECT AVG(Age) FROM staff)"
    },
    {
        "question_id": 1078,
        "answer_sql": "SELECT staff.name, staff.Age FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID WHERE staff.Age > ( SELECT AVG(staff.Age) FROM staff )"
    },
    {
        "question_id": 1079,
        "answer_sql": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM staff WHERE Nationality = 'United States';"
    },
    {
        "question_id": 1080,
        "answer_sql": "SELECT MAX(staff.Age) as Maximum_Age, MIN(staff.Age) as Minimum_Age FROM staff;"
    },
    {
        "question_id": 1081,
        "answer_sql": "SELECT c.Conference_Name FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.name IN (SELECT name FROM staff WHERE Nationality = 'Canada') AND c.Conference_Name IS NOT NULL;"
    },
    {
        "question_id": 1082,
        "answer_sql": "SELECT c.Conference_Name, c.Year FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.Nationality = 'Canada' GROUP BY c.Conference_Name, c.Year"
    },
    {
        "question_id": 1083,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE cp.role IN ('Speaker', 'Sponsor') GROUP BY s.name HAVING COUNT(DISTINCT c.Conference_ID) = 2;"
    },
    {
        "question_id": 1084,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE cp.role IN ('Speaker', 'Sponsor') GROUP BY s.name HAVING COUNT(DISTINCT c.Conference_ID) = 2;"
    },
    {
        "question_id": 1085,
        "answer_sql": "SELECT name FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID WHERE conference_participation.Conference_ID IN (SELECT Conference_ID FROM conference WHERE Conference_Name IN ('ACL', 'Naccl'));"
    },
    {
        "question_id": 1086,
        "answer_sql": ""
    },
    {
        "question_id": 1087,
        "answer_sql": "SELECT staff.name FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE conference.Year IN (2003, 2004) ;"
    },
    {
        "question_id": 1088,
        "answer_sql": "SELECT staff.name FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE conference.Year BETWEEN 2003 AND 2004;"
    },
    {
        "question_id": 1089,
        "answer_sql": "SELECT c.Conference_Name, c.Year, COUNT(cp.staff_ID) as Number_of_Participants FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_ID, c.Year;"
    },
    {
        "question_id": 1090,
        "answer_sql": "SELECT c.Conference_Name, c.Conference_ID, c.Year, COUNT(cp.staff_ID) as Number_of_Participants FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name, c.Conference_ID, c.Year ORDER BY c.Conference_ID;"
    },
    {
        "question_id": 1091,
        "answer_sql": "SELECT c.Conference_Name, COUNT(cp.staff_ID) as Attendance_Count FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name ORDER BY Attendance_Count DESC LIMIT 2;"
    },
    {
        "question_id": 1092,
        "answer_sql": "SELECT c.Conference_Name, COUNT(cp.role) as Attendance FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID GROUP BY c.Conference_ID, s.staff_ID ORDER BY Attendance DESC LIMIT 2;"
    },
    {
        "question_id": 1093,
        "answer_sql": "SELECT s.name, s.Nationality FROM staff s LEFT JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IS NULL;"
    },
    {
        "question_id": 1094,
        "answer_sql": "SELECT s.name, s.nationality FROM staff s LEFT JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IS NULL;"
    },
    {
        "question_id": 1095,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location FROM institution LEFT JOIN staff ON institution.Institution_ID = staff.Institution_ID LEFT JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID WHERE institution.Founded != 2004 AND conference_participation.Conference_ID IS NULL GROUP BY institution.Institution_Name, institution.Location HAVING COUNT(DISTINCT staff.staff_ID) = 0;"
    },
    {
        "question_id": 1096,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location FROM institution LEFT JOIN staff ON institution.Institution_ID = staff.Institution_ID LEFT JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID WHERE institution.Founded != 2004 AND conference_participation.Conference_ID IS NULL;"
    },
    {
        "question_id": 1097,
        "answer_sql": "SELECT p.pilot_name, h.location FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age = (SELECT MIN(age) FROM PilotSkills)"
    },
    {
        "question_id": 1098,
        "answer_sql": "SELECT p.pilot_name, h.location FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age = (SELECT MIN(age) FROM PilotSkills)"
    },
    {
        "question_id": 1099,
        "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age;"
    },
    {
        "question_id": 1100,
        "answer_sql": "SELECT P.pilot_name FROM PilotSkills P WHERE P.age < (SELECT AVG(age) FROM PilotSkills) ORDER BY P.age ASC;"
    },
    {
        "question_id": 1101,
        "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1102,
        "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1103,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age < 35;"
    },
    {
        "question_id": 1104,
        "answer_sql": "SELECT PilotSkills.pilot_name, PilotSkills.plane_name FROM PilotSkills WHERE PilotSkills.age < 35 AND PilotSkills.plane_name = 'Piper Cub';"
    },
    {
        "question_id": 1105,
        "answer_sql": ""
    },
    {
        "question_id": 1106,
        "answer_sql": ""
    },
    {
        "question_id": 1107,
        "answer_sql": "SELECT Hangar.location FROM Hangar GROUP BY Hangar.location;"
    },
    {
        "question_id": 1108,
        "answer_sql": "SELECT Hangar.location, COUNT(*) as location_count FROM Hangar GROUP BY Hangar.location;"
    },
    {
        "question_id": 1109,
        "answer_sql": "SELECT Hangar.plane_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.pilot_name = 'Jones' AND PilotSkills.age = 32;"
    },
    {
        "question_id": 1110,
        "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32;"
    },
    {
        "question_id": 1111,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1112,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1113,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name IN (SELECT pilot_name FROM PilotSkills WHERE age < 35) AND plane_name = 'B-52 Bomber';"
    },
    {
        "question_id": 1114,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills AS PS JOIN Hangar AS H ON PS.plane_name = H.plane_name WHERE PS.age < 35 AND PS.pilot_name IN (SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52')"
    },
    {
        "question_id": 1115,
        "answer_sql": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills WHERE PilotSkills.plane_name = 'Piper Cub' ORDER BY PilotSkills.age ASC LIMIT 1;"
    },
    {
        "question_id": 1116,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills) AND plane_name = 'Piper Cub';"
    },
    {
        "question_id": 1117,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1118,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1119,
        "answer_sql": "SELECT Hangar.plane_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name ORDER BY COUNT(PilotSkills.plane_name) DESC LIMIT 1;"
    },
    {
        "question_id": 1120,
        "answer_sql": "SELECT Hangar.plane_name FROM Hangar JOIN (SELECT plane_name FROM PilotSkills GROUP BY plane_name) AS PS ON Hangar.plane_name = PS.plane_name ORDER BY PS.plane_name ASC LIMIT 1;"
    },
    {
        "question_id": 1121,
        "answer_sql": "SELECT COUNT(*) FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE Hangar.location = 'Chicago';"
    },
    {
        "question_id": 1122,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills PS JOIN Hangar H ON PS.plane_name = H.plane_name WHERE H.location = 'Chicago';"
    },
    {
        "question_id": 1123,
        "answer_sql": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Smith' AND PilotSkills.age = 41;"
    },
    {
        "question_id": 1124,
        "answer_sql": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Smith' AND PilotSkills.age = 41;"
    },
    {
        "question_id": 1125,
        "answer_sql": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills;"
    },
    {
        "question_id": 1126,
        "answer_sql": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills;"
    },
    {
        "question_id": 1127,
        "answer_sql": "SELECT COUNT(*) FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.pilot_name = 'Smith';"
    },
    {
        "question_id": 1128,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE pilot_name = 'Smith';"
    },
    {
        "question_id": 1129,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > 40;"
    },
    {
        "question_id": 1130,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > 40;"
    },
    {
        "question_id": 1131,
        "answer_sql": "SELECT P.pilot_name FROM PilotSkills P WHERE P.age BETWEEN 30 AND 40 ORDER BY P.age ASC;"
    },
    {
        "question_id": 1132,
        "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"
    },
    {
        "question_id": 1133,
        "answer_sql": "SELECT P.pilot_name, P.age FROM PilotSkills P ORDER BY P.age DESC;"
    },
    {
        "question_id": 1134,
        "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills ORDER BY age DESC;"
    },
    {
        "question_id": 1135,
        "answer_sql": "SELECT Hangar.location FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.location, PilotSkills.plane_name ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1136,
        "answer_sql": "SELECT Hangar.location FROM Hangar ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1137,
        "answer_sql": "SELECT P.plane_name FROM Hangar H JOIN PilotSkills P ON H.plane_name = P.plane_name GROUP BY P.plane_name ORDER BY P.plane_name;"
    },
    {
        "question_id": 1138,
        "answer_sql": "SELECT DISTINCT plane_name FROM PilotSkills ORDER BY plane_name;"
    },
    {
        "question_id": 1139,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age BETWEEN 30 AND 40;"
    },
    {
        "question_id": 1140,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"
    },
    {
        "question_id": 1141,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30);"
    },
    {
        "question_id": 1142,
        "answer_sql": "SELECT P.pilot_name, P.age FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE (P.pilot_name, H.plane_name) IN ( SELECT pilot_name, plane_name FROM PilotSkills WHERE age > 35 AND plane_name = 'Piper Cub' ) OR (P.pilot_name, H.plane_name) IN ( SELECT pilot_name, plane_name FROM PilotSkills WHERE age < 30 AND plane_name = 'F-14 Fighter' );"
    },
    {
        "question_id": 1143,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND plane_name NOT IN (SELECT plane_name FROM Hangar WHERE location = 'B-52 Bomber');"
    },
    {
        "question_id": 1144,
        "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.pilot_name NOT IN ( SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.plane_name = 'B-52 Bomber' ) AND P.plane_name = 'Piper Cub';"
    },
    {
        "question_id": 1145,
        "answer_sql": "SELECT P.pilot_name, P.plane_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.plane_name IN ('Piper Cub', 'B-52 Bomber');"
    },
    {
        "question_id": 1146,
        "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.plane_name IN ('Piper Cub', 'B-52 Bomber');"
    },
    {
        "question_id": 1147,
        "answer_sql": "SELECT AVG(age) as Average_Age, MIN(age) as Smallest_Age FROM PilotSkills;"
    },
    {
        "question_id": 1148,
        "answer_sql": "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age FROM PilotSkills;"
    },
    {
        "question_id": 1149,
        "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.location = 'Austin' OR H.location = 'Boston';"
    },
    {
        "question_id": 1150,
        "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.location = 'Austin' OR H.location = 'Boston';"
    },
    {
        "question_id": 1151,
        "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.plane_name IN ('Piper Cub', 'F-14 Fighter');"
    },
    {
        "question_id": 1152,
        "answer_sql": "SELECT DISTINCT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name IN ('Piper Cub', 'F-14 Fighter');"
    },
    {
        "question_id": 1153,
        "answer_sql": "SELECT Hangar.plane_name, AVG(PilotSkills.age) as average_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.plane_name;"
    },
    {
        "question_id": 1154,
        "answer_sql": "SELECT plane_name, AVG(age) as average_age FROM PilotSkills GROUP BY plane_name;"
    },
    {
        "question_id": 1155,
        "answer_sql": "SELECT Hangar.plane_name, COUNT(PilotSkills.pilot_name) FROM Hangar LEFT JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name;"
    },
    {
        "question_id": 1156,
        "answer_sql": "SELECT Hangar.plane_name, COUNT(*) as 'Number of entries' FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name;"
    },
    {
        "question_id": 1157,
        "answer_sql": "SELECT P.pilot_name, P.plane_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age = (SELECT MIN(age) FROM PilotSkills WHERE plane_name = P.plane_name) GROUP BY P.plane_name ORDER BY P.plane_name;"
    },
    {
        "question_id": 1158,
        "answer_sql": "SELECT DISTINCT Hangar.plane_name, PilotSkills.pilot_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age = ( SELECT MIN(age) FROM PilotSkills WHERE plane_name = Hangar.plane_name ) ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1159,
        "answer_sql": "SELECT P.pilot_name, P.plane_name, H.location FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age = (SELECT MIN(age) FROM PilotSkills) GROUP BY P.pilot_name, H.location;"
    },
    {
        "question_id": 1160,
        "answer_sql": "SELECT P.pilot_name, H.plane_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age = ( SELECT MIN(age) FROM PilotSkills WHERE pilot_name = P.pilot_name ) GROUP BY H.plane_name ORDER BY H.plane_name;"
    },
    {
        "question_id": 1161,
        "answer_sql": "SELECT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name;"
    },
    {
        "question_id": 1162,
        "answer_sql": "SELECT PilotSkills.pilot_name, MAX(PilotSkills.age) as max_age FROM PilotSkills GROUP BY PilotSkills.pilot_name;"
    },
    {
        "question_id": 1163,
        "answer_sql": "SELECT H.location, COUNT(P.pilot_name) as pilot_count, AVG(P.age) as avg_age FROM Hangar H JOIN PilotSkills P ON H.plane_name = P.plane_name GROUP BY H.location;"
    },
    {
        "question_id": 1164,
        "answer_sql": "SELECT Hangar.location, COUNT(PilotSkills.pilot_name) as pilot_count, AVG(PilotSkills.age) as average_age FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.location;"
    },
    {
        "question_id": 1165,
        "answer_sql": "SELECT COUNT(DISTINCT Hangar.plane_name) as plane_types FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age < 35;"
    },
    {
        "question_id": 1166,
        "answer_sql": "SELECT PilotSkills.plane_name, COUNT(PilotSkills.pilot_name) as pilot_count FROM PilotSkills WHERE PilotSkills.age < 35 GROUP BY PilotSkills.plane_name;"
    },
    {
        "question_id": 1167,
        "answer_sql": "SELECT Hangar.location FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age = (SELECT MIN(age) FROM PilotSkills)"
    },
    {
        "question_id": 1168,
        "answer_sql": "SELECT Hangar.location FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age = (SELECT MIN(age) FROM PilotSkills)"
    },
    {
        "question_id": 1169,
        "answer_sql": "SELECT P.pilot_name, P.age FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.location = 'Austin';"
    },
    {
        "question_id": 1170,
        "answer_sql": "SELECT p.pilot_name, p.age FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE h.location = 'Austin';"
    },
    {
        "question_id": 1171,
        "answer_sql": "SELECT DISTINCT pilot_name FROM PilotSkills WHERE age > ( SELECT age FROM PilotSkills WHERE plane_name = 'Piper Cub' );"
    },
    {
        "question_id": 1172,
        "answer_sql": ""
    },
    {
        "question_id": 1173,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills PS JOIN Hangar H ON PS.plane_name = H.plane_name WHERE PS.age < ( SELECT MIN(age) FROM PilotSkills PS2 JOIN Hangar H2 ON PS2.plane_name = H2.plane_name WHERE H2.plane_name = 'F-14 Fighter' );"
    },
    {
        "question_id": 1174,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name = 'F-14'"
    },
    {
        "question_id": 1175,
        "answer_sql": "SELECT P.pilot_name, H.location FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.plane_name LIKE '%Bomber%' GROUP BY P.pilot_name, H.location"
    },
    {
        "question_id": 1176,
        "answer_sql": "SELECT plane_name FROM Hangar WHERE plane_name LIKE '%Bomber%';"
    },
    {
        "question_id": 1177,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.pilot_name = Hangar.plane_name WHERE Hangar.plane_name = 'Piper Cub' AND PilotSkills.age > (SELECT age FROM PilotSkills WHERE pilot_name = 'Some pilot')"
    },
    {
        "question_id": 1178,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name IN ( SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age > ( SELECT MIN(age) FROM PilotSkills ) );"
    },
    {
        "question_id": 1179,
        "answer_sql": "SELECT d.Name FROM district d WHERE d.Area_km = (SELECT MAX(Area_km) FROM district);"
    },
    {
        "question_id": 1180,
        "answer_sql": "SELECT district.Government_website, district.Population FROM district WHERE district.Population = (SELECT MIN(Population) FROM district)"
    },
    {
        "question_id": 1181,
        "answer_sql": "SELECT D.Name, D.Population FROM district D WHERE D.Area_km > (SELECT AVG(D2.Area_km) FROM district D2)"
    },
    {
        "question_id": 1182,
        "answer_sql": "SELECT d.Name AS District, d.Area_km AS Biggest_Area, AVG(d.Area_km) OVER() AS Average_Area FROM district AS d ORDER BY Biggest_Area DESC, Average_Area DESC;"
    },
    {
        "question_id": 1183,
        "answer_sql": "SELECT SUM(Population) FROM district JOIN spokesman_district SD ON district.District_ID = SD.District_ID JOIN spokesman Sp ON SD.Spokesman_ID = Sp.Spokesman_ID WHERE Area_km <= (SELECT MAX(Area_km) FROM district) AND Sp.Speach_title = 'Speech on Districts' AND Sp.Rank_position <= 3;"
    },
    {
        "question_id": 1184,
        "answer_sql": "SELECT district.District_ID, district.Name, district.Government_website FROM district ORDER BY district.Population;"
    },
    {
        "question_id": 1185,
        "answer_sql": "SELECT DISTINCT d.Name FROM district d JOIN spokesman s ON d.District_ID = s.Spokesman_ID JOIN spokesman_district sd ON d.District_ID = sd.District_ID WHERE d.Government_website LIKE '%gov%' AND sd.Start_year IS NOT NULL;"
    },
    {
        "question_id": 1186,
        "answer_sql": "SELECT d.District_ID, d.Name FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID WHERE d.Population > 4000 OR d.Area_km > 3000;"
    },
    {
        "question_id": 1187,
        "answer_sql": ""
    },
    {
        "question_id": 1188,
        "answer_sql": "SELECT AVG(spokesman.Points) AS Average_Points, AVG(spokesman.Age) AS Average_Age FROM spokesman WHERE spokesman.Rank_position = 1;"
    },
    {
        "question_id": 1189,
        "answer_sql": "SELECT sm.Name, sm.Points FROM spokesman sm JOIN spokesman_district sd ON sm.Spokesman_ID = sd.Spokesman_ID WHERE sm.Age < 40;"
    },
    {
        "question_id": 1190,
        "answer_sql": "SELECT sm.Name, sm.Age FROM spokesman sm JOIN spokesman_district sd ON sm.Spokesman_ID = sd.Spokesman_ID WHERE sd.Start_year = (SELECT MAX(Start_year) FROM spokesman_district) ORDER BY sm.Age DESC LIMIT 1;"
    },
    {
        "question_id": 1191,
        "answer_sql": "SELECT sm.Name FROM spokesman sm WHERE sm.Points < (SELECT AVG(sm2.Points) FROM spokesman sm2)"
    },
    {
        "question_id": 1192,
        "answer_sql": "SELECT d.Name, COUNT(s.Spokesman_ID) as Spokesmen_Count FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID JOIN spokesman s ON sd.Spokesman_ID = s.Spokesman_ID GROUP BY d.Name ORDER BY Spokesmen_Count DESC LIMIT 1;"
    },
    {
        "question_id": 1193,
        "answer_sql": "SELECT s.Name FROM spokesman s JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE sd.Start_year < 2004;"
    },
    {
        "question_id": 1194,
        "answer_sql": "SELECT d.Name AS District, COUNT(s.Spokesman_ID) AS Number_of_Spokesmen FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID JOIN spokesman s ON sd.Spokesman_ID = s.Spokesman_ID GROUP BY d.Name;"
    },
    {
        "question_id": 1195,
        "answer_sql": "SELECT d.Name FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID JOIN spokesman sp ON sp.Spokesman_ID = sd.Spokesman_ID WHERE sp.Rank_position IN (1, 2) GROUP BY d.District_ID, d.Name HAVING COUNT(DISTINCT sp.Rank_position) = 2"
    },
    {
        "question_id": 1196,
        "answer_sql": "SELECT D.Name FROM district D JOIN spokesman_district SD ON D.District_ID = SD.District_ID GROUP BY D.Name HAVING COUNT(SD.Spokesman_ID) > 1;"
    },
    {
        "question_id": 1197,
        "answer_sql": "SELECT COUNT(*) FROM district WHERE District_ID NOT IN (SELECT District_ID FROM spokesman_district);"
    },
    {
        "question_id": 1198,
        "answer_sql": "SELECT s.Name FROM spokesman s LEFT JOIN spokesman_district sd ON sd.Spokesman_ID = s.Spokesman_ID WHERE sd.District_ID IS NULL;"
    },
    {
        "question_id": 1199,
        "answer_sql": "SELECT SUM(d.Population) AS Total_Population, AVG(d.Population) AS Average_Population FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID GROUP BY d.District_ID;"
    },
    {
        "question_id": 1200,
        "answer_sql": "SELECT S.title FROM Sculptures S WHERE S.sculptureID = (SELECT MAX(sculptureID) FROM Sculptures WHERE S.sculptorID = S.sculptorID);"
    },
    {
        "question_id": 1201,
        "answer_sql": "SELECT Artists.fname || ' ' || Artists.lname AS ArtistName, Sculptures.title AS SculptureTitle FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID ORDER BY Sculptures.year DESC LIMIT 1;"
    },
    {
        "question_id": 1202,
        "answer_sql": "SELECT title, location FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings);"
    },
    {
        "question_id": 1203,
        "answer_sql": "SELECT P.title, P.location FROM Paintings P WHERE P.year = (SELECT MIN(year) FROM Paintings)"
    },
    {
        "question_id": 1204,
        "answer_sql": ""
    },
    {
        "question_id": 1205,
        "answer_sql": "SELECT Artists.fname, Artists.lname, Sculptures.title, Sculptures.year FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.location = 'Gallery 226';"
    },
    {
        "question_id": 1206,
        "answer_sql": "SELECT P.title, P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID;"
    },
    {
        "question_id": 1207,
        "answer_sql": "SELECT P.title, P.location FROM Paintings P"
    },
    {
        "question_id": 1208,
        "answer_sql": "SELECT Artists.artistID, Artists.fname, Artists.lname, Sculptures.title, Sculptures.location FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID;"
    },
    {
        "question_id": 1209,
        "answer_sql": "SELECT S.sculptureID, S.title, S.location, A.fname, A.lname, A.birthYear, A.deathYear FROM Sculptures S JOIN Artists A ON S.sculptorID = A.artistID;"
    },
    {
        "question_id": 1210,
        "answer_sql": "SELECT P.medium FROM Paintings P WHERE P.paintingID = 80;"
    },
    {
        "question_id": 1211,
        "answer_sql": "SELECT P.medium FROM Paintings P WHERE P.paintingID = 80;"
    },
    {
        "question_id": 1212,
        "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists WHERE Artists.birthYear > 1850;"
    },
    {
        "question_id": 1213,
        "answer_sql": "SELECT Artists.lname, Artists.fname FROM Artists WHERE Artists.birthYear > 1850;"
    },
    {
        "question_id": 1214,
        "answer_sql": "SELECT Artists.lname, Artists.fname, Paintings.year FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.location != 'Gallery 226'"
    },
    {
        "question_id": 1215,
        "answer_sql": "SELECT Artists.lname, Artists.fname, Artists.birthYear, Artists.deathYear FROM Artists WHERE Artists.artistID NOT IN ( SELECT Artists.artistID FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.location = 'gallery 226' )"
    },
    {
        "question_id": 1216,
        "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Artists.birthYear < 1900 GROUP BY Artists.artistID"
    },
    {
        "question_id": 1217,
        "answer_sql": "SELECT DISTINCT Artists.fname, Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Artists.birthYear < 1900;"
    },
    {
        "question_id": 1218,
        "answer_sql": "SELECT DISTINCT birthYear FROM Artists WHERE artistID IN (SELECT DISTINCT sculptorID FROM Sculptures WHERE year > 1920);"
    },
    {
        "question_id": 1219,
        "answer_sql": "SELECT Artists.birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Artists.deathYear > 1920"
    },
    {
        "question_id": 1220,
        "answer_sql": "SELECT Artists.fname, Artists.lname, Artists.birthYear, Artists.deathYear FROM Artists WHERE Artists.birthYear = (SELECT MIN(birthYear) FROM Artists)"
    },
    {
        "question_id": 1221,
        "answer_sql": "SELECT Artists.fname || ' ' || Artists.lname AS FullName, Artists.birthYear, Artists.deathYear FROM Artists WHERE Artists.deathYear IS NOT NULL ORDER BY Artists.deathYear DESC LIMIT 1;"
    },
    {
        "question_id": 1222,
        "answer_sql": "SELECT lname, fname, birthYear, deathYear FROM Artists WHERE deathYear IS NULL OR deathYear - birthYear = ( SELECT MIN(deathYear - birthYear) FROM Artists );"
    },
    {
        "question_id": 1223,
        "answer_sql": "SELECT Artists.fname, Artists.lname, (Artists.deathYear - Artists.birthYear) as 'life_span' FROM Artists WHERE Artists.deathYear = (SELECT MIN(deathYear) FROM Artists)"
    },
    {
        "question_id": 1224,
        "answer_sql": "SELECT Artists.fname, Artists.birthYear, Artists.deathYear FROM Artists WHERE Artists.deathYear - Artists.birthYear = ( SELECT MAX(Artists.deathYear - Artists.birthYear) FROM Artists )"
    },
    {
        "question_id": 1225,
        "answer_sql": "SELECT fname, birthYear - deathYear AS age FROM Artists WHERE deathYear IS NOT NULL ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1226,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE location='gallery 240';"
    },
    {
        "question_id": 1227,
        "answer_sql": "SELECT COUNT(*) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID JOIN Sculptures ON Paintings.paintingID = Sculptures.sculptureID WHERE Sculptures.location = 'Gallery 240';"
    },
    {
        "question_id": 1228,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE painterID IN ( SELECT artistID FROM Artists ORDER BY deathYear DESC LIMIT 1 );"
    },
    {
        "question_id": 1229,
        "answer_sql": "SELECT COUNT(*) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.birthYear = (SELECT MIN(birthYear) FROM Artists) AND Artists.deathYear = (SELECT MAX(deathYear) FROM Artists);"
    },
    {
        "question_id": 1230,
        "answer_sql": "SELECT Artists.fname, Artists.lname, Paintings.year FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Artists.fname = 'Mary'"
    },
    {
        "question_id": 1231,
        "answer_sql": "SELECT P.title, P.year FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.fname = 'Mary';"
    },
    {
        "question_id": 1232,
        "answer_sql": "SELECT P.width_mm FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.birthYear < 1850;"
    },
    {
        "question_id": 1233,
        "answer_sql": "SELECT width_mm FROM Paintings WHERE painterID IN ( SELECT artistID FROM Artists WHERE birthYear < 1850 );"
    },
    {
        "question_id": 1234,
        "answer_sql": "SELECT location, medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo';"
    },
    {
        "question_id": 1235,
        "answer_sql": "SELECT location, medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo'"
    },
    {
        "question_id": 1236,
        "answer_sql": "SELECT A.fname, A.lname FROM Artists A WHERE A.artistID IN ( SELECT P.painterID FROM Paintings P UNION SELECT S.sculptorID FROM Sculptures S ) AND A.artistID NOT IN ( SELECT P.painterID FROM Paintings P INTERSECT SELECT S.sculptorID FROM Sculptures S )"
    },
    {
        "question_id": 1237,
        "answer_sql": "SELECT Artists.lname, Artists.fname FROM Artists WHERE Artists.artistID IN ( SELECT Artists.artistID FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID UNION SELECT Artists.artistID FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID );"
    },
    {
        "question_id": 1238,
        "answer_sql": ""
    },
    {
        "question_id": 1239,
        "answer_sql": ""
    },
    {
        "question_id": 1240,
        "answer_sql": "SELECT birthYear FROM Artists WHERE artistID IN ( SELECT painterID FROM Paintings WHERE year = 1884 );"
    },
    {
        "question_id": 1241,
        "answer_sql": "SELECT birthYear FROM Artists WHERE artistID IN (SELECT painterID FROM Paintings WHERE year = 1884);"
    },
    {
        "question_id": 1242,
        "answer_sql": ""
    },
    {
        "question_id": 1243,
        "answer_sql": ""
    },
    {
        "question_id": 1244,
        "answer_sql": "SELECT medium, COUNT(*) FROM Paintings GROUP BY medium;"
    },
    {
        "question_id": 1245,
        "answer_sql": "SELECT medium, COUNT(*) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID GROUP BY medium;"
    },
    {
        "question_id": 1246,
        "answer_sql": "SELECT P.medium, AVG(P.height_mm) as average_height FROM Paintings P GROUP BY P.medium;"
    },
    {
        "question_id": 1247,
        "answer_sql": "SELECT P.medium, AVG(P.height_mm) as average_height FROM Paintings P GROUP BY P.medium;"
    },
    {
        "question_id": 1248,
        "answer_sql": "SELECT paintingID, COUNT(*) as Number_of_Paintings FROM Paintings WHERE year < 1900 GROUP BY location"
    },
    {
        "question_id": 1249,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE year < 1900 AND location NOT LIKE 'Unknown%'"
    },
    {
        "question_id": 1250,
        "answer_sql": ""
    },
    {
        "question_id": 1251,
        "answer_sql": "SELECT P.title FROM Paintings P WHERE P.year > 1910;"
    },
    {
        "question_id": 1252,
        "answer_sql": ""
    },
    {
        "question_id": 1253,
        "answer_sql": ""
    },
    {
        "question_id": 1254,
        "answer_sql": "SELECT P.title FROM Paintings P WHERE P.height_mm > ( SELECT AVG(height_mm) FROM Paintings );"
    },
    {
        "question_id": 1255,
        "answer_sql": ""
    },
    {
        "question_id": 1256,
        "answer_sql": ""
    },
    {
        "question_id": 1257,
        "answer_sql": "SELECT P.paintingID FROM Paintings P WHERE P.year < ( SELECT P.year FROM Paintings P WHERE P.location = 'Gallery 240' ) AND P.paintingID NOT IN ( SELECT S.sculptureID FROM Sculptures S WHERE S.sculptureID = ( SELECT S.sculptureID FROM Sculptures S WHERE S.location = 'Gallery 240' ) )"
    },
    {
        "question_id": 1258,
        "answer_sql": "SELECT P.paintingID, P.year FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.birthYear = (SELECT MIN(birthYear) FROM Artists)"
    },
    {
        "question_id": 1259,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings);"
    },
    {
        "question_id": 1260,
        "answer_sql": "SELECT fname, lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.title LIKE '%female%'"
    },
    {
        "question_id": 1261,
        "answer_sql": "SELECT Artists.fname || ' ' || Artists.lname AS FullName FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.title LIKE '%female%'"
    },
    {
        "question_id": 1262,
        "answer_sql": "SELECT P.title, A.fname, A.lname FROM Paintings P JOIN Artists A ON P.painterID = A.artistID ORDER BY P.title;"
    },
    {
        "question_id": 1263,
        "answer_sql": "SELECT P.title FROM Paintings P ORDER BY P.title ASC;"
    },
    {
        "question_id": 1264,
        "answer_sql": "SELECT P.title FROM Paintings P WHERE P.height_mm > 0 ORDER BY P.height_mm DESC;"
    },
    {
        "question_id": 1265,
        "answer_sql": "SELECT P.title FROM Paintings P ORDER BY P.height_mm ASC;"
    },
    {
        "question_id": 1266,
        "answer_sql": "SELECT title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE year BETWEEN 1900 AND 1950;"
    },
    {
        "question_id": 1267,
        "answer_sql": "SELECT Artists.lname, Paintings.title, Sculptures.title FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Paintings.year BETWEEN 1900 AND 1950 OR Sculptures.year BETWEEN 1900 AND 1950;"
    },
    {
        "question_id": 1268,
        "answer_sql": "SELECT P.title, S.title FROM Artists A JOIN Paintings P ON A.artistID = P.painterID JOIN Sculptures S ON A.artistID = S.sculptorID WHERE A.artistID = 222;"
    },
    {
        "question_id": 1269,
        "answer_sql": "SELECT title FROM Artists INNER JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Artists.artistID = 222;"
    },
    {
        "question_id": 1270,
        "answer_sql": "SELECT Artists.artistID FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year < 1900 GROUP BY Artists.artistID ORDER BY COUNT(Paintings.paintingID) DESC LIMIT 1;"
    },
    {
        "question_id": 1271,
        "answer_sql": "SELECT Artists.artistID, Artists.lname, Artists.fname, Artists.birthYear, Artists.deathYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year < 1900 GROUP BY Artists.artistID, Artists.lname, Artists.fname, Artists.birthYear, Artists.deathYear ORDER BY COUNT(Paintings.paintingID) DESC LIMIT 1;"
    },
    {
        "question_id": 1272,
        "answer_sql": "SELECT fname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY fname ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1273,
        "answer_sql": "SELECT fname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY fname ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1274,
        "answer_sql": "SELECT P.title FROM Paintings P WHERE P.width_mm < 600 OR P.height_mm > 800;"
    },
    {
        "question_id": 1275,
        "answer_sql": "SELECT P.title FROM Paintings P WHERE P.width_mm < 600 OR P.height_mm > 800;"
    },
    {
        "question_id": 1276,
        "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 OR year > 1930;"
    },
    {
        "question_id": 1277,
        "answer_sql": "SELECT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.birthYear < 1885 OR A.deathYear > 1930;"
    },
    {
        "question_id": 1278,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1279,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1280,
        "answer_sql": ""
    },
    {
        "question_id": 1281,
        "answer_sql": ""
    },
    {
        "question_id": 1282,
        "answer_sql": "SELECT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.birthYear < 1885 AND A.deathYear > 1930;"
    },
    {
        "question_id": 1283,
        "answer_sql": "SELECT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.birthYear < 1885 AND A.deathYear > 1930;"
    },
    {
        "question_id": 1284,
        "answer_sql": "SELECT AVG(height_mm), AVG(width_mm) FROM Paintings WHERE medium = 'Oil' AND location = 'Gallery 241';"
    },
    {
        "question_id": 1285,
        "answer_sql": "SELECT AVG(Paintings.height_mm) AS avg_height, AVG(Paintings.width_mm) AS avg_width FROM Paintings JOIN Artists ON Artists.artistID = Paintings.painterID WHERE Artists.artistID = 241 AND Paintings.medium = 'Oil';"
    },
    {
        "question_id": 1286,
        "answer_sql": "SELECT MAX(height_mm), paintingID FROM Paintings WHERE year < 1900;"
    },
    {
        "question_id": 1287,
        "answer_sql": "SELECT P.height_mm, A.artistID FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.year < 1900 AND P.height_mm = ( SELECT MAX(height_mm) FROM Paintings WHERE year < 1900 );"
    },
    {
        "question_id": 1288,
        "answer_sql": "SELECT Paintings.year, MAX(Paintings.height_mm) as max_height, MAX(Paintings.width_mm) as max_width FROM Paintings GROUP BY Paintings.year;"
    },
    {
        "question_id": 1289,
        "answer_sql": "SELECT Paintings.year, MAX(Paintings.height_mm) AS max_height, MAX(Paintings.width_mm) AS max_width FROM Paintings GROUP BY Paintings.year ORDER BY Paintings.year DESC;"
    },
    {
        "question_id": 1290,
        "answer_sql": "SELECT A.fname, A.lname, AVG(P.height_mm) as avg_height, AVG(P.width_mm) as avg_width FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.artistID, A.fname, A.lname ORDER BY A.fname, A.lname;"
    },
    {
        "question_id": 1291,
        "answer_sql": "SELECT Artists.lname, Artists.fname, AVG(Paintings.width_mm) AS avg_width, AVG(Paintings.height_mm) AS avg_height FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.lname, Artists.fname ORDER BY Artists.lname, Artists.fname;"
    },
    {
        "question_id": 1292,
        "answer_sql": "SELECT Artists.fname, COUNT(Paintings.paintingID) as num_paintings FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.fname HAVING COUNT(Paintings.paintingID) >= 2;"
    },
    {
        "question_id": 1293,
        "answer_sql": "SELECT a.fname, COUNT(p.paintingID) as PaintingCount FROM Artists a JOIN Paintings p ON a.artistID = p.painterID GROUP BY a.fname HAVING COUNT(p.paintingID) >= 2;"
    },
    {
        "question_id": 1294,
        "answer_sql": "SELECT Artists.artistID, Artists.lname, Artists.fname, Artists.deathYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.artistID HAVING COUNT(Paintings.paintingID) <= 3;"
    },
    {
        "question_id": 1295,
        "answer_sql": "SELECT Artists.artistID, Artists.lname, Artists.fname, Artists.birthYear, Artists.deathYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.artistID HAVING COUNT(Paintings.paintingID) < 4 AND Artists.deathYear IS NOT NULL;"
    },
    {
        "question_id": 1296,
        "answer_sql": "SELECT Artists.deathYear FROM Artists WHERE Artists.artistID = (SELECT MIN(sculptorID) FROM Sculptures)"
    },
    {
        "question_id": 1297,
        "answer_sql": "SELECT fname, lname, birthYear, deathYear FROM Artists WHERE artistID IN ( SELECT DISTINCT sculptorID FROM Sculptures ) ORDER BY birthYear DESC LIMIT 1;"
    },
    {
        "question_id": 1298,
        "answer_sql": "SELECT paintingID, width_mm FROM Paintings WHERE location = 'Gallery 240' ORDER BY width_mm DESC LIMIT 1;"
    },
    {
        "question_id": 1299,
        "answer_sql": "SELECT P.paintingID, P.height_mm FROM Paintings P WHERE P.paintingID IN ( SELECT P2.paintingID FROM Paintings P2 WHERE P2.location = 'Gallery 240' ORDER BY P2.width_mm DESC LIMIT 1 )"
    },
    {
        "question_id": 1300,
        "answer_sql": "SELECT P.paintingID FROM Paintings P WHERE P.year < ( SELECT P.year FROM Paintings P WHERE P.location = 'Gallery 240' )"
    },
    {
        "question_id": 1301,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE year < (SELECT MIN(year) FROM Paintings WHERE location = 'Gallery 240')"
    },
    {
        "question_id": 1302,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900);"
    },
    {
        "question_id": 1303,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > ( SELECT MAX(height_mm) FROM Paintings WHERE year > 1900 )"
    },
    {
        "question_id": 1304,
        "answer_sql": ""
    },
    {
        "question_id": 1305,
        "answer_sql": ""
    },
    {
        "question_id": 1306,
        "answer_sql": ""
    },
    {
        "question_id": 1307,
        "answer_sql": "SELECT P.paintingID, P.location, P.title, P.year FROM Paintings P ORDER BY P.year ASC, P.paintingID ASC;"
    },
    {
        "question_id": 1308,
        "answer_sql": "SELECT P.year, P.location, P.title FROM Paintings P WHERE P.height_mm > 1000 ORDER BY P.title;"
    },
    {
        "question_id": 1309,
        "answer_sql": "SELECT paintings.year, paintings.location, artists.fname || ' ' || artists.lname AS PainterName FROM paintings JOIN artists ON paintings.painterID = artists.artistID WHERE paintings.height_mm > 1000 ORDER BY paintings.year, paintings.location;"
    },
    {
        "question_id": 1310,
        "answer_sql": "SELECT Artists.lname, Artists.fname FROM Artists WHERE Artists.artistID IN ( SELECT Paintings.painterID FROM Paintings WHERE Paintings.paintingID NOT IN ( SELECT Sculptures.sculptureID FROM Sculptures ) )"
    },
    {
        "question_id": 1311,
        "answer_sql": "SELECT fname, lname FROM Artists WHERE artistID NOT IN (SELECT DISTINCT sculptorID FROM Sculptures) AND artistID IN (SELECT artistID FROM Paintings);"
    },
    {
        "question_id": 1312,
        "answer_sql": "SELECT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.year < 1885 AND P.medium NOT LIKE '%canvas%'"
    },
    {
        "question_id": 1313,
        "answer_sql": "SELECT Artists.fname, Artists.lname, Paintings.title FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year < 1885 AND Paintings.mediumOn != 'canvas';"
    },
    {
        "question_id": 1314,
        "answer_sql": "SELECT COUNT(*) FROM race;"
    },
    {
        "question_id": 1315,
        "answer_sql": "SELECT COUNT(*) FROM race;"
    },
    {
        "question_id": 1316,
        "answer_sql": "SELECT race.Winning_driver, race.Winning_team FROM race ORDER BY race.Winning_team ASC;"
    },
    {
        "question_id": 1317,
        "answer_sql": "SELECT race.Winning_driver, race.Winning_team FROM race ORDER BY Winning_team ASC;"
    },
    {
        "question_id": 1318,
        "answer_sql": "SELECT r.Winning_driver FROM race r WHERE r.Pole_Position != 'Junior Strous'"
    },
    {
        "question_id": 1319,
        "answer_sql": "SELECT d.Driver_Name, r.Winning_driver, r.Winning_team FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Pole_Position != 'Junior Strous' AND r.Fastest_Lap IS NOT NULL AND r.Winning_driver IS NOT NULL AND r.Winning_team IS NOT NULL AND r.Report IS NOT NULL;"
    },
    {
        "question_id": 1320,
        "answer_sql": "SELECT driver.Constructor, driver.Driver_Name, driver.Age FROM driver ORDER BY driver.Age ASC;"
    },
    {
        "question_id": 1321,
        "answer_sql": "SELECT Constructor FROM driver ORDER BY Age ASC;"
    },
    {
        "question_id": 1322,
        "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;"
    },
    {
        "question_id": 1323,
        "answer_sql": "SELECT DISTINCT driver.Entrant FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE driver.Age >= 20 AND race.Road IN (SELECT Road FROM race WHERE Fastest_Lap IS NOT NULL);"
    },
    {
        "question_id": 1324,
        "answer_sql": "SELECT MIN(Age) as Min_Age, MAX(Age) as Max_Age FROM driver;"
    },
    {
        "question_id": 1325,
        "answer_sql": "SELECT MIN(Age) as Min_Age, MAX(Age) as Max_Age FROM driver;"
    },
    {
        "question_id": 1326,
        "answer_sql": "SELECT COUNT(DISTINCT Engine) FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE driver.Age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 1327,
        "answer_sql": "SELECT COUNT(DISTINCT Engine) FROM driver WHERE Age > 30 AND Age < 20;"
    },
    {
        "question_id": 1328,
        "answer_sql": "SELECT driver.Driver_Name FROM driver ORDER BY driver.Driver_Name DESC;"
    },
    {
        "question_id": 1329,
        "answer_sql": "SELECT driver.Driver_Name FROM driver ORDER BY driver.Driver_Name DESC;"
    },
    {
        "question_id": 1330,
        "answer_sql": "SELECT driver . Driver_Name , race . Race_Name FROM driver JOIN race ON driver . Driver_ID = race . Driver_ID ;"
    },
    {
        "question_id": 1331,
        "answer_sql": "SELECT DISTINCT driver.Driver_Name, race.Race_Name FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID;"
    },
    {
        "question_id": 1332,
        "answer_sql": "SELECT Driver_Name , COUNT( Race . Road ) as Number_of_Races FROM driver JOIN race ON race . Driver_ID = driver . Driver_ID GROUP BY Driver_Name ;"
    },
    {
        "question_id": 1333,
        "answer_sql": "SELECT d.Driver_Name, COUNT(r.Road) as Total_Races FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_Name;"
    },
    {
        "question_id": 1334,
        "answer_sql": "SELECT driver.Age FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Age ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1335,
        "answer_sql": "SELECT driver.Age FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Age ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1336,
        "answer_sql": "SELECT driver.Driver_Name, driver.Age FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_Name, driver.Age HAVING COUNT(race.Race_Name) >= 2;"
    },
    {
        "question_id": 1337,
        "answer_sql": "SELECT driver.Driver_Name, driver.Age FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_Name, driver.Age HAVING COUNT(race.Road) >= 2;"
    },
    {
        "question_id": 1338,
        "answer_sql": "SELECT race.Race_Name, race.Winning_driver, race.Winning_team, race.Report, driver.Driver_Name, driver.Age FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID WHERE driver.Age >= 26 ORDER BY race.Race_Name;"
    },
    {
        "question_id": 1339,
        "answer_sql": "SELECT r.Race_Name FROM race r JOIN driver d ON r.Driver_ID = d.Driver_ID WHERE d.Age >= 26 ORDER BY r.Road;"
    },
    {
        "question_id": 1340,
        "answer_sql": "SELECT driver.Driver_Name FROM driver WHERE driver.Constructor != 'Bugatti';"
    },
    {
        "question_id": 1341,
        "answer_sql": "SELECT driver.Driver_Name, driver.Driver_ID FROM driver WHERE driver.Constructor <> 'Bugatti';"
    },
    {
        "question_id": 1342,
        "answer_sql": "SELECT d.Constructor, COUNT(r.Driver_ID) as Number_of_Drivers FROM race r JOIN driver d ON r.Driver_ID = d.Driver_ID GROUP BY d.Constructor;"
    },
    {
        "question_id": 1343,
        "answer_sql": "SELECT d. Constructor , COUNT(r. Driver_ID ) as Number_of_Drivers FROM race as r JOIN driver as d ON r. Driver_ID = d. Driver_ID GROUP BY d. Constructor ;"
    },
    {
        "question_id": 1344,
        "answer_sql": "SELECT d.Engine, COUNT(*) as Frequency FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Road IN (SELECT Road FROM race WHERE Winning_driver IS NOT NULL) GROUP BY d.Engine ORDER BY Frequency DESC;"
    },
    {
        "question_id": 1345,
        "answer_sql": "SELECT Engine, COUNT(*) as frequency FROM driver GROUP BY Engine ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 1346,
        "answer_sql": "SELECT D. Engine FROM driver D JOIN race R ON D. Driver_ID = R. Driver_ID GROUP BY D. Engine HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1347,
        "answer_sql": "SELECT d.Engine, COUNT(r.Driver_ID) as Driver_Count FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID WHERE d.Engine IS NOT NULL AND r.Road IS NOT NULL GROUP BY d.Engine HAVING COUNT(r.Driver_ID) > 1"
    },
    {
        "question_id": 1348,
        "answer_sql": "SELECT D.Driver_Name FROM driver D LEFT JOIN race R ON D.Driver_ID = R.Driver_ID WHERE R.Road IS NULL;"
    },
    {
        "question_id": 1349,
        "answer_sql": "SELECT D.Driver_Name FROM driver D LEFT JOIN race R ON D.Driver_ID = R.Driver_ID WHERE R.Road IS NULL;"
    },
    {
        "question_id": 1350,
        "answer_sql": "SELECT DISTINCT driver.Constructor FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE driver.Age < 20 AND race.Winning_team IS NOT NULL UNION SELECT DISTINCT driver.Constructor FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE driver.Age > 30 AND race.Winning_driver IS NOT NULL;"
    },
    {
        "question_id": 1351,
        "answer_sql": "SELECT DISTINCT Constructor FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE driver.Age BETWEEN 20 AND 30 GROUP BY Constructor;"
    },
    {
        "question_id": 1352,
        "answer_sql": "SELECT DISTINCT race.Winning_team FROM race WHERE race.Winning_team IS NOT NULL GROUP BY race.Winning_team HAVING COUNT(race.Winning_team) > 1"
    },
    {
        "question_id": 1353,
        "answer_sql": "SELECT DISTINCT `race`.`Winning_team` FROM `race` WHERE `race`.`Winning_team` IS NOT NULL GROUP BY `race`.`Winning_team` HAVING COUNT(`race`.`Road`) > 1;"
    },
    {
        "question_id": 1354,
        "answer_sql": ""
    },
    {
        "question_id": 1355,
        "answer_sql": ""
    },
    {
        "question_id": 1356,
        "answer_sql": "SELECT D.Driver_Name FROM driver D JOIN race R ON D.Driver_ID = R.Driver_ID WHERE R.Pole_Position != 'James Hinchcliffe' AND (R.Pole_Position IS NULL OR R.Pole_Position != (SELECT Pole_Position FROM race WHERE Driver_ID = D.Driver_ID AND Road < (SELECT MAX(Road) FROM race WHERE Driver_ID = D.Driver_ID))) ORDER BY D.Driver_ID;"
    },
    {
        "question_id": 1357,
        "answer_sql": "SELECT D.Driver_Name FROM driver D WHERE D.Driver_ID NOT IN ( SELECT R.Driver_ID FROM race R WHERE R.Pole_Position = 'James Hinchcliffe' )"
    },
    {
        "question_id": 1358,
        "answer_sql": "SELECT COUNT(*) FROM languages;"
    },
    {
        "question_id": 1359,
        "answer_sql": "SELECT COUNT(*) FROM languages;"
    },
    {
        "question_id": 1360,
        "answer_sql": "SELECT languages.name FROM languages ORDER BY languages.name ASC;"
    },
    {
        "question_id": 1361,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY l.name;"
    },
    {
        "question_id": 1362,
        "answer_sql": "SELECT l.name FROM languages AS l JOIN official_languages AS ol ON l.id = ol.language_id WHERE l.name LIKE '%ish%'"
    },
    {
        "question_id": 1363,
        "answer_sql": "SELECT l.name FROM languages l WHERE l.name LIKE '%ish%';"
    },
    {
        "question_id": 1364,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1365,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1366,
        "answer_sql": "SELECT AVG(c.justice_score) as average_justice_score FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON l.id = ol.language_id WHERE l.name = 'English';"
    },
    {
        "question_id": 1367,
        "answer_sql": "SELECT AVG(c. justice_score ) AS average_justice_score FROM countries AS c JOIN official_languages AS ol ON c. id = ol. country_id JOIN languages AS l ON ol. language_id = l. id WHERE l. name = 'English';"
    },
    {
        "question_id": 1368,
        "answer_sql": "SELECT MAX(health_score), MIN(health_score) FROM countries WHERE name != 'Norway';"
    },
    {
        "question_id": 1369,
        "answer_sql": "SELECT languages.name, MAX(countries.health_score) AS max_health_score, MIN(countries.health_score) AS min_health_score FROM languages JOIN official_languages ON languages.id = official_languages.language_id JOIN countries ON countries.id = official_languages.country_id WHERE countries.name != 'Norway' GROUP BY languages.name"
    },
    {
        "question_id": 1370,
        "answer_sql": "SELECT COUNT(DISTINCT languages.id) FROM official_languages JOIN languages ON official_languages.language_id = languages.id;"
    },
    {
        "question_id": 1371,
        "answer_sql": "SELECT COUNT(DISTINCT languages.id) FROM official_languages JOIN languages ON official_languages.language_id = languages.id;"
    },
    {
        "question_id": 1372,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.education_score DESC;"
    },
    {
        "question_id": 1373,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON l.id = ol.language_id WHERE l.name = 'English' GROUP BY c.name ORDER BY AVG(c.education_score) DESC;"
    },
    {
        "question_id": 1374,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id WHERE c.politics_score = ( SELECT MAX(c.politics_score) FROM countries c JOIN official_languages ol ON c.id = ol.country_id )"
    },
    {
        "question_id": 1375,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON l.id = ol.language_id WHERE c.politics_score = ( SELECT MAX(c.politics_score) FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON l.id = ol.language_id ) ;"
    },
    {
        "question_id": 1376,
        "answer_sql": "SELECT c.name AS Country, l.name AS Language FROM countries AS c JOIN official_languages AS ol ON c.id = ol.country_id JOIN languages AS l ON ol.language_id = l.id;"
    },
    {
        "question_id": 1377,
        "answer_sql": "SELECT c.name AS Country, l.name AS Language FROM countries AS c JOIN official_languages AS ol ON c.id = ol.country_id JOIN languages AS l ON ol.language_id = l.id;"
    },
    {
        "question_id": 1378,
        "answer_sql": "SELECT languages.name, COUNT(DISTINCT countries.id) as number_of_countries FROM languages JOIN official_languages ON languages.id = official_languages.language_id JOIN countries ON countries.id = official_languages.country_id GROUP BY languages.name;"
    },
    {
        "question_id": 1379,
        "answer_sql": "SELECT languages.name, COUNT(DISTINCT countries.id) AS num_countries FROM official_languages JOIN languages ON official_languages.language_id = languages.id JOIN countries ON official_languages.country_id = countries.id GROUP BY languages.name;"
    },
    {
        "question_id": 1380,
        "answer_sql": "SELECT l.name AS language, c.name AS country FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name, c.name ORDER BY COUNT(c.name) DESC LIMIT 1;"
    },
    {
        "question_id": 1381,
        "answer_sql": "SELECT l.name, c.overall_score FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id WHERE c.overall_score = ( SELECT MAX(c.overall_score) FROM countries c WHERE c.id IN ( SELECT country_id FROM official_languages GROUP BY country_id ) ) GROUP BY l.name ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1382,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id WHERE c.id IN ( SELECT country_id FROM official_languages GROUP BY country_id HAVING COUNT(*) >= 2 ) GROUP BY l.name;"
    },
    {
        "question_id": 1383,
        "answer_sql": "SELECT l.name, COUNT(DISTINCT o.country_id) as num_countries FROM official_languages o JOIN languages l ON o.language_id = l.id GROUP BY l.name, l.id HAVING num_countries > 1;"
    },
    {
        "question_id": 1384,
        "answer_sql": "SELECT AVG(c. overall_score ) FROM countries AS c JOIN official_languages AS ol ON c. id = ol. country_id JOIN languages AS l ON ol. language_id = l. id WHERE l. name = 'English';"
    },
    {
        "question_id": 1385,
        "answer_sql": "SELECT AVG(c.overall_score) as average_overall_score FROM countries as c JOIN official_languages as ol ON c.id = ol.country_id JOIN languages as l ON ol.language_id = l.id WHERE l.name = 'English';"
    },
    {
        "question_id": 1386,
        "answer_sql": "SELECT l.name, c.name, COUNT(*) as frequency FROM official_languages ol JOIN languages l ON ol.language_id = l.id JOIN countries c ON ol.country_id = c.id GROUP BY l.name, c.name ORDER BY frequency DESC LIMIT 3;"
    },
    {
        "question_id": 1387,
        "answer_sql": "SELECT l.name, COUNT(ol.country_id) as count FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY count DESC LIMIT 3;"
    },
    {
        "question_id": 1388,
        "answer_sql": "SELECT l.name, AVG(c.overall_score) as average_overall_score FROM official_languages ol JOIN languages l ON ol.language_id = l.id JOIN countries c ON ol.country_id = c.id GROUP BY l.name, l.id ORDER BY average_overall_score DESC;"
    },
    {
        "question_id": 1389,
        "answer_sql": "SELECT l.name, AVG(c.overall_score) as average_overall_score FROM official_languages ol JOIN languages l ON ol.language_id = l.id JOIN countries c ON ol.country_id = c.id GROUP BY l.name ORDER BY average_overall_score DESC;"
    },
    {
        "question_id": 1390,
        "answer_sql": "SELECT c.name FROM countries AS c JOIN official_languages AS ol ON c.id = ol.country_id GROUP BY c.name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1391,
        "answer_sql": "SELECT c.name AS Country, COUNT(l.name) AS Number_of_Languages FROM countries AS c JOIN official_languages AS ol ON c.id = ol.country_id JOIN languages AS l ON ol.language_id = l.id GROUP BY c.name ORDER BY Number_of_Languages DESC LIMIT 1;"
    },
    {
        "question_id": 1392,
        "answer_sql": ""
    },
    {
        "question_id": 1393,
        "answer_sql": ""
    },
    {
        "question_id": 1394,
        "answer_sql": ""
    },
    {
        "question_id": 1395,
        "answer_sql": ""
    },
    {
        "question_id": 1396,
        "answer_sql": ""
    },
    {
        "question_id": 1397,
        "answer_sql": ""
    },
    {
        "question_id": 1398,
        "answer_sql": "SELECT country, town_city FROM Addresses"
    },
    {
        "question_id": 1399,
        "answer_sql": "SELECT country, town_city FROM Addresses"
    },
    {
        "question_id": 1400,
        "answer_sql": "SELECT `county_state_province` FROM `Properties` JOIN `Addresses` ON `Properties`.`property_address_id` = `Addresses`.`address_id`;"
    },
    {
        "question_id": 1401,
        "answer_sql": "SELECT `county_state_province` FROM `Properties` JOIN `Addresses` ON `Properties`.`property_address_id` = `Addresses`.`address_id`;"
    },
    {
        "question_id": 1402,
        "answer_sql": "SELECT `feature_name`, `feature_description` FROM `Features` WHERE `feature_name` = 'rooftop';"
    },
    {
        "question_id": 1403,
        "answer_sql": "SELECT `feature_description` FROM `Features` WHERE `feature_name` = 'rooftop';"
    },
    {
        "question_id": 1404,
        "answer_sql": "SELECT `Features`.`feature_name`, `Features`.`feature_description` FROM `Properties` JOIN `Property_Features` ON `Properties`.`property_id` = `Property_Features`.`property_id` JOIN `Features` ON `Property_Features`.`feature_id` = `Features`.`feature_id` GROUP BY `Features`.`feature_name`, `Features`.`feature_description` ORDER BY COUNT(`Property_Features`.`property_id`) DESC LIMIT 1;"
    },
    {
        "question_id": 1405,
        "answer_sql": "SELECT `Features`.`feature_name`, `Features`.`feature_description` FROM `Properties` JOIN `Property_Features` ON `Properties`.`property_id` = `Property_Features`.`property_id` JOIN `Features` ON `Property_Features`.`feature_id` = `Features`.`feature_id` GROUP BY `Features`.`feature_name`, `Features`.`feature_description` ORDER BY COUNT(`Property_Features`.`property_id`) DESC LIMIT 1;"
    },
    {
        "question_id": 1406,
        "answer_sql": "SELECT MIN(room_count) as min_rooms FROM Properties;"
    },
    {
        "question_id": 1407,
        "answer_sql": "SELECT MIN(Properties.room_count) as Lowest_Room_Count FROM Properties;"
    },
    {
        "question_id": 1408,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE garage_yn = '1' OR parking_lots = '1';"
    },
    {
        "question_id": 1409,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE garage_yn = '1' OR parking_lots = '1';"
    },
    {
        "question_id": 1410,
        "answer_sql": ""
    },
    {
        "question_id": 1411,
        "answer_sql": ""
    },
    {
        "question_id": 1412,
        "answer_sql": "SELECT first_name FROM Users WHERE user_id = ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id ORDER BY COUNT(*) DESC LIMIT 1 )"
    },
    {
        "question_id": 1413,
        "answer_sql": "SELECT first_name FROM Users WHERE user_id = ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id ORDER BY COUNT(*) DESC LIMIT 1 )"
    },
    {
        "question_id": 1414,
        "answer_sql": "SELECT AVG(Properties.room_count) FROM Properties WHERE Properties.garage_yn = 'Y';"
    },
    {
        "question_id": 1415,
        "answer_sql": "SELECT AVG(Properties.room_count) FROM Properties WHERE Properties.garage_yn = 'Y';"
    },
    {
        "question_id": 1416,
        "answer_sql": ""
    },
    {
        "question_id": 1417,
        "answer_sql": ""
    },
    {
        "question_id": 1418,
        "answer_sql": "SELECT `Properties`.`property_id`, `Properties`.`vendor_requested_price` FROM `Properties` WHERE `Properties`.`vendor_requested_price` = ( SELECT MIN(`Properties`.`vendor_requested_price`) FROM `Properties` )"
    },
    {
        "question_id": 1419,
        "answer_sql": "SELECT p.property_id, p.vendor_requested_price FROM Properties p WHERE p.vendor_requested_price = (SELECT MIN(vendor_requested_price) FROM Properties)"
    },
    {
        "question_id": 1420,
        "answer_sql": "SELECT AVG(room_count) as average_rooms FROM Properties;"
    },
    {
        "question_id": 1421,
        "answer_sql": "SELECT AVG(room_count) as average_rooms FROM Properties;"
    },
    {
        "question_id": 1422,
        "answer_sql": "SELECT COUNT(DISTINCT `Rooms`.`room_size`) FROM `Rooms` JOIN `Ref_Room_Types` ON `Rooms`.`room_type_code` = `Ref_Room_Types`.`room_type_code`;"
    },
    {
        "question_id": 1423,
        "answer_sql": "SELECT R.room_size, COUNT(*) as room_sizes_count FROM Properties P JOIN Rooms R ON P.property_id = R.property_id GROUP BY R.room_size;"
    },
    {
        "question_id": 1424,
        "answer_sql": "SELECT u.user_id, u.login_name, u.first_name, u.last_name, u.other_user_details, us.search_string FROM Users u JOIN User_Searches us ON u.user_id = us.user_id GROUP BY u.user_id, u.login_name, u.first_name, u.last_name, u.other_user_details HAVING COUNT(us.search_seq) >= 2;"
    },
    {
        "question_id": 1425,
        "answer_sql": "SELECT u.user_id, u.first_name, u.last_name, COUNT(s.search_seq) as num_searches FROM Users u JOIN User_Searches s ON u.user_id = s.user_id GROUP BY u.user_id, u.first_name, u.last_name HAVING num_searches >= 2 ORDER BY num_searches DESC;"
    },
    {
        "question_id": 1426,
        "answer_sql": "SELECT MAX(search_datetime) as latest_search_time FROM User_Searches;"
    },
    {
        "question_id": 1427,
        "answer_sql": "SELECT MAX(`search_datetime`) as `Most Recent Search` FROM `User_Searches`;"
    },
    {
        "question_id": 1428,
        "answer_sql": "SELECT `User_Searches`.`user_id`, `User_Searches`.`search_seq`, `User_Searches`.`search_datetime`, `User_Searches`.`search_string` FROM `User_Searches` ORDER BY `User_Searches`.`search_string` DESC;"
    },
    {
        "question_id": 1429,
        "answer_sql": "SELECT `User_Searches`.`search_string`, `User_Searches`.`search_datetime` FROM `User_Searches` WHERE `User_Searches`.`user_id` IN ( SELECT `Users`.`user_id` FROM `Users` WHERE `Users`.`user_id` IN ( SELECT `User_Property_History`.`user_id` FROM `User_Property_History` WHERE `User_Property_History`.`property_id` IN ( SELECT `Properties`.`property_id` FROM `Properties` WHERE `Properties`.`property_id` IN ( SELECT `Rooms`.`property_id` FROM `Rooms` WHERE `Rooms`.`room_number` = '1' ) ) ) ) ORDER BY `User_Searches`.`search_string` DESC;"
    },
    {
        "question_id": 1430,
        "answer_sql": "SELECT `Property`.`property_address_id` FROM `Properties` AS `Property` WHERE `Property`.`property_id` NOT IN ( SELECT `User_Property_History`.`property_id` FROM `User_Property_History` GROUP BY `User_Property_History`.`user_id` HAVING COUNT(`User_Property_History`.`user_id`) <= 2 )"
    },
    {
        "question_id": 1431,
        "answer_sql": "SELECT DISTINCT Addresses.zip_postcode FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id JOIN ( SELECT property_id FROM Properties GROUP BY property_id HAVING COUNT(property_id) <= 2 ) AS P ON Properties.property_id = P.property_id JOIN Addresses ON Properties.property_address_id = Addresses.address_id;"
    },
    {
        "question_id": 1432,
        "answer_sql": ""
    },
    {
        "question_id": 1433,
        "answer_sql": "SELECT u.user_id, u.user_category_code FROM Users u WHERE EXISTS ( SELECT 1 FROM User_Searches us WHERE us.user_id = u.user_id GROUP BY us.user_id HAVING COUNT(us.search_seq) = 1 )"
    },
    {
        "question_id": 1434,
        "answer_sql": "SELECT `age_category_code` FROM `Users` WHERE `user_id` = (SELECT `user_id` FROM `User_Searches` ORDER BY `search_datetime` ASC LIMIT 1);"
    },
    {
        "question_id": 1435,
        "answer_sql": "SELECT `Ref_Age_Categories`.`age_category_description` FROM `Users` JOIN `User_Searches` ON `Users`.`user_id` = `User_Searches`.`user_id` JOIN `Ref_Age_Categories` ON `Users`.`age_category_code` = `Ref_Age_Categories`.`age_category_code` WHERE `User_Searches`.`search_datetime` = (SELECT MIN(`search_datetime`) FROM `User_Searches`) ORDER BY `Users`.`user_id` ASC;"
    },
    {
        "question_id": 1436,
        "answer_sql": ""
    },
    {
        "question_id": 1437,
        "answer_sql": ""
    },
    {
        "question_id": 1438,
        "answer_sql": "SELECT COUNT(*) FROM Users WHERE is_buyer = 'Y'"
    },
    {
        "question_id": 1439,
        "answer_sql": "SELECT COUNT(*) FROM Users WHERE is_buyer = 'Y';"
    },
    {
        "question_id": 1440,
        "answer_sql": "SELECT date_registered FROM Users WHERE login_name = 'ratione';"
    },
    {
        "question_id": 1441,
        "answer_sql": "SELECT Users.date_registered, Users.login_name FROM Users WHERE Users.login_name = 'ratione';"
    },
    {
        "question_id": 1442,
        "answer_sql": "SELECT first_name, middle_name, last_name, login_name FROM Users WHERE is_seller = '1'"
    },
    {
        "question_id": 1443,
        "answer_sql": "SELECT Users.first_name, Users.middle_name, Users.last_name, Users.login_name FROM Users WHERE Users.is_seller = '1'"
    },
    {
        "question_id": 1444,
        "answer_sql": ""
    },
    {
        "question_id": 1445,
        "answer_sql": ""
    },
    {
        "question_id": 1446,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE property_id IN (SELECT property_id FROM Property_Features GROUP BY property_id HAVING COUNT(feature_id) >= 2);"
    },
    {
        "question_id": 1447,
        "answer_sql": "SELECT COUNT(*) FROM Properties JOIN Property_Features ON Properties.property_id = Property_Features.property_id GROUP BY Properties.property_id HAVING COUNT(Property_Features.feature_id) >= 2;"
    },
    {
        "question_id": 1448,
        "answer_sql": "SELECT Property_Photos.photo_seq, Properties.property_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Property_Photos INNER JOIN Properties ON Property_Photos.property_id = Properties.property_id GROUP BY Property_Photos.photo_seq, Properties.property_id HAVING photo_count > 0 ORDER BY photo_count DESC;"
    },
    {
        "question_id": 1449,
        "answer_sql": "SELECT Properties.property_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Properties JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Properties.property_id;"
    },
    {
        "question_id": 1450,
        "answer_sql": "SELECT Users.user_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Users LEFT JOIN Property_Photos ON Users.user_id = Property_Photos.property_id GROUP BY Users.user_id;"
    },
    {
        "question_id": 1451,
        "answer_sql": "SELECT Properties.owner_user_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Properties JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Properties.owner_user_id;"
    },
    {
        "question_id": 1452,
        "answer_sql": "SELECT MAX(Properties.vendor_requested_price) as Total_Max_Price FROM Properties JOIN Users ON Properties.owner_user_id = Users.user_id JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code WHERE Users.age_category_code IN ('Student', 'Mother') AND Properties.price_max IS NOT NULL;"
    },
    {
        "question_id": 1453,
        "answer_sql": "SELECT MAX(Properties.vendor_requested_price) AS max_price FROM Properties JOIN Users ON Properties.owner_user_id = Users.user_id JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code WHERE Users.is_buyer = 'Y' AND Users.is_seller = 'N' AND Ref_User_Categories.user_category_description = 'Mothers' OR Ref_User_Categories.user_category_description = 'Students';"
    },
    {
        "question_id": 1454,
        "answer_sql": "SELECT `datestamp`, `property_name` FROM `User_Property_History` JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` ORDER BY `datestamp`;"
    },
    {
        "question_id": 1455,
        "answer_sql": "SELECT User_Property_History.datestamp, Properties.property_name FROM User_Property_History JOIN Properties ON User_Property_History.property_id = Properties.property_id ORDER BY User_Property_History.datestamp;"
    },
    {
        "question_id": 1456,
        "answer_sql": "SELECT `Ref_Property_Types`.`property_type_description` FROM `Properties` JOIN `Ref_Property_Types` ON `Properties`.`property_type_code` = `Ref_Property_Types`.`property_type_code` GROUP BY `Ref_Property_Types`.`property_type_description` ORDER BY COUNT(`Properties`.`property_id`) DESC LIMIT 1;"
    },
    {
        "question_id": 1457,
        "answer_sql": "SELECT `Ref_Property_Types`.`property_type_description`, COUNT(`Properties`.`property_id`) AS `Count` FROM `Properties` JOIN `Ref_Property_Types` ON `Properties`.`property_type_code` = `Ref_Property_Types`.`property_type_code` GROUP BY `Ref_Property_Types`.`property_type_description` ORDER BY `Count` DESC LIMIT 1;"
    },
    {
        "question_id": 1458,
        "answer_sql": "SELECT `Ref_Age_Categories`.`age_category_description` FROM `Ref_Age_Categories` WHERE `Ref_Age_Categories`.`age_category_code` = 'Over 60';"
    },
    {
        "question_id": 1459,
        "answer_sql": "SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60';"
    },
    {
        "question_id": 1460,
        "answer_sql": "SELECT r.room_type_code, COUNT(*) as room_count FROM Rooms r JOIN Properties p ON r.property_id = p.property_id GROUP BY r.room_type_code;"
    },
    {
        "question_id": 1461,
        "answer_sql": "SELECT Rooms.room_size, COUNT(*) as room_count FROM Rooms JOIN Properties ON Rooms.property_id = Properties.property_id GROUP BY Rooms.room_size;"
    },
    {
        "question_id": 1462,
        "answer_sql": "SELECT `Addresses`.`country` FROM `Users` INNER JOIN `Addresses` ON `Users`.`user_address_id` = `Addresses`.`address_id` WHERE `Users`.`first_name` = 'Robbie';"
    },
    {
        "question_id": 1463,
        "answer_sql": ""
    },
    {
        "question_id": 1464,
        "answer_sql": ""
    },
    {
        "question_id": 1465,
        "answer_sql": ""
    },
    {
        "question_id": 1466,
        "answer_sql": "SELECT Users.login_name FROM Users LEFT JOIN User_Property_History ON Users.user_id = User_Property_History.user_id WHERE User_Property_History.property_id IS NULL;"
    },
    {
        "question_id": 1467,
        "answer_sql": "SELECT US.login_name, US.first_name, US.last_name FROM Users AS US LEFT JOIN User_Property_History AS UPH ON US.user_id = UPH.user_id LEFT JOIN Properties AS P ON UPH.property_id = P.property_id WHERE P.property_id IS NULL;"
    },
    {
        "question_id": 1468,
        "answer_sql": "SELECT Users.user_id, Users.last_name FROM Users JOIN (SELECT user_id FROM User_Property_History GROUP BY user_id HAVING COUNT(property_id) >= 2) AS User_Properties ON Users.user_id = User_Properties.user_id JOIN (SELECT user_id FROM User_Searches GROUP BY user_id HAVING COUNT(search_seq) <= 2) AS User_Searches ON Users.user_id = User_Searches.user_id;"
    },
    {
        "question_id": 1469,
        "answer_sql": "SELECT Users.last_name, Users.user_id FROM Users JOIN (SELECT user_id, COUNT(*) as search_count FROM User_Searches GROUP BY user_id) AS User_Searches_Count ON Users.user_id = User_Searches_Count.user_id JOIN (SELECT owner_user_id, COUNT(*) as property_count FROM Properties GROUP BY owner_user_id HAVING property_count >= 2) AS User_Properties ON Users.user_id = User_Properties.owner_user_id WHERE User_Searches_Count.search_count <= 2;"
    },
    {
        "question_id": 1470,
        "answer_sql": "SELECT COUNT(*) FROM `bike` WHERE `weight` > 780;"
    },
    {
        "question_id": 1471,
        "answer_sql": "SELECT product_name , weight FROM bike WHERE price <= 10000 ORDER BY price ASC;"
    },
    {
        "question_id": 1472,
        "answer_sql": "SELECT cyclist.heat, cyclist.name, cyclist.nation FROM cyclist JOIN cyclists_own_bikes ON cyclist.id = cyclists_own_bikes.cyclist_id;"
    },
    {
        "question_id": 1473,
        "answer_sql": "SELECT MAX(bike.weight) as max_weight, MIN(bike.weight) as min_weight FROM bike;"
    },
    {
        "question_id": 1474,
        "answer_sql": "SELECT AVG(price) FROM bike WHERE material = 'Carbon CC';"
    },
    {
        "question_id": 1475,
        "answer_sql": "SELECT cyclist.name, cyclist.result FROM cyclist WHERE cyclist.nation <> 'Russia';"
    },
    {
        "question_id": 1476,
        "answer_sql": "SELECT DISTINCT b.id, b.product_name FROM bike b JOIN cyclists_own_bikes co ON b.id = co.bike_id WHERE co.purchase_year > 2015;"
    },
    {
        "question_id": 1477,
        "answer_sql": "SELECT b.id, b.product_name FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id GROUP BY b.id, b.product_name HAVING COUNT(c.cyclist_id) >= 4;"
    },
    {
        "question_id": 1478,
        "answer_sql": "SELECT c. id , c. name FROM cyclist c JOIN cyclists_own_bikes cob ON c. id = cob. cyclist_id GROUP BY c. id , c. name ORDER BY COUNT(cob. bike_id ) DESC LIMIT 1;"
    },
    {
        "question_id": 1479,
        "answer_sql": "SELECT DISTINCT `bike`.`product_name` FROM `bike` JOIN `cyclists_own_bikes` ON `cyclists_own_bikes`.`bike_id` = `bike`.`id` JOIN `cyclist` ON `cyclists_own_bikes`.`cyclist_id` = `cyclist`.`id` WHERE `cyclist`.`nation` IN ('Russia', 'Great Britain')"
    },
    {
        "question_id": 1480,
        "answer_sql": "SELECT DISTINCT `cyclist`.`heat` FROM `cyclist` JOIN `cyclists_own_bikes` ON `cyclist`.`id` = `cyclists_own_bikes`.`cyclist_id` JOIN `bike` ON `bike`.`id` = `cyclists_own_bikes`.`bike_id` WHERE `cyclists_own_bikes`.`purchase_year` >= 2010;"
    },
    {
        "question_id": 1481,
        "answer_sql": "SELECT COUNT(*) FROM `cyclist` WHERE `id` NOT IN (SELECT `cyclist_id` FROM `cyclists_own_bikes` WHERE `purchase_year` > 2015);"
    },
    {
        "question_id": 1482,
        "answer_sql": "SELECT b.product_name FROM bike b JOIN cyclists_own_bikes cob ON b.id = cob.bike_id JOIN cyclist c ON cob.cyclist_id = c.id WHERE c.result > 4.21558 GROUP BY b.product_name"
    },
    {
        "question_id": 1483,
        "answer_sql": "SELECT b.product_name, b.price FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id WHERE c.cyclist_id IN (SELECT id FROM cyclist WHERE name IN ('Bradley Wiggins', 'Antonio Tauler'));"
    },
    {
        "question_id": 1484,
        "answer_sql": "SELECT `cyclist`.`name`, `cyclist`.`nation`, `cyclist`.`result` FROM `cyclist` LEFT JOIN `cyclists_own_bikes` ON `cyclists_own_bikes`.`cyclist_id` = `cyclist`.`id` WHERE `cyclists_own_bikes`.`bike_id` IS NULL;"
    },
    {
        "question_id": 1485,
        "answer_sql": "SELECT b.product_name FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id WHERE b.material LIKE '%fiber%'"
    },
    {
        "question_id": 1486,
        "answer_sql": "SELECT c. name , COUNT(b. id ) as Number_of_Bikes FROM `cyclist` as c\nJOIN `cyclists_own_bikes` as cob ON c. id = cob. cyclist_id\nJOIN `bike` as b ON cob. bike_id = b. id\nGROUP BY c. id , c. name\nORDER BY c. id ;"
    },
    {
        "question_id": 1487,
        "answer_sql": "SELECT goods.Flavor, goods.Price FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Price = (SELECT MAX(Price) FROM goods)"
    },
    {
        "question_id": 1488,
        "answer_sql": "SELECT g.Flavor, g.Price FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' ORDER BY g.Price DESC LIMIT 1;"
    },
    {
        "question_id": 1489,
        "answer_sql": "SELECT g.Flavor, g.Price FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Food = 'Cookie' ORDER BY g.Price ASC LIMIT 1;"
    },
    {
        "question_id": 1490,
        "answer_sql": "SELECT goods.Id, goods.Flavor FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE goods.Food = 'Cookie' ORDER BY goods.Price ASC LIMIT 1;"
    },
    {
        "question_id": 1491,
        "answer_sql": ""
    },
    {
        "question_id": 1492,
        "answer_sql": ""
    },
    {
        "question_id": 1493,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Price < 3;"
    },
    {
        "question_id": 1494,
        "answer_sql": "SELECT goods.Id FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Price < 3 GROUP BY goods.Id"
    },
    {
        "question_id": 1495,
        "answer_sql": ""
    },
    {
        "question_id": 1496,
        "answer_sql": "SELECT DISTINCT receipts.CustomerId FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON goods.Id = items.Item WHERE goods.Flavor = 'Lemon' AND goods.Food = 'Cake';"
    },
    {
        "question_id": 1497,
        "answer_sql": "SELECT goods.Flavor, COUNT(DISTINCT customers.Id) AS NumberOfCustomers FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id GROUP BY goods.Flavor;"
    },
    {
        "question_id": 1498,
        "answer_sql": "SELECT goods.Flavor, goods.Food, COUNT(items.Receipt) as NumberOfCustomers FROM items JOIN goods ON items.Item = goods.Id JOIN receipts ON items.Receipt = receipts.ReceiptNumber GROUP BY goods.Flavor, goods.Food ORDER BY NumberOfCustomers DESC;"
    },
    {
        "question_id": 1499,
        "answer_sql": "SELECT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON goods.Id = items.Item GROUP BY customers.Id HAVING COUNT(items.Item) >= 15"
    },
    {
        "question_id": 1500,
        "answer_sql": "SELECT DISTINCT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id HAVING COUNT(receipts.ReceiptNumber) >= 15;"
    },
    {
        "question_id": 1501,
        "answer_sql": ""
    },
    {
        "question_id": 1502,
        "answer_sql": "SELECT c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId GROUP BY c.Id HAVING COUNT(r.ReceiptNumber) > 10;"
    },
    {
        "question_id": 1503,
        "answer_sql": "SELECT COUNT(DISTINCT goods.Flavor) FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE receipts.CustomerId IN (SELECT Id FROM customers WHERE LastName = '[HINT]')"
    },
    {
        "question_id": 1504,
        "answer_sql": "SELECT g.Flavor, COUNT(i.Item) as NumberOfCakes FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"
    },
    {
        "question_id": 1505,
        "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Food = 'Croissant';"
    },
    {
        "question_id": 1506,
        "answer_sql": "SELECT g.Flavor FROM goods AS g WHERE g.Food = 'Croissant';"
    },
    {
        "question_id": 1507,
        "answer_sql": "SELECT DISTINCT items.Item FROM items JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE customers.Id = 15;"
    },
    {
        "question_id": 1508,
        "answer_sql": "SELECT items.Item FROM items JOIN goods ON items.Item = goods.Id JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE receipts.CustomerId = 15 GROUP BY items.Item;"
    },
    {
        "question_id": 1509,
        "answer_sql": "SELECT goods.Flavor, AVG(goods.Price) AS 'Average Price', MAX(goods.Price) AS 'Maximum Price', MIN(goods.Price) AS 'Minimum Price' FROM items JOIN goods ON items.Item = goods.Id GROUP BY goods.Flavor;"
    },
    {
        "question_id": 1510,
        "answer_sql": "SELECT goods.Flavor, goods.Food, AVG(goods.Price) AS AveragePrice, MIN(goods.Price) AS MinimumPrice, MAX(goods.Price) AS MaximumPrice FROM items JOIN goods ON items.Item = goods.Id GROUP BY goods.Flavor, goods.Food;"
    },
    {
        "question_id": 1511,
        "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM items i JOIN goods g ON i.Item = g.Id JOIN receipts r ON i.Receipt = r.ReceiptNumber WHERE g.Food IN ('Cake', 'Cookie')"
    },
    {
        "question_id": 1512,
        "answer_sql": ""
    },
    {
        "question_id": 1513,
        "answer_sql": ""
    },
    {
        "question_id": 1514,
        "answer_sql": ""
    },
    {
        "question_id": 1515,
        "answer_sql": "SELECT receipts.ReceiptNumber, receipts.Date FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Price = ( SELECT MAX(goods.Price) FROM goods )"
    },
    {
        "question_id": 1516,
        "answer_sql": "SELECT r.ReceiptNumber, r.Date FROM receipts AS r JOIN ( SELECT i.Receipt, MAX(g.Price) AS MaxPrice FROM items AS i JOIN goods AS g ON i.Item = g.Id GROUP BY i.Receipt ) AS MaxPricePerReceipt ON r.ReceiptNumber = MaxPricePerReceipt.Receipt ORDER BY MaxPricePerReceipt.MaxPrice DESC;"
    },
    {
        "question_id": 1517,
        "answer_sql": "SELECT g.Flavor, g.Food, g.Price FROM goods g JOIN items i ON g.Id = i.Item WHERE i.Receipt = (SELECT MIN(Receipt) FROM items) GROUP BY g.Id;"
    },
    {
        "question_id": 1518,
        "answer_sql": "SELECT g.Flavor, g.Food FROM goods g JOIN items i ON g.Id = i.Item WHERE i.Receipt IN ( SELECT MIN(Receipt) FROM items GROUP BY Item )"
    },
    {
        "question_id": 1519,
        "answer_sql": "SELECT g.Food, COUNT(i.Item) as AvailableCount FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Food;"
    },
    {
        "question_id": 1520,
        "answer_sql": "SELECT goods.Flavor, goods.Food, COUNT(items.Item) as NumberOfGoods FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Flavor, goods.Food;"
    },
    {
        "question_id": 1521,
        "answer_sql": "SELECT g.Food, AVG(g.Price) as AveragePrice FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt JOIN customers c ON c.Id = r.CustomerId GROUP BY g.Food;"
    },
    {
        "question_id": 1522,
        "answer_sql": "SELECT g.Flavor, AVG(g.Price) as AveragePrice FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"
    },
    {
        "question_id": 1523,
        "answer_sql": "SELECT goods.Id FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Flavor = 'Apricot' AND goods.Price < 5 GROUP BY goods.Id ORDER BY goods.Id;"
    },
    {
        "question_id": 1524,
        "answer_sql": "SELECT goods.Id FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Flavor = 'Apricot' AND goods.Price < 5;"
    },
    {
        "question_id": 1525,
        "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' AND g.Price > 10 GROUP BY g.Flavor;"
    },
    {
        "question_id": 1526,
        "answer_sql": "SELECT goods.Flavor FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Price > 10 AND items.Item IN (SELECT Id FROM goods WHERE Flavor IN (SELECT Flavor FROM goods WHERE Price > 10))"
    },
    {
        "question_id": 1527,
        "answer_sql": "SELECT DISTINCT goods . Id , goods . Price FROM goods WHERE goods . Price < ( SELECT AVG( goods . Price ) FROM goods );"
    },
    {
        "question_id": 1528,
        "answer_sql": "SELECT g.Id, g.Price FROM goods g WHERE g.Price < ( SELECT AVG(g1.Price) FROM goods g1 )"
    },
    {
        "question_id": 1529,
        "answer_sql": ""
    },
    {
        "question_id": 1530,
        "answer_sql": ""
    },
    {
        "question_id": 1531,
        "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13;"
    },
    {
        "question_id": 1532,
        "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13;"
    },
    {
        "question_id": 1533,
        "answer_sql": "SELECT r.Date FROM receipts AS r JOIN items AS i ON r.ReceiptNumber = i.Receipt JOIN goods AS g ON i.Item = g.Id WHERE g.Price > 15.0 ORDER BY r.Date DESC LIMIT 1;"
    },
    {
        "question_id": 1534,
        "answer_sql": "SELECT r.Date FROM receipts AS r JOIN items AS i ON r.ReceiptNumber = i.Receipt JOIN goods AS g ON i.Item = g.Id WHERE g.Price > 15.0 ORDER BY r.Date DESC;"
    },
    {
        "question_id": 1535,
        "answer_sql": "SELECT g.Id FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE i.Item LIKE '%APP%' GROUP BY g.Id"
    },
    {
        "question_id": 1536,
        "answer_sql": "SELECT g.Id FROM goods AS g WHERE g.Id LIKE '%APP%'"
    },
    {
        "question_id": 1537,
        "answer_sql": "SELECT goods.Flavor, goods.Price FROM goods JOIN items ON goods.Id = items.Item WHERE items.Item LIKE '%70%'"
    },
    {
        "question_id": 1538,
        "answer_sql": ""
    },
    {
        "question_id": 1539,
        "answer_sql": "SELECT LastName FROM customers ORDER BY LastName;"
    },
    {
        "question_id": 1540,
        "answer_sql": "SELECT LastName FROM customers ORDER BY LastName;"
    },
    {
        "question_id": 1541,
        "answer_sql": "SELECT g.Id FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt ORDER BY g.Id;"
    },
    {
        "question_id": 1542,
        "answer_sql": "SELECT g.Id FROM goods g ORDER BY g.Id;"
    },
    {
        "question_id": 1543,
        "answer_sql": "SELECT * FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE (goods.Flavor = 'apple' AND goods.Food = 'pie') OR receipts.CustomerId = 12"
    },
    {
        "question_id": 1544,
        "answer_sql": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'apple' OR receipts.CustomerId = 12;"
    },
    {
        "question_id": 1545,
        "answer_sql": "SELECT r.ReceiptNumber, r.Date FROM receipts r WHERE r.Date = ( SELECT MAX(r2.Date) FROM receipts r2 )"
    },
    {
        "question_id": 1546,
        "answer_sql": "SELECT MAX(receipts.ReceiptNumber) as LatestReceipt, receipts.Date as LatestDate FROM receipts"
    },
    {
        "question_id": 1547,
        "answer_sql": ""
    },
    {
        "question_id": 1548,
        "answer_sql": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 10 OR (r.Date = (SELECT MIN(Date) FROM receipts) AND g.Food = 'Bread') GROUP BY r.ReceiptNumber ORDER BY r.ReceiptNumber;"
    },
    {
        "question_id": 1549,
        "answer_sql": ""
    },
    {
        "question_id": 1550,
        "answer_sql": ""
    },
    {
        "question_id": 1551,
        "answer_sql": "SELECT c.FirstName, c.LastName FROM receipts r JOIN customers c ON r.CustomerId = c.Id WHERE r.Date = (SELECT MIN(Date) FROM receipts)"
    },
    {
        "question_id": 1552,
        "answer_sql": "SELECT customers.FirstName, customers.LastName, MIN(receipts.Date) as EarliestDate FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.FirstName, customers.LastName ORDER BY EarliestDate ASC LIMIT 1;"
    },
    {
        "question_id": 1553,
        "answer_sql": "SELECT AVG(goods.Price) FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Flavor IN ('blackberry', 'blueberry')"
    },
    {
        "question_id": 1554,
        "answer_sql": "SELECT AVG(g.Price) FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor IN ('blackberry', 'blueberry');"
    },
    {
        "question_id": 1555,
        "answer_sql": "SELECT g.Price FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Flavor = 'Cheese' ORDER BY g.Price ASC LIMIT 1;"
    },
    {
        "question_id": 1556,
        "answer_sql": "SELECT g.Flavor, g.Price FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt JOIN customers AS c ON r.CustomerId = c.Id WHERE c.Id = '1' AND g.Flavor = 'Cheese' ORDER BY g.Price ASC LIMIT 1;"
    },
    {
        "question_id": 1557,
        "answer_sql": "SELECT g.Flavor, MAX(g.Price) AS HighestPrice, MIN(g.Price) AS LowestPrice, AVG(g.Price) AS AveragePrice FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON i.Receipt = r.ReceiptNumber JOIN customers AS c ON r.CustomerId = c.Id GROUP BY g.Flavor ORDER BY AveragePrice DESC;"
    },
    {
        "question_id": 1558,
        "answer_sql": "SELECT goods.Flavor, MAX(goods.Price) AS MaxPrice, MIN(goods.Price) AS MinPrice, AVG(goods.Price) AS AvgPrice FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id GROUP BY goods.Flavor ORDER BY goods.Flavor;"
    },
    {
        "question_id": 1559,
        "answer_sql": "SELECT g.Flavor, MIN(g.Price) AS LowestPrice, MAX(g.Price) AS HighestPrice FROM goods AS g GROUP BY g.Food ORDER BY LowestPrice, HighestPrice;"
    },
    {
        "question_id": 1560,
        "answer_sql": "SELECT MIN(goods.Price) as MinPrice, MAX(goods.Price) as MaxPrice FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Food ORDER BY goods.Food;"
    },
    {
        "question_id": 1561,
        "answer_sql": "SELECT r.Date, COUNT(i.Receipt) as NumberOfReceipts FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt GROUP BY r.Date ORDER BY NumberOfReceipts DESC LIMIT 3;"
    },
    {
        "question_id": 1562,
        "answer_sql": "SELECT receipts.Date, COUNT(items.Receipt) as NumReceipts FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt GROUP BY receipts.Date ORDER BY NumReceipts DESC LIMIT 3;"
    },
    {
        "question_id": 1563,
        "answer_sql": "SELECT customers.FirstName, customers.LastName, COUNT(items.Receipt) as TotalOrders FROM receipts JOIN customers ON receipts.CustomerId = customers.Id JOIN items ON receipts.ReceiptNumber = items.Receipt GROUP BY customers.FirstName, customers.LastName ORDER BY TotalOrders DESC LIMIT 1;"
    },
    {
        "question_id": 1564,
        "answer_sql": "SELECT customers.Id, COUNT(DISTINCT items.Receipt) as NumberOfPurchases FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN customers ON customers.Id = receipts.CustomerId GROUP BY customers.Id ORDER BY NumberOfPurchases DESC, customers.Id LIMIT 1;"
    },
    {
        "question_id": 1565,
        "answer_sql": "SELECT r.Date, COUNT(DISTINCT c.Id) as 'Number of Customers' FROM receipts r JOIN customers c ON r.CustomerId = c.Id GROUP BY r.Date;"
    },
    {
        "question_id": 1566,
        "answer_sql": "SELECT r.Date, COUNT(DISTINCT r.CustomerId) as VisitedCustomers FROM receipts r GROUP BY r.Date;"
    },
    {
        "question_id": 1567,
        "answer_sql": ""
    },
    {
        "question_id": 1568,
        "answer_sql": ""
    },
    {
        "question_id": 1569,
        "answer_sql": ""
    },
    {
        "question_id": 1570,
        "answer_sql": ""
    },
    {
        "question_id": 1571,
        "answer_sql": ""
    },
    {
        "question_id": 1572,
        "answer_sql": "SELECT goods.Id FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake' AND goods.Flavor != 'Vanilla' AND items.Ordinal = ( SELECT AVG(Ordinal) FROM items WHERE Item = goods.Id ) AND goods.Price >= ( SELECT AVG(Price) FROM goods WHERE Flavor = 'Vanilla' );"
    },
    {
        "question_id": 1573,
        "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price > ( SELECT AVG(g1.Price) FROM goods g1 );"
    },
    {
        "question_id": 1574,
        "answer_sql": "SELECT g.Id FROM goods g JOIN items i ON g.Id = i.Item JOIN ( SELECT AVG(Price) as avg_price FROM goods ) avg_goods ON TRUE WHERE g.Price > 2 * avg_goods.avg_price GROUP BY g.Id"
    },
    {
        "question_id": 1575,
        "answer_sql": "SELECT g.Id, g.Flavor, g.Food FROM goods g JOIN items i ON g.Id = i.Item WHERE i.Receipt IN ( SELECT r.ReceiptNumber FROM receipts r WHERE r.Date >= '2022-01-01' ) ORDER BY g.Price;"
    },
    {
        "question_id": 1576,
        "answer_sql": "SELECT g.Id AS 'Goods Id', g.Flavor AS 'Flavor', g.Food AS 'Food Type' FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON i.Receipt = r.ReceiptNumber JOIN customers AS c ON r.CustomerId = c.Id WHERE g.Price > 0 ORDER BY g.Price;"
    },
    {
        "question_id": 1577,
        "answer_sql": "SELECT g.Id, g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' ORDER BY g.Flavor;"
    },
    {
        "question_id": 1578,
        "answer_sql": "SELECT g.Id, g.Flavor FROM goods AS g WHERE g.Food = 'Cake' ORDER BY g.Flavor;"
    },
    {
        "question_id": 1579,
        "answer_sql": "SELECT items.Item FROM items JOIN ( SELECT Item FROM items GROUP BY Item HAVING COUNT(*) <= 10 ) AS subquery ON items.Item = subquery.Item;"
    },
    {
        "question_id": 1580,
        "answer_sql": "SELECT items.Item FROM items JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'Chocolate' GROUP BY items.Item HAVING COUNT(items.Item) <= 10;"
    },
    {
        "question_id": 1581,
        "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Food = 'Cake' AND g.Flavor NOT IN ( SELECT g2.Flavor FROM goods AS g2 JOIN items AS i2 ON g2.Id = i2.Item WHERE g2.Food = 'Tart' )"
    },
    {
        "question_id": 1582,
        "answer_sql": "SELECT g.Flavor FROM goods AS g WHERE g.Food = 'Cake' AND g.Flavor NOT IN ( SELECT DISTINCT g2.Flavor FROM goods AS g2 WHERE g2.Food = 'Tart' );"
    },
    {
        "question_id": 1583,
        "answer_sql": "SELECT g.Flavor, g.Food, COUNT(i.Item) as 'Popularity' FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor, g.Food ORDER BY 'Popularity' DESC LIMIT 3;"
    },
    {
        "question_id": 1584,
        "answer_sql": "SELECT g.Flavor, g.Food, COUNT(i.Receipt) as PurchaseCount FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor, g.Food ORDER BY PurchaseCount DESC LIMIT 3;"
    },
    {
        "question_id": 1585,
        "answer_sql": "SELECT customers.Id FROM customers JOIN ( SELECT r.CustomerId, SUM(g.Price) as TotalSpent FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.CustomerId HAVING TotalSpent > 150 ) AS SpentCustomers ON customers.Id = SpentCustomers.CustomerId;"
    },
    {
        "question_id": 1586,
        "answer_sql": ""
    },
    {
        "question_id": 1587,
        "answer_sql": "SELECT g.Id AS GoodId, c.Id AS CustomerId, AVG(i.Ordinal * g.Price) AS AverageSpending FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON i.Receipt = r.ReceiptNumber JOIN customers c ON r.CustomerId = c.Id GROUP BY g.Id, c.Id HAVING AVG(i.Ordinal * g.Price) > 5;"
    },
    {
        "question_id": 1588,
        "answer_sql": "SELECT DISTINCT r.CustomerId FROM receipts r JOIN ( SELECT i.Receipt, AVG(g.Price) as avg_price FROM items i JOIN goods g ON i.Item = g.Id GROUP BY i.Receipt HAVING AVG(g.Price) > 5 ) subquery ON r.ReceiptNumber = subquery.Receipt"
    },
    {
        "question_id": 1589,
        "answer_sql": "SELECT r.Date, SUM(g.Price) AS TotalPrice FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id JOIN customers c ON r.CustomerId = c.Id GROUP BY r.Date HAVING SUM(g.Price) > 100 ORDER BY SUM(g.Price) DESC;"
    },
    {
        "question_id": 1590,
        "answer_sql": "SELECT r.Date, r.ReceiptNumber, SUM(i.Ordinal * g.Price) as TotalPrice FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date, r.ReceiptNumber HAVING SUM(i.Ordinal * g.Price) > 100 ORDER BY TotalPrice DESC;"
    },
    {
        "question_id": 1591,
        "answer_sql": "SELECT COUNT(*) FROM `driver`;"
    },
    {
        "question_id": 1592,
        "answer_sql": "SELECT COUNT(*) FROM `driver`;"
    },
    {
        "question_id": 1593,
        "answer_sql": "SELECT t.Make, COUNT(d.Driver_ID) as Num_Drivers FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID WHERE d.Points > 150 GROUP BY t.Make;"
    },
    {
        "question_id": 1594,
        "answer_sql": "SELECT Make, COUNT(*) as Count FROM driver WHERE Points > 150 GROUP BY Make;"
    },
    {
        "question_id": 1595,
        "answer_sql": "SELECT t.Make, AVG(d.Age) as Average_Age FROM team_driver td JOIN driver d ON td.Driver_ID = d.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID WHERE d.Age IS NOT NULL GROUP BY t.Make;"
    },
    {
        "question_id": 1596,
        "answer_sql": "SELECT Make , AVG( Age ) as Average_Age FROM driver GROUP BY Make ;"
    },
    {
        "question_id": 1597,
        "answer_sql": "SELECT AVG(`Laps`) FROM `driver` WHERE `Age` < 20;"
    },
    {
        "question_id": 1598,
        "answer_sql": "SELECT AVG(`Laps`) FROM `driver` WHERE `Age` < 20;"
    },
    {
        "question_id": 1599,
        "answer_sql": "SELECT `team`.`Manager` , `team`.`Sponsor` FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` GROUP BY `team`.`Team_ID` ORDER BY `team`.`Car_Owner`;"
    },
    {
        "question_id": 1600,
        "answer_sql": "SELECT `team`.`Team`, `team`.`Manager`, `team`.`Sponsor`, `team`.`Car_Owner` FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` JOIN `driver` ON `team_driver`.`Driver_ID` = `driver`.`Driver_ID` WHERE `driver`.`Car_#` = (SELECT MAX(`driver`.`Car_#`) FROM `driver`) ORDER BY `team`.`Car_Owner`;"
    },
    {
        "question_id": 1601,
        "answer_sql": "SELECT t.Make FROM team t JOIN team_driver td ON td.Team_ID = t.Team_ID GROUP BY t.Make HAVING COUNT(t.Team_ID) > 1;"
    },
    {
        "question_id": 1602,
        "answer_sql": "SELECT t.Make, COUNT(t.Team_ID) as Team_Count FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID GROUP BY t.Make HAVING Team_Count > 1 ORDER BY Team_Count DESC;"
    },
    {
        "question_id": 1603,
        "answer_sql": "SELECT `Make` FROM `team` WHERE `Car_Owner` = 'Buddy Arrington';"
    },
    {
        "question_id": 1604,
        "answer_sql": "SELECT `Make` FROM `team` WHERE `Car_Owner` = 'Buddy Arrington';"
    },
    {
        "question_id": 1605,
        "answer_sql": "SELECT MAX(Points) as Maximum_Points, MIN(Points) as Minimum_Points FROM driver;"
    },
    {
        "question_id": 1606,
        "answer_sql": "SELECT MAX(d.Points) AS Highest_Points, MIN(d.Points) AS Lowest_Points FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID;"
    },
    {
        "question_id": 1607,
        "answer_sql": "SELECT COUNT(*) FROM `driver` WHERE `Points` < 150;"
    },
    {
        "question_id": 1608,
        "answer_sql": "SELECT COUNT(*) FROM `driver` WHERE `Points` < 150;"
    },
    {
        "question_id": 1609,
        "answer_sql": "SELECT Driver FROM `driver` ORDER BY Age ASC;"
    },
    {
        "question_id": 1610,
        "answer_sql": "SELECT d.Driver, d.Age FROM driver d ORDER BY d.Age ASC;"
    },
    {
        "question_id": 1611,
        "answer_sql": "SELECT Driver FROM driver ORDER BY Points DESC;"
    },
    {
        "question_id": 1612,
        "answer_sql": "SELECT driver.Driver, driver.Driver_ID, country.Country, driver.Points FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID JOIN country ON driver.Country = country.Country_ID ORDER BY driver.Points DESC;"
    },
    {
        "question_id": 1613,
        "answer_sql": "SELECT t.Team, d.Driver, c.Country FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID JOIN country c ON d.Country = c.Country_Id;"
    },
    {
        "question_id": 1614,
        "answer_sql": "SELECT d.Driver, c.Country FROM driver d JOIN country c ON d.Country = c.Country_Id;"
    },
    {
        "question_id": 1615,
        "answer_sql": "SELECT MAX( Points ) FROM `driver` WHERE `Country` = (SELECT `Country_Id` FROM `country` WHERE `Capital` = 'Dublin');"
    },
    {
        "question_id": 1616,
        "answer_sql": "SELECT MAX( Points ) FROM `driver` WHERE `Country` = (SELECT `Country_Id` FROM `country` WHERE `Capital` = 'Dublin');"
    },
    {
        "question_id": 1617,
        "answer_sql": "SELECT AVG(driver.Age) FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID JOIN country ON driver.Country = country.Country_ID WHERE country.Official_native_language = 'English';"
    },
    {
        "question_id": 1618,
        "answer_sql": "SELECT AVG(driver.Age) FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID JOIN country ON driver.Country = country.Country_ID WHERE country.Official_native_language = 'English';"
    },
    {
        "question_id": 1619,
        "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d ON c.Country_Id = d.Country WHERE d.Points > 150;"
    },
    {
        "question_id": 1620,
        "answer_sql": "SELECT DISTINCT t.Team, c.Country FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID JOIN country c ON d.Country = c.Country_ID WHERE d.Points > 150;"
    },
    {
        "question_id": 1621,
        "answer_sql": "SELECT `country`.`Country`, `country`.`Capital` FROM `country` JOIN `driver` ON `country`.`Country_Id` = `driver`.`Country` WHERE `driver`.`Points` = ( SELECT MAX(`Points`) FROM `driver` )"
    },
    {
        "question_id": 1622,
        "answer_sql": "SELECT d.Country, c.Capital FROM driver d JOIN country c ON d.Country = c.Country_Id WHERE d.Points = (SELECT MAX(Points) FROM driver)"
    },
    {
        "question_id": 1623,
        "answer_sql": "SELECT t.Make, COUNT(d.Driver) as Number_of_Drivers FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make;"
    },
    {
        "question_id": 1624,
        "answer_sql": "SELECT t.Make, COUNT(d.Driver) as Driver_Count FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make"
    },
    {
        "question_id": 1625,
        "answer_sql": "SELECT Make FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1626,
        "answer_sql": "SELECT t.Make, COUNT(d.Driver) as Total_Drivers FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make ORDER BY Total_Drivers DESC LIMIT 1;"
    },
    {
        "question_id": 1627,
        "answer_sql": "SELECT t.Make FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID GROUP BY t.Make HAVING COUNT(td.Driver_ID) >= 3;"
    },
    {
        "question_id": 1628,
        "answer_sql": "SELECT d. Make FROM driver d JOIN team_driver td ON d. Driver_ID = td. Driver_ID GROUP BY d. Make HAVING COUNT(*) >= 3;"
    },
    {
        "question_id": 1629,
        "answer_sql": "SELECT t.Team FROM team t LEFT JOIN team_driver td ON t.Team_ID = td.Team_ID WHERE td.Driver_ID IS NULL;"
    },
    {
        "question_id": 1630,
        "answer_sql": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver);"
    },
    {
        "question_id": 1631,
        "answer_sql": ""
    },
    {
        "question_id": 1632,
        "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d1 ON c.Country_Id = d1.Country JOIN team_driver td1 ON d1.Driver_ID = td1.Driver_ID JOIN driver d2 ON c.Country_Id = d2.Country JOIN team_driver td2 ON d2.Driver_ID = td2.Driver_ID WHERE d1.Make = 'Dodge' AND d2.Make = 'Chevrolet'"
    },
    {
        "question_id": 1633,
        "answer_sql": "SELECT SUM( Points ) as Total_Points, AVG( Points ) as Average_Points FROM `driver`;"
    },
    {
        "question_id": 1634,
        "answer_sql": "SELECT d.Driver, SUM(d.Points) AS Total_Points, AVG(d.Points) AS Average_Points FROM driver d GROUP BY d.Driver;"
    },
    {
        "question_id": 1635,
        "answer_sql": "SELECT c.Country, COUNT(d.Driver_ID) as Number_of_Drivers FROM country c LEFT JOIN driver d ON c.Country_Id = d.Country WHERE d.Driver_ID IS NULL GROUP BY c.Country;"
    },
    {
        "question_id": 1636,
        "answer_sql": "SELECT country.Country FROM country LEFT JOIN driver ON country.Country_Id = driver.Country WHERE driver.Driver_ID IS NULL;"
    },
    {
        "question_id": 1637,
        "answer_sql": "SELECT `Manager`, `Sponsor` FROM `team` WHERE `Team_ID` IN ( SELECT `Team_ID` FROM `team_driver` GROUP BY `Team_ID` ORDER BY COUNT(`Driver_ID`) DESC LIMIT 1 )"
    },
    {
        "question_id": 1638,
        "answer_sql": "SELECT `team`.`Manager`, `team`.`Sponsor` FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` GROUP BY `team`.`Team_ID` ORDER BY COUNT(`team_driver`.`Driver_ID`) DESC LIMIT 1;"
    },
    {
        "question_id": 1639,
        "answer_sql": "SELECT Manager , Car_Owner FROM team WHERE Team_ID IN (SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING COUNT(*) >= 2);"
    },
    {
        "question_id": 1640,
        "answer_sql": "SELECT t.Manager, t.Car_Owner, t.Team FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID GROUP BY t.Team HAVING COUNT(td.Driver_ID) >= 2;"
    },
    {
        "question_id": 1641,
        "answer_sql": "SELECT COUNT(*) FROM institution;"
    },
    {
        "question_id": 1642,
        "answer_sql": "SELECT COUNT(*) FROM institution;"
    },
    {
        "question_id": 1643,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"
    },
    {
        "question_id": 1644,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name;"
    },
    {
        "question_id": 1645,
        "answer_sql": "SELECT institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID ORDER BY Championship.Joined ASC;"
    },
    {
        "question_id": 1646,
        "answer_sql": "SELECT institution.Name, institution.Founded FROM institution ORDER BY institution.Founded;"
    },
    {
        "question_id": 1647,
        "answer_sql": "SELECT institution.City, institution.Province FROM institution;"
    },
    {
        "question_id": 1648,
        "answer_sql": "SELECT City , Province FROM institution;"
    },
    {
        "question_id": 1649,
        "answer_sql": "SELECT MAX( Enrollment ) as Maximum_Enrollment, MIN( Enrollment ) as Minimum_Enrollment FROM institution;"
    },
    {
        "question_id": 1650,
        "answer_sql": "SELECT MAX(Enrollment) as Maximum_Enrollment, MIN(Enrollment) as Minimum_Enrollment FROM institution;"
    },
    {
        "question_id": 1651,
        "answer_sql": "SELECT institution.Affiliation FROM institution WHERE institution.City != 'Vancouver';"
    },
    {
        "question_id": 1652,
        "answer_sql": "SELECT institution.Affiliation FROM institution WHERE institution.City != 'Vancouver';"
    },
    {
        "question_id": 1653,
        "answer_sql": "SELECT Stadium FROM institution INNER JOIN Championship ON institution.Institution_ID = Championship.Institution_ID ORDER BY Capacity DESC;"
    },
    {
        "question_id": 1654,
        "answer_sql": "SELECT institution.Stadium FROM institution ORDER BY institution.Capacity DESC;"
    },
    {
        "question_id": 1655,
        "answer_sql": "SELECT Stadium FROM institution WHERE Enrollment = (SELECT MAX(Enrollment) FROM institution);"
    },
    {
        "question_id": 1656,
        "answer_sql": "SELECT Stadium FROM institution WHERE Enrollment = (SELECT MAX(Enrollment) FROM institution);"
    },
    {
        "question_id": 1657,
        "answer_sql": "SELECT Name , Nickname FROM institution JOIN Championship ON institution . Institution_ID = Championship . Institution_ID ;"
    },
    {
        "question_id": 1658,
        "answer_sql": "SELECT institution . Name , Championship . Nickname FROM institution JOIN Championship ON institution . Institution_ID = Championship . Institution_ID ;"
    },
    {
        "question_id": 1659,
        "answer_sql": ""
    },
    {
        "question_id": 1660,
        "answer_sql": ""
    },
    {
        "question_id": 1661,
        "answer_sql": "SELECT institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID GROUP BY institution.Name ORDER BY COUNT(Championship.Institution_ID) DESC;"
    },
    {
        "question_id": 1662,
        "answer_sql": "SELECT institution . Name FROM institution JOIN Championship ON institution . Institution_ID = Championship . Institution_ID ORDER BY Championship . Number_of_Championships DESC;"
    },
    {
        "question_id": 1663,
        "answer_sql": "SELECT Institution.Name FROM Institution JOIN Championship ON Institution.Institution_ID = Championship.Institution_ID GROUP BY Institution.Name HAVING COUNT(Championship.Institution_ID) >= 1;"
    },
    {
        "question_id": 1664,
        "answer_sql": "SELECT Institution.Name FROM Institution JOIN Championship ON Institution.Institution_ID = Championship.Institution_ID GROUP BY Institution.Name HAVING COUNT(Championship.Nickname) >= 1;"
    },
    {
        "question_id": 1665,
        "answer_sql": "SELECT SUM(Championship.Number_of_Championships) as Total_Championships FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID WHERE institution.Affiliation = 'Public'"
    },
    {
        "question_id": 1666,
        "answer_sql": "SELECT institution.Affiliation, COUNT(championship.Institution_ID) as Total_Championships FROM institution JOIN championship ON institution.Institution_ID = championship.Institution_ID WHERE institution.Affiliation = 'Public' GROUP BY institution.Affiliation;"
    },
    {
        "question_id": 1667,
        "answer_sql": "SELECT institution.Affiliation, COUNT(*) FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID GROUP BY institution.Affiliation;"
    },
    {
        "question_id": 1668,
        "answer_sql": "SELECT Affiliation , COUNT( Institution_ID ) as Number_of_Institutions FROM institution GROUP BY Affiliation ;"
    },
    {
        "question_id": 1669,
        "answer_sql": "SELECT institution.Affiliation FROM institution GROUP BY institution.Affiliation ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1670,
        "answer_sql": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1671,
        "answer_sql": "SELECT `institution`.`Name`, `institution`.`Founded` FROM `institution` WHERE `institution`.`Founded` > 1 AND `institution`.`Founded` IS NOT NULL ORDER BY `institution`.`Founded` DESC;"
    },
    {
        "question_id": 1672,
        "answer_sql": "SELECT Championship.Nickname, Championship.Number_of_Championships, institution.Founded FROM Championship JOIN institution ON Championship.Institution_ID = institution.Institution_ID WHERE Championship.Number_of_Championships > 1 AND institution.Founded > 0 GROUP BY Championship.Nickname ORDER BY Championship.Nickname;"
    },
    {
        "question_id": 1673,
        "answer_sql": "SELECT Championship.Nickname FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID ORDER BY institution.Capacity DESC;"
    },
    {
        "question_id": 1674,
        "answer_sql": "SELECT c.Nickname FROM institution i JOIN Championship c ON i.Institution_ID = c.Institution_ID WHERE i.Capacity = ( SELECT MAX(i2.Capacity) FROM institution i2 WHERE i.Name = i2.Name ) ORDER BY c.Nickname DESC;"
    },
    {
        "question_id": 1675,
        "answer_sql": "SELECT institution.City, SUM(institution.Enrollment) as Total_Enrollment FROM institution WHERE institution.City IN ('Vancouver', 'Calgary') GROUP BY institution.City"
    },
    {
        "question_id": 1676,
        "answer_sql": "SELECT institution.Enrollment FROM institution WHERE institution.City IN ('Vancouver', 'Calgary');"
    },
    {
        "question_id": 1677,
        "answer_sql": "SELECT `Province` FROM `institution` JOIN `Championship` ON `institution`.`Institution_ID` = `Championship`.`Institution_ID` WHERE `institution`.`Founded` < 1920 AND `Championship`.`Joined` > 1950;"
    },
    {
        "question_id": 1678,
        "answer_sql": "SELECT institution.Province FROM institution JOIN championship ON institution.Institution_ID = championship.Institution_ID WHERE (institution.Founded < 1920 AND championship.Joined < 1920) OR (institution.Founded > 1950 AND championship.Joined > 1950);"
    },
    {
        "question_id": 1679,
        "answer_sql": "SELECT DISTINCT `Province` FROM `institution`;"
    },
    {
        "question_id": 1680,
        "answer_sql": "SELECT institution.Province, COUNT(DISTINCT institution.Institution_ID) as Number_of_Institutions FROM institution GROUP BY institution.Province;"
    },
    {
        "question_id": 1681,
        "answer_sql": "SELECT Warehouses.Code, Warehouses.Location, Warehouses.Capacity FROM Warehouses;"
    },
    {
        "question_id": 1682,
        "answer_sql": "SELECT Warehouses.Code, Warehouses.Location, Warehouses.Capacity FROM Warehouses;"
    },
    {
        "question_id": 1683,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York';"
    },
    {
        "question_id": 1684,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York'"
    },
    {
        "question_id": 1685,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Value > 150;"
    },
    {
        "question_id": 1686,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Value > 150;"
    },
    {
        "question_id": 1687,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1688,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1689,
        "answer_sql": "SELECT AVG(Value), SUM(Value) FROM Boxes;"
    },
    {
        "question_id": 1690,
        "answer_sql": "SELECT AVG(Value) as Average_Value, SUM(Value) as Total_Value FROM Boxes;"
    },
    {
        "question_id": 1691,
        "answer_sql": "SELECT AVG(Capacity), SUM(Capacity) FROM Warehouses;"
    },
    {
        "question_id": 1692,
        "answer_sql": "SELECT AVG(Warehouses.Capacity) AS Average_Capacity, SUM(Warehouses.Capacity) AS Total_Capacity FROM Warehouses;"
    },
    {
        "question_id": 1693,
        "answer_sql": "SELECT Boxes.Contents, AVG(Boxes.Value), MAX(Boxes.Value) FROM Boxes GROUP BY Boxes.Contents;"
    },
    {
        "question_id": 1694,
        "answer_sql": "SELECT Contents, AVG(Value) as Average_Value, MAX(Value) as Maximum_Value FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1695,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value = ( SELECT MAX(Boxes.Value) FROM Boxes );"
    },
    {
        "question_id": 1696,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value = (SELECT MAX(Boxes.Value) FROM Boxes);"
    },
    {
        "question_id": 1697,
        "answer_sql": "SELECT AVG(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1698,
        "answer_sql": "SELECT AVG(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1699,
        "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes"
    },
    {
        "question_id": 1700,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code GROUP BY Boxes.Contents;"
    },
    {
        "question_id": 1701,
        "answer_sql": "SELECT COUNT(DISTINCT Contents) FROM Boxes;"
    },
    {
        "question_id": 1702,
        "answer_sql": "SELECT b.Contents, COUNT(*) as Count FROM Boxes b JOIN Warehouses w ON b.Warehouse = w.Code GROUP BY b.Contents ORDER BY Count DESC;"
    },
    {
        "question_id": 1703,
        "answer_sql": "SELECT DISTINCT Location FROM Warehouses;"
    },
    {
        "question_id": 1704,
        "answer_sql": "SELECT Location FROM Warehouses;"
    },
    {
        "question_id": 1705,
        "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1706,
        "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1707,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1708,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1709,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1710,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1711,
        "answer_sql": "SELECT Boxes.Contents, COUNT(*) as Frequency FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location <> 'New York' GROUP BY Boxes.Contents"
    },
    {
        "question_id": 1712,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York' AND Boxes.Contents IS NOT NULL;"
    },
    {
        "question_id": 1713,
        "answer_sql": "SELECT Warehouses.Location FROM Warehouses WHERE Warehouses.Code IN ( SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents != 'Scissors' )"
    },
    {
        "question_id": 1714,
        "answer_sql": "SELECT W.Location FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents = 'Rocks' AND B.Contents != 'Scissors'"
    },
    {
        "question_id": 1715,
        "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors') GROUP BY Warehouses.Code, Warehouses.Location"
    },
    {
        "question_id": 1716,
        "answer_sql": "SELECT DISTINCT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents IN ('Rocks', 'Scissors')"
    },
    {
        "question_id": 1717,
        "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors')"
    },
    {
        "question_id": 1718,
        "answer_sql": "SELECT W.Location FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents IN ('Rocks', 'Scissors')"
    },
    {
        "question_id": 1719,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code ORDER BY Boxes.Value;"
    },
    {
        "question_id": 1720,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code ORDER BY Boxes.Value;"
    },
    {
        "question_id": 1721,
        "answer_sql": "SELECT Code, Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes);"
    },
    {
        "question_id": 1722,
        "answer_sql": "SELECT Code, Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes);"
    },
    {
        "question_id": 1723,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > ( SELECT AVG(Boxes.Value) FROM Boxes ) GROUP BY Boxes.Contents HAVING COUNT(DISTINCT Boxes.Warehouse) = 1;"
    },
    {
        "question_id": 1724,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > ( SELECT AVG(Boxes.Value) FROM Boxes );"
    },
    {
        "question_id": 1725,
        "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes ORDER BY Boxes.Contents;"
    },
    {
        "question_id": 1726,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code ORDER BY Boxes.Contents;"
    },
    {
        "question_id": 1727,
        "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Contents = 'Rocks' AND Boxes.Value > ( SELECT MAX(Value) FROM Boxes WHERE Contents != 'Rocks' );"
    },
    {
        "question_id": 1728,
        "answer_sql": "SELECT Boxes.Code FROM Boxes WHERE Boxes.Contents = 'Rocks' AND Boxes.Value > ( SELECT MAX(Boxes2.Value) FROM Boxes Boxes2 WHERE Boxes2.Contents != 'Rocks' );"
    },
    {
        "question_id": 1729,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Value > ( SELECT MAX(Boxes2.Value) FROM Boxes Boxes2 JOIN Warehouses Warehouses2 ON Boxes2.Warehouse = Warehouses2.Code WHERE Boxes2.Contents = 'Scissors' );"
    },
    {
        "question_id": 1730,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value > ( SELECT MAX(Boxes2.Value) FROM Boxes AS Boxes2 WHERE Boxes2.Contents = 'Scissors' )"
    },
    {
        "question_id": 1731,
        "answer_sql": "SELECT SUM(Boxes.Value) AS TotalValue FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Capacity = ( SELECT MAX(Warehouses.Capacity) FROM Warehouses );"
    },
    {
        "question_id": 1732,
        "answer_sql": "SELECT Warehouses.Code, SUM(Boxes.Value) as TotalValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code ORDER BY SUM(Boxes.Value) DESC LIMIT 1;"
    },
    {
        "question_id": 1733,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150;"
    },
    {
        "question_id": 1734,
        "answer_sql": "SELECT B.Warehouse, W.Location, AVG(B.Value) as AverageValue FROM Boxes B JOIN Warehouses W ON B.Warehouse = W.Code GROUP BY B.Warehouse HAVING AVG(B.Value) > 150;"
    },
    {
        "question_id": 1735,
        "answer_sql": "SELECT Contents, SUM(Value) AS Total_Value, COUNT(Code) AS Number_of_Boxes FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1736,
        "answer_sql": "SELECT Boxes.Contents, SUM(Boxes.Value) as TotalValue, COUNT(Boxes.Code) as NumberOfBoxes FROM Boxes GROUP BY Boxes.Contents;"
    },
    {
        "question_id": 1737,
        "answer_sql": "SELECT Warehouses.Location, SUM(Boxes.Value) AS Total_Capacity, AVG(Boxes.Value) AS Average_Capacity, MAX(Boxes.Value) AS Maximum_Capacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"
    },
    {
        "question_id": 1738,
        "answer_sql": "SELECT Warehouses.Location, SUM(Boxes.Value) AS Total_Value, AVG(Boxes.Value) AS Average_Value, MAX(Boxes.Value) AS Maximum_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"
    },
    {
        "question_id": 1739,
        "answer_sql": "SELECT SUM(Warehouses.Capacity) FROM Warehouses;"
    },
    {
        "question_id": 1740,
        "answer_sql": "SELECT SUM(Capacity) FROM Warehouses;"
    },
    {
        "question_id": 1741,
        "answer_sql": "SELECT b.Contents, w.Location, w.Capacity FROM Boxes b JOIN Warehouses w ON b.Warehouse = w.Code WHERE b.Value = ( SELECT MAX(b2.Value) FROM Boxes b2 WHERE b2.Warehouse = b.Warehouse )"
    },
    {
        "question_id": 1742,
        "answer_sql": "SELECT b.Contents, w.Location, w.Code, b.Value FROM Boxes b JOIN Warehouses w ON b.Warehouse = w.Code WHERE b.Value = (SELECT MAX(b2.Value) FROM Boxes b2 WHERE b2.Warehouse = b.Warehouse)"
    },
    {
        "question_id": 1743,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as Number_of_Boxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1744,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1745,
        "answer_sql": "SELECT COUNT(DISTINCT Warehouses.Location) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Contents = 'Rocks';"
    },
    {
        "question_id": 1746,
        "answer_sql": "SELECT COUNT(DISTINCT Warehouses.Code) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Contents = 'Rocks';"
    },
    {
        "question_id": 1747,
        "answer_sql": "SELECT Boxes.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1748,
        "answer_sql": "SELECT Boxes.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1749,
        "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'Chicago';"
    },
    {
        "question_id": 1750,
        "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'Chicago';"
    },
    {
        "question_id": 1751,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1752,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1753,
        "answer_sql": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) as 'Number of distinct types of contents' FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1754,
        "answer_sql": "SELECT b.Warehouse, COUNT(DISTINCT b.Contents) as 'Number of different types of contents' FROM Boxes b GROUP BY b.Warehouse;"
    },
    {
        "question_id": 1755,
        "answer_sql": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Value > (SELECT MAX(Capacity) FROM Warehouses)"
    },
    {
        "question_id": 1756,
        "answer_sql": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING COUNT(Boxes.Code) > Warehouses.Capacity;"
    },
    {
        "question_id": 1757,
        "answer_sql": "SELECT SUM(B.Value) FROM Boxes B JOIN Warehouses W ON B.Warehouse = W.Code WHERE W.Location <> 'Chicago';"
    },
    {
        "question_id": 1758,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location <> 'Chicago'"
    },
    {
        "question_id": 1759,
        "answer_sql": "SELECT university.University_Name , university.City , university.State FROM university ORDER BY university.University_Name ASC;"
    },
    {
        "question_id": 1760,
        "answer_sql": "SELECT University_Name , City , State FROM university ORDER BY University_Name ;"
    },
    {
        "question_id": 1761,
        "answer_sql": "SELECT COUNT(*) FROM university WHERE State IN ('Illinois', 'Ohio');"
    },
    {
        "question_id": 1762,
        "answer_sql": "SELECT COUNT(*) FROM university WHERE City IN ('Illinois', 'Ohio');"
    },
    {
        "question_id": 1763,
        "answer_sql": "SELECT MAX(university.Enrollment) AS Maximum_Enrollment, AVG(university.Enrollment) AS Average_Enrollment, MIN(university.Enrollment) AS Minimum_Enrollment FROM university;"
    },
    {
        "question_id": 1764,
        "answer_sql": "SELECT MAX(university.Enrollment) AS Maximum_Enrollment, AVG(university.Enrollment) AS Average_Enrollment, MIN(university.Enrollment) AS Minimum_Enrollment FROM university;"
    },
    {
        "question_id": 1765,
        "answer_sql": "SELECT University.University_Name, Major.Major_Name FROM University JOIN major_ranking ON University.University_ID = major_ranking.University_ID JOIN Major ON major_ranking.Major_ID = Major.Major_ID WHERE University.Enrollment > ( SELECT AVG(Enrollment) FROM University )"
    },
    {
        "question_id": 1766,
        "answer_sql": "SELECT University_Name, Team_Name FROM university u JOIN major_ranking m ON u.University_ID = m.University_ID WHERE m.Rank = (SELECT AVG(Rank) FROM major_ranking) AND u.Enrollment > (SELECT AVG(Enrollment) FROM university)"
    },
    {
        "question_id": 1767,
        "answer_sql": "SELECT DISTINCT university.Home_Conference FROM university;"
    },
    {
        "question_id": 1768,
        "answer_sql": "SELECT DISTINCT Home_Conference FROM university;"
    },
    {
        "question_id": 1769,
        "answer_sql": "SELECT Home_Conference, COUNT(*) FROM university GROUP BY Home_Conference;"
    },
    {
        "question_id": 1770,
        "answer_sql": "SELECT u. Home_Conference , COUNT(DISTINCT u. University_ID ) as Number_of_Universities FROM university u JOIN major_ranking m ON u. University_ID = m. University_ID GROUP BY u. Home_Conference ORDER BY Number_of_Universities DESC;"
    },
    {
        "question_id": 1771,
        "answer_sql": "SELECT State FROM university GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1772,
        "answer_sql": "SELECT State FROM university GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1773,
        "answer_sql": "SELECT Home_Conference FROM university WHERE Enrollment > 2000 GROUP BY Home_Conference HAVING COUNT( University_ID ) > 1;"
    },
    {
        "question_id": 1774,
        "answer_sql": "SELECT U.Team_Name AS University, U.Home_Conference AS Home_Conference FROM university U WHERE U.Enrollment > 2000"
    },
    {
        "question_id": 1775,
        "answer_sql": "SELECT u.Home_Conference, COUNT(u.Enrollment) as Total_Enrollment FROM university u GROUP BY u.Home_Conference ORDER BY Total_Enrollment ASC LIMIT 1;"
    },
    {
        "question_id": 1776,
        "answer_sql": "SELECT university.Home_Conference, COUNT(university.Enrollment) as Enrollment_Count FROM university WHERE university.Enrollment = (SELECT MIN(Enrollment) FROM university) GROUP BY university.Home_Conference ORDER BY Enrollment_Count ASC;"
    },
    {
        "question_id": 1777,
        "answer_sql": "SELECT major.Major_Name, major.Major_Code FROM major JOIN major_ranking ON major.Major_ID = major_ranking.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE university.University_ID = 1 ORDER BY major.Major_Code;"
    },
    {
        "question_id": 1778,
        "answer_sql": "SELECT Major_Name , Major_Code FROM major ORDER BY Major_Code ;"
    },
    {
        "question_id": 1779,
        "answer_sql": "SELECT m.Major_Name, mr.Rank FROM major m JOIN major_ranking mr ON m.Major_ID = mr.Major_ID WHERE mr.University_ID IN (SELECT University_ID FROM university WHERE University_Name = 'Augustana College') ORDER BY mr.Rank ASC;"
    },
    {
        "question_id": 1780,
        "answer_sql": "SELECT o.Rank, m.Major_Name FROM overall_ranking o JOIN major m ON o.University_ID = m.Major_ID WHERE o.University_ID = (SELECT University_ID FROM university WHERE University_Name = 'Augustana College') ORDER BY o.Rank;"
    },
    {
        "question_id": 1781,
        "answer_sql": "SELECT University.University_Name, University.City, University.State FROM University JOIN major_ranking ON University.University_ID = major_ranking.University_ID JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = 'Accounting' AND major_ranking.Rank = 1;"
    },
    {
        "question_id": 1782,
        "answer_sql": "SELECT University_Name, City, State FROM university JOIN major_ranking ON university.University_ID = major_ranking.University_ID JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = 'Accounting' ORDER BY university.University_ID LIMIT 1;"
    },
    {
        "question_id": 1783,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking m ON u.University_ID = m.University_ID WHERE m.Rank = 1 GROUP BY u.University_Name ORDER BY COUNT(DISTINCT m.Major_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 1784,
        "answer_sql": "SELECT university . University_Name FROM university JOIN major_ranking ON university . University_ID = major_ranking . University_ID WHERE major_ranking . Rank = 1 ORDER BY university . University_Name ASC LIMIT 1;"
    },
    {
        "question_id": 1785,
        "answer_sql": "SELECT University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Major_ID IS NULL AND Rank = 1)"
    },
    {
        "question_id": 1786,
        "answer_sql": "SELECT DISTINCT university.University_Name FROM university JOIN major_ranking ON university.University_ID = major_ranking.University_ID WHERE major_ranking.Rank = 1;"
    },
    {
        "question_id": 1787,
        "answer_sql": "SELECT university . University_Name FROM university JOIN major_ranking ON university . University_ID = major_ranking . University_ID JOIN major ON major_ranking . Major_ID = major . Major_ID WHERE major . Major_Name = 'Accounting' OR major . Major_Name = 'Urban Education' GROUP BY university . University_Name ;"
    },
    {
        "question_id": 1788,
        "answer_sql": "SELECT DISTINCT university . University_Name FROM university JOIN major_ranking ON university . University_ID = major_ranking . University_ID JOIN major ON major_ranking . Major_ID = major . Major_ID WHERE major . Major_Name IN ('Accounting', 'Urban Education') GROUP BY university . University_Name HAVING COUNT(DISTINCT major . Major_Name ) = 2"
    },
    {
        "question_id": 1789,
        "answer_sql": "SELECT u.University_Name, ur.Rank FROM university u JOIN overall_ranking ur ON u.University_ID = ur.University_ID WHERE u.State = 'Wisconsin';"
    },
    {
        "question_id": 1790,
        "answer_sql": "SELECT university.University_Name, overall_ranking.Rank FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE university.State = 'Wisconsin';"
    },
    {
        "question_id": 1791,
        "answer_sql": "SELECT `university`.`University_Name` FROM `university` JOIN `overall_ranking` ON `university`.`University_ID` = `overall_ranking`.`University_ID` WHERE `overall_ranking`.`Research_point` = (SELECT MAX(`Research_point`) FROM `overall_ranking`) LIMIT 1;"
    },
    {
        "question_id": 1792,
        "answer_sql": "SELECT university . University_Name FROM university JOIN overall_ranking ON university . University_ID = overall_ranking . University_ID WHERE overall_ranking . Research_point = ( SELECT MAX( Research_point ) FROM overall_ranking ) ;"
    },
    {
        "question_id": 1793,
        "answer_sql": "SELECT university.University_Name, overall_ranking.Reputation_point FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID ORDER BY overall_ranking.Reputation_point ASC;"
    },
    {
        "question_id": 1794,
        "answer_sql": "SELECT university.University_Name FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID ORDER BY overall_ranking.Reputation_point ASC;"
    },
    {
        "question_id": 1795,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major m ON u.University_ID = m.Major_ID JOIN major_ranking mr ON u.University_ID = mr.University_ID AND m.Major_ID = mr.Major_ID WHERE mr.Rank <= 3 GROUP BY u.University_Name HAVING COUNT(DISTINCT m.Major_ID) = 1;"
    },
    {
        "question_id": 1796,
        "answer_sql": "SELECT DISTINCT major.Major_Name, university.University_Name FROM major JOIN major_ranking ON major.Major_ID = major_ranking.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Rank <= 3 AND major.Major_Name = 'Accounting';"
    },
    {
        "question_id": 1797,
        "answer_sql": "SELECT SUM(university.Enrollment) as Total_Enrollment FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Rank <= 5;"
    },
    {
        "question_id": 1798,
        "answer_sql": "SELECT SUM(university.Enrollment) FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Rank <= 5;"
    },
    {
        "question_id": 1799,
        "answer_sql": "SELECT University_Name , Citation_point FROM university JOIN overall_ranking ON university . University_ID = overall_ranking . University_ID WHERE Reputation_point > 3 ORDER BY Citation_point DESC;"
    },
    {
        "question_id": 1800,
        "answer_sql": "SELECT university.University_Name, overall_ranking.Citation_point FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Reputation_point IN ( SELECT MAX(Reputation_point) FROM overall_ranking GROUP BY overall_ranking.University_ID ) ORDER BY overall_ranking.Citation_point DESC;"
    },
    {
        "question_id": 1801,
        "answer_sql": "SELECT State FROM university WHERE University_ID IN ( SELECT University_ID FROM university WHERE Enrollment < 3000 ) GROUP BY State HAVING COUNT(DISTINCT University_ID) > 2;"
    },
    {
        "question_id": 1802,
        "answer_sql": "SELECT DISTINCT State FROM university WHERE Enrollment < 3000 GROUP BY State HAVING COUNT(University_ID) > 2;"
    },
    {
        "question_id": 1803,
        "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Movie IS NULL;"
    },
    {
        "question_id": 1804,
        "answer_sql": "SELECT M.Title FROM Movies M LEFT JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Movie IS NULL;"
    },
    {
        "question_id": 1805,
        "answer_sql": "SELECT Movies.Title FROM Movies WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1806,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1807,
        "answer_sql": "SELECT Movies.Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE MovieTheaters.Name = 'Odeon';"
    },
    {
        "question_id": 1808,
        "answer_sql": ""
    },
    {
        "question_id": 1809,
        "answer_sql": "SELECT M.Title, MT.Name FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie;"
    },
    {
        "question_id": 1810,
        "answer_sql": "SELECT M.Title, MT.Name FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie;"
    },
    {
        "question_id": 1811,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1812,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1813,
        "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"
    },
    {
        "question_id": 1814,
        "answer_sql": "SELECT COUNT(*) FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies);"
    },
    {
        "question_id": 1815,
        "answer_sql": "SELECT COUNT(DISTINCT Movies.Code) FROM MovieTheaters INNER JOIN Movies ON MovieTheaters.Movie = Movies.Code;"
    },
    {
        "question_id": 1816,
        "answer_sql": "SELECT COUNT(DISTINCT Movies.Code) FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie;"
    },
    {
        "question_id": 1817,
        "answer_sql": "SELECT COUNT(DISTINCT MovieTheaters.Code) FROM MovieTheaters;"
    },
    {
        "question_id": 1818,
        "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"
    },
    {
        "question_id": 1819,
        "answer_sql": "SELECT Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Title LIKE '%Citizen%';"
    },
    {
        "question_id": 1820,
        "answer_sql": "SELECT Rating FROM Movies WHERE Title LIKE '%Citizen%';"
    },
    {
        "question_id": 1821,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters WHERE MovieTheaters.Movie IN ( SELECT Movies.Code FROM Movies WHERE Movies.Rating IN ('G', 'PG') );"
    },
    {
        "question_id": 1822,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters WHERE MovieTheaters.Movie IN (SELECT Code FROM Movies WHERE Rating IN ('G', 'PG'));"
    },
    {
        "question_id": 1823,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name IN ('Odeon', 'Imperial')"
    },
    {
        "question_id": 1824,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon' OR MovieTheaters.Name = 'Imperial'"
    },
    {
        "question_id": 1825,
        "answer_sql": ""
    },
    {
        "question_id": 1826,
        "answer_sql": "SELECT Movies.Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE MovieTheaters.Name IN ('Odeon', 'Imperial')"
    },
    {
        "question_id": 1827,
        "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name != 'Odeon'"
    },
    {
        "question_id": 1828,
        "answer_sql": "SELECT M.Title FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Name != 'Odeon'"
    },
    {
        "question_id": 1829,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Title;"
    },
    {
        "question_id": 1830,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Title;"
    },
    {
        "question_id": 1831,
        "answer_sql": "SELECT Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Rating;"
    },
    {
        "question_id": 1832,
        "answer_sql": "SELECT Movies.Title, Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Rating;"
    },
    {
        "question_id": 1833,
        "answer_sql": "SELECT MovieTheaters.Name, COUNT(Movies.Code) as NumberOfMovies FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Name ORDER BY NumberOfMovies DESC LIMIT 1;"
    },
    {
        "question_id": 1834,
        "answer_sql": "SELECT MovieTheaters.Name AS Theater_Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Name ORDER BY COUNT(Movies.Code) DESC LIMIT 1;"
    },
    {
        "question_id": 1835,
        "answer_sql": "SELECT Movies.Title, COUNT(MovieTheaters.Code) as NumberOfTheaters FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Title ORDER BY NumberOfTheaters DESC LIMIT 1;"
    },
    {
        "question_id": 1836,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY MovieTheaters.Movie ORDER BY COUNT(MovieTheaters.Movie) DESC LIMIT 1;"
    },
    {
        "question_id": 1837,
        "answer_sql": "SELECT Movies.Rating, COUNT(Movies.Code) as Number_of_Movies FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Rating;"
    },
    {
        "question_id": 1838,
        "answer_sql": "SELECT Movies.Rating, COUNT(Movies.Code) as NumberOfMovies FROM Movies GROUP BY Movies.Rating;"
    },
    {
        "question_id": 1839,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1840,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1841,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters GROUP BY MovieTheaters.Name HAVING COUNT(MovieTheaters.Movie) >= 1;"
    },
    {
        "question_id": 1842,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters WHERE MovieTheaters.Movie IN (SELECT Code FROM Movies);"
    },
    {
        "question_id": 1843,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters WHERE MovieTheaters.Movie NOT IN ( SELECT Movies.Code FROM Movies WHERE Movies.Rating IS NOT NULL )"
    },
    {
        "question_id": 1844,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters WHERE MovieTheaters.Movie IS NULL;"
    },
    {
        "question_id": 1845,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1846,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1847,
        "answer_sql": "SELECT Movies.Title FROM Movies;"
    },
    {
        "question_id": 1848,
        "answer_sql": "SELECT Title FROM Movies;"
    },
    {
        "question_id": 1849,
        "answer_sql": "SELECT DISTINCT Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie"
    },
    {
        "question_id": 1850,
        "answer_sql": "SELECT DISTINCT Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie"
    },
    {
        "question_id": 1851,
        "answer_sql": "SELECT Movies.Code, Movies.Title, Movies.Rating, MovieTheaters.Name, MovieTheaters.Movie FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Rating IS NULL;"
    },
    {
        "question_id": 1852,
        "answer_sql": "SELECT Movies.Code, Movies.Title, Movies.Rating, MovieTheaters.Name, MovieTheaters.Movie FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Rating IS NULL;"
    },
    {
        "question_id": 1853,
        "answer_sql": "SELECT M.Title FROM Movies M LEFT JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Code IS NULL;"
    },
    {
        "question_id": 1854,
        "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Code IS NULL;"
    },
    {
        "question_id": 1855,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient WHERE Package.Weight = ( SELECT MAX(Package.Weight) FROM Package );"
    },
    {
        "question_id": 1856,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Package.Recipient = Client.AccountNumber WHERE Package.Weight = ( SELECT MAX(Package.Weight) FROM Package );"
    },
    {
        "question_id": 1857,
        "answer_sql": "SELECT SUM(Weight) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1858,
        "answer_sql": "SELECT SUM(Weight) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1859,
        "answer_sql": "SELECT E.Position FROM Employee E WHERE E.Name = 'Amy Wong';"
    },
    {
        "question_id": 1860,
        "answer_sql": "SELECT Position FROM Employee WHERE Name = 'Amy Wong';"
    },
    {
        "question_id": 1861,
        "answer_sql": "SELECT Employee.Name, Employee.Position, Employee.Salary FROM Employee WHERE Employee.EmployeeID = ( SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela' );"
    },
    {
        "question_id": 1862,
        "answer_sql": "SELECT Salary, Position FROM Employee WHERE Name = 'Turanga Leela';"
    },
    {
        "question_id": 1863,
        "answer_sql": "SELECT AVG(Employee.Salary) FROM Employee WHERE Position = 'Intern';"
    },
    {
        "question_id": 1864,
        "answer_sql": "SELECT AVG(Employee.Salary) FROM Employee WHERE Employee.Position = 'Intern';"
    },
    {
        "question_id": 1865,
        "answer_sql": ""
    },
    {
        "question_id": 1866,
        "answer_sql": ""
    },
    {
        "question_id": 1867,
        "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1868,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1869,
        "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1870,
        "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1871,
        "answer_sql": ""
    },
    {
        "question_id": 1872,
        "answer_sql": "SELECT DISTINCT Package.PackageNumber FROM Package JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1873,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1874,
        "answer_sql": "SELECT COUNT(*) FROM Package JOIN Client ON Package.Sender = Client.AccountNumber JOIN Employee ON Package.Recipient = Employee.EmployeeID JOIN Shipment ON Package.Shipment = Shipment.ShipmentID WHERE Client.Name = 'Ogden Wernstrom' AND Employee.Name = 'Leo Wong';"
    },
    {
        "question_id": 1875,
        "answer_sql": "SELECT Package.Contents FROM Package JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'John Zoidfarb';"
    },
    {
        "question_id": 1876,
        "answer_sql": "SELECT Package.Contents FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'John Zoidfarb';"
    },
    {
        "question_id": 1877,
        "answer_sql": ""
    },
    {
        "question_id": 1878,
        "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name LIKE '%John%' ORDER BY Package.Weight DESC LIMIT 1;"
    },
    {
        "question_id": 1879,
        "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID JOIN Has_Clearance ON Shipment.Manager = Has_Clearance.Employee WHERE Has_Clearance.Level = ( SELECT MAX(Level) FROM Has_Clearance WHERE Employee = 1 ) ORDER BY Package.Weight ASC LIMIT 3;"
    },
    {
        "question_id": 1880,
        "answer_sql": ""
    },
    {
        "question_id": 1881,
        "answer_sql": "SELECT Client.Name, COUNT(Package.Shipment) as Number_of_Packages FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Package.Recipient ORDER BY Number_of_Packages DESC LIMIT 1;"
    },
    {
        "question_id": 1882,
        "answer_sql": "SELECT Client.Name, COUNT(Package.Shipment) as Number_of_Packages FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name ORDER BY Number_of_Packages DESC LIMIT 1;"
    },
    {
        "question_id": 1883,
        "answer_sql": "SELECT Client.Name, COUNT(Package.Shipment) as Number_of_Packages FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Package.Recipient ORDER BY COUNT(Package.Shipment) ASC LIMIT 1;"
    },
    {
        "question_id": 1884,
        "answer_sql": "SELECT MIN(Package.PackageNumber), Client.Name FROM Package JOIN Client ON Package.Recipient = Client.AccountNumber GROUP BY Client.Name;"
    },
    {
        "question_id": 1885,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Sender WHERE Package.Recipient IN ( SELECT Client.AccountNumber FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Client.Name HAVING COUNT(DISTINCT Package.Shipment) > 1 )"
    },
    {
        "question_id": 1886,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name HAVING COUNT(Package.Sender) > 1;"
    },
    {
        "question_id": 1887,
        "answer_sql": "SELECT Planet.Coordinates FROM Planet WHERE Planet.Name = 'Mars';"
    },
    {
        "question_id": 1888,
        "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';"
    },
    {
        "question_id": 1889,
        "answer_sql": "SELECT P.Name, P.Coordinates FROM Planet P ORDER BY P.Name;"
    },
    {
        "question_id": 1890,
        "answer_sql": "SELECT Name, Coordinates FROM Planet ORDER BY Name ASC;"
    },
    {
        "question_id": 1891,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Phillip J. Fry');"
    },
    {
        "question_id": 1892,
        "answer_sql": ""
    },
    {
        "question_id": 1893,
        "answer_sql": "SELECT Shipment.Date FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment ORDER BY Shipment.Date;"
    },
    {
        "question_id": 1894,
        "answer_sql": "SELECT Date FROM Shipment;"
    },
    {
        "question_id": 1895,
        "answer_sql": "SELECT Shipment.ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';"
    },
    {
        "question_id": 1896,
        "answer_sql": "SELECT Shipment.ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';"
    },
    {
        "question_id": 1897,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"
    },
    {
        "question_id": 1898,
        "answer_sql": "SELECT Shipment.ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'Turanga Leela' AND Shipment.Planet = 3;"
    },
    {
        "question_id": 1899,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager IN (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"
    },
    {
        "question_id": 1900,
        "answer_sql": "SELECT Shipment.ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'Turanga Leela' AND Shipment.Planet = 3;"
    },
    {
        "question_id": 1901,
        "answer_sql": "SELECT P.Name, COUNT(S.ShipmentID) as Total_Shipments FROM Planet P JOIN Shipment S ON S.Planet = P.PlanetID GROUP BY P.PlanetID, P.Name;"
    },
    {
        "question_id": 1902,
        "answer_sql": "SELECT Planet.Name, COUNT(Shipment.ShipmentID) AS Total_Shipments FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Planet.Name;"
    },
    {
        "question_id": 1903,
        "answer_sql": "SELECT Planet.Name FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet GROUP BY Planet.Name ORDER BY COUNT(Shipment.ShipmentID) DESC LIMIT 1;"
    },
    {
        "question_id": 1904,
        "answer_sql": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.Name ORDER BY COUNT(S.ShipmentID) DESC LIMIT 1;"
    },
    {
        "question_id": 1905,
        "answer_sql": "SELECT E.Name, COUNT(S.ShipmentID) AS Number_of_Shipments FROM Employee E JOIN Shipment S ON E.EmployeeID = S.Manager GROUP BY E.Name;"
    },
    {
        "question_id": 1906,
        "answer_sql": "SELECT Manager, COUNT(*) as Number_of_Shipments FROM Shipment GROUP BY Manager;"
    },
    {
        "question_id": 1907,
        "answer_sql": "SELECT SUM(Weight) as TotalWeight FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID WHERE Shipment.Planet = 3;"
    },
    {
        "question_id": 1908,
        "answer_sql": "SELECT SUM(Package.Weight) FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.PlanetID = 3;"
    },
    {
        "question_id": 1909,
        "answer_sql": ""
    },
    {
        "question_id": 1910,
        "answer_sql": ""
    },
    {
        "question_id": 1911,
        "answer_sql": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet JOIN Package Pkg ON S.ShipmentID = Pkg.Shipment WHERE Pkg.Weight > 30 GROUP BY P.Name"
    },
    {
        "question_id": 1912,
        "answer_sql": "SELECT P.Name FROM Planet P JOIN Shipment S ON S.Planet = P.PlanetID JOIN Package Pkg ON Pkg.Shipment = S.ShipmentID GROUP BY P.Name HAVING SUM(Pkg.Weight) > 30;"
    },
    {
        "question_id": 1913,
        "answer_sql": ""
    },
    {
        "question_id": 1914,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan') AND Shipment = (SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan'));"
    },
    {
        "question_id": 1915,
        "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Omicron Persei 8' OR Package.Sender = (SELECT Client.AccountNumber FROM Client WHERE Name = 'Zapp Brannigan');"
    },
    {
        "question_id": 1916,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan') OR Shipment = (SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan'));"
    },
    {
        "question_id": 1917,
        "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package WHERE Package.Weight BETWEEN 10 AND 30;"
    },
    {
        "question_id": 1918,
        "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package WHERE Package.Weight BETWEEN 10 AND 30;"
    },
    {
        "question_id": 1919,
        "answer_sql": "SELECT Name FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = ( SELECT PlanetID FROM Planet WHERE Name = 'Mars' ) );"
    },
    {
        "question_id": 1920,
        "answer_sql": "SELECT e.Name FROM Employee e JOIN Has_Clearance hc ON e.EmployeeID = hc.Employee WHERE hc.Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars')"
    },
    {
        "question_id": 1921,
        "answer_sql": "SELECT Employee.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee JOIN Planet ON Has_Clearance.Planet = Planet.PlanetID WHERE Planet.Name = 'Omega III';"
    },
    {
        "question_id": 1922,
        "answer_sql": "SELECT e.Name FROM Employee e JOIN Has_Clearance hc ON e.EmployeeID = hc.Employee JOIN Planet p ON hc.Planet = p.PlanetID WHERE p.Name = 'Omega III';"
    },
    {
        "question_id": 1923,
        "answer_sql": "SELECT P.Name FROM Planet P JOIN Has_Clearance H ON P.PlanetID = H.Planet GROUP BY P.Name HAVING COUNT(H.Employee) = 1;"
    },
    {
        "question_id": 1924,
        "answer_sql": ""
    },
    {
        "question_id": 1925,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1926,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1927,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary > ( SELECT AVG(E1.Salary) FROM Employee E1 );"
    },
    {
        "question_id": 1928,
        "answer_sql": "SELECT Name FROM Employee WHERE Salary > (SELECT AVG(Salary) FROM Employee) OR Salary > 5000;"
    },
    {
        "question_id": 1929,
        "answer_sql": "SELECT COUNT(*) FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee WHERE Has_Clearance.Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars')"
    },
    {
        "question_id": 1930,
        "answer_sql": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = ( SELECT PlanetID FROM Planet WHERE Name = 'Mars' ) );"
    },
    {
        "question_id": 1931,
        "answer_sql": "SELECT COUNT(*) FROM game;"
    },
    {
        "question_id": 1932,
        "answer_sql": "SELECT COUNT(*) FROM game;"
    },
    {
        "question_id": 1933,
        "answer_sql": "SELECT Title, Developers FROM game ORDER BY Units_sold_Millions DESC;"
    },
    {
        "question_id": 1934,
        "answer_sql": "SELECT game.Title, game.Developers, game.Units_sold_Millions, platform.Platform_name, platform.Download_rank, platform.Market_district, player.Player_name, player.Position, player.Rank_of_the_year, player.College FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID JOIN platform ON game.Platform_ID = platform.Platform_ID ORDER BY game.Units_sold_Millions DESC;"
    },
    {
        "question_id": 1935,
        "answer_sql": "SELECT AVG(Units_sold_Millions) FROM game WHERE Developers != 'Nintendo';"
    },
    {
        "question_id": 1936,
        "answer_sql": "SELECT AVG(Units_sold_Millions) FROM game WHERE Developers != 'Nintendo';"
    },
    {
        "question_id": 1937,
        "answer_sql": "SELECT platform.Platform_name, platform.Market_district FROM platform JOIN game ON platform.Platform_ID = game.Platform_ID;"
    },
    {
        "question_id": 1938,
        "answer_sql": "SELECT platform.Platform_name, platform.Market_district FROM platform"
    },
    {
        "question_id": 1939,
        "answer_sql": "SELECT platform.Platform_name, platform.Platform_ID FROM platform WHERE platform.Download_rank = 1;"
    },
    {
        "question_id": 1940,
        "answer_sql": "SELECT platform.Platform_ID, platform.Platform_name FROM platform WHERE platform.Download_rank = 1;"
    },
    {
        "question_id": 1941,
        "answer_sql": "SELECT MIN(player.Rank_of_the_year) as Min_Rank, MAX(player.Rank_of_the_year) as Max_Rank FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = 'Call of Duty: Modern Warfare';"
    },
    {
        "question_id": 1942,
        "answer_sql": "SELECT MAX(Rank_of_the_year) as Max_Rank, MIN(Rank_of_the_year) as Min_Rank FROM player;"
    },
    {
        "question_id": 1943,
        "answer_sql": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year < 3;"
    },
    {
        "question_id": 1944,
        "answer_sql": "SELECT COUNT(*) FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE player.Rank_of_the_year <= 3 AND game_player.If_active = True;"
    },
    {
        "question_id": 1945,
        "answer_sql": "SELECT player.Player_name FROM player ORDER BY player.Player_name ASC;"
    },
    {
        "question_id": 1946,
        "answer_sql": "SELECT g.Title, p.Player_name FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID ORDER BY p.Player_name ASC;"
    },
    {
        "question_id": 1947,
        "answer_sql": ""
    },
    {
        "question_id": 1948,
        "answer_sql": "SELECT player.Player_name, player.College FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Release_Date IS NOT NULL ORDER BY game.Units_sold_Millions DESC, player.Rank_of_the_year DESC;"
    },
    {
        "question_id": 1949,
        "answer_sql": "SELECT player.Player_name, player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = 'Super Mario World';"
    },
    {
        "question_id": 1950,
        "answer_sql": "SELECT player.Player_name, player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = 'Super Mario World';"
    },
    {
        "question_id": 1951,
        "answer_sql": ""
    },
    {
        "question_id": 1952,
        "answer_sql": ""
    },
    {
        "question_id": 1953,
        "answer_sql": "SELECT AVG(g. Units_sold_Millions ) as Average_Units_Sold FROM game g JOIN game_player gp ON g. Game_ID = gp. Game_ID JOIN player p ON gp. Player_ID = p. Player_ID WHERE p. Position = 'Guard';"
    },
    {
        "question_id": 1954,
        "answer_sql": "SELECT AVG(g.Units_sold_Millions) FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position = 'Guard'"
    },
    {
        "question_id": 1955,
        "answer_sql": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID;"
    },
    {
        "question_id": 1956,
        "answer_sql": "SELECT Title, Platform_name FROM game, platform WHERE game.Platform_ID = platform.Platform_ID;"
    },
    {
        "question_id": 1957,
        "answer_sql": "SELECT game.Title FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID WHERE platform.Market_district IN ('Asia', 'USA')"
    },
    {
        "question_id": 1958,
        "answer_sql": "SELECT game.Title FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID WHERE platform.Market_district IN ('Asia', 'USA')"
    },
    {
        "question_id": 1959,
        "answer_sql": "SELECT game.Franchise, COUNT(*) FROM game GROUP BY game.Franchise;"
    },
    {
        "question_id": 1960,
        "answer_sql": "SELECT g.Franchise, COUNT(g.Game_ID) as Game_Count FROM game g GROUP BY g.Franchise;"
    },
    {
        "question_id": 1961,
        "answer_sql": "SELECT game.Franchise FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID GROUP BY game.Franchise ORDER BY COUNT(game.Franchise) DESC LIMIT 1;"
    },
    {
        "question_id": 1962,
        "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1963,
        "answer_sql": "SELECT g.Franchise FROM game g GROUP BY g.Franchise HAVING COUNT(g.Game_ID) >= 2;"
    },
    {
        "question_id": 1964,
        "answer_sql": "SELECT game.Franchise FROM game GROUP BY game.Franchise HAVING COUNT(game.Franchise) > 1;"
    },
    {
        "question_id": 1965,
        "answer_sql": "SELECT player.Player_name FROM player LEFT JOIN game_player ON player.Player_ID = game_player.Player_ID WHERE game_player.Game_ID IS NULL;"
    },
    {
        "question_id": 1966,
        "answer_sql": "SELECT player.Player_name FROM player LEFT JOIN game_player ON player.Player_ID = game_player.Player_ID WHERE game_player.Game_ID IS NULL;"
    },
    {
        "question_id": 1967,
        "answer_sql": ""
    },
    {
        "question_id": 1968,
        "answer_sql": "SELECT game.Title FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College IN ('Oklahoma', 'Auburn')"
    },
    {
        "question_id": 1969,
        "answer_sql": "SELECT DISTINCT game.Franchise FROM game;"
    },
    {
        "question_id": 1970,
        "answer_sql": "SELECT DISTINCT game.Franchise FROM game;"
    },
    {
        "question_id": 1971,
        "answer_sql": "SELECT g.Title FROM game g LEFT JOIN game_player gp ON g.Game_ID = gp.Game_ID WHERE gp.Game_ID IS NULL AND g.Platform_ID IN ( SELECT Platform_ID FROM player WHERE Position = 'Guard' )"
    },
    {
        "question_id": 1972,
        "answer_sql": ""
    },
    {
        "question_id": 1973,
        "answer_sql": "SELECT press . Name , press . Year_Profits_billion FROM press ORDER BY press . Year_Profits_billion DESC;"
    },
    {
        "question_id": 1974,
        "answer_sql": "SELECT p.Name FROM press p JOIN book b ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount IS NOT NULL GROUP BY p.Press_ID, p.Name ORDER BY SUM(b.Sale_Amount) DESC;"
    },
    {
        "question_id": 1975,
        "answer_sql": "SELECT p.Name FROM press p JOIN book b ON b.Press_ID = p.Press_ID WHERE p.Month_Profits_billion > 15 OR p.Year_Profits_billion > 1 GROUP BY p.Name"
    },
    {
        "question_id": 1976,
        "answer_sql": "SELECT DISTINCT press.Name FROM press JOIN book ON press.Press_ID = book.Press_ID WHERE (press.Year_Profits_billion > 15 OR book.Sale_Amount > 1000000000)"
    },
    {
        "question_id": 1977,
        "answer_sql": "SELECT press.Year_Profits_billion AS 'Year', AVG(press.Year_Profits_billion) AS 'Average Profit', MAX(press.Year_Profits_billion) AS 'Maximum Profit' FROM press GROUP BY press.Year_Profits_billion;"
    },
    {
        "question_id": 1978,
        "answer_sql": "SELECT press.Press_ID, press.Name, AVG(press.Year_Profits_billion) AS Average_Yearly_Profit, MAX(press.Year_Profits_billion) AS Maximum_Yearly_Profit FROM press JOIN book ON book.Press_ID = press.Press_ID GROUP BY press.Press_ID, press.Name;"
    },
    {
        "question_id": 1979,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(Month_Profits_billion) FROM press );"
    },
    {
        "question_id": 1980,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(Month_Profits_billion) FROM press );"
    },
    {
        "question_id": 1981,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(p2.Month_Profits_billion) FROM press p2 ) OR p.Month_Profits_billion = ( SELECT MIN(p3.Month_Profits_billion) FROM press p3 )"
    },
    {
        "question_id": 1982,
        "answer_sql": "SELECT CASE WHEN MIN(Month_Profits_billion) = MAX(Month_Profits_billion) THEN 'The press that makes the highest monthly profit' ELSE 'The press that makes the lowest monthly profit' END AS Result, press.Name FROM press JOIN (SELECT Press_ID, MAX(Month_Profits_billion) AS Max_Profits, MIN(Month_Profits_billion) AS Min_Profits FROM press GROUP BY Press_ID) AS Press_Profits ON press.Press_ID = Press_Profits.Press_ID WHERE press.Month_Profits_billion IN (Max_Profits, Min_Profits)"
    },
    {
        "question_id": 1983,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1984,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1985,
        "answer_sql": "SELECT Gender, AVG(Age) as Average_Age FROM author GROUP BY Gender;"
    },
    {
        "question_id": 1986,
        "answer_sql": "SELECT author.Gender, AVG(author.Age) as Average_Age FROM author GROUP BY author.Gender;"
    },
    {
        "question_id": 1987,
        "answer_sql": "SELECT author.Gender, COUNT(*) FROM author JOIN book ON author.Author_ID = book.Author_ID WHERE author.Age > 30 GROUP BY author.Gender;"
    },
    {
        "question_id": 1988,
        "answer_sql": "SELECT a.Gender, COUNT(a.Author_ID) FROM author a WHERE a.Age > 30 GROUP BY a.Gender;"
    },
    {
        "question_id": 1989,
        "answer_sql": "SELECT book.Title FROM book ORDER BY book.Release_date DESC;"
    },
    {
        "question_id": 1990,
        "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"
    },
    {
        "question_id": 1991,
        "answer_sql": "SELECT b.Book_Series, COUNT(b.Book_ID) as Number_of_Books FROM book b GROUP BY b.Book_Series;"
    },
    {
        "question_id": 1992,
        "answer_sql": "SELECT b.Book_Series, COUNT(b.Book_ID) as 'Number of Books' FROM book b GROUP BY b.Book_Series;"
    },
    {
        "question_id": 1993,
        "answer_sql": "SELECT book.Title, book.Release_date FROM book JOIN ( SELECT Book_ID, SUM(Sale_Amount) as Total_Sale FROM book GROUP BY Book_ID ORDER BY Total_Sale DESC LIMIT 5 ) AS Top_Sale_Books ON book.Book_ID = Top_Sale_Books.Book_ID ORDER BY book.Release_date ASC;"
    },
    {
        "question_id": 1994,
        "answer_sql": "SELECT book.Title, book.Release_date FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID ORDER BY book.Sale_Amount DESC LIMIT 5;"
    },
    {
        "question_id": 1995,
        "answer_sql": "SELECT b.Book_Series FROM book b WHERE b.Sale_Amount > 1000 AND b.Book_Series IN ( SELECT b2.Book_Series FROM book b2 WHERE b2.Sale_Amount < 500 )"
    },
    {
        "question_id": 1996,
        "answer_sql": "SELECT book.Book_Series FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID WHERE book.Sale_Amount > 1000 AND book.Sale_Amount < 500 GROUP BY book.Book_Series"
    },
    {
        "question_id": 1997,
        "answer_sql": "SELECT author.Name FROM author JOIN book ON author.Author_ID = book.Author_ID WHERE book.Book_Series IN ('MM', 'LT') GROUP BY author.Name HAVING COUNT(DISTINCT book.Book_Series) = 2;"
    },
    {
        "question_id": 1998,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_Series IN ('MM', 'LT') GROUP BY a.Name HAVING COUNT(DISTINCT b.Book_Series) = 2;"
    },
    {
        "question_id": 1999,
        "answer_sql": "SELECT Name, Age FROM author WHERE Author_ID NOT IN (SELECT Author_ID FROM book);"
    },
    {
        "question_id": 2000,
        "answer_sql": "SELECT author.Name FROM author LEFT JOIN book ON author.Author_ID = book.Author_ID WHERE book.Book_ID IS NULL;"
    },
    {
        "question_id": 2001,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Name HAVING COUNT(b.Book_ID) > 1;"
    },
    {
        "question_id": 2002,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Name HAVING COUNT(b.Book_ID) > 1;"
    },
    {
        "question_id": 2003,
        "answer_sql": "SELECT b.Title, a.Name, p.Name FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3;"
    },
    {
        "question_id": 2004,
        "answer_sql": "SELECT book.Title, author.Name AS Author, press.Name AS Press FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID ORDER BY CAST(book.Sale_Amount AS INTEGER) DESC LIMIT 3;"
    },
    {
        "question_id": 2005,
        "answer_sql": "SELECT press.Name, SUM(book.Sale_Amount) as Total_Sale_Amount FROM press JOIN book ON book.Press_ID = press.Press_ID GROUP BY press.Name;"
    },
    {
        "question_id": 2006,
        "answer_sql": "SELECT press.Name, SUM(book.Sale_Amount) as Total_Sale_Amount FROM press JOIN book ON book.Press_ID = press.Press_ID GROUP BY press.Name;"
    },
    {
        "question_id": 2007,
        "answer_sql": "SELECT p.Name, COUNT(b.Book_ID) as Number_of_Books FROM press p JOIN book b ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Press_ID, p.Name"
    },
    {
        "question_id": 2008,
        "answer_sql": "SELECT p.Name, COUNT(b.Book_ID) as Num_Books FROM press p JOIN book b ON p.Press_ID = b.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Press_ID, p.Name ORDER BY Num_Books DESC;"
    },
    {
        "question_id": 2009,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Sale_Amount = (SELECT MAX(Sale_Amount) FROM book)"
    },
    {
        "question_id": 2010,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Sale_Amount = (SELECT MAX(Sale_Amount) FROM book)"
    },
    {
        "question_id": 2011,
        "answer_sql": "SELECT a.Name, a.Gender FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Author_ID ORDER BY COUNT(b.Book_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 2012,
        "answer_sql": "SELECT a.Name, a.Gender FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Author_ID, a.Name, a.Gender ORDER BY COUNT(b.Book_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 2013,
        "answer_sql": "SELECT a.Name FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Press_ID IS NULL;"
    },
    {
        "question_id": 2014,
        "answer_sql": "SELECT author.Name FROM author LEFT JOIN book ON author.Author_ID = book.Author_ID WHERE book.Press_ID IS NULL AND author.Name NOT LIKE '%Accor%';"
    },
    {
        "question_id": 2015,
        "answer_sql": "SELECT press . Name , press . Year_Profits_billion FROM press JOIN book ON press . Press_ID = book . Press_ID GROUP BY press . Press_ID HAVING COUNT( book . Book_ID ) > 2;"
    },
    {
        "question_id": 2016,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p JOIN ( SELECT b.Press_ID, COUNT(*) as Num_Books FROM book b GROUP BY b.Press_ID HAVING COUNT(*) > 2 ) c ON p.Press_ID = c.Press_ID"
    },
    {
        "question_id": 2017,
        "answer_sql": "SELECT COUNT(*) FROM Authors;"
    },
    {
        "question_id": 2018,
        "answer_sql": "SELECT author_name FROM Authors;"
    },
    {
        "question_id": 2019,
        "answer_sql": "SELECT author_name, other_details FROM Authors;"
    },
    {
        "question_id": 2020,
        "answer_sql": "SELECT Authors.other_details FROM Authors WHERE Authors.author_name = 'Addison Denesik';"
    },
    {
        "question_id": 2021,
        "answer_sql": "SELECT COUNT(*) FROM Documents_Processes;"
    },
    {
        "question_id": 2022,
        "answer_sql": "SELECT Authors.author_name FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE Documents.document_id = 4;"
    },
    {
        "question_id": 2023,
        "answer_sql": "SELECT Authors.author_name FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE Documents.document_name = 'Travel to Brazil';"
    },
    {
        "question_id": 2024,
        "answer_sql": "SELECT COUNT(*) FROM Documents WHERE author_name = 'Era Kerluke';"
    },
    {
        "question_id": 2025,
        "answer_sql": "SELECT D.document_name, D.document_description FROM Documents D;"
    },
    {
        "question_id": 2026,
        "answer_sql": "SELECT D.document_id, D.document_name, A.author_name, A.other_details FROM Documents D JOIN Authors A ON D.author_name = A.author_name WHERE A.author_name = 'Bianka Cummings';"
    },
    {
        "question_id": 2027,
        "answer_sql": "SELECT D.document_name, D.document_description, A.other_details FROM Documents D JOIN Documents_Processes DP ON D.document_id = DP.document_id JOIN Business_Processes BP ON DP.process_id = BP.process_id JOIN Staff_in_Processes SIP ON DP.document_id = SIP.document_id AND DP.process_id = SIP.process_id JOIN Staff S ON SIP.staff_id = S.staff_id JOIN Authors A ON D.author_name = A.author_name WHERE D.document_name = 'Travel to China';"
    },
    {
        "question_id": 2028,
        "answer_sql": "SELECT Authors.author_name, COUNT(Documents.document_id) as document_count FROM Authors LEFT JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.author_name;"
    },
    {
        "question_id": 2029,
        "answer_sql": "SELECT Authors.author_name, COUNT(Documents.document_id) as document_count FROM Documents JOIN Documents_Processes ON Documents.document_id = Documents_Processes.document_id JOIN Staff_in_Processes ON Documents_Processes.document_id = Staff_in_Processes.document_id AND Documents_Processes.process_id = Staff_in_Processes.process_id JOIN Staff ON Staff_in_Processes.staff_id = Staff.staff_id JOIN Authors ON Documents.author_name = Authors.author_name GROUP BY Authors.author_name ORDER BY document_count DESC LIMIT 1;"
    },
    {
        "question_id": 2030,
        "answer_sql": "SELECT DISTINCT Authors.author_name FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.author_name HAVING COUNT(Documents.document_id) >= 2;"
    },
    {
        "question_id": 2031,
        "answer_sql": "SELECT COUNT(*) FROM Business_Processes;"
    },
    {
        "question_id": 2032,
        "answer_sql": "SELECT next_process_id, process_name, process_description FROM Business_Processes WHERE process_id = 9;"
    },
    {
        "question_id": 2033,
        "answer_sql": "SELECT B.process_name FROM Business_Processes B JOIN Documents_Processes DP ON B.process_id = DP.process_id WHERE DP.process_id = 9 ORDER BY B.process_name ASC LIMIT 1;"
    },
    {
        "question_id": 2034,
        "answer_sql": "SELECT Process_Outcomes.process_outcome_code, Process_Outcomes.process_outcome_description, COUNT(*) as count FROM Process_Outcomes JOIN Documents_Processes ON Process_Outcomes.process_outcome_code = Documents_Processes.process_outcome_code GROUP BY Process_Outcomes.process_outcome_code, Process_Outcomes.process_outcome_description"
    },
    {
        "question_id": 2035,
        "answer_sql": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes;"
    },
    {
        "question_id": 2036,
        "answer_sql": "SELECT process_outcome_description FROM Process_Outcomes WHERE process_outcome_code = 'working';"
    },
    {
        "question_id": 2037,
        "answer_sql": "SELECT COUNT(*) FROM Staff_in_Processes WHERE staff_role_code = 'status_code';"
    },
    {
        "question_id": 2038,
        "answer_sql": "SELECT Process_Status.process_status_code, Process_Status.process_status_description FROM Process_Status;"
    },
    {
        "question_id": 2039,
        "answer_sql": "SELECT Process_Status.process_status_description FROM Process_Status WHERE process_status_code = 'ct';"
    },
    {
        "question_id": 2040,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2041,
        "answer_sql": "SELECT Staff.staff_id, Staff.staff_details FROM Staff;"
    },
    {
        "question_id": 2042,
        "answer_sql": "SELECT staff_details FROM Staff WHERE staff_id = 100;"
    },
    {
        "question_id": 2043,
        "answer_sql": "SELECT COUNT(*) FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2044,
        "answer_sql": "SELECT Ref_Staff_Roles.staff_role_code, Ref_Staff_Roles.staff_role_description FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2045,
        "answer_sql": "SELECT Ref_Staff_Roles.staff_role_description FROM Ref_Staff_Roles WHERE staff_role_code = 'HR';"
    },
    {
        "question_id": 2046,
        "answer_sql": "SELECT COUNT(DISTINCT D.document_id) FROM Documents D JOIN Documents_Processes DP ON D.document_id = DP.document_id JOIN Business_Processes BP ON DP.process_id = BP.process_id WHERE BP.process_name = 'Your_Process_Name';"
    },
    {
        "question_id": 2047,
        "answer_sql": "SELECT DISTINCT process_id FROM Documents_Processes;"
    },
    {
        "question_id": 2048,
        "answer_sql": "SELECT DISTINCT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_Processes);"
    },
    {
        "question_id": 2049,
        "answer_sql": ""
    },
    {
        "question_id": 2050,
        "answer_sql": "SELECT Process_Outcomes.process_outcome_description, Process_Status.process_status_description FROM Documents JOIN Documents_Processes ON Documents.document_id = Documents_Processes.document_id JOIN Business_Processes ON Business_Processes.process_id = Documents_Processes.process_id JOIN Process_Outcomes ON Process_Outcomes.process_outcome_code = Documents_Processes.process_outcome_code JOIN Process_Status ON Process_Status.process_status_code = Documents_Processes.process_status_code WHERE Documents.document_id = 0;"
    },
    {
        "question_id": 2051,
        "answer_sql": "SELECT process_name FROM Documents JOIN Documents_Processes ON Documents.document_id = Documents_Processes.document_id JOIN Business_Processes ON Business_Processes.process_id = Documents_Processes.process_id WHERE Documents.document_name = 'Travel to Brazil'"
    },
    {
        "question_id": 2052,
        "answer_sql": "SELECT B.process_id, COUNT(A.document_id) as document_count FROM Documents_Processes as A JOIN Business_Processes as B ON A.process_id = B.process_id GROUP BY B.process_id ORDER BY document_count DESC;"
    },
    {
        "question_id": 2053,
        "answer_sql": "SELECT COUNT(*) FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9;"
    },
    {
        "question_id": 2054,
        "answer_sql": "SELECT Staff.staff_id, COUNT(Documents_Processes.document_id) as Number_of_Documents_Processes FROM Staff JOIN Staff_in_Processes ON Staff.staff_id = Staff_in_Processes.staff_id JOIN Documents_Processes ON Staff_in_Processes.document_id = Documents_Processes.document_id GROUP BY Staff.staff_id;"
    },
    {
        "question_id": 2055,
        "answer_sql": "SELECT Staff.staff_details, Ref_Staff_Roles.staff_role_code, COUNT(DISTINCT Documents_Processes.document_id) as document_process_count FROM Staff JOIN Staff_in_Processes ON Staff.staff_id = Staff_in_Processes.staff_id JOIN Ref_Staff_Roles ON Staff_in_Processes.staff_role_code = Ref_Staff_Roles.staff_role_code JOIN Documents_Processes ON Staff_in_Processes.document_id = Documents_Processes.document_id JOIN Documents ON Documents_Processes.document_id = Documents.document_id WHERE Staff.staff_id IN (SELECT staff_id FROM Staff WHERE staff_details LIKE '%') GROUP BY Ref_Staff_Roles.staff_role_code, Staff.staff_details ORDER BY document_process_count DESC;"
    },
    {
        "question_id": 2056,
        "answer_sql": "SELECT COUNT(DISTINCT staff_role_code) as Number_of_Different_Roles FROM Staff_in_Processes WHERE staff_id = 3;"
    },
    {
        "question_id": 2057,
        "answer_sql": "SELECT COUNT(*) FROM Agencies;"
    },
    {
        "question_id": 2058,
        "answer_sql": "SELECT COUNT(*) FROM Agencies;"
    },
    {
        "question_id": 2059,
        "answer_sql": "SELECT `agency_id`, `agency_details` FROM `Agencies`;"
    },
    {
        "question_id": 2060,
        "answer_sql": "SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies`;"
    },
    {
        "question_id": 2061,
        "answer_sql": "SELECT COUNT(*) FROM Clients;"
    },
    {
        "question_id": 2062,
        "answer_sql": "SELECT COUNT(*) FROM Clients;"
    },
    {
        "question_id": 2063,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients"
    },
    {
        "question_id": 2064,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients"
    },
    {
        "question_id": 2065,
        "answer_sql": "SELECT A.agency_id, COUNT(C.client_id) as Number_of_Clients FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id;"
    },
    {
        "question_id": 2066,
        "answer_sql": "SELECT A.agency_id, COUNT(C.client_id) as total_clients FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id JOIN Clients C ON S.staff_id = C.agency_id GROUP BY A.agency_id;"
    },
    {
        "question_id": 2067,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id, A.agency_details ORDER BY COUNT(C.client_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2068,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id, A.agency_details ORDER BY COUNT(C.client_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2069,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id, A.agency_details HAVING COUNT(C.client_id) >= 2;"
    },
    {
        "question_id": 2070,
        "answer_sql": "SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies` JOIN `Clients` ON `Agencies`.`agency_id` = `Clients`.`agency_id` GROUP BY `Agencies`.`agency_id`, `Agencies`.`agency_details` HAVING COUNT(`Clients`.`client_id`) >= 2;"
    },
    {
        "question_id": 2071,
        "answer_sql": "SELECT `Agencies`.`agency_details` FROM `Clients` JOIN `Agencies` ON `Clients`.`agency_id` = `Agencies`.`agency_id` WHERE `Clients`.`client_details` = 'Mac';"
    },
    {
        "question_id": 2072,
        "answer_sql": "SELECT Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Clients.client_details = 'Mac'"
    },
    {
        "question_id": 2073,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2074,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2075,
        "answer_sql": "SELECT `sic_code`, COUNT(`client_id`) as `Number_of_Clients` FROM `Clients` GROUP BY `sic_code`;"
    },
    {
        "question_id": 2076,
        "answer_sql": "SELECT c.sic_code, COUNT(c.client_id) as total_clients FROM Clients c GROUP BY c.sic_code;"
    },
    {
        "question_id": 2077,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id JOIN Staff ON Clients.agency_id = Staff.agency_id JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Invoices ON Meetings.client_id = Invoices.client_id WHERE Clients.sic_code = 'Bad'"
    },
    {
        "question_id": 2078,
        "answer_sql": "SELECT `Clients`.`client_id`, `Clients`.`client_details` FROM `Clients` WHERE `Clients`.`sic_code` = 'Bad';"
    },
    {
        "question_id": 2079,
        "answer_sql": "SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Clients` JOIN `Agencies` ON `Clients`.`agency_id` = `Agencies`.`agency_id`;"
    },
    {
        "question_id": 2080,
        "answer_sql": "SELECT `agency_id`, `agency_details` FROM `Agencies` WHERE `Agencies`.`agency_id` IN ( SELECT `agency_id` FROM `Clients` );"
    },
    {
        "question_id": 2081,
        "answer_sql": "SELECT DISTINCT a.agency_id FROM Agencies a LEFT JOIN Clients c ON a.agency_id = c.agency_id WHERE c.client_id IS NULL;"
    },
    {
        "question_id": 2082,
        "answer_sql": "SELECT A.agency_id FROM Agencies AS A LEFT JOIN Clients AS C ON A.agency_id = C.agency_id WHERE C.client_id IS NULL;"
    },
    {
        "question_id": 2083,
        "answer_sql": "SELECT COUNT(*) FROM Invoices;"
    },
    {
        "question_id": 2084,
        "answer_sql": "SELECT COUNT(*) FROM Invoices;"
    },
    {
        "question_id": 2085,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id"
    },
    {
        "question_id": 2086,
        "answer_sql": "SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices`;"
    },
    {
        "question_id": 2087,
        "answer_sql": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) as Number_of_Invoices FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2088,
        "answer_sql": "SELECT Invoices.invoice_id, Clients.client_id, COUNT(*) as total_invoices FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id GROUP BY Invoices.invoice_id, Clients.client_id;"
    },
    {
        "question_id": 2089,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id, Clients.client_details ORDER BY COUNT(Invoices.invoice_id) DESC;"
    },
    {
        "question_id": 2090,
        "answer_sql": "SELECT client_id, client_details FROM Clients WHERE client_id IN ( SELECT client_id FROM Invoices GROUP BY client_id ORDER BY COUNT(*) DESC LIMIT 1 )"
    },
    {
        "question_id": 2091,
        "answer_sql": "SELECT Clients.client_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id HAVING COUNT(Invoices.invoice_id) >= 2;"
    },
    {
        "question_id": 2092,
        "answer_sql": "SELECT Clients.client_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id HAVING COUNT(Invoices.invoice_id) >= 2;"
    },
    {
        "question_id": 2093,
        "answer_sql": "SELECT invoice_status, COUNT(*) as number_of_invoices FROM Invoices GROUP BY invoice_status;"
    },
    {
        "question_id": 2094,
        "answer_sql": "SELECT invoice_status, COUNT(*) FROM Invoices GROUP BY invoice_status;"
    },
    {
        "question_id": 2095,
        "answer_sql": "SELECT invoice_status, COUNT(*) as number_of_invoices FROM Invoices GROUP BY invoice_status ORDER BY number_of_invoices DESC LIMIT 1;"
    },
    {
        "question_id": 2096,
        "answer_sql": "SELECT Invoices.invoice_status, COUNT(*) as total_invoices FROM Invoices GROUP BY Invoices.invoice_status ORDER BY total_invoices DESC LIMIT 1;"
    },
    {
        "question_id": 2097,
        "answer_sql": "SELECT Invoices.invoice_details, Clients.client_details, Clients.client_id, Agencies.agency_id, Agencies.agency_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2098,
        "answer_sql": "SELECT Invoices.invoice_status, Invoices.invoice_details, Clients.client_id, Clients.client_details, Agencies.agency_id, Agencies.agency_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2099,
        "answer_sql": "SELECT `Meetings`.`meeting_type`, `Meetings`.`other_details` FROM `Meetings` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id` WHERE `Staff`.`staff_id` = 1;"
    },
    {
        "question_id": 2100,
        "answer_sql": "SELECT `meeting_type`, `other_details` FROM `Meetings`;"
    },
    {
        "question_id": 2101,
        "answer_sql": "SELECT `Meetings`.`meeting_outcome`, `Meetings`.`purpose_of_meeting` FROM `Meetings`"
    },
    {
        "question_id": 2102,
        "answer_sql": "SELECT `meeting_outcome`, `meeting_type`, `purpose_of_meeting` FROM `Meetings`;"
    },
    {
        "question_id": 2103,
        "answer_sql": "SELECT invoice_id, invoice_details FROM Invoices WHERE invoice_status = 'Working';"
    },
    {
        "question_id": 2104,
        "answer_sql": "SELECT Payments.payment_id, Payments.payment_details FROM Invoices JOIN Payments ON Invoices.invoice_id = Payments.invoice_id WHERE Invoices.invoice_status = 'Working'"
    },
    {
        "question_id": 2105,
        "answer_sql": "SELECT `invoice_id`, `invoice_status` FROM `Invoices` WHERE `invoice_id` NOT IN ( SELECT `invoice_id` FROM `Payments` )"
    },
    {
        "question_id": 2106,
        "answer_sql": "SELECT invoice_id, invoice_status FROM Invoices WHERE invoice_id NOT IN (SELECT invoice_id FROM Payments)"
    },
    {
        "question_id": 2107,
        "answer_sql": "SELECT COUNT(*) FROM Payments;"
    },
    {
        "question_id": 2108,
        "answer_sql": "SELECT COUNT(*) FROM Payments;"
    },
    {
        "question_id": 2109,
        "answer_sql": "SELECT Invoices.invoice_id, Payments.payment_details, Invoices.invoice_details FROM Invoices JOIN Payments ON Invoices.invoice_id = Payments.invoice_id;"
    },
    {
        "question_id": 2110,
        "answer_sql": "SELECT Payments.payment_id, Invoices.invoice_id, Payments.payment_details FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id;"
    },
    {
        "question_id": 2111,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status FROM Invoices JOIN Payments ON Invoices.invoice_id = Payments.invoice_id"
    },
    {
        "question_id": 2112,
        "answer_sql": "SELECT DISTINCT Invoices.invoice_id, Invoices.invoice_status FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id;"
    },
    {
        "question_id": 2113,
        "answer_sql": "SELECT Invoices.invoice_id, COUNT(Payments.payment_id) as payment_count FROM Invoices LEFT JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id;"
    },
    {
        "question_id": 2114,
        "answer_sql": "SELECT Invoices.invoice_id, COUNT(Payments.payment_details) as Number_of_Payments FROM Invoices JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id;"
    },
    {
        "question_id": 2115,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices JOIN Staff_in_Meetings ON Invoices.invoice_id = Staff_in_Meetings.meeting_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Payments ON Meetings.meeting_id = Payments.invoice_id GROUP BY Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details ORDER BY COUNT(Payments.payment_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2116,
        "answer_sql": "SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices` WHERE `invoice_id` IN ( SELECT `invoice_id` FROM `Payments` GROUP BY `invoice_id` HAVING COUNT(`invoice_id`) = ( SELECT MAX(`count`) FROM ( SELECT `invoice_id`, COUNT(`invoice_id`) as `count` FROM `Payments` GROUP BY `invoice_id` ) as `temp` ) );"
    },
    {
        "question_id": 2117,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2118,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2119,
        "answer_sql": "SELECT A.agency_id, COUNT(S.staff_id) as Number_of_Staff FROM Staff S JOIN Staff_in_Meetings SM ON S.staff_id = SM.staff_id JOIN Meetings M ON SM.meeting_id = M.meeting_id JOIN Clients C ON M.client_id = C.client_id JOIN Agencies A ON C.agency_id = A.agency_id GROUP BY A.agency_id;"
    },
    {
        "question_id": 2120,
        "answer_sql": "SELECT A.agency_id, COUNT(S.staff_id) as Number_of_Staff FROM Staff S JOIN Staff_in_Meetings SM ON S.staff_id = SM.staff_id JOIN Meetings M ON SM.meeting_id = M.meeting_id JOIN Clients C ON M.client_id = C.client_id JOIN Agencies A ON C.agency_id = A.agency_id GROUP BY A.agency_id;"
    },
    {
        "question_id": 2121,
        "answer_sql": "SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Staff` INNER JOIN `Agencies` ON `Staff`.`agency_id` = `Agencies`.`agency_id` WHERE `Staff`.`agency_id` = (SELECT `agency_id` FROM `Staff` GROUP BY `agency_id` ORDER BY COUNT(`staff_id`) DESC LIMIT 1);"
    },
    {
        "question_id": 2122,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies AS A JOIN Staff AS S ON A.agency_id = S.agency_id WHERE S.staff_id = (SELECT MAX(staff_id) FROM Staff);"
    },
    {
        "question_id": 2123,
        "answer_sql": "SELECT `meeting_outcome`, COUNT(*) as `number_of_meetings` FROM `Meetings` GROUP BY `meeting_outcome`;"
    },
    {
        "question_id": 2124,
        "answer_sql": "SELECT `meeting_outcome`, COUNT(*) as `meeting_count` FROM `Meetings` GROUP BY `meeting_outcome`;"
    },
    {
        "question_id": 2125,
        "answer_sql": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) as total_meetings FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2126,
        "answer_sql": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) as total_meetings FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.meeting_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2127,
        "answer_sql": "SELECT `Meetings`.`meeting_type`, COUNT(`Meetings`.`meeting_id`) as `Number_of_Meetings` FROM `Meetings` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id` JOIN `Clients` ON `Clients`.`client_id` = `Staff`.`agency_id` GROUP BY `Meetings`.`meeting_type` ORDER BY `Number_of_Meetings` DESC;"
    },
    {
        "question_id": 2128,
        "answer_sql": "SELECT `meeting_type`, COUNT(`meeting_id`) FROM `Meetings` GROUP BY `meeting_type`;"
    },
    {
        "question_id": 2129,
        "answer_sql": "SELECT Meetings.meeting_id, Meetings.meeting_outcome, Meetings.meeting_type, Clients.client_details, Clients.sic_code, Staff.staff_details, Meetings.start_date_time, Meetings.end_date_time, Meetings.other_details FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Clients ON Meetings.client_id = Clients.client_id"
    },
    {
        "question_id": 2130,
        "answer_sql": "SELECT Meetings.meeting_id, Meetings.meeting_outcome, Meetings.meeting_type, Clients.client_id, Clients.client_details FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Clients ON Meetings.client_id = Clients.client_id"
    },
    {
        "question_id": 2131,
        "answer_sql": "SELECT Meetings.meeting_id, COUNT(Staff_in_Meetings.staff_id) as Number_of_Staff FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id GROUP BY Meetings.meeting_id;"
    },
    {
        "question_id": 2132,
        "answer_sql": "SELECT M.meeting_id, COUNT(S.staff_id) as number_of_staff FROM Meetings M JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id JOIN Staff S ON SM.staff_id = S.staff_id GROUP BY M.meeting_id;"
    },
    {
        "question_id": 2133,
        "answer_sql": "SELECT Staff.staff_id, COUNT(Staff_in_Meetings.meeting_id) as meeting_count FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id GROUP BY Staff.staff_id ORDER BY meeting_count ASC LIMIT 1;"
    },
    {
        "question_id": 2134,
        "answer_sql": "SELECT Staff.staff_id FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id GROUP BY Staff.staff_id ORDER BY COUNT(Staff_in_Meetings.meeting_id) ASC LIMIT 1;"
    },
    {
        "question_id": 2135,
        "answer_sql": "SELECT Staff.staff_id, COUNT(Meetings.meeting_id) as Number_of_Meetings FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id GROUP BY Staff.staff_id;"
    },
    {
        "question_id": 2136,
        "answer_sql": "SELECT COUNT(DISTINCT Staff_in_Meetings.staff_id) FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id;"
    },
    {
        "question_id": 2137,
        "answer_sql": "SELECT COUNT(*) FROM Staff WHERE staff_id NOT IN (SELECT DISTINCT staff_id FROM Staff_in_Meetings);"
    },
    {
        "question_id": 2138,
        "answer_sql": "SELECT Staff.staff_id FROM Staff WHERE staff_id NOT IN ( SELECT Staff_in_Meetings.staff_id FROM Staff_in_Meetings WHERE meeting_id IN ( SELECT Meetings.meeting_id FROM Meetings WHERE billable_yn = 'N' ) )"
    },
    {
        "question_id": 2139,
        "answer_sql": ""
    },
    {
        "question_id": 2140,
        "answer_sql": "SELECT Staff.staff_id, Staff.staff_details, Meetings.meeting_id, Meetings.start_date_time, Meetings.end_date_time, Clients.client_details, Clients.client_id FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id JOIN Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Clients ON Clients.client_id = Meetings.client_id WHERE (SELECT COUNT(*) FROM Staff_in_Meetings WHERE Staff_in_Meetings.staff_id = Staff.staff_id) > 0 OR (SELECT COUNT(*) FROM Meetings WHERE Meetings.client_id = Clients.client_id) > 0;"
    },
    {
        "question_id": 2141,
        "answer_sql": "SELECT Staff.staff_id, Staff.staff_details FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id WHERE Meetings.purpose_of_meeting LIKE '%s%' GROUP BY Staff.staff_id, Staff.staff_details HAVING COUNT(DISTINCT Meetings.meeting_id) >= 1;"
    },
    {
        "question_id": 2142,
        "answer_sql": "SELECT Staff.staff_id, Staff.staff_details FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id WHERE Meetings.start_date_time IS NOT NULL GROUP BY Staff.staff_id, Staff.staff_details HAVING COUNT(DISTINCT Meetings.meeting_id) >= 1 AND Staff.staff_details LIKE '%s%';"
    },
    {
        "question_id": 2143,
        "answer_sql": "SELECT Meetings.meeting_id, Clients.sic_code, Agencies.agency_id FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Clients ON Staff.agency_id = Clients.agency_id JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Meetings.meeting_id IN ( SELECT meeting_id FROM Staff_in_Meetings GROUP BY meeting_id HAVING COUNT(staff_id) = 1 ) AND Clients.client_id IN ( SELECT client_id FROM Invoices GROUP BY client_id HAVING COUNT(invoice_id) > 0 )"
    },
    {
        "question_id": 2144,
        "answer_sql": "SELECT Clients.client_id, Clients.sic_code, Meetings.meeting_id, Agencies.agency_id FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.meeting_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Invoices ON Meetings.meeting_id = Invoices.invoice_id JOIN Agencies ON Clients.agency_id = Agencies.agency_id GROUP BY Clients.client_id, Clients.sic_code, Meetings.meeting_id, Agencies.agency_id HAVING COUNT(DISTINCT Invoices.invoice_id) = 1 AND COUNT(DISTINCT Meetings.meeting_id) = 1;"
    },
    {
        "question_id": 2145,
        "answer_sql": "SELECT Meetings.start_date_time, Meetings.end_date_time, Clients.client_details, Staff.staff_details FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Clients ON Meetings.client_id = Clients.client_id ORDER BY Meetings.start_date_time;"
    },
    {
        "question_id": 2146,
        "answer_sql": "SELECT M.meeting_id, M.start_date_time, M.end_date_time, C.client_id, C.client_details, S.staff_id, S.staff_details FROM Meetings M JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id JOIN Staff S ON SM.staff_id = S.staff_id JOIN Clients C ON M.client_id = C.client_id;"
    }
]