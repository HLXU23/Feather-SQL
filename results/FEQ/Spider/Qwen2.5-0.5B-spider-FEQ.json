[
    {
        "question_id": 0,
        "answer_sql": "SELECT COUNT(DISTINCT Club_ID) FROM club;"
    },
    {
        "question_id": 1,
        "answer_sql": "SELECT COUNT(*) FROM club;"
    },
    {
        "question_id": 2,
        "answer_sql": "SELECT Name FROM club ORDER BY Name ASC;"
    },
    {
        "question_id": 3,
        "answer_sql": "SELECT Name FROM club ORDER BY Name ASC;"
    },
    {
        "question_id": 4,
        "answer_sql": "SELECT T1.Manager, T1.Captain FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID;"
    },
    {
        "question_id": 5,
        "answer_sql": "SELECT T1.Manager, T1.Captain FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID;"
    },
    {
        "question_id": 6,
        "answer_sql": "SELECT c.Name FROM club c WHERE c.Manufacturer != 'Nike';"
    },
    {
        "question_id": 7,
        "answer_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player WHERE Manufacturer = 'Nike')"
    },
    {
        "question_id": 8,
        "answer_sql": "SELECT Name FROM player ORDER BY Wins_count ASC;"
    },
    {
        "question_id": 9,
        "answer_sql": "SELECT Name FROM player ORDER BY Wins_count ASC;"
    },
    {
        "question_id": 10,
        "answer_sql": "SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player) ORDER BY Earnings DESC LIMIT 1;"
    },
    {
        "question_id": 11,
        "answer_sql": "SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player);"
    },
    {
        "question_id": 12,
        "answer_sql": "SELECT DISTINCT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings > 1200000;"
    },
    {
        "question_id": 13,
        "answer_sql": "SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Earnings > 1200000;"
    },
    {
        "question_id": 14,
        "answer_sql": "SELECT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Wins_count > 2 GROUP BY T1.Country ORDER BY SUM(T1.Earnings) DESC LIMIT 1;"
    },
    {
        "question_id": 15,
        "answer_sql": ""
    },
    {
        "question_id": 16,
        "answer_sql": "SELECT p.Name, c.Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID;"
    },
    {
        "question_id": 17,
        "answer_sql": "SELECT p.Name, c.Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID;"
    },
    {
        "question_id": 18,
        "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2;"
    },
    {
        "question_id": 19,
        "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2;"
    },
    {
        "question_id": 20,
        "answer_sql": "SELECT Name FROM player WHERE Club_ID IN (SELECT Club_ID FROM club WHERE Manager = 'Sam Allardyce')"
    },
    {
        "question_id": 21,
        "answer_sql": "SELECT p.Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID WHERE c.Manager = 'Sam Allardyce'"
    },
    {
        "question_id": 22,
        "answer_sql": "SELECT Name FROM club WHERE Club_ID IN ( SELECT Club_ID FROM player GROUP BY Club_ID HAVING AVG(Earnings) = ( SELECT AVG(Earnings) FROM player WHERE Club_ID = ( SELECT Club_ID FROM player GROUP BY Club_ID ORDER BY Wins_count DESC LIMIT 1 ) ) ) ORDER BY Name DESC;"
    },
    {
        "question_id": 23,
        "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Name ORDER BY AVG(p.Earnings) DESC;"
    },
    {
        "question_id": 24,
        "answer_sql": "SELECT c.Manufacturer, COUNT(c.Manufacturer) AS Club_Count FROM club c GROUP BY c.Manufacturer;"
    },
    {
        "question_id": 25,
        "answer_sql": "SELECT c.Manufacturer, COUNT(c.Manufacturer) AS Club_Count FROM club c GROUP BY c.Manufacturer;"
    },
    {
        "question_id": 26,
        "answer_sql": "SELECT c.Manufacturer FROM club c GROUP BY c.Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 27,
        "answer_sql": "SELECT T1.Manufacturer FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 28,
        "answer_sql": "SELECT T1.Manufacturer FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Manufacturer HAVING COUNT(T1.Club_ID) > 1;"
    },
    {
        "question_id": 29,
        "answer_sql": "SELECT T1.Manufacturer FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Manufacturer HAVING COUNT(T2.Club_ID) > 1 ORDER BY COUNT(T2.Club_ID) DESC"
    },
    {
        "question_id": 30,
        "answer_sql": "SELECT Country FROM player GROUP BY Country HAVING COUNT(DISTINCT Club_ID) > 1;"
    },
    {
        "question_id": 31,
        "answer_sql": "SELECT DISTINCT T1.Country FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Country HAVING COUNT(T1.Player_ID) > 1;"
    },
    {
        "question_id": 32,
        "answer_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
    },
    {
        "question_id": 33,
        "answer_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
    },
    {
        "question_id": 34,
        "answer_sql": ""
    },
    {
        "question_id": 35,
        "answer_sql": ""
    },
    {
        "question_id": 36,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Country) FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID;"
    },
    {
        "question_id": 37,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Country) FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID;"
    },
    {
        "question_id": 38,
        "answer_sql": "SELECT Earnings FROM player WHERE Country = 'Australia' OR Country = 'Zimbabwe'"
    },
    {
        "question_id": 39,
        "answer_sql": "SELECT Earnings FROM player WHERE Club_ID IN (SELECT Club_ID FROM club WHERE Country IN ('Australia', 'Zimbabwe')) ;"
    },
    {
        "question_id": 40,
        "answer_sql": "SELECT c.customer_first_name, c.customer_last_name FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Shipments si ON o.order_id = si.order_id WHERE o.order_status_code IN ('Placed', 'Delivered') AND oi.order_item_status_code IN ('Placed', 'Delivered') GROUP BY c.customer_id HAVING COUNT(o.order_id) > 2 AND COUNT(o.order_id) >= 3;"
    },
    {
        "question_id": 41,
        "answer_sql": ""
    },
    {
        "question_id": 42,
        "answer_sql": ""
    },
    {
        "question_id": 43,
        "answer_sql": "SELECT o.order_id, COUNT(o.order_id) AS order_count, o.order_status_code, o.order_id FROM Orders o GROUP BY o.order_id, o.order_status_code, o.order_id;"
    },
    {
        "question_id": 44,
        "answer_sql": ""
    },
    {
        "question_id": 45,
        "answer_sql": "SELECT MIN(T1.date_order_placed) AS earliest_order_date, COUNT(T1.order_id) AS total_orders FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id HAVING COUNT(T2.order_item_id) > 1;"
    },
    {
        "question_id": 46,
        "answer_sql": "SELECT `Customers`.`customer_first_name`, `Customers`.`customer_middle_initial`, `Customers`.`customer_last_name` FROM `Customers` WHERE `Customers`.`customer_id` NOT IN (SELECT `Orders`.`customer_id` FROM `Orders` WHERE `Orders`.`order_status_code` = 'Completed')"
    },
    {
        "question_id": 47,
        "answer_sql": "SELECT `Customers`.`customer_first_name`, `Customers`.`customer_middle_initial`, `Customers`.`customer_last_name` FROM `Customers` WHERE `Customers`.`customer_id` NOT IN (SELECT `Orders`.`customer_id` FROM `Orders`)"
    },
    {
        "question_id": 48,
        "answer_sql": "SELECT p.product_id, p.product_name, p.product_price, p.product_color FROM Products p WHERE NOT EXISTS ( SELECT 1 FROM Orders o WHERE o.order_id = p.product_id GROUP BY o.order_id HAVING COUNT(o.order_id) > 1 );"
    },
    {
        "question_id": 49,
        "answer_sql": "SELECT p.product_id, p.product_name, p.product_price, p.product_color FROM Products p WHERE p.product_id IN ( SELECT o.order_id FROM Orders o GROUP BY o.order_id HAVING COUNT(o.order_id) < 2 );"
    },
    {
        "question_id": 50,
        "answer_sql": "SELECT o.order_id, o.date_order_placed FROM Orders o WHERE o.order_id IN ( SELECT oi.order_id FROM Order_Items oi GROUP BY oi.order_id HAVING COUNT(oi.product_id) >= 2 );"
    },
    {
        "question_id": 51,
        "answer_sql": "SELECT o.order_id, o.date_order_placed FROM Orders o WHERE o.order_id IN ( SELECT oi.order_id FROM Order_Items oi GROUP BY oi.order_id HAVING COUNT(oi.product_id) >= 2 );"
    },
    {
        "question_id": 52,
        "answer_sql": "SELECT p.product_id, p.product_name, p.product_price FROM Products p JOIN ( SELECT order_id, COUNT(*) as order_count FROM Orders GROUP BY order_id ) o ON p.product_id = o.order_id ORDER BY o.order_count DESC LIMIT 1;"
    },
    {
        "question_id": 53,
        "answer_sql": ""
    },
    {
        "question_id": 54,
        "answer_sql": "SELECT o.order_id, SUM(p.product_price) AS total_price FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id GROUP BY o.order_id ORDER BY total_price ASC LIMIT 1;"
    },
    {
        "question_id": 55,
        "answer_sql": ""
    },
    {
        "question_id": 56,
        "answer_sql": "SELECT T2.payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.payment_method_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 57,
        "answer_sql": "SELECT T2.payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.payment_method_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 58,
        "answer_sql": "SELECT gender_code, COUNT(*) AS product_count FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id GROUP BY gender_code"
    },
    {
        "question_id": 59,
        "answer_sql": "SELECT gender_code, COUNT(*) AS product_count FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id GROUP BY gender_code"
    },
    {
        "question_id": 60,
        "answer_sql": "SELECT c.gender_code, COUNT(o.order_id) AS num_orders FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id GROUP BY c.gender_code"
    },
    {
        "question_id": 61,
        "answer_sql": "SELECT gender_code, COUNT(*) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY gender_code;"
    },
    {
        "question_id": 62,
        "answer_sql": "SELECT `Customers`.`customer_first_name`, `Customers`.`customer_middle_initial`, `Customers`.`customer_last_name`, `Customer_Payment_Methods`.`payment_method_code` FROM `Customers` JOIN `Customer_Payment_Methods` ON `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id`;"
    },
    {
        "question_id": 63,
        "answer_sql": "SELECT `Customers`.`customer_first_name`, `Customers`.`customer_middle_initial`, `Customers`.`customer_last_name`, `Customer_Payment_Methods`.`payment_method_code` FROM `Customers` JOIN `Customer_Payment_Methods` ON `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id`;"
    },
    {
        "question_id": 64,
        "answer_sql": ""
    },
    {
        "question_id": 65,
        "answer_sql": ""
    },
    {
        "question_id": 66,
        "answer_sql": ""
    },
    {
        "question_id": 67,
        "answer_sql": ""
    },
    {
        "question_id": 68,
        "answer_sql": ""
    },
    {
        "question_id": 69,
        "answer_sql": ""
    },
    {
        "question_id": 70,
        "answer_sql": ""
    },
    {
        "question_id": 71,
        "answer_sql": "SELECT p.product_name, p.product_color FROM Products p WHERE p.product_id IN ( SELECT o.product_id FROM Order_Items o GROUP BY o.product_id HAVING COUNT(o.order_id) > 0 );"
    },
    {
        "question_id": 72,
        "answer_sql": ""
    },
    {
        "question_id": 73,
        "answer_sql": ""
    },
    {
        "question_id": 74,
        "answer_sql": "SELECT i.invoice_status_code FROM Invoices i WHERE NOT EXISTS ( SELECT 1 FROM Shipments s WHERE s.invoice_number = i.invoice_number )"
    },
    {
        "question_id": 75,
        "answer_sql": ""
    },
    {
        "question_id": 76,
        "answer_sql": "SELECT o.order_id, o.date_order_placed, SUM(p.product_price) AS total_cost FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id GROUP BY o.order_id ORDER BY o.order_id;"
    },
    {
        "question_id": 77,
        "answer_sql": ""
    },
    {
        "question_id": 78,
        "answer_sql": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id;"
    },
    {
        "question_id": 79,
        "answer_sql": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_id HAVING COUNT(DISTINCT T3.order_id) > 1;"
    },
    {
        "question_id": 80,
        "answer_sql": "SELECT COUNT(DISTINCT T2.order_item_id) FROM Orders AS T1 INNER JOIN Order_Items AS T2 ON T1.order_id = T2.order_id"
    },
    {
        "question_id": 81,
        "answer_sql": "SELECT COUNT(DISTINCT T2.order_item_status_code) FROM Orders AS T1 INNER JOIN Order_Items AS T2 ON T1.order_id = T2.order_id;"
    },
    {
        "question_id": 82,
        "answer_sql": "SELECT COUNT(DISTINCT T1.payment_method_code) AS Payment_Methods FROM Customer_Payment_Methods AS T1"
    },
    {
        "question_id": 83,
        "answer_sql": "SELECT COUNT(DISTINCT T2.payment_method_code) AS num_payment_methods FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id;"
    },
    {
        "question_id": 84,
        "answer_sql": "SELECT T1.login_name, T1.login_password FROM Customers AS T1 WHERE T1.phone_number LIKE '+12%';"
    },
    {
        "question_id": 85,
        "answer_sql": "SELECT T1.login_name, T1.login_password FROM Customers AS T1 WHERE T1.phone_number LIKE '+12%';"
    },
    {
        "question_id": 86,
        "answer_sql": "SELECT DISTINCT T1.product_size FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name LIKE '%Dell%';"
    },
    {
        "question_id": 87,
        "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%';"
    },
    {
        "question_id": 88,
        "answer_sql": "SELECT p.product_name, p.product_size, AVG(p.product_price) AS average_price FROM Products p WHERE p.product_price > (SELECT AVG(product_price) FROM Products) GROUP BY p.product_name, p.product_size;"
    },
    {
        "question_id": 89,
        "answer_sql": "SELECT p.product_price, p.product_size FROM Products p WHERE p.product_price > (SELECT AVG(product_price) FROM Products);"
    },
    {
        "question_id": 90,
        "answer_sql": "SELECT COUNT(DISTINCT T1.product_id) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id WHERE T2.order_id IS NULL;"
    },
    {
        "question_id": 91,
        "answer_sql": "SELECT COUNT(DISTINCT o.order_id) FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id WHERE oi.order_item_status_code = '0';"
    },
    {
        "question_id": 92,
        "answer_sql": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 LEFT JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id WHERE T2.payment_method_code IS NULL;"
    },
    {
        "question_id": 93,
        "answer_sql": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id = T2.customer_id;"
    },
    {
        "question_id": 94,
        "answer_sql": "SELECT `order_status_code`, `date_order_placed` FROM `Orders`;"
    },
    {
        "question_id": 95,
        "answer_sql": "SELECT T1.order_status_code, T1.date_order_placed FROM Orders AS T1"
    },
    {
        "question_id": 96,
        "answer_sql": "SELECT c.address_line_1, c.town_city, c.country FROM Customers c WHERE c.country = 'USA';"
    },
    {
        "question_id": 97,
        "answer_sql": ""
    },
    {
        "question_id": 98,
        "answer_sql": ""
    },
    {
        "question_id": 99,
        "answer_sql": ""
    },
    {
        "question_id": 100,
        "answer_sql": "SELECT COUNT(*) FROM Shipment_Items;"
    },
    {
        "question_id": 101,
        "answer_sql": "SELECT COUNT(*) FROM Shipments;"
    },
    {
        "question_id": 102,
        "answer_sql": "SELECT AVG(T1.product_price) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T2.order_id = T3.order_id ;"
    },
    {
        "question_id": 103,
        "answer_sql": "SELECT AVG(T1.product_price) AS average_price FROM Products AS T1 JOIN (SELECT product_id, AVG(product_price) AS average_price FROM Products GROUP BY product_id) AS T2 ON T1.product_id = T2.product_id;"
    },
    {
        "question_id": 104,
        "answer_sql": "SELECT AVG(T1.product_price) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T2.order_id = T3.order_id WHERE T3.order_status_code = 'Completed';"
    },
    {
        "question_id": 105,
        "answer_sql": "SELECT AVG(T1.product_price) FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T2.order_id = T3.order_id GROUP BY T1.product_id;"
    },
    {
        "question_id": 106,
        "answer_sql": "SELECT T1.email_address, T1.town_city, T1.county FROM Customers AS T1 JOIN ( SELECT T2.customer_id, COUNT(*) as count FROM Customers AS T2 GROUP BY T2.customer_id ORDER BY count DESC LIMIT 1 ) AS T2 ON T1.customer_id = T2.customer_id WHERE T2.count = (SELECT MIN(count) FROM ( SELECT T2.customer_id, COUNT(*) as count FROM Customers AS T2 GROUP BY T2.customer_id ORDER BY count DESC LIMIT 1 ) AS T3)"
    },
    {
        "question_id": 107,
        "answer_sql": "SELECT c.email_address, c.town_city, c.country FROM Customers c JOIN Orders o ON c.customer_id = o.customer_id WHERE o.order_id IN ( SELECT o2.order_id FROM Orders o2 GROUP BY o2.order_id HAVING COUNT(o2.customer_id) < ( SELECT COUNT(o1.customer_id) FROM Orders o1 GROUP BY o1.customer_id ) )"
    },
    {
        "question_id": 108,
        "answer_sql": "SELECT T1.date_order_placed FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_id IN ( SELECT T3.customer_id FROM Customers AS T3 JOIN Customer_Payment_Methods AS T4 ON T3.customer_id = T4.customer_id GROUP BY T3.customer_id HAVING COUNT(T4.payment_method_code) >= 2 )"
    },
    {
        "question_id": 109,
        "answer_sql": "SELECT T1.date_order_placed FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_id IN ( SELECT T3.customer_id FROM Customer_Payment_Methods AS T3 GROUP BY T3.customer_id HAVING COUNT(T3.payment_method_code) >= 2 )"
    },
    {
        "question_id": 110,
        "answer_sql": "SELECT T1.order_status_code FROM Orders AS T1 JOIN ( SELECT T2.order_id FROM Orders AS T2 GROUP BY T2.order_id HAVING COUNT(T2.order_id) = ( SELECT COUNT(T3.order_id) FROM Orders AS T3 WHERE T3.order_id = T2.order_id ) ) AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY COUNT(T1.order_id) DESC LIMIT 1;"
    },
    {
        "question_id": 111,
        "answer_sql": "SELECT T1.order_status_code FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_status_code ORDER BY COUNT(T1.order_id) DESC LIMIT 1;"
    },
    {
        "question_id": 112,
        "answer_sql": ""
    },
    {
        "question_id": 113,
        "answer_sql": ""
    },
    {
        "question_id": 114,
        "answer_sql": "SELECT T1.invoice_date, T2.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number = T2.invoice_number GROUP BY T1.invoice_date, T2.invoice_number HAVING COUNT(T2.shipment_id) >= 2;"
    },
    {
        "question_id": 115,
        "answer_sql": ""
    },
    {
        "question_id": 116,
        "answer_sql": ""
    },
    {
        "question_id": 117,
        "answer_sql": "SELECT T2.shipment_tracking_number, T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number = T2.invoice_number;"
    },
    {
        "question_id": 118,
        "answer_sql": "SELECT p.product_color, p.product_description, p.product_size FROM Products p WHERE p.product_price < (SELECT MAX(product_price) FROM Products)"
    },
    {
        "question_id": 119,
        "answer_sql": "SELECT p.product_color, p.product_description, p.product_size FROM Products p WHERE p.product_price < (SELECT MAX(product_price) FROM Products)"
    },
    {
        "question_id": 120,
        "answer_sql": "SELECT Name FROM director WHERE Age > ( SELECT AVG(Age) FROM director );"
    },
    {
        "question_id": 121,
        "answer_sql": "SELECT T1.Name FROM director AS T1 JOIN director_admin AS T2 ON T1.Director_ID = T2.Director_ID JOIN channel AS T3 ON T2.Channel_ID = T3.Channel_ID WHERE T3.Channel_ID = (SELECT Channel_ID FROM program ORDER BY Start_Year ASC LIMIT 1) ORDER BY T1.Age DESC LIMIT 1;"
    },
    {
        "question_id": 122,
        "answer_sql": "SELECT COUNT(DISTINCT channel.Channel_ID) FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID JOIN director ON program.Director_ID = director.Director_ID WHERE program.Title LIKE '%bbc%';"
    },
    {
        "question_id": 123,
        "answer_sql": "SELECT COUNT(DISTINCT channel.Digital_terrestrial_channel) AS Total_Digital_Terrestrial_Channels FROM channel;"
    },
    {
        "question_id": 124,
        "answer_sql": "SELECT Title FROM program ORDER BY Start_Year DESC LIMIT 1;"
    },
    {
        "question_id": 125,
        "answer_sql": "SELECT d.Name FROM director d JOIN program p ON d.Director_ID = p.Director_ID GROUP BY d.Name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 126,
        "answer_sql": "SELECT d.Name, d.Age FROM director d JOIN program p ON d.Director_ID = p.Director_ID GROUP BY d.Director_ID, d.Name, d.Age ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 127,
        "answer_sql": ""
    },
    {
        "question_id": 128,
        "answer_sql": "SELECT T1.Name, T1.Internet FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID GROUP BY T1.Channel_ID HAVING COUNT(T2.Program_ID) > 1;"
    },
    {
        "question_id": 129,
        "answer_sql": "SELECT c.Name, COUNT(*) as Program_Count FROM channel c JOIN program p ON c.Channel_ID = p.Channel_ID GROUP BY c.Channel_ID"
    },
    {
        "question_id": 130,
        "answer_sql": "SELECT COUNT(DISTINCT channel.Channel_ID) FROM channel WHERE channel.Channel_ID NOT IN (SELECT DISTINCT program.Channel_ID FROM program);"
    },
    {
        "question_id": 131,
        "answer_sql": "SELECT T2.Name FROM program AS T1 JOIN director AS T2 ON T1.Director_ID = T2.Director_ID JOIN channel AS T3 ON T1.Channel_ID = T3.Channel_ID WHERE T1.Title = 'Dracula' ORDER BY T2.Age DESC LIMIT 1;"
    },
    {
        "question_id": 132,
        "answer_sql": "SELECT T1.Name, T1.Internet FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN director AS T3 ON T2.Director_ID = T3.Director_ID JOIN director_admin AS T4 ON T3.Director_ID = T4.Director_ID WHERE T4.Channel_ID IN ( SELECT T1.Channel_ID FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN director AS T3 ON T2.Director_ID = T3.Director_ID JOIN director_admin AS T4 ON T3.Director_ID = T4.Director_ID GROUP BY T1.Channel_ID ORDER BY COUNT(T4.Channel_ID) DESC LIMIT 1 )"
    },
    {
        "question_id": 133,
        "answer_sql": "SELECT d.Name FROM director d JOIN program p ON d.Director_ID = p.Director_ID JOIN channel c ON p.Channel_ID = c.Channel_ID WHERE d.Age BETWEEN 30 AND 60;"
    },
    {
        "question_id": 134,
        "answer_sql": ""
    },
    {
        "question_id": 135,
        "answer_sql": "SELECT T1.Channel_ID, T1.Name FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID JOIN director AS T3 ON T2.Director_ID = T3.Director_ID WHERE T3.Name != 'Hank Baskett'"
    },
    {
        "question_id": 136,
        "answer_sql": "SELECT COUNT(DISTINCT Radio_ID) FROM city_channel_radio;"
    },
    {
        "question_id": 137,
        "answer_sql": ""
    },
    {
        "question_id": 138,
        "answer_sql": ""
    },
    {
        "question_id": 139,
        "answer_sql": "SELECT T1.Station_name FROM city_channel T1 JOIN city_channel_radio T2 ON T1.ID = T2.City_channel_ID JOIN tv_show T3 ON T1.ID = T3.tv_show_ID WHERE T1.Affiliation != 'ABC'"
    },
    {
        "question_id": 140,
        "answer_sql": ""
    },
    {
        "question_id": 141,
        "answer_sql": ""
    },
    {
        "question_id": 142,
        "answer_sql": "SELECT AVG(ERP_kW) FROM radio;"
    },
    {
        "question_id": 143,
        "answer_sql": "SELECT DISTINCT T1.Affiliation, COUNT(T1.Affiliation) AS num_of_channels FROM city_channel T1 GROUP BY T1.Affiliation"
    },
    {
        "question_id": 144,
        "answer_sql": "SELECT T1.Affiliation FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID JOIN tv_show AS T3 ON T1.ID = T3.tv_show_ID GROUP BY T1.Affiliation ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 145,
        "answer_sql": ""
    },
    {
        "question_id": 146,
        "answer_sql": "SELECT DISTINCT c.City, c.Station_name FROM city_channel c ORDER BY c.Station_name ASC;"
    },
    {
        "question_id": 147,
        "answer_sql": ""
    },
    {
        "question_id": 148,
        "answer_sql": ""
    },
    {
        "question_id": 149,
        "answer_sql": ""
    },
    {
        "question_id": 150,
        "answer_sql": ""
    },
    {
        "question_id": 151,
        "answer_sql": ""
    },
    {
        "question_id": 152,
        "answer_sql": "SELECT v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE v.Power > 6000 ORDER BY v.Top_Speed DESC LIMIT 1;"
    },
    {
        "question_id": 153,
        "answer_sql": "SELECT T2.Name FROM vehicle_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Citizenship = 'United States';"
    },
    {
        "question_id": 154,
        "answer_sql": "SELECT driver.Name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE driver.Citizenship = 'United States';"
    },
    {
        "question_id": 155,
        "answer_sql": "SELECT v.Driver_ID, COUNT(*) as NumberOfVehicles FROM vehicle_driver v JOIN vehicle w ON v.Vehicle_ID = w.Vehicle_ID GROUP BY v.Driver_ID ORDER BY NumberOfVehicles DESC LIMIT 1;"
    },
    {
        "question_id": 156,
        "answer_sql": "SELECT T1.Driver_ID, SUM(T2.Top_Speed) AS Total_Vehicles FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Driver_ID ORDER BY Total_Vehicles DESC LIMIT 1;"
    },
    {
        "question_id": 157,
        "answer_sql": "SELECT MAX(T2.Power) AS MaxPower, AVG(T2.Power) AS AveragePower FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID WHERE T1.Driver_ID = (SELECT Driver_ID FROM driver WHERE Citizenship = 'Zhuzhou')"
    },
    {
        "question_id": 158,
        "answer_sql": "SELECT MAX(T2.Power) AS MaxPower, AVG(T2.Power) AS AveragePower FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T3.Citizenship = 'Zhuzhou'"
    },
    {
        "question_id": 159,
        "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 160,
        "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 161,
        "answer_sql": "SELECT Top_Speed, Power FROM vehicle WHERE Build_Year = '1996';"
    },
    {
        "question_id": 162,
        "answer_sql": "SELECT top_speed, power FROM vehicle WHERE Build_Year = '1996';"
    },
    {
        "question_id": 163,
        "answer_sql": ""
    },
    {
        "question_id": 164,
        "answer_sql": ""
    },
    {
        "question_id": 165,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Driver_ID) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T2.Build_Year = '2012'"
    },
    {
        "question_id": 166,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Driver_ID) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T2.Build_Year = '2012'"
    },
    {
        "question_id": 167,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Driver_ID) FROM vehicle_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Racing_Series = 'NASCAR';"
    },
    {
        "question_id": 168,
        "answer_sql": ""
    },
    {
        "question_id": 169,
        "answer_sql": "SELECT AVG(T2.Top_Speed) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID;"
    },
    {
        "question_id": 170,
        "answer_sql": "SELECT AVG(T2.Top_Speed) AS Average_Top_Speed FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID;"
    },
    {
        "question_id": 171,
        "answer_sql": "SELECT DISTINCT driver.Name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Power > 5000;"
    },
    {
        "question_id": 172,
        "answer_sql": "SELECT driver.Name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Power > 5000;"
    },
    {
        "question_id": 173,
        "answer_sql": "SELECT v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE v.Top_Speed > 150 OR v.Total_Production > 100;"
    },
    {
        "question_id": 174,
        "answer_sql": "SELECT v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Total_Production > 100 OR v.Top_Speed > 150;"
    },
    {
        "question_id": 175,
        "answer_sql": "SELECT v.Model, v.Build_Year FROM vehicle v WHERE v.Model LIKE '%DJ%';"
    },
    {
        "question_id": 176,
        "answer_sql": ""
    },
    {
        "question_id": 177,
        "answer_sql": ""
    },
    {
        "question_id": 178,
        "answer_sql": "SELECT v.Model FROM vehicle v WHERE v.Vehicle_ID NOT IN (SELECT vd.Vehicle_ID FROM vehicle_driver vd)"
    },
    {
        "question_id": 179,
        "answer_sql": ""
    },
    {
        "question_id": 180,
        "answer_sql": ""
    },
    {
        "question_id": 181,
        "answer_sql": ""
    },
    {
        "question_id": 182,
        "answer_sql": "SELECT v.Model, v.Build_Year FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE vd.Driver_ID IN ( SELECT Driver_ID FROM vehicle_driver GROUP BY Driver_ID HAVING COUNT(DISTINCT Driver_ID) > 2 ) OR d.Name = 'Jeff Gordon';"
    },
    {
        "question_id": 183,
        "answer_sql": "SELECT COUNT(DISTINCT Vehicle_ID) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle)"
    },
    {
        "question_id": 184,
        "answer_sql": "SELECT COUNT(DISTINCT V.Vehicle_ID) FROM vehicle V JOIN vehicle_driver VD ON V.Vehicle_ID = VD.Vehicle_ID JOIN driver D ON VD.Driver_ID = D.Driver_ID WHERE V.Top_Speed = (SELECT MAX(T2.Top_Speed) FROM vehicle T2);"
    },
    {
        "question_id": 185,
        "answer_sql": "SELECT Name FROM driver ORDER BY Name;"
    },
    {
        "question_id": 186,
        "answer_sql": "SELECT Name FROM driver ORDER BY Name ASC;"
    },
    {
        "question_id": 187,
        "answer_sql": "SELECT DISTINCT T1.Citizenship, COUNT(T2.Driver_ID) AS Number_of_drivers FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Citizenship"
    },
    {
        "question_id": 188,
        "answer_sql": "SELECT DISTINCT T1.Citizenship, COUNT(T2.Driver_ID) AS Series_Count FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Citizenship"
    },
    {
        "question_id": 189,
        "answer_sql": "SELECT d.Name, d.Citizenship FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Model = 'DJ1';"
    },
    {
        "question_id": 190,
        "answer_sql": "SELECT driver.Name, driver.Citizenship FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Model = 'DJ1';"
    },
    {
        "question_id": 191,
        "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM vehicle_driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE Power < 100))"
    },
    {
        "question_id": 192,
        "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM vehicle_driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE Top_Speed = 0))"
    },
    {
        "question_id": 193,
        "answer_sql": "SELECT COUNT(*) FROM Exams;"
    },
    {
        "question_id": 194,
        "answer_sql": "SELECT COUNT(*) FROM Exams;"
    },
    {
        "question_id": 195,
        "answer_sql": "SELECT DISTINCT T1.Subject_Code FROM Exams AS T1 JOIN Questions_in_Exams AS T2 ON T1.Exam_ID = T2.Exam_ID GROUP BY T1.Subject_Code ORDER BY T1.Subject_Code ASC;"
    },
    {
        "question_id": 196,
        "answer_sql": "SELECT DISTINCT T1.Subject_Code FROM Exams AS T1 INNER JOIN Questions_in_Exams AS T2 ON T1.Exam_ID = T2.Exam_ID GROUP BY T1.Subject_Code ORDER BY T1.Subject_Code ASC;"
    },
    {
        "question_id": 197,
        "answer_sql": "SELECT DISTINCT T1.Exam_Name, T1.Exam_Date FROM Exams AS T1 WHERE T1.Subject_Code NOT IN ('Database')"
    },
    {
        "question_id": 198,
        "answer_sql": "SELECT DISTINCT T1.Exam_Name, T1.Exam_Date FROM Exams AS T1 WHERE T1.Subject_Code NOT IN ('Database')"
    },
    {
        "question_id": 199,
        "answer_sql": ""
    },
    {
        "question_id": 200,
        "answer_sql": "SELECT DISTINCT T1.Exam_Date FROM Exams AS T1 JOIN Questions_in_Exams AS T2 ON T1.Exam_ID = T2.Exam_ID JOIN Valid_Answers AS T3 ON T2.Question_ID = T3.Question_ID WHERE T1.Subject_Code LIKE '%data%' ORDER BY T1.Exam_Date DESC;"
    },
    {
        "question_id": 201,
        "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) FROM Questions GROUP BY Type_of_Question_Code;"
    },
    {
        "question_id": 202,
        "answer_sql": "SELECT T1.Type_of_Question_Code, COUNT(*) AS Question_Count FROM Questions AS T1 JOIN Questions_in_Exams AS T2 ON T1.Question_ID = T2.Question_ID GROUP BY T1.Type_of_Question_Code;"
    },
    {
        "question_id": 203,
        "answer_sql": ""
    },
    {
        "question_id": 204,
        "answer_sql": ""
    },
    {
        "question_id": 205,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Comments) AS Total_Comments FROM Student_Answers AS T1 JOIN Student_Answers AS T2 ON T1.Student_Answer_ID = T2.Student_Answer_ID;"
    },
    {
        "question_id": 206,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Comments) AS Total_Comments FROM Student_Answers AS T1 JOIN Student_Answers AS T2 ON T1.Student_Answer_ID = T2.Student_Answer_ID;"
    },
    {
        "question_id": 207,
        "answer_sql": ""
    },
    {
        "question_id": 208,
        "answer_sql": "SELECT T1.Student_Answer_Text, COUNT(*) AS Frequency FROM Student_Answers AS T1 JOIN Exams AS T2 ON T1.Exam_ID = T2.Exam_ID JOIN Questions_in_Exams AS T3 ON T2.Exam_ID = T3.Exam_ID JOIN Questions AS T4 ON T3.Question_ID = T4.Question_ID GROUP BY T1.Student_Answer_Text ORDER BY Frequency DESC;"
    },
    {
        "question_id": 209,
        "answer_sql": ""
    },
    {
        "question_id": 210,
        "answer_sql": ""
    },
    {
        "question_id": 211,
        "answer_sql": "SELECT Students.Email_Adress, Student_Answers.Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID JOIN Exams ON Student_Answers.Exam_ID = Exams.Exam_ID JOIN Questions_in_Exams ON Exams.Exam_ID = Questions_in_Exams.Exam_ID JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID JOIN Valid_Answers ON Questions_in_Exams.Question_ID = Valid_Answers.Question_ID ORDER BY Student_Answers.Date_of_Answer DESC;"
    },
    {
        "question_id": 212,
        "answer_sql": ""
    },
    {
        "question_id": 213,
        "answer_sql": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 214,
        "answer_sql": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 215,
        "answer_sql": "SELECT S.First_Name FROM Students S JOIN Student_Answers SA ON S.Student_ID = SA.Student_ID GROUP BY S.Student_ID HAVING COUNT(DISTINCT SA.Student_Answer_ID) >= 2;"
    },
    {
        "question_id": 216,
        "answer_sql": "SELECT s.First_Name FROM Students s JOIN Student_Answers sa ON s.Student_ID = sa.Student_ID GROUP BY s.Student_ID HAVING COUNT(sa.Student_Answer_ID) > 1;"
    },
    {
        "question_id": 217,
        "answer_sql": ""
    },
    {
        "question_id": 218,
        "answer_sql": ""
    },
    {
        "question_id": 219,
        "answer_sql": "SELECT DISTINCT S.Last_Name FROM Students S WHERE S.Gender_MFU != 'M';"
    },
    {
        "question_id": 220,
        "answer_sql": "SELECT DISTINCT S.Last_Name FROM Students S WHERE S.Gender_MFU != 'M';"
    },
    {
        "question_id": 221,
        "answer_sql": "SELECT Gender_MFU, COUNT(*) AS Number_of_students FROM Students GROUP BY Gender_MFU;"
    },
    {
        "question_id": 222,
        "answer_sql": "SELECT Gender_MFU, COUNT(*) AS Student_Count FROM Students GROUP BY Gender_MFU;"
    },
    {
        "question_id": 223,
        "answer_sql": "SELECT S.Last_Name FROM Students S WHERE S.Gender_MFU = 'F' OR S.Gender_MFU = 'M';"
    },
    {
        "question_id": 224,
        "answer_sql": "SELECT S.Last_Name FROM Students S WHERE S.Gender_MFU = 'F' OR S.Gender_MFU = 'M';"
    },
    {
        "question_id": 225,
        "answer_sql": "SELECT DISTINCT S.First_Name FROM Students S WHERE NOT EXISTS ( SELECT 1 FROM Student_Answers SA WHERE SA.Student_ID = S.Student_ID );"
    },
    {
        "question_id": 226,
        "answer_sql": "SELECT DISTINCT S.First_Name FROM Students S WHERE S.Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)"
    },
    {
        "question_id": 227,
        "answer_sql": ""
    },
    {
        "question_id": 228,
        "answer_sql": ""
    },
    {
        "question_id": 229,
        "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(Question_ID) >= 3;"
    },
    {
        "question_id": 230,
        "answer_sql": ""
    },
    {
        "question_id": 231,
        "answer_sql": "SELECT * FROM Students;"
    },
    {
        "question_id": 232,
        "answer_sql": ""
    },
    {
        "question_id": 233,
        "answer_sql": "SELECT COUNT(address_id) FROM Addresses;"
    },
    {
        "question_id": 234,
        "answer_sql": "SELECT COUNT(*) FROM Addresses;"
    },
    {
        "question_id": 235,
        "answer_sql": "SELECT address_id, address_details FROM Addresses;"
    },
    {
        "question_id": 236,
        "answer_sql": "SELECT address_id, address_details FROM Addresses;"
    },
    {
        "question_id": 237,
        "answer_sql": "SELECT COUNT(*) FROM Products;"
    },
    {
        "question_id": 238,
        "answer_sql": "SELECT COUNT(*) FROM Products;"
    },
    {
        "question_id": 239,
        "answer_sql": "SELECT `product_id`, `product_type_code`, `product_name` FROM `Products`;"
    },
    {
        "question_id": 240,
        "answer_sql": "SELECT `product_id`, `product_type_code`, `product_name` FROM `Products`;"
    },
    {
        "question_id": 241,
        "answer_sql": "SELECT product_price FROM Products WHERE product_name = 'Monitor';"
    },
    {
        "question_id": 242,
        "answer_sql": ""
    },
    {
        "question_id": 243,
        "answer_sql": "SELECT min(product_price), avg(product_price), max(product_price) FROM Products;"
    },
    {
        "question_id": 244,
        "answer_sql": "SELECT min(product_price), avg(product_price), max(product_price) FROM Products;"
    },
    {
        "question_id": 245,
        "answer_sql": ""
    },
    {
        "question_id": 246,
        "answer_sql": ""
    },
    {
        "question_id": 247,
        "answer_sql": ""
    },
    {
        "question_id": 248,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';"
    },
    {
        "question_id": 249,
        "answer_sql": "SELECT p.product_name, AVG(p.product_price) AS avg_price FROM Products p WHERE p.product_price > (SELECT AVG(product_price) FROM Products) GROUP BY p.product_name;"
    },
    {
        "question_id": 250,
        "answer_sql": "SELECT p.product_name FROM Products p WHERE p.product_price > ( SELECT AVG(p2.product_price) FROM Products p2 );"
    },
    {
        "question_id": 251,
        "answer_sql": "SELECT p.product_name FROM Products p WHERE p.product_price > ( SELECT AVG(p2.product_price) FROM Products p2 WHERE p2.product_type_code = p.product_type_code );"
    },
    {
        "question_id": 252,
        "answer_sql": "SELECT p.product_name FROM Products p WHERE p.product_price > (SELECT AVG(p.product_price) FROM Products p)"
    },
    {
        "question_id": 253,
        "answer_sql": "SELECT p.product_name FROM Products p WHERE p.product_type_code = 'Clothes' ORDER BY p.product_price DESC LIMIT 1;"
    },
    {
        "question_id": 254,
        "answer_sql": "SELECT p.product_name FROM Products p WHERE p.product_type_code = 'Clothes' ORDER BY p.product_price DESC LIMIT 1;"
    },
    {
        "question_id": 255,
        "answer_sql": "SELECT p.product_id, p.product_name FROM Products p WHERE p.product_type_code = 'Hardware' ORDER BY p.product_price ASC LIMIT 1;"
    },
    {
        "question_id": 256,
        "answer_sql": ""
    },
    {
        "question_id": 257,
        "answer_sql": "SELECT product_name FROM Products ORDER BY product_price DESC;"
    },
    {
        "question_id": 258,
        "answer_sql": "SELECT p.product_name FROM Products p ORDER BY p.product_price DESC;"
    },
    {
        "question_id": 259,
        "answer_sql": "SELECT `product_type_code`, `product_name`, `product_price` FROM `Products` ORDER BY `product_price` ASC;"
    },
    {
        "question_id": 260,
        "answer_sql": "SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC;"
    },
    {
        "question_id": 261,
        "answer_sql": "SELECT p.product_type_code, COUNT(*) AS product_count FROM Products p GROUP BY p.product_type_code;"
    },
    {
        "question_id": 262,
        "answer_sql": "SELECT product_type_code, COUNT(product_id) AS product_count FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 263,
        "answer_sql": "SELECT product_type_code, AVG(product_price) AS average_price FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 264,
        "answer_sql": "SELECT p.product_type_code, AVG(p.product_price) AS avg_price FROM Products p GROUP BY p.product_type_code;"
    },
    {
        "question_id": 265,
        "answer_sql": ""
    },
    {
        "question_id": 266,
        "answer_sql": "SELECT DISTINCT p.product_type_code FROM Products p WHERE p.product_type_code IN ( SELECT t1.product_type_code FROM Products t1 GROUP BY t1.product_type_code HAVING COUNT(t1.product_id) > 1 );"
    },
    {
        "question_id": 267,
        "answer_sql": "SELECT product_type_code, COUNT(*) as product_count FROM Products GROUP BY product_type_code ORDER BY product_count DESC LIMIT 1;"
    },
    {
        "question_id": 268,
        "answer_sql": "SELECT product_type_code, COUNT(*) AS product_quantity FROM Products GROUP BY product_type_code ORDER BY product_quantity DESC LIMIT 1;"
    },
    {
        "question_id": 269,
        "answer_sql": "SELECT COUNT(DISTINCT customer_id) FROM Customers;"
    },
    {
        "question_id": 270,
        "answer_sql": "SELECT COUNT(DISTINCT customer_id) FROM Customers;"
    },
    {
        "question_id": 271,
        "answer_sql": "SELECT `Customers`.`customer_id`, `Customers`.`customer_name` FROM `Customers` ;"
    },
    {
        "question_id": 272,
        "answer_sql": "SELECT `customer_id`, `customer_name` FROM `Customers`"
    },
    {
        "question_id": 273,
        "answer_sql": "SELECT T1.customer_address, T1.customer_phone, T1.customer_email FROM Customers AS T1 INNER JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeromy';"
    },
    {
        "question_id": 274,
        "answer_sql": "SELECT c.customer_name, c.customer_phone, c.customer_email FROM Customers c WHERE c.customer_name = 'Jeromy';"
    },
    {
        "question_id": 275,
        "answer_sql": ""
    },
    {
        "question_id": 276,
        "answer_sql": ""
    },
    {
        "question_id": 277,
        "answer_sql": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 278,
        "answer_sql": "SELECT T1.payment_method_code FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id GROUP BY T1.customer_id, T1.payment_method_code ORDER BY COUNT(T3.order_id) DESC LIMIT 1;"
    },
    {
        "question_id": 279,
        "answer_sql": "SELECT DISTINCT c.customer_name FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id GROUP BY c.customer_id, c.customer_name ORDER BY COUNT(co.customer_id) ASC LIMIT 1;"
    },
    {
        "question_id": 280,
        "answer_sql": "SELECT c.customer_name FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id GROUP BY c.customer_id HAVING COUNT(DISTINCT co.order_id) = 1 ORDER BY COUNT(DISTINCT co.order_id) DESC LIMIT 10;"
    },
    {
        "question_id": 281,
        "answer_sql": "SELECT T1.payment_method_code, T1.customer_number FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeromy';"
    },
    {
        "question_id": 282,
        "answer_sql": "SELECT T1.payment_method_code, T1.customer_number FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'Jeromy';"
    },
    {
        "question_id": 283,
        "answer_sql": "SELECT DISTINCT T1.payment_method_code FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id"
    },
    {
        "question_id": 284,
        "answer_sql": "SELECT DISTINCT T1.payment_method_code FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id JOIN Order_Items AS T3 ON T2.order_id = T3.order_id"
    },
    {
        "question_id": 285,
        "answer_sql": "SELECT `Products`.`product_id`, `Products`.`product_type_code`, `Products`.`product_name` FROM `Products` ORDER BY `Products`.`product_name`;"
    },
    {
        "question_id": 286,
        "answer_sql": "SELECT DISTINCT T1.product_id, T1.product_type_code FROM Products AS T1 ORDER BY T1.product_name;"
    },
    {
        "question_id": 287,
        "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 288,
        "answer_sql": ""
    },
    {
        "question_id": 289,
        "answer_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "question_id": 290,
        "answer_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "question_id": 291,
        "answer_sql": "SELECT CO.order_id, CO.order_date, CO.order_status_code FROM Customer_Orders CO WHERE CO.customer_id = (SELECT DISTINCT C.customer_id FROM Customers C WHERE C.customer_name = 'Jeromy');"
    },
    {
        "question_id": 292,
        "answer_sql": ""
    },
    {
        "question_id": 293,
        "answer_sql": ""
    },
    {
        "question_id": 294,
        "answer_sql": ""
    },
    {
        "question_id": 295,
        "answer_sql": "SELECT c.customer_id, c.customer_name, c.customer_phone, c.customer_email FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id GROUP BY c.customer_id, c.customer_name, c.customer_phone, c.customer_email ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 296,
        "answer_sql": "SELECT c.customer_id, c.customer_name, c.customer_phone, c.customer_email FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id GROUP BY c.customer_id, c.customer_name, c.customer_phone, c.customer_email ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 297,
        "answer_sql": "SELECT T1.order_status_code, COUNT(*) AS order_count FROM Customer_Orders AS T1 JOIN Customer_Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_status_code"
    },
    {
        "question_id": 298,
        "answer_sql": "SELECT T1.order_status_code, COUNT(*) AS order_count FROM Customer_Orders AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.order_status_code"
    },
    {
        "question_id": 299,
        "answer_sql": "SELECT T1.order_status_code FROM Customer_Orders AS T1 JOIN Customer_Orders AS T2 ON T1.order_id = T2.order_id WHERE T1.order_status_code = (SELECT MAX(order_status_code) FROM Customer_Orders) GROUP BY T1.order_status_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 300,
        "answer_sql": "SELECT T1.order_status_code FROM Customer_Orders AS T1 JOIN ( SELECT order_id, COUNT(*) AS order_count FROM Order_Items GROUP BY order_id ORDER BY order_count DESC ) AS T2 ON T1.order_id = T2.order_id ORDER BY T2.order_count DESC LIMIT 1;"
    },
    {
        "question_id": 301,
        "answer_sql": "SELECT COUNT(DISTINCT customer_id) FROM Customer_Orders WHERE order_status_code = '0'"
    },
    {
        "question_id": 302,
        "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c WHERE c.customer_id NOT IN (SELECT o.customer_id FROM Customer_Orders o);"
    },
    {
        "question_id": 303,
        "answer_sql": "SELECT DISTINCT p.product_name FROM Products p WHERE p.product_id NOT IN ( SELECT oi.product_id FROM Order_Items oi );"
    },
    {
        "question_id": 304,
        "answer_sql": "SELECT DISTINCT p.product_name FROM Products p WHERE p.product_id NOT IN ( SELECT o.order_id FROM Customer_Orders o GROUP BY o.order_id HAVING COUNT(*) > 1 );"
    },
    {
        "question_id": 305,
        "answer_sql": ""
    },
    {
        "question_id": 306,
        "answer_sql": "SELECT COUNT(*) FROM `Products` WHERE `product_type_code` = 'Monitor';"
    },
    {
        "question_id": 307,
        "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE p.product_name = 'Monitor';"
    },
    {
        "question_id": 308,
        "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE p.product_type_code = 'Monitor';"
    },
    {
        "question_id": 309,
        "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id;"
    },
    {
        "question_id": 310,
        "answer_sql": "SELECT COUNT(DISTINCT T1.customer_id) FROM Customers AS T1 JOIN Customer_Orders AS T2 ON T1.customer_id = T2.customer_id;"
    },
    {
        "question_id": 311,
        "answer_sql": "SELECT DISTINCT c.customer_id FROM Customers c WHERE c.customer_id NOT IN (SELECT o.customer_id FROM Customer_Orders o);"
    },
    {
        "question_id": 312,
        "answer_sql": "SELECT DISTINCT c.customer_id FROM Customers c WHERE c.customer_id NOT IN (SELECT o.customer_id FROM Customer_Orders o);"
    },
    {
        "question_id": 313,
        "answer_sql": ""
    },
    {
        "question_id": 314,
        "answer_sql": ""
    },
    {
        "question_id": 315,
        "answer_sql": "SELECT COUNT(*) FROM building;"
    },
    {
        "question_id": 316,
        "answer_sql": "SELECT COUNT(*) FROM building;"
    },
    {
        "question_id": 317,
        "answer_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC;"
    },
    {
        "question_id": 318,
        "answer_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC;"
    },
    {
        "question_id": 319,
        "answer_sql": "SELECT Address FROM building ORDER BY Completed_Year DESC;"
    },
    {
        "question_id": 320,
        "answer_sql": "SELECT b.Address FROM building b ORDER BY b.Completed_Year DESC;"
    },
    {
        "question_id": 321,
        "answer_sql": "SELECT MAX(Building_ID) FROM building WHERE Completed_Year < 1980;"
    },
    {
        "question_id": 322,
        "answer_sql": ""
    },
    {
        "question_id": 323,
        "answer_sql": "SELECT AVG(Population) FROM region;"
    },
    {
        "question_id": 324,
        "answer_sql": "SELECT AVG(Population) FROM region;"
    },
    {
        "question_id": 325,
        "answer_sql": "SELECT Name FROM region ORDER BY Name ASC;"
    },
    {
        "question_id": 326,
        "answer_sql": "SELECT DISTINCT T1.Name FROM region AS T1 ORDER BY T1.Name;"
    },
    {
        "question_id": 327,
        "answer_sql": ""
    },
    {
        "question_id": 328,
        "answer_sql": "SELECT T1.Capital FROM region AS T1 WHERE T1.Area > 10000;"
    },
    {
        "question_id": 329,
        "answer_sql": "SELECT T1.Capital FROM region AS T1 JOIN building AS T2 ON T1.Region_ID = T2.Region_ID WHERE T2.Number_of_Stories = (SELECT MAX(Number_of_Stories) FROM building) ORDER BY T1.Population DESC LIMIT 1;"
    },
    {
        "question_id": 330,
        "answer_sql": "SELECT r.Name, r.Capital FROM region r WHERE r.Population = (SELECT MAX(population) FROM region);"
    },
    {
        "question_id": 331,
        "answer_sql": "SELECT Region.Name FROM region JOIN building ON region.Region_ID = building.Region_ID ORDER BY building.Number_of_Stories DESC LIMIT 5;"
    },
    {
        "question_id": 332,
        "answer_sql": ""
    },
    {
        "question_id": 333,
        "answer_sql": "SELECT b.Name, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 334,
        "answer_sql": "SELECT b.Name, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 335,
        "answer_sql": "SELECT DISTINCT r.Name FROM region r JOIN building b ON r.Region_ID = b.Region_ID;"
    },
    {
        "question_id": 336,
        "answer_sql": ""
    },
    {
        "question_id": 337,
        "answer_sql": "SELECT r.Name FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 338,
        "answer_sql": "SELECT r.Name, r.Capital FROM region AS r JOIN building AS b ON r.Region_ID = b.Region_ID ORDER BY b.Number_of_Stories DESC LIMIT 1;"
    },
    {
        "question_id": 339,
        "answer_sql": "SELECT b.Address, r.Capital FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 340,
        "answer_sql": "SELECT b.Address, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 341,
        "answer_sql": "SELECT COUNT(Number_of_Stories) FROM building WHERE Region_ID IN (SELECT Region_ID FROM region WHERE Name = 'Abruzzo')"
    },
    {
        "question_id": 342,
        "answer_sql": "SELECT b.Name, COUNT(*) AS Number_of_Stories FROM building b JOIN region r ON b.Region_ID = r.Region_ID WHERE r.Name = 'Abruzzo' GROUP BY b.Name;"
    },
    {
        "question_id": 343,
        "answer_sql": "SELECT Completed_Year, COUNT(*) AS Building_Completed FROM building JOIN region ON building.Region_ID = region.Region_ID GROUP BY Completed_Year ORDER BY Completed_Year;"
    },
    {
        "question_id": 344,
        "answer_sql": ""
    },
    {
        "question_id": 345,
        "answer_sql": "SELECT MAX(completed_year) FROM building JOIN region ON building.Region_ID = region.Region_ID;"
    },
    {
        "question_id": 346,
        "answer_sql": "SELECT MAX(completed_year) FROM building JOIN region ON building.Region_ID = region.Region_ID;"
    },
    {
        "question_id": 347,
        "answer_sql": "SELECT DISTINCT r.Name FROM region r WHERE r.Region_ID NOT IN (SELECT b.Region_ID FROM building b);"
    },
    {
        "question_id": 348,
        "answer_sql": "SELECT DISTINCT r.Name FROM region r WHERE r.Region_ID NOT IN (SELECT b.Region_ID FROM building b);"
    },
    {
        "question_id": 349,
        "answer_sql": "SELECT DISTINCT b.Completed_Year FROM building b JOIN ( SELECT Building_ID FROM building WHERE Number_of_Stories > 20 ) b1 ON b.Building_ID = b1.Building_ID WHERE b1.Building_ID NOT IN ( SELECT Building_ID FROM building WHERE Number_of_Stories < 15 );"
    },
    {
        "question_id": 350,
        "answer_sql": ""
    },
    {
        "question_id": 351,
        "answer_sql": "SELECT DISTINCT b.Address FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 352,
        "answer_sql": "SELECT DISTINCT b.Address FROM building AS b JOIN region AS r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 353,
        "answer_sql": "SELECT Completed_Year FROM building WHERE Building_ID IN ( SELECT Building_ID FROM building GROUP BY Building_ID HAVING SUM(Number_of_Stories) = ( SELECT MAX(Number_of_Stories) FROM building ) ) ORDER BY Completed_Year DESC;"
    },
    {
        "question_id": 354,
        "answer_sql": "SELECT b.Name, b.Completed_Year FROM building b ORDER BY b.Number_of_Stories DESC;"
    },
    {
        "question_id": 355,
        "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC;"
    },
    {
        "question_id": 356,
        "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC;"
    },
    {
        "question_id": 357,
        "answer_sql": "SELECT COUNT(Service_ID) FROM Services;"
    },
    {
        "question_id": 358,
        "answer_sql": "SELECT COUNT(Service_ID) FROM Services;"
    },
    {
        "question_id": 359,
        "answer_sql": "SELECT DISTINCT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 360,
        "answer_sql": "SELECT DISTINCT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 361,
        "answer_sql": ""
    },
    {
        "question_id": 362,
        "answer_sql": ""
    },
    {
        "question_id": 363,
        "answer_sql": ""
    },
    {
        "question_id": 364,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN ( SELECT Service_ID FROM Customer_Interactions GROUP BY Service_ID HAVING COUNT(Customer_ID) > 3 ) AS MoreThan3Interactions ON Services.Service_ID = MoreThan3Interactions.Service_ID GROUP BY Services.Service_ID ORDER BY MoreThan3Interactions.Service_ID DESC;"
    },
    {
        "question_id": 365,
        "answer_sql": ""
    },
    {
        "question_id": 366,
        "answer_sql": ""
    },
    {
        "question_id": 367,
        "answer_sql": ""
    },
    {
        "question_id": 368,
        "answer_sql": ""
    },
    {
        "question_id": 369,
        "answer_sql": ""
    },
    {
        "question_id": 370,
        "answer_sql": ""
    },
    {
        "question_id": 371,
        "answer_sql": ""
    },
    {
        "question_id": 372,
        "answer_sql": ""
    },
    {
        "question_id": 373,
        "answer_sql": ""
    },
    {
        "question_id": 374,
        "answer_sql": ""
    },
    {
        "question_id": 375,
        "answer_sql": ""
    },
    {
        "question_id": 376,
        "answer_sql": ""
    },
    {
        "question_id": 377,
        "answer_sql": ""
    },
    {
        "question_id": 378,
        "answer_sql": ""
    },
    {
        "question_id": 379,
        "answer_sql": ""
    },
    {
        "question_id": 380,
        "answer_sql": ""
    },
    {
        "question_id": 381,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID WHERE Channels.Channel_Details = '15 ij';"
    },
    {
        "question_id": 382,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID WHERE Channels.Channel_Details = '15 ij';"
    },
    {
        "question_id": 383,
        "answer_sql": ""
    },
    {
        "question_id": 384,
        "answer_sql": ""
    },
    {
        "question_id": 385,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Integration_Platform_ID) AS Successful_Integration_Platforms FROM Integration_Platform AS T1 JOIN Customer_Interactions AS T2 ON T1.Integration_Platform_Details = T2.Services_and_Channels_Details WHERE T2.Status_Code = 'S';"
    },
    {
        "question_id": 386,
        "answer_sql": ""
    },
    {
        "question_id": 387,
        "answer_sql": ""
    },
    {
        "question_id": 388,
        "answer_sql": ""
    },
    {
        "question_id": 389,
        "answer_sql": "SELECT s.Service_Details FROM Services s WHERE s.Service_ID NOT IN ( SELECT cs.Service_ID FROM Customer_Interactions ci JOIN Customers_and_Services cs ON ci.Customer_ID = cs.Customer_ID GROUP BY cs.Service_ID HAVING COUNT(DISTINCT ci.Customer_ID) = 0 );"
    },
    {
        "question_id": 390,
        "answer_sql": "SELECT Services.Service_Details FROM Services WHERE Services.Service_ID NOT IN ( SELECT Services.Service_ID FROM Customers_and_Services JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = '1' );"
    },
    {
        "question_id": 391,
        "answer_sql": ""
    },
    {
        "question_id": 392,
        "answer_sql": ""
    },
    {
        "question_id": 393,
        "answer_sql": ""
    },
    {
        "question_id": 394,
        "answer_sql": ""
    },
    {
        "question_id": 395,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 396,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 397,
        "answer_sql": "SELECT T1.name FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id JOIN Discount AS T3 ON T2.discount_id = T3.id WHERE T1.Model_year = (SELECT MAX(T4.Model_year) FROM Vehicles AS T4 WHERE T4.id = T1.id) ORDER BY T1.Model_year DESC;"
    },
    {
        "question_id": 398,
        "answer_sql": "SELECT T1.name FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id ORDER BY T1.Model_year DESC;"
    },
    {
        "question_id": 399,
        "answer_sql": ""
    },
    {
        "question_id": 400,
        "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;"
    },
    {
        "question_id": 401,
        "answer_sql": "SELECT T1.name, T1.Model_year, T1.Cost_per_25_miles FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id JOIN Discount AS T3 ON T2.discount_id = T3.id WHERE T1.Model_year IN (2013, 2014)"
    },
    {
        "question_id": 402,
        "answer_sql": "SELECT T1.name, T1.Type_of_powertrain, T1.Cost_per_25_miles FROM Vehicles AS T1 JOIN Discount AS T2 ON T1.id = T2.id WHERE T1.Model_year IN (2013, 2014)"
    },
    {
        "question_id": 403,
        "answer_sql": ""
    },
    {
        "question_id": 404,
        "answer_sql": ""
    },
    {
        "question_id": 405,
        "answer_sql": ""
    },
    {
        "question_id": 406,
        "answer_sql": ""
    },
    {
        "question_id": 407,
        "answer_sql": ""
    },
    {
        "question_id": 408,
        "answer_sql": ""
    },
    {
        "question_id": 409,
        "answer_sql": "SELECT AVG(T1.Annual_fuel_cost) AS Average_Annual_Fuel_Cost, MIN(T1.Annual_fuel_cost) AS Minimum_Annual_Fuel_Cost, MAX(T1.Annual_fuel_cost) AS Maximum_Annual_Fuel_Cost FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id"
    },
    {
        "question_id": 410,
        "answer_sql": "SELECT AVG(T1.Annual_fuel_cost) AS Average_Annual_Fuel_Cost, MIN(T1.Annual_fuel_cost) AS Minimum_Annual_Fuel_Cost, MAX(T1.Annual_fuel_cost) AS Maximum_Annual_Fuel_Cost FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id"
    },
    {
        "question_id": 411,
        "answer_sql": ""
    },
    {
        "question_id": 412,
        "answer_sql": ""
    },
    {
        "question_id": 413,
        "answer_sql": ""
    },
    {
        "question_id": 414,
        "answer_sql": ""
    },
    {
        "question_id": 415,
        "answer_sql": "SELECT name, age, membership_credit FROM Customers;"
    },
    {
        "question_id": 416,
        "answer_sql": "SELECT c.name, c.age, c.membership_credit FROM Customers c;"
    },
    {
        "question_id": 417,
        "answer_sql": "SELECT c.name, c.age FROM Customers c JOIN (SELECT id, MAX(membership_credit) as max_credit FROM Customers GROUP BY id) max_cust ON c.id = max_cust.id;"
    },
    {
        "question_id": 418,
        "answer_sql": "SELECT c.name, c.age FROM Customers c JOIN Renting_history rh ON c.id = rh.customer_id JOIN Vehicles v ON rh.vehicles_id = v.id WHERE c.membership_credit = (SELECT MAX(membership_credit) FROM Customers) ORDER BY c.membership_credit DESC LIMIT 1;"
    },
    {
        "question_id": 419,
        "answer_sql": "SELECT AVG(Customers.age) FROM Customers WHERE Customers.membership_credit > (SELECT AVG(membership_credit) FROM Customers);"
    },
    {
        "question_id": 420,
        "answer_sql": "SELECT AVG(Customers.age) FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id WHERE Customers.membership_credit > (SELECT AVG(Customers.membership_credit) FROM Customers);"
    },
    {
        "question_id": 421,
        "answer_sql": "SELECT * FROM Discount;"
    },
    {
        "question_id": 422,
        "answer_sql": "SELECT DISTINCT T2.name FROM Discount AS T1 JOIN Vehicles AS T2 ON T1.id = T2.id JOIN Renting_history AS T3 ON T3.discount_id = T1.id"
    },
    {
        "question_id": 423,
        "answer_sql": "SELECT V.name, SUM(R.total_hours) AS total_hours FROM Vehicles V JOIN Renting_history R ON V.id = R.vehicles_id GROUP BY V.id"
    },
    {
        "question_id": 424,
        "answer_sql": "SELECT v.name, SUM(r.total_hours) AS total_rental_hours FROM Vehicles v JOIN Renting_history r ON v.id = r.vehicles_id GROUP BY v.id"
    },
    {
        "question_id": 425,
        "answer_sql": "SELECT v.name FROM Vehicles v WHERE v.id NOT IN ( SELECT r.discount_id FROM Renting_history r );"
    },
    {
        "question_id": 426,
        "answer_sql": ""
    },
    {
        "question_id": 427,
        "answer_sql": "SELECT c.name FROM Customers c JOIN Renting_history rh ON c.id = rh.customer_id GROUP BY c.id HAVING COUNT(rh.id) >= 2;"
    },
    {
        "question_id": 428,
        "answer_sql": "SELECT c.name FROM Customers c JOIN ( SELECT customer_id FROM Renting_history GROUP BY customer_id HAVING COUNT(*) > 1 ) r ON c.id = r.customer_id"
    },
    {
        "question_id": 429,
        "answer_sql": "SELECT T1.name, T1.Model_year FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id GROUP BY T1.id, T1.id ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 430,
        "answer_sql": "SELECT T1.name, T1.Model_year FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 431,
        "answer_sql": "SELECT T1.name FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id JOIN Discount AS T3 ON T2.discount_id = T3.id ORDER BY T2.total_hours DESC;"
    },
    {
        "question_id": 432,
        "answer_sql": "SELECT v.name FROM Vehicles v JOIN Renting_history rh ON v.id = rh.vehicles_id WHERE rh.discount_id IS NOT NULL ORDER BY rh.total_hours DESC;"
    },
    {
        "question_id": 433,
        "answer_sql": "SELECT Discount.name FROM Discount JOIN ( SELECT discount_id, COUNT(*) as num_records FROM Renting_history GROUP BY discount_id ORDER BY num_records DESC LIMIT 1 ) AS T1 ON Discount.id = T1.discount_id"
    },
    {
        "question_id": 434,
        "answer_sql": "SELECT DISTINCT T1.name FROM Customers AS T1 JOIN Renting_history AS T2 ON T1.id = T2.customer_id JOIN Discount AS T3 ON T2.discount_id = T3.id WHERE T2.total_hours = ( SELECT MAX(total_hours) FROM Renting_history WHERE customer_id = T1.id );"
    },
    {
        "question_id": 435,
        "answer_sql": "SELECT T1.name, T1.Model_year, T1.Type_of_powertrain FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id WHERE T2.total_hours > 30;"
    },
    {
        "question_id": 436,
        "answer_sql": "SELECT T1.name, T1.Type_of_powertrain FROM Vehicles AS T1 JOIN Renting_history AS T2 ON T1.id = T2.vehicles_id JOIN Discount AS T3 ON T2.discount_id = T3.id WHERE T1.City_fuel_economy_rate > 30;"
    },
    {
        "question_id": 437,
        "answer_sql": "SELECT AVG(City_fuel_economy_rate), AVG(Highway_fuel_economy_rate) FROM Vehicles WHERE Type_of_powertrain IN ('V6', 'V8', 'V12')"
    },
    {
        "question_id": 438,
        "answer_sql": ""
    },
    {
        "question_id": 439,
        "answer_sql": ""
    },
    {
        "question_id": 440,
        "answer_sql": ""
    },
    {
        "question_id": 441,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details FROM Students s JOIN Students_Addresses sa ON s.student_id = sa.student_id JOIN Classes c ON sa.student_id = c.student_id WHERE c.student_id IN ( SELECT student_id FROM Students_Addresses sa GROUP BY student_id HAVING COUNT(student_id) >= 2 ) UNION ALL SELECT t.student_id, t.bio_data, t.student_details FROM Students t JOIN Students_Addresses sa ON t.student_id = sa.student_id JOIN Detention d ON sa.student_id = d.student_id WHERE d.student_id IN ( SELECT student_id FROM Students_Addresses sa GROUP BY student_id HAVING COUNT(student_id) < 2 )"
    },
    {
        "question_id": 442,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details FROM Students s JOIN ( SELECT student_id, COUNT(*) as num_classes FROM Classes GROUP BY student_id HAVING COUNT(*) > 1 ) c ON s.student_id = c.student_id JOIN ( SELECT student_id, COUNT(*) as num_detentions FROM Detention GROUP BY student_id HAVING COUNT(*) < 2 ) d ON s.student_id = d.student_id"
    },
    {
        "question_id": 443,
        "answer_sql": ""
    },
    {
        "question_id": 444,
        "answer_sql": ""
    },
    {
        "question_id": 445,
        "answer_sql": "SELECT DISTINCT s.student_details FROM Students s WHERE s.student_id NOT IN ( SELECT t.student_id FROM Students t JOIN Detention d ON s.student_id = t.student_id WHERE d.detention_type_code = 'Detention' );"
    },
    {
        "question_id": 446,
        "answer_sql": "SELECT DISTINCT s.student_details FROM Students s WHERE s.student_id NOT IN ( SELECT t.student_id FROM Students t JOIN Detention d ON s.student_id = t.student_id WHERE d.detention_type_code = 'Detention' );"
    },
    {
        "question_id": 447,
        "answer_sql": ""
    },
    {
        "question_id": 448,
        "answer_sql": "SELECT T2.amount_of_loan, T2.date_of_loan FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id = T2.student_id GROUP BY T2.student_id HAVING COUNT(T1.student_id) > 1;"
    },
    {
        "question_id": 449,
        "answer_sql": ""
    },
    {
        "question_id": 450,
        "answer_sql": ""
    },
    {
        "question_id": 451,
        "answer_sql": ""
    },
    {
        "question_id": 452,
        "answer_sql": ""
    },
    {
        "question_id": 453,
        "answer_sql": ""
    },
    {
        "question_id": 454,
        "answer_sql": ""
    },
    {
        "question_id": 455,
        "answer_sql": "SELECT Students.student_details, Addresses.address_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id;"
    },
    {
        "question_id": 456,
        "answer_sql": "SELECT Students.student_details, Addresses.address_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id;"
    },
    {
        "question_id": 457,
        "answer_sql": "SELECT `student_details` FROM Students;"
    },
    {
        "question_id": 458,
        "answer_sql": "SELECT s.student_id, s.bio_data, t.transcript_details FROM Students s JOIN Students_Addresses sa ON s.student_id = sa.student_id JOIN Transcripts t ON sa.student_id = t.student_id ORDER BY s.student_id;"
    },
    {
        "question_id": 459,
        "answer_sql": ""
    },
    {
        "question_id": 460,
        "answer_sql": ""
    },
    {
        "question_id": 461,
        "answer_sql": ""
    },
    {
        "question_id": 462,
        "answer_sql": ""
    },
    {
        "question_id": 463,
        "answer_sql": "SELECT s.student_id, s.bio_data FROM Students s JOIN ( SELECT student_id, COUNT(*) as count FROM Behaviour_Monitoring GROUP BY student_id ORDER BY count DESC LIMIT 1 ) b ON s.student_id = b.student_id WHERE b.count = ( SELECT MAX(count) FROM ( SELECT COUNT(*) as count FROM Behaviour_Monitoring GROUP BY student_id ) );"
    },
    {
        "question_id": 464,
        "answer_sql": "SELECT s.student_details FROM Students s JOIN ( SELECT student_id, COUNT(*) as count FROM Behaviour_Monitoring GROUP BY student_id ORDER BY count DESC LIMIT 1 ) b ON s.student_id = b.student_id WHERE b.count = (SELECT MAX(count) FROM ( SELECT COUNT(*) as count FROM Behaviour_Monitoring GROUP BY student_id ) AS subquery)"
    },
    {
        "question_id": 465,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id WHERE Student_Events.event_id IS NOT NULL;"
    },
    {
        "question_id": 466,
        "answer_sql": ""
    },
    {
        "question_id": 467,
        "answer_sql": ""
    },
    {
        "question_id": 468,
        "answer_sql": ""
    },
    {
        "question_id": 469,
        "answer_sql": ""
    },
    {
        "question_id": 470,
        "answer_sql": ""
    },
    {
        "question_id": 471,
        "answer_sql": ""
    },
    {
        "question_id": 472,
        "answer_sql": ""
    },
    {
        "question_id": 473,
        "answer_sql": "SELECT T2.date_of_transcript, T2.transcript_details FROM Transcripts AS T2 JOIN Students AS T1 ON T2.student_id = T1.student_id;"
    },
    {
        "question_id": 474,
        "answer_sql": "SELECT T2.date_of_transcript, T2.transcript_details FROM Transcripts AS T2 JOIN Students AS T1 ON T2.student_id = T1.student_id;"
    },
    {
        "question_id": 475,
        "answer_sql": ""
    },
    {
        "question_id": 476,
        "answer_sql": ""
    },
    {
        "question_id": 477,
        "answer_sql": "SELECT T1.datetime_detention_start, T1.datetime_detention_end FROM Detention AS T1 ORDER BY T1.datetime_detention_start;"
    },
    {
        "question_id": 478,
        "answer_sql": "SELECT T1.datetime_detention_start, T1.datetime_detention_end FROM Detention AS T1"
    },
    {
        "question_id": 479,
        "answer_sql": ""
    },
    {
        "question_id": 480,
        "answer_sql": "SELECT Students.student_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id JOIN Detention ON Detention.student_id = Students.student_id WHERE Students.student_details LIKE '%Suite%';"
    },
    {
        "question_id": 481,
        "answer_sql": ""
    },
    {
        "question_id": 482,
        "answer_sql": ""
    },
    {
        "question_id": 483,
        "answer_sql": ""
    },
    {
        "question_id": 484,
        "answer_sql": "SELECT T2.teacher_id, COUNT(T1.student_id) AS num_courses FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id = T2.student_id GROUP BY T2.teacher_id ORDER BY num_courses DESC LIMIT 1;"
    },
    {
        "question_id": 485,
        "answer_sql": "SELECT COUNT(student_id) AS max_courses_taken, student_id FROM Students_Addresses GROUP BY student_id ORDER BY max_courses_taken DESC LIMIT 1;"
    },
    {
        "question_id": 486,
        "answer_sql": "SELECT s.student_id, COUNT(*) as number_of_courses FROM Students s JOIN Students_Addresses sa ON s.student_id = sa.student_id JOIN Classes c ON sa.student_id = c.student_id GROUP BY s.student_id ORDER BY number_of_courses DESC LIMIT 1;"
    },
    {
        "question_id": 487,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details FROM Students s WHERE s.student_id IN ( SELECT t.student_id FROM Transcripts t GROUP BY t.student_id HAVING COUNT(t.student_id) = 2 );"
    },
    {
        "question_id": 488,
        "answer_sql": ""
    },
    {
        "question_id": 489,
        "answer_sql": ""
    },
    {
        "question_id": 490,
        "answer_sql": ""
    },
    {
        "question_id": 491,
        "answer_sql": "SELECT s.student_details, s.bio_data FROM Students s JOIN Student_Loans l ON s.student_id = l.student_id GROUP BY s.student_id HAVING AVG(l.amount_of_loan) > (SELECT AVG(amount_of_loan) FROM Student_Loans) ORDER BY s.student_id;"
    },
    {
        "question_id": 492,
        "answer_sql": "SELECT Students.bio_data, Students.student_details FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan > (SELECT AVG(amount_of_loan) FROM Student_Loans)"
    },
    {
        "question_id": 493,
        "answer_sql": "SELECT MIN(T2.date_of_loan) AS earliest_loan_date FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id = T2.student_id"
    },
    {
        "question_id": 494,
        "answer_sql": "SELECT MIN(`event_date`) AS earliest_loan_date FROM Student_Events;"
    },
    {
        "question_id": 495,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.student_id = ( SELECT student_id FROM Student_Loans GROUP BY student_id ORDER BY SUM(Student_Loans.amount_of_loan) ASC LIMIT 1 );"
    },
    {
        "question_id": 496,
        "answer_sql": "SELECT Students.bio_data FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.student_id = (SELECT MIN(student_id) FROM Student_Loans);"
    },
    {
        "question_id": 497,
        "answer_sql": ""
    },
    {
        "question_id": 498,
        "answer_sql": ""
    },
    {
        "question_id": 499,
        "answer_sql": ""
    },
    {
        "question_id": 500,
        "answer_sql": ""
    },
    {
        "question_id": 501,
        "answer_sql": ""
    },
    {
        "question_id": 502,
        "answer_sql": ""
    },
    {
        "question_id": 503,
        "answer_sql": "SELECT s.student_id, s.bio_data, COUNT(t.transcript_id) AS course_count FROM Students s JOIN Students_Addresses sa ON s.student_id = sa.student_id JOIN Transcripts t ON sa.student_id = t.student_id GROUP BY s.student_id"
    },
    {
        "question_id": 504,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, COUNT(DISTINCT Students.student_id) AS number_of_courses FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Classes ON Students_Addresses.student_id = Classes.student_id GROUP BY Students.student_id;"
    },
    {
        "question_id": 505,
        "answer_sql": "SELECT COUNT(DISTINCT T1.student_id) AS DetentionCount FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id = T2.student_id;"
    },
    {
        "question_id": 506,
        "answer_sql": "SELECT COUNT(DISTINCT T1.student_id) AS DetentionCount FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id = T2.student_id;"
    },
    {
        "question_id": 507,
        "answer_sql": ""
    },
    {
        "question_id": 508,
        "answer_sql": ""
    },
    {
        "question_id": 509,
        "answer_sql": "SELECT s.student_details FROM Students s WHERE s.student_id NOT IN ( SELECT s2.student_id FROM Students s2 JOIN Student_Events se ON s2.student_id = se.student_id WHERE se.event_type_code = 'Event 1' );"
    },
    {
        "question_id": 510,
        "answer_sql": "SELECT Students.bio_data FROM Students WHERE Students.student_id NOT IN ( SELECT Student_id FROM Student_Events );"
    },
    {
        "question_id": 511,
        "answer_sql": ""
    },
    {
        "question_id": 512,
        "answer_sql": ""
    },
    {
        "question_id": 513,
        "answer_sql": ""
    },
    {
        "question_id": 514,
        "answer_sql": "SELECT T1.datetime_detention_start FROM Detention AS T1"
    },
    {
        "question_id": 515,
        "answer_sql": ""
    },
    {
        "question_id": 516,
        "answer_sql": "SELECT DISTINCT Name FROM Author;"
    },
    {
        "question_id": 517,
        "answer_sql": "SELECT Name, Address FROM Client;"
    },
    {
        "question_id": 518,
        "answer_sql": "SELECT Name, Address FROM Client;"
    },
    {
        "question_id": 519,
        "answer_sql": "SELECT b.Title, b.ISBN, b.SalePrice FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Author_Book ab ON b.ISBN = ab.ISBN WHERE bo.amount > 0;"
    },
    {
        "question_id": 520,
        "answer_sql": "SELECT T1.Title, T1.ISBN, T1.SalePrice FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN"
    },
    {
        "question_id": 521,
        "answer_sql": "SELECT COUNT(*) FROM Book;"
    },
    {
        "question_id": 522,
        "answer_sql": "SELECT COUNT(*) FROM Book;"
    },
    {
        "question_id": 523,
        "answer_sql": "SELECT COUNT(*) FROM Author;"
    },
    {
        "question_id": 524,
        "answer_sql": "SELECT COUNT(*) FROM Author;"
    },
    {
        "question_id": 525,
        "answer_sql": "SELECT COUNT(*) FROM Client;"
    },
    {
        "question_id": 526,
        "answer_sql": "SELECT count(*) FROM Client;"
    },
    {
        "question_id": 527,
        "answer_sql": "SELECT Name, Address FROM Client ORDER BY Name;"
    },
    {
        "question_id": 528,
        "answer_sql": "SELECT T1.Name, T1.Address FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient ORDER BY T1.Name;"
    },
    {
        "question_id": 529,
        "answer_sql": ""
    },
    {
        "question_id": 530,
        "answer_sql": ""
    },
    {
        "question_id": 531,
        "answer_sql": ""
    },
    {
        "question_id": 532,
        "answer_sql": ""
    },
    {
        "question_id": 533,
        "answer_sql": ""
    },
    {
        "question_id": 534,
        "answer_sql": ""
    },
    {
        "question_id": 535,
        "answer_sql": "SELECT DISTINCT b.ISBN, COUNT(o.idOrder) AS num_orders FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Orders o ON bo.IdOrder = o.IdOrder GROUP BY b.ISBN;"
    },
    {
        "question_id": 536,
        "answer_sql": "SELECT DISTINCT ISBN FROM Book ORDER BY ISBN;"
    },
    {
        "question_id": 537,
        "answer_sql": "SELECT b.ISBN, SUM(o.amount) as TotalAmount FROM Book b JOIN Books_Order o ON b.ISBN = o.ISBN GROUP BY b.ISBN;"
    },
    {
        "question_id": 538,
        "answer_sql": "SELECT DISTINCT ISBN FROM Book ORDER BY ISBN;"
    },
    {
        "question_id": 539,
        "answer_sql": "SELECT T1.Title FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN GROUP BY T1.ISBN ORDER BY COUNT(T2.idOrder) DESC LIMIT 1;"
    },
    {
        "question_id": 540,
        "answer_sql": "SELECT T1.Title FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN GROUP BY T1.ISBN ORDER BY COUNT(T2.idOrder) DESC LIMIT 1;"
    },
    {
        "question_id": 541,
        "answer_sql": "SELECT b.Title, b.PurchasePrice FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE bo.amount = (SELECT MAX(amount) FROM (SELECT amount FROM Books_Order GROUP BY ISBN) AS T1);"
    },
    {
        "question_id": 542,
        "answer_sql": "SELECT T1.Title, T1.PurchasePrice FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.amount = (SELECT MAX(amount) FROM Books_Order) ORDER BY T1.PurchasePrice DESC LIMIT 1;"
    },
    {
        "question_id": 543,
        "answer_sql": "SELECT T1.Title FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.amount > 0;"
    },
    {
        "question_id": 544,
        "answer_sql": "SELECT DISTINCT T1.Title FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.idOrder IS NOT NULL;"
    },
    {
        "question_id": 545,
        "answer_sql": "SELECT c.Name FROM Client c JOIN Orders o ON c.IdClient = o.IdClient GROUP BY c.Name HAVING COUNT(o.IdOrder) > 0;"
    },
    {
        "question_id": 546,
        "answer_sql": "SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient;"
    },
    {
        "question_id": 547,
        "answer_sql": "SELECT c.Name, COUNT(o.IdOrder) AS NumberOfOrders FROM Client c JOIN Orders o ON c.IdClient = o.IdClient GROUP BY c.Name;"
    },
    {
        "question_id": 548,
        "answer_sql": "SELECT c.Name, COUNT(o.idOrder) as OrderCount FROM Client c JOIN Orders o ON c.IdClient = o.IdClient GROUP BY c.Name;"
    },
    {
        "question_id": 549,
        "answer_sql": "SELECT c.Name FROM Client c JOIN ( SELECT IdClient, COUNT(*) as count FROM Orders GROUP BY IdClient ORDER BY count DESC LIMIT 1 ) o ON c.IdClient = o.IdClient"
    },
    {
        "question_id": 550,
        "answer_sql": ""
    },
    {
        "question_id": 551,
        "answer_sql": ""
    },
    {
        "question_id": 552,
        "answer_sql": ""
    },
    {
        "question_id": 553,
        "answer_sql": ""
    },
    {
        "question_id": 554,
        "answer_sql": "SELECT c.Name FROM Client c JOIN Orders o ON c.IdClient = o.IdClient JOIN Books_Order bo ON o.IdOrder = bo.IdOrder GROUP BY c.Name ORDER BY SUM(bo.amount) DESC LIMIT 1;"
    },
    {
        "question_id": 555,
        "answer_sql": ""
    },
    {
        "question_id": 556,
        "answer_sql": "SELECT DISTINCT b.Title FROM Book b LEFT JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE bo.IdOrder IS NULL;"
    },
    {
        "question_id": 557,
        "answer_sql": "SELECT DISTINCT c.Name FROM Client c WHERE c.IdClient NOT IN (SELECT o.IdClient FROM Orders o);"
    },
    {
        "question_id": 558,
        "answer_sql": "SELECT DISTINCT c.Name FROM Client c WHERE c.IdClient NOT IN (SELECT IdOrder FROM Orders);"
    },
    {
        "question_id": 559,
        "answer_sql": "SELECT MAX(SalePrice), MIN(SalePrice) FROM Book;"
    },
    {
        "question_id": 560,
        "answer_sql": "SELECT MAX(SalePrice), MIN(SalePrice) FROM Book;"
    },
    {
        "question_id": 561,
        "answer_sql": ""
    },
    {
        "question_id": 562,
        "answer_sql": "SELECT AVG(T1.PurchasePrice), AVG(T1.SalePrice) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN;"
    },
    {
        "question_id": 563,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) AS MaximumDifference FROM Book;"
    },
    {
        "question_id": 564,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) AS Largest_Difference FROM Book;"
    },
    {
        "question_id": 565,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice > ( SELECT AVG(SalePrice) FROM Book );"
    },
    {
        "question_id": 566,
        "answer_sql": "SELECT b.Title FROM Book b WHERE b.SalePrice > ( SELECT AVG(SalePrice) FROM Book );"
    },
    {
        "question_id": 567,
        "answer_sql": "SELECT T1.Title FROM Book AS T1 JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.amount = (SELECT MIN(amount) FROM Books_Order) ORDER BY T1.SalePrice ASC;"
    },
    {
        "question_id": 568,
        "answer_sql": "SELECT b.Title FROM Book b WHERE b.SalePrice = ( SELECT MIN(b.SalePrice) FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN GROUP BY b.ISBN );"
    },
    {
        "question_id": 569,
        "answer_sql": "SELECT Title FROM Book ORDER BY PurchasePrice DESC LIMIT 1;"
    },
    {
        "question_id": 570,
        "answer_sql": "SELECT b.Title FROM Book b WHERE b.PurchasePrice = ( SELECT MAX(purchasePrice) FROM Book );"
    },
    {
        "question_id": 571,
        "answer_sql": ""
    },
    {
        "question_id": 572,
        "answer_sql": ""
    },
    {
        "question_id": 573,
        "answer_sql": ""
    },
    {
        "question_id": 574,
        "answer_sql": ""
    },
    {
        "question_id": 575,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book)"
    },
    {
        "question_id": 576,
        "answer_sql": ""
    },
    {
        "question_id": 577,
        "answer_sql": ""
    },
    {
        "question_id": 578,
        "answer_sql": ""
    },
    {
        "question_id": 579,
        "answer_sql": ""
    },
    {
        "question_id": 580,
        "answer_sql": ""
    },
    {
        "question_id": 581,
        "answer_sql": ""
    },
    {
        "question_id": 582,
        "answer_sql": ""
    },
    {
        "question_id": 583,
        "answer_sql": ""
    },
    {
        "question_id": 584,
        "answer_sql": ""
    },
    {
        "question_id": 585,
        "answer_sql": ""
    },
    {
        "question_id": 586,
        "answer_sql": ""
    },
    {
        "question_id": 587,
        "answer_sql": ""
    },
    {
        "question_id": 588,
        "answer_sql": ""
    },
    {
        "question_id": 589,
        "answer_sql": ""
    },
    {
        "question_id": 590,
        "answer_sql": ""
    },
    {
        "question_id": 591,
        "answer_sql": "SELECT Name FROM Client WHERE IdClient IN (SELECT IdClient FROM Orders WHERE IdOrder IN (SELECT IdOrder FROM Books_Order WHERE ISBN IN (SELECT ISBN FROM Book WHERE Title = 'Pride and Prejudice')) LIMIT 1000);"
    },
    {
        "question_id": 592,
        "answer_sql": "SELECT T1.Name FROM Client AS T1 JOIN Orders AS T2 ON T1.IdClient = T2.IdClient GROUP BY T1.IdClient HAVING COUNT(T2.IdOrder) > 1;"
    },
    {
        "question_id": 593,
        "answer_sql": "SELECT COUNT(*) FROM book;"
    },
    {
        "question_id": 594,
        "answer_sql": "SELECT Title FROM book ORDER BY Title ASC;"
    },
    {
        "question_id": 595,
        "answer_sql": "SELECT Title FROM book ORDER BY Pages DESC;"
    },
    {
        "question_id": 596,
        "answer_sql": "SELECT Type, Release FROM book;"
    },
    {
        "question_id": 597,
        "answer_sql": "SELECT Book.Title, MAX(Book.Chapters) AS Max_Chapters, MIN(Book.Chapters) AS Min_Chapters FROM book JOIN review ON book.Book_ID = review.Book_ID GROUP BY Book.Title;"
    },
    {
        "question_id": 598,
        "answer_sql": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review WHERE Rank = 1)"
    },
    {
        "question_id": 599,
        "answer_sql": "SELECT AVG(Rating) FROM review;"
    },
    {
        "question_id": 600,
        "answer_sql": "SELECT book.Title, review.Rating FROM book JOIN review ON book.Book_ID = review.Book_ID;"
    },
    {
        "question_id": 601,
        "answer_sql": "SELECT AVG(Rating) AS Average_Rating FROM review WHERE Book_ID = ( SELECT Book_ID FROM book GROUP BY Book_ID ORDER BY COUNT(DISTINCT Chapters) DESC LIMIT 1 );"
    },
    {
        "question_id": 602,
        "answer_sql": "SELECT Rank FROM review WHERE Book_ID = ( SELECT Book_ID FROM book ORDER BY Pages LIMIT 1 )"
    },
    {
        "question_id": 603,
        "answer_sql": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID ORDER BY r.Rank DESC LIMIT 1;"
    },
    {
        "question_id": 604,
        "answer_sql": "SELECT AVG(R.Readers_in_Million) FROM book AS B JOIN review AS R ON B.Book_ID = R.Book_ID WHERE B.Type = 'Novel';"
    },
    {
        "question_id": 605,
        "answer_sql": "SELECT b.Type, COUNT(*) AS Book_Count FROM book b JOIN review r ON b.Book_ID = r.Book_ID GROUP BY b.Type"
    },
    {
        "question_id": 606,
        "answer_sql": "SELECT Type FROM book GROUP BY Type ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 607,
        "answer_sql": "SELECT Type FROM book WHERE Book_ID IN (SELECT Book_ID FROM review WHERE Rank = (SELECT MAX(Rank) FROM review))"
    },
    {
        "question_id": 608,
        "answer_sql": "SELECT Title FROM book JOIN review ON book.Book_ID = review.Book_ID ORDER BY Review_ID;"
    },
    {
        "question_id": 609,
        "answer_sql": "SELECT b.Title, b.Audio, COUNT(*) AS Reader_Count FROM book b JOIN review r ON b.Book_ID = r.Book_ID GROUP BY b.Book_ID ORDER BY Reader_Count DESC;"
    },
    {
        "question_id": 610,
        "answer_sql": "SELECT COUNT(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)"
    },
    {
        "question_id": 611,
        "answer_sql": "SELECT Type FROM book WHERE Book_ID IN ( SELECT Book_ID FROM review WHERE Chapters > 75 GROUP BY Book_ID HAVING COUNT(Review_ID) < 50 )"
    },
    {
        "question_id": 612,
        "answer_sql": "SELECT COUNT(DISTINCT Type) FROM book;"
    },
    {
        "question_id": 613,
        "answer_sql": ""
    },
    {
        "question_id": 614,
        "answer_sql": "SELECT COUNT(DISTINCT customer.Customer_ID) FROM customer;"
    },
    {
        "question_id": 615,
        "answer_sql": "SELECT COUNT(DISTINCT customer.Customer_ID) FROM customer;"
    },
    {
        "question_id": 616,
        "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;"
    },
    {
        "question_id": 617,
        "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;"
    },
    {
        "question_id": 618,
        "answer_sql": "SELECT T1.Nationality, T1.Card_Credit FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID;"
    },
    {
        "question_id": 619,
        "answer_sql": "SELECT T1.Nationality, T1.Card_Credit FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID;"
    },
    {
        "question_id": 620,
        "answer_sql": "SELECT c.Name FROM customer c WHERE c.Nationality IN ('England', 'Australia');"
    },
    {
        "question_id": 621,
        "answer_sql": "SELECT c.Name FROM customer c WHERE c.Nationality IN ('England', 'Australia')"
    },
    {
        "question_id": 622,
        "answer_sql": "SELECT AVG(customer.Card_Credit) FROM customer WHERE customer.Level_of_Membership > 1;"
    },
    {
        "question_id": 623,
        "answer_sql": ""
    },
    {
        "question_id": 624,
        "answer_sql": ""
    },
    {
        "question_id": 625,
        "answer_sql": ""
    },
    {
        "question_id": 626,
        "answer_sql": "SELECT T1.Nationality, COUNT(*) AS Number_of_Customers FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Nationality"
    },
    {
        "question_id": 627,
        "answer_sql": "SELECT T1.Nationality, COUNT(*) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Nationality;"
    },
    {
        "question_id": 628,
        "answer_sql": ""
    },
    {
        "question_id": 629,
        "answer_sql": "SELECT T1.Nationality FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID GROUP BY T1.Nationality ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 630,
        "answer_sql": ""
    },
    {
        "question_id": 631,
        "answer_sql": "SELECT T1.Nationality FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID = T2.Customer_ID JOIN branch AS T3 ON T2.Branch_ID = T3.Branch_ID WHERE T1.Card_Credit >= 50 AND T1.Card_Credit <= 75 AND T2.Quantity > 0 AND T2.Quantity < 10"
    },
    {
        "question_id": 632,
        "answer_sql": "SELECT c.Name, o.Dish_Name FROM customer c JOIN customer_order o ON c.Customer_ID = o.Customer_ID"
    },
    {
        "question_id": 633,
        "answer_sql": "SELECT c.Name, od.Dish_Name FROM customer_order od JOIN customer c ON od.Customer_ID = c.Customer_ID JOIN branch b ON od.Branch_ID = b.Branch_ID;"
    },
    {
        "question_id": 634,
        "answer_sql": "SELECT c.Name, o.Dish_Name FROM customer c JOIN customer_order o ON c.Customer_ID = o.Customer_ID ORDER BY o.Quantity DESC;"
    },
    {
        "question_id": 635,
        "answer_sql": "SELECT c.Name, o.Dish_Name FROM customer_order o JOIN customer c ON o.Customer_ID = c.Customer_ID ORDER BY o.Quantity DESC;"
    },
    {
        "question_id": 636,
        "answer_sql": "SELECT c.Name, SUM(o.Quantity) AS Total_Dishes FROM customer c JOIN customer_order o ON c.Customer_ID = o.Customer_ID GROUP BY c.Customer_ID, c.Name ORDER BY Total_Dishes DESC;"
    },
    {
        "question_id": 637,
        "answer_sql": "SELECT c.Name, SUM(o.Quantity) as Total_Quantity FROM customer c JOIN customer_order o ON c.Customer_ID = o.Customer_ID GROUP BY c.Customer_ID"
    },
    {
        "question_id": 638,
        "answer_sql": "SELECT c.Name FROM customer c WHERE c.Customer_ID IN ( SELECT o.Customer_ID FROM customer_order o GROUP BY o.Customer_ID HAVING SUM(o.Quantity) > 1 );"
    },
    {
        "question_id": 639,
        "answer_sql": "SELECT c.Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Customer_ID, c.Name HAVING SUM(co.Quantity) > 1;"
    },
    {
        "question_id": 640,
        "answer_sql": "SELECT DISTINCT T2.Manager FROM customer_order AS T1 JOIN branch AS T2 ON T1.Branch_ID = T2.Branch_ID"
    },
    {
        "question_id": 641,
        "answer_sql": "SELECT DISTINCT T2.Manager FROM customer_order AS T1 JOIN branch AS T2 ON T1.Branch_ID = T2.Branch_ID"
    },
    {
        "question_id": 642,
        "answer_sql": "SELECT c.Name FROM customer c WHERE c.Customer_ID NOT IN (SELECT DISTINCT c2.Customer_ID FROM customer_order c2)"
    },
    {
        "question_id": 643,
        "answer_sql": "SELECT DISTINCT c.Name FROM customer c WHERE c.Customer_ID NOT IN (SELECT o.Customer_ID FROM customer_order o);"
    },
    {
        "question_id": 644,
        "answer_sql": "SELECT COUNT(Member_ID) FROM member;"
    },
    {
        "question_id": 645,
        "answer_sql": "SELECT Name FROM member ORDER BY Age ASC;"
    },
    {
        "question_id": 646,
        "answer_sql": "SELECT member.Name, member.Nationality FROM member JOIN club_leader ON member.Member_ID = club_leader.Member_ID;"
    },
    {
        "question_id": 647,
        "answer_sql": "SELECT Name FROM member WHERE Nationality != 'England';"
    },
    {
        "question_id": 648,
        "answer_sql": "SELECT Name FROM member WHERE Age IN (19, 20);"
    },
    {
        "question_id": 649,
        "answer_sql": "SELECT Name FROM member WHERE Age = (SELECT MIN(Age) FROM member);"
    },
    {
        "question_id": 650,
        "answer_sql": "SELECT T2.Nationality, COUNT(*) AS Member_Count FROM club_leader AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID GROUP BY T2.Nationality"
    },
    {
        "question_id": 651,
        "answer_sql": "SELECT T2.Nationality FROM club_leader AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID GROUP BY T2.Nationality ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 652,
        "answer_sql": "SELECT T2.Nationality FROM club_leader AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID GROUP BY T2.Nationality HAVING COUNT(T1.Member_ID) >= 2;"
    },
    {
        "question_id": 653,
        "answer_sql": ""
    },
    {
        "question_id": 654,
        "answer_sql": ""
    },
    {
        "question_id": 655,
        "answer_sql": ""
    },
    {
        "question_id": 656,
        "answer_sql": "SELECT T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.Member_ID = (SELECT T1.Member_ID FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Club_Name = 'Houston')"
    },
    {
        "question_id": 657,
        "answer_sql": "SELECT DISTINCT member.Name FROM member WHERE member.Member_ID NOT IN (SELECT club_leader.Member_ID FROM club_leader)"
    },
    {
        "question_id": 658,
        "answer_sql": ""
    },
    {
        "question_id": 659,
        "answer_sql": "SELECT AVG(T2.Age) FROM club_leader AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID WHERE T1.Club_ID = (SELECT Club_ID FROM club WHERE Overall_Ranking = (SELECT Overall_Ranking FROM club ORDER BY Overall_Ranking DESC LIMIT 1))"
    },
    {
        "question_id": 660,
        "answer_sql": ""
    },
    {
        "question_id": 661,
        "answer_sql": ""
    },
    {
        "question_id": 662,
        "answer_sql": "SELECT DISTINCT Collection_Subset_Name FROM Collection_Subsets;"
    },
    {
        "question_id": 663,
        "answer_sql": ""
    },
    {
        "question_id": 664,
        "answer_sql": ""
    },
    {
        "question_id": 665,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets"
    },
    {
        "question_id": 666,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets"
    },
    {
        "question_id": 667,
        "answer_sql": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 668,
        "answer_sql": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 669,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects;"
    },
    {
        "question_id": 670,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects;"
    },
    {
        "question_id": 671,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin'"
    },
    {
        "question_id": 672,
        "answer_sql": ""
    },
    {
        "question_id": 673,
        "answer_sql": "SELECT Owner FROM Document_Objects WHERE Description = 'Braeden Collection';"
    },
    {
        "question_id": 674,
        "answer_sql": ""
    },
    {
        "question_id": 675,
        "answer_sql": ""
    },
    {
        "question_id": 676,
        "answer_sql": ""
    },
    {
        "question_id": 677,
        "answer_sql": ""
    },
    {
        "question_id": 678,
        "answer_sql": ""
    },
    {
        "question_id": 679,
        "answer_sql": "SELECT COUNT(DISTINCT o.Document_Object_ID) FROM Document_Objects o JOIN Document_Subset_Members dsm ON o.Document_Object_ID = dsm.Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Marlin';"
    },
    {
        "question_id": 680,
        "answer_sql": "SELECT COUNT(DISTINCT o.Document_Object_ID) FROM Document_Objects o WHERE o.Owner = 'Marlin';"
    },
    {
        "question_id": 681,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID NOT IN (SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Objects WHERE Parent_Document_Object_ID = Document_Object_ID));"
    },
    {
        "question_id": 682,
        "answer_sql": ""
    },
    {
        "question_id": 683,
        "answer_sql": ""
    },
    {
        "question_id": 684,
        "answer_sql": "SELECT d1.Document_Object_ID, COUNT(d1.Document_Object_ID) AS ChildDocuments FROM Document_Objects d1 JOIN Document_Subset_Members dsm ON d1.Document_Object_ID = dsm.Document_Object_ID GROUP BY d1.Document_Object_ID"
    },
    {
        "question_id": 685,
        "answer_sql": "SELECT DISTINCT c.Collection_Name FROM Collections c;"
    },
    {
        "question_id": 686,
        "answer_sql": "SELECT DISTINCT Collection_Name FROM Collections;"
    },
    {
        "question_id": 687,
        "answer_sql": "SELECT DISTINCT Collection_Name FROM Collections WHERE Collection_Name = 'Best'"
    },
    {
        "question_id": 688,
        "answer_sql": "SELECT DISTINCT c.Collection_Name FROM Collections c WHERE c.Collection_Name = 'Best';"
    },
    {
        "question_id": 689,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c WHERE c.Collection_ID = ( SELECT dc.Collection_ID FROM Collections dc WHERE dc.Collection_Name = 'Nice' );"
    },
    {
        "question_id": 690,
        "answer_sql": "SELECT Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Document_Subset_Members WHERE Related_Document_Object_ID = (SELECT Document_Object_ID FROM Document_Objects WHERE Collection_Name = 'Nice'))"
    },
    {
        "question_id": 691,
        "answer_sql": ""
    },
    {
        "question_id": 692,
        "answer_sql": "SELECT DISTINCT C.Collection_Name FROM Collections C WHERE NOT EXISTS ( SELECT 1 FROM Collections C2 WHERE C.Collection_ID = C2.Collection_ID AND C2.Collection_ID != C.Collection_ID );"
    },
    {
        "question_id": 693,
        "answer_sql": ""
    },
    {
        "question_id": 694,
        "answer_sql": ""
    },
    {
        "question_id": 695,
        "answer_sql": ""
    },
    {
        "question_id": 696,
        "answer_sql": "SELECT COUNT(DISTINCT Collection_ID) FROM Collections WHERE Collection_Name = 'Best';"
    },
    {
        "question_id": 697,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Subset_Members WHERE Related_Document_Object_ID = ( SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Ransom' ) )"
    },
    {
        "question_id": 698,
        "answer_sql": ""
    },
    {
        "question_id": 699,
        "answer_sql": ""
    },
    {
        "question_id": 700,
        "answer_sql": ""
    },
    {
        "question_id": 701,
        "answer_sql": "SELECT d.Document_Object_ID, COUNT(*) as child_count FROM Document_Objects d JOIN Document_Subset_Members dm ON d.Document_Object_ID = dm.Document_Object_ID JOIN Document_Subsets ds ON dm.Document_Subset_ID = ds.Document_Subset_ID GROUP BY d.Document_Object_ID ORDER BY child_count DESC LIMIT 1;"
    },
    {
        "question_id": 702,
        "answer_sql": "SELECT Document_Object_ID, COUNT(DISTINCT Related_Document_Object_ID) FROM Document_Subset_Members GROUP BY Document_Object_ID;"
    },
    {
        "question_id": 703,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Related_Document_Object_ID) FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY COUNT(Related_Document_Object_ID) ASC LIMIT 1;"
    },
    {
        "question_id": 704,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects GROUP BY Document_Object_ID ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 705,
        "answer_sql": "SELECT Document_Object_ID, COUNT(DISTINCT Related_Document_Object_ID) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING COUNT(DISTINCT Related_Document_Object_ID) BETWEEN 2 AND 4;"
    },
    {
        "question_id": 706,
        "answer_sql": ""
    },
    {
        "question_id": 707,
        "answer_sql": ""
    },
    {
        "question_id": 708,
        "answer_sql": ""
    },
    {
        "question_id": 709,
        "answer_sql": "SELECT DISTINCT Document_Subset_Name FROM Document_Subsets WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Objects WHERE Owner = 'Braeden')"
    },
    {
        "question_id": 710,
        "answer_sql": ""
    },
    {
        "question_id": 711,
        "answer_sql": ""
    },
    {
        "question_id": 712,
        "answer_sql": ""
    },
    {
        "question_id": 713,
        "answer_sql": ""
    },
    {
        "question_id": 714,
        "answer_sql": ""
    },
    {
        "question_id": 715,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000')"
    },
    {
        "question_id": 716,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000')"
    },
    {
        "question_id": 717,
        "answer_sql": ""
    },
    {
        "question_id": 718,
        "answer_sql": ""
    },
    {
        "question_id": 719,
        "answer_sql": ""
    },
    {
        "question_id": 720,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections d ON c.Collection_ID = d.Collection_ID JOIN Document_Objects od ON d.Document_Object_ID = od.Document_Object_ID WHERE od.Owner = 'Ransom';"
    },
    {
        "question_id": 721,
        "answer_sql": "SELECT Collection_ID, COUNT(Document_Object_ID) AS Document_Count FROM Documents_in_Collections GROUP BY Collection_ID;"
    },
    {
        "question_id": 722,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Collection_ID) AS Number_of_Collections FROM Documents_in_Collections GROUP BY Document_Object_ID;"
    },
    {
        "question_id": 723,
        "answer_sql": "SELECT COUNT(DISTINCT Document_Object_ID) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')"
    },
    {
        "question_id": 724,
        "answer_sql": "SELECT COUNT(DISTINCT Document_Object_ID) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')"
    },
    {
        "question_id": 725,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = ( SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' ) );"
    },
    {
        "question_id": 726,
        "answer_sql": "SELECT COUNT(DISTINCT Document_Object_ID) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')"
    },
    {
        "question_id": 727,
        "answer_sql": ""
    },
    {
        "question_id": 728,
        "answer_sql": ""
    },
    {
        "question_id": 729,
        "answer_sql": ""
    },
    {
        "question_id": 730,
        "answer_sql": ""
    },
    {
        "question_id": 731,
        "answer_sql": ""
    },
    {
        "question_id": 732,
        "answer_sql": "SELECT DISTINCT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID NOT IN ( SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' ) ) AND Document_Object_ID IN ( SELECT Document_Object_ID FROM Collection_Subset_Members WHERE Collection_ID = ( SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' ) )"
    },
    {
        "question_id": 733,
        "answer_sql": ""
    },
    {
        "question_id": 734,
        "answer_sql": "SELECT DISTINCT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' ) UNION SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Related_Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best' ) ) )"
    },
    {
        "question_id": 735,
        "answer_sql": "SELECT DISTINCT c.Collection_Name FROM Collections c WHERE c.Collection_ID = ( SELECT DISTINCT c2.Collection_ID FROM Collections c2 WHERE c2.Collection_Name = 'Best' );"
    },
    {
        "question_id": 736,
        "answer_sql": "SELECT DISTINCT c.Collection_Name FROM Collections c WHERE c.Collection_ID = ( SELECT DISTINCT c2.Collection_ID FROM Collections c2 WHERE c2.Collection_Name = 'Best' );"
    },
    {
        "question_id": 737,
        "answer_sql": "SELECT COUNT(DISTINCT Collection_ID) FROM Collection_Subset_Members WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')"
    },
    {
        "question_id": 738,
        "answer_sql": "SELECT COUNT(DISTINCT Collection_ID) FROM Collection_Subset_Members WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')"
    },
    {
        "question_id": 739,
        "answer_sql": ""
    },
    {
        "question_id": 740,
        "answer_sql": "SELECT DISTINCT Collection_Subset_ID FROM Collection_Subset_Members WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')"
    },
    {
        "question_id": 741,
        "answer_sql": "SELECT COUNT(*) FROM songs WHERE name LIKE '%Love%';"
    },
    {
        "question_id": 742,
        "answer_sql": "SELECT s.name FROM songs s ORDER BY s.name ASC;"
    },
    {
        "question_id": 743,
        "answer_sql": "SELECT s.name, s.language FROM songs s"
    },
    {
        "question_id": 744,
        "answer_sql": "SELECT MAX(T1.voice_sound_quality) AS max_voice_sound_quality, MIN(T1.voice_sound_quality) AS min_voice_sound_quality FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id = T2.id JOIN songs AS T3 ON T1.songs_id = T3.id;"
    },
    {
        "question_id": 745,
        "answer_sql": "SELECT p.name, sp.voice_sound_quality, sp.rhythm_tempo, sp.stage_presence FROM participants p JOIN performance_score sp ON p.id = sp.participant_id WHERE p.name = 'Freeway';"
    },
    {
        "question_id": 746,
        "answer_sql": ""
    },
    {
        "question_id": 747,
        "answer_sql": ""
    },
    {
        "question_id": 748,
        "answer_sql": ""
    },
    {
        "question_id": 749,
        "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score sp ON p.id = sp.participant_id GROUP BY p.id, p.name HAVING COUNT(songs_id) >= 2;"
    },
    {
        "question_id": 750,
        "answer_sql": ""
    },
    {
        "question_id": 751,
        "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score sp ON p.id = sp.participant_id WHERE sp.voice_sound_quality = 5 OR sp.rhythm_tempo = 5;"
    },
    {
        "question_id": 752,
        "answer_sql": ""
    },
    {
        "question_id": 753,
        "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score sp ON p.id = sp.participant_id GROUP BY p.id, p.name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 754,
        "answer_sql": "SELECT COUNT(*) FROM performance_score WHERE stage_presence BETWEEN 7 AND 9 OR stage_presence < 7;"
    },
    {
        "question_id": 755,
        "answer_sql": "SELECT COUNT(*) FROM performance_score WHERE songs_id NOT IN (SELECT id FROM participants)"
    },
    {
        "question_id": 756,
        "answer_sql": ""
    },
    {
        "question_id": 757,
        "answer_sql": "SELECT DISTINCT participants.name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id JOIN songs ON performance_score.songs_id = songs.id WHERE songs.language = 'English';"
    },
    {
        "question_id": 758,
        "answer_sql": ""
    },
    {
        "question_id": 759,
        "answer_sql": "SELECT s.name FROM songs s WHERE s.name LIKE '%Is%';"
    },
    {
        "question_id": 760,
        "answer_sql": ""
    },
    {
        "question_id": 761,
        "answer_sql": "SELECT COUNT(city_code) FROM City;"
    },
    {
        "question_id": 762,
        "answer_sql": "SELECT COUNT(city_code) FROM City;"
    },
    {
        "question_id": 763,
        "answer_sql": "SELECT DISTINCT country FROM City;"
    },
    {
        "question_id": 764,
        "answer_sql": "SELECT DISTINCT T1.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code ORDER BY T2.city2_code;"
    },
    {
        "question_id": 765,
        "answer_sql": "SELECT COUNT(city_code) FROM City;"
    },
    {
        "question_id": 766,
        "answer_sql": "SELECT COUNT(city_code) FROM City;"
    },
    {
        "question_id": 767,
        "answer_sql": "SELECT T1.city_name, T1.city_code, T1.state, T1.country FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code OR T1.city_code = T2.city2_code;"
    },
    {
        "question_id": 768,
        "answer_sql": "SELECT city_name, city_code, state, country FROM City;"
    },
    {
        "question_id": 769,
        "answer_sql": "SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore';"
    },
    {
        "question_id": 770,
        "answer_sql": "SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore';"
    },
    {
        "question_id": 771,
        "answer_sql": "SELECT DISTINCT T1.city_name FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T1.state = 'PA';"
    },
    {
        "question_id": 772,
        "answer_sql": "SELECT city_name FROM City WHERE state = 'PA';"
    },
    {
        "question_id": 773,
        "answer_sql": "SELECT COUNT(city_code) FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 774,
        "answer_sql": "SELECT COUNT(city_code) FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 775,
        "answer_sql": "SELECT T1.fname, T1.lname FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code JOIN City AS T3 ON T2.city2_code = T3.city_code WHERE T3.country = 'USA' ORDER BY T2.distance;"
    },
    {
        "question_id": 776,
        "answer_sql": "SELECT DISTINCT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T1.country = 'USA' ORDER BY T2.distance;"
    },
    {
        "question_id": 777,
        "answer_sql": ""
    },
    {
        "question_id": 778,
        "answer_sql": "SELECT T2.city_name, COUNT(*) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code AND T1.city2_code = T2.city_code GROUP BY T2.city_name;"
    },
    {
        "question_id": 779,
        "answer_sql": ""
    },
    {
        "question_id": 780,
        "answer_sql": ""
    },
    {
        "question_id": 781,
        "answer_sql": "SELECT DISTINCT T1.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.state HAVING COUNT(T2.city2_code) >= 2"
    },
    {
        "question_id": 782,
        "answer_sql": "SELECT DISTINCT T1.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.state HAVING COUNT(T2.city2_code) >= 2"
    },
    {
        "question_id": 783,
        "answer_sql": "SELECT T2.state FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code GROUP BY T2.state ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 784,
        "answer_sql": "SELECT T2.state FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code GROUP BY T2.state ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 785,
        "answer_sql": "SELECT DISTINCT country FROM City GROUP BY country ORDER BY COUNT(city_code) ASC LIMIT 1;"
    },
    {
        "question_id": 786,
        "answer_sql": "SELECT T1.country FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.country ORDER BY COUNT(*) LIMIT 1;"
    },
    {
        "question_id": 787,
        "answer_sql": "SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.state = 'MD';"
    },
    {
        "question_id": 788,
        "answer_sql": ""
    },
    {
        "question_id": 789,
        "answer_sql": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'China'))"
    },
    {
        "question_id": 790,
        "answer_sql": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country = 'China')"
    },
    {
        "question_id": 791,
        "answer_sql": "SELECT T1.Fname, T1.Major FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.city_name = 'Baltimore';"
    },
    {
        "question_id": 792,
        "answer_sql": "SELECT T1.Fname, T1.Major FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T2.city_name = 'Baltimore'"
    },
    {
        "question_id": 793,
        "answer_sql": ""
    },
    {
        "question_id": 794,
        "answer_sql": ""
    },
    {
        "question_id": 795,
        "answer_sql": ""
    },
    {
        "question_id": 796,
        "answer_sql": ""
    },
    {
        "question_id": 797,
        "answer_sql": "SELECT T2.state FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code GROUP BY T2.state ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 798,
        "answer_sql": "SELECT T2.state FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code GROUP BY T2.state ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 799,
        "answer_sql": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code = T2.city_code GROUP BY T1.city_code ORDER BY COUNT(T2.StuID) ASC LIMIT 1;"
    },
    {
        "question_id": 800,
        "answer_sql": "SELECT T1.country FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code GROUP BY T1.city_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 801,
        "answer_sql": "SELECT T1.city_name FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code JOIN Direct_distance AS T3 ON T2.city2_code = T3.city2_code WHERE T1.city_code IN (SELECT city_code FROM Student GROUP BY city_code HAVING COUNT(*) >= 3)"
    },
    {
        "question_id": 802,
        "answer_sql": "SELECT DISTINCT c.city_name FROM City c JOIN Direct_distance d ON c.city_code = d.city1_code OR c.city_code = d.city2_code JOIN Student s ON c.city_code = s.city_code WHERE s.StuID >= 3"
    },
    {
        "question_id": 803,
        "answer_sql": "SELECT DISTINCT T1.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code JOIN Student AS T3 ON T2.city2_code = T3.city_code WHERE T3.age > 5;"
    },
    {
        "question_id": 804,
        "answer_sql": ""
    },
    {
        "question_id": 805,
        "answer_sql": "SELECT DISTINCT T1.StuID FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance > 1000;"
    },
    {
        "question_id": 806,
        "answer_sql": "SELECT DISTINCT T1.StuID FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.city2_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')"
    },
    {
        "question_id": 807,
        "answer_sql": "SELECT T1.StuID FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Sex = 'F' AND T2.state = 'PA';"
    },
    {
        "question_id": 808,
        "answer_sql": "SELECT DISTINCT T1.StuID FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Sex = 'F' AND T2.state = 'PA';"
    },
    {
        "question_id": 809,
        "answer_sql": "SELECT T1.StuID FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Sex = 'M' AND T2.country != 'USA'"
    },
    {
        "question_id": 810,
        "answer_sql": "SELECT DISTINCT T1.StuID FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Sex = 'M' AND T2.country != 'USA'"
    },
    {
        "question_id": 811,
        "answer_sql": ""
    },
    {
        "question_id": 812,
        "answer_sql": ""
    },
    {
        "question_id": 813,
        "answer_sql": ""
    },
    {
        "question_id": 814,
        "answer_sql": ""
    },
    {
        "question_id": 815,
        "answer_sql": "SELECT AVG(DISTANCE) AS Average, MIN(DISTANCE) AS Minimum, MAX(DISTANCE) AS Maximum FROM Direct_distance;"
    },
    {
        "question_id": 816,
        "answer_sql": "SELECT AVG(DISTANCE) AS Average, MIN(DISTANCE) AS Minimum, MAX(DISTANCE) AS Maximum FROM Direct_distance;"
    },
    {
        "question_id": 817,
        "answer_sql": "SELECT DISTINCT T1.city_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code JOIN Direct_distance AS T3 ON T1.city_code = T3.city2_code WHERE T2.distance = (SELECT MAX(distance) FROM Direct_distance) ORDER BY T2.distance DESC LIMIT 2;"
    },
    {
        "question_id": 818,
        "answer_sql": ""
    },
    {
        "question_id": 819,
        "answer_sql": "SELECT DISTINCT T1.city_code FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance > (SELECT AVG(distance) FROM Direct_distance)"
    },
    {
        "question_id": 820,
        "answer_sql": "SELECT DISTINCT T1.city_code FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance > (SELECT AVG(distance) FROM Direct_distance)"
    },
    {
        "question_id": 821,
        "answer_sql": "SELECT DISTINCT T1.city_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T2.distance < 1000;"
    },
    {
        "question_id": 822,
        "answer_sql": ""
    },
    {
        "question_id": 823,
        "answer_sql": "SELECT SUM(DISTANCE) FROM Direct_distance WHERE city1_code = 'BAL'"
    },
    {
        "question_id": 824,
        "answer_sql": "SELECT SUM(DISTANCE) FROM Direct_distance WHERE city1_code = 'BAL'"
    },
    {
        "question_id": 825,
        "answer_sql": "SELECT AVG(DISTANCE) FROM Direct_distance WHERE city1_code = 'BOS' AND city2_code NOT IN (SELECT city_code FROM City);"
    },
    {
        "question_id": 826,
        "answer_sql": "SELECT AVG(DISTANCE) FROM Direct_distance WHERE city1_code = 'BOS' OR city2_code = 'BOS'"
    },
    {
        "question_id": 827,
        "answer_sql": ""
    },
    {
        "question_id": 828,
        "answer_sql": "SELECT T1.city_name FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.city1_code = (SELECT T1.city_code FROM City AS T1 WHERE T1.city_name = 'Chicago') ORDER BY T2.distance LIMIT 1;"
    },
    {
        "question_id": 829,
        "answer_sql": "SELECT T2.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code WHERE T1.city2_code = (SELECT city_code FROM City WHERE city_name = 'Boston') ORDER BY T1.distance DESC LIMIT 1;"
    },
    {
        "question_id": 830,
        "answer_sql": "SELECT T2.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code = T2.city_code WHERE T2.city_name = (SELECT city_name FROM City WHERE city_name = 'Boston') ORDER BY T1.distance DESC LIMIT 1;"
    },
    {
        "question_id": 831,
        "answer_sql": ""
    },
    {
        "question_id": 832,
        "answer_sql": "SELECT T1.city_code, SUM(T2.distance) FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code OR T1.city_code = T2.city2_code GROUP BY T1.city_code;"
    },
    {
        "question_id": 833,
        "answer_sql": ""
    },
    {
        "question_id": 834,
        "answer_sql": "SELECT c.city_name, AVG(d.distance) AS avg_distance FROM City c JOIN Direct_distance d ON c.city_code = d.city1_code OR c.city_code = d.city2_code GROUP BY c.city_name ORDER BY avg_distance DESC;"
    },
    {
        "question_id": 835,
        "answer_sql": ""
    },
    {
        "question_id": 836,
        "answer_sql": "SELECT D.distance FROM Direct_distance D JOIN Student S1 ON D.city1_code = S1.city_code JOIN Student S2 ON D.city2_code = S2.city_code WHERE S1.Fname = 'Linda' AND S1.LName = 'Smith' AND S2.Fname = 'Tracy' AND S2.LName = 'Kim';"
    },
    {
        "question_id": 837,
        "answer_sql": "SELECT T1.Fname, T1.Lname FROM Student AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code WHERE T1.Fname = 'Linda' AND T1.Lname = 'Smith' ORDER BY T2.distance DESC LIMIT 1;"
    },
    {
        "question_id": 838,
        "answer_sql": "SELECT DISTINCT S.Fname, S.LName FROM Student S JOIN Direct_distance D ON S.city_code = D.city1_code WHERE S.Fname = 'Linda' AND S.Age = (SELECT MAX(T2.Age) FROM Student AS T1 INNER JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.Fname = 'Linda' AND T1.LName = 'Smith')"
    },
    {
        "question_id": 839,
        "answer_sql": "SELECT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Fname = 'Linda';"
    },
    {
        "question_id": 840,
        "answer_sql": "SELECT T2.state FROM Student AS T1 JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.fname = 'Linda'"
    },
    {
        "question_id": 841,
        "answer_sql": "SELECT name, rating FROM Sailors WHERE age > 30;"
    },
    {
        "question_id": 842,
        "answer_sql": "SELECT name FROM Sailors WHERE age > 30;"
    },
    {
        "question_id": 843,
        "answer_sql": "SELECT S.name, S.age FROM Sailors S WHERE S.age < 30;"
    },
    {
        "question_id": 844,
        "answer_sql": "SELECT S.name, S.age FROM Sailors S WHERE S.age < 30;"
    },
    {
        "question_id": 845,
        "answer_sql": "SELECT T2.name FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid = T2.bid WHERE T1.sid = 1;"
    },
    {
        "question_id": 846,
        "answer_sql": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1;"
    },
    {
        "question_id": 847,
        "answer_sql": ""
    },
    {
        "question_id": 848,
        "answer_sql": "SELECT S.name FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.bid = 102;"
    },
    {
        "question_id": 849,
        "answer_sql": "SELECT DISTINCT bid FROM Reserves;"
    },
    {
        "question_id": 850,
        "answer_sql": "SELECT T2.bid FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid = T2.bid WHERE T1.sid IN ( SELECT T1.sid FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid = T2.bid GROUP BY T1.sid HAVING COUNT(T1.sid) > 1 );"
    },
    {
        "question_id": 851,
        "answer_sql": "SELECT S.name FROM Sailors S WHERE S.name LIKE '%e%';"
    },
    {
        "question_id": 852,
        "answer_sql": "SELECT name FROM Sailors WHERE name LIKE 'e%';"
    },
    {
        "question_id": 853,
        "answer_sql": "SELECT DISTINCT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Boats WHERE bid IN (SELECT bid FROM Reserves WHERE day = 'last day of the month'))"
    },
    {
        "question_id": 854,
        "answer_sql": "SELECT DISTINCT S.sid FROM Sailors S WHERE S.sid NOT IN (SELECT T1.sid FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid = T2.bid WHERE T2.name = 'Boat_1' AND T2.color = 'Red' AND T1.day = 'Monday')"
    },
    {
        "question_id": 855,
        "answer_sql": "SELECT DISTINCT S.name FROM Sailors S WHERE S.sid NOT IN ( SELECT R.sid FROM Reserves R WHERE R.sid IN ( SELECT S1.sid FROM Sailors S1 WHERE S1.rating > 7 ) )"
    },
    {
        "question_id": 856,
        "answer_sql": ""
    },
    {
        "question_id": 857,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S JOIN Reserves R ON S.sid = R.sid GROUP BY S.sid HAVING COUNT(DISTINCT R.bid) > 0;"
    },
    {
        "question_id": 858,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S JOIN Reserves R ON S.sid = R.sid GROUP BY S.sid HAVING COUNT(DISTINCT R.bid) > 1;"
    },
    {
        "question_id": 859,
        "answer_sql": "SELECT sid, name FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves GROUP BY sid HAVING COUNT(bid) > 1)"
    },
    {
        "question_id": 860,
        "answer_sql": "SELECT DISTINCT S.name FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid GROUP BY S.name HAVING COUNT(DISTINCT B.bid) > 1"
    },
    {
        "question_id": 861,
        "answer_sql": "SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color IN ('red', 'blue'))"
    },
    {
        "question_id": 862,
        "answer_sql": "SELECT S.sid FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.color IN ('red', 'blue')"
    },
    {
        "question_id": 863,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.color IN ('red', 'blue');"
    },
    {
        "question_id": 864,
        "answer_sql": "SELECT S.name, S.sid, B.bid FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.color IN ('red', 'blue');"
    },
    {
        "question_id": 865,
        "answer_sql": "SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color IN ('red', 'blue'))"
    },
    {
        "question_id": 866,
        "answer_sql": "SELECT r.sid FROM Reserves r JOIN Boats b ON r.bid = b.bid WHERE b.color IN ('red', 'blue')"
    },
    {
        "question_id": 867,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.color IN ('red', 'blue')"
    },
    {
        "question_id": 868,
        "answer_sql": "SELECT S.name, S.sid, B.name, B.bid FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.color IN ('red', 'blue')"
    },
    {
        "question_id": 869,
        "answer_sql": ""
    },
    {
        "question_id": 870,
        "answer_sql": ""
    },
    {
        "question_id": 871,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S WHERE S.sid NOT IN (SELECT R.sid FROM Reserves R);"
    },
    {
        "question_id": 872,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S WHERE S.sid NOT IN (SELECT R.sid FROM Reserves R);"
    },
    {
        "question_id": 873,
        "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves);"
    },
    {
        "question_id": 874,
        "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves)"
    },
    {
        "question_id": 875,
        "answer_sql": "SELECT S.name FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.bid = 103;"
    },
    {
        "question_id": 876,
        "answer_sql": "SELECT S.name FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.bid = 103;"
    },
    {
        "question_id": 877,
        "answer_sql": ""
    },
    {
        "question_id": 878,
        "answer_sql": "SELECT S.name FROM Sailors S WHERE S.sid IN ( SELECT R.sid FROM Reserves R WHERE R.sid IN ( SELECT S.sid FROM Sailors S WHERE S.name = 'Luis' ) GROUP BY R.sid HAVING COUNT(DISTINCT R.sid) = 1 )"
    },
    {
        "question_id": 879,
        "answer_sql": ""
    },
    {
        "question_id": 880,
        "answer_sql": ""
    },
    {
        "question_id": 881,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S JOIN Reserves R ON S.sid = R.sid WHERE S.rating > 2;"
    },
    {
        "question_id": 882,
        "answer_sql": "SELECT S.name, S.sid FROM Sailors S JOIN Reserves R ON S.sid = R.sid WHERE S.rating >= 3;"
    },
    {
        "question_id": 883,
        "answer_sql": "SELECT name, age FROM Sailors WHERE rating = (SELECT MAX(rating) FROM Sailors);"
    },
    {
        "question_id": 884,
        "answer_sql": "SELECT name, age FROM Sailors WHERE age = (SELECT MAX(age) FROM Sailors);"
    },
    {
        "question_id": 885,
        "answer_sql": "SELECT COUNT(sid) FROM Sailors;"
    },
    {
        "question_id": 886,
        "answer_sql": "SELECT COUNT(sid) FROM Sailors;"
    },
    {
        "question_id": 887,
        "answer_sql": "SELECT AVG(age) FROM Sailors WHERE sid IN ( SELECT sid FROM Boats WHERE bid IN ( SELECT bid FROM Reserves WHERE sid IN ( SELECT sid FROM Sailors WHERE rating = 7 ) ) )"
    },
    {
        "question_id": 888,
        "answer_sql": "SELECT AVG(age) FROM Sailors WHERE sid IN (SELECT sid FROM Boats WHERE bid IN (SELECT bid FROM Reserves WHERE rating = 7));"
    },
    {
        "question_id": 889,
        "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 890,
        "answer_sql": "SELECT COUNT(DISTINCT sid) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 891,
        "answer_sql": "SELECT AVG(S.rating), MAX(S.age) FROM Sailors S"
    },
    {
        "question_id": 892,
        "answer_sql": "SELECT AVG(S.rating), MAX(S.age) FROM Sailors S"
    },
    {
        "question_id": 893,
        "answer_sql": "SELECT b.name, COUNT(r.sid) as number_of_reservations FROM Reserves r JOIN Boats b ON r.bid = b.bid GROUP BY b.name;"
    },
    {
        "question_id": 894,
        "answer_sql": "SELECT b.name, COUNT(r.sid) AS number_of_reservations FROM Reserves r JOIN Boats b ON r.bid = b.bid GROUP BY b.name;"
    },
    {
        "question_id": 895,
        "answer_sql": ""
    },
    {
        "question_id": 896,
        "answer_sql": ""
    },
    {
        "question_id": 897,
        "answer_sql": "SELECT b.name, COUNT(*) as num_reservations FROM Boats b JOIN Reserves r ON b.bid = r.bid GROUP BY b.name HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 898,
        "answer_sql": "SELECT b.name, COUNT(*) as number_of_reservations FROM Boats b JOIN Reserves r ON b.bid = r.bid GROUP BY b.name HAVING COUNT(*) > 1"
    },
    {
        "question_id": 899,
        "answer_sql": "SELECT Boats.name, COUNT(*) FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.sid > 1 GROUP BY Boats.name;"
    },
    {
        "question_id": 900,
        "answer_sql": "SELECT b.name, COUNT(r.sid) as num_reservations FROM Boats b JOIN Reserves r ON b.bid = r.bid WHERE r.sid > 1 GROUP BY b.name;"
    },
    {
        "question_id": 901,
        "answer_sql": ""
    },
    {
        "question_id": 902,
        "answer_sql": ""
    },
    {
        "question_id": 903,
        "answer_sql": "SELECT S.name, S.rating, S.age FROM Sailors S ORDER BY S.rating, S.age;"
    },
    {
        "question_id": 904,
        "answer_sql": "SELECT S.name, S.rating, S.age FROM Sailors S ORDER BY S.rating, S.age;"
    },
    {
        "question_id": 905,
        "answer_sql": "SELECT COUNT(bid) FROM Boats;"
    },
    {
        "question_id": 906,
        "answer_sql": "SELECT COUNT(bid) FROM Boats;"
    },
    {
        "question_id": 907,
        "answer_sql": "SELECT COUNT(bid) FROM Boats WHERE color = 'red';"
    },
    {
        "question_id": 908,
        "answer_sql": "SELECT COUNT(bid) FROM Boats WHERE color = 'red'"
    },
    {
        "question_id": 909,
        "answer_sql": "SELECT b.name FROM Boats b JOIN Reserves r ON b.bid = r.bid JOIN Sailors s ON r.sid = s.sid WHERE s.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 910,
        "answer_sql": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 911,
        "answer_sql": ""
    },
    {
        "question_id": 912,
        "answer_sql": ""
    },
    {
        "question_id": 913,
        "answer_sql": "SELECT MAX(S.rating) FROM Sailors AS S JOIN Reserves AS R ON S.sid = R.sid;"
    },
    {
        "question_id": 914,
        "answer_sql": "SELECT MAX(rating) FROM Sailors;"
    },
    {
        "question_id": 915,
        "answer_sql": "SELECT S.name FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.name = 'Melon';"
    },
    {
        "question_id": 916,
        "answer_sql": "SELECT S.name FROM Sailors S JOIN Reserves R ON S.sid = R.sid JOIN Boats B ON R.bid = B.bid WHERE B.name = 'Melon';"
    },
    {
        "question_id": 917,
        "answer_sql": "SELECT name, age FROM Sailors ORDER BY rating DESC;"
    },
    {
        "question_id": 918,
        "answer_sql": "SELECT S.name, S.age FROM Sailors S WHERE S.sid IN ( SELECT T1.sid FROM Reserves AS T1 JOIN Boats AS T2 ON T1.bid = T2.bid GROUP BY T1.sid ORDER BY T1.day DESC LIMIT 10 );"
    },
    {
        "question_id": 919,
        "answer_sql": ""
    },
    {
        "question_id": 920,
        "answer_sql": "SELECT t2.Model FROM stock AS t1 JOIN headphone AS t2 ON t1.Headphone_ID = t2.Headphone_ID WHERE t1.Quantity > 0 ORDER BY t2.Price DESC LIMIT 1;"
    },
    {
        "question_id": 921,
        "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;"
    },
    {
        "question_id": 922,
        "answer_sql": ""
    },
    {
        "question_id": 923,
        "answer_sql": "SELECT h.Class FROM headphone h GROUP BY h.Class ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 924,
        "answer_sql": "SELECT h.Class FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Class ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 925,
        "answer_sql": "SELECT T2.Class FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T2.Class HAVING COUNT(T1.Store_ID) > 2"
    },
    {
        "question_id": 926,
        "answer_sql": "SELECT T2.Class FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID GROUP BY T2.Class HAVING COUNT(T1.Quantity) > 2;"
    },
    {
        "question_id": 927,
        "answer_sql": ""
    },
    {
        "question_id": 928,
        "answer_sql": ""
    },
    {
        "question_id": 929,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Earpads) FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID;"
    },
    {
        "question_id": 930,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Earpads) FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID;"
    },
    {
        "question_id": 931,
        "answer_sql": "SELECT T2.earpads FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Quantity >= 10 GROUP BY T2.earpads ORDER BY COUNT(*) DESC LIMIT 2;"
    },
    {
        "question_id": 932,
        "answer_sql": ""
    },
    {
        "question_id": 933,
        "answer_sql": "SELECT h.Model, h.Class, h.Construction FROM headphone h ORDER BY h.Price ASC LIMIT 1;"
    },
    {
        "question_id": 934,
        "answer_sql": ""
    },
    {
        "question_id": 935,
        "answer_sql": ""
    },
    {
        "question_id": 936,
        "answer_sql": ""
    },
    {
        "question_id": 937,
        "answer_sql": ""
    },
    {
        "question_id": 938,
        "answer_sql": "SELECT T2.Class FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Earpads IN ('Bowls', 'Comfort Pads') GROUP BY T2.Class HAVING COUNT(T1.Quantity) >= 2;"
    },
    {
        "question_id": 939,
        "answer_sql": "SELECT DISTINCT T2.earpads FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Construction != 'Plastic'"
    },
    {
        "question_id": 940,
        "answer_sql": "SELECT DISTINCT T2.earpads FROM stock AS T1 JOIN headphone AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T2.Construction != 'plastic';"
    },
    {
        "question_id": 941,
        "answer_sql": "SELECT h.Model FROM headphone h WHERE h.Price < (SELECT AVG(Price) FROM headphone);"
    },
    {
        "question_id": 942,
        "answer_sql": "SELECT h.Model FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE s.Quantity > 0 GROUP BY h.Model ORDER BY AVG(s.Quantity) ASC LIMIT 1;"
    },
    {
        "question_id": 943,
        "answer_sql": ""
    },
    {
        "question_id": 944,
        "answer_sql": "SELECT s.Name FROM store s ORDER BY s.Date_Opened"
    },
    {
        "question_id": 945,
        "answer_sql": "SELECT s.Name, s.Parking FROM store s JOIN stock st ON s.Store_ID = st.Store_ID WHERE s.Neighborhood = 'Tarzana';"
    },
    {
        "question_id": 946,
        "answer_sql": "SELECT s.Name, s.Parking FROM store s WHERE s.Store_ID IN ( SELECT st.Store_ID FROM stock st JOIN headphone h ON st.Headphone_ID = h.Headphone_ID WHERE s.Neighborhood = 'Tarzana' );"
    },
    {
        "question_id": 947,
        "answer_sql": ""
    },
    {
        "question_id": 948,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Store_ID) FROM store AS T1 JOIN stock AS T2 ON T1.Store_ID = T2.Store_ID GROUP BY T1.Store_ID;"
    },
    {
        "question_id": 949,
        "answer_sql": "SELECT T2.Name, COUNT(*) as Quantity FROM stock AS T1 JOIN store AS T2 ON T1.Store_ID = T2.Store_ID GROUP BY T2.Name"
    },
    {
        "question_id": 950,
        "answer_sql": "SELECT T2.Name, COUNT(*) as Quantity FROM stock AS T1 JOIN store AS T2 ON T1.Store_ID = T2.Store_ID GROUP BY T2.Name"
    },
    {
        "question_id": 951,
        "answer_sql": "SELECT s.Name, COUNT(*) as Quantity FROM store s JOIN stock st ON s.Store_ID = st.Store_ID JOIN headphone h ON st.Headphone_ID = h.Headphone_ID GROUP BY s.Name ORDER BY Quantity DESC LIMIT 1;"
    },
    {
        "question_id": 952,
        "answer_sql": "SELECT s.Name, SUM(st.Quantity) FROM store s JOIN stock st ON s.Store_ID = st.Store_ID GROUP BY s.Store_ID HAVING SUM(st.Quantity) > 0 ORDER BY s.Name;"
    },
    {
        "question_id": 953,
        "answer_sql": ""
    },
    {
        "question_id": 954,
        "answer_sql": ""
    },
    {
        "question_id": 955,
        "answer_sql": ""
    },
    {
        "question_id": 956,
        "answer_sql": ""
    },
    {
        "question_id": 957,
        "answer_sql": "SELECT h.Model FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model ORDER BY SUM(s.Quantity) DESC LIMIT 1;"
    },
    {
        "question_id": 958,
        "answer_sql": "SELECT h.Model FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model ORDER BY SUM(s.Quantity) DESC LIMIT 1;"
    },
    {
        "question_id": 959,
        "answer_sql": "SELECT COUNT(*) FROM stock WHERE Store_ID = (SELECT Store_ID FROM store WHERE Name = 'Woodman')"
    },
    {
        "question_id": 960,
        "answer_sql": "SELECT SUM(Quantity) FROM stock WHERE Store_ID = (SELECT Store_ID FROM store WHERE Name = 'Woodman')"
    },
    {
        "question_id": 961,
        "answer_sql": ""
    },
    {
        "question_id": 962,
        "answer_sql": ""
    },
    {
        "question_id": 963,
        "answer_sql": "SELECT COUNT(*) FROM Author;"
    },
    {
        "question_id": 964,
        "answer_sql": "SELECT COUNT(DISTINCT T1.author_id) FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id;"
    },
    {
        "question_id": 965,
        "answer_sql": "SELECT COUNT(*) FROM Paper;"
    },
    {
        "question_id": 966,
        "answer_sql": "SELECT COUNT(*) FROM Paper;"
    },
    {
        "question_id": 967,
        "answer_sql": "SELECT COUNT(DISTINCT T1.author_id) FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id;"
    },
    {
        "question_id": 968,
        "answer_sql": "SELECT COUNT(*) FROM Affiliation;"
    },
    {
        "question_id": 969,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000';"
    },
    {
        "question_id": 970,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000';"
    },
    {
        "question_id": 971,
        "answer_sql": ""
    },
    {
        "question_id": 972,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE year = 2009 AND venue = 'Columbia University'"
    },
    {
        "question_id": 973,
        "answer_sql": ""
    },
    {
        "question_id": 974,
        "answer_sql": ""
    },
    {
        "question_id": 975,
        "answer_sql": ""
    },
    {
        "question_id": 976,
        "answer_sql": "SELECT DISTINCT venue FROM Paper ORDER BY year;"
    },
    {
        "question_id": 977,
        "answer_sql": ""
    },
    {
        "question_id": 978,
        "answer_sql": ""
    },
    {
        "question_id": 979,
        "answer_sql": ""
    },
    {
        "question_id": 980,
        "answer_sql": ""
    },
    {
        "question_id": 981,
        "answer_sql": ""
    },
    {
        "question_id": 982,
        "answer_sql": ""
    },
    {
        "question_id": 983,
        "answer_sql": ""
    },
    {
        "question_id": 984,
        "answer_sql": ""
    },
    {
        "question_id": 985,
        "answer_sql": ""
    },
    {
        "question_id": 986,
        "answer_sql": ""
    },
    {
        "question_id": 987,
        "answer_sql": ""
    },
    {
        "question_id": 988,
        "answer_sql": ""
    },
    {
        "question_id": 989,
        "answer_sql": ""
    },
    {
        "question_id": 990,
        "answer_sql": ""
    },
    {
        "question_id": 991,
        "answer_sql": ""
    },
    {
        "question_id": 992,
        "answer_sql": ""
    },
    {
        "question_id": 993,
        "answer_sql": ""
    },
    {
        "question_id": 994,
        "answer_sql": "SELECT DISTINCT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.paper_id IN ( SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > 50 )"
    },
    {
        "question_id": 995,
        "answer_sql": ""
    },
    {
        "question_id": 996,
        "answer_sql": ""
    },
    {
        "question_id": 997,
        "answer_sql": "SELECT T1.venue, T1.year FROM Paper AS T1 JOIN ( SELECT paper_id, COUNT(*) AS num_publications FROM Paper GROUP BY paper_id ) AS T2 ON T1.paper_id = T2.paper_id ORDER BY T2.num_publications DESC LIMIT 1;"
    },
    {
        "question_id": 998,
        "answer_sql": "SELECT T1.venue, T1.year FROM Paper AS T1 JOIN ( SELECT paper_id, COUNT(*) AS count FROM Paper GROUP BY paper_id ORDER BY count DESC LIMIT 1 ) AS T2 ON T1.paper_id = T2.paper_id ORDER BY T2.count DESC LIMIT 1;"
    },
    {
        "question_id": 999,
        "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1000,
        "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1001,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id = 'A00-1002')"
    },
    {
        "question_id": 1002,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id IN (SELECT cited_paper_id FROM Citation WHERE paper_id = (SELECT paper_id FROM Paper WHERE title = 'A00-1002'));"
    },
    {
        "question_id": 1003,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id = 'D12-1027';"
    },
    {
        "question_id": 1004,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE author_id = (SELECT author_id FROM Author WHERE name = 'D12-1027') GROUP BY paper_id HAVING COUNT(affiliation_id) > 1);"
    },
    {
        "question_id": 1005,
        "answer_sql": "SELECT T2.paper_id, COUNT(*) AS number_of_citations FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.paper_id ORDER BY number_of_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1006,
        "answer_sql": "SELECT T2.paper_id, COUNT(*) AS num_citations FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.paper_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1007,
        "answer_sql": "SELECT T1.title FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T3.paper_id = (SELECT paper_id FROM Citation WHERE cited_paper_id = T2.paper_id GROUP BY paper_id ORDER BY COUNT(*) DESC LIMIT 1)"
    },
    {
        "question_id": 1008,
        "answer_sql": "SELECT T2.title FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.title ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1009,
        "answer_sql": "SELECT T1.paper_id, COUNT(*) AS citation_count FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id JOIN Citation AS T3 ON T1.paper_id = T3.cited_paper_id GROUP BY T1.paper_id ORDER BY citation_count DESC LIMIT 10;"
    },
    {
        "question_id": 1010,
        "answer_sql": "SELECT T2.paper_id, COUNT(*) AS citation_count FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.paper_id ORDER BY citation_count DESC LIMIT 10;"
    },
    {
        "question_id": 1011,
        "answer_sql": ""
    },
    {
        "question_id": 1012,
        "answer_sql": ""
    },
    {
        "question_id": 1013,
        "answer_sql": ""
    },
    {
        "question_id": 1014,
        "answer_sql": ""
    },
    {
        "question_id": 1015,
        "answer_sql": "SELECT a.name, COUNT(*) AS num_citations FROM Author a JOIN Author_list al ON a.author_id = al.author_id GROUP BY a.author_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1016,
        "answer_sql": ""
    },
    {
        "question_id": 1017,
        "answer_sql": ""
    },
    {
        "question_id": 1018,
        "answer_sql": ""
    },
    {
        "question_id": 1019,
        "answer_sql": ""
    },
    {
        "question_id": 1020,
        "answer_sql": ""
    },
    {
        "question_id": 1021,
        "answer_sql": ""
    },
    {
        "question_id": 1022,
        "answer_sql": ""
    },
    {
        "question_id": 1023,
        "answer_sql": ""
    },
    {
        "question_id": 1024,
        "answer_sql": ""
    },
    {
        "question_id": 1025,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University') AND year >= 2009)"
    },
    {
        "question_id": 1026,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year >= 2009;"
    },
    {
        "question_id": 1027,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id IN (SELECT paper_id FROM Citation WHERE cited_paper_id IN (SELECT paper_id FROM Paper WHERE year BETWEEN 2000 AND 2009) GROUP BY paper_id HAVING COUNT(*) > 1)"
    },
    {
        "question_id": 1028,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE affiliation_id = (SELECT affiliation_id FROM Affiliation WHERE name = 'Stanford University') AND year BETWEEN 2000 AND 2009)"
    },
    {
        "question_id": 1029,
        "answer_sql": "SELECT T1.title FROM Paper AS T1 JOIN ( SELECT T2.paper_id, COUNT(*) as num_authors FROM Paper AS T2 JOIN Author_list AS T3 ON T2.paper_id = T3.paper_id GROUP BY T2.paper_id ) AS T2 ON T1.paper_id = T2.paper_id ORDER BY T2.num_authors DESC LIMIT 1;"
    },
    {
        "question_id": 1030,
        "answer_sql": "SELECT T1.title FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id GROUP BY T1.paper_id ORDER BY COUNT(T2.author_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1031,
        "answer_sql": "SELECT COUNT(DISTINCT T2.author_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id = T2.paper_id JOIN Author AS T3 ON T2.author_id = T3.author_id WHERE T3.name = 'Mckeown' AND T3.email = 'kathleen@example.com';"
    },
    {
        "question_id": 1032,
        "answer_sql": "SELECT COUNT(*) FROM Author WHERE name = 'Mckeown' AND author_id IN (SELECT author_id FROM Author_list WHERE name = 'Kathleen')"
    },
    {
        "question_id": 1033,
        "answer_sql": ""
    },
    {
        "question_id": 1034,
        "answer_sql": ""
    },
    {
        "question_id": 1035,
        "answer_sql": "SELECT DISTINCT T2.paper_id FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T1.title LIKE '%translation%';"
    },
    {
        "question_id": 1036,
        "answer_sql": "SELECT DISTINCT T2.paper_id FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id WHERE T1.title LIKE '%translation%';"
    },
    {
        "question_id": 1037,
        "answer_sql": ""
    },
    {
        "question_id": 1038,
        "answer_sql": ""
    },
    {
        "question_id": 1039,
        "answer_sql": ""
    },
    {
        "question_id": 1040,
        "answer_sql": ""
    },
    {
        "question_id": 1041,
        "answer_sql": "SELECT T1.year, COUNT(T2.paper_id) AS num_papers FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id GROUP BY T1.year"
    },
    {
        "question_id": 1042,
        "answer_sql": "SELECT T2.venue, T2.year, COUNT(T1.paper_id) AS num_papers FROM Paper AS T1 JOIN Paper AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.venue, T2.year"
    },
    {
        "question_id": 1043,
        "answer_sql": "SELECT affiliation_id, COUNT(*) as total_papers FROM Author_list JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY affiliation_id"
    },
    {
        "question_id": 1044,
        "answer_sql": ""
    },
    {
        "question_id": 1045,
        "answer_sql": ""
    },
    {
        "question_id": 1046,
        "answer_sql": ""
    },
    {
        "question_id": 1047,
        "answer_sql": ""
    },
    {
        "question_id": 1048,
        "answer_sql": ""
    },
    {
        "question_id": 1049,
        "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009 GROUP BY A.name HAVING COUNT(P.paper_id) > 1;"
    },
    {
        "question_id": 1050,
        "answer_sql": "SELECT DISTINCT A.name FROM Author A JOIN Author_list BL ON A.author_id = BL.author_id JOIN Paper P ON BL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009 GROUP BY A.name HAVING COUNT(DISTINCT P.paper_id) = 2"
    },
    {
        "question_id": 1051,
        "answer_sql": ""
    },
    {
        "question_id": 1052,
        "answer_sql": ""
    },
    {
        "question_id": 1053,
        "answer_sql": "SELECT COUNT(DISTINCT Conference_ID) FROM conference;"
    },
    {
        "question_id": 1054,
        "answer_sql": "SELECT COUNT(DISTINCT conference.Conference_ID) AS Total_Conferences FROM conference;"
    },
    {
        "question_id": 1055,
        "answer_sql": "SELECT DISTINCT conference.Conference_Name FROM conference JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID JOIN staff ON conference_participation.staff_ID = staff.staff_ID"
    },
    {
        "question_id": 1056,
        "answer_sql": "SELECT DISTINCT Conference_Name FROM conference;"
    },
    {
        "question_id": 1057,
        "answer_sql": "SELECT Conference_Name, Year, Location FROM conference;"
    },
    {
        "question_id": 1058,
        "answer_sql": "SELECT c.Conference_Name, c.Year, c.Location FROM conference c"
    },
    {
        "question_id": 1059,
        "answer_sql": "SELECT c.Conference_Name, COUNT(*) as Conference_Count FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_ID, c.Conference_Name;"
    },
    {
        "question_id": 1060,
        "answer_sql": "SELECT c.Conference_Name, COUNT(*) AS Conference_Count FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name"
    },
    {
        "question_id": 1061,
        "answer_sql": "SELECT Year, COUNT(*) as Conference_Count FROM conference GROUP BY Year;"
    },
    {
        "question_id": 1062,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Conference_ID) AS Yearly_Conferences FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID JOIN institution AS T3 ON T2.staff_ID = T3.Institution_ID WHERE T1.Year = T3.Founded"
    },
    {
        "question_id": 1063,
        "answer_sql": "SELECT T1.Year FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID GROUP BY T1.Year ORDER BY COUNT(T2.Conference_ID) ASC LIMIT 1;"
    },
    {
        "question_id": 1064,
        "answer_sql": "SELECT T1.Year FROM conference AS T1 JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID GROUP BY T1.Year ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1065,
        "answer_sql": "SELECT Location FROM conference GROUP BY Location HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1066,
        "answer_sql": "SELECT Location FROM conference WHERE Conference_ID IN ( SELECT Conference_ID FROM conference_participation GROUP BY Conference_ID HAVING COUNT(DISTINCT staff_ID) >= 2 );"
    },
    {
        "question_id": 1067,
        "answer_sql": "SELECT Institution_Name, Location, Founded FROM institution;"
    },
    {
        "question_id": 1068,
        "answer_sql": "SELECT i.Institution_Name, i.Location, i.Founded FROM institution i"
    },
    {
        "question_id": 1069,
        "answer_sql": ""
    },
    {
        "question_id": 1070,
        "answer_sql": ""
    },
    {
        "question_id": 1071,
        "answer_sql": "SELECT i.Institution_Name, i.Location FROM institution i WHERE i.Founded = (SELECT MAX(Founded) FROM institution);"
    },
    {
        "question_id": 1072,
        "answer_sql": "SELECT i.Institution_Name, i.Location FROM institution i WHERE i.Founded = (SELECT MAX(Founded) FROM institution) ORDER BY i.Founded DESC;"
    },
    {
        "question_id": 1073,
        "answer_sql": ""
    },
    {
        "question_id": 1074,
        "answer_sql": "SELECT i.Institution_Name, COUNT(s.staff_ID) AS Staff_Count FROM institution i JOIN staff s ON i.Institution_ID = s.Institution_ID WHERE i.Founded > 1800 GROUP BY i.Institution_Name;"
    },
    {
        "question_id": 1075,
        "answer_sql": "SELECT i.Institution_Name FROM institution i WHERE i.Institution_ID NOT IN (SELECT s.Institution_ID FROM staff s);"
    },
    {
        "question_id": 1076,
        "answer_sql": "SELECT i.Institution_Name FROM institution i WHERE i.Institution_ID NOT IN (SELECT s.Institution_ID FROM staff s GROUP BY s.Institution_ID HAVING COUNT(s.Institution_ID) = 0)"
    },
    {
        "question_id": 1077,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID GROUP BY s.name HAVING AVG(s.Age) > (SELECT AVG(Age) FROM staff) ORDER BY AVG(s.Age) DESC;"
    },
    {
        "question_id": 1078,
        "answer_sql": "SELECT name FROM staff WHERE age > (SELECT AVG(age) FROM staff);"
    },
    {
        "question_id": 1079,
        "answer_sql": "SELECT MAX(staff.Age) AS MaxAge, MIN(staff.Age) AS MinAge FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN institution ON staff.Institution_ID = institution.Institution_ID WHERE institution.Location = 'United States'"
    },
    {
        "question_id": 1080,
        "answer_sql": "SELECT MAX(staff.Age), MIN(staff.Age) FROM staff;"
    },
    {
        "question_id": 1081,
        "answer_sql": ""
    },
    {
        "question_id": 1082,
        "answer_sql": ""
    },
    {
        "question_id": 1083,
        "answer_sql": ""
    },
    {
        "question_id": 1084,
        "answer_sql": ""
    },
    {
        "question_id": 1085,
        "answer_sql": "SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_ID = T2.staff_ID JOIN conference AS T3 ON T2.Conference_ID = T3.Conference_ID WHERE T3.Conference_Name IN ('ACL', 'Naccl')"
    },
    {
        "question_id": 1086,
        "answer_sql": ""
    },
    {
        "question_id": 1087,
        "answer_sql": "SELECT DISTINCT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Year = 2003 OR c.Year = 2004;"
    },
    {
        "question_id": 1088,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Year >= 2003 AND c.Year <= 2004"
    },
    {
        "question_id": 1089,
        "answer_sql": "SELECT c.Conference_Name, c.Year, COUNT(*) as Number_of_participants FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_ID"
    },
    {
        "question_id": 1090,
        "answer_sql": "SELECT c.Conference_Name, c.Year, COUNT(*) AS Number_of_participants FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_ID"
    },
    {
        "question_id": 1091,
        "answer_sql": "SELECT c.Conference_Name FROM conference c JOIN ( SELECT Conference_ID, COUNT(*) as attendants FROM conference_participation GROUP BY Conference_ID ORDER BY attendants DESC LIMIT 2 ) p ON c.Conference_ID = p.Conference_ID"
    },
    {
        "question_id": 1092,
        "answer_sql": ""
    },
    {
        "question_id": 1093,
        "answer_sql": "SELECT T2.name, T2.Nationality FROM conference_participation AS T1 JOIN staff AS T2 ON T1.staff_ID = T2.staff_ID WHERE T1.Conference_ID NOT IN (SELECT Conference_ID FROM conference WHERE Conference_Name = 'ACL')"
    },
    {
        "question_id": 1094,
        "answer_sql": "SELECT T2.name, T2.Nationality FROM conference_participation AS T1 JOIN staff AS T2 ON T1.staff_ID = T2.staff_ID WHERE T1.Conference_ID NOT IN (SELECT Conference_ID FROM conference WHERE Conference_Name = 'ACL')"
    },
    {
        "question_id": 1095,
        "answer_sql": "SELECT i.Institution_Name, i.Location FROM institution i WHERE i.Institution_ID NOT IN ( SELECT s.Institution_ID FROM staff s WHERE s.Institution_ID IN ( SELECT c.Conference_ID FROM conference c WHERE c.Year = 2004 ) );"
    },
    {
        "question_id": 1096,
        "answer_sql": ""
    },
    {
        "question_id": 1097,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills) ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1098,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills) ORDER BY pilot_name ASC LIMIT 1;"
    },
    {
        "question_id": 1099,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age;"
    },
    {
        "question_id": 1100,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age ASC;"
    },
    {
        "question_id": 1101,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1102,
        "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1103,
        "answer_sql": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.plane_name = 'Piper Cub' AND PilotSkills.age < 35;"
    },
    {
        "question_id": 1104,
        "answer_sql": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35 AND Hangar.plane_name = 'Piper Cub';"
    },
    {
        "question_id": 1105,
        "answer_sql": "SELECT location FROM Hangar WHERE plane_name = 'F-14 Fighter';"
    },
    {
        "question_id": 1106,
        "answer_sql": ""
    },
    {
        "question_id": 1107,
        "answer_sql": "SELECT COUNT(DISTINCT T2.location) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name;"
    },
    {
        "question_id": 1108,
        "answer_sql": "SELECT COUNT(DISTINCT T2.location) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name;"
    },
    {
        "question_id": 1109,
        "answer_sql": "SELECT T2.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Jones' AND T1.age = 32;"
    },
    {
        "question_id": 1110,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32;"
    },
    {
        "question_id": 1111,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1112,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1113,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name LIKE 'B%' AND T1.age < 35;"
    },
    {
        "question_id": 1114,
        "answer_sql": "SELECT COUNT(pilot_name) FROM PilotSkills WHERE pilot_name LIKE 'B-52' AND age < 35 AND plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'New York');"
    },
    {
        "question_id": 1115,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age ASC LIMIT 1;"
    },
    {
        "question_id": 1116,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age ASC LIMIT 1;"
    },
    {
        "question_id": 1117,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1118,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1119,
        "answer_sql": "SELECT pilot_name FROM PilotSkills GROUP BY pilot_name ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1120,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1121,
        "answer_sql": "SELECT COUNT(pilot_name) FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Chicago')"
    },
    {
        "question_id": 1122,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Chicago')"
    },
    {
        "question_id": 1123,
        "answer_sql": "SELECT T1.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Smith' AND T1.age = 41;"
    },
    {
        "question_id": 1124,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE pilot_name = 'Smith' AND age = 41;"
    },
    {
        "question_id": 1125,
        "answer_sql": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills;"
    },
    {
        "question_id": 1126,
        "answer_sql": "SELECT COUNT(DISTINCT T2.plane_name) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name;"
    },
    {
        "question_id": 1127,
        "answer_sql": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE pilot_name = 'Smith';"
    },
    {
        "question_id": 1128,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = 'Smith';"
    },
    {
        "question_id": 1129,
        "answer_sql": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE age > 40 AND plane_name IN (SELECT plane_name FROM Hangar);"
    },
    {
        "question_id": 1130,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1131,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"
    },
    {
        "question_id": 1132,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"
    },
    {
        "question_id": 1133,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC;"
    },
    {
        "question_id": 1134,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC;"
    },
    {
        "question_id": 1135,
        "answer_sql": "SELECT location FROM Hangar ORDER BY plane_name;"
    },
    {
        "question_id": 1136,
        "answer_sql": "SELECT DISTINCT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY plane_name;"
    },
    {
        "question_id": 1137,
        "answer_sql": "SELECT DISTINCT T2.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.pilot_name;"
    },
    {
        "question_id": 1138,
        "answer_sql": "SELECT DISTINCT plane_name FROM PilotSkills ORDER BY plane_name;"
    },
    {
        "question_id": 1139,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"
    },
    {
        "question_id": 1140,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"
    },
    {
        "question_id": 1141,
        "answer_sql": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.plane_name = 'Piper Cub' AND PilotSkills.age > 35 OR PilotSkills.plane_name = 'F-14 Fighter' AND PilotSkills.age < 30;"
    },
    {
        "question_id": 1142,
        "answer_sql": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > 35 OR PilotSkills.age < 30"
    },
    {
        "question_id": 1143,
        "answer_sql": ""
    },
    {
        "question_id": 1144,
        "answer_sql": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name NOT IN ( SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name = 'Piper Cub' )"
    },
    {
        "question_id": 1145,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'B-52 Bomber')"
    },
    {
        "question_id": 1146,
        "answer_sql": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.plane_name IN ('Piper Cub', 'B-52 Bomber')"
    },
    {
        "question_id": 1147,
        "answer_sql": "SELECT AVG(age), MIN(age) FROM PilotSkills;"
    },
    {
        "question_id": 1148,
        "answer_sql": "SELECT AVG(age), MIN(age) FROM PilotSkills;"
    },
    {
        "question_id": 1149,
        "answer_sql": "SELECT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name IN (SELECT plane_name FROM PilotSkills WHERE pilot_name IN (SELECT pilot_name FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar)))"
    },
    {
        "question_id": 1150,
        "answer_sql": "SELECT pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location IN ('Austin', 'Boston')"
    },
    {
        "question_id": 1151,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'F-14 Fighter')"
    },
    {
        "question_id": 1152,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'F-14 Fighter')"
    },
    {
        "question_id": 1153,
        "answer_sql": ""
    },
    {
        "question_id": 1154,
        "answer_sql": "SELECT h.plane_name, AVG(ps.age) FROM PilotSkills ps JOIN Hangar h ON ps.plane_name = h.plane_name GROUP BY h.plane_name;"
    },
    {
        "question_id": 1155,
        "answer_sql": "SELECT plane_name, COUNT(*) AS num_planes FROM PilotSkills GROUP BY plane_name;"
    },
    {
        "question_id": 1156,
        "answer_sql": "SELECT plane_name, COUNT(*) AS num_of_entries FROM PilotSkills GROUP BY plane_name;"
    },
    {
        "question_id": 1157,
        "answer_sql": ""
    },
    {
        "question_id": 1158,
        "answer_sql": "SELECT h.plane_name, s.pilot_name FROM PilotSkills s JOIN Hangar h ON s.plane_name = h.plane_name ORDER BY s.plane_name;"
    },
    {
        "question_id": 1159,
        "answer_sql": "SELECT T1.pilot_name, T2.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.age DESC;"
    },
    {
        "question_id": 1160,
        "answer_sql": "SELECT h.plane_name, s.pilot_name FROM PilotSkills s JOIN Hangar h ON s.plane_name = h.plane_name ORDER BY s.pilot_name, h.location;"
    },
    {
        "question_id": 1161,
        "answer_sql": "SELECT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name;"
    },
    {
        "question_id": 1162,
        "answer_sql": "SELECT pilot_name, MAX(age) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY pilot_name;"
    },
    {
        "question_id": 1163,
        "answer_sql": "SELECT h.location, COUNT(DISTINCT p.pilot_name) AS num_pilots, AVG(p.age) AS avg_age FROM PilotSkills AS p JOIN Hangar AS h ON p.plane_name = h.plane_name GROUP BY h.location"
    },
    {
        "question_id": 1164,
        "answer_sql": "SELECT h.location, COUNT(p.pilot_name) AS num_pilots, AVG(p.age) AS avg_age FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name GROUP BY h.location;"
    },
    {
        "question_id": 1165,
        "answer_sql": ""
    },
    {
        "question_id": 1166,
        "answer_sql": "SELECT h.plane_name, COUNT(p.pilot_name) FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age < 35 GROUP BY h.plane_name;"
    },
    {
        "question_id": 1167,
        "answer_sql": "SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.pilot_name = (SELECT MIN(pilot_name) FROM PilotSkills)"
    },
    {
        "question_id": 1168,
        "answer_sql": "SELECT T2.location FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age = (SELECT MIN(age) FROM PilotSkills WHERE pilot_name = T1.pilot_name)"
    },
    {
        "question_id": 1169,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin';"
    },
    {
        "question_id": 1170,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin';"
    },
    {
        "question_id": 1171,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age > (SELECT age FROM PilotSkills WHERE pilot_name = (SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub') ORDER BY age DESC LIMIT 1)"
    },
    {
        "question_id": 1172,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age > ( SELECT MIN(age) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name = PilotSkills.plane_name ) ORDER BY pilot_name;"
    },
    {
        "question_id": 1173,
        "answer_sql": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE age < (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'F-14 Fighter') GROUP BY pilot_name;"
    },
    {
        "question_id": 1174,
        "answer_sql": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE pilot_name < (SELECT pilot_name FROM PilotSkills WHERE plane_name = 'F-14 Fighter')"
    },
    {
        "question_id": 1175,
        "answer_sql": "SELECT DISTINCT plane_name FROM PilotSkills WHERE plane_name IN ( SELECT plane_name FROM Hangar WHERE plane_name LIKE '%Bomber%' );"
    },
    {
        "question_id": 1176,
        "answer_sql": "SELECT DISTINCT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name LIKE '%Bomber%'"
    },
    {
        "question_id": 1177,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.age > (SELECT T1.age FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.plane_name = 'Piper Cub') LIMIT 1;"
    },
    {
        "question_id": 1178,
        "answer_sql": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills WHERE pilot_name = ( SELECT pilot_name FROM PilotSkills WHERE plane_name = ( SELECT plane_name FROM Hangar WHERE location = 'Piper Cub' ) ORDER BY age LIMIT 1 );"
    },
    {
        "question_id": 1179,
        "answer_sql": ""
    },
    {
        "question_id": 1180,
        "answer_sql": ""
    },
    {
        "question_id": 1181,
        "answer_sql": "SELECT d.Name, d.Population FROM district d WHERE d.Area_km > ( SELECT AVG(Area_km) FROM district );"
    },
    {
        "question_id": 1182,
        "answer_sql": "SELECT MAX(d.Area_km) AS Largest_Area, AVG(d.Area_km) AS Average_Area FROM district d"
    },
    {
        "question_id": 1183,
        "answer_sql": "SELECT SUM(d.Population) FROM district d WHERE d.Density_km IN ( SELECT MAX(density_km) FROM district GROUP BY density_km LIMIT 3 )"
    },
    {
        "question_id": 1184,
        "answer_sql": ""
    },
    {
        "question_id": 1185,
        "answer_sql": ""
    },
    {
        "question_id": 1186,
        "answer_sql": "SELECT d.District_ID, d.Name FROM district d WHERE d.Population > 4000 OR d.Area_km > 3000;"
    },
    {
        "question_id": 1187,
        "answer_sql": ""
    },
    {
        "question_id": 1188,
        "answer_sql": "SELECT AVG(points), AVG(age) FROM spokesman WHERE Rank_position = 1;"
    },
    {
        "question_id": 1189,
        "answer_sql": "SELECT s.Name, s.Points FROM spokesman s WHERE s.Age < 40;"
    },
    {
        "question_id": 1190,
        "answer_sql": "SELECT Name FROM spokesman WHERE Age = (SELECT MIN(Age) FROM spokesman) ORDER BY Age DESC LIMIT 1;"
    },
    {
        "question_id": 1191,
        "answer_sql": ""
    },
    {
        "question_id": 1192,
        "answer_sql": "SELECT d.Name FROM district d JOIN (SELECT District_ID, COUNT(*) AS num_spokesmen FROM spokesman_district GROUP BY District_ID ORDER BY num_spokesmen DESC LIMIT 1) sps ON d.District_ID = sps.District_ID"
    },
    {
        "question_id": 1193,
        "answer_sql": ""
    },
    {
        "question_id": 1194,
        "answer_sql": ""
    },
    {
        "question_id": 1195,
        "answer_sql": ""
    },
    {
        "question_id": 1196,
        "answer_sql": ""
    },
    {
        "question_id": 1197,
        "answer_sql": ""
    },
    {
        "question_id": 1198,
        "answer_sql": ""
    },
    {
        "question_id": 1199,
        "answer_sql": ""
    },
    {
        "question_id": 1200,
        "answer_sql": "SELECT DISTINCT T2.title FROM Sculptures AS T1 JOIN Paintings AS T2 ON T1.sculptorID = T2.painterID WHERE T1.year = (SELECT MAX(year) FROM Paintings) ORDER BY T1.year DESC LIMIT 1;"
    },
    {
        "question_id": 1201,
        "answer_sql": "SELECT Sculptures.title FROM Sculptures JOIN Paintings ON Sculptures.sculptorID = Paintings.painterID WHERE Sculptures.year = (SELECT MAX(year) FROM Paintings) ORDER BY Sculptures.year DESC LIMIT 1;"
    },
    {
        "question_id": 1202,
        "answer_sql": "SELECT title, location FROM Paintings ORDER BY year ASC LIMIT 1;"
    },
    {
        "question_id": 1203,
        "answer_sql": "SELECT T1.title, T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year = (SELECT MIN(year) FROM Paintings AS T3 WHERE T3.painterID = T1.painterID) ORDER BY T1.year DESC LIMIT 1;"
    },
    {
        "question_id": 1204,
        "answer_sql": ""
    },
    {
        "question_id": 1205,
        "answer_sql": ""
    },
    {
        "question_id": 1206,
        "answer_sql": "SELECT T1.title, T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID;"
    },
    {
        "question_id": 1207,
        "answer_sql": "SELECT p.title, p.location FROM Paintings p JOIN Artists a ON p.painterID = a.artistID;"
    },
    {
        "question_id": 1208,
        "answer_sql": "SELECT T2.title, T2.location FROM Sculptures AS T1 JOIN Paintings AS T2 ON T1.sculptorID = T2.painterID ORDER BY T1.sculptorID;"
    },
    {
        "question_id": 1209,
        "answer_sql": "SELECT DISTINCT s.title, s.location FROM Sculptures s JOIN Artists a ON s.sculptorID = a.artistID;"
    },
    {
        "question_id": 1210,
        "answer_sql": "SELECT DISTINCT T1.medium FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.paintingID = 80;"
    },
    {
        "question_id": 1211,
        "answer_sql": "SELECT DISTINCT T1.medium FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.paintingID = 80;"
    },
    {
        "question_id": 1212,
        "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear > 1850;"
    },
    {
        "question_id": 1213,
        "answer_sql": "SELECT T1.fname, T1.lname FROM Artists AS T1 WHERE T1.birthYear > 1850;"
    },
    {
        "question_id": 1214,
        "answer_sql": "SELECT DISTINCT a.fname, a.lname, p.year FROM Artists a JOIN Paintings p ON a.artistID = p.painterID WHERE p.location != 'gallery 226';"
    },
    {
        "question_id": 1215,
        "answer_sql": "SELECT DISTINCT a.fname, a.lname, p.year FROM Artists a JOIN Paintings p ON a.artistID = p.painterID WHERE p.location != 'gallery 226';"
    },
    {
        "question_id": 1216,
        "answer_sql": "SELECT DISTINCT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID JOIN Sculptures s ON a.artistID = s.sculptorID WHERE p.year < 1900;"
    },
    {
        "question_id": 1217,
        "answer_sql": "SELECT DISTINCT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID JOIN Sculptures s ON a.artistID = s.sculptorID WHERE p.year < 1900;"
    },
    {
        "question_id": 1218,
        "answer_sql": "SELECT DISTINCT a.birthYear FROM Artists a JOIN Paintings p ON a.artistID = p.painterID JOIN Sculptures s ON a.artistID = s.sculptorID WHERE p.year > 1920;"
    },
    {
        "question_id": 1219,
        "answer_sql": "SELECT DISTINCT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID JOIN Sculptures s ON p.painterID = s.sculptorID WHERE p.year > 1920;"
    },
    {
        "question_id": 1220,
        "answer_sql": "SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN ( SELECT artistID, MAX(birthYear) as max_birth_year FROM Artists GROUP BY artistID ) AS T2 ON T1.artistID = T2.artistID WHERE T2.max_birth_year = T1.birthYear ORDER BY T1.birthYear DESC LIMIT 1;"
    },
    {
        "question_id": 1221,
        "answer_sql": "SELECT DISTINCT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.year = ( SELECT MAX(year) FROM Paintings AS T3 JOIN Artists AS T4 ON T3.painterID = T4.artistID ) ORDER BY T1.birthYear DESC LIMIT 1;"
    },
    {
        "question_id": 1222,
        "answer_sql": ""
    },
    {
        "question_id": 1223,
        "answer_sql": ""
    },
    {
        "question_id": 1224,
        "answer_sql": "SELECT a.fname, a.birthYear FROM Artists a JOIN Paintings p ON a.artistID = p.painterID WHERE p.year = (SELECT MAX(year) FROM Paintings) ORDER BY a.birthYear DESC LIMIT 1;"
    },
    {
        "question_id": 1225,
        "answer_sql": "SELECT a.fname, a.birthYear FROM Artists a WHERE a.birthYear = ( SELECT MAX(b.birthYear) FROM Artists b WHERE b.artistID = a.artistID );"
    },
    {
        "question_id": 1226,
        "answer_sql": "SELECT COUNT(DISTINCT painterID) FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE artistID = 240);"
    },
    {
        "question_id": 1227,
        "answer_sql": "SELECT COUNT(DISTINCT painterID) FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE artistID IN (SELECT painterID FROM Paintings WHERE location = 'Gallery 240'))"
    },
    {
        "question_id": 1228,
        "answer_sql": "SELECT COUNT(DISTINCT painterID) FROM Paintings WHERE painterID = (SELECT painterID FROM Paintings ORDER BY year DESC LIMIT 1);"
    },
    {
        "question_id": 1229,
        "answer_sql": "SELECT COUNT(DISTINCT paintingID) FROM Paintings WHERE painterID = ( SELECT painterID FROM Artists ORDER BY deathYear DESC LIMIT 1 );"
    },
    {
        "question_id": 1230,
        "answer_sql": "SELECT DISTINCT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID WHERE a.fname = 'Mary';"
    },
    {
        "question_id": 1231,
        "answer_sql": "SELECT p.title, p.year FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE a.fname = 'Mary';"
    },
    {
        "question_id": 1232,
        "answer_sql": ""
    },
    {
        "question_id": 1233,
        "answer_sql": "SELECT T1.height_mm FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.birthYear < 1850;"
    },
    {
        "question_id": 1234,
        "answer_sql": "SELECT T1.location, T1.medium FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.fname = 'Pablo';"
    },
    {
        "question_id": 1235,
        "answer_sql": ""
    },
    {
        "question_id": 1236,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID JOIN Sculptures s ON a.artistID = s.sculptorID WHERE p.year = s.year"
    },
    {
        "question_id": 1237,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID JOIN Sculptures s ON a.artistID = s.sculptorID"
    },
    {
        "question_id": 1238,
        "answer_sql": ""
    },
    {
        "question_id": 1239,
        "answer_sql": ""
    },
    {
        "question_id": 1240,
        "answer_sql": ""
    },
    {
        "question_id": 1241,
        "answer_sql": "SELECT T1.birthYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.year = 1884;"
    },
    {
        "question_id": 1242,
        "answer_sql": ""
    },
    {
        "question_id": 1243,
        "answer_sql": ""
    },
    {
        "question_id": 1244,
        "answer_sql": "SELECT medium, COUNT(paintingID) as number_of_paintings FROM Paintings GROUP BY medium"
    },
    {
        "question_id": 1245,
        "answer_sql": "SELECT medium, COUNT(*) AS num FROM Paintings GROUP BY medium;"
    },
    {
        "question_id": 1246,
        "answer_sql": "SELECT AVG(T1.height_mm) FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID JOIN Paintings AS T3 ON T2.painterID = T3.painterID WHERE T3.medium = 'oil' GROUP BY T1.medium;"
    },
    {
        "question_id": 1247,
        "answer_sql": "SELECT AVG(T1.height_mm) FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T2.medium = 'oil' OR T2.medium = 'watercolor' OR T2.medium = 'pastel' GROUP BY T1.medium;"
    },
    {
        "question_id": 1248,
        "answer_sql": "SELECT DISTINCT T1.painterID, COUNT(*) AS painting_count FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1900 GROUP BY T1.painterID ORDER BY painting_count DESC;"
    },
    {
        "question_id": 1249,
        "answer_sql": "SELECT COUNT(DISTINCT T1.painterID) AS num_paintings FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1900 AND T1.location IN ( SELECT T3.location FROM Paintings AS T3 JOIN Artists AS T4 ON T3.painterID = T4.artistID WHERE T4.artistID IN ( SELECT T2.artistID FROM Paintings AS T2 JOIN Artists AS T3 ON T2.painterID = T3.artistID WHERE T2.year < 1900 ) )"
    },
    {
        "question_id": 1250,
        "answer_sql": "SELECT p.title FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE p.year > 1910 AND p.medium = 'oil';"
    },
    {
        "question_id": 1251,
        "answer_sql": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year > 1910;"
    },
    {
        "question_id": 1252,
        "answer_sql": ""
    },
    {
        "question_id": 1253,
        "answer_sql": ""
    },
    {
        "question_id": 1254,
        "answer_sql": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T1.height_mm > T2.height_mm;"
    },
    {
        "question_id": 1255,
        "answer_sql": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T1.height_mm > T2.height_mm;"
    },
    {
        "question_id": 1256,
        "answer_sql": ""
    },
    {
        "question_id": 1257,
        "answer_sql": ""
    },
    {
        "question_id": 1258,
        "answer_sql": "SELECT MIN(paintings.paintingID) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID;"
    },
    {
        "question_id": 1259,
        "answer_sql": "SELECT MIN(paintingID) FROM Paintings;"
    },
    {
        "question_id": 1260,
        "answer_sql": "SELECT T1.fname, T1.lname FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID JOIN Sculptures AS T3 ON T2.painterID = T3.sculptorID WHERE T3.title LIKE '%female%' ORDER BY T1.artistID;"
    },
    {
        "question_id": 1261,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID JOIN Sculptures s ON p.painterID = s.sculptorID WHERE s.title LIKE '%female%';"
    },
    {
        "question_id": 1262,
        "answer_sql": "SELECT DISTINCT p.title FROM Paintings p ORDER BY p.title;"
    },
    {
        "question_id": 1263,
        "answer_sql": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID ORDER BY T1.title;"
    },
    {
        "question_id": 1264,
        "answer_sql": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID ORDER BY LENGTH(T1.title);"
    },
    {
        "question_id": 1265,
        "answer_sql": "SELECT DISTINCT T1.title FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T2.height_mm = (SELECT MAX(height_mm) FROM Paintings) ORDER BY T1.height_mm DESC;"
    },
    {
        "question_id": 1266,
        "answer_sql": ""
    },
    {
        "question_id": 1267,
        "answer_sql": ""
    },
    {
        "question_id": 1268,
        "answer_sql": ""
    },
    {
        "question_id": 1269,
        "answer_sql": ""
    },
    {
        "question_id": 1270,
        "answer_sql": "SELECT a.artistID FROM Artists a JOIN Paintings p ON a.artistID = p.painterID WHERE p.year < 1900 GROUP BY a.artistID ORDER BY COUNT(paintingID) DESC LIMIT 1;"
    },
    {
        "question_id": 1271,
        "answer_sql": "SELECT artistID FROM Artists WHERE artistID IN ( SELECT painterID FROM Paintings WHERE year < 1900 ) GROUP BY artistID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1272,
        "answer_sql": "SELECT T1.fname FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T2.sculptureID) DESC LIMIT 1;"
    },
    {
        "question_id": 1273,
        "answer_sql": "SELECT DISTINCT T2.fname FROM Sculptures AS T1 JOIN Artists AS T2 ON T1.sculptorID = T2.artistID GROUP BY T2.fname ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1274,
        "answer_sql": "SELECT DISTINCT p.title FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE p.height_mm < 600 OR p.width_mm > 800;"
    },
    {
        "question_id": 1275,
        "answer_sql": "SELECT P.title FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.height_mm < 600 OR P.width_mm > 800;"
    },
    {
        "question_id": 1276,
        "answer_sql": "SELECT DISTINCT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1885 OR T1.year > 1930;"
    },
    {
        "question_id": 1277,
        "answer_sql": "SELECT DISTINCT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.birthYear < 1885 OR T2.birthYear > 1930;"
    },
    {
        "question_id": 1278,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1279,
        "answer_sql": "SELECT DISTINCT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1280,
        "answer_sql": ""
    },
    {
        "question_id": 1281,
        "answer_sql": ""
    },
    {
        "question_id": 1282,
        "answer_sql": "SELECT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1885 OR T1.year > 1930;"
    },
    {
        "question_id": 1283,
        "answer_sql": "SELECT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1885 OR T1.year > 1930"
    },
    {
        "question_id": 1284,
        "answer_sql": ""
    },
    {
        "question_id": 1285,
        "answer_sql": ""
    },
    {
        "question_id": 1286,
        "answer_sql": "SELECT MAX(height_mm), paintingID FROM Paintings WHERE year < 1900;"
    },
    {
        "question_id": 1287,
        "answer_sql": "SELECT T1.height_mm, T1.painterID FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1900 ORDER BY T1.height_mm DESC LIMIT 1;"
    },
    {
        "question_id": 1288,
        "answer_sql": "SELECT T2.year, MAX(T1.height_mm), MAX(T1.width_mm) FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID GROUP BY T2.year;"
    },
    {
        "question_id": 1289,
        "answer_sql": "SELECT p.year, p.height_mm, p.width_mm FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE p.year = ( SELECT MAX(year) FROM Paintings WHERE year = p.year ) ORDER BY p.year, p.height_mm, p.width_mm;"
    },
    {
        "question_id": 1290,
        "answer_sql": "SELECT AVG(T1.height_mm), AVG(T1.width_mm) FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID GROUP BY T1.painterID ORDER BY T1.painterID;"
    },
    {
        "question_id": 1291,
        "answer_sql": "SELECT AVG(T1.height_mm), AVG(T1.width_mm) FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID GROUP BY T1.painterID ORDER BY T1.painterID;"
    },
    {
        "question_id": 1292,
        "answer_sql": "SELECT a.fname, COUNT(p.paintingID) AS num_paintings FROM Artists a JOIN Paintings p ON a.artistID = p.painterID GROUP BY a.fname HAVING COUNT(p.paintingID) >= 2;"
    },
    {
        "question_id": 1293,
        "answer_sql": "SELECT a.fname, COUNT(p.paintingID) AS num_paintings FROM Artists a JOIN Paintings p ON a.artistID = p.painterID GROUP BY a.fname HAVING COUNT(p.paintingID) >= 2;"
    },
    {
        "question_id": 1294,
        "answer_sql": "SELECT DISTINCT T1.artistID, T1.fname, T1.lname, T1.birthYear, T1.deathYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID WHERE T2.painterID IN ( SELECT T3.painterID FROM Paintings AS T3 GROUP BY T3.painterID HAVING COUNT(T3.painterID) <= 3 )"
    },
    {
        "question_id": 1295,
        "answer_sql": ""
    },
    {
        "question_id": 1296,
        "answer_sql": "SELECT T1.birthYear FROM Artists AS T1 JOIN Paintings AS T2 ON T1.artistID = T2.painterID JOIN Sculptures AS T3 ON T2.painterID = T3.sculptorID GROUP BY T1.artistID ORDER BY COUNT(T3.sculptorID) DESC LIMIT 1;"
    },
    {
        "question_id": 1297,
        "answer_sql": "SELECT T1.birthYear FROM Artists AS T1 JOIN Sculptures AS T2 ON T1.artistID = T2.sculptorID WHERE T2.sculptureID = ( SELECT T3.sculptureID FROM Sculptures AS T3 WHERE T3.sculptorID = T1.artistID GROUP BY T3.sculptureID ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1298,
        "answer_sql": ""
    },
    {
        "question_id": 1299,
        "answer_sql": "SELECT paintingID, height_mm FROM Paintings WHERE paintingID IN ( SELECT paintingID FROM ( SELECT paintingID, height_mm, ROW_NUMBER() OVER (PARTITION BY paintingID ORDER BY height_mm DESC) as rn FROM Paintings ) subquery WHERE rn = 1 ) LIMIT 1;"
    },
    {
        "question_id": 1300,
        "answer_sql": "SELECT DISTINCT T1.paintingID FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T2.painterID NOT IN ( SELECT T3.painterID FROM Paintings AS T3 WHERE T3.painterID IN ( SELECT T1.painterID FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID WHERE T2.painterID = 240 ) )"
    },
    {
        "question_id": 1301,
        "answer_sql": ""
    },
    {
        "question_id": 1302,
        "answer_sql": "SELECT DISTINCT T1.paintingID FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID AND T1.year > T2.year WHERE T1.height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900)"
    },
    {
        "question_id": 1303,
        "answer_sql": "SELECT DISTINCT T1.paintingID FROM Paintings AS T1 JOIN Paintings AS T2 ON T1.painterID = T2.painterID AND T1.year > T2.year WHERE T1.height_mm > ( SELECT MAX(T3.height_mm) FROM Paintings AS T3 WHERE T3.painterID = T1.painterID AND T3.year > T1.year );"
    },
    {
        "question_id": 1304,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID WHERE p.medium = 'oil' GROUP BY a.artistID ORDER BY COUNT(paintingID) DESC LIMIT 3;"
    },
    {
        "question_id": 1305,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a JOIN Paintings p ON a.artistID = p.painterID GROUP BY a.artistID ORDER BY COUNT(paintingID) DESC LIMIT 1;"
    },
    {
        "question_id": 1306,
        "answer_sql": "SELECT paintingID, location, title FROM Paintings WHERE medium = 'oil' ORDER BY year;"
    },
    {
        "question_id": 1307,
        "answer_sql": "SELECT T1.paintingID, T1.location, T1.title FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T2.artistID = (SELECT artistID FROM Artists WHERE medium = 'oil') ORDER BY T1.year DESC;"
    },
    {
        "question_id": 1308,
        "answer_sql": "SELECT paintingID, location, title FROM Paintings WHERE height_mm > 1000 ORDER BY title;"
    },
    {
        "question_id": 1309,
        "answer_sql": "SELECT DISTINCT paintingID, location, title FROM Paintings WHERE height_mm > 1000 ORDER BY paintingID;"
    },
    {
        "question_id": 1310,
        "answer_sql": ""
    },
    {
        "question_id": 1311,
        "answer_sql": ""
    },
    {
        "question_id": 1312,
        "answer_sql": "SELECT DISTINCT T1.location FROM Paintings AS T1 JOIN Artists AS T2 ON T1.painterID = T2.artistID WHERE T1.year < 1885 AND T1.medium != 'canvas'"
    },
    {
        "question_id": 1313,
        "answer_sql": ""
    },
    {
        "question_id": 1314,
        "answer_sql": "SELECT COUNT(DISTINCT road) AS num_races FROM race;"
    },
    {
        "question_id": 1315,
        "answer_sql": "SELECT COUNT(DISTINCT road) AS Total_Races FROM race;"
    },
    {
        "question_id": 1316,
        "answer_sql": ""
    },
    {
        "question_id": 1317,
        "answer_sql": "SELECT T2.Driver_Name, T2.Constructor FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID ORDER BY T2.Constructor;"
    },
    {
        "question_id": 1318,
        "answer_sql": "SELECT driver.Driver_Name FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE race.Pole_Position = 'Junior Strous' AND driver.Driver_Name NOT IN ('Junior Strous')"
    },
    {
        "question_id": 1319,
        "answer_sql": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T2.Pole_Position != 'Junior Strous' AND T1.Driver_Name != 'Junior Strous'"
    },
    {
        "question_id": 1320,
        "answer_sql": "SELECT T1.Constructor FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID ORDER BY T1.Age ASC;"
    },
    {
        "question_id": 1321,
        "answer_sql": "SELECT Constructor FROM driver ORDER BY Age ASC;"
    },
    {
        "question_id": 1322,
        "answer_sql": "SELECT DISTINCT T1.Entrant FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age >= 20;"
    },
    {
        "question_id": 1323,
        "answer_sql": "SELECT DISTINCT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age >= 20;"
    },
    {
        "question_id": 1324,
        "answer_sql": "SELECT MAX(Entrant) AS Max_Age, MIN(Age) AS Min_Age FROM driver;"
    },
    {
        "question_id": 1325,
        "answer_sql": "SELECT MAX(Entrant) AS MaxAge, MIN(Entrant) AS MinAge FROM driver;"
    },
    {
        "question_id": 1326,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Engine) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age BETWEEN 20 AND 30 OR T1.Age BETWEEN 31 AND 40;"
    },
    {
        "question_id": 1327,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Engine) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age > 30 OR T1.Age < 20;"
    },
    {
        "question_id": 1328,
        "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;"
    },
    {
        "question_id": 1329,
        "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;"
    },
    {
        "question_id": 1330,
        "answer_sql": "SELECT d.Driver_Name, r.Road, r.Driver_ID FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID;"
    },
    {
        "question_id": 1331,
        "answer_sql": "SELECT T1.Driver_Name, T2.Road, T2.Driver_ID FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID;"
    },
    {
        "question_id": 1332,
        "answer_sql": "SELECT driver.Driver_Name, COUNT(race.Road) as Race_Participants FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_Name"
    },
    {
        "question_id": 1333,
        "answer_sql": "SELECT Driver_ID, COUNT(Road) AS Race_Count FROM race GROUP BY Driver_ID;"
    },
    {
        "question_id": 1334,
        "answer_sql": "SELECT Driver_Name FROM driver WHERE Driver_ID = ( SELECT Driver_ID FROM ( SELECT Driver_ID, COUNT(Road) AS Race_Count FROM race GROUP BY Driver_ID ORDER BY Race_Count DESC LIMIT 1 ) )"
    },
    {
        "question_id": 1335,
        "answer_sql": "SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1336,
        "answer_sql": "SELECT Driver_Name, Age FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM race GROUP BY Driver_ID HAVING COUNT(Road) > 1)"
    },
    {
        "question_id": 1337,
        "answer_sql": "SELECT driver.Driver_Name, driver.Age FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_ID HAVING COUNT(race.Road) > 1;"
    },
    {
        "question_id": 1338,
        "answer_sql": "SELECT DISTINCT r.Road, d.Driver_Name FROM race r JOIN driver d ON r.Driver_ID = d.Driver_ID WHERE d.Age >= 26;"
    },
    {
        "question_id": 1339,
        "answer_sql": "SELECT DISTINCT r.Road FROM race r JOIN driver d ON r.Driver_ID = d.Driver_ID WHERE d.Age >= 26;"
    },
    {
        "question_id": 1340,
        "answer_sql": "SELECT driver.Driver_Name FROM driver WHERE driver.Constructor != 'Bugatti';"
    },
    {
        "question_id": 1341,
        "answer_sql": "SELECT DISTINCT driver.Driver_Name FROM driver WHERE driver.Driver_ID NOT IN (SELECT driver.Driver_ID FROM driver, race WHERE driver.Driver_ID = race.Driver_ID AND race.Road = 1 AND race.Winning_driver = 'Bugatti')"
    },
    {
        "question_id": 1342,
        "answer_sql": "SELECT Constructor, COUNT(DISTINCT Driver_ID) AS Driver_Count FROM driver GROUP BY Constructor;"
    },
    {
        "question_id": 1343,
        "answer_sql": "SELECT Constructor, COUNT(DISTINCT Driver_ID) AS Driver_Count FROM driver GROUP BY Constructor;"
    },
    {
        "question_id": 1344,
        "answer_sql": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1345,
        "answer_sql": "SELECT DISTINCT engine FROM driver GROUP BY engine ORDER BY COUNT(engine) DESC LIMIT 1;"
    },
    {
        "question_id": 1346,
        "answer_sql": "SELECT DISTINCT T1.Engine FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Engine HAVING COUNT(T1.Engine) > 1;"
    },
    {
        "question_id": 1347,
        "answer_sql": "SELECT DISTINCT T1.Engine FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.Engine HAVING COUNT(T1.Engine) > 1;"
    },
    {
        "question_id": 1348,
        "answer_sql": ""
    },
    {
        "question_id": 1349,
        "answer_sql": "SELECT DISTINCT driver.Driver_Name FROM driver WHERE driver.Driver_ID NOT IN (SELECT driver_id FROM race)"
    },
    {
        "question_id": 1350,
        "answer_sql": ""
    },
    {
        "question_id": 1351,
        "answer_sql": "SELECT T1.Constructor FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Age < 20 AND T1.Driver_ID NOT IN ( SELECT T1.Driver_ID FROM driver AS T1 JOIN race AS T3 ON T1.Driver_ID = T3.Driver_ID WHERE T3.Winning_driver = 'Y' ) AND T2.Road > 1"
    },
    {
        "question_id": 1352,
        "answer_sql": "SELECT DISTINCT T2.Constructor FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Constructor HAVING COUNT(T1.Road) > 1"
    },
    {
        "question_id": 1353,
        "answer_sql": "SELECT T2.Constructor FROM race AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Constructor HAVING COUNT(T1.Road) > 1"
    },
    {
        "question_id": 1354,
        "answer_sql": ""
    },
    {
        "question_id": 1355,
        "answer_sql": ""
    },
    {
        "question_id": 1356,
        "answer_sql": "SELECT DISTINCT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID WHERE T1.Driver_Name NOT IN ('James Hinchcliffe', 'James Hinchcliffe', 'James Hinchcliffe')"
    },
    {
        "question_id": 1357,
        "answer_sql": "SELECT DISTINCT T1.Driver_Name FROM driver AS T1 WHERE T1.Driver_ID NOT IN (SELECT T2.Driver_ID FROM race AS T2 WHERE T2.Pole_Position = 'James Hinchcliffe')"
    },
    {
        "question_id": 1358,
        "answer_sql": "SELECT COUNT(DISTINCT language_id) AS num_languages FROM official_languages;"
    },
    {
        "question_id": 1359,
        "answer_sql": "SELECT COUNT(DISTINCT language_id) AS language_count FROM official_languages;"
    },
    {
        "question_id": 1360,
        "answer_sql": "SELECT name FROM languages ORDER BY name ASC;"
    },
    {
        "question_id": 1361,
        "answer_sql": "SELECT T1.name FROM languages AS T1 JOIN countries AS T2 ON T1.id = T2.id JOIN official_languages AS T3 ON T2.id = T3.country_id ORDER BY T1.name;"
    },
    {
        "question_id": 1362,
        "answer_sql": "SELECT T1.name FROM languages AS T1 JOIN countries AS T2 ON T1.id = T2.id JOIN official_languages AS T3 ON T2.id = T3.country_id WHERE T3.language_id IN ( SELECT T4.language_id FROM official_languages AS T4 WHERE T4.country_id = ( SELECT T1.id FROM languages AS T1 WHERE T1.name LIKE '%ish%' ) )"
    },
    {
        "question_id": 1363,
        "answer_sql": "SELECT DISTINCT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id WHERE l.name LIKE '%ish%';"
    },
    {
        "question_id": 1364,
        "answer_sql": "SELECT c.name FROM countries c ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1365,
        "answer_sql": "SELECT c.name FROM countries c ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1366,
        "answer_sql": "SELECT AVG(c.justice_score) FROM countries c JOIN official_languages ol ON c.id = ol.country_id;"
    },
    {
        "question_id": 1367,
        "answer_sql": "SELECT AVG(c.justice_score) FROM countries c;"
    },
    {
        "question_id": 1368,
        "answer_sql": "SELECT MIN(c.health_score) AS min_health_score, MAX(c.health_score) AS max_health_score FROM countries c WHERE c.id NOT IN (SELECT l.language_id FROM official_languages l)"
    },
    {
        "question_id": 1369,
        "answer_sql": "SELECT MAX(c.health_score) AS max_health_score, MIN(c.health_score) AS min_health_score FROM countries c WHERE c.id NOT IN (SELECT l.country_id FROM official_languages l)"
    },
    {
        "question_id": 1370,
        "answer_sql": "SELECT COUNT(DISTINCT T1.language_id) FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id;"
    },
    {
        "question_id": 1371,
        "answer_sql": "SELECT COUNT(DISTINCT T1.language_id) FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id;"
    },
    {
        "question_id": 1372,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id WHERE ol.language_id = (SELECT id FROM languages WHERE name = 'English') ORDER BY c.education_score DESC;"
    },
    {
        "question_id": 1373,
        "answer_sql": ""
    },
    {
        "question_id": 1374,
        "answer_sql": ""
    },
    {
        "question_id": 1375,
        "answer_sql": ""
    },
    {
        "question_id": 1376,
        "answer_sql": ""
    },
    {
        "question_id": 1377,
        "answer_sql": ""
    },
    {
        "question_id": 1378,
        "answer_sql": "SELECT l.name AS language, COUNT(c.id) AS number_of_countries FROM languages AS l JOIN official_languages AS ol ON l.id = ol.language_id JOIN countries AS c ON ol.country_id = c.id GROUP BY l.name"
    },
    {
        "question_id": 1379,
        "answer_sql": "SELECT l.name, COUNT(c.id) AS num_countries FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON ol.country_id = c.id GROUP BY l.name"
    },
    {
        "question_id": 1380,
        "answer_sql": "SELECT COUNT(DISTINCT T1.language_id) AS num_languages FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id GROUP BY T1.language_id ORDER BY num_languages DESC LIMIT 1;"
    },
    {
        "question_id": 1381,
        "answer_sql": "SELECT T1.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id GROUP BY T1.id ORDER BY COUNT(T2.language_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1382,
        "answer_sql": ""
    },
    {
        "question_id": 1383,
        "answer_sql": "SELECT DISTINCT T2.name FROM official_languages AS T1 JOIN countries AS T2 ON T1.country_id = T2.id GROUP BY T2.name HAVING COUNT(T1.language_id) > 1;"
    },
    {
        "question_id": 1384,
        "answer_sql": "SELECT AVG(c1.overall_score) AS avg_overall_score FROM countries c1 JOIN official_languages ol ON c1.id = ol.country_id WHERE ol.language_id = (SELECT id FROM languages WHERE name = 'English') GROUP BY c1.id;"
    },
    {
        "question_id": 1385,
        "answer_sql": "SELECT AVG(c.overall_score) FROM countries c JOIN official_languages al ON c.id = al.country_id WHERE al.language_id = (SELECT id FROM languages WHERE name = 'English');"
    },
    {
        "question_id": 1386,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.id ORDER BY COUNT(*) DESC LIMIT 3;"
    },
    {
        "question_id": 1387,
        "answer_sql": "SELECT T1.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id = T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 3;"
    },
    {
        "question_id": 1388,
        "answer_sql": ""
    },
    {
        "question_id": 1389,
        "answer_sql": ""
    },
    {
        "question_id": 1390,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id GROUP BY c.name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1391,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id GROUP BY c.id ORDER BY COUNT(ol.language_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1392,
        "answer_sql": "SELECT DISTINCT l.name FROM languages l WHERE l.id NOT IN ( SELECT lc.country_id FROM official_languages lc );"
    },
    {
        "question_id": 1393,
        "answer_sql": "SELECT DISTINCT l.name FROM languages l WHERE l.id NOT IN ( SELECT lc.country_id FROM official_languages lc );"
    },
    {
        "question_id": 1394,
        "answer_sql": ""
    },
    {
        "question_id": 1395,
        "answer_sql": ""
    },
    {
        "question_id": 1396,
        "answer_sql": ""
    },
    {
        "question_id": 1397,
        "answer_sql": ""
    },
    {
        "question_id": 1398,
        "answer_sql": "SELECT DISTINCT T1.country, T1.town_city FROM Addresses AS T1 JOIN Addresses AS T2 ON T1.address_id = T2.address_id WHERE T2.country IS NOT NULL"
    },
    {
        "question_id": 1399,
        "answer_sql": ""
    },
    {
        "question_id": 1400,
        "answer_sql": ""
    },
    {
        "question_id": 1401,
        "answer_sql": ""
    },
    {
        "question_id": 1402,
        "answer_sql": ""
    },
    {
        "question_id": 1403,
        "answer_sql": ""
    },
    {
        "question_id": 1404,
        "answer_sql": ""
    },
    {
        "question_id": 1405,
        "answer_sql": ""
    },
    {
        "question_id": 1406,
        "answer_sql": "SELECT MIN(room_count) FROM Properties;"
    },
    {
        "question_id": 1407,
        "answer_sql": "SELECT MIN(property_id) AS lowest_room_count FROM Properties;"
    },
    {
        "question_id": 1408,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE property_type_code = 'PARKING' OR property_type_code = 'GARAGE';"
    },
    {
        "question_id": 1409,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE property_type_code = 'P' AND room_count = '1' OR room_count = '2';"
    },
    {
        "question_id": 1410,
        "answer_sql": ""
    },
    {
        "question_id": 1411,
        "answer_sql": ""
    },
    {
        "question_id": 1412,
        "answer_sql": "SELECT `Users`.`first_name` FROM `Users` JOIN `Properties` ON `Users`.`user_id` = `Properties`.`owner_user_id` GROUP BY `Users`.`user_id` ORDER BY COUNT(`Properties`.`property_id`) DESC LIMIT 1;"
    },
    {
        "question_id": 1413,
        "answer_sql": "SELECT `Users`.`first_name` FROM `Users` JOIN `Properties` ON `Users`.`user_id` = `Properties`.`owner_user_id` GROUP BY `Users`.`user_id` ORDER BY COUNT(`Properties`.`property_id`) DESC LIMIT 1;"
    },
    {
        "question_id": 1414,
        "answer_sql": "SELECT AVG(T1.room_count) FROM Properties AS T1 JOIN Rooms AS T2 ON T1.property_id = T2.property_id WHERE T1.property_type_code = 'Garden';"
    },
    {
        "question_id": 1415,
        "answer_sql": ""
    },
    {
        "question_id": 1416,
        "answer_sql": ""
    },
    {
        "question_id": 1417,
        "answer_sql": ""
    },
    {
        "question_id": 1418,
        "answer_sql": "SELECT p.property_id, p.price_min FROM Properties p WHERE p.property_name = ( SELECT property_name FROM Properties WHERE property_name = ( SELECT property_name FROM Properties ORDER BY price_min LIMIT 1 ) ) ORDER BY p.price_min LIMIT 1;"
    },
    {
        "question_id": 1419,
        "answer_sql": "SELECT p.property_id, p.price_min FROM Properties p JOIN Property_Features pf ON p.property_id = pf.property_id JOIN Features f ON pf.feature_id = f.feature_id JOIN Property_Photos pp ON p.property_id = pp.property_id JOIN Rooms r ON p.property_id = r.property_id WHERE p.price_min = ( SELECT MIN(price_min) FROM Properties JOIN Property_Features pf ON p.property_id = pf.property_id JOIN Features f ON pf.feature_id = f.feature_id JOIN Property_Photos pp ON p.property_id = pp.property_id JOIN Rooms r ON p.property_id = r.property_id ) ORDER BY p.price_min DESC LIMIT 1;"
    },
    {
        "question_id": 1420,
        "answer_sql": "SELECT AVG(T2.room_size) AS average_rooms FROM Properties AS T1 JOIN Rooms AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id;"
    },
    {
        "question_id": 1421,
        "answer_sql": "SELECT AVG(T2.room_size) AS average_rooms FROM Properties AS T1 JOIN Rooms AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id;"
    },
    {
        "question_id": 1422,
        "answer_sql": "SELECT COUNT(DISTINCT T2.room_size) AS room_sizes_count FROM Properties AS T1 JOIN Rooms AS T2 ON T1.property_id = T2.property_id;"
    },
    {
        "question_id": 1423,
        "answer_sql": "SELECT COUNT(DISTINCT room_size) AS room_sizes FROM Rooms;"
    },
    {
        "question_id": 1424,
        "answer_sql": ""
    },
    {
        "question_id": 1425,
        "answer_sql": ""
    },
    {
        "question_id": 1426,
        "answer_sql": ""
    },
    {
        "question_id": 1427,
        "answer_sql": "SELECT MAX(T2.datestamp) AS [Time of the most recent search] FROM User_Searches AS T1 JOIN User_Property_History AS T2 ON T1.user_id = T2.user_id ORDER BY T2.datestamp DESC LIMIT 1"
    },
    {
        "question_id": 1428,
        "answer_sql": "SELECT `search_string` FROM `User_Searches` ORDER BY `search_string` DESC;"
    },
    {
        "question_id": 1429,
        "answer_sql": "SELECT DISTINCT T1.search_string, T1.search_datetime FROM User_Searches AS T1 ORDER BY T1.search_string DESC;"
    },
    {
        "question_id": 1430,
        "answer_sql": ""
    },
    {
        "question_id": 1431,
        "answer_sql": ""
    },
    {
        "question_id": 1432,
        "answer_sql": ""
    },
    {
        "question_id": 1433,
        "answer_sql": "SELECT u.user_id, u.user_category_code FROM Users u WHERE u.user_id IN ( SELECT u1.user_id FROM Users u1 JOIN User_Searches us ON u1.user_id = us.user_id GROUP BY u1.user_id HAVING COUNT(us.search_seq) = 1 )"
    },
    {
        "question_id": 1434,
        "answer_sql": ""
    },
    {
        "question_id": 1435,
        "answer_sql": ""
    },
    {
        "question_id": 1436,
        "answer_sql": "SELECT `login_name` FROM `Users` WHERE `user_category_code` = 'Senior Citizen' ORDER BY `first_name` ASC;"
    },
    {
        "question_id": 1437,
        "answer_sql": "SELECT `Users`.`login_name` FROM `Users` WHERE `Users`.`user_category_code` = 'Senior Citizen' ORDER BY `Users`.`first_name`"
    },
    {
        "question_id": 1438,
        "answer_sql": "SELECT COUNT(DISTINCT u.user_id) AS total_searches FROM Users u JOIN User_Searches us ON u.user_id = us.user_id WHERE u.is_buyer = '1';"
    },
    {
        "question_id": 1439,
        "answer_sql": "SELECT COUNT(DISTINCT u.user_id) AS num_searches FROM Users u JOIN User_Searches us ON u.user_id = us.user_id WHERE us.search_string LIKE '%buyer%' AND us.search_datetime IS NOT NULL"
    },
    {
        "question_id": 1440,
        "answer_sql": "SELECT date_registered FROM Users WHERE login_name = 'ratione';"
    },
    {
        "question_id": 1441,
        "answer_sql": "SELECT T1.date_registered FROM Users AS T1 WHERE T1.login_name = 'ratione';"
    },
    {
        "question_id": 1442,
        "answer_sql": "SELECT `Users`.`first_name`, `Users`.`middle_name`, `Users`.`last_name`, `Users`.`login_name` FROM `Users` WHERE `Users`.`is_seller` = 1"
    },
    {
        "question_id": 1443,
        "answer_sql": ""
    },
    {
        "question_id": 1444,
        "answer_sql": ""
    },
    {
        "question_id": 1445,
        "answer_sql": ""
    },
    {
        "question_id": 1446,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE property_id IN (SELECT property_id FROM Property_Features WHERE feature_id IN (SELECT feature_id FROM Features WHERE feature_value = 'at least 2 features'));"
    },
    {
        "question_id": 1447,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE property_id IN (SELECT property_id FROM Property_Features WHERE feature_id IN (SELECT feature_id FROM Features WHERE feature_name IN ('feature1', 'feature2', 'feature3')) GROUP BY property_id HAVING COUNT(*) > 1)"
    },
    {
        "question_id": 1448,
        "answer_sql": "SELECT p.property_id, COUNT(p.property_id) AS num_photos FROM Properties p GROUP BY p.property_id;"
    },
    {
        "question_id": 1449,
        "answer_sql": "SELECT p.property_id, COUNT(*) AS num_photos FROM Properties p JOIN Property_Photos pp ON p.property_id = pp.property_id GROUP BY p.property_id;"
    },
    {
        "question_id": 1450,
        "answer_sql": "SELECT u.user_id, COUNT(p.property_id) AS num_photos FROM Users u JOIN Properties p ON u.user_id = p.owner_user_id GROUP BY u.user_id"
    },
    {
        "question_id": 1451,
        "answer_sql": ""
    },
    {
        "question_id": 1452,
        "answer_sql": "SELECT SUM(T2.price_max) AS TotalMaxPrice FROM Users AS T1 JOIN Properties AS T2 ON T1.user_id = T2.owner_user_id WHERE T1.age_category_code = 'Single Mother' OR T1.age_category_code = 'Student';"
    },
    {
        "question_id": 1453,
        "answer_sql": "SELECT MAX(price_max) FROM Properties WHERE owner_user_id IN (SELECT user_id FROM Users WHERE user_category_code IN ('Mother', 'Student'));"
    },
    {
        "question_id": 1454,
        "answer_sql": "SELECT h.user_id, h.property_id, h.datestamp FROM User_Property_History h ORDER BY h.datestamp;"
    },
    {
        "question_id": 1455,
        "answer_sql": "SELECT h.datestamp, p.property_name FROM Properties p JOIN User_Property_History h ON p.property_id = h.property_id ORDER BY h.datestamp;"
    },
    {
        "question_id": 1456,
        "answer_sql": "SELECT T2.property_type_description, T2.property_type_code FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T2.property_type_code ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1457,
        "answer_sql": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code = T2.property_type_code GROUP BY T2.property_type_description ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1458,
        "answer_sql": ""
    },
    {
        "question_id": 1459,
        "answer_sql": "SELECT T1.age_category_description FROM Ref_Age_Categories AS T1 JOIN Ref_Age_Categories AS T2 ON T1.age_category_code = T2.age_category_code WHERE T1.age_category_code = 'Over 60';"
    },
    {
        "question_id": 1460,
        "answer_sql": "SELECT room_type_code, COUNT(room_type_code) AS room_count FROM Rooms GROUP BY room_type_code;"
    },
    {
        "question_id": 1461,
        "answer_sql": "SELECT DISTINCT room_size, COUNT(*) AS room_count FROM Rooms GROUP BY room_size;"
    },
    {
        "question_id": 1462,
        "answer_sql": ""
    },
    {
        "question_id": 1463,
        "answer_sql": ""
    },
    {
        "question_id": 1464,
        "answer_sql": ""
    },
    {
        "question_id": 1465,
        "answer_sql": ""
    },
    {
        "question_id": 1466,
        "answer_sql": ""
    },
    {
        "question_id": 1467,
        "answer_sql": ""
    },
    {
        "question_id": 1468,
        "answer_sql": ""
    },
    {
        "question_id": 1469,
        "answer_sql": ""
    },
    {
        "question_id": 1470,
        "answer_sql": "SELECT COUNT(*) FROM bike WHERE weight > 780;"
    },
    {
        "question_id": 1471,
        "answer_sql": "SELECT b.product_name, b.weight FROM bike b ORDER BY b.price ASC;"
    },
    {
        "question_id": 1472,
        "answer_sql": "SELECT cyclist . heat , cyclist . name , cyclist . nation FROM cyclist ;"
    },
    {
        "question_id": 1473,
        "answer_sql": "SELECT MAX(b.weight) AS max_weight, MIN(b.weight) AS min_weight FROM bike b;"
    },
    {
        "question_id": 1474,
        "answer_sql": ""
    },
    {
        "question_id": 1475,
        "answer_sql": "SELECT T2.name, T2.result FROM cyclists_own_bikes AS T1 JOIN cyclist AS T2 ON T1.bike_id = T2.id WHERE T2.nation != 'Russia';"
    },
    {
        "question_id": 1476,
        "answer_sql": "SELECT DISTINCT T1.id, T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id = T2.bike_id WHERE T2.purchase_year > 2015;"
    },
    {
        "question_id": 1477,
        "answer_sql": ""
    },
    {
        "question_id": 1478,
        "answer_sql": ""
    },
    {
        "question_id": 1479,
        "answer_sql": "SELECT DISTINCT b.product_name FROM bike b JOIN cyclists_own_bikes cob ON b.id = cob.bike_id JOIN cyclist c ON c.id = cob.cyclist_id WHERE c.nation = 'Russia' OR c.nation = 'Great Britain';"
    },
    {
        "question_id": 1480,
        "answer_sql": "SELECT COUNT(DISTINCT T2.heat) FROM cyclists_own_bikes AS T1 JOIN cyclist AS T2 ON T1.cyclist_id = T2.id;"
    },
    {
        "question_id": 1481,
        "answer_sql": "SELECT COUNT(*) FROM cyclists_own_bikes WHERE purchase_year < 2015;"
    },
    {
        "question_id": 1482,
        "answer_sql": ""
    },
    {
        "question_id": 1483,
        "answer_sql": ""
    },
    {
        "question_id": 1484,
        "answer_sql": ""
    },
    {
        "question_id": 1485,
        "answer_sql": "SELECT b.product_name FROM bike b JOIN cyclists_own_bikes cob ON b.id = cob.bike_id JOIN cyclist c ON c.id = cob.cyclist_id WHERE b.material LIKE '%fiber%'"
    },
    {
        "question_id": 1486,
        "answer_sql": ""
    },
    {
        "question_id": 1487,
        "answer_sql": ""
    },
    {
        "question_id": 1488,
        "answer_sql": ""
    },
    {
        "question_id": 1489,
        "answer_sql": ""
    },
    {
        "question_id": 1490,
        "answer_sql": ""
    },
    {
        "question_id": 1491,
        "answer_sql": ""
    },
    {
        "question_id": 1492,
        "answer_sql": ""
    },
    {
        "question_id": 1493,
        "answer_sql": ""
    },
    {
        "question_id": 1494,
        "answer_sql": ""
    },
    {
        "question_id": 1495,
        "answer_sql": ""
    },
    {
        "question_id": 1496,
        "answer_sql": ""
    },
    {
        "question_id": 1497,
        "answer_sql": "SELECT Flavor, COUNT(Receipt) AS NumCustomers FROM items JOIN goods ON items.Item = goods.Id GROUP BY Flavor ORDER BY NumCustomers DESC;"
    },
    {
        "question_id": 1498,
        "answer_sql": ""
    },
    {
        "question_id": 1499,
        "answer_sql": ""
    },
    {
        "question_id": 1500,
        "answer_sql": ""
    },
    {
        "question_id": 1501,
        "answer_sql": ""
    },
    {
        "question_id": 1502,
        "answer_sql": ""
    },
    {
        "question_id": 1503,
        "answer_sql": ""
    },
    {
        "question_id": 1504,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Item) FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Flavor = 'cake';"
    },
    {
        "question_id": 1505,
        "answer_sql": "SELECT Flavor FROM goods WHERE Food = 'Croissant';"
    },
    {
        "question_id": 1506,
        "answer_sql": ""
    },
    {
        "question_id": 1507,
        "answer_sql": ""
    },
    {
        "question_id": 1508,
        "answer_sql": ""
    },
    {
        "question_id": 1509,
        "answer_sql": ""
    },
    {
        "question_id": 1510,
        "answer_sql": ""
    },
    {
        "question_id": 1511,
        "answer_sql": ""
    },
    {
        "question_id": 1512,
        "answer_sql": ""
    },
    {
        "question_id": 1513,
        "answer_sql": ""
    },
    {
        "question_id": 1514,
        "answer_sql": ""
    },
    {
        "question_id": 1515,
        "answer_sql": ""
    },
    {
        "question_id": 1516,
        "answer_sql": ""
    },
    {
        "question_id": 1517,
        "answer_sql": ""
    },
    {
        "question_id": 1518,
        "answer_sql": ""
    },
    {
        "question_id": 1519,
        "answer_sql": "SELECT T2.Food, COUNT(*) FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id GROUP BY T2.Food;"
    },
    {
        "question_id": 1520,
        "answer_sql": "SELECT T2.Food, COUNT(*) AS Quantity FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id GROUP BY T2.Food"
    },
    {
        "question_id": 1521,
        "answer_sql": ""
    },
    {
        "question_id": 1522,
        "answer_sql": ""
    },
    {
        "question_id": 1523,
        "answer_sql": ""
    },
    {
        "question_id": 1524,
        "answer_sql": "SELECT T1.Item FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Flavor = 'Apricot' AND T2.Price < 5;"
    },
    {
        "question_id": 1525,
        "answer_sql": "SELECT Flavor FROM goods WHERE Price > 10;"
    },
    {
        "question_id": 1526,
        "answer_sql": "SELECT Flavor FROM goods WHERE Price > 10;"
    },
    {
        "question_id": 1527,
        "answer_sql": ""
    },
    {
        "question_id": 1528,
        "answer_sql": ""
    },
    {
        "question_id": 1529,
        "answer_sql": ""
    },
    {
        "question_id": 1530,
        "answer_sql": ""
    },
    {
        "question_id": 1531,
        "answer_sql": ""
    },
    {
        "question_id": 1532,
        "answer_sql": ""
    },
    {
        "question_id": 1533,
        "answer_sql": ""
    },
    {
        "question_id": 1534,
        "answer_sql": ""
    },
    {
        "question_id": 1535,
        "answer_sql": ""
    },
    {
        "question_id": 1536,
        "answer_sql": "SELECT DISTINCT T2.Id FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Id LIKE '%APP%';"
    },
    {
        "question_id": 1537,
        "answer_sql": ""
    },
    {
        "question_id": 1538,
        "answer_sql": ""
    },
    {
        "question_id": 1539,
        "answer_sql": "SELECT T1.FirstName FROM customers AS T1 ORDER BY T1.FirstName;"
    },
    {
        "question_id": 1540,
        "answer_sql": ""
    },
    {
        "question_id": 1541,
        "answer_sql": ""
    },
    {
        "question_id": 1542,
        "answer_sql": "SELECT DISTINCT T2.Id FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id;"
    },
    {
        "question_id": 1543,
        "answer_sql": ""
    },
    {
        "question_id": 1544,
        "answer_sql": ""
    },
    {
        "question_id": 1545,
        "answer_sql": ""
    },
    {
        "question_id": 1546,
        "answer_sql": "SELECT ReceiptNumber, Date FROM receipts ORDER BY Date DESC LIMIT 1;"
    },
    {
        "question_id": 1547,
        "answer_sql": ""
    },
    {
        "question_id": 1548,
        "answer_sql": ""
    },
    {
        "question_id": 1549,
        "answer_sql": ""
    },
    {
        "question_id": 1550,
        "answer_sql": "SELECT T1.Item FROM items AS T1 INNER JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Price BETWEEN 3 AND 7;"
    },
    {
        "question_id": 1551,
        "answer_sql": "SELECT FirstName, LastName FROM customers WHERE Id = ( SELECT CustomerId FROM receipts ORDER BY Date ASC LIMIT 1 );"
    },
    {
        "question_id": 1552,
        "answer_sql": "SELECT DISTINCT c.FirstName, c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId WHERE r.Date = (SELECT MIN(Date) FROM receipts);"
    },
    {
        "question_id": 1553,
        "answer_sql": "SELECT AVG(Price) FROM goods WHERE Flavor IN ('Blackberry', 'Blueberry')"
    },
    {
        "question_id": 1554,
        "answer_sql": "SELECT AVG(T2.Price) FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Flavor IN ('BlackBerry', 'Blueberry') GROUP BY T1.Item;"
    },
    {
        "question_id": 1555,
        "answer_sql": "SELECT T2.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Flavor = 'Cheese';"
    },
    {
        "question_id": 1556,
        "answer_sql": "SELECT T2.Flavor, T2.Price FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id WHERE T2.Flavor = 'Cheese' ORDER BY T2.Price ASC LIMIT 1;"
    },
    {
        "question_id": 1557,
        "answer_sql": "SELECT g.Flavor, AVG(g.Price) AS Average_Price, MIN(g.Price) AS Lowest_Price, MAX(g.Price) AS Highest_Price FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor ORDER BY g.Flavor;"
    },
    {
        "question_id": 1558,
        "answer_sql": "SELECT g.Flavor, MAX(g.Price), MIN(g.Price), AVG(g.Price) FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"
    },
    {
        "question_id": 1559,
        "answer_sql": ""
    },
    {
        "question_id": 1560,
        "answer_sql": "SELECT min(g.Price), max(g.Price) FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON i.Receipt = r.ReceiptNumber WHERE r.CustomerId = (SELECT Id FROM customers WHERE LastName = 'Smith' AND FirstName = 'John');"
    },
    {
        "question_id": 1561,
        "answer_sql": "SELECT Date FROM receipts GROUP BY Date ORDER BY COUNT(*) DESC LIMIT 3;"
    },
    {
        "question_id": 1562,
        "answer_sql": ""
    },
    {
        "question_id": 1563,
        "answer_sql": ""
    },
    {
        "question_id": 1564,
        "answer_sql": "SELECT c.Id, COUNT(*) AS PurchaseCount FROM customers c JOIN receipts r ON c.Id = r.CustomerId GROUP BY c.Id ORDER BY PurchaseCount DESC LIMIT 1;"
    },
    {
        "question_id": 1565,
        "answer_sql": ""
    },
    {
        "question_id": 1566,
        "answer_sql": "SELECT ReceiptNumber, COUNT(*) AS NumberOfVisits FROM receipts GROUP BY ReceiptNumber;"
    },
    {
        "question_id": 1567,
        "answer_sql": ""
    },
    {
        "question_id": 1568,
        "answer_sql": ""
    },
    {
        "question_id": 1569,
        "answer_sql": ""
    },
    {
        "question_id": 1570,
        "answer_sql": ""
    },
    {
        "question_id": 1571,
        "answer_sql": ""
    },
    {
        "question_id": 1572,
        "answer_sql": ""
    },
    {
        "question_id": 1573,
        "answer_sql": ""
    },
    {
        "question_id": 1574,
        "answer_sql": ""
    },
    {
        "question_id": 1575,
        "answer_sql": ""
    },
    {
        "question_id": 1576,
        "answer_sql": "SELECT T2.Id, T2.Flavor, T2.Food FROM items AS T1 JOIN goods AS T2 ON T1.Item = T2.Id ORDER BY T2.Price;"
    },
    {
        "question_id": 1577,
        "answer_sql": ""
    },
    {
        "question_id": 1578,
        "answer_sql": ""
    },
    {
        "question_id": 1579,
        "answer_sql": ""
    },
    {
        "question_id": 1580,
        "answer_sql": ""
    },
    {
        "question_id": 1581,
        "answer_sql": "SELECT Flavor FROM goods WHERE Food = 'Cake' AND Id NOT IN (SELECT Item FROM items WHERE Ordinal = 1)"
    },
    {
        "question_id": 1582,
        "answer_sql": ""
    },
    {
        "question_id": 1583,
        "answer_sql": "SELECT Flavor, COUNT(*) as Quantity FROM items JOIN goods ON items.Item = goods.Id GROUP BY Flavor ORDER BY Quantity DESC LIMIT 3;"
    },
    {
        "question_id": 1584,
        "answer_sql": ""
    },
    {
        "question_id": 1585,
        "answer_sql": ""
    },
    {
        "question_id": 1586,
        "answer_sql": ""
    },
    {
        "question_id": 1587,
        "answer_sql": ""
    },
    {
        "question_id": 1588,
        "answer_sql": ""
    },
    {
        "question_id": 1589,
        "answer_sql": ""
    },
    {
        "question_id": 1590,
        "answer_sql": ""
    },
    {
        "question_id": 1591,
        "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM driver;"
    },
    {
        "question_id": 1592,
        "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM driver;"
    },
    {
        "question_id": 1593,
        "answer_sql": ""
    },
    {
        "question_id": 1594,
        "answer_sql": "SELECT T2.Make, COUNT(*) FROM team_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Make;"
    },
    {
        "question_id": 1595,
        "answer_sql": ""
    },
    {
        "question_id": 1596,
        "answer_sql": ""
    },
    {
        "question_id": 1597,
        "answer_sql": ""
    },
    {
        "question_id": 1598,
        "answer_sql": ""
    },
    {
        "question_id": 1599,
        "answer_sql": ""
    },
    {
        "question_id": 1600,
        "answer_sql": ""
    },
    {
        "question_id": 1601,
        "answer_sql": ""
    },
    {
        "question_id": 1602,
        "answer_sql": "SELECT DISTINCT T2.Make FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T2.Make HAVING COUNT(T1.Driver_ID) > 1"
    },
    {
        "question_id": 1603,
        "answer_sql": ""
    },
    {
        "question_id": 1604,
        "answer_sql": ""
    },
    {
        "question_id": 1605,
        "answer_sql": "SELECT MAX(driver.Points) AS MaxPoints, MIN(driver.Points) AS MinPoints FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID"
    },
    {
        "question_id": 1606,
        "answer_sql": "SELECT MAX(driver.Points) AS HighestPoints, MIN(driver.Points) AS LowestPoints FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID"
    },
    {
        "question_id": 1607,
        "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM driver WHERE Points < 150;"
    },
    {
        "question_id": 1608,
        "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM driver WHERE Points < 150;"
    },
    {
        "question_id": 1609,
        "answer_sql": "SELECT Driver FROM driver ORDER BY Driver_ID ASC;"
    },
    {
        "question_id": 1610,
        "answer_sql": ""
    },
    {
        "question_id": 1611,
        "answer_sql": "SELECT Driver FROM driver ORDER BY Points DESC LIMIT 10;"
    },
    {
        "question_id": 1612,
        "answer_sql": "SELECT Driver.Driver, SUM(driver.Points) AS Total_Points FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID GROUP BY Driver.Driver ORDER BY Total_Points DESC;"
    },
    {
        "question_id": 1613,
        "answer_sql": ""
    },
    {
        "question_id": 1614,
        "answer_sql": ""
    },
    {
        "question_id": 1615,
        "answer_sql": ""
    },
    {
        "question_id": 1616,
        "answer_sql": ""
    },
    {
        "question_id": 1617,
        "answer_sql": ""
    },
    {
        "question_id": 1618,
        "answer_sql": ""
    },
    {
        "question_id": 1619,
        "answer_sql": ""
    },
    {
        "question_id": 1620,
        "answer_sql": ""
    },
    {
        "question_id": 1621,
        "answer_sql": ""
    },
    {
        "question_id": 1622,
        "answer_sql": ""
    },
    {
        "question_id": 1623,
        "answer_sql": "SELECT T2.Make, COUNT(T1.Driver_ID) as Driver_Count FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T2.Make"
    },
    {
        "question_id": 1624,
        "answer_sql": "SELECT T2.Make, COUNT(T1.Driver_ID) AS Driver_Count FROM team_driver AS T1 JOIN team AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T2.Make"
    },
    {
        "question_id": 1625,
        "answer_sql": "SELECT T2.Make FROM team_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Make ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1626,
        "answer_sql": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(DISTINCT Driver_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 1627,
        "answer_sql": "SELECT DISTINCT T2.Make FROM team_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Make HAVING COUNT(T1.Driver_ID) >= 3;"
    },
    {
        "question_id": 1628,
        "answer_sql": "SELECT DISTINCT T2.Make FROM team_driver AS T1 JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T2.Make HAVING COUNT(T1.Driver_ID) >= 3;"
    },
    {
        "question_id": 1629,
        "answer_sql": ""
    },
    {
        "question_id": 1630,
        "answer_sql": ""
    },
    {
        "question_id": 1631,
        "answer_sql": ""
    },
    {
        "question_id": 1632,
        "answer_sql": ""
    },
    {
        "question_id": 1633,
        "answer_sql": "SELECT SUM(driver.Points) AS Total_Points, AVG(driver.Points) AS Average_Points FROM driver"
    },
    {
        "question_id": 1634,
        "answer_sql": "SELECT SUM(driver.Points) AS Total_Points, AVG(driver.Points) AS Average_Points FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID JOIN team ON team_driver.Team_ID = team.Team_ID"
    },
    {
        "question_id": 1635,
        "answer_sql": "SELECT DISTINCT country.Country FROM country WHERE country.Country_Id NOT IN (SELECT driver.Country FROM driver)"
    },
    {
        "question_id": 1636,
        "answer_sql": ""
    },
    {
        "question_id": 1637,
        "answer_sql": ""
    },
    {
        "question_id": 1638,
        "answer_sql": ""
    },
    {
        "question_id": 1639,
        "answer_sql": ""
    },
    {
        "question_id": 1640,
        "answer_sql": ""
    },
    {
        "question_id": 1641,
        "answer_sql": "SELECT COUNT(Institution_ID) FROM institution;"
    },
    {
        "question_id": 1642,
        "answer_sql": "SELECT COUNT(Institution_ID) FROM institution;"
    },
    {
        "question_id": 1643,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"
    },
    {
        "question_id": 1644,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"
    },
    {
        "question_id": 1645,
        "answer_sql": "SELECT Name FROM institution ORDER BY Founded ASC;"
    },
    {
        "question_id": 1646,
        "answer_sql": "SELECT Name FROM institution ORDER BY Founded;"
    },
    {
        "question_id": 1647,
        "answer_sql": "SELECT T1.City, T1.Province FROM institution AS T1 JOIN championship AS T2 ON T1.Institution_ID = T2.Institution_ID;"
    },
    {
        "question_id": 1648,
        "answer_sql": "SELECT T1.City, T1.Province FROM institution AS T1 JOIN championship AS T2 ON T1.Institution_ID = T2.Institution_ID;"
    },
    {
        "question_id": 1649,
        "answer_sql": "SELECT MAX(Institution.Enrollment) AS MaxEnrollment, MIN(Institution.Enrollment) AS MinEnrollment FROM institution;"
    },
    {
        "question_id": 1650,
        "answer_sql": "SELECT MAX(Institution.Enrollment) AS MaxEnrollment, MIN(Institution.Enrollment) AS MinEnrollment FROM institution;"
    },
    {
        "question_id": 1651,
        "answer_sql": "SELECT DISTINCT T1.Affiliation FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.City != 'Vancouver'"
    },
    {
        "question_id": 1652,
        "answer_sql": "SELECT T1.Affiliation FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.City != 'Vancouver'"
    },
    {
        "question_id": 1653,
        "answer_sql": ""
    },
    {
        "question_id": 1654,
        "answer_sql": ""
    },
    {
        "question_id": 1655,
        "answer_sql": ""
    },
    {
        "question_id": 1656,
        "answer_sql": "SELECT T1.Stadium FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Joined = ( SELECT MAX(Joined) FROM Championship ) ORDER BY T1.Enrollment DESC LIMIT 1;"
    },
    {
        "question_id": 1657,
        "answer_sql": ""
    },
    {
        "question_id": 1658,
        "answer_sql": "SELECT i.Name, c.Nickname FROM institution i JOIN Championship c ON i.Institution_ID = c.Institution_ID;"
    },
    {
        "question_id": 1659,
        "answer_sql": ""
    },
    {
        "question_id": 1660,
        "answer_sql": "SELECT T2.Nickname FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T1.Enrollment ASC LIMIT 1;"
    },
    {
        "question_id": 1661,
        "answer_sql": "SELECT Institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID ORDER BY Championship.Number_of_Championships DESC;"
    },
    {
        "question_id": 1662,
        "answer_sql": "SELECT Institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID ORDER BY Championship.Number_of_Championships DESC;"
    },
    {
        "question_id": 1663,
        "answer_sql": "SELECT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Institution_ID HAVING COUNT(T2.Institution_ID) > 0;"
    },
    {
        "question_id": 1664,
        "answer_sql": ""
    },
    {
        "question_id": 1665,
        "answer_sql": "SELECT COUNT(*) FROM Championship WHERE Institution_ID IN (SELECT Institution_ID FROM institution WHERE Affiliation = 'Public')"
    },
    {
        "question_id": 1666,
        "answer_sql": "SELECT COUNT(Institution_ID) FROM Championship WHERE Institution_ID IN ( SELECT Institution_ID FROM institution WHERE Affiliation = 'Public' )"
    },
    {
        "question_id": 1667,
        "answer_sql": "SELECT DISTINCT T1.Affiliation, COUNT(T1.Institution_ID) AS Number_of_Institutions FROM institution AS T1 JOIN championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Affiliation ORDER BY Number_of_Institutions DESC;"
    },
    {
        "question_id": 1668,
        "answer_sql": ""
    },
    {
        "question_id": 1669,
        "answer_sql": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1670,
        "answer_sql": "SELECT DISTINCT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1671,
        "answer_sql": "SELECT DISTINCT T1.Founded FROM institution AS T1 JOIN championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Founded > 1;"
    },
    {
        "question_id": 1672,
        "answer_sql": "SELECT T1.Founded AS Year, COUNT(*) AS Number_of_institutions FROM institution AS T1 JOIN championship AS T2 ON T1.Institution_ID = T2.Institution_ID GROUP BY T1.Founded HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1673,
        "answer_sql": ""
    },
    {
        "question_id": 1674,
        "answer_sql": ""
    },
    {
        "question_id": 1675,
        "answer_sql": "SELECT SUM(T1.Enrollment) FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.City IN ('Vancouver', 'Calgary')"
    },
    {
        "question_id": 1676,
        "answer_sql": "SELECT T1.Name FROM institution AS T1 JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.City IN ('Vancouver', 'Calgary')"
    },
    {
        "question_id": 1677,
        "answer_sql": ""
    },
    {
        "question_id": 1678,
        "answer_sql": ""
    },
    {
        "question_id": 1679,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Province) FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID;"
    },
    {
        "question_id": 1680,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Province) FROM Championship AS T1 JOIN institution AS T2 ON T1.Institution_ID = T2.Institution_ID;"
    },
    {
        "question_id": 1681,
        "answer_sql": "SELECT * FROM Warehouses;"
    },
    {
        "question_id": 1682,
        "answer_sql": "SELECT * FROM Warehouses;"
    },
    {
        "question_id": 1683,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'New York')"
    },
    {
        "question_id": 1684,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'New York')"
    },
    {
        "question_id": 1685,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Value > 150;"
    },
    {
        "question_id": 1686,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Value > 150;"
    },
    {
        "question_id": 1687,
        "answer_sql": "SELECT W.Code, AVG(B.Value) AS AverageValue FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse GROUP BY W.Code;"
    },
    {
        "question_id": 1688,
        "answer_sql": "SELECT w.Code, AVG(b.Value) AS AverageValue FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse GROUP BY w.Code;"
    },
    {
        "question_id": 1689,
        "answer_sql": "SELECT AVG(Value), SUM(Value) FROM Boxes;"
    },
    {
        "question_id": 1690,
        "answer_sql": "SELECT AVG(Value), SUM(Value) FROM Boxes;"
    },
    {
        "question_id": 1691,
        "answer_sql": "SELECT AVG(Capacity), SUM(Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1692,
        "answer_sql": "SELECT AVG(Capacity), SUM(Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1693,
        "answer_sql": "SELECT Contents, AVG(Value), MAX(Value) FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1694,
        "answer_sql": ""
    },
    {
        "question_id": 1695,
        "answer_sql": "SELECT Contents FROM Boxes GROUP BY Contents ORDER BY SUM(Value) DESC LIMIT 1;"
    },
    {
        "question_id": 1696,
        "answer_sql": "SELECT Contents FROM Boxes GROUP BY Contents ORDER BY SUM(Value) DESC LIMIT 1;"
    },
    {
        "question_id": 1697,
        "answer_sql": "SELECT AVG(Value) FROM Boxes;"
    },
    {
        "question_id": 1698,
        "answer_sql": "SELECT AVG(Value) FROM Boxes;"
    },
    {
        "question_id": 1699,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"
    },
    {
        "question_id": 1700,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"
    },
    {
        "question_id": 1701,
        "answer_sql": "SELECT COUNT(DISTINCT Contents) FROM Boxes;"
    },
    {
        "question_id": 1702,
        "answer_sql": "SELECT COUNT(DISTINCT Contents) FROM Boxes;"
    },
    {
        "question_id": 1703,
        "answer_sql": ""
    },
    {
        "question_id": 1704,
        "answer_sql": ""
    },
    {
        "question_id": 1705,
        "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN ( SELECT Code FROM Warehouses WHERE Location = 'Chicago' OR Location = 'New York' );"
    },
    {
        "question_id": 1706,
        "answer_sql": "SELECT T1.Code FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T2.Location IN ('Chicago', 'New York')"
    },
    {
        "question_id": 1707,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1708,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes WHERE Boxes.Warehouse IN (SELECT Code FROM Warehouses WHERE Location IN ('Chicago', 'New York'));"
    },
    {
        "question_id": 1709,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Warehouse IN ( SELECT Code FROM Warehouses WHERE Location = 'Chicago' ) UNION ALL SELECT Contents FROM Boxes WHERE Warehouse IN ( SELECT Code FROM Warehouses WHERE Location = 'New York' )"
    },
    {
        "question_id": 1710,
        "answer_sql": ""
    },
    {
        "question_id": 1711,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Code NOT IN (SELECT Warehouse FROM Warehouses WHERE Location = 'New York')"
    },
    {
        "question_id": 1712,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'New York')"
    },
    {
        "question_id": 1713,
        "answer_sql": "SELECT T1.Location FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T2.Contents = 'Rocks' AND T2.Contents != 'Scissors';"
    },
    {
        "question_id": 1714,
        "answer_sql": "SELECT W.Location FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents = 'Rocks' AND B.Contents != 'Scissors';"
    },
    {
        "question_id": 1715,
        "answer_sql": "SELECT W.Code FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents IN ('Rocks', 'Scissors');"
    },
    {
        "question_id": 1716,
        "answer_sql": "SELECT DISTINCT W.Code FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents IN ('Rocks', 'Scissors')"
    },
    {
        "question_id": 1717,
        "answer_sql": ""
    },
    {
        "question_id": 1718,
        "answer_sql": ""
    },
    {
        "question_id": 1719,
        "answer_sql": "SELECT Code, Contents, Value FROM Boxes ORDER BY Value DESC;"
    },
    {
        "question_id": 1720,
        "answer_sql": "SELECT Code, Contents, Value FROM Boxes ORDER BY Value DESC;"
    },
    {
        "question_id": 1721,
        "answer_sql": "SELECT Code, Contents FROM Boxes ORDER BY Value ASC LIMIT 1;"
    },
    {
        "question_id": 1722,
        "answer_sql": "SELECT Code, Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes);"
    },
    {
        "question_id": 1723,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Value > (SELECT AVG(Value) FROM Boxes);"
    },
    {
        "question_id": 1724,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Value > (SELECT AVG(Value) FROM Boxes)"
    },
    {
        "question_id": 1725,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"
    },
    {
        "question_id": 1726,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents ASC;"
    },
    {
        "question_id": 1727,
        "answer_sql": "SELECT T1.Code FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T1.Contents != 'Rocks' AND T1.Value > (SELECT Value FROM Boxes WHERE Contents = 'Rocks')"
    },
    {
        "question_id": 1728,
        "answer_sql": ""
    },
    {
        "question_id": 1729,
        "answer_sql": "SELECT T1.Code, T1.Contents FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T1.Contents != 'Scissors' AND T1.Value > (SELECT AVG(T3.Value) FROM Boxes AS T3 WHERE T3.Warehouse = T2.Code AND T3.Contents = 'Scissors')"
    },
    {
        "question_id": 1730,
        "answer_sql": "SELECT T1.Code, T1.Contents FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code WHERE T1.Value > (SELECT Value FROM Boxes WHERE Contents = 'Scissors')"
    },
    {
        "question_id": 1731,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Capacity = (SELECT MAX(capacity) FROM Warehouses);"
    },
    {
        "question_id": 1732,
        "answer_sql": "SELECT SUM(Value) FROM Boxes WHERE Warehouse = ( SELECT Warehouse FROM Warehouses ORDER BY Capacity DESC LIMIT 1 );"
    },
    {
        "question_id": 1733,
        "answer_sql": "SELECT w.Code, AVG(b.Value) AS AverageValue FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse GROUP BY w.Code HAVING AVG(b.Value) > 150;"
    },
    {
        "question_id": 1734,
        "answer_sql": "SELECT w.Code, AVG(b.Value) as AverageValue FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse WHERE b.Value > 150 GROUP BY w.Code HAVING AVG(b.Value) > 150;"
    },
    {
        "question_id": 1735,
        "answer_sql": "SELECT Contents, SUM(Value) AS Total_Value, COUNT(Code) AS Number_of_Boxes FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1736,
        "answer_sql": "SELECT Contents, SUM(Value) AS Total_Value, COUNT(Code) AS Number_of_Boxes FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1737,
        "answer_sql": ""
    },
    {
        "question_id": 1738,
        "answer_sql": "SELECT W.Location, SUM(W.Capacity) AS Total, AVG(W.Capacity) AS Average, MAX(W.Capacity) AS Maximum FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse GROUP BY W.Location;"
    },
    {
        "question_id": 1739,
        "answer_sql": "SELECT SUM(Capacity) FROM Warehouses;"
    },
    {
        "question_id": 1740,
        "answer_sql": "SELECT SUM(Capacity) FROM Warehouses;"
    },
    {
        "question_id": 1741,
        "answer_sql": "SELECT w.Location, b.Value FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse;"
    },
    {
        "question_id": 1742,
        "answer_sql": "SELECT W.Location, B.Value FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse;"
    },
    {
        "question_id": 1743,
        "answer_sql": "SELECT W.Code, COUNT(*) AS BoxCount FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse GROUP BY W.Code;"
    },
    {
        "question_id": 1744,
        "answer_sql": "SELECT Warehouse, COUNT(*) AS BoxCount FROM Boxes GROUP BY Warehouse;"
    },
    {
        "question_id": 1745,
        "answer_sql": "SELECT COUNT(DISTINCT Warehouse) FROM Boxes WHERE Contents = 'Rocks';"
    },
    {
        "question_id": 1746,
        "answer_sql": "SELECT COUNT(DISTINCT Warehouse) FROM Boxes WHERE Contents = 'Rocks';"
    },
    {
        "question_id": 1747,
        "answer_sql": ""
    },
    {
        "question_id": 1748,
        "answer_sql": "SELECT T1.Code, T2.Location FROM Boxes AS T1 JOIN Warehouses AS T2 ON T1.Warehouse = T2.Code;"
    },
    {
        "question_id": 1749,
        "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = 'Chicago')"
    },
    {
        "question_id": 1750,
        "answer_sql": "SELECT T1.Code FROM Warehouses AS T1 JOIN Boxes AS T2 ON T1.Code = T2.Warehouse WHERE T1.Location = 'Chicago'"
    },
    {
        "question_id": 1751,
        "answer_sql": "SELECT w.Code, COUNT(*) AS BoxCount FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse GROUP BY w.Code"
    },
    {
        "question_id": 1752,
        "answer_sql": "SELECT Warehouse, COUNT(*) AS BoxCount FROM Boxes GROUP BY Warehouse;"
    },
    {
        "question_id": 1753,
        "answer_sql": "SELECT w.Code, COUNT(DISTINCT b.Contents) AS NumberOfDistinctTypes FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse GROUP BY w.Code"
    },
    {
        "question_id": 1754,
        "answer_sql": "SELECT w.Code, COUNT(DISTINCT b.Contents) AS NumberOfTypes FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse GROUP BY w.Code"
    },
    {
        "question_id": 1755,
        "answer_sql": "SELECT Code FROM Warehouses WHERE Capacity > (SELECT Capacity FROM Warehouses WHERE Code = (SELECT Warehouse FROM Boxes ORDER BY Value DESC LIMIT 1))"
    },
    {
        "question_id": 1756,
        "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN ( SELECT Code FROM Warehouses WHERE Capacity < Boxes.Warehouse )"
    },
    {
        "question_id": 1757,
        "answer_sql": "SELECT SUM(boxes.Value) FROM Boxes WHERE boxes.Warehouse NOT IN (SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location = 'Chicago')"
    },
    {
        "question_id": 1758,
        "answer_sql": "SELECT SUM(Value) FROM Boxes WHERE Warehouse NOT IN (SELECT Code FROM Warehouses WHERE Location = 'Chicago')"
    },
    {
        "question_id": 1759,
        "answer_sql": "SELECT University_Name, City, State FROM university ORDER BY University_Name;"
    },
    {
        "question_id": 1760,
        "answer_sql": "SELECT University_Name, City, State FROM university ORDER BY University_Name;"
    },
    {
        "question_id": 1761,
        "answer_sql": "SELECT COUNT(DISTINCT university.University_ID) FROM university WHERE university.City IN ('Illinois', 'Ohio')"
    },
    {
        "question_id": 1762,
        "answer_sql": "SELECT COUNT(DISTINCT University_ID) FROM overall_ranking WHERE University_ID IN ( SELECT University_ID FROM university WHERE State IN ('IL', 'OH') )"
    },
    {
        "question_id": 1763,
        "answer_sql": "SELECT MAX(T1.Enrollment) AS MaxEnrollment, AVG(T1.Enrollment) AS AvgEnrollment, MIN(T1.Enrollment) AS MinEnrollment FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID"
    },
    {
        "question_id": 1764,
        "answer_sql": "SELECT MAX(T1.Enrollment) AS max_enrollment, AVG(T1.Enrollment) AS avg_enrollment, MIN(T1.Enrollment) AS min_enrollment FROM university AS T1"
    },
    {
        "question_id": 1765,
        "answer_sql": "SELECT T1.University_Name FROM university AS T1 JOIN ( SELECT University_ID, AVG(Enrollment) as AvgEnrollment FROM university GROUP BY University_ID ) AS T2 ON T1.University_ID = T2.University_ID WHERE T1.Enrollment > (SELECT AvgEnrollment FROM ( SELECT AVG(Enrollment) as AvgEnrollment FROM university ) AS T3)"
    },
    {
        "question_id": 1766,
        "answer_sql": "SELECT T1.University_Name FROM university AS T1 JOIN ( SELECT University_ID, COUNT(*) as Total FROM overall_ranking GROUP BY University_ID HAVING Total > ( SELECT AVG(Total) FROM overall_ranking ) ) AS T2 ON T1.University_ID = T2.University_ID"
    },
    {
        "question_id": 1767,
        "answer_sql": "SELECT T1.Home_Conference FROM university AS T1 INNER JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Reputation_point > 0;"
    },
    {
        "question_id": 1768,
        "answer_sql": "SELECT DISTINCT T1.Home_Conference FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID;"
    },
    {
        "question_id": 1769,
        "answer_sql": "SELECT T1.Home_Conference, COUNT(T2.University_ID) AS Number_of_universities FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID GROUP BY T1.Home_Conference"
    },
    {
        "question_id": 1770,
        "answer_sql": "SELECT COUNT(DISTINCT T1.University_ID) FROM overall_ranking AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Home_Conference = 'Home Conference';"
    },
    {
        "question_id": 1771,
        "answer_sql": "SELECT T1.State FROM university AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID GROUP BY T1.State ORDER BY SUM(T2.Enrollment) DESC LIMIT 1;"
    },
    {
        "question_id": 1772,
        "answer_sql": "SELECT T2.State FROM university AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID GROUP BY T2.State ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1773,
        "answer_sql": ""
    },
    {
        "question_id": 1774,
        "answer_sql": ""
    },
    {
        "question_id": 1775,
        "answer_sql": "SELECT T2.Home_Conference FROM overall_ranking AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID WHERE T1.Total = (SELECT MIN(T3.Total) FROM overall_ranking AS T3)"
    },
    {
        "question_id": 1776,
        "answer_sql": ""
    },
    {
        "question_id": 1777,
        "answer_sql": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;"
    },
    {
        "question_id": 1778,
        "answer_sql": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;"
    },
    {
        "question_id": 1779,
        "answer_sql": ""
    },
    {
        "question_id": 1780,
        "answer_sql": ""
    },
    {
        "question_id": 1781,
        "answer_sql": "SELECT T1.University_Name, T1.City, T1.State FROM university AS T1 JOIN major_ranking AS T2 ON T1.University_ID = T2.University_ID JOIN major AS T3 ON T2.Major_ID = T3.Major_ID WHERE T2.Rank = 1 AND T3.Major_Name = 'Accounting';"
    },
    {
        "question_id": 1782,
        "answer_sql": "SELECT T1.University_Name, T1.City, T1.State FROM university AS T1 JOIN major_ranking AS T2 ON T1.University_ID = T2.University_ID JOIN major AS T3 ON T2.Major_ID = T3.Major_ID WHERE T2.Rank = 1 AND T3.Major_Name = 'Accounting';"
    },
    {
        "question_id": 1783,
        "answer_sql": "SELECT University_Name FROM university WHERE University_ID = ( SELECT University_ID FROM major_ranking GROUP BY University_ID ORDER BY COUNT(DISTINCT Major_ID) DESC LIMIT 1 )"
    },
    {
        "question_id": 1784,
        "answer_sql": "SELECT T1.University_Name FROM university AS T1 JOIN major_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Rank = 1 GROUP BY T1.University_Name ORDER BY COUNT(T2.Rank) DESC LIMIT 1;"
    },
    {
        "question_id": 1785,
        "answer_sql": ""
    },
    {
        "question_id": 1786,
        "answer_sql": "SELECT University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Rank = 1);"
    },
    {
        "question_id": 1787,
        "answer_sql": "SELECT University_Name FROM university WHERE University_ID IN ( SELECT University_ID FROM major_ranking WHERE Major_ID IN ( SELECT Major_ID FROM major WHERE Major_Name = 'Accounting' ) AND University_ID IN ( SELECT University_ID FROM major_ranking WHERE Major_ID IN ( SELECT Major_ID FROM major WHERE Major_Name = 'Urban Education' ) ) )"
    },
    {
        "question_id": 1788,
        "answer_sql": ""
    },
    {
        "question_id": 1789,
        "answer_sql": ""
    },
    {
        "question_id": 1790,
        "answer_sql": ""
    },
    {
        "question_id": 1791,
        "answer_sql": "SELECT University_Name FROM university WHERE University_ID = ( SELECT University_ID FROM overall_ranking ORDER BY Reputation_point DESC LIMIT 1 )"
    },
    {
        "question_id": 1792,
        "answer_sql": "SELECT University_Name FROM university WHERE University_ID = ( SELECT University_ID FROM overall_ranking GROUP BY University_ID ORDER BY Research_point DESC LIMIT 1 )"
    },
    {
        "question_id": 1793,
        "answer_sql": ""
    },
    {
        "question_id": 1794,
        "answer_sql": ""
    },
    {
        "question_id": 1795,
        "answer_sql": ""
    },
    {
        "question_id": 1796,
        "answer_sql": ""
    },
    {
        "question_id": 1797,
        "answer_sql": "SELECT SUM(T1.Enrollment) FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Rank < 5;"
    },
    {
        "question_id": 1798,
        "answer_sql": "SELECT COUNT(DISTINCT u.University_ID) FROM university u WHERE u.University_ID NOT IN (SELECT u1.University_ID FROM university u1 WHERE u1.University_ID IN (SELECT u2.University_ID FROM university u2 WHERE u2.University_ID = u1.University_ID AND u2.University_ID < 5)) ORDER BY u.University_ID;"
    },
    {
        "question_id": 1799,
        "answer_sql": "SELECT T1.University_Name, T2.Citation_point FROM university AS T1 JOIN overall_ranking AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Reputation_point > 3 ORDER BY T2.Reputation_point DESC LIMIT 1;"
    },
    {
        "question_id": 1800,
        "answer_sql": ""
    },
    {
        "question_id": 1801,
        "answer_sql": "SELECT T1.State FROM university AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Enrollment < 3000 GROUP BY T1.State HAVING COUNT(DISTINCT T1.University_ID) > 2 ORDER BY COUNT(DISTINCT T1.University_ID) DESC;"
    },
    {
        "question_id": 1802,
        "answer_sql": "SELECT T1.State FROM university AS T1 JOIN university AS T2 ON T1.University_ID = T2.University_ID WHERE T2.Enrollment < 3000 GROUP BY T1.State HAVING COUNT(T2.University_ID) > 2;"
    },
    {
        "question_id": 1803,
        "answer_sql": "SELECT Title FROM Movies WHERE Rating IS NULL;"
    },
    {
        "question_id": 1804,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T2.Name HAVING COUNT(T1.Rating) = 0;"
    },
    {
        "question_id": 1805,
        "answer_sql": ""
    },
    {
        "question_id": 1806,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating = 'G';"
    },
    {
        "question_id": 1807,
        "answer_sql": "SELECT T1.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Odeon';"
    },
    {
        "question_id": 1808,
        "answer_sql": "SELECT T1.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Odeon';"
    },
    {
        "question_id": 1809,
        "answer_sql": "SELECT T2.Name AS TheaterName FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Code IS NOT NULL;"
    },
    {
        "question_id": 1810,
        "answer_sql": "SELECT T2.Name AS TheaterName FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Code IS NOT NULL;"
    },
    {
        "question_id": 1811,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1812,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1813,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Code) FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code;"
    },
    {
        "question_id": 1814,
        "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"
    },
    {
        "question_id": 1815,
        "answer_sql": "SELECT COUNT(DISTINCT T2.Code) FROM MovieTheaters AS T1 JOIN Movies AS T2 ON T1.Movie = T2.Code;"
    },
    {
        "question_id": 1816,
        "answer_sql": "SELECT COUNT(DISTINCT Movie) FROM MovieTheaters;"
    },
    {
        "question_id": 1817,
        "answer_sql": "SELECT COUNT(DISTINCT MovieTheaters.Code) FROM MovieTheaters;"
    },
    {
        "question_id": 1818,
        "answer_sql": "SELECT COUNT(DISTINCT MovieTheaters.Code) FROM MovieTheaters;"
    },
    {
        "question_id": 1819,
        "answer_sql": "SELECT Rating FROM Movies WHERE Title LIKE '%Citizen%';"
    },
    {
        "question_id": 1820,
        "answer_sql": ""
    },
    {
        "question_id": 1821,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating IN ('G', 'PG')"
    },
    {
        "question_id": 1822,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating IN ('G', 'PG')"
    },
    {
        "question_id": 1823,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name IN ('Odeon', 'Imperial');"
    },
    {
        "question_id": 1824,
        "answer_sql": "SELECT T1.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Odeon' OR T2.Name = 'Imperial';"
    },
    {
        "question_id": 1825,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name IN ('Odeon', 'Imperial');"
    },
    {
        "question_id": 1826,
        "answer_sql": ""
    },
    {
        "question_id": 1827,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name != 'Odeon';"
    },
    {
        "question_id": 1828,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name != 'Odeon';"
    },
    {
        "question_id": 1829,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Title;"
    },
    {
        "question_id": 1830,
        "answer_sql": "SELECT DISTINCT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie;"
    },
    {
        "question_id": 1831,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Rating;"
    },
    {
        "question_id": 1832,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie ORDER BY T1.Rating;"
    },
    {
        "question_id": 1833,
        "answer_sql": ""
    },
    {
        "question_id": 1834,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1835,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T2.Name ORDER BY COUNT(T2.Code) DESC LIMIT 1;"
    },
    {
        "question_id": 1836,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T2.Name ORDER BY COUNT(T2.Code) DESC LIMIT 1;"
    },
    {
        "question_id": 1837,
        "answer_sql": "SELECT Rating, COUNT(*) FROM Movies GROUP BY Rating;"
    },
    {
        "question_id": 1838,
        "answer_sql": "SELECT Rating, COUNT(*) FROM Movies GROUP BY Rating;"
    },
    {
        "question_id": 1839,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1840,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1841,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies) GROUP BY Name HAVING COUNT(*) > 0;"
    },
    {
        "question_id": 1842,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies) GROUP BY Name;"
    },
    {
        "question_id": 1843,
        "answer_sql": ""
    },
    {
        "question_id": 1844,
        "answer_sql": ""
    },
    {
        "question_id": 1845,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating = 'G';"
    },
    {
        "question_id": 1846,
        "answer_sql": "SELECT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T1.Rating = 'G';"
    },
    {
        "question_id": 1847,
        "answer_sql": "SELECT Title FROM Movies;"
    },
    {
        "question_id": 1848,
        "answer_sql": "SELECT DISTINCT T2.Name FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie;"
    },
    {
        "question_id": 1849,
        "answer_sql": "SELECT DISTINCT Rating FROM Movies;"
    },
    {
        "question_id": 1850,
        "answer_sql": "SELECT DISTINCT Rating FROM Movies;"
    },
    {
        "question_id": 1851,
        "answer_sql": "SELECT Title FROM Movies WHERE Rating IS NULL;"
    },
    {
        "question_id": 1852,
        "answer_sql": "SELECT T1.Title, T1.Rating FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie;"
    },
    {
        "question_id": 1853,
        "answer_sql": "SELECT T1.Title FROM Movies AS T1 LEFT JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Code IS NULL;"
    },
    {
        "question_id": 1854,
        "answer_sql": ""
    },
    {
        "question_id": 1855,
        "answer_sql": ""
    },
    {
        "question_id": 1856,
        "answer_sql": "SELECT c.Name FROM Client c JOIN Package p ON c.AccountNumber = p.Sender JOIN Shipment s ON p.Shipment = s.ShipmentID WHERE p.Weight = (SELECT MAX(Weight) FROM Package WHERE Sender = c.AccountNumber) ORDER BY p.Weight DESC LIMIT 1;"
    },
    {
        "question_id": 1857,
        "answer_sql": "SELECT SUM(Weight) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong')"
    },
    {
        "question_id": 1858,
        "answer_sql": "SELECT SUM(Weight) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong')"
    },
    {
        "question_id": 1859,
        "answer_sql": ""
    },
    {
        "question_id": 1860,
        "answer_sql": ""
    },
    {
        "question_id": 1861,
        "answer_sql": ""
    },
    {
        "question_id": 1862,
        "answer_sql": "SELECT T1.Name, T1.Position FROM Employee AS T1 WHERE T1.Name = 'Turanga Leela';"
    },
    {
        "question_id": 1863,
        "answer_sql": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern';"
    },
    {
        "question_id": 1864,
        "answer_sql": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern';"
    },
    {
        "question_id": 1865,
        "answer_sql": ""
    },
    {
        "question_id": 1866,
        "answer_sql": ""
    },
    {
        "question_id": 1867,
        "answer_sql": "SELECT T2.PackageNumber FROM Client AS T1 INNER JOIN Package AS T2 ON T1.AccountNumber = T2.Sender WHERE T1.Name = 'Leo Wong';"
    },
    {
        "question_id": 1868,
        "answer_sql": "SELECT COUNT(*) FROM Client AS C INNER JOIN Package AS P ON C.AccountNumber = P.Sender INNER JOIN Shipment AS S ON P.Shipment = S.ShipmentID WHERE C.Name = 'Leo Wong';"
    },
    {
        "question_id": 1869,
        "answer_sql": ""
    },
    {
        "question_id": 1870,
        "answer_sql": ""
    },
    {
        "question_id": 1871,
        "answer_sql": ""
    },
    {
        "question_id": 1872,
        "answer_sql": ""
    },
    {
        "question_id": 1873,
        "answer_sql": ""
    },
    {
        "question_id": 1874,
        "answer_sql": ""
    },
    {
        "question_id": 1875,
        "answer_sql": "SELECT Contents FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'John Zoidfarb')"
    },
    {
        "question_id": 1876,
        "answer_sql": "SELECT Contents FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'John Zoidfarb')"
    },
    {
        "question_id": 1877,
        "answer_sql": ""
    },
    {
        "question_id": 1878,
        "answer_sql": "SELECT T1.Shipment, T1.PackageNumber, T1.Weight FROM Package AS T1 JOIN Client AS T2 ON T1.Sender = T2.AccountNumber WHERE T2.Name LIKE '%John%' ORDER BY T1.Weight DESC LIMIT 1;"
    },
    {
        "question_id": 1879,
        "answer_sql": "SELECT T1.PackageNumber, T1.Weight FROM Package AS T1 WHERE T1.Weight = (SELECT MIN(Weight) FROM Package) LIMIT 3;"
    },
    {
        "question_id": 1880,
        "answer_sql": "SELECT T1.Shipment, T1.PackageNumber, T1.Weight FROM Package AS T1 WHERE T1.Weight = (SELECT MIN(Weight) FROM Package) LIMIT 3;"
    },
    {
        "question_id": 1881,
        "answer_sql": "SELECT c.Name, COUNT(*) AS PackageCount FROM Client c JOIN Package p ON c.AccountNumber = p.Sender GROUP BY c.AccountNumber ORDER BY PackageCount DESC LIMIT 1;"
    },
    {
        "question_id": 1882,
        "answer_sql": "SELECT c.Name FROM Client c JOIN Package p ON c.AccountNumber = p.Sender GROUP BY c.AccountNumber ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1883,
        "answer_sql": "SELECT C.Name, COUNT(*) AS PackageCount FROM Client C JOIN Package P ON C.AccountNumber = P.Sender GROUP BY C.AccountNumber ORDER BY PackageCount DESC LIMIT 1;"
    },
    {
        "question_id": 1884,
        "answer_sql": "SELECT T2.Recipient, T2.Weight FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender WHERE T2.Recipient IS NOT NULL GROUP BY T2.Recipient, T2.Weight ORDER BY T2.Recipient, T2.Weight DESC LIMIT 1;"
    },
    {
        "question_id": 1885,
        "answer_sql": "SELECT DISTINCT T1.Name FROM Client AS T1 JOIN Package AS T2 ON T1.AccountNumber = T2.Sender JOIN Package AS T3 ON T2.PackageNumber = T3.PackageNumber GROUP BY T1.AccountNumber HAVING COUNT(T2.PackageNumber) > 1;"
    },
    {
        "question_id": 1886,
        "answer_sql": "SELECT DISTINCT c.Name FROM Client c JOIN Package p ON c.AccountNumber = p.Sender GROUP BY c.AccountNumber HAVING COUNT(p.PackageNumber) > 1;"
    },
    {
        "question_id": 1887,
        "answer_sql": ""
    },
    {
        "question_id": 1888,
        "answer_sql": ""
    },
    {
        "question_id": 1889,
        "answer_sql": ""
    },
    {
        "question_id": 1890,
        "answer_sql": ""
    },
    {
        "question_id": 1891,
        "answer_sql": ""
    },
    {
        "question_id": 1892,
        "answer_sql": ""
    },
    {
        "question_id": 1893,
        "answer_sql": "SELECT DISTINCT T1.Date FROM Shipment AS T1 INNER JOIN Planet AS T2 ON T1.Planet = T2.PlanetID ORDER BY T1.Date;"
    },
    {
        "question_id": 1894,
        "answer_sql": "SELECT DISTINCT T1.Date FROM Shipment AS T1 INNER JOIN Planet AS T2 ON T1.Planet = T2.PlanetID;"
    },
    {
        "question_id": 1895,
        "answer_sql": "SELECT DISTINCT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name = 'Mars';"
    },
    {
        "question_id": 1896,
        "answer_sql": "SELECT DISTINCT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name = 'Mars'"
    },
    {
        "question_id": 1897,
        "answer_sql": ""
    },
    {
        "question_id": 1898,
        "answer_sql": ""
    },
    {
        "question_id": 1899,
        "answer_sql": "SELECT DISTINCT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = 'Mars' OR T2.Position = 'Turanga Leela'"
    },
    {
        "question_id": 1900,
        "answer_sql": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = 'Mars' AND T2.Name = 'Turanga Leela'"
    },
    {
        "question_id": 1901,
        "answer_sql": "SELECT P.Name, SUM(S.ShipmentID) AS TotalShipments FROM Shipment S JOIN Planet P ON S.Planet = P.PlanetID GROUP BY P.Name"
    },
    {
        "question_id": 1902,
        "answer_sql": "SELECT Planet.Name, COUNT(*) AS Number_of_shipments FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID JOIN Has_Clearance ON Shipment.Manager = Has_Clearance.Employee JOIN Planet ON Has_Clearance.Planet = Planet.PlanetID GROUP BY Planet.Name"
    },
    {
        "question_id": 1903,
        "answer_sql": "SELECT Planet.Name FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet GROUP BY Planet ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1904,
        "answer_sql": "SELECT Planet.Name FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID JOIN Has_Clearance ON Shipment.Manager = Has_Clearance.Employee JOIN Planet ON Has_Clearance.Planet = Planet.PlanetID GROUP BY Planet.Name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1905,
        "answer_sql": "SELECT T1.Manager, COUNT(*) AS Number_of_shipments FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager"
    },
    {
        "question_id": 1906,
        "answer_sql": "SELECT COUNT(ShipmentID), EmployeeID, Name FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID GROUP BY EmployeeID, Name;"
    },
    {
        "question_id": 1907,
        "answer_sql": ""
    },
    {
        "question_id": 1908,
        "answer_sql": ""
    },
    {
        "question_id": 1909,
        "answer_sql": ""
    },
    {
        "question_id": 1910,
        "answer_sql": ""
    },
    {
        "question_id": 1911,
        "answer_sql": ""
    },
    {
        "question_id": 1912,
        "answer_sql": ""
    },
    {
        "question_id": 1913,
        "answer_sql": ""
    },
    {
        "question_id": 1914,
        "answer_sql": "SELECT COUNT(*) FROM Client AS C JOIN Package AS P ON C.AccountNumber = P.Sender JOIN Shipment AS S ON P.Shipment = S.ShipmentID JOIN Employee AS E ON S.Manager = E.EmployeeID WHERE E.Name = 'Zapp Brannigan' AND S.Planet = 'Omicron Persei 8';"
    },
    {
        "question_id": 1915,
        "answer_sql": ""
    },
    {
        "question_id": 1916,
        "answer_sql": "SELECT COUNT(*) FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Omicron Persei 8') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan');"
    },
    {
        "question_id": 1917,
        "answer_sql": "SELECT T1.Shipment, T1.Weight FROM Package AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID WHERE T1.Weight BETWEEN 10 AND 30"
    },
    {
        "question_id": 1918,
        "answer_sql": "SELECT T1.PackageNumber, T1.Weight FROM Package AS T1 WHERE T1.Weight BETWEEN 10 AND 30;"
    },
    {
        "question_id": 1919,
        "answer_sql": "SELECT T1.Name FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee WHERE T2.Level = 1"
    },
    {
        "question_id": 1920,
        "answer_sql": ""
    },
    {
        "question_id": 1921,
        "answer_sql": "SELECT T1.Name FROM Employee AS T1 JOIN Has_Clearance AS T2 ON T1.EmployeeID = T2.Employee JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = 'Omega III';"
    },
    {
        "question_id": 1922,
        "answer_sql": "SELECT E.Name FROM Employee E JOIN Has_Clearance H ON E.EmployeeID = H.Employee JOIN Planet P ON H.Planet = P.PlanetID WHERE P.Name = 'Omega III';"
    },
    {
        "question_id": 1923,
        "answer_sql": ""
    },
    {
        "question_id": 1924,
        "answer_sql": "SELECT T2.Name FROM Employee AS T1 JOIN Has_Clearance AS T3 ON T1.EmployeeID = T3.Employee JOIN Planet AS T2 ON T3.Planet = T2.PlanetID WHERE T3.Level = 1;"
    },
    {
        "question_id": 1925,
        "answer_sql": "SELECT e.Name FROM Employee e WHERE e.Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1926,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1927,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary > ( SELECT AVG(Salary) FROM Employee );"
    },
    {
        "question_id": 1928,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary > ( SELECT AVG(Salary) FROM Employee );"
    },
    {
        "question_id": 1929,
        "answer_sql": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN (SELECT EmployeeID FROM Has_Clearance WHERE Planet = 'Mars');"
    },
    {
        "question_id": 1930,
        "answer_sql": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN (SELECT EmployeeID FROM Has_Clearance WHERE Planet = 1);"
    },
    {
        "question_id": 1931,
        "answer_sql": "SELECT COUNT(DISTINCT Game_ID) FROM game;"
    },
    {
        "question_id": 1932,
        "answer_sql": "SELECT COUNT(*) FROM game;"
    },
    {
        "question_id": 1933,
        "answer_sql": "SELECT g.Title, g.Developers FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID ORDER BY g.Units_sold_Millions DESC;"
    },
    {
        "question_id": 1934,
        "answer_sql": "SELECT g.Title, g.Developers FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID ORDER BY g.Units_sold_Millions DESC;"
    },
    {
        "question_id": 1935,
        "answer_sql": "SELECT AVG(T1.Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID JOIN platform AS T3 ON T1.Platform_ID = T3.Platform_ID WHERE T3.Platform_name = 'Nintendo' AND T2.If_active = false;"
    },
    {
        "question_id": 1936,
        "answer_sql": "SELECT AVG(T1.Units_sold_Millions) AS AverageUnitsSold FROM game AS T1 WHERE T1.Platform_ID NOT IN (SELECT T2.Platform_ID FROM platform AS T2 WHERE T2.Platform_name = 'Nintendo')"
    },
    {
        "question_id": 1937,
        "answer_sql": "SELECT Platform_name, Market_district FROM platform;"
    },
    {
        "question_id": 1938,
        "answer_sql": "SELECT Platform_name, Market_district FROM platform;"
    },
    {
        "question_id": 1939,
        "answer_sql": ""
    },
    {
        "question_id": 1940,
        "answer_sql": ""
    },
    {
        "question_id": 1941,
        "answer_sql": "SELECT max(T2.Rank_of_the_year), min(T2.Rank_of_the_year) FROM game_player AS T1 JOIN player AS T2 ON T1.Player_ID = T2.Player_ID"
    },
    {
        "question_id": 1942,
        "answer_sql": "SELECT MAX(T1.Rank_of_the_year) AS Max_Rank, MIN(T1.Rank_of_the_year) AS Min_Rank FROM player AS T1 JOIN game_player AS T2 ON T1.Player_ID = T2.Player_ID JOIN game AS T3 ON T2.Game_ID = T3.Game_ID"
    },
    {
        "question_id": 1943,
        "answer_sql": "SELECT COUNT(DISTINCT T1.Player_ID) FROM game_player AS T1 JOIN game AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T3.Rank_of_the_year < 3;"
    },
    {
        "question_id": 1944,
        "answer_sql": "SELECT COUNT(DISTINCT player.Player_ID) FROM player WHERE player.Rank_of_the_year <= 3;"
    },
    {
        "question_id": 1945,
        "answer_sql": ""
    },
    {
        "question_id": 1946,
        "answer_sql": "SELECT DISTINCT p.Player_name FROM player p ORDER BY p.Player_name ASC;"
    },
    {
        "question_id": 1947,
        "answer_sql": "SELECT p.Player_name, p.College FROM player p ORDER BY p.Rank_of_the_year DESC;"
    },
    {
        "question_id": 1948,
        "answer_sql": "SELECT p.Player_name, p.College FROM player p ORDER BY p.Rank_of_the_year DESC;"
    },
    {
        "question_id": 1949,
        "answer_sql": "SELECT p.Player_name, p.Rank_of_the_year FROM player p JOIN game_player gp ON p.Player_ID = gp.Player_ID JOIN game g ON gp.Game_ID = g.Game_ID WHERE g.Title = 'Super Mario World';"
    },
    {
        "question_id": 1950,
        "answer_sql": "SELECT p.Player_name, p.Rank_of_the_year FROM player p JOIN game_player gp ON p.Player_ID = gp.Player_ID JOIN game g ON gp.Game_ID = g.Game_ID WHERE g.Title = 'Super Mario World';"
    },
    {
        "question_id": 1951,
        "answer_sql": ""
    },
    {
        "question_id": 1952,
        "answer_sql": "SELECT DISTINCT T2.Developers FROM game_player AS T1 JOIN game AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T3.College = 'Auburn'"
    },
    {
        "question_id": 1953,
        "answer_sql": "SELECT AVG(T2.Units_sold_Millions) FROM game_player AS T1 JOIN game AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T3.Position = 'Guard' GROUP BY T1.Player_ID;"
    },
    {
        "question_id": 1954,
        "answer_sql": "SELECT AVG(T2.Units_sold_Millions) FROM game_player AS T1 JOIN game AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T3.Position = 'Guard';"
    },
    {
        "question_id": 1955,
        "answer_sql": "SELECT g.Title, p.Platform_name FROM game g JOIN platform p ON g.Platform_ID = p.Platform_ID;"
    },
    {
        "question_id": 1956,
        "answer_sql": "SELECT g.Title, p.Platform_name FROM game g JOIN platform p ON g.Platform_ID = p.Platform_ID;"
    },
    {
        "question_id": 1957,
        "answer_sql": "SELECT g.Title FROM game g JOIN platform p ON g.Platform_ID = p.Platform_ID WHERE p.Market_district IN ('Asia', 'USA');"
    },
    {
        "question_id": 1958,
        "answer_sql": "SELECT g.Title FROM game g JOIN platform p ON g.Platform_ID = p.Platform_ID WHERE p.Market_district IN ('Asia', 'USA')"
    },
    {
        "question_id": 1959,
        "answer_sql": "SELECT T1.Franchise, COUNT(T2.Game_ID) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID GROUP BY T1.Franchise;"
    },
    {
        "question_id": 1960,
        "answer_sql": ""
    },
    {
        "question_id": 1961,
        "answer_sql": "SELECT franchise FROM game GROUP BY franchise ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1962,
        "answer_sql": "SELECT franchise FROM game GROUP BY franchise ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1963,
        "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(Game_ID) >= 2;"
    },
    {
        "question_id": 1964,
        "answer_sql": ""
    },
    {
        "question_id": 1965,
        "answer_sql": "SELECT DISTINCT p.Player_name FROM player p WHERE NOT EXISTS ( SELECT 1 FROM game_player gp WHERE gp.Player_ID = p.Player_ID );"
    },
    {
        "question_id": 1966,
        "answer_sql": "SELECT DISTINCT p.Player_name FROM player p WHERE NOT EXISTS ( SELECT 1 FROM game_player gp WHERE gp.Player_ID = p.Player_ID );"
    },
    {
        "question_id": 1967,
        "answer_sql": ""
    },
    {
        "question_id": 1968,
        "answer_sql": "SELECT g.Title FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.College IN ('Oklahoma', 'Auburn')"
    },
    {
        "question_id": 1969,
        "answer_sql": "SELECT DISTINCT T1.Franchise FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID = T2.Platform_ID GROUP BY T1.Franchise HAVING COUNT(T1.Game_ID) > 1;"
    },
    {
        "question_id": 1970,
        "answer_sql": "SELECT DISTINCT Franchise FROM game;"
    },
    {
        "question_id": 1971,
        "answer_sql": "SELECT DISTINCT g.Title FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position = 'Guard';"
    },
    {
        "question_id": 1972,
        "answer_sql": "SELECT DISTINCT g.Title FROM game g WHERE g.Game_ID NOT IN (SELECT gp.Game_ID FROM game_player gp WHERE gp.Player_ID IN (SELECT Player_ID FROM player WHERE Position = 'Guard'))"
    },
    {
        "question_id": 1973,
        "answer_sql": "SELECT p.Name FROM press p ORDER BY p.Year_Profits_billion DESC;"
    },
    {
        "question_id": 1974,
        "answer_sql": "SELECT p.Name FROM press p ORDER BY p.Year_Profits_billion DESC;"
    },
    {
        "question_id": 1975,
        "answer_sql": ""
    },
    {
        "question_id": 1976,
        "answer_sql": ""
    },
    {
        "question_id": 1977,
        "answer_sql": "SELECT AVG(p.Month_Profits_billion), MAX(p.Month_Profits_billion) FROM press p;"
    },
    {
        "question_id": 1978,
        "answer_sql": "SELECT p.Name, AVG(p.Month_Profits_billion), MAX(p.Month_Profits_billion) FROM press p GROUP BY p.Name;"
    },
    {
        "question_id": 1979,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Press_ID = ( SELECT Press_ID FROM book GROUP BY Press_ID ORDER BY SUM(Release_date) DESC LIMIT 1 );"
    },
    {
        "question_id": 1980,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Press_ID = ( SELECT Press_ID FROM book GROUP BY Press_ID ORDER BY SUM(Book_Series * Sale_Amount) DESC LIMIT 1 );"
    },
    {
        "question_id": 1981,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = (SELECT MIN(Month_Profits_billion) FROM press);"
    },
    {
        "question_id": 1982,
        "answer_sql": "SELECT p.Name FROM press p WHERE (p.Month_Profits_billion = (SELECT MIN(Month_Profits_billion) FROM press)) OR (p.Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press));"
    },
    {
        "question_id": 1983,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1984,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1985,
        "answer_sql": ""
    },
    {
        "question_id": 1986,
        "answer_sql": "SELECT Gender, AVG(Age) FROM author GROUP BY Gender;"
    },
    {
        "question_id": 1987,
        "answer_sql": ""
    },
    {
        "question_id": 1988,
        "answer_sql": ""
    },
    {
        "question_id": 1989,
        "answer_sql": "SELECT DISTINCT b.Title FROM book AS b ORDER BY b.Release_date DESC;"
    },
    {
        "question_id": 1990,
        "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"
    },
    {
        "question_id": 1991,
        "answer_sql": "SELECT DISTINCT T1.Book_Series, COUNT(*) AS Book_Count FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID GROUP BY T1.Book_Series;"
    },
    {
        "question_id": 1992,
        "answer_sql": ""
    },
    {
        "question_id": 1993,
        "answer_sql": "SELECT b.Title, b.Release_date FROM book AS b JOIN press AS p ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount IN ( SELECT MAX(sale_Amount) FROM book JOIN press ON book.Press_ID = press.Press_ID ) ORDER BY b.Sale_Amount DESC LIMIT 5;"
    },
    {
        "question_id": 1994,
        "answer_sql": ""
    },
    {
        "question_id": 1995,
        "answer_sql": "SELECT T1.Book_Series FROM book AS T1 JOIN press AS T2 ON T1.Press_ID = T2.Press_ID WHERE T1.Sale_Amount > 1000 AND T1.Sale_Amount < 500 GROUP BY T1.Book_Series HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 1996,
        "answer_sql": "SELECT b.Book_Series FROM book AS b JOIN press AS p ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount > 1000 AND b.Sale_Amount < 500 GROUP BY b.Book_Series HAVING COUNT(b.Book_ID) > 1;"
    },
    {
        "question_id": 1997,
        "answer_sql": ""
    },
    {
        "question_id": 1998,
        "answer_sql": ""
    },
    {
        "question_id": 1999,
        "answer_sql": "SELECT a.Name, a.Age FROM author a WHERE a.Author_ID NOT IN ( SELECT b.Author_ID FROM book b GROUP BY b.Author_ID HAVING COUNT(b.Book_ID) = 0 );"
    },
    {
        "question_id": 2000,
        "answer_sql": "SELECT DISTINCT a.Name FROM author a WHERE a.Author_ID NOT IN (SELECT b.Author_ID FROM book b);"
    },
    {
        "question_id": 2001,
        "answer_sql": ""
    },
    {
        "question_id": 2002,
        "answer_sql": ""
    },
    {
        "question_id": 2003,
        "answer_sql": "SELECT b.Title, a.Name, p.Name FROM book AS b JOIN author AS a ON b.Author_ID = a.Author_ID JOIN press AS p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3;"
    },
    {
        "question_id": 2004,
        "answer_sql": "SELECT b.Title, a.Name, p.Name FROM book b JOIN press p ON b.Press_ID = p.Press_ID JOIN author a ON b.Author_ID = a.Author_ID WHERE b.Sale_Amount LIKE '%3%' ORDER BY b.Sale_Amount DESC LIMIT 3;"
    },
    {
        "question_id": 2005,
        "answer_sql": "SELECT p.Name, SUM(b.Sale_Amount) AS Total_Sale_Amount FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Press_ID"
    },
    {
        "question_id": 2006,
        "answer_sql": "SELECT p.Name, SUM(b.Sale_Amount) AS Total_Sale_Amount FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Press_ID"
    },
    {
        "question_id": 2007,
        "answer_sql": ""
    },
    {
        "question_id": 2008,
        "answer_sql": "SELECT p.Name, COUNT(*) AS Book_Count FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name HAVING SUM(b.Sale_Amount) > 1000;"
    },
    {
        "question_id": 2009,
        "answer_sql": ""
    },
    {
        "question_id": 2010,
        "answer_sql": ""
    },
    {
        "question_id": 2011,
        "answer_sql": ""
    },
    {
        "question_id": 2012,
        "answer_sql": ""
    },
    {
        "question_id": 2013,
        "answer_sql": "SELECT DISTINCT a.Name FROM author a WHERE a.Author_ID NOT IN ( SELECT b.Author_ID FROM book b JOIN press p ON b.Press_ID = p.Press_ID WHERE p.Name = 'Accor' );"
    },
    {
        "question_id": 2014,
        "answer_sql": ""
    },
    {
        "question_id": 2015,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p WHERE p.Press_ID IN ( SELECT b.Press_ID FROM book b GROUP BY b.Press_ID HAVING COUNT(b.Book_ID) > 2 )"
    },
    {
        "question_id": 2016,
        "answer_sql": ""
    },
    {
        "question_id": 2017,
        "answer_sql": "SELECT COUNT(DISTINCT author_name) FROM Authors;"
    },
    {
        "question_id": 2018,
        "answer_sql": ""
    },
    {
        "question_id": 2019,
        "answer_sql": "SELECT DISTINCT a.author_name, a.other_details FROM Authors a"
    },
    {
        "question_id": 2020,
        "answer_sql": ""
    },
    {
        "question_id": 2021,
        "answer_sql": "SELECT COUNT(*) FROM Documents;"
    },
    {
        "question_id": 2022,
        "answer_sql": "SELECT T2.author_name FROM Documents_Processes AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id WHERE T1.document_id = 4;"
    },
    {
        "question_id": 2023,
        "answer_sql": ""
    },
    {
        "question_id": 2024,
        "answer_sql": "SELECT COUNT(*) FROM Documents WHERE document_id IN ( SELECT document_id FROM Documents_Processes WHERE process_id IN ( SELECT process_id FROM Business_Processes WHERE author_name = 'Era Kerluke' ) )"
    },
    {
        "question_id": 2025,
        "answer_sql": "SELECT document_name, document_description FROM Documents;"
    },
    {
        "question_id": 2026,
        "answer_sql": ""
    },
    {
        "question_id": 2027,
        "answer_sql": ""
    },
    {
        "question_id": 2028,
        "answer_sql": "SELECT T2.author_name, COUNT(*) FROM Documents_Processes AS T1 INNER JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.document_id, T1.process_id;"
    },
    {
        "question_id": 2029,
        "answer_sql": ""
    },
    {
        "question_id": 2030,
        "answer_sql": ""
    },
    {
        "question_id": 2031,
        "answer_sql": "SELECT COUNT(*) FROM Business_Processes;"
    },
    {
        "question_id": 2032,
        "answer_sql": ""
    },
    {
        "question_id": 2033,
        "answer_sql": ""
    },
    {
        "question_id": 2034,
        "answer_sql": "SELECT COUNT(*) FROM Process_Outcomes;"
    },
    {
        "question_id": 2035,
        "answer_sql": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes;"
    },
    {
        "question_id": 2036,
        "answer_sql": ""
    },
    {
        "question_id": 2037,
        "answer_sql": "SELECT COUNT(*) FROM Process_Status;"
    },
    {
        "question_id": 2038,
        "answer_sql": "SELECT process_status_code, process_status_description FROM Process_Status;"
    },
    {
        "question_id": 2039,
        "answer_sql": "SELECT DISTINCT process_status_description FROM Process_Status WHERE process_status_code = 'ct';"
    },
    {
        "question_id": 2040,
        "answer_sql": "SELECT COUNT(DISTINCT staff_id) FROM Staff;"
    },
    {
        "question_id": 2041,
        "answer_sql": "SELECT staff_id, staff_details FROM Staff;"
    },
    {
        "question_id": 2042,
        "answer_sql": "SELECT staff_details FROM Staff WHERE staff_id = 100;"
    },
    {
        "question_id": 2043,
        "answer_sql": "SELECT COUNT(*) FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2044,
        "answer_sql": "SELECT staff_role_code, staff_role_description FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2045,
        "answer_sql": ""
    },
    {
        "question_id": 2046,
        "answer_sql": "SELECT COUNT(*) FROM Documents;"
    },
    {
        "question_id": 2047,
        "answer_sql": "SELECT DISTINCT process_id FROM Documents_Processes;"
    },
    {
        "question_id": 2048,
        "answer_sql": ""
    },
    {
        "question_id": 2049,
        "answer_sql": ""
    },
    {
        "question_id": 2050,
        "answer_sql": ""
    },
    {
        "question_id": 2051,
        "answer_sql": ""
    },
    {
        "question_id": 2052,
        "answer_sql": "SELECT DISTINCT T1.process_id, COUNT(T2.document_id) as document_count FROM Documents_Processes AS T1 JOIN Documents AS T2 ON T1.document_id = T2.document_id GROUP BY T1.process_id"
    },
    {
        "question_id": 2053,
        "answer_sql": ""
    },
    {
        "question_id": 2054,
        "answer_sql": ""
    },
    {
        "question_id": 2055,
        "answer_sql": ""
    },
    {
        "question_id": 2056,
        "answer_sql": "SELECT COUNT(DISTINCT staff_role_code) FROM Staff_in_Processes WHERE staff_id = 3;"
    },
    {
        "question_id": 2057,
        "answer_sql": "SELECT COUNT(*) FROM Agencies;"
    },
    {
        "question_id": 2058,
        "answer_sql": "SELECT COUNT(*) FROM Agencies;"
    },
    {
        "question_id": 2059,
        "answer_sql": "SELECT agency_id, agency_details FROM Agencies;"
    },
    {
        "question_id": 2060,
        "answer_sql": "SELECT agency_id, agency_details FROM Agencies;"
    },
    {
        "question_id": 2061,
        "answer_sql": "SELECT COUNT(client_id) FROM Clients;"
    },
    {
        "question_id": 2062,
        "answer_sql": "SELECT COUNT(client_id) FROM Clients;"
    },
    {
        "question_id": 2063,
        "answer_sql": "SELECT DISTINCT T2.client_id, T2.client_details FROM Clients AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id JOIN Meetings AS T3 ON T1.client_id = T3.client_id JOIN Invoices AS T4 ON T3.client_id = T4.client_id JOIN Payments AS T5 ON T4.invoice_id = T5.invoice_id"
    },
    {
        "question_id": 2064,
        "answer_sql": "SELECT DISTINCT T2.client_id, T2.client_details FROM Clients AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id JOIN Meetings AS T3 ON T1.client_id = T3.client_id JOIN Invoices AS T4 ON T3.client_id = T4.client_id JOIN Payments AS T5 ON T4.invoice_id = T5.invoice_id"
    },
    {
        "question_id": 2065,
        "answer_sql": "SELECT a.agency_id, COUNT(c.client_id) AS num_clients FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id GROUP BY a.agency_id;"
    },
    {
        "question_id": 2066,
        "answer_sql": "SELECT a.agency_id, COUNT(c.client_id) AS num_of_clients FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id GROUP BY a.agency_id"
    },
    {
        "question_id": 2067,
        "answer_sql": "SELECT a.agency_id, a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id GROUP BY a.agency_id, a.agency_details ORDER BY COUNT(c.client_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2068,
        "answer_sql": "SELECT a.agency_id, a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id GROUP BY a.agency_id, a.agency_details ORDER BY COUNT(c.client_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2069,
        "answer_sql": "SELECT a.agency_id, a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id WHERE c.client_id IN ( SELECT i.client_id FROM Invoices i GROUP BY i.client_id HAVING COUNT(i.client_id) >= 2 );"
    },
    {
        "question_id": 2070,
        "answer_sql": "SELECT a.agency_id, a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id GROUP BY a.agency_id, a.agency_details HAVING COUNT(c.client_id) >= 2;"
    },
    {
        "question_id": 2071,
        "answer_sql": "SELECT a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id WHERE c.client_id = (SELECT client_id FROM Clients WHERE client_details = 'Mac')"
    },
    {
        "question_id": 2072,
        "answer_sql": ""
    },
    {
        "question_id": 2073,
        "answer_sql": "SELECT c.client_details, a.agency_details FROM Clients c JOIN Agencies a ON c.agency_id = a.agency_id"
    },
    {
        "question_id": 2074,
        "answer_sql": "SELECT C.client_details, A.agency_details FROM Clients C JOIN Agencies A ON C.agency_id = A.agency_id"
    },
    {
        "question_id": 2075,
        "answer_sql": "SELECT DISTINCT T1.sic_code, COUNT(T2.client_id) AS num_clients FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T1.sic_code"
    },
    {
        "question_id": 2076,
        "answer_sql": "SELECT DISTINCT T2.client_id FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id HAVING COUNT(T1.sic_code) > 1;"
    },
    {
        "question_id": 2077,
        "answer_sql": "SELECT DISTINCT T2.client_id, T2.sic_code FROM Clients AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id WHERE T1.sic_code = 'Bad';"
    },
    {
        "question_id": 2078,
        "answer_sql": "SELECT DISTINCT T2.client_details FROM Clients AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id WHERE T1.sic_code = 'Bad';"
    },
    {
        "question_id": 2079,
        "answer_sql": "SELECT DISTINCT T1.agency_id, T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id = T2.agency_id;"
    },
    {
        "question_id": 2080,
        "answer_sql": "SELECT a.agency_id, a.agency_details FROM Agencies a WHERE a.agency_id IN ( SELECT c.agency_id FROM Clients c GROUP BY c.agency_id HAVING COUNT(c.client_id) > 0 );"
    },
    {
        "question_id": 2081,
        "answer_sql": "SELECT DISTINCT T1.agency_id FROM Agencies AS T1 WHERE T1.agency_id NOT IN (SELECT T2.agency_id FROM Clients AS T2);"
    },
    {
        "question_id": 2082,
        "answer_sql": "SELECT DISTINCT a.agency_id FROM Agencies a WHERE a.agency_id NOT IN (SELECT c.agency_id FROM Clients c);"
    },
    {
        "question_id": 2083,
        "answer_sql": "SELECT COUNT(*) FROM Invoices;"
    },
    {
        "question_id": 2084,
        "answer_sql": "SELECT COUNT(*) FROM Invoices;"
    },
    {
        "question_id": 2085,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status, i.invoice_details FROM Invoices i JOIN Clients c ON i.client_id = c.client_id;"
    },
    {
        "question_id": 2086,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status, i.invoice_details FROM Invoices i;"
    },
    {
        "question_id": 2087,
        "answer_sql": "SELECT DISTINCT T1.client_id, COUNT(T2.invoice_id) AS invoice_count FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id"
    },
    {
        "question_id": 2088,
        "answer_sql": "SELECT c.client_id, COUNT(i.invoice_id) AS invoice_count FROM Clients c JOIN Invoices i ON c.client_id = i.client_id GROUP BY c.client_id"
    },
    {
        "question_id": 2089,
        "answer_sql": "SELECT T2.client_id, T2.client_details FROM Clients AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id JOIN Invoices AS T3 ON T1.client_id = T3.client_id GROUP BY T2.client_id, T2.client_details ORDER BY COUNT(T3.invoice_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2090,
        "answer_sql": "SELECT T2.client_id, T2.client_details FROM Clients AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id JOIN Invoices AS T3 ON T1.client_id = T3.client_id GROUP BY T2.client_id, T2.client_details ORDER BY COUNT(T3.invoice_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2091,
        "answer_sql": "SELECT DISTINCT T2.client_id FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id HAVING COUNT(T2.invoice_id) >= 2;"
    },
    {
        "question_id": 2092,
        "answer_sql": "SELECT DISTINCT T2.client_id FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T2.client_id HAVING COUNT(T1.client_id) > 1;"
    },
    {
        "question_id": 2093,
        "answer_sql": "SELECT T1.invoice_status, COUNT(T1.invoice_id) AS num_invoices FROM Invoices AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T1.invoice_status"
    },
    {
        "question_id": 2094,
        "answer_sql": "SELECT COUNT(*) AS total_invoices, SUM(CASE WHEN T2.invoice_status = 'BILLED' THEN 1 ELSE 0 END) AS total_billed_invoices FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id"
    },
    {
        "question_id": 2095,
        "answer_sql": "SELECT T2.invoice_status FROM Clients AS T1 JOIN Invoices AS T2 ON T1.client_id = T2.client_id GROUP BY T2.invoice_status ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 2096,
        "answer_sql": "SELECT T1.invoice_status FROM Invoices AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T1.invoice_status ORDER BY COUNT(T1.invoice_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2097,
        "answer_sql": "SELECT i.invoice_status, i.invoice_details, a.agency_details, c.client_details FROM Invoices i JOIN Clients c ON i.client_id = c.client_id JOIN Agencies a ON c.agency_id = a.agency_id"
    },
    {
        "question_id": 2098,
        "answer_sql": ""
    },
    {
        "question_id": 2099,
        "answer_sql": "SELECT DISTINCT T2.meeting_type FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id"
    },
    {
        "question_id": 2100,
        "answer_sql": "SELECT DISTINCT T1.meeting_type, T1.other_details FROM Meetings AS T1"
    },
    {
        "question_id": 2101,
        "answer_sql": "SELECT T2.meeting_outcome, T2.purpose_of_meeting FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id"
    },
    {
        "question_id": 2102,
        "answer_sql": "SELECT T2.meeting_outcome, T2.meeting_type FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id"
    },
    {
        "question_id": 2103,
        "answer_sql": ""
    },
    {
        "question_id": 2104,
        "answer_sql": ""
    },
    {
        "question_id": 2105,
        "answer_sql": ""
    },
    {
        "question_id": 2106,
        "answer_sql": "SELECT T1.invoice_id, T1.invoice_status FROM Invoices AS T1 WHERE T1.invoice_id NOT IN (SELECT T2.invoice_id FROM Payments AS T2)"
    },
    {
        "question_id": 2107,
        "answer_sql": "SELECT COUNT(*) FROM Payments;"
    },
    {
        "question_id": 2108,
        "answer_sql": "SELECT COUNT(*) FROM Payments;"
    },
    {
        "question_id": 2109,
        "answer_sql": ""
    },
    {
        "question_id": 2110,
        "answer_sql": "SELECT Payments.payment_id, Invoices.invoice_id, Payments.payment_details FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id;"
    },
    {
        "question_id": 2111,
        "answer_sql": "SELECT DISTINCT T2.invoice_id, T2.invoice_status FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id;"
    },
    {
        "question_id": 2112,
        "answer_sql": "SELECT DISTINCT T2.invoice_id, T2.invoice_status FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id;"
    },
    {
        "question_id": 2113,
        "answer_sql": "SELECT i.invoice_id, COUNT(p.payment_id) AS num_payments FROM Invoices i JOIN Payments p ON i.invoice_id = p.invoice_id GROUP BY i.invoice_id;"
    },
    {
        "question_id": 2114,
        "answer_sql": "SELECT T2.invoice_id, COUNT(T1.payment_id) AS payment_count FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id = T2.invoice_id GROUP BY T2.invoice_id"
    },
    {
        "question_id": 2115,
        "answer_sql": "SELECT T1.invoice_id, T1.invoice_status, T1.invoice_details FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id = T2.invoice_id GROUP BY T1.invoice_id, T1.invoice_status, T1.invoice_details ORDER BY COUNT(T2.payment_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2116,
        "answer_sql": ""
    },
    {
        "question_id": 2117,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2118,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2119,
        "answer_sql": "SELECT a.agency_id, COUNT(s.staff_id) AS staff_count FROM Agencies a JOIN Staff s ON a.agency_id = s.agency_id GROUP BY a.agency_id"
    },
    {
        "question_id": 2120,
        "answer_sql": "SELECT a.agency_id, COUNT(s.staff_id) AS staff_count FROM Agencies a JOIN Staff s ON a.agency_id = s.agency_id GROUP BY a.agency_id"
    },
    {
        "question_id": 2121,
        "answer_sql": "SELECT a.agency_id, a.agency_details FROM Agencies a WHERE a.agency_id = ( SELECT ag.agency_id FROM Agencies ag GROUP BY ag.agency_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 2122,
        "answer_sql": ""
    },
    {
        "question_id": 2123,
        "answer_sql": ""
    },
    {
        "question_id": 2124,
        "answer_sql": "SELECT m.meeting_outcome, COUNT(*) AS meeting_count FROM Meetings m GROUP BY m.meeting_outcome;"
    },
    {
        "question_id": 2125,
        "answer_sql": "SELECT T1.client_id, COUNT(T2.meeting_id) AS meeting_count FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id"
    },
    {
        "question_id": 2126,
        "answer_sql": "SELECT T2.client_id, COUNT(*) FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id;"
    },
    {
        "question_id": 2127,
        "answer_sql": "SELECT T2.meeting_type, COUNT(T1.client_id) AS num_meetings FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T2.meeting_type"
    },
    {
        "question_id": 2128,
        "answer_sql": "SELECT DISTINCT T2.meeting_type, COUNT(*) FROM Clients AS T1 JOIN Meetings AS T2 ON T1.client_id = T2.client_id GROUP BY T2.meeting_type;"
    },
    {
        "question_id": 2129,
        "answer_sql": "SELECT T1.meeting_id, T1.meeting_outcome, T1.meeting_type, T2.client_details FROM Meetings AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id"
    },
    {
        "question_id": 2130,
        "answer_sql": "SELECT T1.meeting_id, T1.meeting_outcome, T1.meeting_type, T2.client_details FROM Meetings AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id"
    },
    {
        "question_id": 2131,
        "answer_sql": "SELECT m.meeting_id, COUNT(*) AS staff_count FROM Meetings m JOIN Staff_in_Meetings sm ON m.meeting_id = sm.meeting_id GROUP BY m.meeting_id;"
    },
    {
        "question_id": 2132,
        "answer_sql": "SELECT m.meeting_id, COUNT(*) AS staff_count FROM Meetings m JOIN Staff_in_Meetings sm ON m.meeting_id = sm.meeting_id GROUP BY m.meeting_id;"
    },
    {
        "question_id": 2133,
        "answer_sql": "SELECT s.staff_id, COUNT(m.meeting_id) AS num_of_meetings FROM Staff s JOIN Staff_in_Meetings sm ON s.staff_id = sm.staff_id JOIN Meetings m ON sm.meeting_id = m.meeting_id WHERE sm.meeting_id IN ( SELECT m.meeting_id FROM Meetings m GROUP BY m.meeting_id HAVING COUNT(m.meeting_id) = ( SELECT MIN(num) FROM ( SELECT COUNT(meeting_id) AS num FROM Meetings GROUP BY meeting_id ) ) ) GROUP BY s.staff_id HAVING COUNT(m.meeting_id) > 1;"
    },
    {
        "question_id": 2134,
        "answer_sql": ""
    },
    {
        "question_id": 2135,
        "answer_sql": "SELECT COUNT(*) FROM Staff_in_Meetings"
    },
    {
        "question_id": 2136,
        "answer_sql": ""
    },
    {
        "question_id": 2137,
        "answer_sql": ""
    },
    {
        "question_id": 2138,
        "answer_sql": ""
    },
    {
        "question_id": 2139,
        "answer_sql": "SELECT DISTINCT T2.client_id, T2.client_details FROM Clients AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id JOIN Meetings AS T3 ON T1.client_id = T3.client_id WHERE T3.meeting_id IS NOT NULL"
    },
    {
        "question_id": 2140,
        "answer_sql": "SELECT c.client_id, c.client_details FROM Clients c JOIN Clients ON c.client_id = c.client_id WHERE c.client_id IN (SELECT m.client_id FROM Meetings m) OR c.client_id IN (SELECT i.client_id FROM Invoices i)"
    },
    {
        "question_id": 2141,
        "answer_sql": ""
    },
    {
        "question_id": 2142,
        "answer_sql": "SELECT s.staff_id, s.staff_details FROM Staff s WHERE s.staff_id IN ( SELECT t.staff_id FROM Staff_in_Meetings t GROUP BY t.staff_id HAVING COUNT(t.meeting_id) >= 1 )"
    },
    {
        "question_id": 2143,
        "answer_sql": ""
    },
    {
        "question_id": 2144,
        "answer_sql": ""
    },
    {
        "question_id": 2145,
        "answer_sql": ""
    },
    {
        "question_id": 2146,
        "answer_sql": ""
    }
]