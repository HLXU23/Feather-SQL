[
    {
        "question_id": 0,
        "answer_sql": "SELECT COUNT(*) FROM club;"
    },
    {
        "question_id": 1,
        "answer_sql": "SELECT COUNT(*) FROM club;"
    },
    {
        "question_id": 2,
        "answer_sql": "SELECT Name FROM club ORDER BY Name ASC;"
    },
    {
        "question_id": 3,
        "answer_sql": "SELECT Name FROM club ORDER BY Name ASC;"
    },
    {
        "question_id": 4,
        "answer_sql": "SELECT club.Manager, club.Captain FROM club;"
    },
    {
        "question_id": 5,
        "answer_sql": "SELECT club.Manager, club.Captain FROM club;"
    },
    {
        "question_id": 6,
        "answer_sql": "SELECT Name FROM club WHERE Manufacturer != 'Nike';"
    },
    {
        "question_id": 7,
        "answer_sql": "SELECT Name FROM club WHERE Manufacturer != 'Nike';"
    },
    {
        "question_id": 8,
        "answer_sql": "SELECT Name FROM player ORDER BY Wins_count ASC;"
    },
    {
        "question_id": 9,
        "answer_sql": "SELECT Name, Wins_count FROM player ORDER BY Wins_count ASC;"
    },
    {
        "question_id": 10,
        "answer_sql": "SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player);"
    },
    {
        "question_id": 11,
        "answer_sql": "SELECT Player_ID, Name, Earnings FROM player ORDER BY Earnings DESC LIMIT 1;"
    },
    {
        "question_id": 12,
        "answer_sql": "SELECT DISTINCT Country FROM player WHERE Earnings > 1200000;"
    },
    {
        "question_id": 13,
        "answer_sql": "SELECT DISTINCT Country FROM player WHERE Earnings > 1200000;"
    },
    {
        "question_id": 14,
        "answer_sql": "SELECT Country FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player WHERE Wins_count > 2);"
    },
    {
        "question_id": 15,
        "answer_sql": "SELECT Country FROM player WHERE Wins_count > 2 ORDER BY Wins_count DESC LIMIT 1;"
    },
    {
        "question_id": 16,
        "answer_sql": "SELECT club.Name AS Club_Name, player.Name AS Player_Name FROM club JOIN player ON club.Club_ID = player.Club_ID;"
    },
    {
        "question_id": 17,
        "answer_sql": "SELECT club.Name AS Club_Name, player.Name AS Player_Name FROM club JOIN player ON club.Club_ID = player.Club_ID;"
    },
    {
        "question_id": 18,
        "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2;"
    },
    {
        "question_id": 19,
        "answer_sql": ""
    },
    {
        "question_id": 20,
        "answer_sql": "SELECT p.Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID WHERE c.Manager = 'Sam Allardyce';"
    },
    {
        "question_id": 21,
        "answer_sql": "SELECT p.Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID WHERE c.Manager = 'Sam Allardyce';"
    },
    {
        "question_id": 22,
        "answer_sql": "SELECT c.Name, AVG(p.Earnings) AS Avg_Earnings FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Club_ID, c.Name ORDER BY Avg_Earnings DESC;"
    },
    {
        "question_id": 23,
        "answer_sql": "SELECT c.Name, AVG(p.Earnings) AS AvgEarnings FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Club_ID, c.Name ORDER BY AvgEarnings DESC;"
    },
    {
        "question_id": 24,
        "answer_sql": "SELECT c.Manufacturer, COUNT(DISTINCT p.Club_ID) AS NumClubs FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Manufacturer;"
    },
    {
        "question_id": 25,
        "answer_sql": "SELECT Manufacturer, COUNT(DISTINCT Club_ID) AS Club_Count FROM club GROUP BY Manufacturer;"
    },
    {
        "question_id": 26,
        "answer_sql": "SELECT Manufacturer, COUNT(*) as count FROM club GROUP BY Manufacturer ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 27,
        "answer_sql": "SELECT Manufacturer, COUNT(*) as frequency FROM club GROUP BY Manufacturer ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 28,
        "answer_sql": "SELECT DISTINCT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 29,
        "answer_sql": "SELECT DISTINCT c.Manufacturer FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Manufacturer HAVING COUNT(DISTINCT p.Club_ID) > 1;"
    },
    {
        "question_id": 30,
        "answer_sql": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 31,
        "answer_sql": "SELECT Country FROM player GROUP BY Country HAVING COUNT(Country) > 1;"
    },
    {
        "question_id": 32,
        "answer_sql": "SELECT DISTINCT c.Name FROM club c LEFT JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Player_ID IS NULL;"
    },
    {
        "question_id": 33,
        "answer_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player);"
    },
    {
        "question_id": 34,
        "answer_sql": "SELECT DISTINCT P.Country FROM player P WHERE (P.Earnings > 1400000 OR P.Earnings < 1100000);"
    },
    {
        "question_id": 35,
        "answer_sql": "SELECT Country FROM player JOIN club ON player.Club_ID = club.Club_ID WHERE player.Earnings > 1400000 OR player.Earnings < 1100000 GROUP BY Country HAVING COUNT(*) = 2"
    },
    {
        "question_id": 36,
        "answer_sql": "SELECT COUNT(DISTINCT Country) FROM player;"
    },
    {
        "question_id": 37,
        "answer_sql": "SELECT COUNT(DISTINCT Country) FROM player;"
    },
    {
        "question_id": 38,
        "answer_sql": "SELECT Earnings FROM player WHERE Country IN ('Australia', 'Zimbabwe');"
    },
    {
        "question_id": 39,
        "answer_sql": "SELECT p.Earnings FROM player p WHERE p.Country IN ('Australia', 'Zimbabwe');"
    },
    {
        "question_id": 40,
        "answer_sql": ""
    },
    {
        "question_id": 41,
        "answer_sql": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM Customers c JOIN ( SELECT customer_id, COUNT(*) as order_count, SUM(order_item_id) as item_count FROM Order_Items oi JOIN Orders o ON oi.order_id = o.order_id GROUP BY customer_id HAVING order_count > 2 AND item_count >= 3 ) subquery ON c.customer_id = subquery.customer_id;"
    },
    {
        "question_id": 42,
        "answer_sql": "SELECT o.order_id, o.order_status_code, COUNT(oi.product_id) AS num_products FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_status_code"
    },
    {
        "question_id": 43,
        "answer_sql": "SELECT O.order_id, O.order_status_code, COUNT(OI.product_id) AS num_products FROM Orders O LEFT JOIN Order_Items OI ON O.order_id = OI.order_id GROUP BY O.order_id, O.order_status_code"
    },
    {
        "question_id": 44,
        "answer_sql": "SELECT DISTINCT O.date_order_placed FROM Orders O WHERE O.date_order_placed = (SELECT MIN(date_order_placed) FROM Orders) UNION ALL SELECT DISTINCT O.date_order_placed FROM Orders O WHERE EXISTS (SELECT 1 FROM Order_Items OI WHERE OI.order_id = O.order_id AND OI.order_item_status_code NOT LIKE '%Cancelled%') GROUP BY O.date_order_placed HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 45,
        "answer_sql": "SELECT MIN(`date_order_placed`) AS earliest_order_date FROM Orders;"
    },
    {
        "question_id": 46,
        "answer_sql": "SELECT DISTINCT c.customer_first_name, c.customer_middle_initial, c.customer_last_name FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NULL;"
    },
    {
        "question_id": 47,
        "answer_sql": "SELECT c.customer_first_name, c.customer_last_name, c.customer_middle_initial FROM Customers c WHERE c.customer_id NOT IN (SELECT DISTINCT customer_id FROM Orders);"
    },
    {
        "question_id": 48,
        "answer_sql": "SELECT p.product_id, p.product_name, p.product_price, p.product_color FROM Products p WHERE p.product_id NOT IN ( SELECT oi.product_id FROM Order_Items oi GROUP BY oi.product_id HAVING COUNT(oi.product_id) >= 2 )"
    },
    {
        "question_id": 49,
        "answer_sql": "SELECT P.product_id, P.product_name, P.product_price, P.product_color FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Orders O ON OI.order_id = O.order_id GROUP BY P.product_id HAVING COUNT(DISTINCT O.order_id) < 2;"
    },
    {
        "question_id": 50,
        "answer_sql": "SELECT DISTINCT O.order_id, O.date_order_placed FROM Orders O JOIN Order_Items OI ON O.order_id = OI.order_id GROUP BY O.order_id, O.date_order_placed HAVING COUNT(OI.product_id) >= 2;"
    },
    {
        "question_id": 51,
        "answer_sql": "SELECT o.order_id, o.date_order_placed FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.date_order_placed HAVING COUNT(oi.product_id) >= 2;"
    },
    {
        "question_id": 52,
        "answer_sql": "SELECT P.product_id, P.product_name, P.product_price FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Orders O ON OI.order_id = O.order_id GROUP BY P.product_id, P.product_name, P.product_price ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 53,
        "answer_sql": "SELECT P.product_id, P.product_name, P.product_price FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Orders O ON OI.order_id = O.order_id GROUP BY P.product_id, P.product_name, P.product_price ORDER BY COUNT(*) DESC;"
    },
    {
        "question_id": 54,
        "answer_sql": "SELECT O.order_id, SUM(P.product_price) AS total_price FROM Orders O JOIN Order_Items OI ON O.order_id = OI.order_id JOIN Products P ON P.product_id = OI.product_id GROUP BY O.order_id ORDER BY total_price ASC LIMIT 1;"
    },
    {
        "question_id": 55,
        "answer_sql": ""
    },
    {
        "question_id": 56,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as count FROM Customer_Payment_Methods GROUP BY payment_method_code ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 57,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as count FROM Customer_Payment_Methods GROUP BY payment_method_code ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 58,
        "answer_sql": ""
    },
    {
        "question_id": 59,
        "answer_sql": "SELECT Customers.gender_code, COUNT(Orders.order_id) FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.gender_code;"
    },
    {
        "question_id": 60,
        "answer_sql": "SELECT Customers.gender_code, COUNT(Orders.order_id) FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.gender_code;"
    },
    {
        "question_id": 61,
        "answer_sql": "SELECT Customers.gender_code, COUNT(Orders.order_id) AS order_count FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY Customers.gender_code;"
    },
    {
        "question_id": 62,
        "answer_sql": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code FROM Customers LEFT JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id;"
    },
    {
        "question_id": 63,
        "answer_sql": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code FROM Customers LEFT JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id;"
    },
    {
        "question_id": 64,
        "answer_sql": "SELECT Invoices.invoice_status_code AS Invoice_Status, Invoices.invoice_date AS Invoice_Date, Shipments.shipment_date AS Shipment_Date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;"
    },
    {
        "question_id": 65,
        "answer_sql": "SELECT Invoices.invoice_status_code AS invoice_status, Invoices.invoice_date AS invoice_date, Shipments.shipment_date AS shipment_date FROM Invoices LEFT JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;"
    },
    {
        "question_id": 66,
        "answer_sql": "SELECT Products.product_name, Shipments.shipment_date FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Shipments ON Shipments.order_id = Order_Items.order_id;"
    },
    {
        "question_id": 67,
        "answer_sql": "SELECT P.product_name, SH.shipment_date FROM Products P JOIN Shipments SH ON P.product_id = SH.order_id JOIN Order_Items OI ON SH.order_id = OI.order_id JOIN Orders ORD ON OI.order_id = ORD.order_id WHERE SH.shipment_date IS NOT NULL;"
    },
    {
        "question_id": 68,
        "answer_sql": "SELECT Order_Items.order_item_status_code, Shipments.shipment_tracking_number FROM Order_Items JOIN Shipments ON Order_Items.order_id = Shipments.order_id"
    },
    {
        "question_id": 69,
        "answer_sql": ""
    },
    {
        "question_id": 70,
        "answer_sql": "SELECT Products.product_name, Products.product_color FROM Order_Items JOIN Shipments ON Order_Items.order_id = Shipments.order_id JOIN Products ON Order_Items.product_id = Products.product_id;"
    },
    {
        "question_id": 71,
        "answer_sql": "SELECT Products.product_name, Products.product_color FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Shipments ON Shipments.order_id = Order_Items.order_id;"
    },
    {
        "question_id": 72,
        "answer_sql": ""
    },
    {
        "question_id": 73,
        "answer_sql": ""
    },
    {
        "question_id": 74,
        "answer_sql": ""
    },
    {
        "question_id": 75,
        "answer_sql": ""
    },
    {
        "question_id": 76,
        "answer_sql": ""
    },
    {
        "question_id": 77,
        "answer_sql": ""
    },
    {
        "question_id": 78,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers INNER JOIN Orders ON Customers.customer_id = Orders.customer_id;"
    },
    {
        "question_id": 79,
        "answer_sql": "SELECT COUNT(DISTINCT O.customer_id) FROM Orders O;"
    },
    {
        "question_id": 80,
        "answer_sql": "SELECT COUNT(DISTINCT oi.order_item_status_code) FROM `Order_Items` oi;"
    },
    {
        "question_id": 81,
        "answer_sql": "SELECT COUNT(DISTINCT order_item_status_code) FROM Order_Items;"
    },
    {
        "question_id": 82,
        "answer_sql": "SELECT COUNT(DISTINCT payment_method_code) FROM Customer_Payment_Methods;"
    },
    {
        "question_id": 83,
        "answer_sql": "SELECT COUNT(DISTINCT payment_method_code) FROM Customer_Payment_Methods;"
    },
    {
        "question_id": 84,
        "answer_sql": "SELECT login_name, login_password FROM Customers WHERE phone_number LIKE '+12%';"
    },
    {
        "question_id": 85,
        "answer_sql": "SELECT login_name, login_password FROM Customers WHERE phone_number LIKE '+12%';"
    },
    {
        "question_id": 86,
        "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%';"
    },
    {
        "question_id": 87,
        "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%';"
    },
    {
        "question_id": 88,
        "answer_sql": "SELECT product_price, product_size FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products);"
    },
    {
        "question_id": 89,
        "answer_sql": "SELECT product_price, product_size FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products);"
    },
    {
        "question_id": 90,
        "answer_sql": "SELECT COUNT(DISTINCT p.product_id) FROM Products p LEFT JOIN Order_Items oi ON p.product_id = oi.product_id LEFT JOIN Orders o ON oi.order_id = o.order_id WHERE o.order_id IS NULL;"
    },
    {
        "question_id": 91,
        "answer_sql": "SELECT COUNT(DISTINCT p.product_id) FROM Products p LEFT JOIN Order_Items oi ON p.product_id = oi.product_id LEFT JOIN Orders o ON oi.order_id = o.order_id WHERE o.order_id IS NULL;"
    },
    {
        "question_id": 92,
        "answer_sql": "SELECT COUNT(*) FROM Customers LEFT JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id WHERE Customer_Payment_Methods.customer_id IS NULL;"
    },
    {
        "question_id": 93,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM Customer_Payment_Methods);"
    },
    {
        "question_id": 94,
        "answer_sql": "SELECT DISTINCT order_status_code, date_order_placed FROM Orders;"
    },
    {
        "question_id": 95,
        "answer_sql": "SELECT Orders.order_status_code, Orders.date_order_placed FROM Orders;"
    },
    {
        "question_id": 96,
        "answer_sql": "SELECT Customers.address_line_1, Customers.town_city, Customers.county FROM Customers WHERE Customers.country = 'USA';"
    },
    {
        "question_id": 97,
        "answer_sql": ""
    },
    {
        "question_id": 98,
        "answer_sql": ""
    },
    {
        "question_id": 99,
        "answer_sql": ""
    },
    {
        "question_id": 100,
        "answer_sql": "SELECT COUNT(*) FROM Shipments;"
    },
    {
        "question_id": 101,
        "answer_sql": "SELECT COUNT(*) FROM Shipments;"
    },
    {
        "question_id": 102,
        "answer_sql": "SELECT AVG(`product_price`) FROM `Products`;"
    },
    {
        "question_id": 103,
        "answer_sql": "SELECT AVG(product_price) FROM Products;"
    },
    {
        "question_id": 104,
        "answer_sql": "SELECT AVG(P.product_price) AS AveragePrice FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Orders O ON OI.order_id = O.order_id;"
    },
    {
        "question_id": 105,
        "answer_sql": "SELECT AVG(P.product_price) FROM Products P INNER JOIN Order_Items OI ON P.product_id = OI.product_id INNER JOIN Orders O ON OI.order_id = O.order_id;"
    },
    {
        "question_id": 106,
        "answer_sql": "SELECT Customers.email_address, Customers.town_city, Customers.county FROM Customers GROUP BY Customers.email_address, Customers.town_city, Customers.county HAVING COUNT(*) = (SELECT COUNT(*) FROM Customers GROUP BY email_address, town_city, county ORDER BY COUNT(*) ASC LIMIT 1);"
    },
    {
        "question_id": 107,
        "answer_sql": "SELECT c.email_address, c.town_city, c.county FROM Customers c JOIN ( SELECT customer_id, COUNT(*) as order_count FROM Orders GROUP BY customer_id ) o ON c.customer_id = o.customer_id WHERE o.order_count = ( SELECT MIN(order_count) FROM ( SELECT customer_id, COUNT(*) as order_count FROM Orders GROUP BY customer_id ) subquery )"
    },
    {
        "question_id": 108,
        "answer_sql": ""
    },
    {
        "question_id": 109,
        "answer_sql": "SELECT O.date_order_placed FROM Orders O INNER JOIN Customer_Payment_Methods CPM ON O.customer_id = CPM.customer_id GROUP BY O.order_id HAVING COUNT(CPM.payment_method_code) >= 2;"
    },
    {
        "question_id": 110,
        "answer_sql": ""
    },
    {
        "question_id": 111,
        "answer_sql": "SELECT order_status_code, COUNT(*) as frequency FROM Orders GROUP BY order_status_code ORDER BY frequency ASC LIMIT 1;"
    },
    {
        "question_id": 112,
        "answer_sql": "SELECT P.product_id, P.product_description FROM Products P JOIN ( SELECT OI.product_id FROM Order_Items OI GROUP BY OI.product_id HAVING COUNT(DISTINCT OI.order_id) > 3 ) T ON P.product_id = T.product_id;"
    },
    {
        "question_id": 113,
        "answer_sql": "SELECT product_id, product_description FROM Products WHERE product_id IN ( SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(*) > 3 );"
    },
    {
        "question_id": 114,
        "answer_sql": "SELECT i.invoice_date, i.invoice_number FROM Invoices i JOIN Shipments s ON i.invoice_number = s.invoice_number GROUP BY i.invoice_date, i.invoice_number HAVING COUNT(s.shipment_id) >= 2;"
    },
    {
        "question_id": 115,
        "answer_sql": "SELECT DISTINCT i.invoice_number, i.invoice_date FROM Invoices i JOIN Shipments s ON i.invoice_number = s.invoice_number GROUP BY i.invoice_number, i.invoice_date HAVING COUNT(s.shipment_id) >= 2;"
    },
    {
        "question_id": 116,
        "answer_sql": "SELECT Shipments.shipment_tracking_number, Shipments.shipment_date FROM Shipments ORDER BY Shipments.shipment_date;"
    },
    {
        "question_id": 117,
        "answer_sql": "SELECT shipments.shipment_tracking_number, shipments.shipment_date FROM Shipments AS shipments ORDER BY shipments.shipment_date;"
    },
    {
        "question_id": 118,
        "answer_sql": "SELECT P.product_color, P.product_description, P.product_size FROM Products P WHERE P.product_price < (SELECT MAX(product_price) FROM Products);"
    },
    {
        "question_id": 119,
        "answer_sql": "SELECT product_color, product_description, product_size FROM Products WHERE product_price < (SELECT MAX(product_price) FROM Products);"
    },
    {
        "question_id": 120,
        "answer_sql": "SELECT DISTINCT d.Name FROM director d WHERE d.Age > (SELECT AVG(Age) FROM director);"
    },
    {
        "question_id": 121,
        "answer_sql": "SELECT Name FROM director ORDER BY Age ASC LIMIT 1;"
    },
    {
        "question_id": 122,
        "answer_sql": "SELECT COUNT(*) FROM channel WHERE Internet LIKE '%bbc%';"
    },
    {
        "question_id": 123,
        "answer_sql": "SELECT COUNT(DISTINCT c.Digital_terrestrial_channel) FROM channel c"
    },
    {
        "question_id": 124,
        "answer_sql": "SELECT Title FROM program ORDER BY Start_Year DESC;"
    },
    {
        "question_id": 125,
        "answer_sql": "SELECT d.Director_ID, d.Name, COUNT(*) as num_programs FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID GROUP BY d.Director_ID, d.Name ORDER BY num_programs DESC LIMIT 1;"
    },
    {
        "question_id": 126,
        "answer_sql": "SELECT d.Name, d.Age FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID JOIN program p ON da.Channel_ID = p.Channel_ID GROUP BY d.Director_ID ORDER BY COUNT(p.Program_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 127,
        "answer_sql": "SELECT Title FROM program ORDER BY Start_Year DESC LIMIT 1;"
    },
    {
        "question_id": 128,
        "answer_sql": "SELECT c.Name, c.Analogue_terrestrial_channel, c.Digital_terrestrial_channel, c.Internet FROM channel c JOIN ( SELECT Channel_ID FROM program GROUP BY Channel_ID HAVING COUNT(*) > 1 ) p ON c.Channel_ID = p.Channel_ID;"
    },
    {
        "question_id": 129,
        "answer_sql": "SELECT channel.Name, COUNT(program.Program_ID) AS Number_of_Programs FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY channel.Name;"
    },
    {
        "question_id": 130,
        "answer_sql": "SELECT COUNT(DISTINCT c.Channel_ID) FROM channel c LEFT JOIN program p ON c.Channel_ID = p.Channel_ID WHERE p.Program_ID IS NULL;"
    },
    {
        "question_id": 131,
        "answer_sql": "SELECT d.Name FROM director d JOIN program p ON d.Director_ID = p.Director_ID WHERE p.Title = 'Dracula';"
    },
    {
        "question_id": 132,
        "answer_sql": "SELECT channel.Name, channel.Internet FROM channel JOIN director_admin ON channel.Channel_ID = director_admin.Channel_ID GROUP BY channel.Channel_ID HAVING COUNT(director_admin.Director_ID) = ( SELECT COUNT(Director_ID) FROM director_admin GROUP BY Channel_ID ORDER BY COUNT(Director_ID) DESC LIMIT 1 );"
    },
    {
        "question_id": 133,
        "answer_sql": "SELECT Name FROM director WHERE Age BETWEEN 30 AND 60;"
    },
    {
        "question_id": 134,
        "answer_sql": ""
    },
    {
        "question_id": 135,
        "answer_sql": "SELECT channel.Channel_ID, channel.Name FROM channel LEFT JOIN director_admin ON channel.Channel_ID = director_admin.Channel_ID LEFT JOIN director ON director_admin.Director_ID = director.Director_ID WHERE director.Name != 'Hank Baskett';"
    },
    {
        "question_id": 136,
        "answer_sql": "SELECT COUNT(*) FROM radio;"
    },
    {
        "question_id": 137,
        "answer_sql": "SELECT Transmitter FROM radio ORDER BY `ERP_kW` ASC;"
    },
    {
        "question_id": 138,
        "answer_sql": "SELECT tv_show.tv_show_name, tv_show.Original_Airdate FROM tv_show;"
    },
    {
        "question_id": 139,
        "answer_sql": "SELECT DISTINCT c.Station_name FROM city_channel c JOIN city_channel_radio cc ON c.ID = cc.City_channel_ID WHERE c.Affiliation != 'ABC';"
    },
    {
        "question_id": 140,
        "answer_sql": ""
    },
    {
        "question_id": 141,
        "answer_sql": "SELECT Transmitter FROM radio ORDER BY `ERP_kW` DESC LIMIT 1;"
    },
    {
        "question_id": 142,
        "answer_sql": "SELECT AVG(radio.ERP_kW) AS Average_ERP FROM radio;"
    },
    {
        "question_id": 143,
        "answer_sql": "SELECT city_channel.Affiliation, COUNT(*) as num_channels FROM city_channel GROUP BY city_channel.Affiliation;"
    },
    {
        "question_id": 144,
        "answer_sql": "SELECT Affiliation, COUNT(*) as count FROM city_channel GROUP BY Affiliation ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 145,
        "answer_sql": "SELECT Affiliation, COUNT(*) as count FROM city_channel GROUP BY Affiliation HAVING count > 3;"
    },
    {
        "question_id": 146,
        "answer_sql": "SELECT City, Station_name FROM city_channel ORDER BY Station_name ASC;"
    },
    {
        "question_id": 147,
        "answer_sql": "SELECT city_channel.City, radio.Transmitter FROM city_channel JOIN city_channel_radio ON city_channel.ID = city_channel_radio.City_channel_ID JOIN radio ON city_channel_radio.Radio_ID = radio.Radio_ID;"
    },
    {
        "question_id": 148,
        "answer_sql": "SELECT r.Transmitter, c.Station_name FROM radio r JOIN city_channel_radio c_r ON r.Radio_ID = c_r.Radio_ID JOIN city_channel c ON c_r.City_channel_ID = c.ID ORDER BY CAST(r.ERP_kW AS REAL) DESC;"
    },
    {
        "question_id": 149,
        "answer_sql": "SELECT radio.Transmitter, COUNT(city_channel_radio.City_channel_ID) AS num_city_channels FROM radio JOIN city_channel_radio ON radio.Radio_ID = city_channel_radio.Radio_ID GROUP BY radio.Transmitter;"
    },
    {
        "question_id": 150,
        "answer_sql": "SELECT DISTINCT r.Transmitter FROM radio r LEFT JOIN city_channel_radio ccr ON r.Radio_ID = ccr.Radio_ID WHERE ccr.City_channel_ID IS NULL;"
    },
    {
        "question_id": 151,
        "answer_sql": "SELECT v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Top_Speed = (SELECT MAX(top_speed) FROM vehicle WHERE Power > 6000) AND v.Power > 6000;"
    },
    {
        "question_id": 152,
        "answer_sql": "SELECT v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE v.Power > 6000 ORDER BY v.Top_Speed DESC LIMIT 1;"
    },
    {
        "question_id": 153,
        "answer_sql": "SELECT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE d.Citizenship = 'United States';"
    },
    {
        "question_id": 154,
        "answer_sql": "SELECT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID WHERE d.Citizenship = 'United States';"
    },
    {
        "question_id": 155,
        "answer_sql": "SELECT MAX(ve.Vehicle_ID), d.Driver_ID FROM vehicle_driver ve JOIN driver d ON ve.Driver_ID = d.Driver_ID GROUP BY d.Driver_ID HAVING COUNT(ve.Vehicle_ID) = (SELECT COUNT(Vehicle_ID) FROM vehicle_driver GROUP BY Driver_ID ORDER BY COUNT(Vehicle_ID) DESC LIMIT 1);"
    },
    {
        "question_id": 156,
        "answer_sql": "SELECT Driver_ID, COUNT(*) as Total_Vehicles FROM vehicle_driver GROUP BY Driver_ID ORDER BY Total_Vehicles DESC LIMIT 1;"
    },
    {
        "question_id": 157,
        "answer_sql": "SELECT MAX(Power), AVG(Power) FROM vehicle WHERE Builder = 'Zhuzhou';"
    },
    {
        "question_id": 158,
        "answer_sql": "SELECT MAX(Power), AVG(Power) FROM vehicle WHERE Builder = 'Zhuzhou';"
    },
    {
        "question_id": 159,
        "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 160,
        "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v LEFT JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(vd.Driver_ID) ASC LIMIT 1;"
    },
    {
        "question_id": 161,
        "answer_sql": "SELECT v.Top_Speed, v.Power FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Build_Year = '1996';"
    },
    {
        "question_id": 162,
        "answer_sql": "SELECT v.Top_Speed, v.Power FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Build_Year = '1996';"
    },
    {
        "question_id": 163,
        "answer_sql": "SELECT vehicle.Build_Year, vehicle.Model, vehicle.Builder FROM vehicle;"
    },
    {
        "question_id": 164,
        "answer_sql": "SELECT vehicle.Build_Year, vehicle.Model, vehicle.Builder FROM vehicle;"
    },
    {
        "question_id": 165,
        "answer_sql": "SELECT COUNT(*) FROM vehicle_driver vd JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Build_Year = '2012';"
    },
    {
        "question_id": 166,
        "answer_sql": "SELECT COUNT(DISTINCT d.Driver_ID) FROM vehicle_driver vd JOIN driver d ON vd.Driver_ID = d.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Build_Year = '2012';"
    },
    {
        "question_id": 167,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Citizenship = 'NASCAR';"
    },
    {
        "question_id": 168,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Citizenship = 'NASCAR';"
    },
    {
        "question_id": 169,
        "answer_sql": "SELECT AVG(Top_Speed) FROM vehicle;"
    },
    {
        "question_id": 170,
        "answer_sql": "SELECT AVG(v.Top_Speed) FROM vehicle v;"
    },
    {
        "question_id": 171,
        "answer_sql": "SELECT DISTINCT d.Name FROM vehicle_driver vd JOIN driver d ON vd.Driver_ID = d.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Power > 5000;"
    },
    {
        "question_id": 172,
        "answer_sql": "SELECT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Power > 5000;"
    },
    {
        "question_id": 173,
        "answer_sql": "SELECT Model FROM vehicle WHERE Total_Production > 100 OR Top_Speed > 150;"
    },
    {
        "question_id": 174,
        "answer_sql": "SELECT DISTINCT v.Model FROM vehicle v WHERE (v.Total_Production > 100 OR v.Top_Speed > 150);"
    },
    {
        "question_id": 175,
        "answer_sql": "SELECT vehicle.Model, vehicle.Build_Year FROM vehicle JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE vehicle.Model LIKE '%DJ%';"
    },
    {
        "question_id": 176,
        "answer_sql": "SELECT vehicle.Model, vehicle.Build_Year FROM vehicle JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE vehicle.Model LIKE '%DJ%';"
    },
    {
        "question_id": 177,
        "answer_sql": "SELECT DISTINCT v.Model FROM vehicle v LEFT JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID IS NULL;"
    },
    {
        "question_id": 178,
        "answer_sql": "SELECT DISTINCT v.Model FROM vehicle v LEFT JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID IS NULL;"
    },
    {
        "question_id": 179,
        "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v WHERE ( SELECT COUNT(*) FROM vehicle_driver dv WHERE dv.Vehicle_ID = v.Vehicle_ID ) >= 2 UNION ALL SELECT v.Vehicle_ID, v.Model FROM vehicle v WHERE v.Builder = 'Ziyang'"
    },
    {
        "question_id": 180,
        "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE ( SELECT COUNT(DISTINCT d.Driver_ID) FROM driver d WHERE EXISTS ( SELECT 1 FROM vehicle_driver vd2 WHERE vd2.Driver_ID = d.Driver_ID AND vd2.Vehicle_ID = v.Vehicle_ID ) ) = 2 OR v.Builder = 'Ziyang'"
    },
    {
        "question_id": 181,
        "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE ( SELECT COUNT(DISTINCT Driver_ID) FROM vehicle_driver WHERE Vehicle_ID = v.Vehicle_ID ) > 2 UNION SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID = ( SELECT Driver_ID FROM driver WHERE Name = 'Jeff Gordon' )"
    },
    {
        "question_id": 182,
        "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID, v.Model HAVING COUNT(vd.Driver_ID) > 2 UNION SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID = (SELECT Driver_ID FROM driver WHERE Name = 'Jeff Gordon')"
    },
    {
        "question_id": 183,
        "answer_sql": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle);"
    },
    {
        "question_id": 184,
        "answer_sql": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle);"
    },
    {
        "question_id": 185,
        "answer_sql": "SELECT Name FROM driver ORDER BY Name ASC;"
    },
    {
        "question_id": 186,
        "answer_sql": "SELECT Name FROM driver ORDER BY Name ASC;"
    },
    {
        "question_id": 187,
        "answer_sql": "SELECT d.Racing_Series, COUNT(d.Driver_ID) AS Number_of_Drivers FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID GROUP BY d.Racing_Series;"
    },
    {
        "question_id": 188,
        "answer_sql": "SELECT DISTINCT d.Racing_Series, COUNT(*) AS Num_Drivers FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID GROUP BY d.Racing_Series;"
    },
    {
        "question_id": 189,
        "answer_sql": "SELECT d.Name, d.Citizenship FROM vehicle_driver vd JOIN driver d ON vd.Driver_ID = d.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Model = 'DJ1';"
    },
    {
        "question_id": 190,
        "answer_sql": "SELECT d.Name, d.Citizenship FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Model = 'DJ1';"
    },
    {
        "question_id": 191,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver);"
    },
    {
        "question_id": 192,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver);"
    },
    {
        "question_id": 193,
        "answer_sql": "SELECT COUNT(*) FROM Exams;"
    },
    {
        "question_id": 194,
        "answer_sql": "SELECT COUNT(*) FROM Exams;"
    },
    {
        "question_id": 195,
        "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"
    },
    {
        "question_id": 196,
        "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"
    },
    {
        "question_id": 197,
        "answer_sql": "SELECT Exams.Exam_Name, Exams.Exam_Date FROM Exams WHERE Exams.Subject_Code != 'Database';"
    },
    {
        "question_id": 198,
        "answer_sql": "SELECT Exams.Exam_Date, Exams.Exam_Name FROM Exams WHERE Exams.Subject_Code != 'Database';"
    },
    {
        "question_id": 199,
        "answer_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC;"
    },
    {
        "question_id": 200,
        "answer_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC;"
    },
    {
        "question_id": 201,
        "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) as Count FROM Questions GROUP BY Type_of_Question_Code;"
    },
    {
        "question_id": 202,
        "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) as Count FROM Questions GROUP BY Type_of_Question_Code;"
    },
    {
        "question_id": 203,
        "answer_sql": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal';"
    },
    {
        "question_id": 204,
        "answer_sql": ""
    },
    {
        "question_id": 205,
        "answer_sql": "SELECT COUNT(DISTINCT Comments) FROM Student_Answers;"
    },
    {
        "question_id": 206,
        "answer_sql": "SELECT COUNT(DISTINCT Comments) FROM Student_Answers;"
    },
    {
        "question_id": 207,
        "answer_sql": "SELECT Student_Answer_Text, COUNT(*) as count FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY count DESC;"
    },
    {
        "question_id": 208,
        "answer_sql": "SELECT Student_Answer_Text, COUNT(*) as Frequency FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY Frequency DESC;"
    },
    {
        "question_id": 209,
        "answer_sql": "SELECT Students.First_Name, Student_Answers.Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID;"
    },
    {
        "question_id": 210,
        "answer_sql": "SELECT Students.First_Name, Student_Answers.Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID;"
    },
    {
        "question_id": 211,
        "answer_sql": "SELECT Students.Email_Adress, Student_Answers.Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID ORDER BY Student_Answers.Date_of_Answer DESC;"
    },
    {
        "question_id": 212,
        "answer_sql": "SELECT s.Email_Adress, sa.Date_of_Answer FROM Students s JOIN Student_Answers sa ON s.Student_ID = sa.Student_ID ORDER BY sa.Date_of_Answer DESC;"
    },
    {
        "question_id": 213,
        "answer_sql": "SELECT Assessment, COUNT(*) as Frequency FROM Student_Assessments GROUP BY Assessment ORDER BY Frequency ASC LIMIT 1;"
    },
    {
        "question_id": 214,
        "answer_sql": "SELECT Assessment, COUNT(*) as Frequency FROM Student_Assessments GROUP BY Assessment ORDER BY Frequency ASC LIMIT 1;"
    },
    {
        "question_id": 215,
        "answer_sql": "SELECT s.First_Name FROM Students s JOIN Student_Answers sa ON s.Student_ID = sa.Student_ID GROUP BY s.Student_ID HAVING COUNT(sa.Student_Answer_ID) >= 2;"
    },
    {
        "question_id": 216,
        "answer_sql": "SELECT DISTINCT S.First_Name FROM Students S JOIN Student_Answers SA ON S.Student_ID = SA.Student_ID GROUP BY S.First_Name HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 217,
        "answer_sql": "SELECT Valid_Answer_Text, COUNT(*) as Frequency FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 218,
        "answer_sql": "SELECT Valid_Answer_Text, COUNT(*) as Frequency FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 219,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU != 'M';"
    },
    {
        "question_id": 220,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU != 'M';"
    },
    {
        "question_id": 221,
        "answer_sql": "SELECT Gender_MFU, COUNT(*) as Number_of_Students FROM Students GROUP BY Gender_MFU;"
    },
    {
        "question_id": 222,
        "answer_sql": "SELECT Gender_MFU, COUNT(*) as Number_of_Students FROM Students GROUP BY Gender_MFU;"
    },
    {
        "question_id": 223,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU IN ('F', 'M');"
    },
    {
        "question_id": 224,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU IN ('F', 'M');"
    },
    {
        "question_id": 225,
        "answer_sql": "SELECT s.First_Name FROM Students s LEFT JOIN Student_Answers sa ON s.Student_ID = sa.Student_ID WHERE sa.Student_Answer_ID IS NULL;"
    },
    {
        "question_id": 226,
        "answer_sql": "SELECT Students.First_Name FROM Students LEFT JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID WHERE Student_Answers.Student_Answer_ID IS NULL;"
    },
    {
        "question_id": 227,
        "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments IN ('Normal', 'Absent');"
    },
    {
        "question_id": 228,
        "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments IN ('Normal', 'Absent');"
    },
    {
        "question_id": 229,
        "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) as Question_Count FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(*) >= 3;"
    },
    {
        "question_id": 230,
        "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(Question_ID) >= 3;"
    },
    {
        "question_id": 231,
        "answer_sql": "SELECT * FROM Students;"
    },
    {
        "question_id": 232,
        "answer_sql": "SELECT S.Student_ID, S.First_Name, S.Middle_Name, S.Last_Name, S.Gender_MFU, S.Student_Address, S.Email_Adress, S.Cell_Mobile_Phone, S.Home_Phone FROM Students S;"
    },
    {
        "question_id": 233,
        "answer_sql": "SELECT COUNT(*) FROM Addresses;"
    },
    {
        "question_id": 234,
        "answer_sql": "SELECT COUNT(*) FROM Addresses;"
    },
    {
        "question_id": 235,
        "answer_sql": "SELECT `address_id`, `address_details` FROM `Addresses`;"
    },
    {
        "question_id": 236,
        "answer_sql": "SELECT `address_id`, `address_details` FROM `Addresses`;"
    },
    {
        "question_id": 237,
        "answer_sql": "SELECT COUNT(*) FROM Products;"
    },
    {
        "question_id": 238,
        "answer_sql": "SELECT COUNT(*) FROM Products;"
    },
    {
        "question_id": 239,
        "answer_sql": "SELECT product_id, product_type_code, product_name FROM Products;"
    },
    {
        "question_id": 240,
        "answer_sql": "SELECT product_id, product_type_code, product_name FROM Products;"
    },
    {
        "question_id": 241,
        "answer_sql": "SELECT P.product_price FROM Products P WHERE P.product_name = 'Monitor';"
    },
    {
        "question_id": 242,
        "answer_sql": "SELECT P.product_price FROM Products P WHERE P.product_name = 'Monitor';"
    },
    {
        "question_id": 243,
        "answer_sql": "SELECT MIN(product_price) AS MinPrice, AVG(product_price) AS AvgPrice, MAX(product_price) AS MaxPrice FROM Products;"
    },
    {
        "question_id": 244,
        "answer_sql": "SELECT MIN(product_price) AS min_price, AVG(product_price) AS avg_price, MAX(product_price) AS max_price FROM Products;"
    },
    {
        "question_id": 245,
        "answer_sql": "SELECT AVG(P.product_price) FROM Products P WHERE P.product_type_code = 'Clothes';"
    },
    {
        "question_id": 246,
        "answer_sql": "SELECT AVG(P.product_price) FROM Products P WHERE P.product_type_code = 'Clothes';"
    },
    {
        "question_id": 247,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'hardware';"
    },
    {
        "question_id": 248,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';"
    },
    {
        "question_id": 249,
        "answer_sql": "SELECT product_name FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products)"
    },
    {
        "question_id": 250,
        "answer_sql": "SELECT product_name FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products)"
    },
    {
        "question_id": 251,
        "answer_sql": "SELECT P.product_name FROM Products P JOIN ( SELECT product_type_code, AVG(product_price) AS avg_price FROM Products WHERE product_type_code LIKE '%hardware%' GROUP BY product_type_code ) AS H ON P.product_type_code = H.product_type_code WHERE P.product_price > H.avg_price AND P.product_type_code LIKE '%hardware%';"
    },
    {
        "question_id": 252,
        "answer_sql": "SELECT P.product_name FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Customer_Orders CO ON OI.order_id = CO.order_id WHERE P.product_type_code = 'Hardware' AND P.product_price > (SELECT AVG(product_price) FROM Products WHERE product_type_code = 'Hardware')"
    },
    {
        "question_id": 253,
        "answer_sql": "SELECT P.product_name FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Customer_Orders CO ON OI.order_id = CO.order_id JOIN Customers C ON CO.customer_id = C.customer_id WHERE P.product_type_code = 'Clothes' ORDER BY P.product_price DESC LIMIT 1;"
    },
    {
        "question_id": 254,
        "answer_sql": "SELECT P.product_name FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Customer_Orders CO ON OI.order_id = CO.order_id JOIN Customers C ON CO.customer_id = C.customer_id WHERE P.product_type_code = 'Clothes' ORDER BY P.product_price DESC LIMIT 1;"
    },
    {
        "question_id": 255,
        "answer_sql": "SELECT p.product_id, p.product_name FROM Products p JOIN (SELECT product_id, MIN(product_price) AS min_price FROM Products WHERE product_type_code = 'Hardware' GROUP BY product_id) AS subquery ON p.product_id = subquery.product_id WHERE p.product_price = subquery.min_price;"
    },
    {
        "question_id": 256,
        "answer_sql": "SELECT p.product_id, p.product_name FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id JOIN Customer_Orders co ON oi.order_id = co.order_id JOIN Customers c ON co.customer_id = c.customer_id WHERE p.product_type_code = 'Hardware' ORDER BY p.product_price ASC LIMIT 1;"
    },
    {
        "question_id": 257,
        "answer_sql": "SELECT product_name FROM Products ORDER BY product_price DESC;"
    },
    {
        "question_id": 258,
        "answer_sql": "SELECT product_name, product_price FROM Products ORDER BY product_price DESC;"
    },
    {
        "question_id": 259,
        "answer_sql": "SELECT P.product_name, P.product_price FROM Products P JOIN (SELECT product_type_code FROM Products WHERE product_type_code LIKE '%hardware%') AS H ON P.product_type_code = H.product_type_code ORDER BY P.product_price ASC;"
    },
    {
        "question_id": 260,
        "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC;"
    },
    {
        "question_id": 261,
        "answer_sql": "SELECT product_type_code, COUNT(*) as product_count FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 262,
        "answer_sql": "SELECT product_type_code, COUNT(product_id) as product_count FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 263,
        "answer_sql": "SELECT product_type_code, AVG(product_price) AS average_price FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 264,
        "answer_sql": "SELECT product_type_code, AVG(product_price) AS average_price FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 265,
        "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 266,
        "answer_sql": "SELECT DISTINCT P.product_type_code FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Customer_Orders CO ON OI.order_id = CO.order_id GROUP BY P.product_type_code HAVING COUNT(DISTINCT P.product_id) >= 2;"
    },
    {
        "question_id": 267,
        "answer_sql": "SELECT product_type_code, COUNT(*) as product_count FROM Products GROUP BY product_type_code ORDER BY product_count DESC LIMIT 1;"
    },
    {
        "question_id": 268,
        "answer_sql": "SELECT product_type_code, COUNT(*) as frequency FROM Products GROUP BY product_type_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 269,
        "answer_sql": "SELECT COUNT(*) FROM Customers;"
    },
    {
        "question_id": 270,
        "answer_sql": "SELECT COUNT(*) FROM Customers;"
    },
    {
        "question_id": 271,
        "answer_sql": "SELECT Customers.customer_id, Customers.customer_name FROM Customers;"
    },
    {
        "question_id": 272,
        "answer_sql": "SELECT customer_id, customer_name FROM Customers;"
    },
    {
        "question_id": 273,
        "answer_sql": "SELECT Customers.customer_address, Customers.customer_phone, Customers.customer_email FROM Customers WHERE Customers.customer_name = 'Jeromy';"
    },
    {
        "question_id": 274,
        "answer_sql": "SELECT Customers.customer_address AS address, Customers.customer_phone AS phone, Customers.customer_email AS email FROM Customers WHERE Customers.customer_name = 'Jeromy';"
    },
    {
        "question_id": 275,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as customer_count FROM Customers GROUP BY payment_method_code;"
    },
    {
        "question_id": 276,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as customer_count FROM Customers GROUP BY payment_method_code;"
    },
    {
        "question_id": 277,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as count FROM Customers GROUP BY payment_method_code ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 278,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as frequency FROM Customers GROUP BY payment_method_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 279,
        "answer_sql": "SELECT c.customer_name, c.payment_method_code FROM Customers c WHERE c.payment_method_code = ( SELECT payment_method_code FROM ( SELECT payment_method_code, COUNT(*) as cnt FROM Customers GROUP BY payment_method_code ORDER BY cnt ASC LIMIT 1 ) AS t );"
    },
    {
        "question_id": 280,
        "answer_sql": "SELECT DISTINCT c.customer_name FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id GROUP BY c.customer_name ORDER BY COUNT(DISTINCT c.payment_method_code) ASC LIMIT 1;"
    },
    {
        "question_id": 281,
        "answer_sql": "SELECT Customers.payment_method_code, Customers.customer_number FROM Customers WHERE Customers.customer_name = 'Jeromy';"
    },
    {
        "question_id": 282,
        "answer_sql": "SELECT c.payment_method_code, c.customer_number FROM Customers c WHERE c.customer_name = 'Jeromy';"
    },
    {
        "question_id": 283,
        "answer_sql": "SELECT DISTINCT payment_method_code FROM Customers;"
    },
    {
        "question_id": 284,
        "answer_sql": "SELECT DISTINCT payment_method_code FROM Customers;"
    },
    {
        "question_id": 285,
        "answer_sql": "SELECT product_id, product_type_code FROM Products ORDER BY product_name;"
    },
    {
        "question_id": 286,
        "answer_sql": "SELECT product_id, product_type_code FROM Products ORDER BY product_name ASC;"
    },
    {
        "question_id": 287,
        "answer_sql": "SELECT product_type_code, COUNT(*) as product_count FROM Products GROUP BY product_type_code ORDER BY product_count ASC LIMIT 1;"
    },
    {
        "question_id": 288,
        "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 289,
        "answer_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "question_id": 290,
        "answer_sql": "SELECT COUNT(*) FROM Customer_Orders;"
    },
    {
        "question_id": 291,
        "answer_sql": "SELECT Customer_Orders.order_id, Customer_Orders.order_date, Customer_Orders.order_status_code FROM Customer_Orders JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id WHERE Customers.customer_name = 'Jeromy';"
    },
    {
        "question_id": 292,
        "answer_sql": "SELECT o.order_id, o.order_date, o.order_status_code FROM Customer_Orders AS o JOIN Customers AS c ON o.customer_id = c.customer_id WHERE c.customer_name = 'Jeromy';"
    },
    {
        "question_id": 293,
        "answer_sql": ""
    },
    {
        "question_id": 294,
        "answer_sql": "SELECT Customers.customer_name, Customers.customer_id, COUNT(Customer_Orders.order_id) as order_count FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id;"
    },
    {
        "question_id": 295,
        "answer_sql": "SELECT c.customer_id, c.customer_name, c.customer_phone, c.customer_email FROM Customers c JOIN ( SELECT customer_id, COUNT(*) as order_count FROM Customer_Orders GROUP BY customer_id ORDER BY order_count DESC LIMIT 1 ) subquery ON c.customer_id = subquery.customer_id;"
    },
    {
        "question_id": 296,
        "answer_sql": "SELECT c.customer_id, c.customer_name, c.customer_phone, c.customer_email FROM Customers c JOIN ( SELECT customer_id, COUNT(*) as order_count FROM Customer_Orders GROUP BY customer_id ORDER BY order_count DESC LIMIT 1 ) co ON c.customer_id = co.customer_id;"
    },
    {
        "question_id": 297,
        "answer_sql": "SELECT order_status_code, COUNT(*) as order_count FROM Customer_Orders GROUP BY order_status_code;"
    },
    {
        "question_id": 298,
        "answer_sql": "SELECT order_status_code, COUNT(*) as order_count FROM Customer_Orders GROUP BY order_status_code;"
    },
    {
        "question_id": 299,
        "answer_sql": "SELECT order_status_code, COUNT(*) as frequency FROM Customer_Orders GROUP BY order_status_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 300,
        "answer_sql": "SELECT order_status_code, COUNT(*) as frequency FROM Customer_Orders GROUP BY order_status_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 301,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM Customer_Orders);"
    },
    {
        "question_id": 302,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM Customer_Orders);"
    },
    {
        "question_id": 303,
        "answer_sql": "SELECT DISTINCT P.product_name FROM Products P LEFT JOIN Order_Items OI ON P.product_id = OI.product_id LEFT JOIN Customer_Orders CO ON OI.order_id = CO.order_id WHERE CO.order_id IS NULL;"
    },
    {
        "question_id": 304,
        "answer_sql": "SELECT DISTINCT P.product_name FROM Products P LEFT JOIN Order_Items OI ON P.product_id = OI.product_id LEFT JOIN Customer_Orders CO ON OI.order_id = CO.order_id WHERE CO.order_id IS NULL;"
    },
    {
        "question_id": 305,
        "answer_sql": "SELECT COUNT(*) FROM Order_Items i JOIN Products p ON i.product_id = p.product_id WHERE p.product_name = 'Monitor';"
    },
    {
        "question_id": 306,
        "answer_sql": "SELECT COUNT(*) FROM Order_Items WHERE product_id IN (SELECT product_id FROM Products WHERE product_name LIKE '%Monitor%');"
    },
    {
        "question_id": 307,
        "answer_sql": "SELECT COUNT(*) FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';"
    },
    {
        "question_id": 308,
        "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE p.product_name = 'Monitor';"
    },
    {
        "question_id": 309,
        "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id;"
    },
    {
        "question_id": 310,
        "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id;"
    },
    {
        "question_id": 311,
        "answer_sql": "SELECT DISTINCT c.customer_id FROM Customers c LEFT JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_id IS NULL;"
    },
    {
        "question_id": 312,
        "answer_sql": "SELECT DISTINCT c.customer_id FROM Customers c LEFT JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.order_id IS NULL;"
    },
    {
        "question_id": 313,
        "answer_sql": "SELECT o.order_date, o.order_id FROM Customer_Orders AS o JOIN Order_Items AS oi ON o.order_id = oi.order_id WHERE (oi.order_quantity > 6 OR oi.order_quantity > 3)"
    },
    {
        "question_id": 314,
        "answer_sql": "SELECT o.order_id, o.order_date FROM Customer_Orders AS o JOIN Order_Items AS oi ON o.order_id = oi.order_id WHERE (oi.order_quantity > 6 OR oi.order_quantity > 3);"
    },
    {
        "question_id": 315,
        "answer_sql": "SELECT COUNT(*) FROM building;"
    },
    {
        "question_id": 316,
        "answer_sql": "SELECT COUNT(*) FROM building;"
    },
    {
        "question_id": 317,
        "answer_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC;"
    },
    {
        "question_id": 318,
        "answer_sql": "SELECT building.Name, building.Number_of_Stories FROM building ORDER BY building.Number_of_Stories ASC;"
    },
    {
        "question_id": 319,
        "answer_sql": "SELECT b.Address FROM building b ORDER BY b.Completed_Year DESC;"
    },
    {
        "question_id": 320,
        "answer_sql": "SELECT Address FROM building ORDER BY Completed_Year DESC;"
    },
    {
        "question_id": 321,
        "answer_sql": "SELECT MAX(Number_of_Stories) FROM building WHERE Completed_Year != 1980;"
    },
    {
        "question_id": 322,
        "answer_sql": "SELECT MAX(`Number_of_Stories`) FROM `building` WHERE `Completed_Year` <> 1980;"
    },
    {
        "question_id": 323,
        "answer_sql": "SELECT AVG(region.Population) FROM region;"
    },
    {
        "question_id": 324,
        "answer_sql": "SELECT AVG(region.Population) FROM region;"
    },
    {
        "question_id": 325,
        "answer_sql": "SELECT Name FROM region ORDER BY Name ASC;"
    },
    {
        "question_id": 326,
        "answer_sql": "SELECT Name FROM region ORDER BY Name ASC;"
    },
    {
        "question_id": 327,
        "answer_sql": "SELECT r.Capital FROM region r JOIN building b ON r.Region_ID = b.Region_ID WHERE r.Area > 10000;"
    },
    {
        "question_id": 328,
        "answer_sql": "SELECT r.Capital FROM region r JOIN building b ON r.Region_ID = b.Region_ID WHERE r.Area > 10000;"
    },
    {
        "question_id": 329,
        "answer_sql": "SELECT r.Capital FROM region r JOIN building b ON r.Region_ID = b.Region_ID ORDER BY r.Population DESC LIMIT 1;"
    },
    {
        "question_id": 330,
        "answer_sql": "SELECT r.Capital FROM region r JOIN building b ON r.Region_ID = b.Region_ID ORDER BY r.Population DESC LIMIT 1;"
    },
    {
        "question_id": 331,
        "answer_sql": "SELECT r.Name FROM region r ORDER BY r.Area DESC LIMIT 5;"
    },
    {
        "question_id": 332,
        "answer_sql": "SELECT r.Name FROM region r ORDER BY r.Area DESC LIMIT 5;"
    },
    {
        "question_id": 333,
        "answer_sql": "SELECT building.Name AS Building_Name, region.Name AS Region_Name FROM building JOIN region ON building.Region_ID = region.Region_ID;"
    },
    {
        "question_id": 334,
        "answer_sql": "SELECT building.Name AS Building_Name, region.Name AS Region_Name FROM building JOIN region ON building.Region_ID = region.Region_ID;"
    },
    {
        "question_id": 335,
        "answer_sql": ""
    },
    {
        "question_id": 336,
        "answer_sql": ""
    },
    {
        "question_id": 337,
        "answer_sql": "SELECT r.Capital FROM region r JOIN ( SELECT Region_ID FROM building GROUP BY Region_ID ORDER BY COUNT(*) DESC LIMIT 1 ) b ON r.Region_ID = b.Region_ID;"
    },
    {
        "question_id": 338,
        "answer_sql": "SELECT r.Capital FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Region_ID, r.Capital ORDER BY COUNT(b.Building_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 339,
        "answer_sql": "SELECT b.Address, r.Capital FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 340,
        "answer_sql": "SELECT b.Address, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 341,
        "answer_sql": "SELECT SUM(Number_of_Stories) FROM building WHERE Region_ID IN (SELECT Region_ID FROM region WHERE Name = 'Abruzzo');"
    },
    {
        "question_id": 342,
        "answer_sql": "SELECT Number_of_Stories FROM building WHERE Region_ID IN (SELECT Region_ID FROM region WHERE Name = 'Abruzzo');"
    },
    {
        "question_id": 343,
        "answer_sql": "SELECT Completed_Year, COUNT(*) AS Number_of_Buildings FROM building GROUP BY Completed_Year;"
    },
    {
        "question_id": 344,
        "answer_sql": "SELECT Building_ID, COUNT(*) as Number_of_Buildings FROM building GROUP BY Building_ID, Completed_Year;"
    },
    {
        "question_id": 345,
        "answer_sql": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 346,
        "answer_sql": "SELECT MAX(Completed_Year) FROM building;"
    },
    {
        "question_id": 347,
        "answer_sql": "SELECT r.Name FROM region r LEFT JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Building_ID IS NULL;"
    },
    {
        "question_id": 348,
        "answer_sql": "SELECT r.Name FROM region r LEFT JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Building_ID IS NULL;"
    },
    {
        "question_id": 349,
        "answer_sql": "SELECT DISTINCT b.Completed_Year FROM building b WHERE (b.Number_of_Stories > 20 AND b.Completed_Year IS NOT NULL) OR (b.Number_of_Stories < 15 AND b.Completed_Year IS NOT NULL);"
    },
    {
        "question_id": 350,
        "answer_sql": "SELECT DISTINCT b.Completed_Year FROM building b WHERE (b.Number_of_Stories > 20 AND b.Completed_Year IN (SELECT DISTINCT c.Completed_Year FROM building c WHERE c.Number_of_Stories < 15)) OR (b.Number_of_Stories < 15 AND b.Completed_Year IN (SELECT DISTINCT c.Completed_Year FROM building c WHERE c.Number_of_Stories > 20))"
    },
    {
        "question_id": 351,
        "answer_sql": "SELECT DISTINCT Address FROM building;"
    },
    {
        "question_id": 352,
        "answer_sql": "SELECT DISTINCT Address FROM building;"
    },
    {
        "question_id": 353,
        "answer_sql": "SELECT Building_ID, Completed_Year, Number_of_Stories FROM building ORDER BY Number_of_Stories DESC, Completed_Year DESC;"
    },
    {
        "question_id": 354,
        "answer_sql": "SELECT Building_ID, Completed_Year FROM building ORDER BY Number_of_Stories DESC;"
    },
    {
        "question_id": 355,
        "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC;"
    },
    {
        "question_id": 356,
        "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC;"
    },
    {
        "question_id": 357,
        "answer_sql": "SELECT COUNT(Service_ID) FROM Services;"
    },
    {
        "question_id": 358,
        "answer_sql": "SELECT COUNT(Service_ID) FROM Services;"
    },
    {
        "question_id": 359,
        "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Frequency FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 360,
        "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as frequency FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 361,
        "answer_sql": "SELECT Services.Service_ID, Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"
    },
    {
        "question_id": 362,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"
    },
    {
        "question_id": 363,
        "answer_sql": "SELECT Services.Service_ID, Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID GROUP BY Services.Service_ID HAVING COUNT(*) > 3;"
    },
    {
        "question_id": 364,
        "answer_sql": ""
    },
    {
        "question_id": 365,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY COUNT(Customers_and_Services.Customer_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 366,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY COUNT(Customers_and_Services.Service_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 367,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY COUNT(DISTINCT Customers_and_Services.Service_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 368,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY COUNT(DISTINCT Customers_and_Services.Service_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 369,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers_and_Services.Customer_ID IS NULL;"
    },
    {
        "question_id": 370,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers_and_Services.Customer_ID IS NULL;"
    },
    {
        "question_id": 371,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers.Customer_ID ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 372,
        "answer_sql": "SELECT DISTINCT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Services.Service_ID IN ( SELECT Service_ID FROM Customers_and_Services GROUP BY Service_ID HAVING COUNT(*) = 1 )"
    },
    {
        "question_id": 373,
        "answer_sql": ""
    },
    {
        "question_id": 374,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.Customer_ID) AS Total_Customers, COUNT(DISTINCT Services.Service_ID) AS Total_Services FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID LEFT JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID;"
    },
    {
        "question_id": 375,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%';"
    },
    {
        "question_id": 376,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%'"
    },
    {
        "question_id": 377,
        "answer_sql": ""
    },
    {
        "question_id": 378,
        "answer_sql": "SELECT s.Service_Details FROM Services s WHERE ( SELECT 1 FROM Customers_and_Services cas WHERE cas.Customer_ID = ( SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch' ) AND cas.Service_ID = s.Service_ID ) OR ( SELECT 1 FROM Customer_Interactions ci WHERE ci.Status_Code = 'good' AND ci.Service_ID = s.Service_ID );"
    },
    {
        "question_id": 379,
        "answer_sql": ""
    },
    {
        "question_id": 380,
        "answer_sql": ""
    },
    {
        "question_id": 381,
        "answer_sql": ""
    },
    {
        "question_id": 382,
        "answer_sql": ""
    },
    {
        "question_id": 383,
        "answer_sql": ""
    },
    {
        "question_id": 384,
        "answer_sql": ""
    },
    {
        "question_id": 385,
        "answer_sql": ""
    },
    {
        "question_id": 386,
        "answer_sql": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details LIKE '%Success%';"
    },
    {
        "question_id": 387,
        "answer_sql": ""
    },
    {
        "question_id": 388,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail';"
    },
    {
        "question_id": 389,
        "answer_sql": ""
    },
    {
        "question_id": 390,
        "answer_sql": ""
    },
    {
        "question_id": 391,
        "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Usage_Count FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code;"
    },
    {
        "question_id": 392,
        "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Usage_Count FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code;"
    },
    {
        "question_id": 393,
        "answer_sql": "SELECT Services.Service_ID, Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customers_and_Services_Details LIKE '%unsatisfied%';"
    },
    {
        "question_id": 394,
        "answer_sql": ""
    },
    {
        "question_id": 395,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 396,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 397,
        "answer_sql": "SELECT name FROM Vehicles ORDER BY Model_year DESC;"
    },
    {
        "question_id": 398,
        "answer_sql": "SELECT name FROM Vehicles ORDER BY `Model_year` DESC;"
    },
    {
        "question_id": 399,
        "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;"
    },
    {
        "question_id": 400,
        "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;"
    },
    {
        "question_id": 401,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Annual_fuel_cost FROM Vehicles WHERE Vehicles.Model_year IN (2013, 2014);"
    },
    {
        "question_id": 402,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Annual_fuel_cost FROM Vehicles WHERE Vehicles.Model_year IN (2013, 2014);"
    },
    {
        "question_id": 403,
        "answer_sql": "SELECT DISTINCT Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id JOIN Discount ON Renting_history.discount_id = Discount.id JOIN Customers ON Renting_history.customer_id = Customers.id WHERE Vehicles.Model_year IN (2014, 2013)"
    },
    {
        "question_id": 404,
        "answer_sql": "SELECT DISTINCT Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id JOIN Discount ON Renting_history.discount_id = Discount.id JOIN Customers ON Renting_history.customer_id = Customers.id WHERE Vehicles.Model_year IN (2013, 2014)"
    },
    {
        "question_id": 405,
        "answer_sql": "SELECT Type_of_powertrain, COUNT(*) as Number_of_Vehicles FROM Vehicles GROUP BY Type_of_powertrain;"
    },
    {
        "question_id": 406,
        "answer_sql": "SELECT Type_of_powertrain, COUNT(*) as Number_of_Vehicles FROM Vehicles GROUP BY Type_of_powertrain;"
    },
    {
        "question_id": 407,
        "answer_sql": "SELECT Type_of_powertrain, COUNT(*) as count FROM Vehicles GROUP BY Type_of_powertrain ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 408,
        "answer_sql": "SELECT Type_of_powertrain, COUNT(*) as frequency FROM Vehicles GROUP BY Type_of_powertrain ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 409,
        "answer_sql": "SELECT MIN(Annual_fuel_cost), MAX(Annual_fuel_cost), AVG(Annual_fuel_cost) FROM Vehicles;"
    },
    {
        "question_id": 410,
        "answer_sql": "SELECT MIN(Annual_fuel_cost) AS min_cost, MAX(Annual_fuel_cost) AS max_cost, AVG(Annual_fuel_cost) AS avg_cost FROM Vehicles;"
    },
    {
        "question_id": 411,
        "answer_sql": ""
    },
    {
        "question_id": 412,
        "answer_sql": ""
    },
    {
        "question_id": 413,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.Annual_fuel_cost) AS Average_annual_fuel_cost FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(DISTINCT Vehicles.id) >= 2;"
    },
    {
        "question_id": 414,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.Annual_fuel_cost) AS Average_annual_fuel_cost FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(DISTINCT Vehicles.id) >= 2;"
    },
    {
        "question_id": 415,
        "answer_sql": "SELECT Customers.name, Customers.age, Customers.membership_credit FROM Customers;"
    },
    {
        "question_id": 416,
        "answer_sql": "SELECT Customers.name, Customers.age, Customers.membership_credit FROM Customers;"
    },
    {
        "question_id": 417,
        "answer_sql": "SELECT Customers.name, Customers.age FROM Customers ORDER BY Customers.membership_credit DESC LIMIT 1;"
    },
    {
        "question_id": 418,
        "answer_sql": "SELECT Customers.name, Customers.age FROM Customers ORDER BY Customers.membership_credit DESC LIMIT 1;"
    },
    {
        "question_id": 419,
        "answer_sql": "SELECT AVG(Customers.age) FROM Customers WHERE Customers.membership_credit > (SELECT AVG(membership_credit) FROM Customers);"
    },
    {
        "question_id": 420,
        "answer_sql": "SELECT AVG(age) FROM Customers WHERE membership_credit > (SELECT AVG(membership_credit) FROM Customers);"
    },
    {
        "question_id": 421,
        "answer_sql": "SELECT * FROM Discount;"
    },
    {
        "question_id": 422,
        "answer_sql": "SELECT * FROM Discount;"
    },
    {
        "question_id": 423,
        "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) AS total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name;"
    },
    {
        "question_id": 424,
        "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) AS total_rental_hours FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id, Vehicles.name;"
    },
    {
        "question_id": 425,
        "answer_sql": "SELECT Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL;"
    },
    {
        "question_id": 426,
        "answer_sql": "SELECT Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL;"
    },
    {
        "question_id": 427,
        "answer_sql": "SELECT c.name FROM Customers c JOIN Renting_history rh ON c.id = rh.customer_id GROUP BY c.name HAVING COUNT(rh.id) >= 2;"
    },
    {
        "question_id": 428,
        "answer_sql": "SELECT DISTINCT c.name FROM Customers c JOIN Renting_history rh ON c.id = rh.customer_id GROUP BY c.name HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 429,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 430,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 431,
        "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) AS total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id ORDER BY total_hours DESC;"
    },
    {
        "question_id": 432,
        "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) AS total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id ORDER BY total_hours DESC;"
    },
    {
        "question_id": 433,
        "answer_sql": "SELECT D.name, COUNT(*) as count FROM Renting_history R JOIN Discount D ON R.discount_id = D.id GROUP BY D.name ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 434,
        "answer_sql": "SELECT D.name FROM Discount D JOIN Renting_history RH ON D.id = RH.discount_id GROUP BY D.id, D.name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 435,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.total_hours > 30;"
    },
    {
        "question_id": 436,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id HAVING SUM(total_hours) > 30;"
    },
    {
        "question_id": 437,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(City_fuel_economy_rate) AS Avg_City_Fuel_Rate, AVG(Highway_fuel_economy_rate) AS Avg_Highway_Fuel_Rate FROM Vehicles GROUP BY Vehicles.Type_of_powertrain;"
    },
    {
        "question_id": 438,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(City_fuel_economy_rate) AS Avg_City_Fuel_Economy_Rate, AVG(Highway_fuel_economy_rate) AS Avg_Highway_Fuel_Economy_Rate FROM Vehicles GROUP BY Vehicles.Type_of_powertrain;"
    },
    {
        "question_id": 439,
        "answer_sql": "SELECT AVG(amount_of_loan) AS average_loan_amount FROM Student_Loans;"
    },
    {
        "question_id": 440,
        "answer_sql": "SELECT AVG(amount_of_loan) AS average_loan_amount FROM Student_Loans;"
    },
    {
        "question_id": 441,
        "answer_sql": "SELECT Students.student_id, bio_data FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id HAVING COUNT(Classes.class_id) >= 2 AND NOT EXISTS ( SELECT * FROM Detention WHERE Detention.student_id = Students.student_id GROUP BY Detention.student_id HAVING COUNT(Detention.detention_id) < 2 );"
    },
    {
        "question_id": 442,
        "answer_sql": "SELECT s.student_id, s.bio_data FROM Students s LEFT JOIN Classes c ON s.student_id = c.student_id LEFT JOIN Detention d ON s.student_id = d.student_id GROUP BY s.student_id HAVING COUNT(c.class_id) >= 2 OR COUNT(d.detention_id) < 2;"
    },
    {
        "question_id": 443,
        "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details LIKE '%data%' AND NOT Classes.class_details LIKE '%net%'"
    },
    {
        "question_id": 444,
        "answer_sql": "SELECT t.teacher_details FROM Teachers t WHERE t.teacher_id IN ( SELECT teacher_id FROM Classes c WHERE c.class_details LIKE '%data%' EXCEPT SELECT teacher_id FROM Classes c WHERE c.class_details LIKE 'net%' );"
    },
    {
        "question_id": 445,
        "answer_sql": ""
    },
    {
        "question_id": 446,
        "answer_sql": ""
    },
    {
        "question_id": 447,
        "answer_sql": "SELECT Student_Loans.date_of_loan, Student_Loans.amount_of_loan FROM Student_Loans JOIN Achievements ON Student_Loans.student_id = Achievements.student_id GROUP BY Student_Loans.student_id HAVING COUNT(Achievements.achievement_id) >= 2;"
    },
    {
        "question_id": 448,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, L.date_of_loan, L.amount_of_loan FROM Students S JOIN Student_Loans L ON S.student_id = L.student_id WHERE S.student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING COUNT(achievement_id) >= 2 );"
    },
    {
        "question_id": 449,
        "answer_sql": "SELECT teacher_id, teacher_details FROM Teachers WHERE teacher_id IN ( SELECT teacher_id FROM Classes GROUP BY teacher_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 450,
        "answer_sql": "SELECT teacher_id, teacher_details FROM Teachers WHERE teacher_id IN ( SELECT teacher_id FROM Classes GROUP BY teacher_id ORDER BY COUNT(class_id) DESC LIMIT 1 );"
    },
    {
        "question_id": 451,
        "answer_sql": "SELECT DISTINCT D.detention_summary FROM Detention D;"
    },
    {
        "question_id": 452,
        "answer_sql": "SELECT DISTINCT D.detention_summary FROM Detention D;"
    },
    {
        "question_id": 453,
        "answer_sql": "SELECT Students.student_details, Ref_Address_Types.address_type_description FROM Students LEFT JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id LEFT JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code;"
    },
    {
        "question_id": 454,
        "answer_sql": "SELECT Students.student_details, Ref_Address_Types.address_type_description FROM Students LEFT JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id LEFT JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code"
    },
    {
        "question_id": 455,
        "answer_sql": "SELECT Students.bio_data, Addresses.address_details FROM Students LEFT JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id LEFT JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id;"
    },
    {
        "question_id": 456,
        "answer_sql": "SELECT Students.bio_data, Addresses.address_details FROM Students LEFT JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id LEFT JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id;"
    },
    {
        "question_id": 457,
        "answer_sql": "SELECT Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id;"
    },
    {
        "question_id": 458,
        "answer_sql": "SELECT Students.bio_data, Transcripts.date_of_transcript FROM Students LEFT JOIN Transcripts ON Students.student_id = Transcripts.student_id;"
    },
    {
        "question_id": 459,
        "answer_sql": "SELECT BEHAVIOUR_MONITORING.behaviour_monitoring_details AS result_details, COUNT(*) AS frequency FROM BEHAVIOUR_MONITORING GROUP BY BEHAVIOUR_MONITORING.behaviour_monitoring_details ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 460,
        "answer_sql": "SELECT `behaviour_monitoring_details`, COUNT(*) as count FROM Behaviour_Monitoring GROUP BY `behaviour_monitoring_details` ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 461,
        "answer_sql": ""
    },
    {
        "question_id": 462,
        "answer_sql": "SELECT s.bio_data, s.student_details FROM Students s JOIN ( SELECT bm.student_id, COUNT(*) as count FROM Behaviour_Monitoring bm GROUP BY bm.student_id HAVING count > 1 ) bm ON s.student_id = bm.student_id WHERE s.student_id IN ( SELECT student_id FROM Student_Events GROUP BY student_id HAVING COUNT(*) = ( SELECT COUNT(*) FROM Student_Events GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1 ) );"
    },
    {
        "question_id": 463,
        "answer_sql": "SELECT s.bio_data FROM Students s JOIN ( SELECT b.student_id, COUNT(*) AS count FROM Behaviour_Monitoring b GROUP BY b.student_id ORDER BY count DESC LIMIT 1 ) b ON s.student_id = b.student_id"
    },
    {
        "question_id": 464,
        "answer_sql": "SELECT s.bio_data, COUNT(bm.behaviour_monitoring_details) AS frequency FROM Students s JOIN Behaviour_Monitoring bm ON s.student_id = bm.student_id GROUP BY s.bio_data, bm.behaviour_monitoring_details ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 465,
        "answer_sql": "SELECT Students.bio_data, Student_Events.event_date FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id;"
    },
    {
        "question_id": 466,
        "answer_sql": "SELECT Students.bio_data, Student_Events.event_date FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id;"
    },
    {
        "question_id": 467,
        "answer_sql": "SELECT COUNT(DISTINCT se.student_id) AS num_students, re.event_type_description AS event_type_desc FROM Student_Events se JOIN Ref_Event_Types re ON se.event_type_code = re.event_type_code GROUP BY se.event_type_code, re.event_type_description ORDER BY num_students DESC LIMIT 1;"
    },
    {
        "question_id": 468,
        "answer_sql": "SELECT Ref_Event_Types.event_type_code, Ref_Event_Types.event_type_description, COUNT(Student_Events.event_id) FROM Student_Events JOIN Ref_Event_Types ON Student_Events.event_type_code = Ref_Event_Types.event_type_code GROUP BY Ref_Event_Types.event_type_code, Ref_Event_Types.event_type_description ORDER BY COUNT(Student_Events.event_id) DESC LIMIT 1;"
    },
    {
        "question_id": 469,
        "answer_sql": "SELECT Achievements.achievement_details, Ref_Achievement_Type.achievement_type_description FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 470,
        "answer_sql": "SELECT Achievements.achievement_details, Ref_Achievement_Type.achievement_type_description FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 471,
        "answer_sql": "SELECT COUNT(DISTINCT t.teacher_id) FROM Teachers t LEFT JOIN Classes c ON t.teacher_id = c.teacher_id LEFT JOIN Students s ON c.student_id = s.student_id LEFT JOIN Achievements a ON s.student_id = a.student_id WHERE a.achievement_id IS NULL;"
    },
    {
        "question_id": 472,
        "answer_sql": "SELECT COUNT(DISTINCT t.teacher_id) FROM Teachers t LEFT JOIN Classes c ON t.teacher_id = c.teacher_id LEFT JOIN Students s ON c.student_id = s.student_id LEFT JOIN Achievements a ON s.student_id = a.student_id WHERE a.achievement_id IS NULL;"
    },
    {
        "question_id": 473,
        "answer_sql": "SELECT Transcripts.date_of_transcript, Transcripts.transcript_details FROM Transcripts;"
    },
    {
        "question_id": 474,
        "answer_sql": "SELECT Transcripts.date_of_transcript, Transcripts.transcript_details FROM Transcripts;"
    },
    {
        "question_id": 475,
        "answer_sql": "SELECT achievement_type_code, achievement_details, date_achievement FROM Achievements;"
    },
    {
        "question_id": 476,
        "answer_sql": "SELECT Ref_Achievement_Type.achievement_type_code, Achievements.achievement_details, Achievements.date_achievement FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 477,
        "answer_sql": "SELECT datetime_detention_start, datetime_detention_end FROM Detention;"
    },
    {
        "question_id": 478,
        "answer_sql": ""
    },
    {
        "question_id": 479,
        "answer_sql": ""
    },
    {
        "question_id": 480,
        "answer_sql": ""
    },
    {
        "question_id": 481,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details, Teachers.teacher_id, Teachers.teacher_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id;"
    },
    {
        "question_id": 482,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details, Teachers.teacher_id, Teachers.teacher_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id;"
    },
    {
        "question_id": 483,
        "answer_sql": "WITH teacher_courses AS ( SELECT t.teacher_id, COUNT(c.class_id) AS num_courses FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id GROUP BY t.teacher_id ) SELECT MAX(num_courses) AS max_courses, teacher_id FROM teacher_courses"
    },
    {
        "question_id": 484,
        "answer_sql": "SELECT t.teacher_id, COUNT(c.class_id) AS num_courses FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id GROUP BY t.teacher_id ORDER BY num_courses DESC LIMIT 1;"
    },
    {
        "question_id": 485,
        "answer_sql": ""
    },
    {
        "question_id": 486,
        "answer_sql": "SELECT s.student_id, COUNT(c.class_id) AS num_courses FROM Students s JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id ORDER BY num_courses DESC LIMIT 1;"
    },
    {
        "question_id": 487,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details FROM Students s JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT c.class_id) = 2;"
    },
    {
        "question_id": 488,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details FROM Students s JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id HAVING COUNT(c.class_id) = 2;"
    },
    {
        "question_id": 489,
        "answer_sql": "SELECT Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description FROM Ref_Detention_Type LEFT JOIN ( SELECT Ref_Detention_Type.detention_type_code, COUNT(*) as count FROM Ref_Detention_Type LEFT JOIN Detention ON Ref_Detention_Type.detention_type_code = Detention.detention_type_code GROUP BY Ref_Detention_Type.detention_type_code HAVING COUNT(*) = 1 ) AS rdt ON Ref_Detention_Type.detention_type_code = rdt.detention_type_code;"
    },
    {
        "question_id": 490,
        "answer_sql": "SELECT Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description FROM Ref_Detention_Type WHERE (Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description) IN ( SELECT Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description FROM Ref_Detention_Type GROUP BY Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description HAVING COUNT(*) = 1 );"
    },
    {
        "question_id": 491,
        "answer_sql": "SELECT S.bio_data FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id WHERE SL.amount_of_loan > (SELECT AVG(amount_of_loan) FROM Student_Loans)"
    },
    {
        "question_id": 492,
        "answer_sql": "SELECT S.bio_data, S.student_details FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id GROUP BY S.student_id HAVING SUM(SL.amount_of_loan) > (SELECT AVG(amount_of_loan) FROM Student_Loans)"
    },
    {
        "question_id": 493,
        "answer_sql": "SELECT MIN(date_of_loan) AS earliest_loan_date FROM Student_Loans;"
    },
    {
        "question_id": 494,
        "answer_sql": "SELECT MIN(date_of_loan) AS earliest_loan_date FROM Student_Loans;"
    },
    {
        "question_id": 495,
        "answer_sql": "SELECT s.bio_data FROM Students s JOIN Student_Loans sl ON s.student_id = sl.student_id WHERE sl.student_loan_id = ( SELECT student_loan_id FROM Student_Loans ORDER BY amount_of_loan ASC LIMIT 1 );"
    },
    {
        "question_id": 496,
        "answer_sql": "SELECT s.bio_data FROM Students s JOIN Student_Loans sl ON s.student_id = sl.student_id WHERE sl.student_loan_id = ( SELECT MIN(student_loan_id) FROM Student_Loans );"
    },
    {
        "question_id": 497,
        "answer_sql": "SELECT T2.date_of_transcript FROM Student_Loans AS T1 INNER JOIN Transcripts AS T2 ON T1.student_id = T2.student_id WHERE T1.student_loan_id = (SELECT student_loan_id FROM Student_Loans GROUP BY student_id ORDER BY amount_of_loan DESC LIMIT 1);"
    },
    {
        "question_id": 498,
        "answer_sql": "SELECT MAX(Student_Loans.date_of_loan) AS Transcript_Issuance_Date FROM Student_Loans JOIN Students ON Student_Loans.student_id = Students.student_id WHERE Student_Loans.amount_of_loan = (SELECT MAX(amount_of_loan) FROM Student_Loans);"
    },
    {
        "question_id": 499,
        "answer_sql": "SELECT Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Transcripts ON Classes.student_id = Transcripts.student_id WHERE Transcripts.date_of_transcript = (SELECT MIN(date_of_transcript) FROM Transcripts)"
    },
    {
        "question_id": 500,
        "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Classes.student_id = Students.student_id JOIN Transcripts ON Students.student_id = Transcripts.student_id WHERE Transcripts.date_of_transcript = (SELECT MIN(date_of_transcript) FROM Transcripts);"
    },
    {
        "question_id": 501,
        "answer_sql": "SELECT S.student_id, SUM(SL.amount_of_loan) AS total_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id GROUP BY S.student_id;"
    },
    {
        "question_id": 502,
        "answer_sql": "SELECT Students.student_id, SUM(Student_Loans.amount_of_loan) AS total_loan FROM Students LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id GROUP BY Students.student_id;"
    },
    {
        "question_id": 503,
        "answer_sql": "SELECT s.student_id, s.bio_data, COUNT(c.class_id) as course_count FROM Students s LEFT JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id, s.bio_data;"
    },
    {
        "question_id": 504,
        "answer_sql": "SELECT s.student_id, s.bio_data, COUNT(c.class_id) as num_courses FROM Students s LEFT JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id, s.bio_data;"
    },
    {
        "question_id": 505,
        "answer_sql": "SELECT COUNT(*) FROM Detention;"
    },
    {
        "question_id": 506,
        "answer_sql": "SELECT COUNT(*) FROM Students s JOIN Detention d ON s.student_id = d.student_id;"
    },
    {
        "question_id": 507,
        "answer_sql": ""
    },
    {
        "question_id": 508,
        "answer_sql": ""
    },
    {
        "question_id": 509,
        "answer_sql": ""
    },
    {
        "question_id": 510,
        "answer_sql": ""
    },
    {
        "question_id": 511,
        "answer_sql": "SELECT sas.date_from AS start_time, sas.date_to AS end_time FROM Students_Addresses sas JOIN Transcripts t ON sas.student_id = t.student_id GROUP BY sas.student_address_id HAVING COUNT(t.transcript_id) = 2;"
    },
    {
        "question_id": 512,
        "answer_sql": ""
    },
    {
        "question_id": 513,
        "answer_sql": "SELECT MIN(datetime_detention_start) FROM Detention;"
    },
    {
        "question_id": 514,
        "answer_sql": "SELECT datetime_detention_start FROM Detention;"
    },
    {
        "question_id": 515,
        "answer_sql": "SELECT Name FROM Author;"
    },
    {
        "question_id": 516,
        "answer_sql": "SELECT Name FROM Author;"
    },
    {
        "question_id": 517,
        "answer_sql": "SELECT Name, Address FROM Client;"
    },
    {
        "question_id": 518,
        "answer_sql": "SELECT Name, Address FROM Client;"
    },
    {
        "question_id": 519,
        "answer_sql": "SELECT Book.Title, Book.ISBN, Book.SalePrice FROM Book;"
    },
    {
        "question_id": 520,
        "answer_sql": "SELECT Book.Title, Book.ISBN, Book.SalePrice FROM Book;"
    },
    {
        "question_id": 521,
        "answer_sql": "SELECT COUNT(*) FROM Book;"
    },
    {
        "question_id": 522,
        "answer_sql": "SELECT COUNT(*) FROM Book;"
    },
    {
        "question_id": 523,
        "answer_sql": "SELECT COUNT(DISTINCT idAuthor) FROM Author;"
    },
    {
        "question_id": 524,
        "answer_sql": ""
    },
    {
        "question_id": 525,
        "answer_sql": "SELECT COUNT(*) FROM Client;"
    },
    {
        "question_id": 526,
        "answer_sql": "SELECT COUNT(*) FROM Client;"
    },
    {
        "question_id": 527,
        "answer_sql": "SELECT Name, Address FROM Client ORDER BY Name ASC;"
    },
    {
        "question_id": 528,
        "answer_sql": "SELECT Name, Address FROM Client ORDER BY Name ASC;"
    },
    {
        "question_id": 529,
        "answer_sql": "SELECT Book.Title, Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor;"
    },
    {
        "question_id": 530,
        "answer_sql": "SELECT Book.Title, Author.Name FROM Book LEFT JOIN Author_Book ON Book.ISBN = Author_Book.ISBN LEFT JOIN Author ON Author_Book.Author = Author.idAuthor;"
    },
    {
        "question_id": 531,
        "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient;"
    },
    {
        "question_id": 532,
        "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient;"
    },
    {
        "question_id": 533,
        "answer_sql": "SELECT Author.Name, COUNT(Book.ISBN) FROM Author LEFT JOIN Author_Book ON Author.idAuthor = Author_Book.Author LEFT JOIN Book ON Author_Book.ISBN = Book.ISBN GROUP BY Author.Name;"
    },
    {
        "question_id": 534,
        "answer_sql": "SELECT Author.Name, COUNT(Book.ISBN) FROM Author LEFT JOIN Author_Book ON Author.idAuthor = Author_Book.Author LEFT JOIN Book ON Author_Book.ISBN = Book.ISBN GROUP BY Author.Name;"
    },
    {
        "question_id": 535,
        "answer_sql": "SELECT Book.ISBN, COUNT(Books_Order.IdOrder) as NumOrders FROM Book LEFT JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.ISBN;"
    },
    {
        "question_id": 536,
        "answer_sql": "SELECT b.ISBN, COUNT(*) as TotalOrdered FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN GROUP BY b.ISBN;"
    },
    {
        "question_id": 537,
        "answer_sql": "SELECT b.ISBN, SUM(l.amount) AS TotalAmount FROM Book b JOIN Books_Order l ON b.ISBN = l.ISBN GROUP BY b.ISBN;"
    },
    {
        "question_id": 538,
        "answer_sql": "SELECT b.ISBN, SUM(l.amount) AS TotalAmount FROM Book b JOIN Books_Order l ON b.ISBN = l.ISBN GROUP BY b.ISBN;"
    },
    {
        "question_id": 539,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN GROUP BY b.Title ORDER BY COUNT(bo.IdOrder) DESC LIMIT 1;"
    },
    {
        "question_id": 540,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN GROUP BY b.Title ORDER BY COUNT(bo.IdOrder) DESC LIMIT 1;"
    },
    {
        "question_id": 541,
        "answer_sql": "SELECT b.Title, b.PurchasePrice FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Orders o ON bo.IdOrder = o.IdOrder GROUP BY b.Title, b.PurchasePrice ORDER BY SUM(bo.amount) DESC LIMIT 1;"
    },
    {
        "question_id": 542,
        "answer_sql": "SELECT b.Title, b.PurchasePrice FROM Book b JOIN ( SELECT ISBN, SUM(amount) as total_amount FROM Books_Order GROUP BY ISBN ORDER BY total_amount DESC LIMIT 1 ) as subquery ON b.ISBN = subquery.ISBN;"
    },
    {
        "question_id": 543,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Orders o ON bo.IdOrder = o.IdOrder;"
    },
    {
        "question_id": 544,
        "answer_sql": "SELECT DISTINCT Book.Title FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder;"
    },
    {
        "question_id": 545,
        "answer_sql": ""
    },
    {
        "question_id": 546,
        "answer_sql": "SELECT DISTINCT C.Name FROM Client C JOIN Orders O ON C.IdClient = O.IdClient;"
    },
    {
        "question_id": 547,
        "answer_sql": "SELECT Client.Name, COUNT(Orders.IdOrder) as NumOrders FROM Client LEFT JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name;"
    },
    {
        "question_id": 548,
        "answer_sql": "SELECT C.Name, COUNT(O.IdOrder) as OrderCount FROM Client C LEFT JOIN Orders O ON C.IdClient = O.IdClient GROUP BY C.Name;"
    },
    {
        "question_id": 549,
        "answer_sql": "SELECT c.Name FROM Client c JOIN ( SELECT IdClient, COUNT(*) as NumOrders FROM Orders GROUP BY IdClient ORDER BY NumOrders DESC LIMIT 1 ) o ON c.IdClient = o.IdClient;"
    },
    {
        "question_id": 550,
        "answer_sql": ""
    },
    {
        "question_id": 551,
        "answer_sql": ""
    },
    {
        "question_id": 552,
        "answer_sql": ""
    },
    {
        "question_id": 553,
        "answer_sql": "SELECT c.Name, SUM(b.PurchasePrice * lp.amount) AS TotalAmount FROM Client c JOIN Orders o ON c.IdClient = o.IdClient JOIN Books_Order lp ON o.IdOrder = lp.IdOrder JOIN Book b ON lp.ISBN = b.ISBN GROUP BY c.Name ORDER BY TotalAmount DESC LIMIT 1;"
    },
    {
        "question_id": 554,
        "answer_sql": ""
    },
    {
        "question_id": 555,
        "answer_sql": "SELECT b.Title FROM Book b LEFT JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE bo.ISBN IS NULL;"
    },
    {
        "question_id": 556,
        "answer_sql": "SELECT b.Title FROM Book b LEFT JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE bo.ISBN IS NULL;"
    },
    {
        "question_id": 557,
        "answer_sql": "SELECT DISTINCT C.Name FROM Client C LEFT JOIN Orders O ON C.IdClient = O.IdClient WHERE O.IdOrder IS NULL;"
    },
    {
        "question_id": 558,
        "answer_sql": "SELECT DISTINCT C.Name FROM Client C LEFT JOIN Orders O ON C.IdClient = O.IdClient WHERE O.IdOrder IS NULL;"
    },
    {
        "question_id": 559,
        "answer_sql": "SELECT MAX(SalePrice), MIN(SalePrice) FROM Book;"
    },
    {
        "question_id": 560,
        "answer_sql": "SELECT MAX(SalePrice), MIN(SalePrice) FROM Book;"
    },
    {
        "question_id": 561,
        "answer_sql": "SELECT AVG(PurchasePrice) AS AveragePurchasePrice, AVG(SalePrice) AS AverageSalePrice FROM Book;"
    },
    {
        "question_id": 562,
        "answer_sql": "SELECT AVG(PurchasePrice) AS AvgPurchasePrice, AVG(SalePrice) AS AvgSalePrice FROM Book;"
    },
    {
        "question_id": 563,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) FROM Book;"
    },
    {
        "question_id": 564,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) FROM Book;"
    },
    {
        "question_id": 565,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 566,
        "answer_sql": "SELECT b.Title FROM Book b WHERE b.SalePrice > (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 567,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Orders o ON bo.IdOrder = o.IdOrder ORDER BY b.SalePrice ASC LIMIT 1;"
    },
    {
        "question_id": 568,
        "answer_sql": "SELECT b.Title FROM Book b WHERE b.SalePrice = (SELECT MIN(SalePrice) FROM Book);"
    },
    {
        "question_id": 569,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Orders o ON bo.IdOrder = o.IdOrder ORDER BY b.PurchasePrice DESC LIMIT 1;"
    },
    {
        "question_id": 570,
        "answer_sql": "SELECT Title FROM Book ORDER BY PurchasePrice DESC LIMIT 1;"
    },
    {
        "question_id": 571,
        "answer_sql": "SELECT AVG(B.SalePrice) FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name = 'George Orwell';"
    },
    {
        "question_id": 572,
        "answer_sql": "SELECT AVG(B.SalePrice) FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name = 'George Orwell';"
    },
    {
        "question_id": 573,
        "answer_sql": "SELECT b.SalePrice FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'Plato';"
    },
    {
        "question_id": 574,
        "answer_sql": "SELECT b.SalePrice FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'Plato';"
    },
    {
        "question_id": 575,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'George Orwell' ORDER BY b.SalePrice ASC LIMIT 1;"
    },
    {
        "question_id": 576,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'George Orwell' ORDER BY b.SalePrice ASC LIMIT 1;"
    },
    {
        "question_id": 577,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'Plato' AND b.SalePrice < (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 578,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'Plato' AND b.SalePrice < (SELECT AVG(SalePrice) FROM Book)"
    },
    {
        "question_id": 579,
        "answer_sql": "SELECT Author.Name FROM Author, Book, Author_Book WHERE Book.ISBN = Author_Book.ISBN AND Book.Title = 'Pride and Prejudice' AND Author_Book.Author = Author.idAuthor;"
    },
    {
        "question_id": 580,
        "answer_sql": "SELECT Author.Name FROM Author, Book, Author_Book WHERE Book.ISBN = Author_Book.ISBN AND Book.Title = 'Pride and Prejudice' AND Author_Book.Author = Author.idAuthor;"
    },
    {
        "question_id": 581,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name LIKE '%Plato%';"
    },
    {
        "question_id": 582,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name LIKE '%Plato%';"
    },
    {
        "question_id": 583,
        "answer_sql": "SELECT COUNT(*) FROM Books_Order WHERE ISBN IN (SELECT ISBN FROM Book WHERE Title = 'Pride and Prejudice');"
    },
    {
        "question_id": 584,
        "answer_sql": "SELECT COUNT(*) FROM Books_Order JOIN Book ON Book.ISBN = Books_Order.ISBN WHERE Book.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 585,
        "answer_sql": "SELECT DISTINCT o.IdOrder FROM Orders o JOIN Books_Order bo ON o.IdOrder = bo.IdOrder JOIN Book b ON bo.ISBN = b.ISBN WHERE (b.Title = 'Pride and Prejudice' OR b.Title = 'The Little Prince');"
    },
    {
        "question_id": 586,
        "answer_sql": "SELECT DISTINCT Orders.IdOrder FROM Orders JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Book.ISBN = Books_Order.ISBN WHERE Book.Title IN ('Pride and Prejudice', 'The Little Prince');"
    },
    {
        "question_id": 587,
        "answer_sql": "SELECT DISTINCT B.ISBN FROM Book B JOIN Books_Order BO ON B.ISBN = BO.ISBN JOIN Orders O ON BO.IdOrder = O.IdOrder JOIN Client C ON O.IdClient = C.IdClient WHERE (C.Name = 'Peter Doe' OR C.Name = 'James Smith') GROUP BY B.ISBN HAVING COUNT(DISTINCT C.Name) = 2;"
    },
    {
        "question_id": 588,
        "answer_sql": "SELECT DISTINCT B.ISBN FROM Book B JOIN Books_Order BO ON B.ISBN = BO.ISBN JOIN Orders O ON BO.IdOrder = O.IdOrder WHERE O.IdClient IN (SELECT IdClient FROM Client WHERE Name = 'Peter Doe' OR Name = 'James Smith');"
    },
    {
        "question_id": 589,
        "answer_sql": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Orders o ON bo.IdOrder = o.IdOrder JOIN Client c ON o.IdClient = c.IdClient WHERE (c.Name = 'Peter Doe' AND c.Name != 'James Smith')"
    },
    {
        "question_id": 590,
        "answer_sql": ""
    },
    {
        "question_id": 591,
        "answer_sql": ""
    },
    {
        "question_id": 592,
        "answer_sql": ""
    },
    {
        "question_id": 593,
        "answer_sql": "SELECT COUNT(*) FROM book;"
    },
    {
        "question_id": 594,
        "answer_sql": "SELECT Title FROM book ORDER BY Title ASC;"
    },
    {
        "question_id": 595,
        "answer_sql": "SELECT Title FROM book ORDER BY Pages DESC;"
    },
    {
        "question_id": 596,
        "answer_sql": "SELECT Type, Release FROM book;"
    },
    {
        "question_id": 597,
        "answer_sql": "SELECT Book_ID, MAX(Chapters) AS Max_Chapters, MIN(Chapters) AS Min_Chapters FROM book GROUP BY Book_ID;"
    },
    {
        "question_id": 598,
        "answer_sql": "SELECT Title FROM book WHERE Type != 'Poet';"
    },
    {
        "question_id": 599,
        "answer_sql": "SELECT AVG(Rating) FROM review;"
    },
    {
        "question_id": 600,
        "answer_sql": "SELECT book.Title, review.Rating FROM book JOIN review ON book.Book_ID = review.Book_ID;"
    },
    {
        "question_id": 601,
        "answer_sql": "SELECT MAX(r.Rating) FROM review r JOIN book b ON r.Book_ID = b.Book_ID WHERE b.Chapters = (SELECT MAX(Chapters) FROM book);"
    },
    {
        "question_id": 602,
        "answer_sql": "SELECT MIN(Rank) FROM review WHERE Book_ID = (SELECT Book_ID FROM book ORDER BY Pages ASC LIMIT 1);"
    },
    {
        "question_id": 603,
        "answer_sql": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE r.Rank = (SELECT MAX(Rank) FROM review);"
    },
    {
        "question_id": 604,
        "answer_sql": "SELECT AVG(Readers_in_Million) FROM review WHERE Book_ID IN (SELECT Book_ID FROM book WHERE Type = 'Novel');"
    },
    {
        "question_id": 605,
        "answer_sql": "SELECT Type, COUNT(*) as NumberOfBooks FROM book GROUP BY Type;"
    },
    {
        "question_id": 606,
        "answer_sql": "SELECT Type, COUNT(*) as Frequency FROM book GROUP BY Type ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 607,
        "answer_sql": "SELECT Type FROM book GROUP BY Type HAVING COUNT(*) >= 3;"
    },
    {
        "question_id": 608,
        "answer_sql": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID ORDER BY r.Rating ASC;"
    },
    {
        "question_id": 609,
        "answer_sql": "SELECT b.Title, b.Audio FROM book b JOIN review r ON b.Book_ID = r.Book_ID ORDER BY r.Readers_in_Million DESC;"
    },
    {
        "question_id": 610,
        "answer_sql": "SELECT COUNT(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review);"
    },
    {
        "question_id": 611,
        "answer_sql": "SELECT DISTINCT b.Type FROM book b WHERE b.Chapters > 75 OR b.Chapters < 50;"
    },
    {
        "question_id": 612,
        "answer_sql": "SELECT COUNT(DISTINCT Type) FROM book;"
    },
    {
        "question_id": 613,
        "answer_sql": "SELECT Type, Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review);"
    },
    {
        "question_id": 614,
        "answer_sql": "SELECT COUNT(*) FROM customer;"
    },
    {
        "question_id": 615,
        "answer_sql": "SELECT COUNT(*) FROM customer;"
    },
    {
        "question_id": 616,
        "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;"
    },
    {
        "question_id": 617,
        "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;"
    },
    {
        "question_id": 618,
        "answer_sql": "SELECT customer.Nationality, customer.Card_Credit FROM customer;"
    },
    {
        "question_id": 619,
        "answer_sql": "SELECT customer.Nationality, customer.Card_Credit FROM customer;"
    },
    {
        "question_id": 620,
        "answer_sql": "SELECT Name FROM customer WHERE Nationality IN ('England', 'Australia');"
    },
    {
        "question_id": 621,
        "answer_sql": "SELECT Name FROM customer WHERE Nationality IN ('England', 'Australia');"
    },
    {
        "question_id": 622,
        "answer_sql": "SELECT AVG(customer.Card_Credit) FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID WHERE customer.Level_of_Membership > 1;"
    },
    {
        "question_id": 623,
        "answer_sql": "SELECT AVG(Customer.Card_Credit) FROM customer WHERE Customer.Level_of_Membership > 1;"
    },
    {
        "question_id": 624,
        "answer_sql": "SELECT c.Card_Credit FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE c.Level_of_Membership = (SELECT MAX(Level_of_Membership) FROM customer);"
    },
    {
        "question_id": 625,
        "answer_sql": "SELECT Customer_ID, Card_Credit FROM customer WHERE Level_of_Membership = (SELECT MAX(Level_of_Membership) FROM customer);"
    },
    {
        "question_id": 626,
        "answer_sql": "SELECT Nationality, COUNT(*) as Count FROM customer GROUP BY Nationality;"
    },
    {
        "question_id": 627,
        "answer_sql": "SELECT Customer.Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Customer.Nationality;"
    },
    {
        "question_id": 628,
        "answer_sql": "SELECT Nationality, COUNT(*) as frequency FROM customer GROUP BY Nationality ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 629,
        "answer_sql": "SELECT Nationality, COUNT(*) as Count FROM customer GROUP BY Nationality ORDER BY Count DESC LIMIT 1;"
    },
    {
        "question_id": 630,
        "answer_sql": "SELECT DISTINCT c.Nationality FROM customer c WHERE c.Card_Credit < 50 OR c.Card_Credit > 75;"
    },
    {
        "question_id": 631,
        "answer_sql": "SELECT DISTINCT c.Nationality FROM customer c WHERE c.Card_Credit > 50 AND EXISTS ( SELECT 1 FROM customer c2 WHERE c2.Card_Credit < 75 AND c2.Nationality = c.Nationality )"
    },
    {
        "question_id": 632,
        "answer_sql": "SELECT customer.Name, customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID;"
    },
    {
        "question_id": 633,
        "answer_sql": "SELECT customer.Name, customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID;"
    },
    {
        "question_id": 634,
        "answer_sql": "SELECT c.Name AS Customer_Name, co.Dish_Name AS Dish_Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID ORDER BY co.Quantity DESC;"
    },
    {
        "question_id": 635,
        "answer_sql": "SELECT customer.Name, customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID ORDER BY customer_order.Quantity DESC;"
    },
    {
        "question_id": 636,
        "answer_sql": "SELECT customer.Name, SUM(customer_order.Quantity) AS Total_Quantity FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Customer_ID;"
    },
    {
        "question_id": 637,
        "answer_sql": "SELECT c.Name, SUM(co.Quantity) AS Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Customer_ID;"
    },
    {
        "question_id": 638,
        "answer_sql": "SELECT customer.Customer_ID, SUM(quantity) as Total_Quantity FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Customer_ID HAVING SUM(quantity) > 1;"
    },
    {
        "question_id": 639,
        "answer_sql": "SELECT c.Name FROM customer c JOIN ( SELECT Customer_ID, SUM(Quantity) as TotalQuantity FROM customer_order GROUP BY Customer_ID HAVING SUM(Quantity) > 1 ) co ON c.Customer_ID = co.Customer_ID;"
    },
    {
        "question_id": 640,
        "answer_sql": "SELECT DISTINCT Manager FROM branch;"
    },
    {
        "question_id": 641,
        "answer_sql": "SELECT DISTINCT Manager FROM branch;"
    },
    {
        "question_id": 642,
        "answer_sql": "SELECT DISTINCT c.Name FROM customer c LEFT JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE co.Customer_ID IS NULL;"
    },
    {
        "question_id": 643,
        "answer_sql": "SELECT c.Name FROM customer c LEFT JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE co.Customer_ID IS NULL;"
    },
    {
        "question_id": 644,
        "answer_sql": "SELECT COUNT(*) FROM member;"
    },
    {
        "question_id": 645,
        "answer_sql": "SELECT Name FROM member ORDER BY Age ASC;"
    },
    {
        "question_id": 646,
        "answer_sql": "SELECT Name, Nationality FROM member;"
    },
    {
        "question_id": 647,
        "answer_sql": "SELECT Name FROM member WHERE Nationality != 'England';"
    },
    {
        "question_id": 648,
        "answer_sql": "SELECT Name FROM member WHERE Age IN (19, 20);"
    },
    {
        "question_id": 649,
        "answer_sql": "SELECT Name FROM member ORDER BY Age DESC LIMIT 1;"
    },
    {
        "question_id": 650,
        "answer_sql": "SELECT Nationality, COUNT(*) as Count FROM member GROUP BY Nationality;"
    },
    {
        "question_id": 651,
        "answer_sql": "SELECT Nationality, COUNT(*) as Frequency FROM member GROUP BY Nationality ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 652,
        "answer_sql": "SELECT DISTINCT Nationality FROM member GROUP BY Nationality HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 653,
        "answer_sql": "SELECT member.Name AS Club_Leader, club.Club_Name AS Club_Joined FROM club_leader JOIN club ON club_leader.Club_ID = club.Club_ID JOIN member ON club_leader.Member_ID = member.Member_ID;"
    },
    {
        "question_id": 654,
        "answer_sql": "SELECT club.Club_Name, member.Name FROM club JOIN club_leader ON club.Club_ID = club_leader.Club_ID JOIN member ON club_leader.Member_ID = member.Member_ID WHERE club.Overall_Ranking > 100;"
    },
    {
        "question_id": 655,
        "answer_sql": "SELECT m.Name FROM club_leader cl JOIN member m ON cl.Member_ID = m.Member_ID WHERE cl.Year_Join < '2018';"
    },
    {
        "question_id": 656,
        "answer_sql": "SELECT club.Team_Leader FROM club INNER JOIN club_leader ON club.Club_ID = club_leader.Club_ID WHERE club.Club_Name = 'Houston';"
    },
    {
        "question_id": 657,
        "answer_sql": "SELECT DISTINCT m.Name FROM member m LEFT JOIN club_leader cl ON m.Member_ID = cl.Member_ID WHERE cl.Member_ID IS NULL;"
    },
    {
        "question_id": 658,
        "answer_sql": "SELECT DISTINCT m.Nationality FROM member m WHERE m.Age > 22 AND EXISTS ( SELECT 1 FROM club_leader cl WHERE cl.Member_ID = m.Member_ID AND cl.Year_Join IS NOT NULL AND EXISTS ( SELECT 1 FROM member m2 WHERE m2.Nationality = m.Nationality AND m2.Age < 19 ) );"
    },
    {
        "question_id": 659,
        "answer_sql": "SELECT AVG(m.Age) AS Average_Age FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID;"
    },
    {
        "question_id": 660,
        "answer_sql": "SELECT Club_Name FROM club WHERE Club_Name LIKE '%state%';"
    },
    {
        "question_id": 661,
        "answer_sql": "SELECT DISTINCT cs.Collection_Subset_Name FROM Collection_Subsets cs JOIN Collection_Subset_Members csm ON cs.Collection_Subset_ID = csm.Collection_Subset_ID JOIN Collections c ON c.Collection_ID = csm.Collection_ID;"
    },
    {
        "question_id": 662,
        "answer_sql": "SELECT Collection_Subset_Name FROM Collection_Subsets;"
    },
    {
        "question_id": 663,
        "answer_sql": ""
    },
    {
        "question_id": 664,
        "answer_sql": "SELECT C.Collection_ID, C.Collection_Name, C.Collection_Description FROM Collections C JOIN Collection_Subset_Members CS ON C.Collection_ID = CS.Collection_ID JOIN Collection_Subsets CS_S ON CS.Collection_Subset_ID = CS_S.Collection_Subset_ID WHERE CS_S.Collection_Subset_Name = 'Top collection';"
    },
    {
        "question_id": 665,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID JOIN Document_Objects ON Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Subset_Name;"
    },
    {
        "question_id": 666,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets;"
    },
    {
        "question_id": 667,
        "answer_sql": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 668,
        "answer_sql": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 669,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects;"
    },
    {
        "question_id": 670,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects;"
    },
    {
        "question_id": 671,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin' LIMIT 1;"
    },
    {
        "question_id": 672,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 673,
        "answer_sql": ""
    },
    {
        "question_id": 674,
        "answer_sql": ""
    },
    {
        "question_id": 675,
        "answer_sql": "SELECT Document_Objects.Owner FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID WHERE Document_Objects.Owner = 'Marlin' LIMIT 1;"
    },
    {
        "question_id": 676,
        "answer_sql": "SELECT Document_Objects.Owner FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID WHERE Document_Objects.Owner = 'Marlin'"
    },
    {
        "question_id": 677,
        "answer_sql": ""
    },
    {
        "question_id": 678,
        "answer_sql": ""
    },
    {
        "question_id": 679,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 680,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 681,
        "answer_sql": ""
    },
    {
        "question_id": 682,
        "answer_sql": ""
    },
    {
        "question_id": 683,
        "answer_sql": ""
    },
    {
        "question_id": 684,
        "answer_sql": "SELECT DO.Owner AS Parent_Owner, COUNT(DSM.Document_Object_ID) AS Num_Child_Documents FROM Document_Objects DO LEFT JOIN Document_Subset_Members DSM ON DO.Document_Object_ID = DSM.Document_Object_ID GROUP BY DO.Owner;"
    },
    {
        "question_id": 685,
        "answer_sql": "SELECT Collection_Name FROM Collections;"
    },
    {
        "question_id": 686,
        "answer_sql": "SELECT Collection_Name FROM Collections;"
    },
    {
        "question_id": 687,
        "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Best';"
    },
    {
        "question_id": 688,
        "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Best';"
    },
    {
        "question_id": 689,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections doc_in_coll ON c.Collection_ID = doc_in_coll.Collection_ID JOIN Collections nice ON nice.Collection_ID = doc_in_coll.Collection_ID WHERE nice.Collection_Name = 'Nice'"
    },
    {
        "question_id": 690,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections doc_in_coll ON c.Collection_ID = doc_in_coll.Collection_ID JOIN Collections nice ON nice.Collection_ID = doc_in_coll.Collection_ID WHERE nice.Collection_Name = 'Nice'"
    },
    {
        "question_id": 691,
        "answer_sql": ""
    },
    {
        "question_id": 692,
        "answer_sql": "SELECT DISTINCT c.Collection_Name FROM Collections c WHERE c.Collection_ID NOT IN ( SELECT DISTINCT Parent_Collection_ID FROM Collections WHERE Parent_Collection_ID IS NOT NULL )"
    },
    {
        "question_id": 693,
        "answer_sql": "SELECT DO.Document_Object_ID FROM Document_Objects DO JOIN Documents_in_Collections DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections CO ON DIC.Collection_ID = CO.Collection_ID WHERE CO.Parent_Collection_ID IS NOT NULL;"
    },
    {
        "question_id": 694,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING COUNT(Document_Object_ID) > 1 );"
    },
    {
        "question_id": 695,
        "answer_sql": "SELECT COUNT(*) FROM Collections c JOIN Collection_Subset_Members csm ON c.Collection_ID = csm.Collection_ID JOIN Collection_Subsets cs ON csm.Collection_Subset_ID = cs.Collection_Subset_ID WHERE cs.Collection_Subset_Name = 'Best';"
    },
    {
        "question_id": 696,
        "answer_sql": "SELECT COUNT(*) FROM Collections c JOIN Collections c2 ON c.Collection_ID = c2.Parent_Collection_ID WHERE c.Collection_Name = 'Best';"
    },
    {
        "question_id": 697,
        "answer_sql": "SELECT DO.Document_Object_ID FROM Document_Objects DO JOIN Documents_in_Collections DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections CO ON DIC.Collection_ID = CO.Collection_ID WHERE DO.Owner = 'Ransom'"
    },
    {
        "question_id": 698,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Ransom';"
    },
    {
        "question_id": 699,
        "answer_sql": ""
    },
    {
        "question_id": 700,
        "answer_sql": "SELECT cs.Collection_Subset_ID, cs.Collection_Subset_Name, COUNT(c.Collection_ID) as Num_Collections FROM Collection_Subsets cs LEFT JOIN Collection_Subset_Members csm ON cs.Collection_Subset_ID = csm.Collection_Subset_ID LEFT JOIN Collections c ON csm.Related_Collection_ID = c.Collection_ID GROUP BY cs.Collection_Subset_ID, cs.Collection_Subset_Name;"
    },
    {
        "question_id": 701,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Document_Object_ID) as Number_of_Child FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING COUNT(Document_Object_ID) > 1 ) GROUP BY Document_Object_ID ORDER BY Number_of_Child DESC LIMIT 1;"
    },
    {
        "question_id": 702,
        "answer_sql": ""
    },
    {
        "question_id": 703,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Related_Document_Object_ID) AS Num_Related_Documents FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY Num_Related_Documents ASC LIMIT 1;"
    },
    {
        "question_id": 704,
        "answer_sql": "SELECT DO.Document_Object_ID FROM Document_Objects DO JOIN Documents_in_Collections DIC ON DO.Document_Object_ID = DIC.Document_Object_ID GROUP BY DO.Document_Object_ID ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 705,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Document_Object_ID) as num_documents FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING COUNT(Document_Object_ID) BETWEEN 2 AND 4 ) GROUP BY Document_Object_ID;"
    },
    {
        "question_id": 706,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Related_Document_Object_ID) as Related_Items FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING COUNT(Related_Document_Object_ID) BETWEEN 2 AND 4;"
    },
    {
        "question_id": 707,
        "answer_sql": "SELECT DISTINCT Document_Objects.Owner FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID WHERE Document_Objects.Owner = 'Braeden';"
    },
    {
        "question_id": 708,
        "answer_sql": "SELECT DISTINCT Document_Objects.Owner FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID WHERE Document_Objects.Owner = 'Braeden'"
    },
    {
        "question_id": 709,
        "answer_sql": ""
    },
    {
        "question_id": 710,
        "answer_sql": ""
    },
    {
        "question_id": 711,
        "answer_sql": "SELECT ds.Document_Subset_ID, ds.Document_Subset_Name, COUNT(DISTINCT do.Document_Object_ID) AS Num_Documents FROM Document_Subsets ds LEFT JOIN Document_Subset_Members ds_members ON ds.Document_Subset_ID = ds_members.Document_Subset_ID LEFT JOIN Document_Objects do ON ds_members.Related_Document_Object_ID = do.Document_Object_ID GROUP BY ds.Document_Subset_ID, ds.Document_Subset_Name;"
    },
    {
        "question_id": 712,
        "answer_sql": "SELECT ds.Document_Subset_ID, ds.Document_Subset_Name, COUNT(DISTINCT do.Document_Object_ID) AS Num_Documents FROM Document_Subsets ds LEFT JOIN Document_Subset_Members ds_members ON ds.Document_Subset_ID = ds_members.Document_Subset_ID LEFT JOIN Document_Objects do ON ds_members.Related_Document_Object_ID = do.Document_Object_ID GROUP BY ds.Document_Subset_ID, ds.Document_Subset_Name;"
    },
    {
        "question_id": 713,
        "answer_sql": "SELECT ds.Document_Subset_ID, ds.Document_Subset_Name, COUNT(DISTINCT do.Document_Object_ID) AS Num_Documents FROM Document_Subsets ds JOIN Document_Subset_Members ds_members ON ds.Document_Subset_ID = ds_members.Document_Subset_ID JOIN Document_Objects do ON ds_members.Related_Document_Object_ID = do.Document_Object_ID GROUP BY ds.Document_Subset_ID, ds.Document_Subset_Name ORDER BY Num_Documents DESC LIMIT 1;"
    },
    {
        "question_id": 714,
        "answer_sql": "SELECT ds.Document_Subset_ID, ds.Document_Subset_Name, COUNT(DISTINCT do.Document_Object_ID) AS Num_Documents FROM Document_Subsets ds JOIN Document_Subset_Members ds_members ON ds.Document_Subset_ID = ds_members.Document_Subset_ID JOIN Document_Objects do ON ds_members.Related_Document_Object_ID = do.Document_Object_ID GROUP BY ds.Document_Subset_ID, ds.Document_Subset_Name ORDER BY Num_Documents DESC LIMIT 1;"
    },
    {
        "question_id": 715,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000');"
    },
    {
        "question_id": 716,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000');"
    },
    {
        "question_id": 717,
        "answer_sql": "SELECT Document_Subset_Name, Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID;"
    },
    {
        "question_id": 718,
        "answer_sql": ""
    },
    {
        "question_id": 719,
        "answer_sql": "SELECT c.Collection_Name FROM Document_Objects DO JOIN Documents_in_Collections DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections c ON DIC.Collection_ID = c.Collection_ID WHERE DO.Owner = 'Ransom';"
    },
    {
        "question_id": 720,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections doc_in_coll ON c.Collection_ID = doc_in_coll.Collection_ID JOIN Document_Objects doc_objects ON doc_in_coll.Document_Object_ID = doc_objects.Document_Object_ID WHERE doc_objects.Owner = 'Ransom';"
    },
    {
        "question_id": 721,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Collection_ID) as Collection_Count FROM Documents_in_Collections GROUP BY Document_Object_ID;"
    },
    {
        "question_id": 722,
        "answer_sql": "SELECT Document_Object_ID, COUNT(Collection_ID) as Collection_Count FROM Documents_in_Collections GROUP BY Document_Object_ID;"
    },
    {
        "question_id": 723,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best';"
    },
    {
        "question_id": 724,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best';"
    },
    {
        "question_id": 725,
        "answer_sql": ""
    },
    {
        "question_id": 726,
        "answer_sql": "SELECT COUNT(DISTINCT DO.Document_Object_ID) FROM Collections C JOIN Documents_in_Collections DIC ON C.Collection_ID = DIC.Collection_ID JOIN Document_Objects DO ON DIC.Document_Object_ID = DO.Document_Object_ID WHERE C.Collection_Name = 'Best';"
    },
    {
        "question_id": 727,
        "answer_sql": ""
    },
    {
        "question_id": 728,
        "answer_sql": ""
    },
    {
        "question_id": 729,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' ) AND Related_Document_Object_ID IN ( SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID IN ( SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' ) ) );"
    },
    {
        "question_id": 730,
        "answer_sql": "SELECT DISTINCT DO.Document_Object_ID FROM Document_Objects DO JOIN Documents_in_Collections DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections C ON DIC.Collection_ID = C.Collection_ID JOIN Document_Subset_Members DSM ON DO.Document_Object_ID = DSM.Document_Object_ID WHERE C.Collection_Name = 'Best' AND DSM.Document_Subset_ID IN ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' );"
    },
    {
        "question_id": 731,
        "answer_sql": "SELECT DO.Document_Object_ID FROM Document_Objects AS DO JOIN Documents_in_Collections AS DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections AS C ON DIC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Best' AND DO.Document_Object_ID NOT IN ( SELECT DO.Document_Object_ID FROM Document_Objects AS DO JOIN Document_Subset_Members AS DSM ON DO.Document_Object_ID = DSM.Document_Object_ID WHERE DSM.Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best' ) )"
    },
    {
        "question_id": 732,
        "answer_sql": "SELECT DO.Document_Object_ID FROM Document_Objects AS DO JOIN Documents_in_Collections AS DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections AS C ON DIC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Best' AND DO.Document_Object_ID NOT IN ( SELECT DO.Document_Object_ID FROM Document_Objects AS DO JOIN Document_Subset_Members AS DSM ON DO.Document_Object_ID = DSM.Document_Object_ID JOIN Document_Subsets AS DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Best for 2000' );"
    },
    {
        "question_id": 733,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE (Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000')) OR Document_Object_ID IN (SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')))"
    },
    {
        "question_id": 734,
        "answer_sql": "SELECT DISTINCT DO.Document_Object_ID FROM Document_Objects DO JOIN Documents_in_Collections DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections C ON DIC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Best' OR DIC.Collection_ID IN ( SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best for 2000' );"
    },
    {
        "question_id": 735,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Collections Best ON Best.Collection_ID = c.Collection_ID JOIN Documents_in_Collections DOC_IN_COL ON DOC_IN_COL.Collection_ID = c.Collection_ID JOIN Document_Subset_Members DOC_SUB_MEMBER ON DOC_SUB_MEMBER.Document_Object_ID = DOC_IN_COL.Document_Object_ID WHERE Best.Collection_Name = 'Best';"
    },
    {
        "question_id": 736,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Collections col ON c.Collection_ID = col.Collection_ID WHERE col.Collection_Name = 'Best'"
    },
    {
        "question_id": 737,
        "answer_sql": "SELECT COUNT(*) FROM Collections c JOIN Collections AS c2 ON c.Collection_ID = c2.Parent_Collection_ID WHERE c2.Collection_Name = 'Best';"
    },
    {
        "question_id": 738,
        "answer_sql": "SELECT COUNT(DISTINCT c.Collection_ID) FROM Collections c JOIN Collections co ON c.Collection_ID = co.Parent_Collection_ID WHERE c.Collection_Name = 'Best';"
    },
    {
        "question_id": 739,
        "answer_sql": ""
    },
    {
        "question_id": 740,
        "answer_sql": "SELECT cs.Collection_Subset_Name FROM Collection_Subsets cs JOIN Collection_Subset_Members csm ON cs.Collection_Subset_ID = csm.Collection_Subset_ID JOIN Collections co ON co.Collection_ID = csm.Collection_ID WHERE co.Collection_Name = 'Best';"
    },
    {
        "question_id": 741,
        "answer_sql": "SELECT COUNT(*) FROM songs WHERE name LIKE '%Love%';"
    },
    {
        "question_id": 742,
        "answer_sql": "SELECT name FROM songs ORDER BY name ASC;"
    },
    {
        "question_id": 743,
        "answer_sql": "SELECT s.name, s.language FROM songs s;"
    },
    {
        "question_id": 744,
        "answer_sql": "SELECT MAX(voice_sound_quality), MIN(voice_sound_quality) FROM performance_score;"
    },
    {
        "question_id": 745,
        "answer_sql": "SELECT voice_sound_quality, rhythm_tempo, stage_presence FROM performance_score WHERE participant_id IN ( SELECT id FROM participants WHERE name = 'Freeway' );"
    },
    {
        "question_id": 746,
        "answer_sql": "SELECT s.id, s.language, s.original_artist FROM songs s WHERE s.name != 'Love';"
    },
    {
        "question_id": 747,
        "answer_sql": ""
    },
    {
        "question_id": 748,
        "answer_sql": ""
    },
    {
        "question_id": 749,
        "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id GROUP BY p.id, p.name HAVING COUNT(ps.songs_id) >= 2;"
    },
    {
        "question_id": 750,
        "answer_sql": "SELECT p.id, p.name, p.popularity, COUNT(s.id) as num_songs FROM participants p LEFT JOIN performance_score ps ON p.id = ps.participant_id LEFT JOIN songs s ON ps.songs_id = s.id GROUP BY p.id, p.name, p.popularity ORDER BY num_songs DESC;"
    },
    {
        "question_id": 751,
        "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id WHERE (ps.voice_sound_quality = 5 OR ps.rhythm_tempo = 5)"
    },
    {
        "question_id": 752,
        "answer_sql": ""
    },
    {
        "question_id": 753,
        "answer_sql": "SELECT s.id, s.name FROM songs s JOIN performance_score ps ON s.id = ps.songs_id GROUP BY s.id, s.name ORDER BY COUNT(ps.participant_id) DESC LIMIT 1;"
    },
    {
        "question_id": 754,
        "answer_sql": "SELECT COUNT(*) FROM performance_score WHERE stage_presence < 7 OR stage_presence > 9;"
    },
    {
        "question_id": 755,
        "answer_sql": "SELECT COUNT(*) FROM songs WHERE id NOT IN (SELECT DISTINCT songs_id FROM performance_score);"
    },
    {
        "question_id": 756,
        "answer_sql": "SELECT s.language, AVG(ps.rhythm_tempo) AS avg_rhythm_score FROM songs s JOIN performance_score ps ON s.id = ps.songs_id GROUP BY s.language;"
    },
    {
        "question_id": 757,
        "answer_sql": "SELECT DISTINCT p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON ps.songs_id = s.id WHERE s.language = 'English';"
    },
    {
        "question_id": 758,
        "answer_sql": "SELECT p.name, p.popularity FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON ps.songs_id = s.id WHERE s.language IN ('Croatian', 'English') GROUP BY p.id, p.name, p.popularity;"
    },
    {
        "question_id": 759,
        "answer_sql": "SELECT s.name FROM songs s WHERE s.name LIKE '%Is%';"
    },
    {
        "question_id": 760,
        "answer_sql": "SELECT s.original_artist FROM songs s JOIN performance_score ps ON s.id = ps.songs_id WHERE ps.rhythm_tempo > 5 ORDER BY ps.voice_sound_quality DESC;"
    },
    {
        "question_id": 761,
        "answer_sql": "SELECT COUNT(*) FROM City;"
    },
    {
        "question_id": 762,
        "answer_sql": "SELECT COUNT(*) FROM City;"
    },
    {
        "question_id": 763,
        "answer_sql": "SELECT DISTINCT state FROM City;"
    },
    {
        "question_id": 764,
        "answer_sql": "SELECT DISTINCT state FROM City;"
    },
    {
        "question_id": 765,
        "answer_sql": "SELECT COUNT(DISTINCT country) FROM City;"
    },
    {
        "question_id": 766,
        "answer_sql": "SELECT COUNT(DISTINCT country) FROM City;"
    },
    {
        "question_id": 767,
        "answer_sql": "SELECT city_name, city_code, state, country FROM City;"
    },
    {
        "question_id": 768,
        "answer_sql": "SELECT city_name, city_code, state, country FROM City;"
    },
    {
        "question_id": 769,
        "answer_sql": "SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore';"
    },
    {
        "question_id": 770,
        "answer_sql": "SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore';"
    },
    {
        "question_id": 771,
        "answer_sql": "SELECT city_name FROM City WHERE state = 'PA';"
    },
    {
        "question_id": 772,
        "answer_sql": "SELECT city_name FROM City WHERE state = 'PA';"
    },
    {
        "question_id": 773,
        "answer_sql": "SELECT COUNT(*) FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 774,
        "answer_sql": "SELECT COUNT(*) FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 775,
        "answer_sql": "SELECT city_name FROM City WHERE country = 'USA' ORDER BY latitude;"
    },
    {
        "question_id": 776,
        "answer_sql": "SELECT city_name FROM City WHERE country = 'USA' ORDER BY latitude;"
    },
    {
        "question_id": 777,
        "answer_sql": "SELECT state, COUNT(city_code) as city_count FROM City GROUP BY state;"
    },
    {
        "question_id": 778,
        "answer_sql": "SELECT state, COUNT(city_code) AS city_count FROM City GROUP BY state;"
    },
    {
        "question_id": 779,
        "answer_sql": "SELECT c.country, COUNT(c.city_code) AS Num_cities FROM City c GROUP BY c.country;"
    },
    {
        "question_id": 780,
        "answer_sql": "SELECT country, COUNT(*) as city_count FROM City GROUP BY country;"
    },
    {
        "question_id": 781,
        "answer_sql": "SELECT DISTINCT T3.state FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code JOIN City AS T3 ON T2.city2_code = T3.city_code GROUP BY T3.state HAVING COUNT(T3.state) >= 2;"
    },
    {
        "question_id": 782,
        "answer_sql": "SELECT DISTINCT state FROM City GROUP BY state HAVING COUNT(state) >= 2;"
    },
    {
        "question_id": 783,
        "answer_sql": "SELECT state, COUNT(*) as city_count FROM City GROUP BY state ORDER BY city_count DESC LIMIT 1;"
    },
    {
        "question_id": 784,
        "answer_sql": "SELECT state, COUNT(*) as city_count FROM City GROUP BY state ORDER BY city_count DESC LIMIT 1;"
    },
    {
        "question_id": 785,
        "answer_sql": "SELECT country, COUNT(*) as city_count FROM City GROUP BY country ORDER BY city_count ASC LIMIT 1;"
    },
    {
        "question_id": 786,
        "answer_sql": "SELECT country, COUNT(*) as city_count FROM City GROUP BY country ORDER BY city_count ASC LIMIT 1;"
    },
    {
        "question_id": 787,
        "answer_sql": "SELECT LName, Fname FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE state = 'MD')"
    },
    {
        "question_id": 788,
        "answer_sql": ""
    },
    {
        "question_id": 789,
        "answer_sql": "SELECT COUNT(*) FROM Student WHERE city_code IN ( SELECT city_code FROM City WHERE country = 'China' );"
    },
    {
        "question_id": 790,
        "answer_sql": "SELECT COUNT(*) FROM Student WHERE city_code IN ( SELECT city_code FROM City WHERE country = 'China' );"
    },
    {
        "question_id": 791,
        "answer_sql": "SELECT Fname, Major FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE city_name = 'Baltimore')"
    },
    {
        "question_id": 792,
        "answer_sql": "SELECT Student.Fname, Student.Major FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.city_name = 'Baltimore';"
    },
    {
        "question_id": 793,
        "answer_sql": "SELECT COUNT(*) AS num_students, Country FROM City c JOIN Student s ON c.city_code = s.city_code GROUP BY Country;"
    },
    {
        "question_id": 794,
        "answer_sql": "SELECT Country, COUNT(*) as Number_of_Students FROM City c JOIN Student s ON c.city_code = s.city_code GROUP BY Country;"
    },
    {
        "question_id": 795,
        "answer_sql": "SELECT city_name, COUNT(StuID) as num_students FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY city_name;"
    },
    {
        "question_id": 796,
        "answer_sql": "SELECT city_name, COUNT(StuID) as student_count FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY city_name;"
    },
    {
        "question_id": 797,
        "answer_sql": "SELECT state, COUNT(*) as student_count FROM City c JOIN Student s ON c.city_code = s.city_code GROUP BY state ORDER BY student_count DESC LIMIT 1;"
    },
    {
        "question_id": 798,
        "answer_sql": "SELECT state, COUNT(*) as student_count FROM City c JOIN Student s ON c.city_code = s.city_code GROUP BY state ORDER BY student_count DESC LIMIT 1;"
    },
    {
        "question_id": 799,
        "answer_sql": "SELECT country, COUNT(*) as student_count FROM City c JOIN Student s ON c.city_code = s.city_code GROUP BY country ORDER BY student_count ASC LIMIT 1;"
    },
    {
        "question_id": 800,
        "answer_sql": "SELECT c.country FROM City c JOIN Student s ON c.city_code = s.city_code GROUP BY c.country ORDER BY COUNT(s.StuID) ASC LIMIT 1;"
    },
    {
        "question_id": 801,
        "answer_sql": "SELECT city_name FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_code HAVING COUNT(Student.StuID) >= 3;"
    },
    {
        "question_id": 802,
        "answer_sql": "SELECT city_name FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_code, City.city_name HAVING COUNT(Student.StuID) >= 3;"
    },
    {
        "question_id": 803,
        "answer_sql": ""
    },
    {
        "question_id": 804,
        "answer_sql": "SELECT state, COUNT(*) as student_count FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY state HAVING student_count > 5;"
    },
    {
        "question_id": 805,
        "answer_sql": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');"
    },
    {
        "question_id": 806,
        "answer_sql": "SELECT DISTINCT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE state = 'USA');"
    },
    {
        "question_id": 807,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN (SELECT city_code FROM City WHERE state = 'PA');"
    },
    {
        "question_id": 808,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN (SELECT city_code FROM City WHERE state = 'PA');"
    },
    {
        "question_id": 809,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');"
    },
    {
        "question_id": 810,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE state = 'USA');"
    },
    {
        "question_id": 811,
        "answer_sql": "SELECT d.distance FROM Direct_distance d WHERE d.city1_code = 'BAL' AND d.city2_code = 'CHI';"
    },
    {
        "question_id": 812,
        "answer_sql": "SELECT d.distance FROM Direct_distance d WHERE d.city1_code = 'BAL' AND d.city2_code = 'CHI';"
    },
    {
        "question_id": 813,
        "answer_sql": "SELECT d.distance FROM Direct_distance d WHERE d.city1_code = 'BOS' AND d.city2_code = 'EWR';"
    },
    {
        "question_id": 814,
        "answer_sql": "SELECT d.distance FROM Direct_distance d WHERE d.city1_code = 'BOS' AND d.city2_code = 'EWR';"
    },
    {
        "question_id": 815,
        "answer_sql": "SELECT AVG(distance) AS average_distance, MIN(distance) AS minimum_distance, MAX(distance) AS maximum_distance FROM Direct_distance;"
    },
    {
        "question_id": 816,
        "answer_sql": "SELECT AVG(distance) AS average_distance, MIN(distance) AS minimum_distance, MAX(distance) AS maximum_distance FROM Direct_distance;"
    },
    {
        "question_id": 817,
        "answer_sql": "SELECT DISTINCT d.city1_code, d.city2_code FROM Direct_distance d JOIN Direct_distance d2 ON d.city1_code = d2.city2_code AND d.city2_code = d2.city1_code WHERE d.distance = (SELECT MAX(distance) FROM Direct_distance);"
    },
    {
        "question_id": 818,
        "answer_sql": "SELECT DISTINCT city1_code, city2_code FROM Direct_distance WHERE distance = (SELECT MAX(distance) FROM Direct_distance);"
    },
    {
        "question_id": 819,
        "answer_sql": "SELECT DISTINCT T1.city_code FROM City AS T1, Direct_distance AS T2, City AS T3 WHERE T2.city1_code = T1.city_code AND T2.city2_code = T3.city_code GROUP BY T1.city_code HAVING AVG(T2.distance) < T2.distance;"
    },
    {
        "question_id": 820,
        "answer_sql": "SELECT DISTINCT T1.city_code FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.city_code HAVING SUM(T2.distance) > (SELECT AVG(distance) FROM Direct_distance)"
    },
    {
        "question_id": 821,
        "answer_sql": ""
    },
    {
        "question_id": 822,
        "answer_sql": "SELECT DISTINCT city1_code FROM Direct_distance WHERE distance < 1000;"
    },
    {
        "question_id": 823,
        "answer_sql": "SELECT SUM(distance) FROM Direct_distance d WHERE d.city1_code = 'BAL' OR d.city2_code = 'BAL'"
    },
    {
        "question_id": 824,
        "answer_sql": "SELECT SUM(distance) FROM Direct_distance WHERE city1_code = 'BAL' OR city2_code = 'BAL'"
    },
    {
        "question_id": 825,
        "answer_sql": "SELECT AVG(distance) FROM Direct_distance d JOIN City c1 ON d.city1_code = c1.city_code JOIN City c2 ON d.city2_code = c2.city_code WHERE c1.city_name = 'Boston' AND c2.city_name <> 'Boston';"
    },
    {
        "question_id": 826,
        "answer_sql": "SELECT AVG(distance) FROM Direct_distance WHERE city1_code = 'Boston' OR city2_code = 'Boston';"
    },
    {
        "question_id": 827,
        "answer_sql": ""
    },
    {
        "question_id": 828,
        "answer_sql": ""
    },
    {
        "question_id": 829,
        "answer_sql": "SELECT c.city_name FROM City c JOIN Direct_distance d ON c.city_code = d.city1_code WHERE d.city2_code = 'BOS' ORDER BY d.distance DESC LIMIT 1;"
    },
    {
        "question_id": 830,
        "answer_sql": "SELECT c.city_name FROM City c JOIN Direct_distance d ON c.city_code = d.city1_code WHERE d.distance = (SELECT MAX(distance) FROM Direct_distance WHERE city1_code IN (SELECT city_code FROM City WHERE city_name = 'Boston'))"
    },
    {
        "question_id": 831,
        "answer_sql": "SELECT DISTINCT T1.city_code, SUM(T2.distance) AS Total_Distance FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city1_code GROUP BY T1.city_code;"
    },
    {
        "question_id": 832,
        "answer_sql": "SELECT DISTINCT T3.city_code, SUM(T2.distance) FROM Direct_distance AS T2 JOIN City AS T3 ON T2.city1_code = T3.city_code GROUP BY T3.city_code;"
    },
    {
        "question_id": 833,
        "answer_sql": "SELECT c.city_name, AVG(d.distance) as avg_distance FROM City c LEFT JOIN Direct_distance d ON c.city_code = d.city1_code OR c.city_code = d.city2_code GROUP BY c.city_code, c.city_name;"
    },
    {
        "question_id": 834,
        "answer_sql": "SELECT City.city_name, AVG(Direct_distance.distance) as Average_Distance FROM City LEFT JOIN Direct_distance ON City.city_code = Direct_distance.city1_code GROUP BY City.city_code, City.city_name;"
    },
    {
        "question_id": 835,
        "answer_sql": "SELECT SUM(distance) FROM Direct_distance d JOIN City c1 ON d.city1_code = c1.city_code JOIN City c2 ON d.city2_code = c2.city_code WHERE (c1.city_name = 'Linda Smith' OR c2.city_name = 'Linda Smith') AND (c1.city_name = 'Tracy Kim' OR c2.city_name = 'Tracy Kim');"
    },
    {
        "question_id": 836,
        "answer_sql": "SELECT DISTINCT d.distance FROM Student s1, Student s2, Direct_distance d WHERE s1.LName = 'Smith' AND s1.Fname = 'Linda' AND s2.LName = 'Kim' AND s2.Fname = 'Tracy' AND d.city1_code = s1.city_code AND d.city2_code = s2.city_code;"
    },
    {
        "question_id": 837,
        "answer_sql": "WITH dist AS ( SELECT s.StuID, s.LName, s.Fname, d.distance FROM Student s JOIN Direct_distance d ON s.city_code = d.city1_code WHERE s.LName = 'Smith' ), max_dist AS ( SELECT MAX(distance) as max_dist FROM dist ) SELECT LName, Fname FROM dist WHERE distance = (SELECT max_dist FROM max_dist)"
    },
    {
        "question_id": 838,
        "answer_sql": "WITH dist AS ( SELECT s.StuID, s.LName, s.Fname, d.distance FROM Student s JOIN Direct_distance d ON s.city_code = d.city1_code WHERE s.LName = 'Smith' ), max_dist AS ( SELECT MAX(distance) as max_dist FROM dist ) SELECT StuID, LName, Fname FROM dist WHERE distance = (SELECT max_dist FROM max_dist)"
    },
    {
        "question_id": 839,
        "answer_sql": "SELECT DISTINCT T3.state FROM Student AS T1 JOIN City AS T3 ON T1.city_code = T3.city_code WHERE T1.Fname = 'Linda';"
    },
    {
        "question_id": 840,
        "answer_sql": ""
    },
    {
        "question_id": 841,
        "answer_sql": "SELECT Sailors.* FROM Sailors WHERE Sailors.age > 30;"
    },
    {
        "question_id": 842,
        "answer_sql": "SELECT Sailors.name, Sailors.rating, Sailors.age FROM Sailors WHERE Sailors.age > 30;"
    },
    {
        "question_id": 843,
        "answer_sql": "SELECT name, age FROM Sailors WHERE age < 30;"
    },
    {
        "question_id": 844,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors WHERE Sailors.age < 30;"
    },
    {
        "question_id": 845,
        "answer_sql": "SELECT b.name, b.color FROM Boats b JOIN Reserves r ON b.bid = r.bid WHERE r.sid = 1;"
    },
    {
        "question_id": 846,
        "answer_sql": "SELECT DISTINCT Reserves.bid FROM Reserves WHERE Reserves.sid = 1;"
    },
    {
        "question_id": 847,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;"
    },
    {
        "question_id": 848,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;"
    },
    {
        "question_id": 849,
        "answer_sql": "SELECT DISTINCT bid FROM Reserves;"
    },
    {
        "question_id": 850,
        "answer_sql": "SELECT DISTINCT bid FROM Reserves;"
    },
    {
        "question_id": 851,
        "answer_sql": "SELECT name FROM Sailors WHERE name LIKE '%e%';"
    },
    {
        "question_id": 852,
        "answer_sql": "SELECT name FROM Sailors WHERE name LIKE '%e%';"
    },
    {
        "question_id": 853,
        "answer_sql": "SELECT sid FROM Sailors WHERE sid IN (SELECT MIN(sid) FROM Sailors);"
    },
    {
        "question_id": 854,
        "answer_sql": "SELECT DISTINCT sid FROM Sailors WHERE age > (SELECT MIN(age) FROM Sailors);"
    },
    {
        "question_id": 855,
        "answer_sql": "SELECT DISTINCT Sailors.name FROM Sailors WHERE Sailors.age > ( SELECT MAX(Sailors.age) FROM Sailors WHERE Sailors.rating > 7 );"
    },
    {
        "question_id": 856,
        "answer_sql": "SELECT DISTINCT S1.name FROM Sailors S1 JOIN Reserves R ON S1.sid = R.sid JOIN Sailors S2 ON S1.sid != S2.sid AND S2.rating > 7 WHERE S1.age > S2.age;"
    },
    {
        "question_id": 857,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid, Sailors.name HAVING COUNT(*) > 0;"
    },
    {
        "question_id": 858,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid, Sailors.name HAVING COUNT(*) > 0;"
    },
    {
        "question_id": 859,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid, Sailors.name HAVING COUNT(Reserves.bid) > 1;"
    },
    {
        "question_id": 860,
        "answer_sql": "SELECT DISTINCT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name HAVING COUNT(Reserves.bid) >= 2;"
    },
    {
        "question_id": 861,
        "answer_sql": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 862,
        "answer_sql": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 863,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 864,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 865,
        "answer_sql": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 866,
        "answer_sql": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 867,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 868,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 869,
        "answer_sql": "SELECT DISTINCT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 870,
        "answer_sql": "SELECT DISTINCT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 871,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 872,
        "answer_sql": "SELECT DISTINCT Sailors.sid, Sailors.name FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 873,
        "answer_sql": "SELECT DISTINCT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 874,
        "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT DISTINCT sid FROM Reserves);"
    },
    {
        "question_id": 875,
        "answer_sql": "SELECT Sailors.name FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"
    },
    {
        "question_id": 876,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"
    },
    {
        "question_id": 877,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis');"
    },
    {
        "question_id": 878,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis') AND name != 'Luis';"
    },
    {
        "question_id": 879,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > (SELECT rating FROM Sailors WHERE name = 'Luis') AND Sailors.name != 'Luis'"
    },
    {
        "question_id": 880,
        "answer_sql": "SELECT s.name FROM Sailors s WHERE s.rating > (SELECT rating FROM Sailors WHERE name = 'Luis');"
    },
    {
        "question_id": 881,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > 2;"
    },
    {
        "question_id": 882,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating >= 3;"
    },
    {
        "question_id": 883,
        "answer_sql": "SELECT name, age FROM Sailors ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 884,
        "answer_sql": "SELECT name, age FROM Sailors ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 885,
        "answer_sql": "SELECT COUNT(*) FROM Sailors;"
    },
    {
        "question_id": 886,
        "answer_sql": "SELECT COUNT(*) FROM Sailors;"
    },
    {
        "question_id": 887,
        "answer_sql": "SELECT AVG(Sailors.age) FROM Sailors WHERE Sailors.rating = 7;"
    },
    {
        "question_id": 888,
        "answer_sql": "SELECT AVG(Sailors.age) FROM Sailors WHERE Sailors.rating = 7;"
    },
    {
        "question_id": 889,
        "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 890,
        "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 891,
        "answer_sql": "SELECT AVG(Sailors.rating) AS average_rating, MAX(Sailors.age) AS max_age FROM Sailors;"
    },
    {
        "question_id": 892,
        "answer_sql": "SELECT AVG(Sailors.rating) AS average_rating, MAX(Sailors.age) AS largest_age FROM Sailors;"
    },
    {
        "question_id": 893,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) AS reservations FROM Boats LEFT JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name;"
    },
    {
        "question_id": 894,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) AS reservations FROM Boats LEFT JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name;"
    },
    {
        "question_id": 895,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) AS reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.bid > 50 GROUP BY Boats.bid, Boats.name;"
    },
    {
        "question_id": 896,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) AS reservations_count FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.bid > 50 GROUP BY Boats.name;"
    },
    {
        "question_id": 897,
        "answer_sql": "SELECT B.name, COUNT(*) as reservations FROM Boats B JOIN Reserves R ON B.bid = R.bid GROUP BY B.bid HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 898,
        "answer_sql": "SELECT b.name, COUNT(*) as reservations_count FROM Boats b JOIN Reserves r ON b.bid = r.bid GROUP BY b.bid HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 899,
        "answer_sql": "SELECT b.name, COUNT(*) as reservations FROM Boats b JOIN Reserves r ON b.bid = r.bid WHERE r.sid > 1 GROUP BY b.bid;"
    },
    {
        "question_id": 900,
        "answer_sql": ""
    },
    {
        "question_id": 901,
        "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"
    },
    {
        "question_id": 902,
        "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"
    },
    {
        "question_id": 903,
        "answer_sql": "SELECT name, rating, age FROM Sailors ORDER BY rating DESC, age DESC;"
    },
    {
        "question_id": 904,
        "answer_sql": "SELECT name, rating, age FROM Sailors ORDER BY rating DESC, age DESC;"
    },
    {
        "question_id": 905,
        "answer_sql": "SELECT COUNT(*) FROM Boats;"
    },
    {
        "question_id": 906,
        "answer_sql": "SELECT COUNT(*) FROM Boats;"
    },
    {
        "question_id": 907,
        "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"
    },
    {
        "question_id": 908,
        "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"
    },
    {
        "question_id": 909,
        "answer_sql": "SELECT b.name FROM Boats b JOIN Reserves r ON b.bid = r.bid JOIN Sailors s ON r.sid = s.sid WHERE s.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 910,
        "answer_sql": "SELECT b.name FROM Boats b JOIN Reserves r ON b.bid = r.bid JOIN Sailors s ON r.sid = s.sid WHERE s.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 911,
        "answer_sql": "SELECT s.name FROM Sailors s WHERE s.rating > ( SELECT MIN(s2.rating) FROM Sailors s2 JOIN Reserves r ON s2.sid = r.sid JOIN Boats b ON r.bid = b.bid WHERE b.color = 'red' );"
    },
    {
        "question_id": 912,
        "answer_sql": "SELECT s.name FROM Sailors s WHERE s.rating > ( SELECT MIN(s2.rating) FROM Sailors s2 JOIN Reserves r ON s2.sid = r.sid JOIN Boats b ON r.bid = b.bid WHERE b.color = 'red' );"
    },
    {
        "question_id": 913,
        "answer_sql": "SELECT MAX(rating) FROM Sailors;"
    },
    {
        "question_id": 914,
        "answer_sql": "SELECT MAX(rating) FROM Sailors;"
    },
    {
        "question_id": 915,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon';"
    },
    {
        "question_id": 916,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon';"
    },
    {
        "question_id": 917,
        "answer_sql": "SELECT name, age FROM Sailors ORDER BY rating DESC;"
    },
    {
        "question_id": 918,
        "answer_sql": "SELECT name, age FROM Sailors ORDER BY rating DESC;"
    },
    {
        "question_id": 919,
        "answer_sql": "SELECT Model FROM headphone ORDER BY Price DESC LIMIT 1;"
    },
    {
        "question_id": 920,
        "answer_sql": "SELECT Model, Price FROM headphone ORDER BY Price DESC LIMIT 1;"
    },
    {
        "question_id": 921,
        "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;"
    },
    {
        "question_id": 922,
        "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;"
    },
    {
        "question_id": 923,
        "answer_sql": "SELECT Class, COUNT(*) as Count FROM headphone GROUP BY Class ORDER BY Count DESC LIMIT 1;"
    },
    {
        "question_id": 924,
        "answer_sql": "SELECT Class, SUM(Quantity) AS TotalQuantity FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID GROUP BY Class ORDER BY TotalQuantity DESC LIMIT 1;"
    },
    {
        "question_id": 925,
        "answer_sql": "SELECT Class, SUM(Quantity) as TotalQuantity FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID GROUP BY Class HAVING TotalQuantity > 2;"
    },
    {
        "question_id": 926,
        "answer_sql": "SELECT DISTINCT h.Class FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Class HAVING COUNT(s.Headphone_ID) < 3;"
    },
    {
        "question_id": 927,
        "answer_sql": "SELECT Class, COUNT(*) as Quantity FROM headphone WHERE Price > 200 GROUP BY Class;"
    },
    {
        "question_id": 928,
        "answer_sql": "SELECT COUNT(*) FROM headphone JOIN stock ON headphone.Headphone_ID = stock.Headphone_ID JOIN store ON stock.Store_ID = store.Store_ID WHERE headphone.Price > 200 GROUP BY headphone.Class;"
    },
    {
        "question_id": 929,
        "answer_sql": "SELECT COUNT(DISTINCT `Earpads`) FROM `headphone`;"
    },
    {
        "question_id": 930,
        "answer_sql": "SELECT COUNT(DISTINCT earpads) FROM (SELECT DISTINCT earpads FROM headphone) AS temp_table;"
    },
    {
        "question_id": 931,
        "answer_sql": "SELECT h.Earpads, COUNT(*) AS Total FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Earpads ORDER BY Total DESC LIMIT 2;"
    },
    {
        "question_id": 932,
        "answer_sql": "SELECT h.Earpads, SUM(s.Quantity) AS TotalHeadphones FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Earpads ORDER BY TotalHeadphones DESC LIMIT 2;"
    },
    {
        "question_id": 933,
        "answer_sql": "SELECT Model, Class, Construction FROM headphone ORDER BY Price ASC LIMIT 1;"
    },
    {
        "question_id": 934,
        "answer_sql": "SELECT h.Model, h.Class, h.Construction FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE h.Price = (SELECT MIN(price) FROM headphone);"
    },
    {
        "question_id": 935,
        "answer_sql": "SELECT Construction, AVG(Price) AS Average_Price FROM headphone GROUP BY Construction;"
    },
    {
        "question_id": 936,
        "answer_sql": "SELECT Construction, AVG(Price) AS Average_Price FROM headphone GROUP BY Construction;"
    },
    {
        "question_id": 937,
        "answer_sql": "SELECT h.Class FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE h.Earpads = 'Bowls' OR h.Earpads = 'Comfort Pads' GROUP BY h.Class HAVING COUNT(DISTINCT CASE WHEN h.Earpads = 'Bowls' THEN 1 END) > 0 AND COUNT(DISTINCT CASE WHEN h.Earpads = 'Comfort Pads' THEN 1 END) > 0;"
    },
    {
        "question_id": 938,
        "answer_sql": ""
    },
    {
        "question_id": 939,
        "answer_sql": "SELECT DISTINCT h.Model FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE h.Construction != 'plastic' AND s.Quantity > 0;"
    },
    {
        "question_id": 940,
        "answer_sql": "SELECT DISTINCT h.Earpads FROM headphone h WHERE h.Construction != 'plastic';"
    },
    {
        "question_id": 941,
        "answer_sql": "SELECT Model FROM headphone WHERE Price < (SELECT AVG(Price) FROM headphone);"
    },
    {
        "question_id": 942,
        "answer_sql": "SELECT Model FROM headphone WHERE Price < (SELECT AVG(Price) FROM headphone);"
    },
    {
        "question_id": 943,
        "answer_sql": "SELECT s.Name, s.Date_Opened FROM store s ORDER BY s.Date_Opened;"
    },
    {
        "question_id": 944,
        "answer_sql": "SELECT store.Name, store.Date_Opened FROM store ORDER BY store.Date_Opened;"
    },
    {
        "question_id": 945,
        "answer_sql": "SELECT store.Name, store.Parking FROM store JOIN stock ON store.Store_ID = stock.Store_ID WHERE store.Neighborhood = 'Tarzana';"
    },
    {
        "question_id": 946,
        "answer_sql": "SELECT store.Name, store.Parking FROM store JOIN stock ON store.Store_ID = stock.Store_ID WHERE store.Neighborhood = 'Tarzana';"
    },
    {
        "question_id": 947,
        "answer_sql": "SELECT COUNT(DISTINCT Neighborhood) FROM store;"
    },
    {
        "question_id": 948,
        "answer_sql": "SELECT COUNT(DISTINCT s.Neighborhood) FROM store s;"
    },
    {
        "question_id": 949,
        "answer_sql": "SELECT store.Neighborhood, COUNT(*) as store_count FROM store GROUP BY store.Neighborhood;"
    },
    {
        "question_id": 950,
        "answer_sql": "SELECT store.Neighborhood, COUNT(store.Neighborhood) FROM store GROUP BY store.Neighborhood;"
    },
    {
        "question_id": 951,
        "answer_sql": "SELECT s.Name, COUNT(*) as TotalHeadphones FROM store s JOIN stock st ON s.Store_ID = st.Store_ID GROUP BY s.Store_ID ORDER BY TotalHeadphones DESC LIMIT 1;"
    },
    {
        "question_id": 952,
        "answer_sql": "SELECT s.Name, SUM(stock.Quantity) AS TotalQuantity FROM store s JOIN stock ON s.Store_ID = stock.Store_ID GROUP BY s.Name;"
    },
    {
        "question_id": 953,
        "answer_sql": "SELECT s.Name FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Store_ID IS NULL;"
    },
    {
        "question_id": 954,
        "answer_sql": "SELECT s.Name FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL;"
    },
    {
        "question_id": 955,
        "answer_sql": "SELECT h.Model FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE s.Headphone_ID IS NULL;"
    },
    {
        "question_id": 956,
        "answer_sql": "SELECT DISTINCT h.Model FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE s.Headphone_ID IS NULL;"
    },
    {
        "question_id": 957,
        "answer_sql": "SELECT H.Model, SUM(S.Quantity) as Total_Stock FROM headphone H JOIN stock S ON H.Headphone_ID = S.Headphone_ID GROUP BY H.Model ORDER BY Total_Stock DESC LIMIT 1;"
    },
    {
        "question_id": 958,
        "answer_sql": "SELECT H.Model FROM headphone H JOIN stock S ON H.Headphone_ID = S.Headphone_ID GROUP BY H.Model ORDER BY S.Quantity DESC LIMIT 1;"
    },
    {
        "question_id": 959,
        "answer_sql": "SELECT COUNT(*) FROM stock JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Neighborhood = 'Woodman';"
    },
    {
        "question_id": 960,
        "answer_sql": "SELECT SUM(stock.Quantity) FROM stock JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = 'Woodman';"
    },
    {
        "question_id": 961,
        "answer_sql": "SELECT s.Neighborhood FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Store_ID IS NULL;"
    },
    {
        "question_id": 962,
        "answer_sql": "SELECT s.Neighborhood FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Store_ID IS NULL;"
    },
    {
        "question_id": 963,
        "answer_sql": "SELECT COUNT(DISTINCT author_id) FROM Author;"
    },
    {
        "question_id": 964,
        "answer_sql": "SELECT COUNT(*) FROM Author;"
    },
    {
        "question_id": 965,
        "answer_sql": "SELECT COUNT(*) FROM Paper;"
    },
    {
        "question_id": 966,
        "answer_sql": "SELECT COUNT(*) FROM Paper;"
    },
    {
        "question_id": 967,
        "answer_sql": "SELECT COUNT(DISTINCT affiliation_id) FROM Affiliation;"
    },
    {
        "question_id": 968,
        "answer_sql": "SELECT COUNT(*) FROM Affiliation;"
    },
    {
        "question_id": 969,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE year = 2000;"
    },
    {
        "question_id": 970,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE year = 2000;"
    },
    {
        "question_id": 971,
        "answer_sql": "SELECT COUNT(*) FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE p.year = 2009 AND a.name = 'Columbia University';"
    },
    {
        "question_id": 972,
        "answer_sql": "SELECT COUNT(*) FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name = 'Columbia University' AND p.year = 2009;"
    },
    {
        "question_id": 973,
        "answer_sql": ""
    },
    {
        "question_id": 974,
        "answer_sql": ""
    },
    {
        "question_id": 975,
        "answer_sql": "SELECT DISTINCT P.venue, P.year FROM Paper P ORDER BY P.year;"
    },
    {
        "question_id": 976,
        "answer_sql": ""
    },
    {
        "question_id": 977,
        "answer_sql": "SELECT p.title, p.paper_id FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name = 'Harvard University';"
    },
    {
        "question_id": 978,
        "answer_sql": "SELECT p.title, p.paper_id FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name = 'Harvard University';"
    },
    {
        "question_id": 979,
        "answer_sql": ""
    },
    {
        "question_id": 980,
        "answer_sql": ""
    },
    {
        "question_id": 981,
        "answer_sql": "SELECT p.paper_id, p.title FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name IN ('Stanford University', 'Columbia University');"
    },
    {
        "question_id": 982,
        "answer_sql": ""
    },
    {
        "question_id": 983,
        "answer_sql": "SELECT p.paper_id, p.title FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Author a ON al.author_id = a.author_id WHERE (a.name = 'Mckeown, Kathleen' OR a.name = 'Rambow, Owen') GROUP BY p.paper_id, p.title;"
    },
    {
        "question_id": 984,
        "answer_sql": "SELECT p.title, p.paper_id FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Author a ON al.author_id = a.author_id WHERE a.name IN ('Mckeown, Kathleen', 'Rambow, Owen') GROUP BY p.title, p.paper_id;"
    },
    {
        "question_id": 985,
        "answer_sql": ""
    },
    {
        "question_id": 986,
        "answer_sql": ""
    },
    {
        "question_id": 987,
        "answer_sql": "SELECT p.title, p.paper_id FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Author a ON al.author_id = a.author_id WHERE (a.name = 'Mckeown, Kathleen' OR a.name = 'Rambow, Owen')"
    },
    {
        "question_id": 988,
        "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('McKean, Kathleen', 'Rambow, Owen')"
    },
    {
        "question_id": 989,
        "answer_sql": ""
    },
    {
        "question_id": 990,
        "answer_sql": ""
    },
    {
        "question_id": 991,
        "answer_sql": ""
    },
    {
        "question_id": 992,
        "answer_sql": ""
    },
    {
        "question_id": 993,
        "answer_sql": "SELECT DISTINCT a.name FROM Author a JOIN Author_list al ON a.author_id = al.author_id GROUP BY a.author_id HAVING COUNT(al.paper_id) > 50;"
    },
    {
        "question_id": 994,
        "answer_sql": "SELECT DISTINCT a.author_id, a.name FROM Author a JOIN Author_list al ON a.author_id = al.author_id GROUP BY a.author_id, a.name HAVING COUNT(al.paper_id) > 50;"
    },
    {
        "question_id": 995,
        "answer_sql": ""
    },
    {
        "question_id": 996,
        "answer_sql": ""
    },
    {
        "question_id": 997,
        "answer_sql": "SELECT p.venue, p.year, COUNT(*) as count FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id GROUP BY p.venue, p.year ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 998,
        "answer_sql": "SELECT p.venue, p.year FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id GROUP BY p.venue, p.year ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 999,
        "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1000,
        "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1001,
        "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'A00-1002';"
    },
    {
        "question_id": 1002,
        "answer_sql": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id = 'A00-1002';"
    },
    {
        "question_id": 1003,
        "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'D12-1027';"
    },
    {
        "question_id": 1004,
        "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'D12-1027';"
    },
    {
        "question_id": 1005,
        "answer_sql": "SELECT p.paper_id, COUNT(c.cited_paper_id) as num_citations FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1006,
        "answer_sql": "SELECT p.paper_id, COUNT(c.cited_paper_id) AS num_citations FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1007,
        "answer_sql": "SELECT p.title, COUNT(c.cited_paper_id) as citation_count FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id ORDER BY citation_count DESC LIMIT 1;"
    },
    {
        "question_id": 1008,
        "answer_sql": "SELECT p.title FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id ORDER BY COUNT(c.cited_paper_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1009,
        "answer_sql": "SELECT p.paper_id, COUNT(c.cited_paper_id) AS num_citations FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id ORDER BY num_citations DESC LIMIT 10;"
    },
    {
        "question_id": 1010,
        "answer_sql": "SELECT p.paper_id, COUNT(c.cited_paper_id) AS citation_count FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id ORDER BY citation_count DESC LIMIT 10;"
    },
    {
        "question_id": 1011,
        "answer_sql": "SELECT COUNT(*) FROM Citation c JOIN Author_list al ON c.paper_id = al.paper_id JOIN Author a ON al.author_id = a.author_id WHERE a.name = 'Mckeown, Kathleen';"
    },
    {
        "question_id": 1012,
        "answer_sql": ""
    },
    {
        "question_id": 1013,
        "answer_sql": ""
    },
    {
        "question_id": 1014,
        "answer_sql": ""
    },
    {
        "question_id": 1015,
        "answer_sql": "SELECT a.name, COUNT(c.cited_paper_id) AS num_citations FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Citation c ON al.paper_id = c.paper_id GROUP BY a.author_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1016,
        "answer_sql": "SELECT a.name, COUNT(c.cited_paper_id) AS num_citations FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Citation c ON al.paper_id = c.paper_id GROUP BY a.author_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1017,
        "answer_sql": ""
    },
    {
        "question_id": 1018,
        "answer_sql": ""
    },
    {
        "question_id": 1019,
        "answer_sql": "SELECT DISTINCT P.venue, P.year FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Affiliation A ON AL.affiliation_id = A.affiliation_id WHERE A.name = 'Columbia University';"
    },
    {
        "question_id": 1020,
        "answer_sql": "SELECT DISTINCT P.venue, P.year FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Affiliation A ON AL.affiliation_id = A.affiliation_id WHERE A.name = 'Columbia University';"
    },
    {
        "question_id": 1021,
        "answer_sql": "SELECT author_id, COUNT(*) as paper_count FROM Author_list JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.year = 2009 GROUP BY author_id ORDER BY paper_count DESC LIMIT 1;"
    },
    {
        "question_id": 1022,
        "answer_sql": "SELECT a.name FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Paper p ON al.paper_id = p.paper_id WHERE p.year = 2009 GROUP BY a.author_id, a.name ORDER BY COUNT(al.paper_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1023,
        "answer_sql": "SELECT A.name, COUNT(*) as paper_count FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.year = 2009 GROUP BY A.name ORDER BY paper_count DESC LIMIT 3;"
    },
    {
        "question_id": 1024,
        "answer_sql": "SELECT A.affiliation_id, COUNT(P.paper_id) AS paper_count FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.year = 2009 GROUP BY A.affiliation_id ORDER BY paper_count DESC LIMIT 3;"
    },
    {
        "question_id": 1025,
        "answer_sql": "SELECT COUNT(*) FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name = 'Columbia University' AND p.year <= 2009;"
    },
    {
        "question_id": 1026,
        "answer_sql": "SELECT COUNT(*) FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name = 'Columbia University' AND p.year <= 2009;"
    },
    {
        "question_id": 1027,
        "answer_sql": "SELECT COUNT(*) FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name = 'Stanford University' AND p.year BETWEEN 2000 AND 2009;"
    },
    {
        "question_id": 1028,
        "answer_sql": "SELECT COUNT(*) FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id JOIN Affiliation a ON al.affiliation_id = a.affiliation_id WHERE a.name = 'Stanford University' AND p.year BETWEEN 2000 AND 2009;"
    },
    {
        "question_id": 1029,
        "answer_sql": "SELECT p.title FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id GROUP BY p.paper_id ORDER BY COUNT(al.author_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1030,
        "answer_sql": "SELECT p.title FROM Paper p JOIN Author_list al ON p.paper_id = al.paper_id GROUP BY p.paper_id ORDER BY COUNT(al.author_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1031,
        "answer_sql": "SELECT COUNT(DISTINCT al.author_id) FROM Author a JOIN Author_list al ON a.author_id = al.author_id WHERE a.name = 'Mckeown, Kathleen';"
    },
    {
        "question_id": 1032,
        "answer_sql": "SELECT COUNT(DISTINCT al.author_id) FROM Author a JOIN Author_list al ON a.author_id = al.author_id WHERE a.name = 'Mckeown, Kathleen';"
    },
    {
        "question_id": 1033,
        "answer_sql": ""
    },
    {
        "question_id": 1034,
        "answer_sql": ""
    },
    {
        "question_id": 1035,
        "answer_sql": "SELECT DISTINCT P.paper_id FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id WHERE P.title LIKE '%translation%';"
    },
    {
        "question_id": 1036,
        "answer_sql": "SELECT DISTINCT P.paper_id FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id WHERE P.title LIKE '%translation%';"
    },
    {
        "question_id": 1037,
        "answer_sql": ""
    },
    {
        "question_id": 1038,
        "answer_sql": ""
    },
    {
        "question_id": 1039,
        "answer_sql": ""
    },
    {
        "question_id": 1040,
        "answer_sql": ""
    },
    {
        "question_id": 1041,
        "answer_sql": "SELECT year, COUNT(*) as num_papers FROM Paper GROUP BY year;"
    },
    {
        "question_id": 1042,
        "answer_sql": "SELECT p.venue, p.year, COUNT(*) as paper_count FROM Paper p GROUP BY p.venue, p.year ORDER BY p.venue, p.year;"
    },
    {
        "question_id": 1043,
        "answer_sql": "SELECT A.affiliation_id, COUNT(P.paper_id) as total_papers FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.paper_id = P.paper_id GROUP BY A.affiliation_id;"
    },
    {
        "question_id": 1044,
        "answer_sql": "SELECT A.affiliation_id, COUNT(DISTINCT P.paper_id) AS num_papers FROM Author_list AL JOIN Affiliation A ON AL.affiliation_id = A.affiliation_id JOIN Paper P ON AL.paper_id = P.paper_id GROUP BY A.affiliation_id;"
    },
    {
        "question_id": 1045,
        "answer_sql": "SELECT p.title FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id HAVING COUNT(c.cited_paper_id) > 50;"
    },
    {
        "question_id": 1046,
        "answer_sql": "SELECT p.title FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id HAVING COUNT(c.cited_paper_id) > 50;"
    },
    {
        "question_id": 1047,
        "answer_sql": "SELECT COUNT(DISTINCT a.author_id) FROM Author a LEFT JOIN Author_list al ON a.author_id = al.author_id WHERE al.paper_id NOT IN ( SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(cited_paper_id) > 50 );"
    },
    {
        "question_id": 1048,
        "answer_sql": "SELECT COUNT(DISTINCT a.author_id) FROM Author a LEFT JOIN Author_list al ON a.author_id = al.author_id LEFT JOIN Paper p ON al.paper_id = p.paper_id LEFT JOIN Citation c ON p.paper_id = c.paper_id WHERE c.cited_paper_id IS NULL OR c.cited_paper_id = p.paper_id;"
    },
    {
        "question_id": 1049,
        "answer_sql": "SELECT DISTINCT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009;"
    },
    {
        "question_id": 1050,
        "answer_sql": "SELECT DISTINCT A.author_id, A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009;"
    },
    {
        "question_id": 1051,
        "answer_sql": "SELECT DISTINCT A.name FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id WHERE AL.paper_id IS NULL;"
    },
    {
        "question_id": 1052,
        "answer_sql": "SELECT DISTINCT A.name FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id WHERE AL.paper_id IS NULL;"
    },
    {
        "question_id": 1053,
        "answer_sql": "SELECT COUNT(*) FROM conference;"
    },
    {
        "question_id": 1054,
        "answer_sql": "SELECT COUNT(*) FROM conference;"
    },
    {
        "question_id": 1055,
        "answer_sql": "SELECT DISTINCT Conference_Name FROM conference;"
    },
    {
        "question_id": 1056,
        "answer_sql": "SELECT DISTINCT Conference_Name FROM conference;"
    },
    {
        "question_id": 1057,
        "answer_sql": "SELECT conference.Conference_Name, conference.Year, conference.Location FROM conference;"
    },
    {
        "question_id": 1058,
        "answer_sql": "SELECT Conference_Name, Year, Location FROM conference;"
    },
    {
        "question_id": 1059,
        "answer_sql": "SELECT conference.Conference_Name, COUNT(*) as participation_count FROM conference LEFT JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Conference_Name;"
    },
    {
        "question_id": 1060,
        "answer_sql": "SELECT Conference_Name, COUNT(*) as Frequency FROM conference GROUP BY Conference_Name;"
    },
    {
        "question_id": 1061,
        "answer_sql": "SELECT Year, COUNT(*) as NumConferences FROM conference GROUP BY Year;"
    },
    {
        "question_id": 1062,
        "answer_sql": "SELECT COUNT(DISTINCT Year) FROM conference;"
    },
    {
        "question_id": 1063,
        "answer_sql": "SELECT Year, COUNT(*) as conference_count FROM conference GROUP BY Year ORDER BY conference_count ASC LIMIT 1;"
    },
    {
        "question_id": 1064,
        "answer_sql": "SELECT MIN(Year) FROM conference;"
    },
    {
        "question_id": 1065,
        "answer_sql": "SELECT Location FROM conference GROUP BY Location HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 1066,
        "answer_sql": "SELECT c.Location FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Location HAVING COUNT(DISTINCT cp.Conference_ID) >= 2;"
    },
    {
        "question_id": 1067,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location, institution.Founded FROM institution;"
    },
    {
        "question_id": 1068,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location, institution.Founded FROM institution;"
    },
    {
        "question_id": 1069,
        "answer_sql": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900;"
    },
    {
        "question_id": 1070,
        "answer_sql": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900;"
    },
    {
        "question_id": 1071,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location FROM institution ORDER BY institution.Founded DESC LIMIT 1;"
    },
    {
        "question_id": 1072,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location FROM institution WHERE institution.Founded = (SELECT MAX(Founded) FROM institution);"
    },
    {
        "question_id": 1073,
        "answer_sql": "SELECT institution.Institution_Name, COUNT(staff.staff_ID) as num_staff FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_Name;"
    },
    {
        "question_id": 1074,
        "answer_sql": "SELECT institution.Institution_ID, COUNT(staff.staff_ID) as Staff_Count, staff.name FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_ID, staff.name"
    },
    {
        "question_id": 1075,
        "answer_sql": ""
    },
    {
        "question_id": 1076,
        "answer_sql": "SELECT institution.Institution_Name FROM institution LEFT JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE staff.staff_ID IS NULL;"
    },
    {
        "question_id": 1077,
        "answer_sql": "SELECT s.name FROM staff s WHERE s.Age > (SELECT AVG(Age) FROM staff)"
    },
    {
        "question_id": 1078,
        "answer_sql": "SELECT s.name FROM staff s WHERE s.Age > (SELECT AVG(Age) FROM staff)"
    },
    {
        "question_id": 1079,
        "answer_sql": "SELECT MAX(Age), MIN(Age) FROM staff WHERE Institution_ID IN ( SELECT Institution_ID FROM institution WHERE Location = 'United States' )"
    },
    {
        "question_id": 1080,
        "answer_sql": "SELECT MAX(Age), MIN(Age) FROM staff;"
    },
    {
        "question_id": 1081,
        "answer_sql": "SELECT c.Conference_Name FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.Nationality = 'Canada'"
    },
    {
        "question_id": 1082,
        "answer_sql": "SELECT DISTINCT c.Conference_Name FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.Nationality = 'Canada'"
    },
    {
        "question_id": 1083,
        "answer_sql": ""
    },
    {
        "question_id": 1084,
        "answer_sql": ""
    },
    {
        "question_id": 1085,
        "answer_sql": "SELECT DISTINCT s.name FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE c.Conference_Name IN ('ACL', 'Naccl') GROUP BY s.name;"
    },
    {
        "question_id": 1086,
        "answer_sql": "SELECT DISTINCT s.name FROM conference_participation cp JOIN conference c ON cp.Conference_ID = c.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE c.Conference_Name IN ('ACL', 'NACCL')"
    },
    {
        "question_id": 1087,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Year IN (2003, 2004);"
    },
    {
        "question_id": 1088,
        "answer_sql": "SELECT DISTINCT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Year IN (2003, 2004);"
    },
    {
        "question_id": 1089,
        "answer_sql": "SELECT conference.Conference_Name, conference.Year, COUNT(conference_participation.staff_ID) as Participants FROM conference LEFT JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Conference_ID;"
    },
    {
        "question_id": 1090,
        "answer_sql": "SELECT c.Conference_ID, c.Conference_Name, c.Year, COUNT(cp.staff_ID) as Participants FROM conference c LEFT JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_ID, c.Conference_Name, c.Year;"
    },
    {
        "question_id": 1091,
        "answer_sql": "SELECT c.Conference_Name FROM conference c JOIN ( SELECT Conference_ID FROM conference_participation GROUP BY Conference_ID ORDER BY COUNT(*) DESC LIMIT 2 ) sub ON c.Conference_ID = sub.Conference_ID;"
    },
    {
        "question_id": 1092,
        "answer_sql": "SELECT c.Conference_Name FROM conference c JOIN ( SELECT Conference_ID FROM conference_participation GROUP BY Conference_ID ORDER BY COUNT(*) DESC LIMIT 2 ) subquery ON c.Conference_ID = subquery.Conference_ID;"
    },
    {
        "question_id": 1093,
        "answer_sql": "SELECT DISTINCT s.name, s.Nationality FROM staff s LEFT JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IS NULL;"
    },
    {
        "question_id": 1094,
        "answer_sql": "SELECT DISTINCT s.name, s.Nationality FROM staff s LEFT JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IS NULL;"
    },
    {
        "question_id": 1095,
        "answer_sql": ""
    },
    {
        "question_id": 1096,
        "answer_sql": ""
    },
    {
        "question_id": 1097,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1098,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1099,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age;"
    },
    {
        "question_id": 1100,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age ASC;"
    },
    {
        "question_id": 1101,
        "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1102,
        "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1103,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age < 35;"
    },
    {
        "question_id": 1104,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age < 35;"
    },
    {
        "question_id": 1105,
        "answer_sql": "SELECT location FROM Hangar WHERE plane_name = 'F-14 Fighter';"
    },
    {
        "question_id": 1106,
        "answer_sql": "SELECT location FROM Hangar WHERE plane_name = 'F-14 Fighter';"
    },
    {
        "question_id": 1107,
        "answer_sql": "SELECT COUNT(DISTINCT H.location) FROM Hangar H;"
    },
    {
        "question_id": 1108,
        "answer_sql": "SELECT COUNT(DISTINCT location) FROM Hangar;"
    },
    {
        "question_id": 1109,
        "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32;"
    },
    {
        "question_id": 1110,
        "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32;"
    },
    {
        "question_id": 1111,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1112,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1113,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name IN (SELECT pilot_name FROM PilotSkills WHERE age < 35) AND Hangar.plane_name = 'B-52 Bomber';"
    },
    {
        "question_id": 1114,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35 AND Hangar.plane_name LIKE '%B-52%';"
    },
    {
        "question_id": 1115,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age ASC LIMIT 1;"
    },
    {
        "question_id": 1116,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age ASC LIMIT 1;"
    },
    {
        "question_id": 1117,
        "answer_sql": "SELECT plane_name FROM Hangar GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1118,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1119,
        "answer_sql": ""
    },
    {
        "question_id": 1120,
        "answer_sql": "SELECT plane_name FROM Hangar ORDER BY plane_name LIMIT 1;"
    },
    {
        "question_id": 1121,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Chicago';"
    },
    {
        "question_id": 1122,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Chicago';"
    },
    {
        "question_id": 1123,
        "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Smith' AND age = 41;"
    },
    {
        "question_id": 1124,
        "answer_sql": ""
    },
    {
        "question_id": 1125,
        "answer_sql": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills;"
    },
    {
        "question_id": 1126,
        "answer_sql": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills;"
    },
    {
        "question_id": 1127,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = 'Smith';"
    },
    {
        "question_id": 1128,
        "answer_sql": "SELECT COUNT(Hangar.plane_name) FROM Hangar INNER JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.pilot_name = 'Smith';"
    },
    {
        "question_id": 1129,
        "answer_sql": "SELECT COUNT(distinct p.plane_name) FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age > 40;"
    },
    {
        "question_id": 1130,
        "answer_sql": "SELECT COUNT(distinct p.plane_name) FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age > 40;"
    },
    {
        "question_id": 1131,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"
    },
    {
        "question_id": 1132,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"
    },
    {
        "question_id": 1133,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC;"
    },
    {
        "question_id": 1134,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills ORDER BY age DESC;"
    },
    {
        "question_id": 1135,
        "answer_sql": "SELECT Hangar.location FROM Hangar ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1136,
        "answer_sql": "SELECT Hangar.plane_name, Hangar.location FROM Hangar ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1137,
        "answer_sql": "SELECT DISTINCT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1138,
        "answer_sql": "SELECT DISTINCT Hangar.plane_name FROM Hangar ORDER BY Hangar.plane_name ASC;"
    },
    {
        "question_id": 1139,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"
    },
    {
        "question_id": 1140,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"
    },
    {
        "question_id": 1141,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30);"
    },
    {
        "question_id": 1142,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30);"
    },
    {
        "question_id": 1143,
        "answer_sql": "SELECT DISTINCT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.plane_name = 'Piper Cub' AND P.plane_name != 'B-52 Bomber';"
    },
    {
        "question_id": 1144,
        "answer_sql": "SELECT DISTINCT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.plane_name = 'Piper Cub' AND NOT EXISTS ( SELECT 1 FROM PilotSkills PS WHERE PS.pilot_name = P.pilot_name AND PS.plane_name = 'B-52 Bomber' );"
    },
    {
        "question_id": 1145,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'B-52 Bomber');"
    },
    {
        "question_id": 1146,
        "answer_sql": "SELECT p1.pilot_name FROM PilotSkills p1 JOIN PilotSkills p2 ON p1.pilot_name = p2.pilot_name WHERE p1.plane_name = 'Piper Cub' AND p2.plane_name = 'B-52 Bomber';"
    },
    {
        "question_id": 1147,
        "answer_sql": "SELECT AVG(age) AS average_age, MIN(age) AS smallest_age FROM PilotSkills;"
    },
    {
        "question_id": 1148,
        "answer_sql": "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age FROM PilotSkills;"
    },
    {
        "question_id": 1149,
        "answer_sql": ""
    },
    {
        "question_id": 1150,
        "answer_sql": "SELECT DISTINCT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.location IN ('Austin', 'Boston');"
    },
    {
        "question_id": 1151,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'F-14 Fighter');"
    },
    {
        "question_id": 1152,
        "answer_sql": "SELECT DISTINCT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.plane_name IN ('Piper Cub', 'F-14 Fighter');"
    },
    {
        "question_id": 1153,
        "answer_sql": "SELECT plane_name, AVG(age) as average_age FROM PilotSkills GROUP BY plane_name;"
    },
    {
        "question_id": 1154,
        "answer_sql": "SELECT H.plane_name, AVG(P.age) AS average_age FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name GROUP BY H.plane_name;"
    },
    {
        "question_id": 1155,
        "answer_sql": "SELECT plane_name, COUNT(*) as count FROM Hangar GROUP BY plane_name;"
    },
    {
        "question_id": 1156,
        "answer_sql": "SELECT plane_name, COUNT(*) as count FROM PilotSkills GROUP BY plane_name;"
    },
    {
        "question_id": 1157,
        "answer_sql": "SELECT H.plane_name, P.pilot_name FROM Hangar H JOIN PilotSkills P ON H.plane_name = P.plane_name WHERE (H.plane_name, P.age) IN ( SELECT plane_name, MAX(age) FROM PilotSkills GROUP BY plane_name ) ORDER BY H.plane_name;"
    },
    {
        "question_id": 1158,
        "answer_sql": "SELECT H.plane_name, P.pilot_name FROM Hangar H JOIN PilotSkills P ON H.plane_name = P.plane_name WHERE P.age = (SELECT MIN(age) FROM PilotSkills WHERE plane_name = H.plane_name) ORDER BY H.plane_name;"
    },
    {
        "question_id": 1159,
        "answer_sql": "SELECT P.pilot_name, H.plane_name, P.age FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE (P.plane_name, P.age) IN ( SELECT plane_name, MAX(age) FROM PilotSkills GROUP BY plane_name )"
    },
    {
        "question_id": 1160,
        "answer_sql": "SELECT H.plane_name, P.pilot_name FROM Hangar H JOIN PilotSkills P ON H.plane_name = P.plane_name WHERE P.age = (SELECT MIN(age) FROM PilotSkills WHERE plane_name = H.plane_name)"
    },
    {
        "question_id": 1161,
        "answer_sql": "SELECT pilot_name, MAX(age) AS max_age FROM PilotSkills GROUP BY pilot_name;"
    },
    {
        "question_id": 1162,
        "answer_sql": "SELECT pilot_name, MAX(age) AS max_age FROM PilotSkills GROUP BY pilot_name;"
    },
    {
        "question_id": 1163,
        "answer_sql": "SELECT H.location, COUNT(PS.pilot_name), AVG(PS.age) FROM PilotSkills PS JOIN Hangar H ON PS.plane_name = H.plane_name GROUP BY H.location;"
    },
    {
        "question_id": 1164,
        "answer_sql": "SELECT H.location, COUNT(PS.pilot_name) AS num_pilots, AVG(PS.age) AS avg_age FROM Hangar H LEFT JOIN PilotSkills PS ON H.plane_name = PS.plane_name GROUP BY H.location;"
    },
    {
        "question_id": 1165,
        "answer_sql": "SELECT COUNT(DISTINCT ps.pilot_name) FROM PilotSkills ps JOIN Hangar h ON ps.plane_name = h.plane_name GROUP BY h.plane_name HAVING AVG(ps.age) < 35;"
    },
    {
        "question_id": 1166,
        "answer_sql": "SELECT plane_name, COUNT(DISTINCT pilot_name) AS num_pilots FROM PilotSkills WHERE age < 35 GROUP BY plane_name;"
    },
    {
        "question_id": 1167,
        "answer_sql": "SELECT H.location FROM Hangar H JOIN PilotSkills PS ON H.plane_name = PS.plane_name WHERE PS.age = (SELECT MIN(age) FROM PilotSkills)"
    },
    {
        "question_id": 1168,
        "answer_sql": "SELECT H.location FROM PilotSkills PS JOIN Hangar H ON PS.plane_name = H.plane_name WHERE PS.age = (SELECT MIN(age) FROM PilotSkills)"
    },
    {
        "question_id": 1169,
        "answer_sql": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin';"
    },
    {
        "question_id": 1170,
        "answer_sql": "SELECT PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin';"
    },
    {
        "question_id": 1171,
        "answer_sql": "SELECT DISTINCT p.pilot_name FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age > ( SELECT age FROM PilotSkills ps WHERE ps.plane_name = 'Piper Cub' ) ORDER BY p.pilot_name ASC;"
    },
    {
        "question_id": 1172,
        "answer_sql": "SELECT DISTINCT ps.pilot_name FROM PilotSkills ps WHERE ps.age > ( SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'Piper Cub' ) ORDER BY ps.pilot_name ASC;"
    },
    {
        "question_id": 1173,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age < (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'F-14 Fighter');"
    },
    {
        "question_id": 1174,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills p WHERE p.age < (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'F-14')"
    },
    {
        "question_id": 1175,
        "answer_sql": "SELECT DISTINCT H.plane_name FROM Hangar H JOIN PilotSkills P ON H.plane_name = P.plane_name WHERE H.plane_name LIKE '%Bomber%';"
    },
    {
        "question_id": 1176,
        "answer_sql": "SELECT DISTINCT T1.plane_name FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.plane_name LIKE '%Bomber%';"
    },
    {
        "question_id": 1177,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > ( SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'Piper Cub' );"
    },
    {
        "question_id": 1178,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'Piper Cub');"
    },
    {
        "question_id": 1179,
        "answer_sql": "SELECT D.Name FROM district D ORDER BY D.Area_km DESC LIMIT 1;"
    },
    {
        "question_id": 1180,
        "answer_sql": "SELECT d.Area_km, d.Government_website FROM district d JOIN ( SELECT District_ID FROM district ORDER BY Population ASC LIMIT 1 ) subquery ON d.District_ID = subquery.District_ID;"
    },
    {
        "question_id": 1181,
        "answer_sql": "SELECT d.Name, d.Population FROM district d WHERE d.Area_km > (SELECT AVG(Area_km) FROM district)"
    },
    {
        "question_id": 1182,
        "answer_sql": "SELECT MAX( Area_km ) AS Max_Area, AVG( Area_km ) AS Avg_Area FROM district ;"
    },
    {
        "question_id": 1183,
        "answer_sql": "SELECT SUM(d.Population) FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID WHERE d.Area_km >= (SELECT Area_km FROM district ORDER BY Area_km DESC LIMIT 3)"
    },
    {
        "question_id": 1184,
        "answer_sql": "SELECT District_ID, Name, Government_website FROM district ORDER BY Population;"
    },
    {
        "question_id": 1185,
        "answer_sql": ""
    },
    {
        "question_id": 1186,
        "answer_sql": "SELECT District_ID, Name FROM district WHERE Population > 4000 OR Area_km > 3000;"
    },
    {
        "question_id": 1187,
        "answer_sql": "SELECT s.Name, s.Speach_title FROM spokesman s;"
    },
    {
        "question_id": 1188,
        "answer_sql": "SELECT AVG(s.Age) AS avg_age, AVG(s.Points) AS avg_points FROM spokesman s JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE s.Rank_position = 1;"
    },
    {
        "question_id": 1189,
        "answer_sql": "SELECT s.Name, s.Points FROM spokesman s JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE s.Age < 40;"
    },
    {
        "question_id": 1190,
        "answer_sql": "SELECT sp.Name, sp.Age FROM spokesman sp ORDER BY sp.Age DESC LIMIT 1;"
    },
    {
        "question_id": 1191,
        "answer_sql": "SELECT s.Name FROM spokesman s LEFT JOIN ( SELECT AVG(Points) AS avg_points FROM spokesman ) AS avg ON s.Points < avg.avg_points;"
    },
    {
        "question_id": 1192,
        "answer_sql": ""
    },
    {
        "question_id": 1193,
        "answer_sql": "SELECT s.Name FROM spokesman s JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE sd.Start_year < 2004;"
    },
    {
        "question_id": 1194,
        "answer_sql": "SELECT d.Name, COUNT(s.Spokesman_ID) AS Num_Spokesmen FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID JOIN spokesman s ON sd.Spokesman_ID = s.Spokesman_ID GROUP BY d.Name;"
    },
    {
        "question_id": 1195,
        "answer_sql": "SELECT DISTINCT d.Name FROM district d JOIN spokesman_district sd1 ON d.District_ID = sd1.District_ID JOIN spokesman sd2 ON sd1.Spokesman_ID = sd2.Spokesman_ID WHERE sd2.Rank_position = 1 AND EXISTS ( SELECT 1 FROM spokesman_district sd3 JOIN spokesman s ON sd3.Spokesman_ID = s.Spokesman_ID WHERE sd3.District_ID = d.District_ID AND s.Rank_position = 2 )"
    },
    {
        "question_id": 1196,
        "answer_sql": "SELECT DISTINCT d.Name FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID GROUP BY d.Name HAVING COUNT(sd.Spokesman_ID) > 1;"
    },
    {
        "question_id": 1197,
        "answer_sql": "SELECT COUNT(*) FROM district d WHERE NOT EXISTS ( SELECT 1 FROM spokesman_district sd WHERE sd.District_ID = d.District_ID );"
    },
    {
        "question_id": 1198,
        "answer_sql": "SELECT s.Name FROM spokesman s LEFT JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE sd.Spokesman_ID IS NULL;"
    },
    {
        "question_id": 1199,
        "answer_sql": "SELECT SUM( Population ) AS total_population, AVG( Population ) AS average_population FROM district WHERE District_ID IN (SELECT District_ID FROM spokesman_district);"
    },
    {
        "question_id": 1200,
        "answer_sql": "SELECT title FROM Sculptures WHERE year = (SELECT MAX(year) FROM Sculptures);"
    },
    {
        "question_id": 1201,
        "answer_sql": "SELECT title FROM Sculptures ORDER BY year DESC LIMIT 1;"
    },
    {
        "question_id": 1202,
        "answer_sql": "SELECT title, location FROM Paintings ORDER BY year ASC LIMIT 1;"
    },
    {
        "question_id": 1203,
        "answer_sql": "SELECT P.title, P.location FROM Paintings P WHERE P.year = (SELECT MIN(year) FROM Paintings);"
    },
    {
        "question_id": 1204,
        "answer_sql": ""
    },
    {
        "question_id": 1205,
        "answer_sql": ""
    },
    {
        "question_id": 1206,
        "answer_sql": "SELECT title, location FROM Paintings;"
    },
    {
        "question_id": 1207,
        "answer_sql": "SELECT Paintings.title, Paintings.location FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID;"
    },
    {
        "question_id": 1208,
        "answer_sql": "SELECT title, location FROM Sculptures;"
    },
    {
        "question_id": 1209,
        "answer_sql": "SELECT title, location FROM Sculptures;"
    },
    {
        "question_id": 1210,
        "answer_sql": "SELECT medium FROM Paintings WHERE paintingID = 80;"
    },
    {
        "question_id": 1211,
        "answer_sql": "SELECT medium FROM Paintings WHERE paintingID = 80;"
    },
    {
        "question_id": 1212,
        "answer_sql": "SELECT lname, fname FROM Artists WHERE birthYear > 1850;"
    },
    {
        "question_id": 1213,
        "answer_sql": "SELECT CONCAT(lname, ', ', fname) AS full_name FROM Artists WHERE birthYear > 1850;"
    },
    {
        "question_id": 1214,
        "answer_sql": "SELECT S.title, S.year FROM Sculptures S WHERE S.location != 'gallery 226';"
    },
    {
        "question_id": 1215,
        "answer_sql": "SELECT S.title, S.year FROM Sculptures S WHERE S.location != 'gallery 226';"
    },
    {
        "question_id": 1216,
        "answer_sql": "SELECT DISTINCT A.lname, A.fname FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID WHERE S.year < 1900;"
    },
    {
        "question_id": 1217,
        "answer_sql": "SELECT DISTINCT A.lname, A.fname FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID WHERE S.year < 1900;"
    },
    {
        "question_id": 1218,
        "answer_sql": "SELECT DISTINCT A.birthYear FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID WHERE S.year > 1920;"
    },
    {
        "question_id": 1219,
        "answer_sql": "SELECT A.birthYear FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID WHERE S.year > 1920;"
    },
    {
        "question_id": 1220,
        "answer_sql": "SELECT lname, fname FROM Artists WHERE deathYear IS NOT NULL ORDER BY deathYear DESC LIMIT 1;"
    },
    {
        "question_id": 1221,
        "answer_sql": "SELECT A.fname || ' ' || A.lname AS full_name FROM Artists A JOIN ( SELECT artistID, MAX(deathYear) AS max_death_year FROM Artists GROUP BY artistID ) B ON A.artistID = B.artistID AND A.deathYear = B.max_death_year"
    },
    {
        "question_id": 1222,
        "answer_sql": "SELECT MIN(deathYear - birthYear) AS shortest_life_age FROM Artists;"
    },
    {
        "question_id": 1223,
        "answer_sql": "SELECT MIN(deathYear - birthYear) FROM Artists;"
    },
    {
        "question_id": 1224,
        "answer_sql": ""
    },
    {
        "question_id": 1225,
        "answer_sql": ""
    },
    {
        "question_id": 1226,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE location = 'gallery 240';"
    },
    {
        "question_id": 1227,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE location = 'gallery 240';"
    },
    {
        "question_id": 1228,
        "answer_sql": "SELECT COUNT(*) FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE a.deathYear IS NOT NULL AND a.deathYear < (SELECT MAX(deathYear) FROM Artists);"
    },
    {
        "question_id": 1229,
        "answer_sql": "SELECT COUNT(paintingID) FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE a.deathYear IS NOT NULL AND a.deathYear < (SELECT MAX(deathYear) FROM Artists);"
    },
    {
        "question_id": 1230,
        "answer_sql": "SELECT P.title, P.year FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.fname = 'Mary';"
    },
    {
        "question_id": 1231,
        "answer_sql": "SELECT P.title, P.year FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.fname = 'Mary';"
    },
    {
        "question_id": 1232,
        "answer_sql": "SELECT width_mm FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE birthYear < 1850)"
    },
    {
        "question_id": 1233,
        "answer_sql": "SELECT MAX(width_mm) FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE a.birthYear < 1850;"
    },
    {
        "question_id": 1234,
        "answer_sql": "SELECT location, medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo';"
    },
    {
        "question_id": 1235,
        "answer_sql": "SELECT location, medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo';"
    },
    {
        "question_id": 1236,
        "answer_sql": "SELECT DISTINCT A.lname, A.fname FROM Artists A WHERE EXISTS ( SELECT 1 FROM Paintings P WHERE P.painterID = A.artistID ) AND EXISTS ( SELECT 1 FROM Sculptures S WHERE S.sculptorID = A.artistID );"
    },
    {
        "question_id": 1237,
        "answer_sql": "SELECT Artists.fname || ' ' || Artists.lname AS full_name FROM Artists WHERE EXISTS ( SELECT 1 FROM Paintings WHERE Paintings.painterID = Artists.artistID ) AND EXISTS ( SELECT 1 FROM Sculptures WHERE Sculptures.sculptorID = Artists.artistID );"
    },
    {
        "question_id": 1238,
        "answer_sql": "SELECT DISTINCT A.lname, A.fname FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.medium = 'oil' OR P.medium = 'lithographic';"
    },
    {
        "question_id": 1239,
        "answer_sql": ""
    },
    {
        "question_id": 1240,
        "answer_sql": "SELECT A.birthYear FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.year = 1884 AND P.mediumOn = 'canvas';"
    },
    {
        "question_id": 1241,
        "answer_sql": "SELECT A.birthYear FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.year = 1884;"
    },
    {
        "question_id": 1242,
        "answer_sql": ""
    },
    {
        "question_id": 1243,
        "answer_sql": ""
    },
    {
        "question_id": 1244,
        "answer_sql": "SELECT medium, COUNT(*) as works_count FROM (SELECT 'Paintings' as medium FROM Paintings UNION ALL SELECT 'Sculptures' as medium FROM Sculptures) t GROUP BY medium;"
    },
    {
        "question_id": 1245,
        "answer_sql": ""
    },
    {
        "question_id": 1246,
        "answer_sql": "SELECT medium, AVG(height_mm) AS avg_height FROM Paintings GROUP BY medium;"
    },
    {
        "question_id": 1247,
        "answer_sql": "SELECT medium, AVG(height_mm) FROM Paintings GROUP BY medium;"
    },
    {
        "question_id": 1248,
        "answer_sql": "SELECT COUNT(*) AS num_paintings, location FROM Paintings WHERE year < 1900 GROUP BY location;"
    },
    {
        "question_id": 1249,
        "answer_sql": "SELECT COUNT(DISTINCT p.paintingID) AS num_paintings FROM Paintings p WHERE p.year < 1900;"
    },
    {
        "question_id": 1250,
        "answer_sql": "SELECT title FROM Paintings WHERE year > 1910 AND medium = 'oil';"
    },
    {
        "question_id": 1251,
        "answer_sql": "SELECT P.title FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.medium = 'oil' AND P.year > 1910;"
    },
    {
        "question_id": 1252,
        "answer_sql": ""
    },
    {
        "question_id": 1253,
        "answer_sql": ""
    },
    {
        "question_id": 1254,
        "answer_sql": "SELECT DISTINCT P.title FROM Paintings P JOIN ( SELECT height_mm FROM Paintings WHERE mediumOn = 'canvas' ) C ON P.height_mm > C.height_mm;"
    },
    {
        "question_id": 1255,
        "answer_sql": ""
    },
    {
        "question_id": 1256,
        "answer_sql": ""
    },
    {
        "question_id": 1257,
        "answer_sql": ""
    },
    {
        "question_id": 1258,
        "answer_sql": "SELECT MIN(year) AS min_year FROM Paintings;"
    },
    {
        "question_id": 1259,
        "answer_sql": "SELECT MIN(year) AS min_year FROM Paintings;"
    },
    {
        "question_id": 1260,
        "answer_sql": "SELECT a.lname, a.fname FROM Artists a JOIN Sculptures s ON a.artistID = s.sculptorID WHERE s.title LIKE '%female%';"
    },
    {
        "question_id": 1261,
        "answer_sql": "SELECT A.lname || ' ' || A.fname AS full_name FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID WHERE S.title LIKE '%female%';"
    },
    {
        "question_id": 1262,
        "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY title ASC;"
    },
    {
        "question_id": 1263,
        "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY title ASC;"
    },
    {
        "question_id": 1264,
        "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY height_mm DESC;"
    },
    {
        "question_id": 1265,
        "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY height_mm ASC;"
    },
    {
        "question_id": 1266,
        "answer_sql": "SELECT DISTINCT P.title AS PaintingTitle, S.title AS SculptureTitle FROM Paintings P JOIN Sculptures S ON P.painterID = S.sculptorID WHERE P.year BETWEEN 1900 AND 1950 OR S.year BETWEEN 1900 AND 1950;"
    },
    {
        "question_id": 1267,
        "answer_sql": "SELECT P.title AS painting_title, S.title AS sculpture_title FROM Paintings P JOIN Sculptures S ON P.painterID = S.sculptorID WHERE (P.year BETWEEN 1900 AND 1950) OR (S.year BETWEEN 1900 AND 1950);"
    },
    {
        "question_id": 1268,
        "answer_sql": "SELECT P.title AS PaintingTitle, S.title AS SculptureTitle FROM Paintings P LEFT JOIN Sculptures S ON P.painterID = S.sculptorID WHERE P.painterID = 222 OR S.sculptorID = 222;"
    },
    {
        "question_id": 1269,
        "answer_sql": "SELECT P.title AS PaintingTitle, S.title AS SculptureTitle FROM Paintings P LEFT JOIN Sculptures S ON P.painterID = S.sculptorID WHERE P.painterID = 222 OR S.sculptorID = 222;"
    },
    {
        "question_id": 1270,
        "answer_sql": ""
    },
    {
        "question_id": 1271,
        "answer_sql": "SELECT artistID FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.year < 1900 GROUP BY A.artistID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1272,
        "answer_sql": "SELECT a.fname FROM Artists a JOIN ( SELECT sculptorID, COUNT(*) as num_sculptures FROM Sculptures GROUP BY sculptorID ORDER BY num_sculptures DESC LIMIT 1 ) s ON a.artistID = s.sculptorID;"
    },
    {
        "question_id": 1273,
        "answer_sql": "SELECT A.fname FROM Artists A JOIN ( SELECT sculptorID, COUNT(*) AS num_works FROM Sculptures GROUP BY sculptorID ORDER BY num_works DESC LIMIT 1 ) S ON A.artistID = S.sculptorID;"
    },
    {
        "question_id": 1274,
        "answer_sql": "SELECT title FROM Paintings WHERE (width_mm < 600) OR (height_mm > 800);"
    },
    {
        "question_id": 1275,
        "answer_sql": "SELECT title FROM Paintings WHERE (width_mm < 600) OR (height_mm > 800);"
    },
    {
        "question_id": 1276,
        "answer_sql": "SELECT DISTINCT location FROM Paintings WHERE (year < 1885 OR year > 1930);"
    },
    {
        "question_id": 1277,
        "answer_sql": "SELECT DISTINCT location FROM Paintings WHERE year < 1885 OR year > 1930;"
    },
    {
        "question_id": 1278,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1279,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1280,
        "answer_sql": ""
    },
    {
        "question_id": 1281,
        "answer_sql": ""
    },
    {
        "question_id": 1282,
        "answer_sql": "SELECT DISTINCT location FROM Paintings WHERE year < 1885 OR year > 1930;"
    },
    {
        "question_id": 1283,
        "answer_sql": "SELECT DISTINCT location FROM Paintings WHERE year < 1885 OR year > 1930;"
    },
    {
        "question_id": 1284,
        "answer_sql": "SELECT AVG(height_mm) AS avg_height, AVG(width_mm) AS avg_width FROM Paintings WHERE medium = 'oil' AND location = 'gallery 241';"
    },
    {
        "question_id": 1285,
        "answer_sql": "SELECT AVG(height_mm), AVG(width_mm) FROM Paintings WHERE medium = 'oil' AND location = 'gallery 241';"
    },
    {
        "question_id": 1286,
        "answer_sql": "SELECT MAX(height_mm), paintingID FROM Paintings WHERE year < 1900 GROUP BY paintingID;"
    },
    {
        "question_id": 1287,
        "answer_sql": "SELECT height_mm, paintingID FROM Paintings WHERE year < 1900 ORDER BY height_mm DESC LIMIT 1;"
    },
    {
        "question_id": 1288,
        "answer_sql": "SELECT year, MAX(height_mm), MAX(width_mm) FROM Paintings GROUP BY year;"
    },
    {
        "question_id": 1289,
        "answer_sql": "SELECT year, MAX(height_mm) AS max_height, MAX(width_mm) AS max_width FROM Paintings GROUP BY year;"
    },
    {
        "question_id": 1290,
        "answer_sql": "SELECT A.fname, A.lname, AVG(P.height_mm) AS avg_height, AVG(P.width_mm) AS avg_width FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.fname, A.lname ORDER BY A.fname;"
    },
    {
        "question_id": 1291,
        "answer_sql": "SELECT A.fname, A.lname, AVG(P.height_mm) AS avg_height, AVG(P.width_mm) AS avg_width FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.fname, A.lname ORDER BY A.fname;"
    },
    {
        "question_id": 1292,
        "answer_sql": "SELECT A.fname, COUNT(P.paintingID) AS num_paintings FROM Artists A INNER JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.fname HAVING COUNT(P.paintingID) >= 2;"
    },
    {
        "question_id": 1293,
        "answer_sql": "SELECT A.fname, COUNT(*) as works_count FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.artistID HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 1294,
        "answer_sql": "SELECT A.deathYear FROM Artists A JOIN ( SELECT painterID FROM Paintings GROUP BY painterID HAVING COUNT(*) <= 3 ) P ON A.artistID = P.painterID;"
    },
    {
        "question_id": 1295,
        "answer_sql": "SELECT A.lname, A.fname, A.deathYear FROM Artists A JOIN ( SELECT painterID FROM Paintings GROUP BY painterID HAVING COUNT(*) < 4 ) P ON A.artistID = P.painterID"
    },
    {
        "question_id": 1296,
        "answer_sql": "SELECT A.birthYear FROM Artists A JOIN ( SELECT S.sculptorID, COUNT(*) as num_sculptures FROM Sculptures S GROUP BY S.sculptorID ORDER BY num_sculptures ASC LIMIT 1 ) S ON A.artistID = S.sculptorID;"
    },
    {
        "question_id": 1297,
        "answer_sql": "SELECT MIN(deathYear) FROM Artists WHERE artistID IN (SELECT sculptorID FROM Sculptures);"
    },
    {
        "question_id": 1298,
        "answer_sql": ""
    },
    {
        "question_id": 1299,
        "answer_sql": ""
    },
    {
        "question_id": 1300,
        "answer_sql": ""
    },
    {
        "question_id": 1301,
        "answer_sql": ""
    },
    {
        "question_id": 1302,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900);"
    },
    {
        "question_id": 1303,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE year > 1900 ORDER BY year DESC LIMIT 1, 1;"
    },
    {
        "question_id": 1304,
        "answer_sql": "SELECT A.lname, A.fname, COUNT(*) as painting_count FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.medium = 'oil' GROUP BY A.artistID ORDER BY painting_count DESC LIMIT 3;"
    },
    {
        "question_id": 1305,
        "answer_sql": "SELECT A.lname, A.fname, COUNT(*) as oil_paintings_count FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.medium = 'oil' GROUP BY A.artistID, A.lname, A.fname ORDER BY oil_paintings_count DESC;"
    },
    {
        "question_id": 1306,
        "answer_sql": "SELECT p.paintingID, p.location, p.title FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE a.birthYear IS NOT NULL AND a.deathYear IS NOT NULL AND a.fname IS NOT NULL AND a.lname IS NOT NULL AND p.year IS NOT NULL AND p.medium = 'oil' ORDER BY p.year;"
    },
    {
        "question_id": 1307,
        "answer_sql": "SELECT p.paintingID, p.location, p.title FROM Paintings p WHERE p.medium = 'oil' ORDER BY p.year;"
    },
    {
        "question_id": 1308,
        "answer_sql": "SELECT year, location, title FROM Paintings WHERE height_mm > 1000 ORDER BY title;"
    },
    {
        "question_id": 1309,
        "answer_sql": "SELECT year, location, title AS name FROM Paintings WHERE height_mm > 1000 ORDER BY name ASC;"
    },
    {
        "question_id": 1310,
        "answer_sql": "SELECT A.lname, A.fname FROM Artists A WHERE A.artistID IN ( SELECT DISTINCT painterID FROM Paintings WHERE paintingID NOT IN ( SELECT sculptureID FROM Sculptures WHERE sculptorID = A.artistID ) );"
    },
    {
        "question_id": 1311,
        "answer_sql": "SELECT A.fname, A.lname FROM Artists A WHERE A.artistID NOT IN ( SELECT DISTINCT Sculptures.sculptorID FROM Sculptures JOIN Artists ON Sculptures.sculptorID = Artists.artistID ) AND EXISTS ( SELECT 1 FROM Paintings WHERE Paintings.painterID = A.artistID );"
    },
    {
        "question_id": 1312,
        "answer_sql": "SELECT DISTINCT location FROM Paintings WHERE year < 1885 AND mediumOn != 'canvas';"
    },
    {
        "question_id": 1313,
        "answer_sql": "SELECT p.title, p.year, p.mediumOn FROM Paintings p JOIN Artists a ON p.painterID = a.artistID WHERE p.year < 1885 AND p.mediumOn != 'canvas';"
    },
    {
        "question_id": 1314,
        "answer_sql": "SELECT COUNT(*) FROM race;"
    },
    {
        "question_id": 1315,
        "answer_sql": "SELECT COUNT(*) FROM race;"
    },
    {
        "question_id": 1316,
        "answer_sql": "SELECT DISTINCT w.Winning_driver, w.Winning_team FROM race r JOIN ( SELECT Driver_ID, MIN(Race_Name) AS Min_Race_Name FROM race GROUP BY Driver_ID ) AS min_race ON r.Driver_ID = min_race.Driver_ID AND r.Race_Name = min_race.Min_Race_Name JOIN race w ON r.Road = w.Road WHERE r.Winning_driver = w.Winning_driver ORDER BY w.Winning_team ASC;"
    },
    {
        "question_id": 1317,
        "answer_sql": "SELECT DISTINCT race.Winning_driver, race.Winning_team FROM race ORDER BY race.Winning_team ASC;"
    },
    {
        "question_id": 1318,
        "answer_sql": ""
    },
    {
        "question_id": 1319,
        "answer_sql": ""
    },
    {
        "question_id": 1320,
        "answer_sql": "SELECT DISTINCT Constructor FROM driver ORDER BY Age ASC;"
    },
    {
        "question_id": 1321,
        "answer_sql": "SELECT DISTINCT Constructor FROM driver ORDER BY Age ASC;"
    },
    {
        "question_id": 1322,
        "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;"
    },
    {
        "question_id": 1323,
        "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;"
    },
    {
        "question_id": 1324,
        "answer_sql": "SELECT MAX(Age), MIN(Age) FROM driver;"
    },
    {
        "question_id": 1325,
        "answer_sql": "SELECT MAX(Age), MIN(Age) FROM driver;"
    },
    {
        "question_id": 1326,
        "answer_sql": "SELECT COUNT(DISTINCT Engine) FROM driver WHERE (Age < 20 OR Age > 30);"
    },
    {
        "question_id": 1327,
        "answer_sql": "SELECT COUNT(DISTINCT d.Engine) FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID WHERE (d.Age > 30 OR d.Age < 20);"
    },
    {
        "question_id": 1328,
        "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;"
    },
    {
        "question_id": 1329,
        "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;"
    },
    {
        "question_id": 1330,
        "answer_sql": "SELECT d.Driver_Name, r.Race_Name FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID;"
    },
    {
        "question_id": 1331,
        "answer_sql": "SELECT d.Driver_Name, r.Race_Name FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID;"
    },
    {
        "question_id": 1332,
        "answer_sql": "SELECT d.Driver_Name, COUNT(r.Road) AS Number_of_Races FROM driver d LEFT JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_ID, d.Driver_Name"
    },
    {
        "question_id": 1333,
        "answer_sql": "SELECT Driver_ID, COUNT(*) as Number_of_Races FROM race GROUP BY Driver_ID;"
    },
    {
        "question_id": 1334,
        "answer_sql": "SELECT d.Age FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1335,
        "answer_sql": "SELECT d.Age FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1336,
        "answer_sql": "SELECT DISTINCT d.Driver_Name, d.Age FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_ID HAVING COUNT(r.Road) >= 2;"
    },
    {
        "question_id": 1337,
        "answer_sql": "SELECT DISTINCT d.Driver_Name, d.Age FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_ID HAVING COUNT(r.Road) >= 2;"
    },
    {
        "question_id": 1338,
        "answer_sql": "SELECT Race_Name FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID WHERE driver.Age >= 26;"
    },
    {
        "question_id": 1339,
        "answer_sql": "SELECT DISTINCT race.Race_Name FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID WHERE driver.Age >= 26;"
    },
    {
        "question_id": 1340,
        "answer_sql": "SELECT DISTINCT Driver_Name FROM driver WHERE Constructor != 'Bugatti';"
    },
    {
        "question_id": 1341,
        "answer_sql": "SELECT DISTINCT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race WHERE Constructor = 'Bugatti');"
    },
    {
        "question_id": 1342,
        "answer_sql": "SELECT Constructor, COUNT(Driver_ID) AS Number_of_Drivers FROM driver GROUP BY Constructor;"
    },
    {
        "question_id": 1343,
        "answer_sql": "SELECT d.Constructor, COUNT(d.Driver_ID) AS Number_of_Drivers FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Constructor;"
    },
    {
        "question_id": 1344,
        "answer_sql": "SELECT Engine, COUNT(*) AS engine_count FROM driver GROUP BY Engine ORDER BY engine_count DESC LIMIT 1;"
    },
    {
        "question_id": 1345,
        "answer_sql": "SELECT Engine, COUNT(*) as frequency FROM driver GROUP BY Engine ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 1346,
        "answer_sql": "SELECT DISTINCT Engine FROM driver GROUP BY Engine HAVING COUNT(Engine) >= 2;"
    },
    {
        "question_id": 1347,
        "answer_sql": "SELECT DISTINCT d.Engine FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Engine HAVING COUNT(DISTINCT d.Driver_ID) >= 2;"
    },
    {
        "question_id": 1348,
        "answer_sql": "SELECT DISTINCT d.Driver_Name FROM driver d LEFT JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Driver_ID IS NULL;"
    },
    {
        "question_id": 1349,
        "answer_sql": "SELECT DISTINCT d.Driver_Name FROM driver d LEFT JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Driver_ID IS NULL;"
    },
    {
        "question_id": 1350,
        "answer_sql": ""
    },
    {
        "question_id": 1351,
        "answer_sql": ""
    },
    {
        "question_id": 1352,
        "answer_sql": "SELECT DISTINCT Winning_team FROM race GROUP BY Winning_team HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1353,
        "answer_sql": "SELECT DISTINCT Winning_team, COUNT(*) as Num_Wins FROM race GROUP BY Winning_team HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1354,
        "answer_sql": "SELECT DISTINCT d.Driver_Name FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Pole_Position IN ('James Hinchcliffe', 'Carl Skerlong') GROUP BY d.Driver_Name HAVING COUNT(DISTINCT r.Pole_Position) = 2;"
    },
    {
        "question_id": 1355,
        "answer_sql": "SELECT d.Driver_Name FROM driver d WHERE d.Driver_ID IN ( SELECT Driver_ID FROM race WHERE Road = (SELECT Road FROM race WHERE Pole_Position = 'James Hinchcliffe') AND Driver_ID IN (SELECT Driver_ID FROM race WHERE Pole_Position = 'Carl Skerlong') );"
    },
    {
        "question_id": 1356,
        "answer_sql": "SELECT DISTINCT d.Driver_Name FROM driver d LEFT JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Pole_Position != 'James Hinchcliffe';"
    },
    {
        "question_id": 1357,
        "answer_sql": "SELECT DISTINCT d.Driver_Name FROM driver d LEFT JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Pole_Position != 'James Hinchcliffe';"
    },
    {
        "question_id": 1358,
        "answer_sql": "SELECT COUNT(DISTINCT id) FROM languages;"
    },
    {
        "question_id": 1359,
        "answer_sql": "SELECT COUNT(DISTINCT l.id) FROM languages l;"
    },
    {
        "question_id": 1360,
        "answer_sql": "SELECT name FROM languages ORDER BY name ASC;"
    },
    {
        "question_id": 1361,
        "answer_sql": "SELECT name FROM languages ORDER BY name ASC;"
    },
    {
        "question_id": 1362,
        "answer_sql": "SELECT name FROM languages WHERE name LIKE '%ish%';"
    },
    {
        "question_id": 1363,
        "answer_sql": "SELECT name FROM languages WHERE name LIKE '%ish%';"
    },
    {
        "question_id": 1364,
        "answer_sql": "SELECT c.name FROM countries c ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1365,
        "answer_sql": "SELECT c.name FROM countries c ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1366,
        "answer_sql": "SELECT AVG(c.justice_score) AS avg_justice_score FROM countries c;"
    },
    {
        "question_id": 1367,
        "answer_sql": "SELECT AVG(c.justice_score) AS avg_justice_score FROM countries c;"
    },
    {
        "question_id": 1368,
        "answer_sql": "SELECT MAX(c.health_score), MIN(c.health_score) FROM countries c WHERE c.name != 'Norway';"
    },
    {
        "question_id": 1369,
        "answer_sql": "SELECT MAX(c.health_score), MIN(c.health_score) FROM countries c WHERE c.name != 'Norway';"
    },
    {
        "question_id": 1370,
        "answer_sql": "SELECT COUNT(DISTINCT l.id) FROM languages l JOIN official_languages ol ON l.id = ol.language_id;"
    },
    {
        "question_id": 1371,
        "answer_sql": "SELECT COUNT(DISTINCT l.id) FROM languages l JOIN official_languages ol ON l.id = ol.language_id;"
    },
    {
        "question_id": 1372,
        "answer_sql": "SELECT c.name FROM countries c ORDER BY c.education_score DESC;"
    },
    {
        "question_id": 1373,
        "answer_sql": "SELECT c.name FROM countries c ORDER BY c.education_score DESC;"
    },
    {
        "question_id": 1374,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE c.politics_score = (SELECT MAX(politics_score) FROM countries)"
    },
    {
        "question_id": 1375,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE c.politics_score = (SELECT MAX(politics_score) FROM countries)"
    },
    {
        "question_id": 1376,
        "answer_sql": "SELECT c.name AS Country, l.name AS Language FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id;"
    },
    {
        "question_id": 1377,
        "answer_sql": "SELECT c.name AS country_name, l.name AS official_language FROM countries AS c JOIN official_languages AS ol ON c.id = ol.country_id JOIN languages AS l ON ol.language_id = l.id;"
    },
    {
        "question_id": 1378,
        "answer_sql": "SELECT l.name AS language, COUNT(c.id) AS num_countries FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON ol.country_id = c.id GROUP BY l.id;"
    },
    {
        "question_id": 1379,
        "answer_sql": "SELECT l.name AS language, COUNT(c.id) AS num_countries FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON ol.country_id = c.id GROUP BY l.id;"
    },
    {
        "question_id": 1380,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY COUNT(ol.country_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1381,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1382,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name HAVING COUNT(DISTINCT ol.country_id) >= 2;"
    },
    {
        "question_id": 1383,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name HAVING COUNT(DISTINCT ol.country_id) >= 2;"
    },
    {
        "question_id": 1384,
        "answer_sql": "SELECT AVG(c.overall_score) FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English';"
    },
    {
        "question_id": 1385,
        "answer_sql": "SELECT AVG(c.overall_score) FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English';"
    },
    {
        "question_id": 1386,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY COUNT(*) DESC LIMIT 3;"
    },
    {
        "question_id": 1387,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY COUNT(DISTINCT ol.country_id) DESC LIMIT 3;"
    },
    {
        "question_id": 1388,
        "answer_sql": "SELECT l.name AS official_language, AVG(c.overall_score) AS average_overall_score FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON ol.country_id = c.id GROUP BY l.name ORDER BY average_overall_score DESC;"
    },
    {
        "question_id": 1389,
        "answer_sql": "SELECT l.name, AVG(c.overall_score) AS avg_overall_score FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON ol.country_id = c.id GROUP BY l.name ORDER BY avg_overall_score DESC;"
    },
    {
        "question_id": 1390,
        "answer_sql": ""
    },
    {
        "question_id": 1391,
        "answer_sql": "SELECT countries.name, COUNT(official_languages.language_id) as num_languages FROM countries LEFT JOIN official_languages ON countries.id = official_languages.country_id GROUP BY countries.name ORDER BY num_languages DESC LIMIT 1;"
    },
    {
        "question_id": 1392,
        "answer_sql": ""
    },
    {
        "question_id": 1393,
        "answer_sql": ""
    },
    {
        "question_id": 1394,
        "answer_sql": ""
    },
    {
        "question_id": 1395,
        "answer_sql": ""
    },
    {
        "question_id": 1396,
        "answer_sql": ""
    },
    {
        "question_id": 1397,
        "answer_sql": ""
    },
    {
        "question_id": 1398,
        "answer_sql": "SELECT DISTINCT T1.country, T1.town_city FROM Addresses AS T1;"
    },
    {
        "question_id": 1399,
        "answer_sql": "SELECT Addresses.country, Addresses.town_city FROM Addresses;"
    },
    {
        "question_id": 1400,
        "answer_sql": "SELECT T1.county_state_province FROM `Addresses` AS T1 INNER JOIN `Properties` AS T2 ON T1.address_id = T2.property_address_id;"
    },
    {
        "question_id": 1401,
        "answer_sql": "SELECT T2.county_state_province FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id = T2.address_id;"
    },
    {
        "question_id": 1402,
        "answer_sql": "SELECT feature_description FROM Features WHERE feature_name = 'rooftop';"
    },
    {
        "question_id": 1403,
        "answer_sql": "SELECT feature_description FROM Features WHERE feature_name = 'rooftop';"
    },
    {
        "question_id": 1404,
        "answer_sql": "SELECT feature_name, feature_description FROM Features JOIN Property_Features ON Features.feature_id = Property_Features.feature_id GROUP BY feature_name, feature_description ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1405,
        "answer_sql": "SELECT feature_name, feature_description FROM Features JOIN Property_Features ON Features.feature_id = Property_Features.feature_id GROUP BY feature_name, feature_description ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1406,
        "answer_sql": "SELECT MIN(room_count) AS min_rooms FROM Properties;"
    },
    {
        "question_id": 1407,
        "answer_sql": "SELECT MIN(room_count) FROM Properties;"
    },
    {
        "question_id": 1408,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE (garage_yn = 'Y' OR parking_lots = 'Y');"
    },
    {
        "question_id": 1409,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE (garage_yn = 'Y' OR parking_lots = 'Y');"
    },
    {
        "question_id": 1410,
        "answer_sql": ""
    },
    {
        "question_id": 1411,
        "answer_sql": ""
    },
    {
        "question_id": 1412,
        "answer_sql": "SELECT u.first_name FROM Users u JOIN ( SELECT owner_user_id, COUNT(*) AS num_properties FROM Properties GROUP BY owner_user_id ORDER BY num_properties DESC LIMIT 1 ) p ON u.user_id = p.owner_user_id;"
    },
    {
        "question_id": 1413,
        "answer_sql": "SELECT u.first_name FROM Users u INNER JOIN Properties p ON u.user_id = p.owner_user_id GROUP BY u.user_id ORDER BY COUNT(p.property_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1414,
        "answer_sql": "SELECT AVG(room_count) FROM Properties JOIN Rooms ON Properties.property_id = Rooms.property_id WHERE Properties.property_id IN ( SELECT DISTINCT Properties.property_id FROM Properties JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id WHERE Property_Photos.photo_filename LIKE '%garden%' );"
    },
    {
        "question_id": 1415,
        "answer_sql": ""
    },
    {
        "question_id": 1416,
        "answer_sql": ""
    },
    {
        "question_id": 1417,
        "answer_sql": ""
    },
    {
        "question_id": 1418,
        "answer_sql": "SELECT P.property_id, P.vendor_requested_price FROM Properties P WHERE P.vendor_requested_price = (SELECT MIN(vendor_requested_price) FROM Properties);"
    },
    {
        "question_id": 1419,
        "answer_sql": "SELECT P.property_id, P.vendor_requested_price FROM Properties P WHERE P.vendor_requested_price = ( SELECT MIN(vendor_requested_price) FROM Properties );"
    },
    {
        "question_id": 1420,
        "answer_sql": "SELECT AVG(room_count) FROM Properties;"
    },
    {
        "question_id": 1421,
        "answer_sql": "SELECT AVG(ROOM_COUNT) FROM Properties;"
    },
    {
        "question_id": 1422,
        "answer_sql": "SELECT COUNT(DISTINCT room_size) FROM Rooms;"
    },
    {
        "question_id": 1423,
        "answer_sql": "SELECT COUNT(DISTINCT room_size) FROM Rooms;"
    },
    {
        "question_id": 1424,
        "answer_sql": ""
    },
    {
        "question_id": 1425,
        "answer_sql": "SELECT user_id, search_seq FROM User_Searches GROUP BY user_id HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 1426,
        "answer_sql": "SELECT MAX(search_datetime) FROM User_Searches;"
    },
    {
        "question_id": 1427,
        "answer_sql": "SELECT MAX(search_datetime) FROM User_Searches;"
    },
    {
        "question_id": 1428,
        "answer_sql": "SELECT user_id, search_seq, search_datetime, search_string FROM User_Searches ORDER BY search_string DESC;"
    },
    {
        "question_id": 1429,
        "answer_sql": "SELECT search_string, search_datetime FROM User_Searches ORDER BY search_string DESC;"
    },
    {
        "question_id": 1430,
        "answer_sql": "SELECT DISTINCT A.zip_postcode FROM Properties AS P JOIN Addresses AS A ON P.property_address_id = A.address_id WHERE P.property_id NOT IN ( SELECT DISTINCT P2.property_id FROM Properties AS P2 INNER JOIN Users AS U ON P2.owner_user_id = U.user_id GROUP BY U.user_id HAVING COUNT(P2.property_id) <= 2 );"
    },
    {
        "question_id": 1431,
        "answer_sql": ""
    },
    {
        "question_id": 1432,
        "answer_sql": "SELECT u.user_category_code, u.user_id FROM Users u JOIN User_Searches us ON u.user_id = us.user_id GROUP BY u.user_id HAVING COUNT(us.search_seq) = 1;"
    },
    {
        "question_id": 1433,
        "answer_sql": "SELECT user_id, user_category_code FROM Users WHERE user_id IN ( SELECT user_id FROM User_Searches GROUP BY user_id HAVING COUNT(search_seq) = 1 );"
    },
    {
        "question_id": 1434,
        "answer_sql": "SELECT u.age_category_code FROM Users u INNER JOIN User_Searches us ON u.user_id = us.user_id ORDER BY us.search_datetime LIMIT 1;"
    },
    {
        "question_id": 1435,
        "answer_sql": "SELECT u.age_category_code FROM Users u JOIN User_Searches us ON u.user_id = us.user_id ORDER BY us.search_datetime ASC LIMIT 1;"
    },
    {
        "question_id": 1436,
        "answer_sql": "SELECT u.login_name, u.first_name FROM Users u JOIN Ref_User_Categories rc ON u.user_category_code = rc.user_category_code WHERE rc.user_category_description = 'Senior Citizen' ORDER BY u.first_name;"
    },
    {
        "question_id": 1437,
        "answer_sql": "SELECT DISTINCT U.login_name FROM Users U JOIN Ref_User_Categories RC ON U.user_category_code = RC.user_category_code WHERE RC.user_category_description = 'Senior Citizen' ORDER BY U.first_name;"
    },
    {
        "question_id": 1438,
        "answer_sql": "SELECT COUNT(*) FROM User_Searches WHERE user_id IN (SELECT user_id FROM Users WHERE is_buyer = 'Y');"
    },
    {
        "question_id": 1439,
        "answer_sql": "SELECT COUNT(*) FROM User_Searches WHERE user_id IN (SELECT user_id FROM Users WHERE is_buyer = 'Y');"
    },
    {
        "question_id": 1440,
        "answer_sql": "SELECT date_registered FROM Users WHERE login_name = 'ratione';"
    },
    {
        "question_id": 1441,
        "answer_sql": "SELECT date_registered FROM Users WHERE login_name = 'ratione';"
    },
    {
        "question_id": 1442,
        "answer_sql": "SELECT first_name, middle_name, last_name, login_name FROM Users WHERE is_seller = '1';"
    },
    {
        "question_id": 1443,
        "answer_sql": ""
    },
    {
        "question_id": 1444,
        "answer_sql": ""
    },
    {
        "question_id": 1445,
        "answer_sql": ""
    },
    {
        "question_id": 1446,
        "answer_sql": "SELECT COUNT(*) FROM Properties p JOIN Property_Features pf ON p.property_id = pf.property_id GROUP BY p.property_id HAVING COUNT(pf.feature_id) >= 2;"
    },
    {
        "question_id": 1447,
        "answer_sql": "SELECT COUNT(*) FROM Properties p JOIN Property_Features pf ON p.property_id = pf.property_id GROUP BY p.property_id HAVING COUNT(pf.feature_id) >= 2;"
    },
    {
        "question_id": 1448,
        "answer_sql": "SELECT COUNT(DISTINCT p.property_id) AS photo_count FROM Property_Photos pp JOIN Properties p ON p.property_id = pp.property_id;"
    },
    {
        "question_id": 1449,
        "answer_sql": "SELECT Properties.property_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Properties LEFT JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Properties.property_id;"
    },
    {
        "question_id": 1450,
        "answer_sql": "SELECT u.user_id, COUNT(p.property_id) as photo_count FROM Users u JOIN Properties p ON u.user_id = p.owner_user_id JOIN Property_Photos pp ON p.property_id = pp.property_id GROUP BY u.user_id;"
    },
    {
        "question_id": 1451,
        "answer_sql": "SELECT u.user_id, COUNT(p.property_id) as photo_count FROM Users u JOIN Properties p ON u.user_id = p.owner_user_id JOIN Property_Photos pp ON p.property_id = pp.property_id GROUP BY u.user_id;"
    },
    {
        "question_id": 1452,
        "answer_sql": "SELECT SUM(p.price_max) AS total_max_price FROM Properties p JOIN Users u ON p.owner_user_id = u.user_id WHERE (u.age_category_code IN (SELECT age_category_code FROM Ref_Age_Categories WHERE age_category_description = 'Single Mother') OR u.age_category_code IN (SELECT age_category_code FROM Ref_Age_Categories WHERE age_category_description = 'Student'));"
    },
    {
        "question_id": 1453,
        "answer_sql": "SELECT MAX(p.price_max) FROM Properties p JOIN Users u ON p.owner_user_id = u.user_id WHERE u.user_category_code IN ('single_mother', 'student');"
    },
    {
        "question_id": 1454,
        "answer_sql": ""
    },
    {
        "question_id": 1455,
        "answer_sql": "SELECT u.user_id, p.property_id, uph.datestamp, p.property_name FROM User_Property_History uph JOIN Properties p ON uph.property_id = p.property_id JOIN Users u ON uph.user_id = u.user_id ORDER BY uph.datestamp;"
    },
    {
        "question_id": 1456,
        "answer_sql": ""
    },
    {
        "question_id": 1457,
        "answer_sql": "SELECT Ref_Property_Types.property_type_description, COUNT(*) as frequency FROM Ref_Property_Types JOIN Properties ON Ref_Property_Types.property_type_code = Properties.property_type_code GROUP BY Ref_Property_Types.property_type_description ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 1458,
        "answer_sql": "SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60';"
    },
    {
        "question_id": 1459,
        "answer_sql": "SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60';"
    },
    {
        "question_id": 1460,
        "answer_sql": "SELECT room_size, COUNT(*) as count FROM Rooms GROUP BY room_size;"
    },
    {
        "question_id": 1461,
        "answer_sql": "SELECT room_size, COUNT(*) as room_count FROM Rooms GROUP BY room_size;"
    },
    {
        "question_id": 1462,
        "answer_sql": ""
    },
    {
        "question_id": 1463,
        "answer_sql": "SELECT T1.country FROM `Addresses` AS T1 INNER JOIN `Users` AS T2 ON T1.address_id = T2.user_address_id WHERE T2.first_name = 'Robbie';"
    },
    {
        "question_id": 1464,
        "answer_sql": "SELECT U.first_name, U.middle_name, U.last_name FROM Users U JOIN Properties P ON U.user_id = P.owner_user_id WHERE U.user_address_id = P.property_address_id;"
    },
    {
        "question_id": 1465,
        "answer_sql": ""
    },
    {
        "question_id": 1466,
        "answer_sql": "SELECT DISTINCT u.user_id, us.search_string FROM Users u LEFT JOIN User_Searches us ON u.user_id = us.user_id WHERE u.user_id NOT IN ( SELECT DISTINCT up.user_id FROM Users up INNER JOIN Properties p ON up.user_id = p.owner_user_id )"
    },
    {
        "question_id": 1467,
        "answer_sql": "SELECT DISTINCT u.user_id, us.search_string FROM Users u LEFT JOIN User_Searches us ON u.user_id = us.user_id WHERE u.user_id NOT IN (SELECT DISTINCT up.user_id FROM User_Property_History up);"
    },
    {
        "question_id": 1468,
        "answer_sql": "SELECT u.last_name, u.user_id FROM Users u JOIN User_Property_History uph ON u.user_id = uph.user_id GROUP BY u.user_id HAVING COUNT(DISTINCT uph.property_id) >= 2 AND COUNT(DISTINCT u.user_id) <= 2;"
    },
    {
        "question_id": 1469,
        "answer_sql": "SELECT DISTINCT U.last_name, U.user_id FROM Users U JOIN User_Searches US ON U.user_id = US.user_id JOIN Properties P ON U.user_id = P.owner_user_id GROUP BY U.user_id HAVING COUNT(US.search_seq) <= 2 AND COUNT(P.property_id) >= 2;"
    },
    {
        "question_id": 1470,
        "answer_sql": "SELECT COUNT(*) FROM bike WHERE weight > 780;"
    },
    {
        "question_id": 1471,
        "answer_sql": "SELECT b.product_name, b.weight FROM bike b ORDER BY b.price ASC;"
    },
    {
        "question_id": 1472,
        "answer_sql": "SELECT heat, name, nation FROM cyclist;"
    },
    {
        "question_id": 1473,
        "answer_sql": "SELECT MAX(weight), MIN(weight) FROM bike;"
    },
    {
        "question_id": 1474,
        "answer_sql": "SELECT AVG(bike.price) FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id WHERE bike.material = 'Carbon CC';"
    },
    {
        "question_id": 1475,
        "answer_sql": "SELECT cyclist.name, cyclist.result FROM cyclist JOIN cyclists_own_bikes ON cyclist.id = cyclists_own_bikes.cyclist_id LEFT JOIN bike ON cyclists_own_bikes.bike_id = bike.id WHERE cyclist.nation != 'Russia'"
    },
    {
        "question_id": 1476,
        "answer_sql": "SELECT DISTINCT b.id, b.product_name FROM cyclists_own_bikes AS cy_b JOIN bike AS b ON cy_b.bike_id = b.id WHERE cy_b.purchase_year > 2015;"
    },
    {
        "question_id": 1477,
        "answer_sql": "SELECT b.id, b.product_name FROM bike b JOIN cyclists_own_bikes cb ON b.id = cb.bike_id GROUP BY b.id, b.product_name HAVING COUNT(cb.cyclist_id) >= 4;"
    },
    {
        "question_id": 1478,
        "answer_sql": "SELECT cyclist.id, cyclist.name FROM cyclist JOIN cyclists_own_bikes ON cyclist.id = cyclists_own_bikes.cyclist_id GROUP BY cyclist.id, cyclist.name ORDER BY COUNT(cyclists_own_bikes.bike_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1479,
        "answer_sql": "SELECT DISTINCT b.product_name FROM cyclists_own_bikes AS cy_bike JOIN cyclist AS c ON cy_bike.cyclist_id = c.id JOIN bike AS b ON cy_bike.bike_id = b.id WHERE c.nation IN ('Russia', 'Great Britain');"
    },
    {
        "question_id": 1480,
        "answer_sql": "SELECT DISTINCT heat FROM cyclist;"
    },
    {
        "question_id": 1481,
        "answer_sql": "SELECT COUNT(DISTINCT cyclist_id) FROM cyclists_own_bikes WHERE purchase_year <= 2015;"
    },
    {
        "question_id": 1482,
        "answer_sql": "SELECT DISTINCT b.product_name FROM cyclist c JOIN cyclists_own_bikes cob ON c.id = cob.cyclist_id JOIN bike b ON cob.bike_id = b.id WHERE c.result > 4.215 ORDER BY b.product_name;"
    },
    {
        "question_id": 1483,
        "answer_sql": ""
    },
    {
        "question_id": 1484,
        "answer_sql": "SELECT cyclist.name, cyclist.nation, cyclist.result FROM cyclist LEFT JOIN cyclists_own_bikes ON cyclist.id = cyclists_own_bikes.cyclist_id WHERE cyclists_own_bikes.bike_id IS NULL;"
    },
    {
        "question_id": 1485,
        "answer_sql": "SELECT product_name FROM bike WHERE material LIKE '%fiber%';"
    },
    {
        "question_id": 1486,
        "answer_sql": "SELECT cyclist_id, COUNT(bike_id) AS bike_count FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY cyclist_id;"
    },
    {
        "question_id": 1487,
        "answer_sql": ""
    },
    {
        "question_id": 1488,
        "answer_sql": ""
    },
    {
        "question_id": 1489,
        "answer_sql": ""
    },
    {
        "question_id": 1490,
        "answer_sql": "SELECT g.Id AS 'Flavor_ID', g.Flavor FROM goods g WHERE g.Price = (SELECT MIN(Price) FROM goods);"
    },
    {
        "question_id": 1491,
        "answer_sql": ""
    },
    {
        "question_id": 1492,
        "answer_sql": ""
    },
    {
        "question_id": 1493,
        "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price < 3;"
    },
    {
        "question_id": 1494,
        "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price < 3;"
    },
    {
        "question_id": 1495,
        "answer_sql": ""
    },
    {
        "question_id": 1496,
        "answer_sql": ""
    },
    {
        "question_id": 1497,
        "answer_sql": "SELECT g.Food, COUNT(DISTINCT c.Id) FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON i.Receipt = r.ReceiptNumber JOIN customers c ON r.CustomerId = c.Id GROUP BY g.Food;"
    },
    {
        "question_id": 1498,
        "answer_sql": ""
    },
    {
        "question_id": 1499,
        "answer_sql": "SELECT DISTINCT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt GROUP BY c.Id HAVING COUNT(i.Receipt) >= 15;"
    },
    {
        "question_id": 1500,
        "answer_sql": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING COUNT(*) >= 15;"
    },
    {
        "question_id": 1501,
        "answer_sql": "SELECT c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt GROUP BY c.LastName HAVING COUNT(DISTINCT r.ReceiptNumber) > 10;"
    },
    {
        "question_id": 1502,
        "answer_sql": "SELECT LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt GROUP BY c.LastName HAVING COUNT(DISTINCT r.ReceiptNumber) > 10;"
    },
    {
        "question_id": 1503,
        "answer_sql": "SELECT COUNT(DISTINCT g.Flavor) FROM goods g WHERE g.Food = 'Cake';"
    },
    {
        "question_id": 1504,
        "answer_sql": "SELECT COUNT(DISTINCT g.Flavor) FROM goods g;"
    },
    {
        "question_id": 1505,
        "answer_sql": "SELECT g.Flavor FROM goods g INNER JOIN items i ON g.Id = i.Item WHERE g.Food = 'Croissant';"
    },
    {
        "question_id": 1506,
        "answer_sql": ""
    },
    {
        "question_id": 1507,
        "answer_sql": "SELECT DISTINCT i.Item FROM items i JOIN receipts r ON i.Receipt = r.ReceiptNumber WHERE r.CustomerId = 15;"
    },
    {
        "question_id": 1508,
        "answer_sql": "SELECT DISTINCT i.Item FROM items i JOIN receipts r ON i.Receipt = r.ReceiptNumber WHERE r.CustomerId = 15;"
    },
    {
        "question_id": 1509,
        "answer_sql": "SELECT Flavor, AVG(Price) AS AveragePrice, MAX(Price) AS MaximumPrice, MIN(Price) AS MinimumPrice FROM goods GROUP BY Flavor;"
    },
    {
        "question_id": 1510,
        "answer_sql": "SELECT g.Food, AVG(g.Price) AS AvgPrice, MIN(g.Price) AS MinPrice, MAX(g.Price) AS MaxPrice FROM goods g GROUP BY g.Food;"
    },
    {
        "question_id": 1511,
        "answer_sql": ""
    },
    {
        "question_id": 1512,
        "answer_sql": ""
    },
    {
        "question_id": 1513,
        "answer_sql": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE r.CustomerId = (SELECT Id FROM customers WHERE LastName = 'LOGAN') AND g.Food = 'Croissant';"
    },
    {
        "question_id": 1514,
        "answer_sql": ""
    },
    {
        "question_id": 1515,
        "answer_sql": ""
    },
    {
        "question_id": 1516,
        "answer_sql": ""
    },
    {
        "question_id": 1517,
        "answer_sql": "SELECT Item FROM items GROUP BY Item ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1518,
        "answer_sql": "SELECT Item FROM items JOIN goods ON items.Item = goods.Id GROUP BY Item ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1519,
        "answer_sql": "SELECT g.Food, COUNT(g.Id) AS GoodsCount FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Food;"
    },
    {
        "question_id": 1520,
        "answer_sql": "SELECT g.Food, COUNT(*) as Count FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Food;"
    },
    {
        "question_id": 1521,
        "answer_sql": "SELECT G.Flavor, AVG(G.Price) AS AveragePrice FROM goods G JOIN items I ON G.Id = I.Item GROUP BY G.Flavor"
    },
    {
        "question_id": 1522,
        "answer_sql": "SELECT G.Flavor, AVG(G.Price) AS AveragePrice FROM goods G JOIN items I ON G.Id = I.Item GROUP BY G.Flavor"
    },
    {
        "question_id": 1523,
        "answer_sql": "SELECT g.Id FROM goods g WHERE g.Flavor = 'Apricot' AND g.Price < 5;"
    },
    {
        "question_id": 1524,
        "answer_sql": "SELECT g.Id FROM goods g WHERE g.Flavor = 'Apricot' AND g.Price < 5;"
    },
    {
        "question_id": 1525,
        "answer_sql": "SELECT g.Flavor FROM goods g INNER JOIN items i ON g.Id = i.Item WHERE g.Price > 10;"
    },
    {
        "question_id": 1526,
        "answer_sql": "SELECT g.Flavor FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON i.Receipt = r.ReceiptNumber WHERE g.Price > 10 AND r.CustomerId = 1;"
    },
    {
        "question_id": 1527,
        "answer_sql": "SELECT DISTINCT g.Id, g.Price FROM goods g WHERE g.Price < (SELECT AVG(Price) FROM goods);"
    },
    {
        "question_id": 1528,
        "answer_sql": "SELECT DISTINCT g.Id, g.Price FROM goods g WHERE g.Price < (SELECT AVG(Price) FROM goods);"
    },
    {
        "question_id": 1529,
        "answer_sql": ""
    },
    {
        "question_id": 1530,
        "answer_sql": ""
    },
    {
        "question_id": 1531,
        "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13;"
    },
    {
        "question_id": 1532,
        "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13;"
    },
    {
        "question_id": 1533,
        "answer_sql": "SELECT r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 15;"
    },
    {
        "question_id": 1534,
        "answer_sql": "SELECT r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 15;"
    },
    {
        "question_id": 1535,
        "answer_sql": "SELECT Id FROM goods WHERE Id LIKE '%APP%';"
    },
    {
        "question_id": 1536,
        "answer_sql": "SELECT Id FROM goods WHERE Id LIKE '%APP%';"
    },
    {
        "question_id": 1537,
        "answer_sql": ""
    },
    {
        "question_id": 1538,
        "answer_sql": ""
    },
    {
        "question_id": 1539,
        "answer_sql": "SELECT LastName FROM customers ORDER BY LastName ASC;"
    },
    {
        "question_id": 1540,
        "answer_sql": "SELECT LastName FROM customers ORDER BY LastName ASC;"
    },
    {
        "question_id": 1541,
        "answer_sql": "SELECT Item FROM items;"
    },
    {
        "question_id": 1542,
        "answer_sql": "SELECT DISTINCT Item FROM items;"
    },
    {
        "question_id": 1543,
        "answer_sql": "SELECT r.ReceiptNumber, r.Date, r.CustomerId FROM receipts r WHERE r.CustomerId = 12 UNION ALL SELECT r.ReceiptNumber, r.Date, r.CustomerId FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'apple'"
    },
    {
        "question_id": 1544,
        "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r LEFT JOIN items i ON r.ReceiptNumber = i.Receipt LEFT JOIN goods g ON i.Item = g.Id WHERE (g.Flavor = 'apple' OR r.CustomerId = 12);"
    },
    {
        "question_id": 1545,
        "answer_sql": "SELECT ReceiptNumber, Date FROM receipts ORDER BY Date DESC LIMIT 1;"
    },
    {
        "question_id": 1546,
        "answer_sql": "SELECT ReceiptNumber, Date FROM receipts ORDER BY Date DESC LIMIT 1;"
    },
    {
        "question_id": 1547,
        "answer_sql": "SELECT r.ReceiptNumber, r.Date FROM receipts r WHERE r.Date = (SELECT MIN(Date) FROM receipts) UNION ALL SELECT r.ReceiptNumber, r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 10;"
    },
    {
        "question_id": 1548,
        "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE (g.Price > 10) OR (r.Date = (SELECT MIN(Date) FROM receipts))"
    },
    {
        "question_id": 1549,
        "answer_sql": ""
    },
    {
        "question_id": 1550,
        "answer_sql": ""
    },
    {
        "question_id": 1551,
        "answer_sql": "SELECT LastName, FirstName FROM customers c JOIN receipts r ON c.Id = r.CustomerId WHERE r.Date = (SELECT MIN(Date) FROM receipts);"
    },
    {
        "question_id": 1552,
        "answer_sql": "SELECT c.LastName, c.FirstName FROM customers c JOIN receipts r ON c.Id = r.CustomerId WHERE r.Date = (SELECT MIN(Date) FROM receipts);"
    },
    {
        "question_id": 1553,
        "answer_sql": "SELECT AVG(g.Price) FROM goods g WHERE g.Flavor IN ('blackberry', 'blueberry');"
    },
    {
        "question_id": 1554,
        "answer_sql": "SELECT AVG(g.Price) FROM goods g WHERE g.Flavor IN ('blackberry', 'blueberry');"
    },
    {
        "question_id": 1555,
        "answer_sql": "SELECT MIN(Price) FROM goods WHERE Flavor = 'cheese';"
    },
    {
        "question_id": 1556,
        "answer_sql": ""
    },
    {
        "question_id": 1557,
        "answer_sql": "SELECT g.Flavor, MAX(g.Price) AS HighestPrice, MIN(g.Price) AS LowestPrice, AVG(g.Price) AS AveragePrice FROM goods g GROUP BY g.Flavor ORDER BY g.Flavor;"
    },
    {
        "question_id": 1558,
        "answer_sql": "SELECT g.Flavor, MAX(g.Price) AS MaxPrice, MIN(g.Price) AS MinPrice, AVG(g.Price) AS AvgPrice FROM goods g GROUP BY g.Flavor ORDER BY g.Flavor;"
    },
    {
        "question_id": 1559,
        "answer_sql": "SELECT Food, MIN(Price) AS MinPrice, MAX(Price) AS MaxPrice FROM goods GROUP BY Food ORDER BY Food;"
    },
    {
        "question_id": 1560,
        "answer_sql": "SELECT g.Food, MIN(g.Price) AS MinPrice, MAX(g.Price) AS MaxPrice FROM goods g GROUP BY g.Food ORDER BY g.Food;"
    },
    {
        "question_id": 1561,
        "answer_sql": "SELECT ReceiptNumber, Date, COUNT(*) as Count FROM receipts GROUP BY ReceiptNumber, Date ORDER BY Count DESC LIMIT 3;"
    },
    {
        "question_id": 1562,
        "answer_sql": "SELECT r.Date, COUNT(*) as Count FROM receipts r GROUP BY r.Date ORDER BY Count DESC LIMIT 3;"
    },
    {
        "question_id": 1563,
        "answer_sql": "SELECT customers.LastName, COUNT(*) as TotalPurchases FROM receipts JOIN customers ON receipts.CustomerId = customers.Id GROUP BY customers.LastName ORDER BY TotalPurchases DESC LIMIT 1;"
    },
    {
        "question_id": 1564,
        "answer_sql": "SELECT r.CustomerId, COUNT(*) as TotalPurchases FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt GROUP BY r.CustomerId ORDER BY TotalPurchases DESC LIMIT 1;"
    },
    {
        "question_id": 1565,
        "answer_sql": "SELECT COUNT(DISTINCT r.CustomerId) AS distinct_customers, r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date;"
    },
    {
        "question_id": 1566,
        "answer_sql": "SELECT r.Date, COUNT(DISTINCT c.Id) AS Customers FROM receipts r JOIN customers c ON r.CustomerId = c.Id GROUP BY r.Date;"
    },
    {
        "question_id": 1567,
        "answer_sql": ""
    },
    {
        "question_id": 1568,
        "answer_sql": ""
    },
    {
        "question_id": 1569,
        "answer_sql": ""
    },
    {
        "question_id": 1570,
        "answer_sql": ""
    },
    {
        "question_id": 1571,
        "answer_sql": "SELECT g.Id FROM goods g JOIN (SELECT AVG(Price) AS avg_price FROM goods WHERE Food = 'Tart') AS t ON g.Price >= t.avg_price WHERE g.Food = 'Cake';"
    },
    {
        "question_id": 1572,
        "answer_sql": ""
    },
    {
        "question_id": 1573,
        "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price > (SELECT 2 * AVG(Price) FROM goods);"
    },
    {
        "question_id": 1574,
        "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price > (SELECT AVG(Price) FROM goods) * 2;"
    },
    {
        "question_id": 1575,
        "answer_sql": "SELECT g.Id, g.Flavor, g.Food FROM goods g JOIN items i ON g.Id = i.Item ORDER BY g.Price;"
    },
    {
        "question_id": 1576,
        "answer_sql": "SELECT g.Id, g.Flavor, g.Food FROM goods g ORDER BY g.Price;"
    },
    {
        "question_id": 1577,
        "answer_sql": "SELECT g.Id, g.Flavor FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' ORDER BY g.Flavor;"
    },
    {
        "question_id": 1578,
        "answer_sql": ""
    },
    {
        "question_id": 1579,
        "answer_sql": ""
    },
    {
        "question_id": 1580,
        "answer_sql": ""
    },
    {
        "question_id": 1581,
        "answer_sql": ""
    },
    {
        "question_id": 1582,
        "answer_sql": "SELECT DISTINCT g.Flavor FROM goods g WHERE g.Food = 'Cake' AND g.Id NOT IN (SELECT i.Item FROM items i JOIN receipts r ON i.Receipt = r.ReceiptNumber WHERE r.CustomerId = 1 AND r.Date > '2023-01-01')"
    },
    {
        "question_id": 1583,
        "answer_sql": "SELECT g.Flavor, g.Food, COUNT(*) as count FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Id ORDER BY count DESC LIMIT 3;"
    },
    {
        "question_id": 1584,
        "answer_sql": "SELECT Item, COUNT(*) as Count FROM items GROUP BY Item ORDER BY Count DESC LIMIT 3;"
    },
    {
        "question_id": 1585,
        "answer_sql": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id HAVING SUM(g.Price) > 150;"
    },
    {
        "question_id": 1586,
        "answer_sql": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id HAVING SUM(g.Price) > 150;"
    },
    {
        "question_id": 1587,
        "answer_sql": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id HAVING AVG(g.Price) > 5;"
    },
    {
        "question_id": 1588,
        "answer_sql": "SELECT c.Id FROM customers c JOIN ( SELECT Item, SUM(Price) AS Total, COUNT(Item) AS Count FROM items i JOIN goods g ON i.Item = g.Id GROUP BY Item HAVING SUM(Price) > 5 ) t ON t.Item IN ( SELECT Item FROM items JOIN goods ON items.Item = goods.Id GROUP BY Item HAVING AVG(Price) > 5 )"
    },
    {
        "question_id": 1589,
        "answer_sql": "SELECT DATE(r.Date) AS Selling_Day FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY Selling_Day HAVING SUM(g.Price) > 100;"
    },
    {
        "question_id": 1590,
        "answer_sql": "SELECT r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date HAVING SUM(g.Price) > 100;"
    },
    {
        "question_id": 1591,
        "answer_sql": "SELECT COUNT(*) FROM driver;"
    },
    {
        "question_id": 1592,
        "answer_sql": "SELECT COUNT(*) FROM driver;"
    },
    {
        "question_id": 1593,
        "answer_sql": "SELECT Make, COUNT(*) as Count FROM driver WHERE Points > 150 GROUP BY Make;"
    },
    {
        "question_id": 1594,
        "answer_sql": "SELECT t.Make, COUNT(*) FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID WHERE d.Points > 150 GROUP BY t.Make;"
    },
    {
        "question_id": 1595,
        "answer_sql": "SELECT t.Make, AVG(d.Age) AS AvgAge FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make;"
    },
    {
        "question_id": 1596,
        "answer_sql": "SELECT t.Make, AVG(d.Age) AS AvgAge FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make;"
    },
    {
        "question_id": 1597,
        "answer_sql": "SELECT AVG(Laps) FROM driver WHERE Age < 20;"
    },
    {
        "question_id": 1598,
        "answer_sql": "SELECT AVG(Laps) FROM driver WHERE Age < 20;"
    },
    {
        "question_id": 1599,
        "answer_sql": "SELECT t.Manager, t.Sponsor, t.Car_Owner FROM team t ORDER BY t.Car_Owner;"
    },
    {
        "question_id": 1600,
        "answer_sql": "SELECT t.Manager, t.Sponsor, c.Country FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID JOIN country c ON d.Country = c.Country_Id ORDER BY c.Country;"
    },
    {
        "question_id": 1601,
        "answer_sql": "SELECT t.Make FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID GROUP BY t.Make HAVING COUNT(DISTINCT td.Driver_ID) > 1;"
    },
    {
        "question_id": 1602,
        "answer_sql": "SELECT t.Make, COUNT(*) as num_teams FROM team t GROUP BY t.Make HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1603,
        "answer_sql": ""
    },
    {
        "question_id": 1604,
        "answer_sql": ""
    },
    {
        "question_id": 1605,
        "answer_sql": "SELECT MAX(Points), MIN(Points) FROM driver;"
    },
    {
        "question_id": 1606,
        "answer_sql": "SELECT MAX(Points) AS Highest_Points, MIN(Points) AS Lowest_Points FROM driver;"
    },
    {
        "question_id": 1607,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Points < 150;"
    },
    {
        "question_id": 1608,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Points < 150;"
    },
    {
        "question_id": 1609,
        "answer_sql": "SELECT Driver FROM driver ORDER BY Age ASC;"
    },
    {
        "question_id": 1610,
        "answer_sql": "SELECT Driver FROM driver ORDER BY Age ASC;"
    },
    {
        "question_id": 1611,
        "answer_sql": "SELECT Driver FROM driver ORDER BY Points DESC;"
    },
    {
        "question_id": 1612,
        "answer_sql": "SELECT DISTINCT d.Driver FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID ORDER BY d.Points DESC;"
    },
    {
        "question_id": 1613,
        "answer_sql": "SELECT driver.Driver, country.Country FROM driver JOIN country ON driver.Country = country.Country_Id;"
    },
    {
        "question_id": 1614,
        "answer_sql": "SELECT driver.Driver, country.Country FROM driver JOIN country ON driver.Country = country.Country_Id;"
    },
    {
        "question_id": 1615,
        "answer_sql": "SELECT MAX(d.Points) FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID JOIN country c ON d.Country = c.Country_Id WHERE c.Capital = 'Dublin';"
    },
    {
        "question_id": 1616,
        "answer_sql": "SELECT MAX(d.Points) FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID JOIN country c ON d.Country = c.Country_Id WHERE c.Capital = 'Dublin';"
    },
    {
        "question_id": 1617,
        "answer_sql": "SELECT AVG(d.Age) FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID JOIN country c ON d.Country = c.Country_Id WHERE c.Official_native_language = 'English';"
    },
    {
        "question_id": 1618,
        "answer_sql": "SELECT AVG(d.Age) FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID JOIN country c ON d.Country = c.Country_Id WHERE c.Official_native_language = 'English';"
    },
    {
        "question_id": 1619,
        "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d ON c.Country_Id = d.Country JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID WHERE d.Points > 150;"
    },
    {
        "question_id": 1620,
        "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d ON c.Country_Id = d.Country JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID WHERE d.Points > 150;"
    },
    {
        "question_id": 1621,
        "answer_sql": "SELECT c.Capital FROM country c JOIN driver d ON c.Country_Id = d.Country JOIN (SELECT Driver_ID FROM driver ORDER BY Points DESC LIMIT 1) dd ON d.Driver_ID = dd.Driver_ID;"
    },
    {
        "question_id": 1622,
        "answer_sql": "SELECT c.Capital FROM country c JOIN driver d ON c.Country_Id = d.Country JOIN ( SELECT Driver_ID, MAX(Points) AS Max_Points FROM driver GROUP BY Driver_ID ) tmp ON d.Driver_ID = tmp.Driver_ID AND d.Points = tmp.Max_Points;"
    },
    {
        "question_id": 1623,
        "answer_sql": "SELECT t.Make, COUNT(d.Driver_ID) AS NumDrivers FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make;"
    },
    {
        "question_id": 1624,
        "answer_sql": "SELECT t.Make, COUNT(*) as driver_count FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make;"
    },
    {
        "question_id": 1625,
        "answer_sql": "SELECT t.Make, COUNT(DISTINCT d.Driver_ID) AS NumDrivers FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make ORDER BY NumDrivers DESC LIMIT 1;"
    },
    {
        "question_id": 1626,
        "answer_sql": "SELECT Make, COUNT(*) as Count FROM driver GROUP BY Make ORDER BY Count DESC LIMIT 1;"
    },
    {
        "question_id": 1627,
        "answer_sql": "SELECT DISTINCT T2.Make FROM team_driver T1 JOIN team T2 ON T1.Team_ID = T2.Team_ID JOIN driver T3 ON T1.Driver_ID = T3.Driver_ID GROUP BY T2.Make HAVING COUNT(T3.Driver_ID) >= 3;"
    },
    {
        "question_id": 1628,
        "answer_sql": "SELECT t.Make FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make HAVING COUNT(DISTINCT d.Driver_ID) >= 3;"
    },
    {
        "question_id": 1629,
        "answer_sql": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver);"
    },
    {
        "question_id": 1630,
        "answer_sql": "SELECT Team FROM team t LEFT JOIN team_driver td ON t.Team_ID = td.Team_ID WHERE td.Driver_ID IS NULL"
    },
    {
        "question_id": 1631,
        "answer_sql": "SELECT c.Country FROM country c JOIN driver d ON c.Country_Id = d.Country JOIN team_driver td ON d.Driver_ID = td.Driver_ID WHERE d.Make = 'Dodge' OR d.Make = 'Chevrolet' GROUP BY c.Country HAVING COUNT(DISTINCT d.Make) = 2;"
    },
    {
        "question_id": 1632,
        "answer_sql": ""
    },
    {
        "question_id": 1633,
        "answer_sql": "SELECT SUM(Points) AS Total_Points, AVG(Points) AS Average_Points FROM driver;"
    },
    {
        "question_id": 1634,
        "answer_sql": "SELECT SUM(Points) AS Total_Points, AVG(Points) AS Average_Points FROM driver;"
    },
    {
        "question_id": 1635,
        "answer_sql": ""
    },
    {
        "question_id": 1636,
        "answer_sql": ""
    },
    {
        "question_id": 1637,
        "answer_sql": "SELECT t.Manager, t.Sponsor FROM team t JOIN ( SELECT Team_ID FROM team_driver GROUP BY Team_ID ORDER BY COUNT(*) DESC LIMIT 1 ) tm ON t.Team_ID = tm.Team_ID;"
    },
    {
        "question_id": 1638,
        "answer_sql": "SELECT t.Manager, t.Sponsor FROM team t JOIN ( SELECT Team_ID FROM team_driver GROUP BY Team_ID ORDER BY COUNT(*) DESC LIMIT 1 ) tm ON t.Team_ID = tm.Team_ID;"
    },
    {
        "question_id": 1639,
        "answer_sql": "SELECT t.Manager, t.Car_Owner FROM team t JOIN ( SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING COUNT(*) >= 2 ) sub ON t.Team_ID = sub.Team_ID;"
    },
    {
        "question_id": 1640,
        "answer_sql": "SELECT t.Manager, t.Car_Owner FROM team t JOIN ( SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING COUNT(Driver_ID) >= 2 ) sub ON t.Team_ID = sub.Team_ID;"
    },
    {
        "question_id": 1641,
        "answer_sql": "SELECT COUNT(*) FROM institution;"
    },
    {
        "question_id": 1642,
        "answer_sql": "SELECT COUNT(*) FROM institution;"
    },
    {
        "question_id": 1643,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"
    },
    {
        "question_id": 1644,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"
    },
    {
        "question_id": 1645,
        "answer_sql": "SELECT Name FROM institution ORDER BY Founded ASC;"
    },
    {
        "question_id": 1646,
        "answer_sql": "SELECT Name, Founded FROM institution ORDER BY Founded;"
    },
    {
        "question_id": 1647,
        "answer_sql": "SELECT institution.City, institution.Province FROM institution;"
    },
    {
        "question_id": 1648,
        "answer_sql": "SELECT institution.City, institution.Province FROM institution;"
    },
    {
        "question_id": 1649,
        "answer_sql": "SELECT MAX(Enrollment), MIN(Enrollment) FROM institution;"
    },
    {
        "question_id": 1650,
        "answer_sql": "SELECT MAX(Enrollment), MIN(Enrollment) FROM institution;"
    },
    {
        "question_id": 1651,
        "answer_sql": "SELECT DISTINCT Affiliation FROM institution WHERE City != 'Vancouver';"
    },
    {
        "question_id": 1652,
        "answer_sql": "SELECT DISTINCT Affiliation FROM institution WHERE City != 'Vancouver';"
    },
    {
        "question_id": 1653,
        "answer_sql": "SELECT T1.Stadium, T1.Capacity FROM institution AS T1 ORDER BY T1.Capacity DESC;"
    },
    {
        "question_id": 1654,
        "answer_sql": "SELECT T1.Stadium FROM institution AS T1 ORDER BY T1.Capacity DESC;"
    },
    {
        "question_id": 1655,
        "answer_sql": "SELECT institution.Stadium FROM institution JOIN (SELECT Institution_ID, MAX(Enrollment) AS Max_Enrollment FROM institution) AS max_enrollment ON institution.Institution_ID = max_enrollment.Institution_ID WHERE institution.Enrollment = max_enrollment.Max_Enrollment;"
    },
    {
        "question_id": 1656,
        "answer_sql": "SELECT institution.Stadium FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID ORDER BY institution.Enrollment DESC LIMIT 1;"
    },
    {
        "question_id": 1657,
        "answer_sql": "SELECT institution.Name, Championship.Nickname FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID;"
    },
    {
        "question_id": 1658,
        "answer_sql": "SELECT institution.Name, Championship.Nickname FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID;"
    },
    {
        "question_id": 1659,
        "answer_sql": "SELECT C.Nickname FROM Institution I JOIN Championship C ON I.Institution_ID = C.Institution_ID ORDER BY I.Enrollment ASC LIMIT 1;"
    },
    {
        "question_id": 1660,
        "answer_sql": "SELECT C.Nickname FROM Institution I JOIN Championship C ON I.Institution_ID = C.Institution_ID ORDER BY I.Enrollment ASC LIMIT 1;"
    },
    {
        "question_id": 1661,
        "answer_sql": "SELECT institution.Name, COUNT(championship.Institution_ID) AS Number_of_Championships FROM institution LEFT JOIN championship ON institution.Institution_ID = championship.Institution_ID GROUP BY institution.Name ORDER BY Number_of_Championships DESC;"
    },
    {
        "question_id": 1662,
        "answer_sql": "SELECT institution.Name, COUNT(championship.Institution_ID) AS Number_of_Championships FROM institution LEFT JOIN championship ON institution.Institution_ID = championship.Institution_ID GROUP BY institution.Name ORDER BY Number_of_Championships DESC;"
    },
    {
        "question_id": 1663,
        "answer_sql": "SELECT DISTINCT institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID;"
    },
    {
        "question_id": 1664,
        "answer_sql": "SELECT DISTINCT institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID GROUP BY institution.Name HAVING COUNT(*) >= 1;"
    },
    {
        "question_id": 1665,
        "answer_sql": "SELECT SUM(Number_of_Championships) FROM Championship c WHERE c.Institution_ID IN (SELECT Institution_ID FROM institution WHERE Affiliation = 'public');"
    },
    {
        "question_id": 1666,
        "answer_sql": "SELECT SUM(Number_of_Championships) FROM Championship c JOIN institution i ON c.Institution_ID = i.Institution_ID WHERE i.Affiliation = 'Public';"
    },
    {
        "question_id": 1667,
        "answer_sql": "SELECT Affiliation, COUNT(*) AS NumberOfInstitutions FROM institution GROUP BY Affiliation;"
    },
    {
        "question_id": 1668,
        "answer_sql": "SELECT Affiliation, COUNT(*) AS NumberOfInstitutions FROM institution GROUP BY Affiliation;"
    },
    {
        "question_id": 1669,
        "answer_sql": "SELECT Affiliation, COUNT(*) as count FROM institution GROUP BY Affiliation ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 1670,
        "answer_sql": "SELECT Affiliation, COUNT(*) as frequency FROM institution GROUP BY Affiliation ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 1671,
        "answer_sql": ""
    },
    {
        "question_id": 1672,
        "answer_sql": ""
    },
    {
        "question_id": 1673,
        "answer_sql": "SELECT T2.Nickname FROM institution T1 INNER JOIN Championship T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T1.Capacity DESC;"
    },
    {
        "question_id": 1674,
        "answer_sql": "SELECT T1.Nickname FROM `Championship` AS T1 INNER JOIN `institution` AS T2 ON T1.Institution_ID = T2.Institution_ID ORDER BY T2.Capacity DESC;"
    },
    {
        "question_id": 1675,
        "answer_sql": "SELECT SUM(institution.Enrollment) FROM institution WHERE institution.City IN ('Vancouver', 'Calgary');"
    },
    {
        "question_id": 1676,
        "answer_sql": "SELECT Enrollment FROM institution WHERE City IN ('Vancouver', 'Calgary');"
    },
    {
        "question_id": 1677,
        "answer_sql": "SELECT DISTINCT T1.Province FROM institution T1 JOIN institution T2 ON T1.Province = T2.Province WHERE T1.Founded < 1920 AND T2.Founded > 1950"
    },
    {
        "question_id": 1678,
        "answer_sql": "SELECT DISTINCT T1.Province FROM institution T1 JOIN institution T2 ON T1.Province = T2.Province WHERE T1.Founded < 1920 AND T2.Founded > 1950"
    },
    {
        "question_id": 1679,
        "answer_sql": "SELECT COUNT(DISTINCT Province) FROM institution;"
    },
    {
        "question_id": 1680,
        "answer_sql": "SELECT COUNT(DISTINCT Province) FROM institution;"
    },
    {
        "question_id": 1681,
        "answer_sql": "SELECT * FROM Warehouses;"
    },
    {
        "question_id": 1682,
        "answer_sql": "SELECT * FROM Warehouses;"
    },
    {
        "question_id": 1683,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse IN ( SELECT Code FROM Warehouses WHERE Location = 'New York' )"
    },
    {
        "question_id": 1684,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse IN ( SELECT Code FROM Warehouses WHERE Location = 'New York' )"
    },
    {
        "question_id": 1685,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Value > 150;"
    },
    {
        "question_id": 1686,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Value > 150;"
    },
    {
        "question_id": 1687,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) AS Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1688,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) AS Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1689,
        "answer_sql": "SELECT AVG(Value), SUM(Value) FROM Boxes;"
    },
    {
        "question_id": 1690,
        "answer_sql": "SELECT AVG(Value) AS AverageValue, SUM(Value) AS TotalValue FROM Boxes;"
    },
    {
        "question_id": 1691,
        "answer_sql": "SELECT AVG(Capacity) AS AverageCapacity, SUM(Capacity) AS TotalCapacity FROM Warehouses;"
    },
    {
        "question_id": 1692,
        "answer_sql": "SELECT AVG(Capacity) AS AverageCapacity, SUM(Capacity) AS TotalCapacity FROM Warehouses;"
    },
    {
        "question_id": 1693,
        "answer_sql": "SELECT Contents, AVG(Value) AS AverageValue, MAX(Value) AS MaximumValue FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1694,
        "answer_sql": "SELECT Contents, AVG(Value) AS Average, MAX(Value) AS Maximum FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1695,
        "answer_sql": "SELECT Contents, SUM(Value) AS TotalValue FROM Boxes GROUP BY Contents ORDER BY TotalValue DESC LIMIT 1;"
    },
    {
        "question_id": 1696,
        "answer_sql": "SELECT Contents, Value FROM Boxes ORDER BY Value DESC LIMIT 1;"
    },
    {
        "question_id": 1697,
        "answer_sql": "SELECT AVG(Value) FROM Boxes;"
    },
    {
        "question_id": 1698,
        "answer_sql": "SELECT AVG(Value) FROM Boxes;"
    },
    {
        "question_id": 1699,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"
    },
    {
        "question_id": 1700,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"
    },
    {
        "question_id": 1701,
        "answer_sql": "SELECT COUNT(DISTINCT Contents) FROM Boxes;"
    },
    {
        "question_id": 1702,
        "answer_sql": "SELECT COUNT(DISTINCT Contents) FROM Boxes;"
    },
    {
        "question_id": 1703,
        "answer_sql": "SELECT DISTINCT Location FROM Warehouses;"
    },
    {
        "question_id": 1704,
        "answer_sql": "SELECT DISTINCT Location FROM Warehouses;"
    },
    {
        "question_id": 1705,
        "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location IN ('Chicago', 'New York'))"
    },
    {
        "question_id": 1706,
        "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location IN ('Chicago', 'New York'));"
    },
    {
        "question_id": 1707,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1708,
        "answer_sql": "SELECT SUM(Value) FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location IN ('Chicago', 'New York'))"
    },
    {
        "question_id": 1709,
        "answer_sql": "SELECT b.Contents FROM Boxes b JOIN Warehouses w ON b.Warehouse = w.Code WHERE w.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1710,
        "answer_sql": ""
    },
    {
        "question_id": 1711,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse NOT IN ( SELECT Code FROM Warehouses WHERE Location = 'New York' )"
    },
    {
        "question_id": 1712,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse NOT IN ( SELECT Code FROM Warehouses WHERE Location = 'New York' )"
    },
    {
        "question_id": 1713,
        "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' AND NOT Boxes.Contents = 'Scissors';"
    },
    {
        "question_id": 1714,
        "answer_sql": "SELECT w.Location FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse WHERE b.Contents = 'Rocks' AND b.Contents != 'Scissors';"
    },
    {
        "question_id": 1715,
        "answer_sql": "SELECT Warehouses.Code, Warehouses.Location, Warehouses.Capacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors');"
    },
    {
        "question_id": 1716,
        "answer_sql": "SELECT DISTINCT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors');"
    },
    {
        "question_id": 1717,
        "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors');"
    },
    {
        "question_id": 1718,
        "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors');"
    },
    {
        "question_id": 1719,
        "answer_sql": "SELECT Code, Contents FROM Boxes ORDER BY Value DESC;"
    },
    {
        "question_id": 1720,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes ORDER BY Boxes.Value;"
    },
    {
        "question_id": 1721,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value = (SELECT MIN(Value) FROM Boxes)"
    },
    {
        "question_id": 1722,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value = (SELECT MIN(Value) FROM Boxes);"
    },
    {
        "question_id": 1723,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Value > (SELECT AVG(Value) FROM Boxes);"
    },
    {
        "question_id": 1724,
        "answer_sql": "SELECT Contents FROM Boxes WHERE Value > (SELECT AVG(Value) FROM Boxes);"
    },
    {
        "question_id": 1725,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents;"
    },
    {
        "question_id": 1726,
        "answer_sql": "SELECT Contents FROM Boxes ORDER BY Contents ASC;"
    },
    {
        "question_id": 1727,
        "answer_sql": "SELECT b.Code FROM Boxes b WHERE b.Value > (SELECT MIN(Value) FROM Boxes WHERE Contents = 'Rocks')"
    },
    {
        "question_id": 1728,
        "answer_sql": "SELECT b.Code FROM Boxes b WHERE b.Value > (SELECT Value FROM Boxes WHERE Contents = 'Rocks')"
    },
    {
        "question_id": 1729,
        "answer_sql": "SELECT b1.Code, b1.Contents FROM Boxes b1 WHERE b1.Value > ( SELECT MIN(b2.Value) FROM Boxes b2 WHERE b2.Contents = 'Scissors' )"
    },
    {
        "question_id": 1730,
        "answer_sql": "SELECT b.Code, b.Contents FROM Boxes b WHERE b.Value > (SELECT Value FROM Boxes WHERE Contents = 'Scissors')"
    },
    {
        "question_id": 1731,
        "answer_sql": "SELECT SUM(Value) FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1);"
    },
    {
        "question_id": 1732,
        "answer_sql": "SELECT SUM(Value) AS TotalValue FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1);"
    },
    {
        "question_id": 1733,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) AS AverageValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150;"
    },
    {
        "question_id": 1734,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) AS Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150;"
    },
    {
        "question_id": 1735,
        "answer_sql": "SELECT Contents, SUM(Value) AS TotalValue, COUNT(*) AS TotalBoxes FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1736,
        "answer_sql": "SELECT Contents, SUM(Value) AS TotalValue, COUNT(*) AS TotalBoxes FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1737,
        "answer_sql": "SELECT Location, SUM(Capacity) AS TotalCapacity, AVG(Capacity) AS AverageCapacity, MAX(Capacity) AS MaximumCapacity FROM Warehouses GROUP BY Location;"
    },
    {
        "question_id": 1738,
        "answer_sql": "SELECT Location, SUM(Capacity) AS TotalCapacity, AVG(Capacity) AS AverageCapacity, MAX(Capacity) AS MaximumCapacity FROM Warehouses GROUP BY Location;"
    },
    {
        "question_id": 1739,
        "answer_sql": "SELECT SUM(Capacity) FROM Warehouses;"
    },
    {
        "question_id": 1740,
        "answer_sql": "SELECT SUM(Capacity) FROM Warehouses;"
    },
    {
        "question_id": 1741,
        "answer_sql": "SELECT Warehouses.Location, MAX(Boxes.Value) AS MaxValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"
    },
    {
        "question_id": 1742,
        "answer_sql": "SELECT W.Location, MAX(B.Value) AS MaxValue FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse GROUP BY W.Location;"
    },
    {
        "question_id": 1743,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1744,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1745,
        "answer_sql": "SELECT COUNT(DISTINCT Location) FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents = 'Rocks';"
    },
    {
        "question_id": 1746,
        "answer_sql": "SELECT COUNT(DISTINCT w.Code) FROM Warehouses w JOIN Boxes b ON w.Code = b.Warehouse WHERE b.Contents = 'Rocks';"
    },
    {
        "question_id": 1747,
        "answer_sql": "SELECT Boxes.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1748,
        "answer_sql": "SELECT Boxes.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1749,
        "answer_sql": "SELECT Boxes.Code FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'Chicago';"
    },
    {
        "question_id": 1750,
        "answer_sql": "SELECT Boxes.Code FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'Chicago';"
    },
    {
        "question_id": 1751,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1752,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1753,
        "answer_sql": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) AS DistinctContents FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1754,
        "answer_sql": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) AS DifferentContents FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1755,
        "answer_sql": "SELECT Code FROM Warehouses WHERE Capacity < (SELECT SUM(Value) FROM Boxes WHERE Warehouse = Warehouses.Code);"
    },
    {
        "question_id": 1756,
        "answer_sql": "SELECT w.Code FROM Warehouses w JOIN ( SELECT Warehouse, COUNT(*) as box_count FROM Boxes GROUP BY Warehouse ) b ON w.Code = b.Warehouse WHERE b.box_count > w.Capacity;"
    },
    {
        "question_id": 1757,
        "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes WHERE Boxes.Warehouse NOT IN ( SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location = 'Chicago' )"
    },
    {
        "question_id": 1758,
        "answer_sql": "SELECT SUM(Value) FROM Boxes WHERE Warehouse NOT IN ( SELECT Code FROM Warehouses WHERE Location = 'Chicago' )"
    },
    {
        "question_id": 1759,
        "answer_sql": "SELECT University_Name, City, State FROM university ORDER BY University_Name ASC;"
    },
    {
        "question_id": 1760,
        "answer_sql": "SELECT University_Name, City, State FROM university ORDER BY University_Name ASC;"
    },
    {
        "question_id": 1761,
        "answer_sql": "SELECT COUNT(*) FROM university WHERE (City = 'Illinois' OR City = 'Ohio');"
    },
    {
        "question_id": 1762,
        "answer_sql": "SELECT COUNT(*) FROM university WHERE City IN ('Illinois', 'Ohio');"
    },
    {
        "question_id": 1763,
        "answer_sql": "SELECT MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM university;"
    },
    {
        "question_id": 1764,
        "answer_sql": "SELECT MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM university;"
    },
    {
        "question_id": 1765,
        "answer_sql": "SELECT u.Team_Name FROM university u JOIN (SELECT AVG(`Enrollment`) AS avg_enrollment FROM university) as avg_enrollment WHERE u.Enrollment > avg_enrollment.avg_enrollment;"
    },
    {
        "question_id": 1766,
        "answer_sql": "SELECT u.Team_Name FROM university u JOIN (SELECT AVG(`Enrollment`) AS avg_enrollment FROM university) as avg_enrollment WHERE u.Enrollment > avg_enrollment;"
    },
    {
        "question_id": 1767,
        "answer_sql": "SELECT DISTINCT Home_Conference FROM university;"
    },
    {
        "question_id": 1768,
        "answer_sql": "SELECT DISTINCT Home_Conference FROM university;"
    },
    {
        "question_id": 1769,
        "answer_sql": "SELECT u.Home_Conference, COUNT(*) as universities_count FROM university u GROUP BY u.Home_Conference;"
    },
    {
        "question_id": 1770,
        "answer_sql": "SELECT Home_Conference, COUNT(University_ID) AS Num_Universities FROM university GROUP BY Home_Conference;"
    },
    {
        "question_id": 1771,
        "answer_sql": "SELECT State, COUNT(*) AS NumberOfUniversities FROM university GROUP BY State ORDER BY NumberOfUniversities DESC LIMIT 1;"
    },
    {
        "question_id": 1772,
        "answer_sql": "SELECT State, COUNT(*) as Number_of_Universities FROM university GROUP BY State ORDER BY Number_of_Universities DESC LIMIT 1;"
    },
    {
        "question_id": 1773,
        "answer_sql": "SELECT DISTINCT u.Home_Conference FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE u.Enrollment > 2000;"
    },
    {
        "question_id": 1774,
        "answer_sql": "SELECT DISTINCT u.Home_Conference FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE u.Enrollment > 2000;"
    },
    {
        "question_id": 1775,
        "answer_sql": "SELECT Home_Conference, MIN(Enrollment) AS Min_Enrollment FROM university GROUP BY Home_Conference ORDER BY Min_Enrollment ASC LIMIT 1;"
    },
    {
        "question_id": 1776,
        "answer_sql": "SELECT u.Home_Conference FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE u.Enrollment = (SELECT MIN(Enrollment) FROM university);"
    },
    {
        "question_id": 1777,
        "answer_sql": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;"
    },
    {
        "question_id": 1778,
        "answer_sql": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;"
    },
    {
        "question_id": 1779,
        "answer_sql": "SELECT m.Major_Name, mr.Rank FROM major AS m JOIN major_ranking AS mr ON m.Major_ID = mr.Major_ID JOIN university AS u ON u.University_ID = mr.University_ID WHERE u.University_Name = 'Augustana College';"
    },
    {
        "question_id": 1780,
        "answer_sql": "SELECT mr.Rank, m.Major_Name FROM major_ranking mr JOIN major m ON mr.Major_ID = m.Major_ID WHERE mr.University_ID = (SELECT University_ID FROM university WHERE University_Name = 'Augustana College')"
    },
    {
        "question_id": 1781,
        "answer_sql": "SELECT university.University_Name, university.City, university.State FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID JOIN major_ranking ON university.University_ID = major_ranking.University_ID AND major_ranking.Rank = 1 JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = 'Accounting';"
    },
    {
        "question_id": 1782,
        "answer_sql": "SELECT u.University_Name, u.City, u.State FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID JOIN major_ranking mr ON u.University_ID = mr.University_ID AND mr.Rank = 1 JOIN major m ON mr.Major_ID = m.Major_ID AND m.Major_Name = 'Accounting';"
    },
    {
        "question_id": 1783,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN ( SELECT University_ID FROM major_ranking WHERE Rank = 1 GROUP BY University_ID ORDER BY COUNT(*) DESC LIMIT 1 ) m ON u.University_ID = m.University_ID;"
    },
    {
        "question_id": 1784,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN ( SELECT University_ID FROM major_ranking WHERE Rank = 1 GROUP BY University_ID ORDER BY COUNT(*) DESC LIMIT 1 ) m ON u.University_ID = m.University_ID;"
    },
    {
        "question_id": 1785,
        "answer_sql": "SELECT u.University_Name FROM university u LEFT JOIN major_ranking mr ON u.University_ID = mr.University_ID WHERE mr.Rank != 1 OR mr.Rank IS NULL;"
    },
    {
        "question_id": 1786,
        "answer_sql": "SELECT u.University_Name FROM university u LEFT JOIN major_ranking mr ON u.University_ID = mr.University_ID WHERE mr.Rank = 1 OR mr.Rank IS NULL;"
    },
    {
        "question_id": 1787,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE m.Major_Name = 'Accounting' OR m.Major_Name = 'Urban Education';"
    },
    {
        "question_id": 1788,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE m.Major_Name IN ('Accounting', 'Urban Education') GROUP BY u.University_Name HAVING COUNT(DISTINCT m.Major_Name) = 2;"
    },
    {
        "question_id": 1789,
        "answer_sql": "SELECT university.University_Name, overall_ranking.Rank FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE university.State = 'Wisconsin';"
    },
    {
        "question_id": 1790,
        "answer_sql": "SELECT university.University_Name, overall_ranking.Rank FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE university.State = 'Wisconsin';"
    },
    {
        "question_id": 1791,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE o.Research_point = (SELECT MAX(Research_point) FROM overall_ranking);"
    },
    {
        "question_id": 1792,
        "answer_sql": "SELECT University_Name FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE o.Research_point = (SELECT MAX(Research_point) FROM overall_ranking);"
    },
    {
        "question_id": 1793,
        "answer_sql": "SELECT University_Name FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID ORDER BY reputation_point ASC;"
    },
    {
        "question_id": 1794,
        "answer_sql": "SELECT University_Name FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID ORDER BY reputation_point ASC;"
    },
    {
        "question_id": 1795,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE m.Major_Name = 'Accounting' AND mr.Rank <= 3;"
    },
    {
        "question_id": 1796,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE m.Major_Name = 'Accounting' AND mr.Rank <= 3;"
    },
    {
        "question_id": 1797,
        "answer_sql": "SELECT SUM(u.Enrollment) FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE o.Rank <= 5;"
    },
    {
        "question_id": 1798,
        "answer_sql": "SELECT SUM(u.Enrollment) FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE o.Rank <= 5;"
    },
    {
        "question_id": 1799,
        "answer_sql": "SELECT u.University_Name, o.Citation_point FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE o.Reputation_point >= 3 ORDER BY o.Reputation_point DESC LIMIT 3;"
    },
    {
        "question_id": 1800,
        "answer_sql": "SELECT university.University_Name, overall_ranking.Reputation_point, overall_ranking.Citation_point FROM overall_ranking JOIN university ON overall_ranking.University_ID = university.University_ID WHERE overall_ranking.Reputation_point >= (SELECT Reputation_point FROM overall_ranking ORDER BY Reputation_point DESC LIMIT 3) ORDER BY overall_ranking.Reputation_point DESC;"
    },
    {
        "question_id": 1801,
        "answer_sql": "SELECT DISTINCT u.State FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE u.Enrollment < 3000 GROUP BY u.State HAVING COUNT(*) > 2;"
    },
    {
        "question_id": 1802,
        "answer_sql": "SELECT DISTINCT u.State FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE u.Enrollment < 3000 GROUP BY u.State HAVING COUNT(u.University_ID) > 2;"
    },
    {
        "question_id": 1803,
        "answer_sql": "SELECT m.Title FROM Movies m LEFT JOIN MovieTheaters mt ON m.Code = mt.Movie WHERE mt.Movie IS NULL;"
    },
    {
        "question_id": 1804,
        "answer_sql": "SELECT Title FROM Movies WHERE Rating IS NULL;"
    },
    {
        "question_id": 1805,
        "answer_sql": "SELECT Title FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1806,
        "answer_sql": "SELECT Title FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1807,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon';"
    },
    {
        "question_id": 1808,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon';"
    },
    {
        "question_id": 1809,
        "answer_sql": "SELECT Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie;"
    },
    {
        "question_id": 1810,
        "answer_sql": "SELECT Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie;"
    },
    {
        "question_id": 1811,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1812,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1813,
        "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"
    },
    {
        "question_id": 1814,
        "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"
    },
    {
        "question_id": 1815,
        "answer_sql": "SELECT COUNT(DISTINCT m.Code) FROM MovieTheaters mt JOIN Movies m ON mt.Movie = m.Code;"
    },
    {
        "question_id": 1816,
        "answer_sql": "SELECT COUNT(DISTINCT m.Code) FROM Movies m;"
    },
    {
        "question_id": 1817,
        "answer_sql": "SELECT COUNT(DISTINCT Code) FROM MovieTheaters;"
    },
    {
        "question_id": 1818,
        "answer_sql": "SELECT COUNT(DISTINCT Code) FROM MovieTheaters;"
    },
    {
        "question_id": 1819,
        "answer_sql": "SELECT Rating FROM Movies WHERE Title LIKE '%Citizen%'"
    },
    {
        "question_id": 1820,
        "answer_sql": "SELECT m.Rating FROM Movies m JOIN MovieTheaters mt ON m.Code = mt.Movie WHERE m.Title LIKE '%Citizen%'"
    },
    {
        "question_id": 1821,
        "answer_sql": "SELECT Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating IN ('G', 'PG');"
    },
    {
        "question_id": 1822,
        "answer_sql": "SELECT Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Rating IN ('G', 'PG');"
    },
    {
        "question_id": 1823,
        "answer_sql": "SELECT DISTINCT M.Title FROM MovieTheaters MT JOIN Movies M ON MT.Movie = M.Code WHERE MT.Name IN ('Odeon', 'Imperial');"
    },
    {
        "question_id": 1824,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name IN ('Odeon', 'Imperial');"
    },
    {
        "question_id": 1825,
        "answer_sql": ""
    },
    {
        "question_id": 1826,
        "answer_sql": ""
    },
    {
        "question_id": 1827,
        "answer_sql": "SELECT M.Title FROM Movies M LEFT JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Name != 'Odeon'"
    },
    {
        "question_id": 1828,
        "answer_sql": "SELECT M.Title FROM Movies M LEFT JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Name != 'Odeon' OR MT.Name IS NULL;"
    },
    {
        "question_id": 1829,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Title ASC;"
    },
    {
        "question_id": 1830,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Title ASC;"
    },
    {
        "question_id": 1831,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Rating;"
    },
    {
        "question_id": 1832,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Rating;"
    },
    {
        "question_id": 1833,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters GROUP BY MovieTheaters.Name ORDER BY COUNT(MovieTheaters.Movie) DESC LIMIT 1;"
    },
    {
        "question_id": 1834,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Name ORDER BY COUNT(Movies.Code) DESC LIMIT 1;"
    },
    {
        "question_id": 1835,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Title ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1836,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Title ORDER BY COUNT(MovieTheaters.Code) DESC LIMIT 1;"
    },
    {
        "question_id": 1837,
        "answer_sql": "SELECT Rating, COUNT(*) as NumberOfMovies FROM Movies GROUP BY Rating;"
    },
    {
        "question_id": 1838,
        "answer_sql": "SELECT Rating, COUNT(*) as Count FROM Movies GROUP BY Rating;"
    },
    {
        "question_id": 1839,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1840,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1841,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IS NOT NULL;"
    },
    {
        "question_id": 1842,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IS NOT NULL;"
    },
    {
        "question_id": 1843,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL;"
    },
    {
        "question_id": 1844,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL;"
    },
    {
        "question_id": 1845,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1846,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating = 'G');"
    },
    {
        "question_id": 1847,
        "answer_sql": "SELECT Title FROM Movies;"
    },
    {
        "question_id": 1848,
        "answer_sql": "SELECT Title FROM Movies;"
    },
    {
        "question_id": 1849,
        "answer_sql": "SELECT DISTINCT Rating FROM Movies;"
    },
    {
        "question_id": 1850,
        "answer_sql": "SELECT DISTINCT Rating FROM Movies;"
    },
    {
        "question_id": 1851,
        "answer_sql": "SELECT M.* FROM Movies M LEFT JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Movie IS NULL AND M.Rating IS NULL;"
    },
    {
        "question_id": 1852,
        "answer_sql": "SELECT Movies.* FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Rating IS NULL;"
    },
    {
        "question_id": 1853,
        "answer_sql": "SELECT m.Title FROM Movies m LEFT JOIN MovieTheaters mt ON m.Code = mt.Movie WHERE mt.Code IS NULL;"
    },
    {
        "question_id": 1854,
        "answer_sql": "SELECT DISTINCT M.Title FROM Movies M LEFT JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Movie IS NULL;"
    },
    {
        "question_id": 1855,
        "answer_sql": "SELECT Recipient FROM Package ORDER BY Weight DESC LIMIT 1;"
    },
    {
        "question_id": 1856,
        "answer_sql": "SELECT c.Name FROM Client c JOIN Package p ON c.AccountNumber = p.Recipient WHERE p.Weight = (SELECT MAX(Weight) FROM Package);"
    },
    {
        "question_id": 1857,
        "answer_sql": "SELECT SUM(P.Weight) AS TotalWeight FROM Package P JOIN Shipment S ON P.Shipment = S.ShipmentID JOIN Client C ON S.Manager = C.AccountNumber WHERE C.Name = 'Leo Wong';"
    },
    {
        "question_id": 1858,
        "answer_sql": "SELECT SUM(P.Weight) AS TotalWeight FROM Package P JOIN Shipment S ON P.Shipment = S.ShipmentID JOIN Has_Clearance HC ON S.Manager = HC.Employee JOIN Employee E ON HC.Employee = E.EmployeeID WHERE E.Name = 'Leo Wong';"
    },
    {
        "question_id": 1859,
        "answer_sql": "SELECT Position FROM Employee WHERE Name = 'Amy Wong';"
    },
    {
        "question_id": 1860,
        "answer_sql": "SELECT Position FROM Employee WHERE Name = 'Amy Wong';"
    },
    {
        "question_id": 1861,
        "answer_sql": "SELECT Salary, Position FROM Employee WHERE Name = 'Turanga Leela';"
    },
    {
        "question_id": 1862,
        "answer_sql": "SELECT Salary, Position FROM Employee WHERE Name = 'Turanga Leela';"
    },
    {
        "question_id": 1863,
        "answer_sql": "SELECT AVG(Salary) FROM Employee WHERE Position LIKE '%Intern%';"
    },
    {
        "question_id": 1864,
        "answer_sql": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern';"
    },
    {
        "question_id": 1865,
        "answer_sql": ""
    },
    {
        "question_id": 1866,
        "answer_sql": ""
    },
    {
        "question_id": 1867,
        "answer_sql": ""
    },
    {
        "question_id": 1868,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT EmployeeID FROM Employee WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1869,
        "answer_sql": ""
    },
    {
        "question_id": 1870,
        "answer_sql": ""
    },
    {
        "question_id": 1871,
        "answer_sql": "SELECT p.Shipment, p.PackageNumber, p.Contents, p.Weight, c.Name AS Sender, cr.Name AS Recipient FROM Package p JOIN Client c ON p.Sender = c.AccountNumber JOIN Client cr ON p.Recipient = cr.AccountNumber WHERE (c.Name = 'Leo Wong' OR cr.Name = 'Leo Wong')"
    },
    {
        "question_id": 1872,
        "answer_sql": ""
    },
    {
        "question_id": 1873,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT EmployeeID FROM Employee WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1874,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT EmployeeID FROM Employee WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1875,
        "answer_sql": ""
    },
    {
        "question_id": 1876,
        "answer_sql": ""
    },
    {
        "question_id": 1877,
        "answer_sql": ""
    },
    {
        "question_id": 1878,
        "answer_sql": "SELECT p.PackageNumber, p.Weight FROM Package p JOIN Shipment s ON p.Shipment = s.ShipmentID JOIN Client c ON s.Manager = c.AccountNumber WHERE c.Name LIKE '%John%' ORDER BY p.Weight DESC LIMIT 1;"
    },
    {
        "question_id": 1879,
        "answer_sql": "SELECT p.PackageNumber, p.Weight FROM Package p ORDER BY p.Weight ASC LIMIT 3;"
    },
    {
        "question_id": 1880,
        "answer_sql": "SELECT p.PackageNumber, p.Weight FROM Package p ORDER BY p.Weight ASC LIMIT 3;"
    },
    {
        "question_id": 1881,
        "answer_sql": "SELECT C.Name, COUNT(*) as NumPackages FROM Client C JOIN Package P ON C.AccountNumber = P.Sender GROUP BY C.AccountNumber ORDER BY NumPackages DESC LIMIT 1;"
    },
    {
        "question_id": 1882,
        "answer_sql": "SELECT Client.Name, COUNT(*) as PackageCount FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.AccountNumber ORDER BY PackageCount DESC LIMIT 1;"
    },
    {
        "question_id": 1883,
        "answer_sql": "SELECT Client.Name, COUNT(Package.PackageNumber) as NumberOfPackages FROM Client LEFT JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Client.AccountNumber ORDER BY NumberOfPackages ASC LIMIT 1;"
    },
    {
        "question_id": 1884,
        "answer_sql": "SELECT Recipient, COUNT(*) as NumPackages FROM Package GROUP BY Recipient ORDER BY NumPackages ASC LIMIT 1;"
    },
    {
        "question_id": 1885,
        "answer_sql": "SELECT C.Name FROM Client C JOIN Package P ON C.AccountNumber = P.Sender GROUP BY C.AccountNumber HAVING COUNT(P.PackageNumber) > 1;"
    },
    {
        "question_id": 1886,
        "answer_sql": "SELECT c.Name FROM Client c JOIN Package p ON c.AccountNumber = p.Sender GROUP BY c.AccountNumber HAVING COUNT(p.PackageNumber) > 1;"
    },
    {
        "question_id": 1887,
        "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';"
    },
    {
        "question_id": 1888,
        "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';"
    },
    {
        "question_id": 1889,
        "answer_sql": "SELECT Name, Coordinates FROM Planet ORDER BY Name ASC;"
    },
    {
        "question_id": 1890,
        "answer_sql": "SELECT Name, Coordinates FROM Planet ORDER BY Name ASC;"
    },
    {
        "question_id": 1891,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Phillip J. Fry');"
    },
    {
        "question_id": 1892,
        "answer_sql": ""
    },
    {
        "question_id": 1893,
        "answer_sql": "SELECT Date FROM Shipment;"
    },
    {
        "question_id": 1894,
        "answer_sql": "SELECT Date FROM Shipment;"
    },
    {
        "question_id": 1895,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars');"
    },
    {
        "question_id": 1896,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars');"
    },
    {
        "question_id": 1897,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"
    },
    {
        "question_id": 1898,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"
    },
    {
        "question_id": 1899,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE (Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') OR Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela'));"
    },
    {
        "question_id": 1900,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"
    },
    {
        "question_id": 1901,
        "answer_sql": "SELECT Planet.Name, COUNT(ShipmentID) AS TotalShipments FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet GROUP BY Planet.Name;"
    },
    {
        "question_id": 1902,
        "answer_sql": "SELECT Planet, COUNT(*) AS NumberOfShipments FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Planet;"
    },
    {
        "question_id": 1903,
        "answer_sql": "SELECT Planet.Name FROM Planet JOIN Shipment ON Shipment.Planet = Planet.PlanetID GROUP BY Planet.Name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1904,
        "answer_sql": "SELECT Planet.Name FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet GROUP BY Planet.PlanetID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1905,
        "answer_sql": "SELECT E.Name AS ManagerName, COUNT(S.ShipmentID) AS NumberOfShipments FROM Employee E JOIN Shipment S ON E.EmployeeID = S.Manager GROUP BY E.EmployeeID, E.Name;"
    },
    {
        "question_id": 1906,
        "answer_sql": "SELECT COUNT(ShipmentID) AS NumberOfShipments, Name AS ManagerName FROM Employee e JOIN Shipment s ON e.EmployeeID = s.Manager GROUP BY Name;"
    },
    {
        "question_id": 1907,
        "answer_sql": "SELECT SUM(P.Weight) AS TotalWeight FROM Package P JOIN Shipment S ON P.Shipment = S.ShipmentID JOIN Planet M ON S.Planet = M.PlanetID WHERE M.Name = 'Mars';"
    },
    {
        "question_id": 1908,
        "answer_sql": "SELECT SUM(Weight) FROM Package WHERE Shipment IN (SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars'))"
    },
    {
        "question_id": 1909,
        "answer_sql": "SELECT Planet.Name, SUM(Package.Weight) AS TotalWeight FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet JOIN Package ON Shipment.ShipmentID = Package.Shipment GROUP BY Planet.Name;"
    },
    {
        "question_id": 1910,
        "answer_sql": "SELECT Planet.Name, SUM(Package.Weight) AS TotalWeight FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet JOIN Package ON Shipment.ShipmentID = Package.Shipment GROUP BY Planet.Name;"
    },
    {
        "question_id": 1911,
        "answer_sql": "SELECT Planet.Name FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet JOIN ( SELECT Shipment.Planet, SUM(Package.Weight) AS TotalWeight FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment GROUP BY Shipment.Planet HAVING TotalWeight > 30 ) AS SubQuery ON Planet.PlanetID = SubQuery.Planet;"
    },
    {
        "question_id": 1912,
        "answer_sql": ""
    },
    {
        "question_id": 1913,
        "answer_sql": ""
    },
    {
        "question_id": 1914,
        "answer_sql": "SELECT COUNT(*) FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Has_Clearance ON Shipment.Manager = Has_Clearance.Employee AND Shipment.Planet = Has_Clearance.Planet JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Employee.Name = 'Zapp Brannigan' AND Planet.Name = 'Omicron Persei 8';"
    },
    {
        "question_id": 1915,
        "answer_sql": "SELECT P.Shipment, P.PackageNumber FROM Package P JOIN Shipment S ON P.Shipment = S.ShipmentID JOIN Planet PN ON S.Planet = PN.PlanetID WHERE PN.Name = 'Omicron Persei 8' OR S.Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan');"
    },
    {
        "question_id": 1916,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Shipment IN ( SELECT ShipmentID FROM Shipment WHERE Planet = ( SELECT PlanetID FROM Planet WHERE Name = 'Omicron Persei 8' ) ) OR Sender = ( SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan' );"
    },
    {
        "question_id": 1917,
        "answer_sql": "SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30;"
    },
    {
        "question_id": 1918,
        "answer_sql": "SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30;"
    },
    {
        "question_id": 1919,
        "answer_sql": ""
    },
    {
        "question_id": 1920,
        "answer_sql": ""
    },
    {
        "question_id": 1921,
        "answer_sql": "SELECT e.Name FROM Employee e JOIN Has_Clearance hc ON e.EmployeeID = hc.Employee JOIN Planet p ON hc.Planet = p.PlanetID WHERE p.Name = 'Omega III';"
    },
    {
        "question_id": 1922,
        "answer_sql": "SELECT E.Name FROM Employee E JOIN Has_Clearance HC ON E.EmployeeID = HC.Employee JOIN Planet P ON HC.Planet = P.PlanetID WHERE P.Name = 'Omega III';"
    },
    {
        "question_id": 1923,
        "answer_sql": "SELECT p.Name FROM Planet p JOIN Has_Clearance hc ON p.PlanetID = hc.Planet GROUP BY p.PlanetID HAVING COUNT(hc.Employee) = 1;"
    },
    {
        "question_id": 1924,
        "answer_sql": "SELECT p.Name FROM Planet p JOIN Has_Clearance hc ON p.PlanetID = hc.Planet WHERE hc.Employee = (SELECT EmployeeID FROM Employee LIMIT 1);"
    },
    {
        "question_id": 1925,
        "answer_sql": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1926,
        "answer_sql": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1927,
        "answer_sql": "SELECT Name FROM Employee WHERE Salary > (SELECT AVG(Salary) FROM Employee) OR Salary > 5000;"
    },
    {
        "question_id": 1928,
        "answer_sql": "SELECT Name FROM Employee WHERE Salary > (SELECT AVG(Salary) FROM Employee) OR Salary > 5000;"
    },
    {
        "question_id": 1929,
        "answer_sql": "SELECT COUNT(DISTINCT e.EmployeeID) FROM Employee e LEFT JOIN Has_Clearance hc ON e.EmployeeID = hc.Employee WHERE hc.Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') OR hc.Planet IS NULL;"
    },
    {
        "question_id": 1930,
        "answer_sql": "SELECT COUNT(DISTINCT e.EmployeeID) FROM Employee e LEFT JOIN Has_Clearance hc ON e.EmployeeID = hc.Employee WHERE hc.Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') OR hc.Planet IS NULL;"
    },
    {
        "question_id": 1931,
        "answer_sql": "SELECT COUNT(*) FROM game;"
    },
    {
        "question_id": 1932,
        "answer_sql": "SELECT COUNT(*) FROM game;"
    },
    {
        "question_id": 1933,
        "answer_sql": "SELECT game.Title, game.Developers FROM game ORDER BY game.Units_sold_Millions DESC;"
    },
    {
        "question_id": 1934,
        "answer_sql": "SELECT game.Title, game.Developers FROM game ORDER BY game.Units_sold_Millions DESC;"
    },
    {
        "question_id": 1935,
        "answer_sql": "SELECT AVG(g.Units_sold_Millions) FROM game g WHERE g.Developers NOT LIKE '%Nintendo%'"
    },
    {
        "question_id": 1936,
        "answer_sql": "SELECT AVG(g.Units_sold_Millions) FROM game g WHERE g.Developers NOT LIKE '%Nintendo%'"
    },
    {
        "question_id": 1937,
        "answer_sql": "SELECT Platform_name, Market_district FROM platform;"
    },
    {
        "question_id": 1938,
        "answer_sql": "SELECT platform.Platform_name, platform.Market_district FROM platform;"
    },
    {
        "question_id": 1939,
        "answer_sql": "SELECT Platform_name, Platform_ID FROM platform WHERE Download_rank = 1;"
    },
    {
        "question_id": 1940,
        "answer_sql": "SELECT Platform_name, Platform_ID FROM platform WHERE Download_rank = 1;"
    },
    {
        "question_id": 1941,
        "answer_sql": "SELECT MAX(Rank_of_the_year), MIN(Rank_of_the_year) FROM player;"
    },
    {
        "question_id": 1942,
        "answer_sql": "SELECT MAX(Rank_of_the_year), MIN(Rank_of_the_year) FROM player;"
    },
    {
        "question_id": 1943,
        "answer_sql": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year < 3;"
    },
    {
        "question_id": 1944,
        "answer_sql": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year <= 3;"
    },
    {
        "question_id": 1945,
        "answer_sql": "SELECT Player_name FROM player ORDER BY Player_name ASC;"
    },
    {
        "question_id": 1946,
        "answer_sql": "SELECT Player_name FROM player ORDER BY Player_name ASC;"
    },
    {
        "question_id": 1947,
        "answer_sql": "SELECT player.Player_name, player.College FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID ORDER BY player.Rank_of_the_year DESC;"
    },
    {
        "question_id": 1948,
        "answer_sql": "SELECT player.Player_name, player.College FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID ORDER BY player.Rank_of_the_year DESC;"
    },
    {
        "question_id": 1949,
        "answer_sql": "SELECT p.Player_name, p.Rank_of_the_year FROM player p JOIN game_player gp ON p.Player_ID = gp.Player_ID JOIN game g ON gp.Game_ID = g.Game_ID WHERE g.Title = 'Super Mario World';"
    },
    {
        "question_id": 1950,
        "answer_sql": "SELECT player.Player_name, player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = 'Super Mario World';"
    },
    {
        "question_id": 1951,
        "answer_sql": "SELECT DISTINCT g.Developers FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.College = 'Auburn';"
    },
    {
        "question_id": 1952,
        "answer_sql": "SELECT DISTINCT g.Developers FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.College = 'Auburn'"
    },
    {
        "question_id": 1953,
        "answer_sql": "SELECT AVG(g.Units_sold_Millions) FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position = 'Guard';"
    },
    {
        "question_id": 1954,
        "answer_sql": "SELECT AVG(g.Units_sold_Millions) FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position = 'Guard';"
    },
    {
        "question_id": 1955,
        "answer_sql": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID;"
    },
    {
        "question_id": 1956,
        "answer_sql": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID;"
    },
    {
        "question_id": 1957,
        "answer_sql": "SELECT DISTINCT g.Title FROM game g JOIN platform p ON g.Platform_ID = p.Platform_ID WHERE p.Market_district IN ('Asia', 'USA');"
    },
    {
        "question_id": 1958,
        "answer_sql": "SELECT DISTINCT g.Title FROM game g JOIN platform p ON g.Platform_ID = p.Platform_ID WHERE p.Market_district IN ('Asia', 'USA');"
    },
    {
        "question_id": 1959,
        "answer_sql": "SELECT game.Franchise, COUNT(*) as Number_of_Games FROM game GROUP BY game.Franchise;"
    },
    {
        "question_id": 1960,
        "answer_sql": "SELECT game.Franchise, COUNT(game.Game_ID) AS Number_of_Games FROM game GROUP BY game.Franchise;"
    },
    {
        "question_id": 1961,
        "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1962,
        "answer_sql": "SELECT Franchise, COUNT(*) as Game_Count FROM game GROUP BY Franchise ORDER BY Game_Count DESC LIMIT 1;"
    },
    {
        "question_id": 1963,
        "answer_sql": "SELECT DISTINCT g.Franchise FROM game g GROUP BY g.Franchise HAVING COUNT(g.Game_ID) >= 2;"
    },
    {
        "question_id": 1964,
        "answer_sql": "SELECT DISTINCT g.Franchise FROM game g GROUP BY g.Franchise HAVING COUNT(g.Game_ID) >= 2;"
    },
    {
        "question_id": 1965,
        "answer_sql": "SELECT DISTINCT p.Player_name FROM player p LEFT JOIN game_player gp ON p.Player_ID = gp.Player_ID WHERE gp.Game_ID IS NULL;"
    },
    {
        "question_id": 1966,
        "answer_sql": "SELECT DISTINCT p.Player_name FROM player p LEFT JOIN game_player gp ON p.Player_ID = gp.Player_ID WHERE gp.Game_ID IS NULL;"
    },
    {
        "question_id": 1967,
        "answer_sql": "SELECT DISTINCT g.Title FROM game g JOIN game_player gp1 ON g.Game_ID = gp1.Game_ID JOIN player p1 ON gp1.Player_ID = p1.Player_ID JOIN game_player gp2 ON g.Game_ID = gp2.Game_ID JOIN player p2 ON gp2.Player_ID = p2.Player_ID WHERE p1.College = 'Oklahoma' AND p2.College = 'Auburn';"
    },
    {
        "question_id": 1968,
        "answer_sql": "SELECT game.Title FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE (player.College LIKE '%Oklahoma%' OR player.College LIKE '%Auburn%');"
    },
    {
        "question_id": 1969,
        "answer_sql": "SELECT DISTINCT Franchise FROM game;"
    },
    {
        "question_id": 1970,
        "answer_sql": "SELECT DISTINCT Franchise FROM game;"
    },
    {
        "question_id": 1971,
        "answer_sql": "SELECT DISTINCT g.Title FROM game g LEFT JOIN game_player gp ON g.Game_ID = gp.Game_ID LEFT JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position != 'Guard';"
    },
    {
        "question_id": 1972,
        "answer_sql": "SELECT g.Title FROM game g LEFT JOIN game_player gp ON g.Game_ID = gp.Game_ID LEFT JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position != 'Guard' OR p.Player_ID IS NULL;"
    },
    {
        "question_id": 1973,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p ORDER BY p.Year_Profits_billion DESC;"
    },
    {
        "question_id": 1974,
        "answer_sql": "SELECT Name FROM press ORDER BY `Year_Profits_billion` DESC;"
    },
    {
        "question_id": 1975,
        "answer_sql": "SELECT p.Name FROM press p WHERE (p.Month_Profits_billion > 15 OR p.Year_Profits_billion > 1)"
    },
    {
        "question_id": 1976,
        "answer_sql": "SELECT p.Name FROM press p WHERE (p.Month_Profits_billion > 1 OR p.Year_Profits_billion > 15)"
    },
    {
        "question_id": 1977,
        "answer_sql": "SELECT AVG(Year_Profits_billion) AS Average_Profit, MAX(Year_Profits_billion) AS Maximum_Profit FROM press;"
    },
    {
        "question_id": 1978,
        "answer_sql": "SELECT press.Press_ID, AVG(press.Year_Profits_billion) AS Average_Yearly_Profit, MAX(press.Year_Profits_billion) AS Maximum_Yearly_Profit FROM press GROUP BY press.Press_ID;"
    },
    {
        "question_id": 1979,
        "answer_sql": "SELECT p.Name FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name ORDER BY p.Month_Profits_billion DESC LIMIT 1;"
    },
    {
        "question_id": 1980,
        "answer_sql": "SELECT p.Name FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name ORDER BY p.Month_Profits_billion DESC LIMIT 1;"
    },
    {
        "question_id": 1981,
        "answer_sql": "SELECT p.Name FROM press p ORDER BY p.Month_Profits_billion DESC LIMIT 1;"
    },
    {
        "question_id": 1982,
        "answer_sql": "SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press) UNION SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MIN(Month_Profits_billion) FROM press);"
    },
    {
        "question_id": 1983,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1984,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1985,
        "answer_sql": "SELECT Gender, AVG(Age) FROM author GROUP BY Gender;"
    },
    {
        "question_id": 1986,
        "answer_sql": "SELECT Gender, AVG(Age) AS Average_Age FROM author GROUP BY Gender;"
    },
    {
        "question_id": 1987,
        "answer_sql": "SELECT Gender, COUNT(*) as Number_of_Authors FROM author WHERE Age > 30 GROUP BY Gender;"
    },
    {
        "question_id": 1988,
        "answer_sql": "SELECT Gender, COUNT(*) as Number_of_Authors FROM author WHERE Age > 30 GROUP BY Gender;"
    },
    {
        "question_id": 1989,
        "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"
    },
    {
        "question_id": 1990,
        "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"
    },
    {
        "question_id": 1991,
        "answer_sql": "SELECT Book_Series, COUNT(*) as Number_of_Books FROM book GROUP BY Book_Series;"
    },
    {
        "question_id": 1992,
        "answer_sql": "SELECT b.Book_Series, COUNT(*) AS Book_Count FROM book b GROUP BY b.Book_Series;"
    },
    {
        "question_id": 1993,
        "answer_sql": "SELECT b.Title, b.Release_date FROM book b JOIN ( SELECT Author_ID, SUM(CAST(CAST(Sale_Amount AS INTEGER) AS REAL)) AS Total_Sales FROM book GROUP BY Author_ID ORDER BY Total_Sales DESC LIMIT 5 ) sales_summary ON b.Author_ID = sales_summary.Author_ID ORDER BY Total_Sales DESC;"
    },
    {
        "question_id": 1994,
        "answer_sql": "SELECT b.Title, b.Release_date FROM book b ORDER BY CAST(b.Sale_Amount AS INTEGER) DESC LIMIT 5;"
    },
    {
        "question_id": 1995,
        "answer_sql": "SELECT DISTINCT b.Book_Series FROM book b WHERE (SELECT COUNT(*) FROM book WHERE Sale_Amount > 1000 AND Book_Series = b.Book_Series) > 0 AND (SELECT COUNT(*) FROM book WHERE Sale_Amount < 500 AND Book_Series = b.Book_Series) > 0;"
    },
    {
        "question_id": 1996,
        "answer_sql": "SELECT DISTINCT b.Book_Series FROM book b WHERE b.Sale_Amount > 1000 AND EXISTS ( SELECT 1 FROM book b2 WHERE b2.Book_Series = b.Book_Series AND b2.Sale_Amount < 500 );"
    },
    {
        "question_id": 1997,
        "answer_sql": "SELECT DISTINCT a.Name FROM author a JOIN book b1 ON a.Author_ID = b1.Author_ID JOIN book b2 ON a.Author_ID = b2.Author_ID WHERE b1.Book_Series = 'MM' AND b2.Book_Series = 'LT';"
    },
    {
        "question_id": 1998,
        "answer_sql": "SELECT DISTINCT a.Name FROM author a JOIN book b1 ON a.Author_ID = b1.Author_ID JOIN book b2 ON a.Author_ID = b2.Author_ID WHERE b1.Book_Series = 'MM' AND b2.Book_Series = 'LT';"
    },
    {
        "question_id": 1999,
        "answer_sql": "SELECT a.Name, a.Age FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_ID IS NULL;"
    },
    {
        "question_id": 2000,
        "answer_sql": "SELECT a.Name FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_ID IS NULL;"
    },
    {
        "question_id": 2001,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Author_ID HAVING COUNT(b.Book_ID) > 1;"
    },
    {
        "question_id": 2002,
        "answer_sql": "SELECT author.Name FROM author JOIN ( SELECT Author_ID FROM book GROUP BY Author_ID HAVING COUNT(*) > 1 ) AS multiple_books ON author.Author_ID = multiple_books.Author_ID;"
    },
    {
        "question_id": 2003,
        "answer_sql": "SELECT b.Title, a.Name AS Author_Name, p.Name AS Publisher_Name FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3;"
    },
    {
        "question_id": 2004,
        "answer_sql": "SELECT b.Title, a.Name AS Author_Name, p.Name AS Press_Name FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3;"
    },
    {
        "question_id": 2005,
        "answer_sql": "SELECT p.Name, SUM(b.Sale_Amount) AS Total_Sale_Amount FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name;"
    },
    {
        "question_id": 2006,
        "answer_sql": "SELECT press.Name, SUM(book.Sale_Amount) AS Total_Sale_Amount FROM press JOIN book ON press.Press_ID = book.Press_ID GROUP BY press.Name;"
    },
    {
        "question_id": 2007,
        "answer_sql": "SELECT p.Name, COUNT(*) as Number_of_Books FROM press p JOIN book b ON p.Press_ID = b.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Name;"
    },
    {
        "question_id": 2008,
        "answer_sql": "SELECT p.Name, COUNT(b.Book_ID) AS Number_of_Books FROM press p JOIN book b ON p.Press_ID = b.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Press_ID, p.Name;"
    },
    {
        "question_id": 2009,
        "answer_sql": "SELECT author.Name FROM author JOIN book ON author.Author_ID = book.Author_ID JOIN (SELECT Author_ID, MAX(Sale_Amount) AS Max_Sale_Amount FROM book GROUP BY Author_ID) AS best_selling_book ON best_selling_book.Author_ID = book.Author_ID WHERE book.Sale_Amount = best_selling_book.Max_Sale_Amount;"
    },
    {
        "question_id": 2010,
        "answer_sql": "SELECT author.Name FROM author JOIN book ON author.Author_ID = book.Author_ID JOIN (SELECT Author_ID, MAX(Sale_Amount) AS Max_Sale_Amount FROM book GROUP BY Author_ID) as best_selling_books ON book.Author_ID = best_selling_books.Author_ID WHERE book.Sale_Amount = best_selling_books.Max_Sale_Amount;"
    },
    {
        "question_id": 2011,
        "answer_sql": "SELECT a.Name, a.Gender FROM author a JOIN ( SELECT Author_ID, COUNT(*) as Total_Books FROM book GROUP BY Author_ID ORDER BY Total_Books DESC LIMIT 1 ) b ON a.Author_ID = b.Author_ID;"
    },
    {
        "question_id": 2012,
        "answer_sql": "SELECT author.Name, author.Gender FROM author JOIN book ON author.Author_ID = book.Author_ID GROUP BY author.Author_ID ORDER BY COUNT(book.Book_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 2013,
        "answer_sql": "SELECT DISTINCT a.Name FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Press_ID NOT IN ( SELECT Press_ID FROM press WHERE Name = 'Accor' )"
    },
    {
        "question_id": 2014,
        "answer_sql": "SELECT DISTINCT a.Name FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Press_ID NOT IN ( SELECT Press_ID FROM press WHERE Name = 'Accor' )"
    },
    {
        "question_id": 2015,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p JOIN ( SELECT Press_ID FROM book GROUP BY Press_ID HAVING COUNT(*) > 2 ) b ON p.Press_ID = b.Press_ID;"
    },
    {
        "question_id": 2016,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p JOIN ( SELECT Press_ID FROM book GROUP BY Press_ID HAVING COUNT(*) > 2 ) b ON p.Press_ID = b.Press_ID;"
    },
    {
        "question_id": 2017,
        "answer_sql": "SELECT COUNT(DISTINCT author_name) FROM Authors;"
    },
    {
        "question_id": 2018,
        "answer_sql": "SELECT author_name FROM Authors;"
    },
    {
        "question_id": 2019,
        "answer_sql": "SELECT author_name, other_details FROM Authors;"
    },
    {
        "question_id": 2020,
        "answer_sql": "SELECT other_details FROM Authors WHERE author_name = 'Addison Denesik';"
    },
    {
        "question_id": 2021,
        "answer_sql": "SELECT COUNT(*) FROM Documents;"
    },
    {
        "question_id": 2022,
        "answer_sql": "SELECT author_name FROM Documents WHERE document_id = 4;"
    },
    {
        "question_id": 2023,
        "answer_sql": "SELECT Authors.author_name FROM Authors INNER JOIN Documents ON Authors.author_name = Documents.author_name WHERE Documents.document_name = 'Travel to Brazil';"
    },
    {
        "question_id": 2024,
        "answer_sql": "SELECT COUNT(*) FROM Documents WHERE author_name = 'Era Kerluke';"
    },
    {
        "question_id": 2025,
        "answer_sql": "SELECT document_name, document_description FROM Documents;"
    },
    {
        "question_id": 2026,
        "answer_sql": "SELECT D.document_id, D.document_name FROM Documents D JOIN Authors A ON D.author_name = A.author_name WHERE A.author_name = 'Bianka Cummings';"
    },
    {
        "question_id": 2027,
        "answer_sql": "SELECT Authors.author_name, Authors.other_details FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name WHERE Documents.document_name = 'Travel to China';"
    },
    {
        "question_id": 2028,
        "answer_sql": "SELECT Authors.author_name, COUNT(Documents.document_id) FROM Authors LEFT JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.author_name;"
    },
    {
        "question_id": 2029,
        "answer_sql": "SELECT author_name FROM Documents GROUP BY author_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 2030,
        "answer_sql": "SELECT DISTINCT A.author_name FROM Authors A JOIN Documents D ON A.author_name = D.author_name GROUP BY A.author_name HAVING COUNT(D.document_id) >= 2;"
    },
    {
        "question_id": 2031,
        "answer_sql": "SELECT COUNT(DISTINCT process_id) FROM Business_Processes;"
    },
    {
        "question_id": 2032,
        "answer_sql": "SELECT b.next_process_id, b.process_name, b.process_description FROM Business_Processes b WHERE b.process_id = 9;"
    },
    {
        "question_id": 2033,
        "answer_sql": "SELECT b.process_name FROM Business_Processes b WHERE b.process_id = (SELECT next_process_id FROM Business_Processes WHERE process_id = 9);"
    },
    {
        "question_id": 2034,
        "answer_sql": "SELECT COUNT(DISTINCT process_outcome_code) FROM Process_Outcomes;"
    },
    {
        "question_id": 2035,
        "answer_sql": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes;"
    },
    {
        "question_id": 2036,
        "answer_sql": "SELECT process_outcome_description FROM Process_Outcomes WHERE process_outcome_code = 'working';"
    },
    {
        "question_id": 2037,
        "answer_sql": "SELECT COUNT(DISTINCT process_status_code) FROM Process_Status;"
    },
    {
        "question_id": 2038,
        "answer_sql": "SELECT process_status_code, process_status_description FROM Process_Status;"
    },
    {
        "question_id": 2039,
        "answer_sql": "SELECT process_status_description FROM Process_Status WHERE process_status_code = 'ct';"
    },
    {
        "question_id": 2040,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2041,
        "answer_sql": "SELECT staff_id, staff_details FROM Staff;"
    },
    {
        "question_id": 2042,
        "answer_sql": "SELECT S.staff_details FROM Staff S WHERE S.staff_id = 100;"
    },
    {
        "question_id": 2043,
        "answer_sql": "SELECT COUNT(DISTINCT staff_role_code) FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2044,
        "answer_sql": "SELECT staff_role_code, staff_role_description FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2045,
        "answer_sql": "SELECT staff_role_description FROM Ref_Staff_Roles WHERE staff_role_code = 'HR';"
    },
    {
        "question_id": 2046,
        "answer_sql": "SELECT COUNT(*) FROM Documents_Processes;"
    },
    {
        "question_id": 2047,
        "answer_sql": "SELECT DISTINCT T2.process_id FROM Documents_Processes AS T1 INNER JOIN Business_Processes AS T2 ON T1.process_id = T2.process_id;"
    },
    {
        "question_id": 2048,
        "answer_sql": "SELECT DISTINCT d.document_id FROM Documents d LEFT JOIN Documents_Processes dp ON d.document_id = dp.document_id WHERE dp.document_id IS NULL;"
    },
    {
        "question_id": 2049,
        "answer_sql": ""
    },
    {
        "question_id": 2050,
        "answer_sql": "SELECT dp.process_outcome_code, ps.process_status_code, po.process_outcome_description, ps.process_status_description FROM Documents_Processes dp JOIN Process_Outcomes po ON dp.process_outcome_code = po.process_outcome_code JOIN Process_Status ps ON dp.process_status_code = ps.process_status_code WHERE dp.document_id = 0;"
    },
    {
        "question_id": 2051,
        "answer_sql": "SELECT b.process_name FROM Documents_Processes dp JOIN Business_Processes b ON dp.process_id = b.process_id WHERE dp.document_id = (SELECT document_id FROM Documents WHERE document_name = 'Travel to Brazil');"
    },
    {
        "question_id": 2052,
        "answer_sql": "SELECT b.process_id, COUNT(d.document_id) AS num_documents FROM Business_Processes b LEFT JOIN Documents_Processes dp ON b.process_id = dp.process_id LEFT JOIN Documents d ON dp.document_id = d.document_id GROUP BY b.process_id;"
    },
    {
        "question_id": 2053,
        "answer_sql": "SELECT COUNT(*) FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9;"
    },
    {
        "question_id": 2054,
        "answer_sql": "SELECT S.staff_id, COUNT(DP.document_id) AS num_processes FROM Staff S JOIN Staff_in_Processes SIP ON S.staff_id = SIP.staff_id JOIN Documents_Processes DP ON SIP.document_id = DP.document_id AND SIP.process_id = DP.process_id GROUP BY S.staff_id;"
    },
    {
        "question_id": 2055,
        "answer_sql": "SELECT Staff_in_Processes.staff_role_code, COUNT(Staff_in_Processes.document_id) AS num_processes FROM Staff_in_Processes GROUP BY Staff_in_Processes.staff_role_code;"
    },
    {
        "question_id": 2056,
        "answer_sql": "SELECT COUNT(DISTINCT sr.staff_role_code) FROM Staff_in_Processes spi JOIN Staff s ON spi.staff_id = s.staff_id JOIN Ref_Staff_Roles sr ON spi.staff_role_code = sr.staff_role_code WHERE s.staff_id = 3;"
    },
    {
        "question_id": 2057,
        "answer_sql": "SELECT COUNT(DISTINCT agency_id) FROM Agencies;"
    },
    {
        "question_id": 2058,
        "answer_sql": "SELECT COUNT(*) FROM Agencies;"
    },
    {
        "question_id": 2059,
        "answer_sql": "SELECT agency_id, agency_details FROM Agencies;"
    },
    {
        "question_id": 2060,
        "answer_sql": "SELECT agency_id, agency_details FROM Agencies;"
    },
    {
        "question_id": 2061,
        "answer_sql": "SELECT COUNT(*) FROM Clients;"
    },
    {
        "question_id": 2062,
        "answer_sql": "SELECT COUNT(*) FROM Clients;"
    },
    {
        "question_id": 2063,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients;"
    },
    {
        "question_id": 2064,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients;"
    },
    {
        "question_id": 2065,
        "answer_sql": "SELECT Agencies.agency_id, COUNT(Clients.client_id) as num_clients FROM Agencies LEFT JOIN Clients ON Agencies.agency_id = Clients.agency_id GROUP BY Agencies.agency_id;"
    },
    {
        "question_id": 2066,
        "answer_sql": "SELECT Agencies.agency_id, COUNT(Clients.client_id) as num_clients FROM Agencies LEFT JOIN Clients ON Agencies.agency_id = Clients.agency_id GROUP BY Agencies.agency_id;"
    },
    {
        "question_id": 2067,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN ( SELECT C.agency_id FROM Clients C GROUP BY C.agency_id ORDER BY COUNT(*) DESC LIMIT 1 ) T ON A.agency_id = T.agency_id;"
    },
    {
        "question_id": 2068,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A INNER JOIN ( SELECT C.agency_id FROM Clients C GROUP BY C.agency_id ORDER BY COUNT(*) DESC LIMIT 1 ) AS T ON A.agency_id = T.agency_id"
    },
    {
        "question_id": 2069,
        "answer_sql": "SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id GROUP BY Agencies.agency_id, Agencies.agency_details HAVING COUNT(Clients.client_id) >= 2;"
    },
    {
        "question_id": 2070,
        "answer_sql": "SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id GROUP BY Agencies.agency_id HAVING COUNT(Clients.client_id) >= 2;"
    },
    {
        "question_id": 2071,
        "answer_sql": "SELECT A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id JOIN Invoices I ON C.client_id = I.client_id WHERE C.client_details LIKE '%Mac%';"
    },
    {
        "question_id": 2072,
        "answer_sql": "SELECT A.agency_details FROM Clients C JOIN Agencies A ON C.agency_id = A.agency_id WHERE C.client_details LIKE '%Mac%';"
    },
    {
        "question_id": 2073,
        "answer_sql": "SELECT Clients.client_id, Clients.sic_code, Clients.client_details, Agencies.agency_id, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2074,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details, Agencies.agency_id, Agencies.agency_details FROM Clients LEFT JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2075,
        "answer_sql": "SELECT Clients.sic_code, COUNT(*) as client_count FROM Clients GROUP BY Clients.sic_code;"
    },
    {
        "question_id": 2076,
        "answer_sql": "SELECT Clients.sic_code, COUNT(Clients.sic_code) AS num_clients FROM Clients GROUP BY Clients.sic_code;"
    },
    {
        "question_id": 2077,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details, Clients.sic_code FROM Clients WHERE Clients.sic_code = 'Bad';"
    },
    {
        "question_id": 2078,
        "answer_sql": "SELECT Clients.sic_code, Clients.client_details FROM Clients WHERE Clients.sic_code = 'Bad';"
    },
    {
        "question_id": 2079,
        "answer_sql": "SELECT DISTINCT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id;"
    },
    {
        "question_id": 2080,
        "answer_sql": "SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id;"
    },
    {
        "question_id": 2081,
        "answer_sql": "SELECT DISTINCT A.agency_id FROM Agencies A LEFT JOIN Clients C ON A.agency_id = C.agency_id WHERE C.client_id IS NULL;"
    },
    {
        "question_id": 2082,
        "answer_sql": "SELECT agency_id FROM Agencies WHERE agency_id NOT IN (SELECT DISTINCT agency_id FROM Clients);"
    },
    {
        "question_id": 2083,
        "answer_sql": "SELECT COUNT(*) FROM Invoices;"
    },
    {
        "question_id": 2084,
        "answer_sql": "SELECT COUNT(*) FROM Invoices;"
    },
    {
        "question_id": 2085,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices LEFT JOIN Clients ON Invoices.client_id = Clients.client_id;"
    },
    {
        "question_id": 2086,
        "answer_sql": "SELECT invoice_id, invoice_status, invoice_details FROM Invoices;"
    },
    {
        "question_id": 2087,
        "answer_sql": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) AS invoice_count FROM Clients LEFT JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2088,
        "answer_sql": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) AS InvoiceCount FROM Clients LEFT JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2089,
        "answer_sql": "SELECT C.client_id, C.client_details FROM Clients C INNER JOIN Invoices I ON C.client_id = I.client_id GROUP BY C.client_id, C.client_details ORDER BY COUNT(I.invoice_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2090,
        "answer_sql": "SELECT c.client_id, c.client_details FROM Clients c JOIN Invoices i ON c.client_id = i.client_id GROUP BY c.client_id, c.client_details ORDER BY COUNT(i.invoice_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2091,
        "answer_sql": "SELECT DISTINCT c.client_id FROM Clients c JOIN Invoices i ON c.client_id = i.client_id GROUP BY c.client_id HAVING COUNT(i.invoice_id) >= 2;"
    },
    {
        "question_id": 2092,
        "answer_sql": "SELECT DISTINCT c.client_id FROM Clients c JOIN Invoices i ON c.client_id = i.client_id GROUP BY c.client_id HAVING COUNT(i.invoice_id) >= 2;"
    },
    {
        "question_id": 2093,
        "answer_sql": "SELECT invoice_status, COUNT(*) as invoice_count FROM Invoices GROUP BY invoice_status;"
    },
    {
        "question_id": 2094,
        "answer_sql": "SELECT invoice_status, COUNT(*) as invoice_count FROM Invoices GROUP BY invoice_status;"
    },
    {
        "question_id": 2095,
        "answer_sql": "SELECT invoice_status, COUNT(*) as count FROM Invoices GROUP BY invoice_status ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 2096,
        "answer_sql": "SELECT invoice_status, COUNT(*) as count FROM Invoices GROUP BY invoice_status ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 2097,
        "answer_sql": "SELECT I.invoice_status, I.invoice_details, C.client_id, C.client_details, A.agency_id, A.agency_details FROM Invoices I JOIN Clients C ON I.client_id = C.client_id JOIN Agencies A ON C.agency_id = A.agency_id;"
    },
    {
        "question_id": 2098,
        "answer_sql": "SELECT I.invoice_status, I.invoice_details, C.client_id, C.client_details, A.agency_id, A.agency_details FROM Invoices I JOIN Clients C ON I.client_id = C.client_id JOIN Agencies A ON C.agency_id = A.agency_id;"
    },
    {
        "question_id": 2099,
        "answer_sql": "SELECT DISTINCT `meeting_type` FROM `Meetings`;"
    },
    {
        "question_id": 2100,
        "answer_sql": "SELECT DISTINCT `meeting_type`, `other_details` FROM `Meetings`;"
    },
    {
        "question_id": 2101,
        "answer_sql": "SELECT DISTINCT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`;"
    },
    {
        "question_id": 2102,
        "answer_sql": "SELECT DISTINCT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`;"
    },
    {
        "question_id": 2103,
        "answer_sql": "SELECT p.payment_id, p.payment_details FROM Payments p JOIN Invoices i ON p.invoice_id = i.invoice_id WHERE i.invoice_status = 'Working';"
    },
    {
        "question_id": 2104,
        "answer_sql": "SELECT p.payment_id, p.payment_details FROM Payments p JOIN Invoices i ON p.invoice_id = i.invoice_id WHERE i.invoice_status = 'Working';"
    },
    {
        "question_id": 2105,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status FROM Invoices i LEFT JOIN Payments p ON i.invoice_id = p.invoice_id WHERE p.payment_id IS NULL;"
    },
    {
        "question_id": 2106,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status FROM Invoices i LEFT JOIN Payments p ON i.invoice_id = p.invoice_id WHERE p.payment_id IS NULL;"
    },
    {
        "question_id": 2107,
        "answer_sql": "SELECT COUNT(*) FROM Payments;"
    },
    {
        "question_id": 2108,
        "answer_sql": "SELECT COUNT(*) FROM Payments;"
    },
    {
        "question_id": 2109,
        "answer_sql": "SELECT Payments.payment_id, Invoices.invoice_id, Invoices.invoice_details FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id;"
    },
    {
        "question_id": 2110,
        "answer_sql": "SELECT p.payment_id, i.invoice_id, p.payment_details FROM Payments p JOIN Invoices i ON p.invoice_id = i.invoice_id;"
    },
    {
        "question_id": 2111,
        "answer_sql": "SELECT DISTINCT i.invoice_id, i.invoice_status FROM Invoices i JOIN Payments p ON i.invoice_id = p.invoice_id;"
    },
    {
        "question_id": 2112,
        "answer_sql": "SELECT DISTINCT i.invoice_id, i.invoice_status FROM Invoices i JOIN Payments p ON i.invoice_id = p.invoice_id;"
    },
    {
        "question_id": 2113,
        "answer_sql": "SELECT Invoices.invoice_id, COUNT(Payments.payment_id) AS payment_count FROM Invoices LEFT JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id;"
    },
    {
        "question_id": 2114,
        "answer_sql": "SELECT i.invoice_id, COUNT(p.payment_id) AS payment_count FROM Invoices i LEFT JOIN Payments p ON i.invoice_id = p.invoice_id GROUP BY i.invoice_id;"
    },
    {
        "question_id": 2115,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status, i.invoice_details FROM Invoices i JOIN Payments p ON i.invoice_id = p.invoice_id GROUP BY i.invoice_id, i.invoice_status, i.invoice_details ORDER BY COUNT(p.payment_id) DESC LIMIT 1;"
    },
    {
        "question_id": 2116,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status, i.invoice_details FROM Invoices i JOIN Payments p ON i.invoice_id = p.invoice_id GROUP BY i.invoice_id, i.invoice_status, i.invoice_details HAVING COUNT(p.payment_id) = ( SELECT COUNT(payment_id) FROM Payments GROUP BY invoice_id ORDER BY COUNT(payment_id) DESC LIMIT 1 );"
    },
    {
        "question_id": 2117,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2118,
        "answer_sql": "SELECT COUNT(*) FROM Staff;"
    },
    {
        "question_id": 2119,
        "answer_sql": "SELECT Agencies.agency_id, COUNT(Staff.staff_id) as num_staff FROM Agencies LEFT JOIN Staff ON Agencies.agency_id = Staff.agency_id GROUP BY Agencies.agency_id;"
    },
    {
        "question_id": 2120,
        "answer_sql": "SELECT Agencies.agency_id, COUNT(Staff.staff_id) as num_staff FROM Agencies LEFT JOIN Staff ON Agencies.agency_id = Staff.agency_id GROUP BY Agencies.agency_id;"
    },
    {
        "question_id": 2121,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A INNER JOIN ( SELECT agency_id FROM Staff GROUP BY agency_id ORDER BY COUNT(*) DESC LIMIT 1 ) AS T ON A.agency_id = T.agency_id;"
    },
    {
        "question_id": 2122,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A INNER JOIN ( SELECT agency_id, COUNT(*) as num_staff FROM Staff GROUP BY agency_id ORDER BY num_staff DESC LIMIT 1 ) B ON A.agency_id = B.agency_id;"
    },
    {
        "question_id": 2123,
        "answer_sql": "SELECT meeting_outcome, COUNT(*) as meeting_count FROM Meetings GROUP BY meeting_outcome;"
    },
    {
        "question_id": 2124,
        "answer_sql": "SELECT meeting_outcome, COUNT(*) as count FROM Meetings GROUP BY meeting_outcome;"
    },
    {
        "question_id": 2125,
        "answer_sql": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) as meeting_count FROM Clients LEFT JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2126,
        "answer_sql": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) AS NumberOfMeetings FROM Clients LEFT JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2127,
        "answer_sql": "SELECT Clients.sic_code AS Client_sic_code, COUNT(Meetings.meeting_type) AS Meeting_count FROM Clients LEFT JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.sic_code ORDER BY Clients.sic_code;"
    },
    {
        "question_id": 2128,
        "answer_sql": "SELECT meeting_type, COUNT(*) as meeting_count FROM Meetings GROUP BY meeting_type;"
    },
    {
        "question_id": 2129,
        "answer_sql": "SELECT M.meeting_id, M.meeting_outcome, M.meeting_type, C.client_details FROM Meetings M JOIN Clients C ON M.client_id = C.client_id;"
    },
    {
        "question_id": 2130,
        "answer_sql": "SELECT M.meeting_id, M.meeting_outcome, M.meeting_type, C.client_details FROM Meetings M JOIN Clients C ON M.client_id = C.client_id;"
    },
    {
        "question_id": 2131,
        "answer_sql": "SELECT M.meeting_id, COUNT(S.staff_id) as num_staff FROM Meetings M LEFT JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id LEFT JOIN Staff S ON SM.staff_id = S.staff_id GROUP BY M.meeting_id;"
    },
    {
        "question_id": 2132,
        "answer_sql": "SELECT M.meeting_id, COUNT(S.staff_id) as staff_count FROM Meetings M LEFT JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id LEFT JOIN Staff S ON SM.staff_id = S.staff_id GROUP BY M.meeting_id;"
    },
    {
        "question_id": 2133,
        "answer_sql": "SELECT s.staff_id, COUNT(m.meeting_id) AS num_meetings FROM Staff s JOIN Staff_in_Meetings sim ON s.staff_id = sim.staff_id JOIN Meetings m ON sim.meeting_id = m.meeting_id GROUP BY s.staff_id HAVING COUNT(m.meeting_id) = ( SELECT MIN(num_meetings) FROM ( SELECT COUNT(meeting_id) AS num_meetings FROM Staff_in_Meetings GROUP BY staff_id ) AS subquery );"
    },
    {
        "question_id": 2134,
        "answer_sql": "SELECT S.staff_id FROM Staff S JOIN Staff_in_Meetings SM ON S.staff_id = SM.staff_id GROUP BY S.staff_id HAVING COUNT(SM.meeting_id) = ( SELECT COUNT(M.meeting_id) FROM Meetings M JOIN Staff_in_Meetings SM2 ON M.meeting_id = SM2.meeting_id WHERE SM2.staff_id = S.staff_id ) ORDER BY COUNT(SM.meeting_id) ASC LIMIT 1;"
    },
    {
        "question_id": 2135,
        "answer_sql": "SELECT COUNT(*) FROM Staff_in_Meetings;"
    },
    {
        "question_id": 2136,
        "answer_sql": "SELECT COUNT(DISTINCT s.staff_id) FROM Staff s JOIN Staff_in_Meetings sim ON s.staff_id = sim.staff_id JOIN Meetings m ON sim.meeting_id = m.meeting_id;"
    },
    {
        "question_id": 2137,
        "answer_sql": "SELECT COUNT(DISTINCT s.staff_id) FROM Staff s LEFT JOIN Staff_in_Meetings sim ON s.staff_id = sim.staff_id WHERE sim.meeting_id IS NULL;"
    },
    {
        "question_id": 2138,
        "answer_sql": "SELECT COUNT(DISTINCT s.staff_id) FROM Staff s LEFT JOIN Staff_in_Meetings sim ON s.staff_id = sim.staff_id WHERE sim.meeting_id IS NULL;"
    },
    {
        "question_id": 2139,
        "answer_sql": "SELECT DISTINCT Clients.client_id, Clients.client_details FROM Clients WHERE Clients.client_id IN ( SELECT DISTINCT Meeting.client_id FROM Meetings AS Meeting WHERE Meeting.client_id IS NOT NULL UNION ALL SELECT DISTINCT Invoices.client_id FROM Invoices WHERE Invoices.client_id IS NOT NULL )"
    },
    {
        "question_id": 2140,
        "answer_sql": "SELECT DISTINCT Clients.client_id, Clients.client_details FROM Clients WHERE Clients.client_id IN ( SELECT DISTINCT Clients.client_id FROM Clients WHERE Clients.client_id IN ( SELECT Meetings.client_id FROM Meetings ) OR Clients.client_id IN ( SELECT Invoices.client_id FROM Invoices ) );"
    },
    {
        "question_id": 2141,
        "answer_sql": "SELECT S.staff_id, S.staff_details FROM Staff S JOIN Staff_in_Meetings SIM ON S.staff_id = SIM.staff_id JOIN Meetings M ON SIM.meeting_id = M.meeting_id WHERE M.meeting_outcome LIKE '%s%' GROUP BY S.staff_id, S.staff_details HAVING COUNT(M.meeting_id) >= 1;"
    },
    {
        "question_id": 2142,
        "answer_sql": "SELECT S.staff_id, S.staff_details FROM Staff S JOIN Staff_in_Meetings SM ON S.staff_id = SM.staff_id JOIN Meetings M ON M.meeting_id = SM.meeting_id WHERE S.staff_details LIKE '%s%' GROUP BY S.staff_id, S.staff_details HAVING COUNT(M.meeting_id) >= 1;"
    },
    {
        "question_id": 2143,
        "answer_sql": ""
    },
    {
        "question_id": 2144,
        "answer_sql": "SELECT Clients.client_id, Clients.sic_code, Clients.agency_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id HAVING COUNT(Meetings.meeting_id) = 1 AND COUNT(Invoices.invoice_id) > 0;"
    },
    {
        "question_id": 2145,
        "answer_sql": "SELECT M.start_date_time AS start_time, M.end_date_time AS end_time, C.client_details AS client_detail, S.staff_details AS staff_detail FROM Meetings M JOIN Clients C ON M.client_id = C.client_id JOIN Staff_in_Meetings SIM ON M.meeting_id = SIM.meeting_id JOIN Staff S ON SIM.staff_id = S.staff_id;"
    },
    {
        "question_id": 2146,
        "answer_sql": "SELECT M.start_date_time AS start_time, M.end_date_time AS end_time, C.client_details AS client_details, S.staff_details AS staff_details FROM Meetings M JOIN Clients C ON M.client_id = C.client_id JOIN Staff_in_Meetings SIM ON M.meeting_id = SIM.meeting_id JOIN Staff S ON SIM.staff_id = S.staff_id;"
    }
]