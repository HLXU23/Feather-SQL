[
    {
        "question_id": 0,
        "answer_sql": "SELECT COUNT(*) as Total_Clubs FROM club;"
    },
    {
        "question_id": 1,
        "answer_sql": "SELECT COUNT(*) FROM club;"
    },
    {
        "question_id": 2,
        "answer_sql": "SELECT Name FROM club ORDER BY Name ASC;"
    },
    {
        "question_id": 3,
        "answer_sql": "SELECT Name FROM club ORDER BY Name ASC;"
    },
    {
        "question_id": 4,
        "answer_sql": "SELECT Manager, Captain FROM club;"
    },
    {
        "question_id": 5,
        "answer_sql": "SELECT c.Manager, c.Captain FROM club c INNER JOIN player p ON c.Club_ID = p.Club_ID;"
    },
    {
        "question_id": 6,
        "answer_sql": "SELECT c.Name FROM club c WHERE c.Manufacturer != 'Nike';"
    },
    {
        "question_id": 7,
        "answer_sql": "SELECT c.Name FROM club c WHERE c.Manufacturer != 'Nike';"
    },
    {
        "question_id": 8,
        "answer_sql": "SELECT p.Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID ORDER BY p.Wins_count ASC;"
    },
    {
        "question_id": 9,
        "answer_sql": "SELECT p.Name, COUNT(w.Wins_count) as Wins_Count FROM player p JOIN ( SELECT Player_ID, Wins_count FROM player WHERE Wins_count > 0 ) w ON p.Player_ID = w.Player_ID GROUP BY p.Name ORDER BY Wins_Count ASC;"
    },
    {
        "question_id": 10,
        "answer_sql": "SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player);"
    },
    {
        "question_id": 11,
        "answer_sql": "SELECT p.Name FROM player p WHERE p.Earnings = (SELECT MAX(p2.Earnings) FROM player p2);"
    },
    {
        "question_id": 12,
        "answer_sql": "SELECT DISTINCT Country FROM player WHERE Earnings > 1200000;"
    },
    {
        "question_id": 13,
        "answer_sql": "SELECT Country, COUNT(*) as Number_of_Players FROM player WHERE Club_ID IN ( SELECT Club_ID FROM club WHERE Earnings > 1200000 ) GROUP BY Country;"
    },
    {
        "question_id": 14,
        "answer_sql": "SELECT p.Country FROM player p WHERE p.Wins_count > 2 AND p.Earnings = (SELECT MAX(p2.Earnings) FROM player p2 WHERE p2.Wins_count > 2);"
    },
    {
        "question_id": 15,
        "answer_sql": "SELECT p.Country FROM player p WHERE p.Wins_count > 2 GROUP BY p.Country ORDER BY COUNT(p.Country) DESC LIMIT 1;"
    },
    {
        "question_id": 16,
        "answer_sql": "SELECT player.Name, club.Name FROM player INNER JOIN club ON player.Club_ID = club.Club_ID;"
    },
    {
        "question_id": 17,
        "answer_sql": "SELECT player.Name, club.Name FROM player INNER JOIN club ON player.Club_ID = club.Club_ID;"
    },
    {
        "question_id": 18,
        "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2;"
    },
    {
        "question_id": 19,
        "answer_sql": "SELECT c.Name FROM club c WHERE ( SELECT COUNT(*) FROM player p WHERE p.Club_ID = c.Club_ID AND p.Wins_count > 2 ) > 0;"
    },
    {
        "question_id": 20,
        "answer_sql": "SELECT player.Name FROM player INNER JOIN club ON player.Club_ID = club.Club_ID WHERE club.Manager = 'Sam Allardyce';"
    },
    {
        "question_id": 21,
        "answer_sql": "SELECT player.Name FROM player INNER JOIN club ON player.Club_ID = club.Club_ID WHERE club.Manager = 'Sam Allardyce';"
    },
    {
        "question_id": 22,
        "answer_sql": "SELECT c.Name, AVG(p.Earnings) as Average_Earnings FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Name ORDER BY Average_Earnings DESC;"
    },
    {
        "question_id": 23,
        "answer_sql": "SELECT c.Name, AVG(p.Earnings) as Average_Earnings FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Name ORDER BY Average_Earnings DESC;"
    },
    {
        "question_id": 24,
        "answer_sql": "SELECT Manufacturer, COUNT(*) as Number_of_Clubs FROM club GROUP BY Manufacturer;"
    },
    {
        "question_id": 25,
        "answer_sql": "SELECT c.Manufacturer, COUNT(*) as Number_of_Clubs FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Manufacturer;"
    },
    {
        "question_id": 26,
        "answer_sql": "SELECT Manufacturer, COUNT(*) as Clubs_Count FROM club GROUP BY Manufacturer ORDER BY Clubs_Count DESC LIMIT 1;"
    },
    {
        "question_id": 27,
        "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 28,
        "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 29,
        "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(Club_ID) > 1;"
    },
    {
        "question_id": 30,
        "answer_sql": ""
    },
    {
        "question_id": 31,
        "answer_sql": ""
    },
    {
        "question_id": 32,
        "answer_sql": "SELECT c.Name FROM club c LEFT JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Club_ID IS NULL;"
    },
    {
        "question_id": 33,
        "answer_sql": "SELECT c.Name FROM club c LEFT JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Club_ID IS NULL;"
    },
    {
        "question_id": 34,
        "answer_sql": "SELECT player.Country FROM player WHERE player.Earnings > 1400000 UNION SELECT player.Country FROM player WHERE player.Earnings < 1100000;"
    },
    {
        "question_id": 35,
        "answer_sql": ""
    },
    {
        "question_id": 36,
        "answer_sql": "SELECT COUNT(DISTINCT Country) as Number_of_Distinct_Countries FROM player;"
    },
    {
        "question_id": 37,
        "answer_sql": "SELECT COUNT(DISTINCT Country ) AS Number_of_Countries FROM player ;"
    },
    {
        "question_id": 38,
        "answer_sql": ""
    },
    {
        "question_id": 39,
        "answer_sql": ""
    },
    {
        "question_id": 40,
        "answer_sql": ""
    },
    {
        "question_id": 41,
        "answer_sql": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM Customers c JOIN ( SELECT o.customer_id, COUNT(*) as order_count FROM Orders o GROUP BY o.customer_id ) oc ON c.customer_id = oc.customer_id WHERE oc.order_count > 2;"
    },
    {
        "question_id": 42,
        "answer_sql": "SELECT Orders.order_id, Orders.order_status_code, COUNT(Order_Items.product_id) as product_count FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.order_status_code;"
    },
    {
        "question_id": 43,
        "answer_sql": "SELECT Orders.order_id, COUNT(Order_Items.product_id), Orders.order_status_code FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.order_status_code;"
    },
    {
        "question_id": 44,
        "answer_sql": "SELECT o.date_order_placed FROM Orders o JOIN ( SELECT order_id FROM Order_Items GROUP BY order_id HAVING COUNT(order_item_id) > 1 ) oi ON o.order_id = oi.order_id ORDER BY o.date_order_placed ASC LIMIT 1;"
    },
    {
        "question_id": 45,
        "answer_sql": "SELECT MIN(date_order_placed) AS earliest_order_date FROM Orders;"
    },
    {
        "question_id": 46,
        "answer_sql": "SELECT c.customer_first_name, c.customer_middle_initial, c.customer_last_name FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id WHERE o.customer_id IS NULL;"
    },
    {
        "question_id": 47,
        "answer_sql": "SELECT c.customer_first_name, c.customer_middle_initial, c.customer_last_name FROM Customers c LEFT JOIN Orders o ON c.customer_id = o.customer_id WHERE o.customer_id IS NULL;"
    },
    {
        "question_id": 48,
        "answer_sql": "SELECT p.product_id, p.product_name, p.product_price, p.product_color FROM Products p WHERE NOT EXISTS ( SELECT 1 FROM Order_Items oi WHERE oi.product_id = p.product_id GROUP BY oi.product_id HAVING COUNT(oi.order_id) < 2 )"
    },
    {
        "question_id": 49,
        "answer_sql": "SELECT Products.product_id, Products.product_name, Products.product_price, Products.product_color FROM Products WHERE Products.product_id IN ( SELECT Order_Items.product_id FROM Order_Items GROUP BY Order_Items.product_id HAVING COUNT(Order_Items.order_id) < 2 )"
    },
    {
        "question_id": 50,
        "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.date_order_placed HAVING COUNT(Order_Items.product_id) >= 2;"
    },
    {
        "question_id": 51,
        "answer_sql": "SELECT o.order_id, o.date_order_placed FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.date_order_placed HAVING COUNT(oi.product_id) >= 2;"
    },
    {
        "question_id": 52,
        "answer_sql": "SELECT P.product_id, P.product_name, P.product_price FROM Products P JOIN Order_Items OI ON P.product_id = OI.product_id JOIN Orders O ON OI.order_id = O.order_id GROUP BY P.product_id ORDER BY COUNT(O.order_id) DESC LIMIT 1;"
    },
    {
        "question_id": 53,
        "answer_sql": "SELECT p.product_id, p.product_name, p.product_price, COUNT(oi.order_item_id) as order_frequency FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id GROUP BY p.product_id ORDER BY order_frequency DESC;"
    },
    {
        "question_id": 54,
        "answer_sql": ""
    },
    {
        "question_id": 55,
        "answer_sql": ""
    },
    {
        "question_id": 56,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as count FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id GROUP BY payment_method_code ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 57,
        "answer_sql": "SELECT Customer_Payment_Methods.payment_method_code, COUNT(*) as frequency FROM Customer_Payment_Methods JOIN Customers ON Customer_Payment_Methods.customer_id = Customers.customer_id GROUP BY Customer_Payment_Methods.payment_method_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 58,
        "answer_sql": ""
    },
    {
        "question_id": 59,
        "answer_sql": ""
    },
    {
        "question_id": 60,
        "answer_sql": "SELECT gender_code, COUNT(DISTINCT order_id) as number_of_orders FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY gender_code;"
    },
    {
        "question_id": 61,
        "answer_sql": "SELECT gender_code, COUNT(*) as number_of_orders FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY gender_code;"
    },
    {
        "question_id": 62,
        "answer_sql": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id;"
    },
    {
        "question_id": 63,
        "answer_sql": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id;"
    },
    {
        "question_id": 64,
        "answer_sql": "SELECT Invoices.invoice_status_code, Invoices.invoice_date, Shipments.shipment_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;"
    },
    {
        "question_id": 65,
        "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Shipments.shipment_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;"
    },
    {
        "question_id": 66,
        "answer_sql": "SELECT Products.product_name, Shipments.shipment_date FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id INNER JOIN Orders ON Order_Items.order_id = Orders.order_id INNER JOIN Shipments ON Orders.order_id = Shipments.order_id WHERE Shipments.shipment_date IS NOT NULL;"
    },
    {
        "question_id": 67,
        "answer_sql": "SELECT Products.product_name, Shipments.shipment_date FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id WHERE Shipments.shipment_id IN ( SELECT shipment_id FROM Shipment_Items GROUP BY shipment_id HAVING COUNT(DISTINCT order_item_id) = 1 );"
    },
    {
        "question_id": 68,
        "answer_sql": ""
    },
    {
        "question_id": 69,
        "answer_sql": "SELECT Order_Items.order_item_status_code, Shipments.shipment_tracking_number FROM Order_Items JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id WHERE Shipment_Items.order_item_id IS NOT NULL;"
    },
    {
        "question_id": 70,
        "answer_sql": ""
    },
    {
        "question_id": 71,
        "answer_sql": "SELECT Products.product_name, Products.product_color FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id WHERE Shipment_Items.order_item_id IS NOT NULL;"
    },
    {
        "question_id": 72,
        "answer_sql": ""
    },
    {
        "question_id": 73,
        "answer_sql": ""
    },
    {
        "question_id": 74,
        "answer_sql": "SELECT Orders.order_id, Invoices.invoice_number, Invoices.invoice_status_code FROM Orders INNER JOIN Invoices ON Orders.order_id = Invoices.invoice_number WHERE Invoices.invoice_status_code <> 'Shipped' AND Orders.order_status_code <> 'Shipped';"
    },
    {
        "question_id": 75,
        "answer_sql": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments );"
    },
    {
        "question_id": 76,
        "answer_sql": ""
    },
    {
        "question_id": 77,
        "answer_sql": ""
    },
    {
        "question_id": 78,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) AS NumberOfCustomers FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;"
    },
    {
        "question_id": 79,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) AS NumberOfDistinctCustomers FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;"
    },
    {
        "question_id": 80,
        "answer_sql": "SELECT COUNT(DISTINCT order_item_status_code) AS number_of_item_states_in_orders FROM Order_Items;"
    },
    {
        "question_id": 81,
        "answer_sql": "SELECT COUNT(DISTINCT order_item_status_code) as total_item_status_codes FROM Order_Items;"
    },
    {
        "question_id": 82,
        "answer_sql": "SELECT COUNT(DISTINCT `payment_method_code`) as `Number_of_Payment_Methods` FROM `Customer_Payment_Methods`;"
    },
    {
        "question_id": 83,
        "answer_sql": "SELECT COUNT(DISTINCT `payment_method_code`) AS `Number_of_Payment_Methods` FROM `Customer_Payment_Methods`;"
    },
    {
        "question_id": 84,
        "answer_sql": "SELECT login_name, login_password FROM Customers WHERE phone_number LIKE '+12%';"
    },
    {
        "question_id": 85,
        "answer_sql": "SELECT login_name, login_password FROM Customers WHERE phone_number LIKE '+12%';"
    },
    {
        "question_id": 86,
        "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%';"
    },
    {
        "question_id": 87,
        "answer_sql": "SELECT product_id, product_name, product_size FROM Products WHERE product_name LIKE '%Dell%';"
    },
    {
        "question_id": 88,
        "answer_sql": "SELECT Products.product_name, Products.product_price, Products.product_size FROM Products WHERE Products.product_price > ( SELECT AVG(Products.product_price) FROM Products )"
    },
    {
        "question_id": 89,
        "answer_sql": "SELECT Products.product_name, Products.product_price, Products.product_size FROM Products WHERE Products.product_price > ( SELECT AVG(Products.product_price) FROM Products )"
    },
    {
        "question_id": 90,
        "answer_sql": "SELECT COUNT(DISTINCT Products.product_id) AS NumberOfUnsoldProducts FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL;"
    },
    {
        "question_id": 91,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_id NOT IN (SELECT product_id FROM Orders);"
    },
    {
        "question_id": 92,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payment_Methods);"
    },
    {
        "question_id": 93,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payment_Methods);"
    },
    {
        "question_id": 94,
        "answer_sql": ""
    },
    {
        "question_id": 95,
        "answer_sql": "SELECT Orders.order_status_code, Orders.date_order_placed FROM Orders"
    },
    {
        "question_id": 96,
        "answer_sql": ""
    },
    {
        "question_id": 97,
        "answer_sql": ""
    },
    {
        "question_id": 98,
        "answer_sql": "SELECT Customers.customer_first_name, Products.product_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id;"
    },
    {
        "question_id": 99,
        "answer_sql": "SELECT Customers.customer_first_name, Products.product_name, Orders.order_id FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id;"
    },
    {
        "question_id": 100,
        "answer_sql": "SELECT COUNT(DISTINCT `order_item_id`) AS `Number_of_Items_Shipped` FROM `Shipment_Items`;"
    },
    {
        "question_id": 101,
        "answer_sql": "SELECT COUNT(DISTINCT `Shipment_Items`.`shipment_id`) AS `Number_of_Products_Shipped` FROM `Shipment_Items`"
    },
    {
        "question_id": 102,
        "answer_sql": "SELECT AVG(product_price) AS average_price FROM Products;"
    },
    {
        "question_id": 103,
        "answer_sql": "SELECT AVG(product_price) as average_product_price FROM Products;"
    },
    {
        "question_id": 104,
        "answer_sql": "SELECT AVG(product_price) as average_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id;"
    },
    {
        "question_id": 105,
        "answer_sql": "SELECT AVG(product_price) as average_price FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id;"
    },
    {
        "question_id": 106,
        "answer_sql": "SELECT c.email_address, c.town_city, c.country FROM Customers c WHERE c.gender_code = ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY COUNT(*) ASC LIMIT 1 );"
    },
    {
        "question_id": 107,
        "answer_sql": ""
    },
    {
        "question_id": 108,
        "answer_sql": "SELECT Orders.date_order_placed FROM Orders JOIN ( SELECT customer_id FROM Customer_Payment_Methods GROUP BY customer_id HAVING COUNT(customer_id) >= 2 ) AS Payment_Customers ON Orders.customer_id = Payment_Customers.customer_id;"
    },
    {
        "question_id": 109,
        "answer_sql": "SELECT Orders.date_order_placed FROM Orders JOIN ( SELECT customer_id FROM Customer_Payment_Methods GROUP BY customer_id HAVING COUNT(customer_id) >= 2 ) AS PaymentMethods ON Orders.customer_id = PaymentMethods.customer_id;"
    },
    {
        "question_id": 110,
        "answer_sql": "SELECT order_status_code FROM Orders WHERE order_status_code NOT IN ( SELECT order_status_code FROM Orders GROUP BY order_status_code HAVING COUNT(order_id) = 1 );"
    },
    {
        "question_id": 111,
        "answer_sql": "SELECT order_status_code FROM Orders WHERE order_status_code NOT IN ( SELECT order_status_code FROM Orders GROUP BY order_status_code HAVING COUNT(order_id) = ( SELECT COUNT(order_id) FROM Orders GROUP BY order_status_code ORDER BY COUNT(order_id) ASC LIMIT 1 ) ) LIMIT 1;"
    },
    {
        "question_id": 112,
        "answer_sql": "SELECT Products.product_id, Products.product_description FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_id, Products.product_description HAVING COUNT(Order_Items.product_id) > 3;"
    },
    {
        "question_id": 113,
        "answer_sql": "SELECT Products.product_id, Products.product_description FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_id, Products.product_description HAVING COUNT(Order_Items.product_id) > 3;"
    },
    {
        "question_id": 114,
        "answer_sql": "SELECT i.invoice_date, i.invoice_number FROM Invoices i JOIN ( SELECT s.invoice_number FROM Shipments s GROUP BY s.invoice_number HAVING COUNT(s.shipment_id) >= 2 ) AS ship_count ON i.invoice_number = ship_count.invoice_number;"
    },
    {
        "question_id": 115,
        "answer_sql": "SELECT i.invoice_number, i.invoice_date FROM Invoices i WHERE EXISTS ( SELECT 1 FROM Shipments s WHERE s.invoice_number = i.invoice_number GROUP BY s.invoice_number HAVING COUNT(*) >= 2 );"
    },
    {
        "question_id": 116,
        "answer_sql": "SELECT s.shipment_tracking_number, s.shipment_date FROM Shipments s JOIN Invoices i ON s.invoice_number = i.invoice_number JOIN Orders o ON s.order_id = o.order_id;"
    },
    {
        "question_id": 117,
        "answer_sql": "SELECT s.shipment_tracking_number, s.shipment_date FROM Shipments s JOIN Invoices i ON s.invoice_number = i.invoice_number JOIN Orders o ON s.order_id = o.order_id ORDER BY s.shipment_date;"
    },
    {
        "question_id": 118,
        "answer_sql": "SELECT product_color, product_description, product_size FROM Products WHERE product_price = (SELECT MAX(product_price) FROM Products);"
    },
    {
        "question_id": 119,
        "answer_sql": "SELECT product_color, product_description, product_size FROM Products WHERE product_price < (SELECT MAX(product_price) FROM Products);"
    },
    {
        "question_id": 120,
        "answer_sql": "SELECT d.Name FROM director d WHERE d.Age > ( SELECT AVG(d2.Age) FROM director d2 );"
    },
    {
        "question_id": 121,
        "answer_sql": "SELECT Name FROM director WHERE Age = (SELECT MAX(Age) FROM director);"
    },
    {
        "question_id": 122,
        "answer_sql": "SELECT COUNT(*) FROM channel WHERE Internet LIKE '%bbc%';"
    },
    {
        "question_id": 123,
        "answer_sql": "SELECT COUNT(DISTINCT Digital_terrestrial_channel ) as Number_of_Digital_Terrestrial_Channels FROM channel WHERE Digital_terrestrial_channel IS NOT NULL;"
    },
    {
        "question_id": 124,
        "answer_sql": "SELECT Title FROM program ORDER BY Start_Year DESC;"
    },
    {
        "question_id": 125,
        "answer_sql": "SELECT d.Name, COUNT(p.Program_ID) as Programs_Count FROM director d JOIN program p ON d.Director_ID = p.Director_ID GROUP BY d.Name ORDER BY Programs_Count DESC LIMIT 1;"
    },
    {
        "question_id": 126,
        "answer_sql": "SELECT d.Name, d.Age FROM director d JOIN program p ON d.Director_ID = p.Director_ID GROUP BY d.Director_ID ORDER BY COUNT(p.Program_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 127,
        "answer_sql": "SELECT p.Title FROM program p ORDER BY p.Start_Year DESC LIMIT 1;"
    },
    {
        "question_id": 128,
        "answer_sql": ""
    },
    {
        "question_id": 129,
        "answer_sql": "SELECT c.Name, COUNT(p.Program_ID) as Programs_Count FROM channel c JOIN program p ON c.Channel_ID = p.Channel_ID GROUP BY c.Name;"
    },
    {
        "question_id": 130,
        "answer_sql": "SELECT COUNT(DISTINCT Channel_ID) FROM channel WHERE Channel_ID NOT IN (SELECT DISTINCT Channel_ID FROM program);"
    },
    {
        "question_id": 131,
        "answer_sql": ""
    },
    {
        "question_id": 132,
        "answer_sql": "SELECT c.Name, c.Internet FROM channel c WHERE c.Channel_ID = ( SELECT p.Channel_ID FROM program p GROUP BY p.Channel_ID ORDER BY COUNT(DISTINCT p.Director_ID) DESC LIMIT 1 );"
    },
    {
        "question_id": 133,
        "answer_sql": "SELECT d.Name FROM director d WHERE d.Age BETWEEN 30 AND 60;"
    },
    {
        "question_id": 134,
        "answer_sql": ""
    },
    {
        "question_id": 135,
        "answer_sql": ""
    },
    {
        "question_id": 136,
        "answer_sql": "SELECT COUNT(*) as Number_of_Radios FROM radio;"
    },
    {
        "question_id": 137,
        "answer_sql": "SELECT r.Transmitter, r.ERP_kW FROM radio r JOIN city_channel_radio cc_r ON r.Radio_ID = cc_r.Radio_ID ORDER BY r.ERP_kW ASC;"
    },
    {
        "question_id": 138,
        "answer_sql": "SELECT tv_show_name, Original_Airdate FROM tv_show;"
    },
    {
        "question_id": 139,
        "answer_sql": "SELECT city_channel.Station_name FROM city_channel INNER JOIN city_channel_radio ON city_channel.ID = city_channel_radio.City_channel_ID INNER JOIN radio ON city_channel_radio.Radio_ID = radio.Radio_ID WHERE city_channel.Affiliation <> 'ABC';"
    },
    {
        "question_id": 140,
        "answer_sql": "SELECT r.Transmitter FROM radio r WHERE r.ERP_kW > 150 AND r.ERP_kW < 30;"
    },
    {
        "question_id": 141,
        "answer_sql": "SELECT Radio_ID, Transmitter, ERP_kW FROM radio WHERE ERP_kW = (SELECT MAX(ERP_kW) FROM radio);"
    },
    {
        "question_id": 142,
        "answer_sql": "SELECT AVG(`radio`.`ERP_kW`) as `Average_ERP_kW` FROM `radio`;"
    },
    {
        "question_id": 143,
        "answer_sql": "SELECT city_channel.Affiliation, COUNT(*) as Number_of_City_Channels FROM city_channel JOIN city_channel_radio ON city_channel.ID = city_channel_radio.City_channel_ID GROUP BY city_channel.Affiliation;"
    },
    {
        "question_id": 144,
        "answer_sql": "SELECT Affiliation, COUNT(*) as Count FROM city_channel GROUP BY Affiliation ORDER BY Count DESC LIMIT 1;"
    },
    {
        "question_id": 145,
        "answer_sql": "SELECT c.Affiliation, COUNT(*) as Affiliation_Count FROM city_channel c JOIN city_channel_radio cr ON c.ID = cr.City_channel_ID GROUP BY c.Affiliation HAVING COUNT(*) > 3;"
    },
    {
        "question_id": 146,
        "answer_sql": ""
    },
    {
        "question_id": 147,
        "answer_sql": "SELECT r.Transmitter, c.City FROM city_channel_radio cr JOIN radio r ON cr.Radio_ID = r.Radio_ID JOIN city_channel c ON cr.City_channel_ID = c.ID;"
    },
    {
        "question_id": 148,
        "answer_sql": "SELECT r.Transmitter, c.Station_name FROM city_channel_radio cr JOIN radio r ON cr.Radio_ID = r.Radio_ID JOIN city_channel_tv_show ct ON cr.City_channel_ID = ct.City_channel_ID JOIN city_channel c ON ct.City_channel_ID = c.ID WHERE r.ERP_kW = ( SELECT MAX(r2.ERP_kW) FROM radio r2 ) ORDER BY r.Transmitter DESC;"
    },
    {
        "question_id": 149,
        "answer_sql": "SELECT r.Transmitter, COUNT(ccr.City_channel_ID) as Number_of_City_Channels FROM radio r JOIN city_channel_radio ccr ON r.Radio_ID = ccr.Radio_ID GROUP BY r.Transmitter;"
    },
    {
        "question_id": 150,
        "answer_sql": "SELECT DISTINCT r.Transmitter FROM radio r WHERE r.Radio_ID NOT IN ( SELECT cr.Radio_ID FROM city_channel_radio cr );"
    },
    {
        "question_id": 151,
        "answer_sql": ""
    },
    {
        "question_id": 152,
        "answer_sql": "SELECT v.Model, v.Top_Speed FROM vehicle v WHERE v.Power > 6000 ORDER BY v.Top_Speed DESC LIMIT 1;"
    },
    {
        "question_id": 153,
        "answer_sql": "SELECT d.Name FROM driver d INNER JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID WHERE d.Citizenship = 'United States';"
    },
    {
        "question_id": 154,
        "answer_sql": "SELECT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID WHERE d.Citizenship = 'United States';"
    },
    {
        "question_id": 155,
        "answer_sql": "SELECT COUNT(*) as Num_Vehicles_Driven FROM vehicle_driver GROUP BY Driver_ID ORDER BY Num_Vehicles_Driven DESC LIMIT 1;"
    },
    {
        "question_id": 156,
        "answer_sql": "SELECT d.Driver_ID, COUNT(vd.Vehicle_ID) as Vehicle_Count FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID GROUP BY d.Driver_ID ORDER BY Vehicle_Count DESC LIMIT 1;"
    },
    {
        "question_id": 157,
        "answer_sql": "SELECT MAX(Power) AS Maximum_Power, AVG(Power) AS Average_Power FROM vehicle WHERE Builder = 'Zhuzhou';"
    },
    {
        "question_id": 158,
        "answer_sql": "SELECT MAX(Power) AS Max_Power, AVG(Power) AS Avg_Power FROM vehicle INNER JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID INNER JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE Builder = 'Zhuzhou';"
    },
    {
        "question_id": 159,
        "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v WHERE v.Vehicle_ID NOT IN ( SELECT vd.Vehicle_ID FROM vehicle_driver vd GROUP BY vd.Vehicle_ID HAVING COUNT(vd.Driver_ID) = ( SELECT COUNT(*) FROM driver ) );"
    },
    {
        "question_id": 160,
        "answer_sql": "SELECT Vehicle_ID FROM vehicle_driver GROUP BY Vehicle_ID ORDER BY COUNT(*) LIMIT 1;"
    },
    {
        "question_id": 161,
        "answer_sql": "SELECT Vehicle.Top_Speed, Vehicle.Power FROM vehicle_driver INNER JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Build_Year = '1996';"
    },
    {
        "question_id": 162,
        "answer_sql": "SELECT Vehicle_ID, Model, Top_Speed, Power FROM vehicle WHERE Build_Year = '1996';"
    },
    {
        "question_id": 163,
        "answer_sql": "SELECT vehicle.Build_Year, vehicle.Model, vehicle.Builder FROM vehicle_driver INNER JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID INNER JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID;"
    },
    {
        "question_id": 164,
        "answer_sql": "SELECT v.Build_Year, v.Model, v.Builder FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID"
    },
    {
        "question_id": 165,
        "answer_sql": "SELECT COUNT(*) FROM vehicle_driver WHERE Vehicle_ID IN ( SELECT Vehicle_ID FROM vehicle WHERE Build_Year = '2012' );"
    },
    {
        "question_id": 166,
        "answer_sql": "SELECT COUNT(DISTINCT vd.Driver_ID) FROM vehicle_driver AS vd JOIN vehicle AS v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Build_Year = '2012';"
    },
    {
        "question_id": 167,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Racing_Series = 'NASCAR';"
    },
    {
        "question_id": 168,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Racing_Series = 'NASCAR';"
    },
    {
        "question_id": 169,
        "answer_sql": "SELECT SUM(vehicle.Top_Speed) / COUNT(vehicle.Vehicle_ID) AS Average_Top_Speed FROM vehicle;"
    },
    {
        "question_id": 170,
        "answer_sql": "SELECT AVG(vehicle.Top_Speed) AS Average_Top_Speed FROM vehicle;"
    },
    {
        "question_id": 171,
        "answer_sql": "SELECT DISTINCT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Power > 5000;"
    },
    {
        "question_id": 172,
        "answer_sql": "SELECT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Power > 5000;"
    },
    {
        "question_id": 173,
        "answer_sql": "SELECT Model, SUM(Power) as Total_Production FROM vehicle WHERE Total_Production > 100 AND Top_Speed > 150 GROUP BY Model;"
    },
    {
        "question_id": 174,
        "answer_sql": "SELECT v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Total_Production > 100 OR v.Top_Speed > 150;"
    },
    {
        "question_id": 175,
        "answer_sql": "SELECT Model, Build_Year FROM vehicle WHERE Model LIKE '%DJ%';"
    },
    {
        "question_id": 176,
        "answer_sql": "SELECT vehicle.Model, vehicle.Build_Year FROM vehicle INNER JOIN vehicle_driver ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID WHERE vehicle.Model LIKE '%DJ%';"
    },
    {
        "question_id": 177,
        "answer_sql": "SELECT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver);"
    },
    {
        "question_id": 178,
        "answer_sql": "SELECT v.Model FROM vehicle v LEFT JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID IS NULL;"
    },
    {
        "question_id": 179,
        "answer_sql": ""
    },
    {
        "question_id": 180,
        "answer_sql": ""
    },
    {
        "question_id": 181,
        "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle_driver vd JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE (SELECT COUNT(*) FROM vehicle_driver WHERE Driver_ID = d.Driver_ID) > 2 AND d.Name = 'Jeff Gordon';"
    },
    {
        "question_id": 182,
        "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE (SELECT COUNT(*) FROM driver d WHERE d.Driver_ID = vd.Driver_ID) > 2 OR (SELECT Name FROM driver WHERE Name = 'Jeff Gordon') IS NOT NULL;"
    },
    {
        "question_id": 183,
        "answer_sql": "SELECT COUNT(*) as Max_Top_Speed_Vehicles FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle);"
    },
    {
        "question_id": 184,
        "answer_sql": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle);"
    },
    {
        "question_id": 185,
        "answer_sql": "SELECT d.Name FROM driver d ORDER BY d.Name ASC;"
    },
    {
        "question_id": 186,
        "answer_sql": "SELECT d.Name FROM driver d ORDER BY d.Name ASC;"
    },
    {
        "question_id": 187,
        "answer_sql": "SELECT d.Racing_Series, COUNT(vd.Driver_ID) as Number_of_Drivers FROM driver as d JOIN vehicle_driver as vd ON d.Driver_ID = vd.Driver_ID GROUP BY d.Racing_Series;"
    },
    {
        "question_id": 188,
        "answer_sql": "SELECT d.Racing_Series, COUNT(vd.Driver_ID) as Driver_Count FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID GROUP BY d.Racing_Series;"
    },
    {
        "question_id": 189,
        "answer_sql": "SELECT d.Name, d.Citizenship FROM driver d INNER JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID INNER JOIN vehicle v ON v.Vehicle_ID = vd.Vehicle_ID WHERE v.Model = 'DJ1';"
    },
    {
        "question_id": 190,
        "answer_sql": "SELECT d.Name, d.Citizenship FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Model = 'DJ1';"
    },
    {
        "question_id": 191,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver);"
    },
    {
        "question_id": 192,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver);"
    },
    {
        "question_id": 193,
        "answer_sql": "SELECT COUNT(DISTINCT Exam_ID) as Total_Exams FROM Exams;"
    },
    {
        "question_id": 194,
        "answer_sql": "SELECT COUNT(*) as Number_of_Exams FROM Exams;"
    },
    {
        "question_id": 195,
        "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"
    },
    {
        "question_id": 196,
        "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"
    },
    {
        "question_id": 197,
        "answer_sql": "SELECT Exams.Exam_Name, Exams.Exam_Date FROM Exams WHERE Exams.Subject_Code != 'Database';"
    },
    {
        "question_id": 198,
        "answer_sql": "SELECT Exam_Date, Exam_Name FROM Exams WHERE Subject_Code != 'Database';"
    },
    {
        "question_id": 199,
        "answer_sql": "SELECT Exams.Exam_Date, Exams.Exam_Name FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC;"
    },
    {
        "question_id": 200,
        "answer_sql": "SELECT Exams.Exam_Date FROM Exams WHERE Exams.Subject_Code LIKE '%data%' ORDER BY Exams.Exam_Date DESC;"
    },
    {
        "question_id": 201,
        "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) as Count FROM Questions GROUP BY Type_of_Question_Code;"
    },
    {
        "question_id": 202,
        "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) as Count FROM Questions GROUP BY Type_of_Question_Code;"
    },
    {
        "question_id": 203,
        "answer_sql": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal';"
    },
    {
        "question_id": 204,
        "answer_sql": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal';"
    },
    {
        "question_id": 205,
        "answer_sql": "SELECT COUNT(DISTINCT Comments) AS Number_of_Distinct_Comments FROM Student_Answers;"
    },
    {
        "question_id": 206,
        "answer_sql": "SELECT COUNT(DISTINCT Comments) as Number_of_Distinct_Comments FROM Student_Answers"
    },
    {
        "question_id": 207,
        "answer_sql": "SELECT Student_Answers.Student_Answer_Text, COUNT(*) as Answer_Count FROM Student_Answers JOIN Questions_in_Exams ON Student_Answers.Exam_ID = Questions_in_Exams.Exam_ID JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID GROUP BY Student_Answers.Student_Answer_Text ORDER BY Answer_Count DESC;"
    },
    {
        "question_id": 208,
        "answer_sql": ""
    },
    {
        "question_id": 209,
        "answer_sql": ""
    },
    {
        "question_id": 210,
        "answer_sql": ""
    },
    {
        "question_id": 211,
        "answer_sql": ""
    },
    {
        "question_id": 212,
        "answer_sql": ""
    },
    {
        "question_id": 213,
        "answer_sql": "SELECT Assessment, COUNT(*) as Count FROM Student_Assessments GROUP BY Assessment ORDER BY Count LIMIT 1;"
    },
    {
        "question_id": 214,
        "answer_sql": "SELECT Assessment, COUNT(*) as Frequency_Count FROM Student_Assessments GROUP BY Assessment ORDER BY Frequency_Count LIMIT 1;"
    },
    {
        "question_id": 215,
        "answer_sql": "SELECT S.First_Name FROM Students S WHERE ( SELECT COUNT(*) FROM Student_Answers SA WHERE SA.Student_ID = S.Student_ID ) >= 2;"
    },
    {
        "question_id": 216,
        "answer_sql": "SELECT S.First_Name FROM Students S WHERE ( SELECT COUNT(*) FROM Student_Answers SA WHERE S.Student_ID = SA.Student_ID ) >= 2;"
    },
    {
        "question_id": 217,
        "answer_sql": "SELECT Valid_Answer_Text, COUNT(*) as Frequency FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY Frequency DESC LIMIT 1;"
    },
    {
        "question_id": 218,
        "answer_sql": ""
    },
    {
        "question_id": 219,
        "answer_sql": "SELECT S.Last_Name FROM Students S WHERE S.Gender_MFU = 'F';"
    },
    {
        "question_id": 220,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU = 'F';"
    },
    {
        "question_id": 221,
        "answer_sql": "SELECT Gender_MFU, COUNT(Student_ID) as Number_of_Students FROM Students GROUP BY Gender_MFU;"
    },
    {
        "question_id": 222,
        "answer_sql": "SELECT Gender_MFU, COUNT(Student_ID) as Number_of_Students FROM Students GROUP BY Gender_MFU;"
    },
    {
        "question_id": 223,
        "answer_sql": "SELECT S.Last_Name FROM Students S WHERE S.Gender_MFU IN ('F', 'M');"
    },
    {
        "question_id": 224,
        "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU = 'F' OR Gender_MFU = 'M';"
    },
    {
        "question_id": 225,
        "answer_sql": "SELECT S.First_Name FROM Students S WHERE S.Student_ID NOT IN ( SELECT SA.Student_ID FROM Student_Answers SA );"
    },
    {
        "question_id": 226,
        "answer_sql": "SELECT Students.First_Name FROM Students LEFT JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID WHERE Student_Answers.Student_ID IS NULL;"
    },
    {
        "question_id": 227,
        "answer_sql": ""
    },
    {
        "question_id": 228,
        "answer_sql": ""
    },
    {
        "question_id": 229,
        "answer_sql": "SELECT Type_of_Question_Code FROM Questions_in_Exams JOIN Questions ON Questions_in_Exams.Question_ID = Questions.Question_ID GROUP BY Type_of_Question_Code HAVING COUNT(*) >= 3;"
    },
    {
        "question_id": 230,
        "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(Question_ID) >= 3;"
    },
    {
        "question_id": 231,
        "answer_sql": "SELECT * FROM Students;"
    },
    {
        "question_id": 232,
        "answer_sql": "SELECT S.Student_ID, S.First_Name, S.Middle_Name, S.Last_Name, S.Gender_MFU, S.Student_Address, S.Email_Adress, S.Cell_Mobile_Phone, S.Home_Phone, Q.Question_Text FROM Students S JOIN Questions_in_Exams QE ON S.Student_ID = QE.Exam_ID JOIN Questions Q ON QE.Question_ID = Q.Question_ID;"
    },
    {
        "question_id": 233,
        "answer_sql": "SELECT COUNT(*) as total_addresses FROM Addresses;"
    },
    {
        "question_id": 234,
        "answer_sql": "SELECT COUNT(*) as total_addresses FROM Addresses;"
    },
    {
        "question_id": 235,
        "answer_sql": "SELECT c.address_id, a.address_details FROM Customers c JOIN Addresses a ON c.address_id = a.address_id;"
    },
    {
        "question_id": 236,
        "answer_sql": "SELECT c.address_id, a.address_details FROM Customers c JOIN Addresses a ON c.address_id = a.address_id;"
    },
    {
        "question_id": 237,
        "answer_sql": "SELECT COUNT(*) as total_products FROM Products;"
    },
    {
        "question_id": 238,
        "answer_sql": "SELECT COUNT(*) FROM Products;"
    },
    {
        "question_id": 239,
        "answer_sql": "SELECT Products.product_id, Products.product_type_code, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id;"
    },
    {
        "question_id": 240,
        "answer_sql": "SELECT product_id, product_type_code, product_name FROM Products;"
    },
    {
        "question_id": 241,
        "answer_sql": "SELECT Products.product_price FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_name = 'Monitor';"
    },
    {
        "question_id": 242,
        "answer_sql": "SELECT Products.product_price FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_name = 'Monitor';"
    },
    {
        "question_id": 243,
        "answer_sql": "SELECT MIN(product_price) AS Minimum_Price, AVG(product_price) AS Average_Price, MAX(product_price) AS Maximum_Price FROM Products;"
    },
    {
        "question_id": 244,
        "answer_sql": "SELECT MIN(product_price) AS Minimum_Price, AVG(product_price) AS Average_Price, MAX(product_price) AS Maximum_Price FROM Products;"
    },
    {
        "question_id": 245,
        "answer_sql": "SELECT AVG(product_price) as Average_Price FROM Products WHERE product_type_code = 'Clothes';"
    },
    {
        "question_id": 246,
        "answer_sql": "SELECT AVG(Products.product_price) as AverageClothesPrice FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_type_code = 'Clothes';"
    },
    {
        "question_id": 247,
        "answer_sql": "SELECT COUNT(*) as total_hardware_products FROM Products WHERE product_type_code = 'Hardware';"
    },
    {
        "question_id": 248,
        "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';"
    },
    {
        "question_id": 249,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products JOIN (SELECT AVG(product_price) as avg_price FROM Products) as AvgPrice ON Products.product_price > AvgPrice.avg_price;"
    },
    {
        "question_id": 250,
        "answer_sql": "SELECT Products.product_name FROM Products WHERE Products.product_price > ( SELECT AVG(Products.product_price) FROM Products );"
    },
    {
        "question_id": 251,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' AND Products.product_price > ( SELECT AVG(Products.product_price) FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' )"
    },
    {
        "question_id": 252,
        "answer_sql": "SELECT Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_price > ( SELECT AVG(Products.product_price) FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' )"
    },
    {
        "question_id": 253,
        "answer_sql": "SELECT p.product_name, p.product_price FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id WHERE p.product_type_code = 'Clothes' ORDER BY p.product_price DESC LIMIT 1;"
    },
    {
        "question_id": 254,
        "answer_sql": "SELECT p.product_name FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id WHERE p.product_type_code = 'Clothes' AND p.product_price = ( SELECT MAX(product_price) FROM Products WHERE product_type_code = 'Clothes' );"
    },
    {
        "question_id": 255,
        "answer_sql": "SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC LIMIT 1;"
    },
    {
        "question_id": 256,
        "answer_sql": "SELECT Products.product_id, Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_type_code = 'Hardware' GROUP BY Products.product_id ORDER BY Products.product_price ASC LIMIT 1;"
    },
    {
        "question_id": 257,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_name, Products.product_price ORDER BY Products.product_price DESC;"
    },
    {
        "question_id": 258,
        "answer_sql": "SELECT p.product_name, p.product_price FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id GROUP BY p.product_name, p.product_price ORDER BY p.product_price DESC;"
    },
    {
        "question_id": 259,
        "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_type_code = 'Hardware' ORDER BY Products.product_price ASC;"
    },
    {
        "question_id": 260,
        "answer_sql": "SELECT p.product_name FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id WHERE p.product_type_code = 'Hardware' ORDER BY p.product_price ASC;"
    },
    {
        "question_id": 261,
        "answer_sql": "SELECT product_type_code, COUNT(product_id) as product_count FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 262,
        "answer_sql": "SELECT product_type_code, COUNT(product_id) as product_count FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 263,
        "answer_sql": "SELECT product_type_code, AVG(product_price) as average_price FROM Products GROUP BY product_type_code;"
    },
    {
        "question_id": 264,
        "answer_sql": "SELECT Products.product_type_code, AVG(Products.product_price) as average_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_type_code;"
    },
    {
        "question_id": 265,
        "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING COUNT(product_id) >= 2;"
    },
    {
        "question_id": 266,
        "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING COUNT(product_id) >= 2;"
    },
    {
        "question_id": 267,
        "answer_sql": "SELECT product_type_code, COUNT(product_id) as product_count FROM Products GROUP BY product_type_code ORDER BY product_count DESC LIMIT 1;"
    },
    {
        "question_id": 268,
        "answer_sql": "SELECT product_type_code, COUNT(product_type_code) as frequency FROM Products GROUP BY product_type_code ORDER BY frequency DESC LIMIT 1;"
    },
    {
        "question_id": 269,
        "answer_sql": "SELECT COUNT(DISTINCT customer_id) as Number_of_Customers FROM Customers;"
    },
    {
        "question_id": 270,
        "answer_sql": "SELECT COUNT(*) as Total_Customers FROM Customers;"
    },
    {
        "question_id": 271,
        "answer_sql": "SELECT c.customer_id, c.customer_name FROM Customers c JOIN Addresses a ON c.address_id = a.address_id WHERE c.customer_id IN ( SELECT customer_id FROM Customer_Orders WHERE order_status_code = 'Completed' );"
    },
    {
        "question_id": 272,
        "answer_sql": "SELECT customer_id, customer_name FROM Customers;"
    },
    {
        "question_id": 273,
        "answer_sql": "SELECT c.customer_address, c.customer_phone, c.customer_email FROM Customers c WHERE c.customer_id = ( SELECT co.customer_id FROM Customer_Orders co WHERE co.customer_id = ( SELECT cu.customer_id FROM Customers cu WHERE cu.customer_name = 'Jeromy' ) );"
    },
    {
        "question_id": 274,
        "answer_sql": "SELECT c.customer_address, c.customer_phone, c.customer_email FROM Customers c JOIN Addresses a ON c.address_id = a.address_id WHERE c.customer_name = 'Jeromy';"
    },
    {
        "question_id": 275,
        "answer_sql": "SELECT payment_method_code, COUNT(customer_id) as customer_count FROM Customers GROUP BY payment_method_code;"
    },
    {
        "question_id": 276,
        "answer_sql": "SELECT payment_method_code, COUNT(DISTINCT customer_id) as number_of_customers FROM Customers GROUP BY payment_method_code;"
    },
    {
        "question_id": 277,
        "answer_sql": "SELECT payment_method_code, COUNT(*) as customer_count FROM Customers GROUP BY payment_method_code ORDER BY customer_count DESC LIMIT 1;"
    },
    {
        "question_id": 278,
        "answer_sql": "SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(`payment_method_code`) DESC LIMIT 1;"
    },
    {
        "question_id": 279,
        "answer_sql": "SELECT c.customer_name FROM Customers c JOIN ( SELECT customer_id, COUNT(*) as customer_count FROM Customer_Orders GROUP BY customer_id ORDER BY customer_count ASC LIMIT 1 ) o ON c.customer_id = o.customer_id;"
    },
    {
        "question_id": 280,
        "answer_sql": "SELECT c.customer_name, c.customer_id FROM Customers c WHERE c.customer_id IN ( SELECT co.customer_id FROM Customer_Orders co GROUP BY co.customer_id ORDER BY COUNT(*) ASC LIMIT 1 );"
    },
    {
        "question_id": 281,
        "answer_sql": "SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy';"
    },
    {
        "question_id": 282,
        "answer_sql": "SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy';"
    },
    {
        "question_id": 283,
        "answer_sql": "SELECT DISTINCT payment_method_code FROM Customers;"
    },
    {
        "question_id": 284,
        "answer_sql": "SELECT DISTINCT payment_method_code FROM Customers;"
    },
    {
        "question_id": 285,
        "answer_sql": "SELECT Products.product_id, Products.product_type_code FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id GROUP BY Products.product_id, Products.product_type_code ORDER BY Products.product_name;"
    },
    {
        "question_id": 286,
        "answer_sql": "SELECT Products.product_id, Products.product_type_code FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_id, Products.product_type_code ORDER BY Products.product_name ASC;"
    },
    {
        "question_id": 287,
        "answer_sql": "SELECT product_type_code, COUNT(product_id) as product_count FROM Products GROUP BY product_type_code ORDER BY product_count LIMIT 1;"
    },
    {
        "question_id": 288,
        "answer_sql": ""
    },
    {
        "question_id": 289,
        "answer_sql": "SELECT COUNT(*) as total_customer_orders FROM Customer_Orders;"
    },
    {
        "question_id": 290,
        "answer_sql": "SELECT COUNT(*) as total_customer_orders FROM Customer_Orders;"
    },
    {
        "question_id": 291,
        "answer_sql": "SELECT Customer_Orders.order_id, Customer_Orders.order_date, Customer_Orders.order_status_code FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customers.customer_name = 'Jeromy';"
    },
    {
        "question_id": 292,
        "answer_sql": "SELECT `order_id`, `order_date`, `order_status_code` FROM `Customer_Orders` WHERE `customer_id` = (SELECT `customer_id` FROM `Customers` WHERE `customer_name` = 'Jeromy');"
    },
    {
        "question_id": 293,
        "answer_sql": "SELECT Customers.customer_name, Customers.customer_id, COUNT(Customer_Orders.order_id) as order_count FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id;"
    },
    {
        "question_id": 294,
        "answer_sql": "SELECT c.customer_name, c.customer_id, COUNT(co.order_id) as number_of_orders FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id GROUP BY c.customer_id;"
    },
    {
        "question_id": 295,
        "answer_sql": "SELECT c.customer_id, c.customer_name, c.customer_phone, c.customer_email FROM Customers c JOIN (SELECT customer_id, COUNT(order_id) as order_count FROM Customer_Orders GROUP BY customer_id ORDER BY order_count DESC LIMIT 1) o ON c.customer_id = o.customer_id;"
    },
    {
        "question_id": 296,
        "answer_sql": "SELECT c.customer_id, c.customer_name, c.customer_phone, c.customer_email FROM Customers c JOIN ( SELECT customer_id, COUNT(order_id) as total_orders FROM Customer_Orders GROUP BY customer_id ORDER BY total_orders DESC LIMIT 1 ) o ON c.customer_id = o.customer_id;"
    },
    {
        "question_id": 297,
        "answer_sql": "SELECT order_status_code, COUNT(*) as order_count FROM Customer_Orders GROUP BY order_status_code;"
    },
    {
        "question_id": 298,
        "answer_sql": "SELECT order_status_code, COUNT(*) as order_count FROM Customer_Orders GROUP BY order_status_code;"
    },
    {
        "question_id": 299,
        "answer_sql": "SELECT `order_status_code`, COUNT(*) as `count` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY `count` DESC LIMIT 1;"
    },
    {
        "question_id": 300,
        "answer_sql": "SELECT `order_status_code` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY COUNT(`order_id`) DESC LIMIT 1;"
    },
    {
        "question_id": 301,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders);"
    },
    {
        "question_id": 302,
        "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Orders );"
    },
    {
        "question_id": 303,
        "answer_sql": "SELECT Products.product_name FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL;"
    },
    {
        "question_id": 304,
        "answer_sql": "SELECT Products.product_name FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL;"
    },
    {
        "question_id": 305,
        "answer_sql": "SELECT COUNT(*) as Total_Ordered_Products FROM Order_Items WHERE product_id IN ( SELECT product_id FROM Products WHERE product_name = 'Monitor' );"
    },
    {
        "question_id": 306,
        "answer_sql": "SELECT COUNT(*) as total_number_of_monitors FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id WHERE p.product_type_code = 'Monitor';"
    },
    {
        "question_id": 307,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers INNER JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id INNER JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';"
    },
    {
        "question_id": 308,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) AS NumberOfCustomers FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';"
    },
    {
        "question_id": 309,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers INNER JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id;"
    },
    {
        "question_id": 310,
        "answer_sql": "SELECT COUNT(DISTINCT Customers.customer_id) AS NumberOfDifferentCustomers FROM Customers INNER JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id;"
    },
    {
        "question_id": 311,
        "answer_sql": "SELECT c.customer_id FROM Customers c LEFT JOIN Customer_Orders co ON c.customer_id = co.customer_id WHERE co.customer_id IS NULL;"
    },
    {
        "question_id": 312,
        "answer_sql": "SELECT customer_id FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Orders );"
    },
    {
        "question_id": 313,
        "answer_sql": "SELECT Customer_Orders.order_date, Customer_Orders.order_id FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customer_Orders.order_date, Customer_Orders.order_id HAVING SUM(Order_Items.order_quantity) > 3 OR SUM(Order_Items.order_quantity) > 6;"
    },
    {
        "question_id": 314,
        "answer_sql": "SELECT Customer_Orders.order_id, Customer_Orders.order_date FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customer_Orders.order_id, Customer_Orders.order_date HAVING SUM(Order_Items.order_quantity) > 6 OR COUNT(Order_Items.product_id) > 3;"
    },
    {
        "question_id": 315,
        "answer_sql": "SELECT COUNT(*) as Total_Buildings FROM building;"
    },
    {
        "question_id": 316,
        "answer_sql": "SELECT COUNT(*) FROM building;"
    },
    {
        "question_id": 317,
        "answer_sql": "SELECT b.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID ORDER BY b.Number_of_Stories ASC;"
    },
    {
        "question_id": 318,
        "answer_sql": "SELECT b.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID ORDER BY b.Number_of_Stories ASC;"
    },
    {
        "question_id": 319,
        "answer_sql": "SELECT b.Address FROM building b JOIN region r ON b.Region_ID = r.Region_ID ORDER BY b.Completed_Year DESC;"
    },
    {
        "question_id": 320,
        "answer_sql": "SELECT Building_ID, Address FROM building ORDER BY Completed_Year DESC;"
    },
    {
        "question_id": 321,
        "answer_sql": "SELECT MAX( Number_of_Stories ) FROM building WHERE Completed_Year != 1980;"
    },
    {
        "question_id": 322,
        "answer_sql": "SELECT MAX( Number_of_Stories ) FROM building WHERE Completed_Year <> 1980;"
    },
    {
        "question_id": 323,
        "answer_sql": "SELECT AVG(region.Population) FROM region;"
    },
    {
        "question_id": 324,
        "answer_sql": "SELECT AVG(region.Population) as Average_Population FROM region JOIN building ON region.Region_ID = building.Region_ID;"
    },
    {
        "question_id": 325,
        "answer_sql": "SELECT Name FROM region ORDER BY Name ASC;"
    },
    {
        "question_id": 326,
        "answer_sql": "SELECT Name FROM region ORDER BY Name ASC;"
    },
    {
        "question_id": 327,
        "answer_sql": "SELECT region.Capital FROM region JOIN building ON region.Region_ID = building.Region_ID WHERE region.Area > 10000;"
    },
    {
        "question_id": 328,
        "answer_sql": "SELECT r.Capital FROM region r JOIN building b ON r.Region_ID = b.Region_ID WHERE r.Area > 10000;"
    },
    {
        "question_id": 329,
        "answer_sql": "SELECT r.Capital FROM region r WHERE r.Population = (SELECT MAX(population) FROM region);"
    },
    {
        "question_id": 330,
        "answer_sql": "SELECT r.Name, r.Capital, r.Population FROM region r WHERE r.Population = (SELECT MAX(Population) FROM region);"
    },
    {
        "question_id": 331,
        "answer_sql": ""
    },
    {
        "question_id": 332,
        "answer_sql": ""
    },
    {
        "question_id": 333,
        "answer_sql": "SELECT b.Name AS Building_Name, r.Name AS Region_Name FROM building AS b JOIN region AS r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 334,
        "answer_sql": "SELECT b.Name AS Building_Name, r.Name AS Region_Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 335,
        "answer_sql": ""
    },
    {
        "question_id": 336,
        "answer_sql": ""
    },
    {
        "question_id": 337,
        "answer_sql": "SELECT r.Name, r.Capital FROM region r WHERE r.Region_ID = ( SELECT br.Region_ID FROM building br GROUP BY br.Region_ID ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 338,
        "answer_sql": "SELECT r.Name, r.Capital FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Region_ID ORDER BY COUNT(b.Building_ID) DESC LIMIT 1;"
    },
    {
        "question_id": 339,
        "answer_sql": "SELECT b.Address, r.Capital FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 340,
        "answer_sql": "SELECT b.Address, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"
    },
    {
        "question_id": 341,
        "answer_sql": "SELECT COUNT(*) FROM building JOIN region ON building.Region_ID = region.Region_ID WHERE region.Name = 'Abruzzo';"
    },
    {
        "question_id": 342,
        "answer_sql": "SELECT COUNT(*) FROM building JOIN region ON building.Region_ID = region.Region_ID WHERE region.Name = 'Abruzzo';"
    },
    {
        "question_id": 343,
        "answer_sql": "SELECT Completed_Year, COUNT(*) as Number_of_Buildings FROM building GROUP BY Completed_Year;"
    },
    {
        "question_id": 344,
        "answer_sql": ""
    },
    {
        "question_id": 345,
        "answer_sql": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 346,
        "answer_sql": "SELECT Completed_Year, COUNT(*) as Building_Count FROM building GROUP BY Completed_Year ORDER BY Building_Count DESC LIMIT 1;"
    },
    {
        "question_id": 347,
        "answer_sql": "SELECT r.Name FROM region r LEFT JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Region_ID IS NULL;"
    },
    {
        "question_id": 348,
        "answer_sql": "SELECT r.Name FROM region r LEFT JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Region_ID IS NULL;"
    },
    {
        "question_id": 349,
        "answer_sql": ""
    },
    {
        "question_id": 350,
        "answer_sql": ""
    },
    {
        "question_id": 351,
        "answer_sql": "SELECT DISTINCT Address FROM building;"
    },
    {
        "question_id": 352,
        "answer_sql": "SELECT DISTINCT Address FROM building;"
    },
    {
        "question_id": 353,
        "answer_sql": "SELECT b.Building_ID, b.Name, b.Completed_Year, b.Number_of_Stories FROM building b JOIN region r ON b.Region_ID = r.Region_ID WHERE b.Completed_Year IS NOT NULL AND b.Number_of_Stories IS NOT NULL ORDER BY b.Number_of_Stories DESC;"
    },
    {
        "question_id": 354,
        "answer_sql": "SELECT b.Building_ID, b.Name, b.Address, b.Number_of_Stories, b.Completed_Year FROM building b JOIN region r ON b.Region_ID = r.Region_ID ORDER BY b.Number_of_Stories DESC;"
    },
    {
        "question_id": 355,
        "answer_sql": "SELECT Channels.Channel_Details FROM Channels ORDER BY Channels.Channel_Details ASC;"
    },
    {
        "question_id": 356,
        "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC;"
    },
    {
        "question_id": 357,
        "answer_sql": "SELECT COUNT(*) as total_services FROM Services;"
    },
    {
        "question_id": 358,
        "answer_sql": "SELECT COUNT(DISTINCT Service_ID) AS Number_of_Services FROM Services;"
    },
    {
        "question_id": 359,
        "answer_sql": "SELECT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(Analytical_Layer_Type_Code) DESC LIMIT 1;"
    },
    {
        "question_id": 360,
        "answer_sql": "SELECT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(Analytical_Layer_Type_Code) DESC LIMIT 1;"
    },
    {
        "question_id": 361,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"
    },
    {
        "question_id": 362,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"
    },
    {
        "question_id": 363,
        "answer_sql": "SELECT Services.Service_Details, COUNT(*) as Service_Usage_Count FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Services.Service_Details HAVING COUNT(*) > 3;"
    },
    {
        "question_id": 364,
        "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID GROUP BY Services.Service_Details HAVING COUNT(Customers_and_Services.Customer_ID) > 3;"
    },
    {
        "question_id": 365,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Customers_and_Services_ID) as Service_Usage_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY Service_Usage_Count DESC LIMIT 1;"
    },
    {
        "question_id": 366,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Customers_and_Services_ID) as Service_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY Service_Count DESC LIMIT 1;"
    },
    {
        "question_id": 367,
        "answer_sql": "SELECT c.Customer_Details, COUNT(cs.Customers_and_Services_ID) as Service_Usage_Count FROM Customers c JOIN Customers_and_Services cs ON c.Customer_ID = cs.Customer_ID GROUP BY cs.Customer_ID ORDER BY Service_Usage_Count DESC LIMIT 1;"
    },
    {
        "question_id": 368,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(DISTINCT Customers_and_Services.Customers_and_Services_ID) as Service_Usage_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY Service_Usage_Count DESC LIMIT 1;"
    },
    {
        "question_id": 369,
        "answer_sql": "SELECT Customers.Customer_ID, Customers.Customer_Details FROM Customers WHERE Customers.Customer_ID NOT IN ( SELECT Customers_and_Services.Customer_ID FROM Customers_and_Services WHERE Customers_and_Services.Customer_ID IN ( SELECT Customer_Interactions.Customer_ID FROM Customer_Interactions WHERE Customer_Interactions.Service_ID IS NULL ) );"
    },
    {
        "question_id": 370,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE NOT EXISTS ( SELECT 1 FROM Customers_and_Services WHERE Customers.Customer_ID = Customers_and_Services.Customer_ID );"
    },
    {
        "question_id": 371,
        "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Customers_and_Services_ID) as Service_Usage FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY Service_Usage ASC LIMIT 1;"
    },
    {
        "question_id": 372,
        "answer_sql": "SELECT DISTINCT Customers.Customer_Details FROM Customers WHERE Customers.Customer_ID NOT IN ( SELECT Customers_and_Services.Customer_ID FROM Customers_and_Services GROUP BY Customers_and_Services.Customer_ID ORDER BY COUNT(Customers_and_Services.Service_ID) ASC LIMIT 1 );"
    },
    {
        "question_id": 373,
        "answer_sql": "SELECT COUNT(DISTINCT Customers_and_Services_Details) as Number_of_Distinct_Customer_and_Service_Details FROM Customers_and_Services;"
    },
    {
        "question_id": 374,
        "answer_sql": "SELECT COUNT(DISTINCT Customers_and_Services_Details) AS Total_Customers_and_Services_Details FROM Customers_and_Services;"
    },
    {
        "question_id": 375,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%';"
    },
    {
        "question_id": 376,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customer_Details LIKE '%Kutch%';"
    },
    {
        "question_id": 377,
        "answer_sql": ""
    },
    {
        "question_id": 378,
        "answer_sql": ""
    },
    {
        "question_id": 379,
        "answer_sql": ""
    },
    {
        "question_id": 380,
        "answer_sql": ""
    },
    {
        "question_id": 381,
        "answer_sql": ""
    },
    {
        "question_id": 382,
        "answer_sql": ""
    },
    {
        "question_id": 383,
        "answer_sql": ""
    },
    {
        "question_id": 384,
        "answer_sql": ""
    },
    {
        "question_id": 385,
        "answer_sql": "SELECT COUNT(*) FROM Integration_Platform WHERE Customer_Interaction_ID IN ( SELECT Customer_Interaction_ID FROM Customer_Interactions WHERE Status_Code = 'Success' );"
    },
    {
        "question_id": 386,
        "answer_sql": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details LIKE '%Success%';"
    },
    {
        "question_id": 387,
        "answer_sql": ""
    },
    {
        "question_id": 388,
        "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail';"
    },
    {
        "question_id": 389,
        "answer_sql": ""
    },
    {
        "question_id": 390,
        "answer_sql": ""
    },
    {
        "question_id": 391,
        "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Usage_Count FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code;"
    },
    {
        "question_id": 392,
        "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Usage_Count FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code;"
    },
    {
        "question_id": 393,
        "answer_sql": ""
    },
    {
        "question_id": 394,
        "answer_sql": ""
    },
    {
        "question_id": 395,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 396,
        "answer_sql": "SELECT COUNT(*) FROM Vehicles;"
    },
    {
        "question_id": 397,
        "answer_sql": "SELECT V.name FROM Vehicles V ORDER BY V.Model_year DESC;"
    },
    {
        "question_id": 398,
        "answer_sql": "SELECT V.name FROM Vehicles V ORDER BY V.Model_year DESC;"
    },
    {
        "question_id": 399,
        "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;"
    },
    {
        "question_id": 400,
        "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles ;"
    },
    {
        "question_id": 401,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Annual_fuel_cost FROM Vehicles WHERE Vehicles.Model_year = 2013 OR Vehicles.Model_year = 2014;"
    },
    {
        "question_id": 402,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Model_year, Vehicles.Cost_per_25_miles FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Vehicles.Model_year IN (2013, 2014);"
    },
    {
        "question_id": 403,
        "answer_sql": "SELECT V.Type_of_powertrain FROM Vehicles V WHERE V.Model_year IN (2014, 2013) GROUP BY V.Type_of_powertrain;"
    },
    {
        "question_id": 404,
        "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles WHERE Model_year IN (2013, 2014)"
    },
    {
        "question_id": 405,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, COUNT(Vehicles.id) as Number_of_vehicles FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id GROUP BY Vehicles.Type_of_powertrain;"
    },
    {
        "question_id": 406,
        "answer_sql": "SELECT Type_of_powertrain, COUNT(*) as Number_of_vehicles FROM Vehicles GROUP BY Type_of_powertrain;"
    },
    {
        "question_id": 407,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, COUNT(*) as Number_of_vehicles FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id GROUP BY Vehicles.Type_of_powertrain ORDER BY Number_of_vehicles DESC LIMIT 1;"
    },
    {
        "question_id": 408,
        "answer_sql": "SELECT Type_of_powertrain FROM ( SELECT Type_of_powertrain , COUNT(*) as count FROM Vehicles GROUP BY Type_of_powertrain ORDER BY count DESC LIMIT 1 ) as most_common_type;"
    },
    {
        "question_id": 409,
        "answer_sql": "SELECT MIN(Annual_fuel_cost) AS Minimum_Annual_Fuel_Cost, MAX(Annual_fuel_cost) AS Maximum_Annual_Fuel_Cost, AVG(Annual_fuel_cost) AS Average_Annual_Fuel_Cost FROM Vehicles;"
    },
    {
        "question_id": 410,
        "answer_sql": "SELECT MIN(Annual_fuel_cost) AS Min_Fuel_Cost, MAX(Annual_fuel_cost) AS Max_Fuel_Cost, AVG(Annual_fuel_cost) AS Average_Fuel_Cost FROM Vehicles;"
    },
    {
        "question_id": 411,
        "answer_sql": ""
    },
    {
        "question_id": 412,
        "answer_sql": ""
    },
    {
        "question_id": 413,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.Annual_fuel_cost) as Average_Annual_Fuel_Cost FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(Vehicles.id) >= 2;"
    },
    {
        "question_id": 414,
        "answer_sql": "SELECT Type_of_powertrain, AVG(Annual_fuel_cost) as Average_Annual_Fuel_Cost FROM Vehicles GROUP BY Type_of_powertrain HAVING COUNT(Type_of_powertrain) > 1;"
    },
    {
        "question_id": 415,
        "answer_sql": "SELECT Customers.name, Customers.age, Customers.membership_credit FROM Customers INNER JOIN Renting_history ON Customers.id = Renting_history.customer_id;"
    },
    {
        "question_id": 416,
        "answer_sql": "SELECT Customers.name, Customers.age, Customers.membership_credit FROM Customers INNER JOIN Renting_history ON Customers.id = Renting_history.customer_id;"
    },
    {
        "question_id": 417,
        "answer_sql": "SELECT Customers.name, Customers.age FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id WHERE Customers.membership_credit = (SELECT MAX(membership_credit) FROM Customers);"
    },
    {
        "question_id": 418,
        "answer_sql": "SELECT Customers.name, Customers.age FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id WHERE Customers.membership_credit = ( SELECT MAX(Customers.membership_credit) FROM Customers );"
    },
    {
        "question_id": 419,
        "answer_sql": "SELECT AVG(Customers.age) as average_age FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id WHERE Customers.membership_credit > (SELECT AVG(membership_credit) FROM Customers);"
    },
    {
        "question_id": 420,
        "answer_sql": "SELECT AVG(Customers.age) as average_age FROM Customers WHERE Customers.id IN ( SELECT Renting_history.customer_id FROM Renting_history GROUP BY Renting_history.customer_id HAVING SUM(Renting_history.total_hours) > (SELECT AVG(total_hours) FROM Renting_history) );"
    },
    {
        "question_id": 421,
        "answer_sql": "SELECT * FROM Discount;"
    },
    {
        "question_id": 422,
        "answer_sql": "SELECT * FROM Discount;"
    },
    {
        "question_id": 423,
        "answer_sql": "SELECT V.name, RH.total_hours FROM Vehicles V JOIN Renting_history RH ON V.id = RH.vehicles_id;"
    },
    {
        "question_id": 424,
        "answer_sql": "SELECT V.name AS vehicle_name, RH.total_hours AS total_rental_hours FROM Vehicles V JOIN Renting_history RH ON V.id = RH.vehicles_id;"
    },
    {
        "question_id": 425,
        "answer_sql": "SELECT V.name FROM Vehicles V WHERE V.id NOT IN ( SELECT R.vehicles_id FROM Renting_history R );"
    },
    {
        "question_id": 426,
        "answer_sql": "SELECT V.name FROM Vehicles V LEFT JOIN Renting_history R ON V.id = R.vehicles_id WHERE R.vehicles_id IS NULL;"
    },
    {
        "question_id": 427,
        "answer_sql": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.name HAVING COUNT(Renting_history.id) >= 2;"
    },
    {
        "question_id": 428,
        "answer_sql": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.name HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 429,
        "answer_sql": "SELECT V.name, V.Model_year FROM Vehicles V JOIN Renting_history R ON V.id = R.vehicles_id GROUP BY V.id ORDER BY COUNT(R.id) DESC LIMIT 1;"
    },
    {
        "question_id": 430,
        "answer_sql": "SELECT V.name, V.Model_year FROM Vehicles V JOIN Renting_history R ON V.id = R.vehicles_id GROUP BY V.id ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 431,
        "answer_sql": "SELECT V.name, SUM(R.total_hours) as Total_hours_of_renting FROM Renting_history R JOIN Vehicles V ON R.vehicles_id = V.id GROUP BY R.vehicles_id ORDER BY Total_hours_of_renting DESC;"
    },
    {
        "question_id": 432,
        "answer_sql": "SELECT V.name, SUM(R.total_hours) as total_hours FROM Renting_history R JOIN Vehicles V ON R.vehicles_id = V.id GROUP BY R.vehicles_id ORDER BY total_hours DESC;"
    },
    {
        "question_id": 433,
        "answer_sql": "SELECT d.name AS discount_name, COUNT(rh.id) AS number_of_records FROM Renting_history AS rh JOIN Discount AS d ON rh.discount_id = d.id GROUP BY rh.discount_id ORDER BY number_of_records DESC LIMIT 1;"
    },
    {
        "question_id": 434,
        "answer_sql": "SELECT D.name FROM Discount D JOIN Renting_history R ON D.id = R.discount_id GROUP BY D.name ORDER BY COUNT(R.id) DESC LIMIT 1;"
    },
    {
        "question_id": 435,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id GROUP BY Renting_history.vehicles_id HAVING SUM(Renting_history.total_hours) > 30;"
    },
    {
        "question_id": 436,
        "answer_sql": "SELECT Vehicles.name, Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name, Vehicles.Type_of_powertrain HAVING SUM(Renting_history.total_hours) > 30;"
    },
    {
        "question_id": 437,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.City_fuel_economy_rate) AS Avg_City_Fuel_Economy_Rate, AVG(Vehicles.Highway_fuel_economy_rate) AS Avg_Highway_Fuel_Economy_Rate FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.Type_of_powertrain;"
    },
    {
        "question_id": 438,
        "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.City_fuel_economy_rate) AS Average_City_Fuel_Economy_Rate, AVG(Vehicles.Highway_fuel_economy_rate) AS Average_Highway_Fuel_Economy_Rate FROM Vehicles GROUP BY Vehicles.Type_of_powertrain;"
    },
    {
        "question_id": 439,
        "answer_sql": "SELECT AVG(amount_of_loan) AS Average_Amount_of_Loan FROM Student_Loans;"
    },
    {
        "question_id": 440,
        "answer_sql": "SELECT AVG(amount_of_loan) as Average_Amount_of_Loan FROM Student_Loans;"
    },
    {
        "question_id": 441,
        "answer_sql": "SELECT S.student_id, S.bio_data FROM Students S WHERE ( SELECT COUNT(*) FROM Classes C WHERE S.student_id = C.student_id ) >= 2 AND ( SELECT COUNT(*) FROM Detention D WHERE S.student_id = D.student_id ) < 2;"
    },
    {
        "question_id": 442,
        "answer_sql": "SELECT s.student_id, s.bio_data FROM Students s WHERE ( SELECT COUNT(*) FROM Classes c WHERE c.student_id = s.student_id ) >= 2 AND ( SELECT COUNT(*) FROM Detention d WHERE d.student_id = s.student_id ) < 2;"
    },
    {
        "question_id": 443,
        "answer_sql": "SELECT t.teacher_id, t.teacher_details FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id WHERE t.teacher_id IN ( SELECT c.teacher_id FROM Classes c WHERE c.class_details LIKE '%data%' GROUP BY c.teacher_id HAVING COUNT(c.class_id) > 0 ) AND t.teacher_id NOT IN ( SELECT c.teacher_id FROM Classes c WHERE c.class_details LIKE 'net%' GROUP BY c.teacher_id HAVING COUNT(c.class_id) > 0 );"
    },
    {
        "question_id": 444,
        "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Teachers.teacher_id IN ( SELECT Teachers.teacher_id FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details LIKE '%data%' ) AND Teachers.teacher_id NOT IN ( SELECT Teachers.teacher_id FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details LIKE 'net%' );"
    },
    {
        "question_id": 445,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details FROM Students s WHERE s.student_id NOT IN ( SELECT sa.student_id FROM Students_Addresses sa INNER JOIN Ref_Address_Types ra ON sa.address_type_code = ra.address_type_code WHERE ra.address_type_description = 'Home' ) AND s.student_id NOT IN ( SELECT sl.student_id FROM Student_Loans sl WHERE sl.date_of_loan IS NULL ) AND s.student_id NOT IN ( SELECT d.student_id FROM Detention d WHERE d.datetime_detention_start IS NULL );"
    },
    {
        "question_id": 446,
        "answer_sql": ""
    },
    {
        "question_id": 447,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, SL.date_of_loan, SL.amount_of_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id JOIN Achievements A ON S.student_id = A.student_id GROUP BY S.student_id HAVING COUNT(A.achievement_id) >= 2;"
    },
    {
        "question_id": 448,
        "answer_sql": "SELECT s.student_id, sl.date_of_loan, COUNT(a.achievement_id) as number_of_achievements FROM Students s JOIN Student_Loans sl ON s.student_id = sl.student_id JOIN Achievements a ON s.student_id = a.student_id GROUP BY s.student_id, sl.date_of_loan HAVING COUNT(a.achievement_id) >= 2;"
    },
    {
        "question_id": 449,
        "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details, COUNT(Classes.class_id) as num_courses FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id GROUP BY Teachers.teacher_id ORDER BY num_courses DESC LIMIT 1;"
    },
    {
        "question_id": 450,
        "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details, COUNT(Classes.class_id) as num_courses FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id GROUP BY Teachers.teacher_id ORDER BY num_courses DESC LIMIT 1;"
    },
    {
        "question_id": 451,
        "answer_sql": "SELECT DISTINCT Ref_Detention_Type.detention_type_description FROM Detention JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code;"
    },
    {
        "question_id": 452,
        "answer_sql": "SELECT DISTINCT Ref_Detention_Type.detention_type_description FROM Detention JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code;"
    },
    {
        "question_id": 453,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, A.address_type_description FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Ref_Address_Types A ON SA.address_type_code = A.address_type_code;"
    },
    {
        "question_id": 454,
        "answer_sql": "SELECT S.student_id, S.bio_data, A.address_details, AT.address_type_description FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Addresses A ON SA.address_id = A.address_id JOIN Ref_Address_Types AT ON SA.address_type_code = AT.address_type_code;"
    },
    {
        "question_id": 455,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, A.address_details FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Addresses A ON SA.address_id = A.address_id;"
    },
    {
        "question_id": 456,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details, Addresses.address_details FROM Students INNER JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id INNER JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id;"
    },
    {
        "question_id": 457,
        "answer_sql": "SELECT S.student_id, S.bio_data, T.date_of_transcript FROM Students S INNER JOIN Transcripts T ON S.student_id = T.student_id;"
    },
    {
        "question_id": 458,
        "answer_sql": "SELECT Students.student_id, Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id;"
    },
    {
        "question_id": 459,
        "answer_sql": "SELECT COUNT(*) as 'Number of Students', GROUP_CONCAT(DISTINCT Behaviour_Monitoring.behaviour_monitoring_details) as 'Result Details' FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY Behaviour_Monitoring.behaviour_monitoring_id ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 460,
        "answer_sql": "SELECT bm.behaviour_monitoring_details, COUNT(*) as count FROM Behaviour_Monitoring as bm GROUP BY bm.behaviour_monitoring_details ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 461,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, COUNT(B.behaviour_monitoring_id) as behaviour_count FROM Students S JOIN Behaviour_Monitoring B ON S.student_id = B.student_id WHERE S.student_id IN ( SELECT student_id FROM ( SELECT student_id, COUNT(*) as count FROM Behaviour_Monitoring GROUP BY student_id ORDER BY count DESC LIMIT 3 ) ) GROUP BY S.student_id;"
    },
    {
        "question_id": 462,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, COUNT(T.transcript_id) as transcript_count, COUNT(B.behaviour_monitoring_id) as behaviour_monitoring_count, COUNT(A.achievement_id) as achievement_count FROM Students S LEFT JOIN Transcripts T ON S.student_id = T.student_id LEFT JOIN Behaviour_Monitoring B ON S.student_id = B.student_id LEFT JOIN Achievements A ON S.student_id = A.student_id GROUP BY S.student_id HAVING transcript_count >= 3 AND behaviour_monitoring_count >= 3 AND achievement_count >= 3 ORDER BY transcript_count DESC, behaviour_monitoring_count DESC, achievement_count DESC;"
    },
    {
        "question_id": 463,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details FROM Students S WHERE S.student_id IN ( SELECT TM.student_id FROM Behaviour_Monitoring TM GROUP BY TM.student_id ORDER BY COUNT(*) DESC LIMIT 1 )"
    },
    {
        "question_id": 464,
        "answer_sql": "SELECT S.student_id, S.bio_data, COUNT(B.behaviour_monitoring_details) as count_behaviour_monitoring FROM Students S JOIN Behaviour_Monitoring B ON S.student_id = B.student_id GROUP BY S.student_id ORDER BY count_behaviour_monitoring DESC LIMIT 1;"
    },
    {
        "question_id": 465,
        "answer_sql": "SELECT S.student_id, S.bio_data, SE.event_date FROM Students S JOIN Student_Events SE ON S.student_id = SE.student_id;"
    },
    {
        "question_id": 466,
        "answer_sql": "SELECT S.bio_data, SE.event_date FROM Students S JOIN Student_Events SE ON S.student_id = SE.student_id GROUP BY S.student_id;"
    },
    {
        "question_id": 467,
        "answer_sql": "SELECT COUNT(DISTINCT student_events.student_id) AS total_students, ref_event_types.event_type_description, student_events.event_type_code FROM student_events INNER JOIN ref_event_types ON student_events.event_type_code = ref_event_types.event_type_code GROUP BY student_events.event_type_code ORDER BY total_students DESC LIMIT 1;"
    },
    {
        "question_id": 468,
        "answer_sql": "SELECT Ref_Event_Types.event_type_description, COUNT(Student_Events.event_id) as student_count FROM Student_Events INNER JOIN Ref_Event_Types ON Student_Events.event_type_code = Ref_Event_Types.event_type_code GROUP BY Student_Events.event_type_code ORDER BY student_count DESC LIMIT 1;"
    },
    {
        "question_id": 469,
        "answer_sql": "SELECT Achievements.achievement_id, Achievements.date_achievement, Achievements.achievement_details, Ref_Achievement_Type.achievement_type_description FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 470,
        "answer_sql": "SELECT Achievements.achievement_details, Ref_Achievement_Type.achievement_type_description FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 471,
        "answer_sql": "SELECT COUNT(DISTINCT Teachers.teacher_id) AS NumberOfTeachers FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Classes.student_id = Students.student_id LEFT JOIN Achievements ON Students.student_id = Achievements.student_id WHERE Achievements.student_id IS NULL;"
    },
    {
        "question_id": 472,
        "answer_sql": "SELECT COUNT(DISTINCT Teachers.teacher_id) AS NumberOfTeachers FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Classes.student_id = Students.student_id LEFT JOIN Achievements ON Students.student_id = Achievements.student_id WHERE Achievements.student_id IS NULL;"
    },
    {
        "question_id": 473,
        "answer_sql": "SELECT Transcripts.date_of_transcript, Transcripts.transcript_details FROM Transcripts INNER JOIN Students ON Transcripts.student_id = Students.student_id;"
    },
    {
        "question_id": 474,
        "answer_sql": "SELECT Transcripts.date_of_transcript, Transcripts.transcript_details, Students.student_id, Students.bio_data, Students.student_details FROM Transcripts INNER JOIN Students ON Transcripts.student_id = Students.student_id;"
    },
    {
        "question_id": 475,
        "answer_sql": "SELECT Ref_Achievement_Type.achievement_type_code, Achievements.achievement_details, Achievements.date_achievement FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 476,
        "answer_sql": "SELECT Ref_Achievement_Type.achievement_type_code, Achievements.achievement_details, Achievements.date_achievement FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code;"
    },
    {
        "question_id": 477,
        "answer_sql": "SELECT S.student_id, D.datetime_detention_start, D.datetime_detention_end FROM Detention D JOIN Students S ON D.student_id = S.student_id ORDER BY S.student_id;"
    },
    {
        "question_id": 478,
        "answer_sql": "SELECT d.datetime_detention_start, d.datetime_detention_end FROM Detention d JOIN Ref_Detention_Type r ON d.detention_type_code = r.detention_type_code;"
    },
    {
        "question_id": 479,
        "answer_sql": "SELECT student_id, bio_data, student_details FROM Students WHERE bio_data LIKE '%Suite%' OR student_details LIKE '%Suite%';"
    },
    {
        "question_id": 480,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details FROM Students s JOIN Students_Addresses sa ON s.student_id = sa.student_id JOIN Addresses a ON sa.address_id = a.address_id WHERE a.address_details LIKE '%Suite%';"
    },
    {
        "question_id": 481,
        "answer_sql": "SELECT T.teacher_id, S.student_id, T.teacher_details, S.student_details FROM Teachers T JOIN Classes C ON T.teacher_id = C.teacher_id JOIN Students S ON C.student_id = S.student_id;"
    },
    {
        "question_id": 482,
        "answer_sql": "SELECT T.teacher_id, T.teacher_details, S.student_id, S.student_details FROM Teachers T JOIN Classes C ON T.teacher_id = C.teacher_id JOIN Students S ON C.student_id = S.student_id;"
    },
    {
        "question_id": 483,
        "answer_sql": "SELECT COUNT(DISTINCT teacher_id) as num_teachers, teacher_id FROM Classes GROUP BY teacher_id ORDER BY num_teachers DESC LIMIT 1;"
    },
    {
        "question_id": 484,
        "answer_sql": "SELECT Teachers.teacher_id, COUNT(Classes.class_id) as number_of_courses FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id GROUP BY Teachers.teacher_id ORDER BY number_of_courses DESC LIMIT 1;"
    },
    {
        "question_id": 485,
        "answer_sql": "SELECT COUNT(*) as total_courses, student_id FROM Classes GROUP BY student_id ORDER BY total_courses DESC LIMIT 1;"
    },
    {
        "question_id": 486,
        "answer_sql": "SELECT s.student_id, COUNT(DISTINCT c.class_id) as number_of_courses FROM Students s JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id ORDER BY number_of_courses DESC LIMIT 1;"
    },
    {
        "question_id": 487,
        "answer_sql": "SELECT s.student_id, s.student_details FROM Students s WHERE ( SELECT COUNT(*) FROM Classes c WHERE c.student_id = s.student_id ) = 2;"
    },
    {
        "question_id": 488,
        "answer_sql": "SELECT s.student_id, s.student_details FROM Students s JOIN ( SELECT student_id FROM Classes GROUP BY student_id HAVING COUNT(*) = 2 ) c ON s.student_id = c.student_id;"
    },
    {
        "question_id": 489,
        "answer_sql": "SELECT Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description FROM Detention INNER JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code GROUP BY Detention.detention_type_code ORDER BY COUNT(Detention.detention_type_code) LIMIT 1;"
    },
    {
        "question_id": 490,
        "answer_sql": "SELECT Ref_Detention_Type.detention_type_code, Ref_Detention_Type.detention_type_description FROM Detention JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code GROUP BY Detention.detention_type_code HAVING COUNT(Detention.detention_type_code) = ( SELECT COUNT(Detention.detention_type_code) as count FROM Detention GROUP BY Detention.detention_type_code ORDER BY count ASC LIMIT 1 );"
    },
    {
        "question_id": 491,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, AVG(SL.amount_of_loan) as average_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id GROUP BY S.student_id HAVING AVG(SL.amount_of_loan) < (SELECT AVG(amount_of_loan) FROM Student_Loans);"
    },
    {
        "question_id": 492,
        "answer_sql": "SELECT S.student_id, S.bio_data, AVG(SL.amount_of_loan) as average_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id GROUP BY S.student_id, S.bio_data HAVING AVG(SL.amount_of_loan) > (SELECT AVG(amount_of_loan) FROM Student_Loans);"
    },
    {
        "question_id": 493,
        "answer_sql": "SELECT MIN(date_of_loan) as earliest_loan_date FROM Student_Loans;"
    },
    {
        "question_id": 494,
        "answer_sql": "SELECT MIN(date_of_loan) as earliest_loan_date FROM Student_Loans;"
    },
    {
        "question_id": 495,
        "answer_sql": "SELECT S.student_id, S.bio_data, S.student_details, SL.amount_of_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id WHERE SL.amount_of_loan = (SELECT MIN(amount_of_loan) FROM Student_Loans);"
    },
    {
        "question_id": 496,
        "answer_sql": "SELECT s.student_id, s.bio_data, s.student_details, sl.date_of_loan, sl.amount_of_loan FROM Students s JOIN Student_Loans sl ON s.student_id = sl.student_id WHERE sl.amount_of_loan = ( SELECT MIN(amount_of_loan) FROM Student_Loans );"
    },
    {
        "question_id": 497,
        "answer_sql": "SELECT `date_of_transcript` FROM `Transcripts` WHERE `student_id` IN ( SELECT `student_id` FROM `Student_Loans` ORDER BY `amount_of_loan` DESC LIMIT 1 ) ORDER BY `date_of_transcript` DESC LIMIT 1;"
    },
    {
        "question_id": 498,
        "answer_sql": "SELECT s.student_id, a.date_of_loan, MAX(a.amount_of_loan) as max_loan_amount FROM Students s JOIN Student_Loans a ON s.student_id = a.student_id GROUP BY s.student_id, a.date_of_loan ORDER BY max_loan_amount DESC LIMIT 1;"
    },
    {
        "question_id": 499,
        "answer_sql": "SELECT t.teacher_id, t.teacher_details FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id JOIN Students s ON c.student_id = s.student_id JOIN Transcripts tr ON s.student_id = tr.student_id WHERE tr.date_of_transcript = (SELECT MIN(date_of_transcript) FROM Transcripts)"
    },
    {
        "question_id": 500,
        "answer_sql": "SELECT t.teacher_id, t.teacher_details, s.student_id, s.bio_data, s.student_details, se.event_date FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id JOIN Students s ON c.student_id = s.student_id JOIN Student_Events se ON s.student_id = se.student_id WHERE se.event_date = (SELECT MIN(event_date) FROM Student_Events);"
    },
    {
        "question_id": 501,
        "answer_sql": "SELECT s.student_id, SUM(sl.amount_of_loan) as total_loan FROM Students s JOIN Student_Loans sl ON s.student_id = sl.student_id GROUP BY s.student_id;"
    },
    {
        "question_id": 502,
        "answer_sql": "SELECT Students.student_id, SUM(Student_Loans.amount_of_loan) AS total_loan_amount FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id GROUP BY Students.student_id;"
    },
    {
        "question_id": 503,
        "answer_sql": "SELECT s.student_id, s.bio_data, COUNT(DISTINCT c.class_id) AS course_count FROM Students s LEFT JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id, s.bio_data;"
    },
    {
        "question_id": 504,
        "answer_sql": "SELECT s.student_id, s.bio_data, COUNT(DISTINCT c.class_id) AS number_of_courses FROM Students s LEFT JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id, s.bio_data;"
    },
    {
        "question_id": 505,
        "answer_sql": "SELECT COUNT(DISTINCT s.student_id) AS Number_of_Students FROM Students s JOIN Detention d ON s.student_id = d.student_id;"
    },
    {
        "question_id": 506,
        "answer_sql": "SELECT COUNT(*) FROM Students INNER JOIN Detention ON Students.student_id = Detention.student_id;"
    },
    {
        "question_id": 507,
        "answer_sql": "SELECT Ref_Address_Types.address_type_description, COUNT(Students_Addresses.address_id) as count FROM Students_Addresses JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code GROUP BY Students_Addresses.address_type_code ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 508,
        "answer_sql": "SELECT Ref_Address_Types.address_type_code, Ref_Address_Types.address_type_description, COUNT(Students_Addresses.address_id) as count FROM Students_Addresses INNER JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code GROUP BY Students_Addresses.address_type_code ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 509,
        "answer_sql": "SELECT s.student_id, s.bio_data FROM Students s LEFT JOIN Student_Events se ON s.student_id = se.student_id LEFT JOIN Student_Loans sl ON s.student_id = sl.student_id WHERE se.student_id IS NULL AND sl.student_id IS NOT NULL GROUP BY s.student_id;"
    },
    {
        "question_id": 510,
        "answer_sql": "SELECT s.student_id, s.bio_data FROM Students s LEFT JOIN Student_Events se ON s.student_id = se.student_id LEFT JOIN Student_Loans sl ON s.student_id = sl.student_id WHERE se.student_id IS NULL AND sl.student_id IS NOT NULL GROUP BY s.student_id;"
    },
    {
        "question_id": 511,
        "answer_sql": "SELECT S.student_id, A.address_id, A.address_details, T1.date_of_transcript, T2.date_of_transcript FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Addresses A ON SA.address_id = A.address_id JOIN (SELECT student_id, date_of_transcript FROM Transcripts GROUP BY student_id HAVING COUNT(student_id) = 2) T1 ON S.student_id = T1.student_id JOIN (SELECT student_id, date_of_transcript FROM Transcripts GROUP BY student_id HAVING COUNT(student_id) = 2) T2 ON S.student_id = T2.student_id;"
    },
    {
        "question_id": 512,
        "answer_sql": "SELECT S.student_id, A.address_id, A.address_details, T1.date_of_transcript, T2.date_of_transcript FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Addresses A ON SA.address_id = A.address_id JOIN Transcripts T1 ON S.student_id = T1.student_id JOIN Transcripts T2 ON S.student_id = T2.student_id WHERE (T1.date_of_transcript < T2.date_of_transcript) GROUP BY S.student_id, A.address_id, A.address_details, T1.date_of_transcript, T2.date_of_transcript;"
    },
    {
        "question_id": 513,
        "answer_sql": ""
    },
    {
        "question_id": 514,
        "answer_sql": "SELECT datetime_detention_start FROM Detention;"
    },
    {
        "question_id": 515,
        "answer_sql": "SELECT Name FROM Author;"
    },
    {
        "question_id": 516,
        "answer_sql": "SELECT Name FROM Author;"
    },
    {
        "question_id": 517,
        "answer_sql": "SELECT Client.Name, Client.Address FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient;"
    },
    {
        "question_id": 518,
        "answer_sql": "SELECT Name, Address FROM Client;"
    },
    {
        "question_id": 519,
        "answer_sql": "SELECT B.Title, B.ISBN, B.SalePrice FROM Book B JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE BO.amount > 0;"
    },
    {
        "question_id": 520,
        "answer_sql": "SELECT Book.Title, Book.ISBN, Book.SalePrice FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.Title, Book.ISBN, Book.SalePrice;"
    },
    {
        "question_id": 521,
        "answer_sql": "SELECT COUNT(*) FROM Book;"
    },
    {
        "question_id": 522,
        "answer_sql": "SELECT COUNT(*) FROM Book;"
    },
    {
        "question_id": 523,
        "answer_sql": "SELECT COUNT(DISTINCT idAuthor) as NumberOfAuthors FROM Author;"
    },
    {
        "question_id": 524,
        "answer_sql": "SELECT COUNT(DISTINCT idAuthor) as NumberOfAuthors FROM Author;"
    },
    {
        "question_id": 525,
        "answer_sql": "SELECT COUNT(*) as NumberOfClients FROM Client;"
    },
    {
        "question_id": 526,
        "answer_sql": "SELECT COUNT(DISTINCT IdClient) AS NumberOfClients FROM Client;"
    },
    {
        "question_id": 527,
        "answer_sql": "SELECT C.Name, C.Address FROM Client C ORDER BY C.Name ASC;"
    },
    {
        "question_id": 528,
        "answer_sql": "SELECT Name, Address FROM Client ORDER BY Name ASC;"
    },
    {
        "question_id": 529,
        "answer_sql": "SELECT Book.Title, Author.Name FROM Book INNER JOIN Author_Book ON Book.ISBN = Author_Book.ISBN INNER JOIN Author ON Author_Book.Author = Author.idAuthor"
    },
    {
        "question_id": 530,
        "answer_sql": "SELECT Book.Title, Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor"
    },
    {
        "question_id": 531,
        "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders INNER JOIN Client ON Orders.IdClient = Client.IdClient;"
    },
    {
        "question_id": 532,
        "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders INNER JOIN Client ON Orders.IdClient = Client.IdClient;"
    },
    {
        "question_id": 533,
        "answer_sql": "SELECT A.Name, COUNT(B.ISBN) as NumberOfBooks FROM Author A JOIN Author_Book AB ON A.idAuthor = AB.Author JOIN Book B ON AB.ISBN = B.ISBN GROUP BY A.Name;"
    },
    {
        "question_id": 534,
        "answer_sql": "SELECT A.Name, COUNT(B.ISBN) as NumberOfBooks FROM Author A JOIN Author_Book AB ON A.idAuthor = AB.Author JOIN Book B ON AB.ISBN = B.ISBN GROUP BY A.Name;"
    },
    {
        "question_id": 535,
        "answer_sql": "SELECT Book.ISBN, COUNT(Books_Order.IdOrder) as NumberOfOrders FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.ISBN;"
    },
    {
        "question_id": 536,
        "answer_sql": "SELECT Book.ISBN, COUNT(Books_Order.ISBN) as Order_Count FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.ISBN;"
    },
    {
        "question_id": 537,
        "answer_sql": "SELECT Book.ISBN, SUM(Books_Order.amount) as total_amount_ordered FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.ISBN;"
    },
    {
        "question_id": 538,
        "answer_sql": "SELECT Book.ISBN, SUM(Books_Order.amount) as total_amount_ordered FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.ISBN;"
    },
    {
        "question_id": 539,
        "answer_sql": "SELECT Title FROM Book WHERE ISBN IN ( SELECT ISBN FROM Books_Order GROUP BY ISBN ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 540,
        "answer_sql": "SELECT Title FROM Book WHERE ISBN IN ( SELECT ISBN FROM Books_Order GROUP BY ISBN ORDER BY SUM(amount) DESC LIMIT 1 );"
    },
    {
        "question_id": 541,
        "answer_sql": "SELECT B.Title, B.PurchasePrice FROM Book B JOIN Books_Order BO ON B.ISBN = BO.ISBN GROUP BY B.Title, B.PurchasePrice HAVING SUM(BO.amount) = ( SELECT MAX(total_amount) FROM ( SELECT SUM(BO.amount) AS total_amount FROM Books_Order BO JOIN Book B ON B.ISBN = BO.ISBN GROUP BY B.Title, B.PurchasePrice ) );"
    },
    {
        "question_id": 542,
        "answer_sql": "SELECT B.Title, B.PurchasePrice FROM Book B JOIN ( SELECT BO.ISBN, SUM(BO.amount) as total_amount FROM Books_Order BO GROUP BY BO.ISBN ORDER BY total_amount DESC LIMIT 1 ) BO ON B.ISBN = BO.ISBN;"
    },
    {
        "question_id": 543,
        "answer_sql": "SELECT Title FROM Book WHERE ISBN IN ( SELECT ISBN FROM Books_Order GROUP BY ISBN HAVING SUM(amount) > 0 );"
    },
    {
        "question_id": 544,
        "answer_sql": ""
    },
    {
        "question_id": 545,
        "answer_sql": "SELECT C.Name FROM Client C WHERE C.IdClient IN ( SELECT O.IdClient FROM Orders O GROUP BY O.IdClient HAVING COUNT(*) >= 1 );"
    },
    {
        "question_id": 546,
        "answer_sql": "SELECT DISTINCT c.Name FROM Client c JOIN Orders o ON c.IdClient = o.IdClient;"
    },
    {
        "question_id": 547,
        "answer_sql": "SELECT C.Name, COUNT(BO.IdOrder) as NumberOfOrders FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name;"
    },
    {
        "question_id": 548,
        "answer_sql": "SELECT C.Name, COUNT(BO.IdOrder) as NumberOfOrders FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name;"
    },
    {
        "question_id": 549,
        "answer_sql": "SELECT C.Name, COUNT(O.IdOrder) as NumberOfOrders FROM Client C JOIN Orders O ON C.IdClient = O.IdClient GROUP BY C.Name ORDER BY NumberOfOrders DESC LIMIT 1;"
    },
    {
        "question_id": 550,
        "answer_sql": "SELECT C.Name FROM Client C WHERE (SELECT COUNT(*) FROM Orders O WHERE O.IdClient = C.IdClient) = (SELECT MAX(count) FROM (SELECT COUNT(*) as count FROM Orders O GROUP BY O.IdClient));"
    },
    {
        "question_id": 551,
        "answer_sql": "SELECT C.Name, SUM(BO.amount) as TotalAmount FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name;"
    },
    {
        "question_id": 552,
        "answer_sql": "SELECT C.Name, SUM(BO.amount) as TotalAmount FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name;"
    },
    {
        "question_id": 553,
        "answer_sql": "SELECT C.Name, SUM(BO.amount) as TotalAmount FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name ORDER BY TotalAmount DESC LIMIT 1;"
    },
    {
        "question_id": 554,
        "answer_sql": "SELECT C.Name, SUM(BO.amount) as TotalAmount FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name ORDER BY TotalAmount DESC LIMIT 1;"
    },
    {
        "question_id": 555,
        "answer_sql": "SELECT Title FROM Book WHERE ISBN NOT IN (SELECT ISBN FROM Books_Order);"
    },
    {
        "question_id": 556,
        "answer_sql": "SELECT Title FROM Book WHERE ISBN NOT IN ( SELECT ISBN FROM Books_Order );"
    },
    {
        "question_id": 557,
        "answer_sql": "SELECT c.Name FROM Client c LEFT JOIN Orders o ON c.IdClient = o.IdClient WHERE o.IdOrder IS NULL;"
    },
    {
        "question_id": 558,
        "answer_sql": "SELECT c.IdClient, c.Name FROM Client c LEFT JOIN Orders o ON c.IdClient = o.IdClient WHERE o.IdOrder IS NULL;"
    },
    {
        "question_id": 559,
        "answer_sql": "SELECT MAX(SalePrice) as Maximum_Sale_Price, MIN(SalePrice) as Minimum_Sale_Price FROM Book;"
    },
    {
        "question_id": 560,
        "answer_sql": "SELECT MAX(SalePrice) as MaximumSalePrice, MIN(SalePrice) as MinimumSalePrice FROM Book;"
    },
    {
        "question_id": 561,
        "answer_sql": "SELECT AVG(PurchasePrice) AS AveragePurchasePrice, AVG(SalePrice) AS AverageSalePrice FROM Book;"
    },
    {
        "question_id": 562,
        "answer_sql": "SELECT AVG(B.PurchasePrice) as AveragePurchasePrice, AVG(B.SalePrice) as AverageSalePrice FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name = '[Author Name]';"
    },
    {
        "question_id": 563,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) AS Maximum_Price_Difference FROM Book;"
    },
    {
        "question_id": 564,
        "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) as LargestDifference FROM Book;"
    },
    {
        "question_id": 565,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 566,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 567,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book);"
    },
    {
        "question_id": 568,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book);"
    },
    {
        "question_id": 569,
        "answer_sql": "SELECT B.Title FROM Book B WHERE B.PurchasePrice = ( SELECT MAX(B2.PurchasePrice) FROM Book B2 );"
    },
    {
        "question_id": 570,
        "answer_sql": "SELECT Title FROM Book WHERE PurchasePrice = (SELECT MAX(PurchasePrice) FROM Book);"
    },
    {
        "question_id": 571,
        "answer_sql": "SELECT AVG(SalePrice) AS AverageSalePrice FROM Book INNER JOIN Author_Book ON Book.ISBN = Author_Book.ISBN INNER JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'George Orwell';"
    },
    {
        "question_id": 572,
        "answer_sql": "SELECT AVG(SalePrice) AS AverageSalePrice FROM Book INNER JOIN Author_Book ON Book.ISBN = Author_Book.ISBN INNER JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'George Orwell';"
    },
    {
        "question_id": 573,
        "answer_sql": "SELECT b.SalePrice FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Author a ON ab.Author = a.idAuthor WHERE a.Name = 'Plato';"
    },
    {
        "question_id": 574,
        "answer_sql": "SELECT Book.SalePrice FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'Plato';"
    },
    {
        "question_id": 575,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book);"
    },
    {
        "question_id": 576,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book);"
    },
    {
        "question_id": 577,
        "answer_sql": "SELECT Title FROM Book WHERE SalePrice < (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 578,
        "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name = 'Plato' AND B.SalePrice < (SELECT AVG(SalePrice) FROM Book);"
    },
    {
        "question_id": 579,
        "answer_sql": "SELECT a.Name FROM Author a JOIN Author_Book ab ON a.idAuthor = ab.Author JOIN Book b ON ab.ISBN = b.ISBN WHERE b.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 580,
        "answer_sql": "SELECT a.Name FROM Author a JOIN Author_Book ab ON a.idAuthor = ab.Author JOIN Book b ON ab.ISBN = b.ISBN WHERE b.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 581,
        "answer_sql": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name LIKE '%Plato%';"
    },
    {
        "question_id": 582,
        "answer_sql": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name LIKE '%Plato%';"
    },
    {
        "question_id": 583,
        "answer_sql": "SELECT COUNT(*) FROM Books_Order INNER JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 584,
        "answer_sql": "SELECT COUNT(*) as NumberOfOrders FROM Books_Order INNER JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 585,
        "answer_sql": "SELECT o.IdOrder FROM Orders o JOIN Books_Order bo ON o.IdOrder = bo.IdOrder JOIN Book b ON bo.ISBN = b.ISBN WHERE b.Title IN ('Pride and Prejudice', 'The Little Prince') GROUP BY o.IdOrder;"
    },
    {
        "question_id": 586,
        "answer_sql": "SELECT Orders.IdOrder FROM Orders JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title IN ('Pride and Prejudice', 'The Little Prince') GROUP BY Orders.IdOrder HAVING COUNT(DISTINCT Book.Title) = 2;"
    },
    {
        "question_id": 587,
        "answer_sql": ""
    },
    {
        "question_id": 588,
        "answer_sql": ""
    },
    {
        "question_id": 589,
        "answer_sql": "SELECT Book.Title FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder JOIN Client ON Orders.IdClient = Client.IdClient WHERE Client.Name = 'Peter Doe' AND Client.Name != 'James Smith' GROUP BY Book.Title;"
    },
    {
        "question_id": 590,
        "answer_sql": "SELECT b.Title FROM Book b WHERE b.ISBN IN ( SELECT bo.ISBN FROM Books_Order bo INNER JOIN Orders o ON bo.IdOrder = o.IdOrder INNER JOIN Client c ON o.IdClient = c.IdClient WHERE c.Name = 'Peter Doe' ) AND b.ISBN IN ( SELECT bo.ISBN FROM Books_Order bo INNER JOIN Orders o ON bo.IdOrder = o.IdOrder INNER JOIN Client c ON o.IdClient = c.IdClient WHERE c.Name = 'James Smith' );"
    },
    {
        "question_id": 591,
        "answer_sql": "SELECT DISTINCT C.Name FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder JOIN Book B ON BO.ISBN = B.ISBN WHERE B.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 592,
        "answer_sql": "SELECT C.Name FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder JOIN Book B ON BO.ISBN = B.ISBN WHERE B.Title = 'Pride and Prejudice';"
    },
    {
        "question_id": 593,
        "answer_sql": "SELECT COUNT(*) as Total_Books FROM book;"
    },
    {
        "question_id": 594,
        "answer_sql": "SELECT Title FROM book ORDER BY Title ASC;"
    },
    {
        "question_id": 595,
        "answer_sql": "SELECT Title FROM book ORDER BY Pages DESC;"
    },
    {
        "question_id": 596,
        "answer_sql": "SELECT Type, Release FROM book;"
    },
    {
        "question_id": 597,
        "answer_sql": "SELECT Title, MIN(Chapters) as Min_Chapters, MAX(Chapters) as Max_Chapters FROM book;"
    },
    {
        "question_id": 598,
        "answer_sql": "SELECT Title FROM book WHERE Type <> 'Poet';"
    },
    {
        "question_id": 599,
        "answer_sql": "SELECT AVG(Rating) as Average_Rating FROM review;"
    },
    {
        "question_id": 600,
        "answer_sql": "SELECT b.Title, r.Rating FROM book b JOIN review r ON b.Book_ID = r.Book_ID;"
    },
    {
        "question_id": 601,
        "answer_sql": "SELECT b.Type, b.Title, MAX(b.Chapters) as Max_Chapters FROM book b JOIN review r ON b.Book_ID = r.Book_ID GROUP BY b.Type, b.Title ORDER BY Max_Chapters DESC LIMIT 1;"
    },
    {
        "question_id": 602,
        "answer_sql": "SELECT Rank FROM review JOIN book ON review.Book_ID = book.Book_ID WHERE book.Pages = (SELECT MIN(Pages) FROM book);"
    },
    {
        "question_id": 603,
        "answer_sql": "SELECT Title FROM book WHERE Book_ID = ( SELECT Book_ID FROM review ORDER BY Rank DESC LIMIT 1 );"
    },
    {
        "question_id": 604,
        "answer_sql": "SELECT AVG(review.Readers_in_Million) FROM book INNER JOIN review ON book.Book_ID = review.Book_ID WHERE book.Type = 'Novel';"
    },
    {
        "question_id": 605,
        "answer_sql": "SELECT Type, COUNT(*) as Number_of_Books FROM book GROUP BY Type;"
    },
    {
        "question_id": 606,
        "answer_sql": "SELECT Type FROM book GROUP BY Type ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 607,
        "answer_sql": "SELECT Type FROM book GROUP BY Type HAVING COUNT(Book_ID) >= 3;"
    },
    {
        "question_id": 608,
        "answer_sql": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID ORDER BY r.Rating ASC;"
    },
    {
        "question_id": 609,
        "answer_sql": "SELECT Title, Audio FROM book JOIN review ON book.Book_ID = review.Book_ID ORDER BY review.Readers_in_Million DESC;"
    },
    {
        "question_id": 610,
        "answer_sql": "SELECT COUNT(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review);"
    },
    {
        "question_id": 611,
        "answer_sql": "SELECT Type FROM book WHERE Book_ID IN ( SELECT Book_ID FROM review WHERE Chapters > 75 ) INTERSECT SELECT Type FROM book WHERE Book_ID IN ( SELECT Book_ID FROM review WHERE Chapters < 50 );"
    },
    {
        "question_id": 612,
        "answer_sql": "SELECT COUNT(DISTINCT Type ) AS NumberOfDistinctTypes FROM book;"
    },
    {
        "question_id": 613,
        "answer_sql": "SELECT b.Type, b.Title FROM book b LEFT JOIN review r ON b.Book_ID = r.Book_ID WHERE r.Book_ID IS NULL;"
    },
    {
        "question_id": 614,
        "answer_sql": "SELECT COUNT(*) as Number_of_Customers FROM customer;"
    },
    {
        "question_id": 615,
        "answer_sql": "SELECT COUNT(*) as Total_Customers FROM customer;"
    },
    {
        "question_id": 616,
        "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;"
    },
    {
        "question_id": 617,
        "answer_sql": "SELECT c.Name FROM customer c ORDER BY c.Level_of_Membership ASC;"
    },
    {
        "question_id": 618,
        "answer_sql": "SELECT Customer.Nationality, Customer.Card_Credit FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID;"
    },
    {
        "question_id": 619,
        "answer_sql": "SELECT c.Nationality, c.Card_Credit FROM customer c;"
    },
    {
        "question_id": 620,
        "answer_sql": "SELECT Name FROM customer WHERE Nationality IN ('England', 'Australia');"
    },
    {
        "question_id": 621,
        "answer_sql": "SELECT Name FROM customer WHERE Nationality IN ('England', 'Australia');"
    },
    {
        "question_id": 622,
        "answer_sql": "SELECT AVG(c.Card_Credit) FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE c.Level_of_Membership > 1;"
    },
    {
        "question_id": 623,
        "answer_sql": "SELECT AVG(c.Card_Credit) as Average_Card_Credit FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE c.Level_of_Membership > 1;"
    },
    {
        "question_id": 624,
        "answer_sql": "SELECT MAX(Card_Credit) as Highest_Card_Credit FROM customer;"
    },
    {
        "question_id": 625,
        "answer_sql": "SELECT c.Customer_ID, c.Name, c.Card_Credit, b.Branch_ID FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID JOIN branch b ON co.Branch_ID = b.Branch_ID WHERE c.Level_of_Membership = (SELECT MAX(Level_of_Membership) FROM customer)"
    },
    {
        "question_id": 626,
        "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality;"
    },
    {
        "question_id": 627,
        "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality;"
    },
    {
        "question_id": 628,
        "answer_sql": "SELECT Nationality, COUNT(*) as Count FROM customer GROUP BY Nationality ORDER BY Count DESC LIMIT 1;"
    },
    {
        "question_id": 629,
        "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality ORDER BY Number_of_Customers DESC LIMIT 1;"
    },
    {
        "question_id": 630,
        "answer_sql": "SELECT DISTINCT Nationality FROM customer WHERE Card_Credit < 50 INTERSECT SELECT DISTINCT Nationality FROM customer WHERE Card_Credit > 75;"
    },
    {
        "question_id": 631,
        "answer_sql": "SELECT c.Nationality FROM customer c WHERE c.Card_Credit > 50 AND c.Card_Credit < 75;"
    },
    {
        "question_id": 632,
        "answer_sql": "SELECT c.Name, co.Dish_Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID;"
    },
    {
        "question_id": 633,
        "answer_sql": "SELECT c.Name, co.Dish_Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID;"
    },
    {
        "question_id": 634,
        "answer_sql": "SELECT c.Name, co.Dish_Name, SUM(co.Quantity) as Total_Quantity FROM customer_order co JOIN customer c ON co.Customer_ID = c.Customer_ID GROUP BY co.Customer_ID, co.Dish_Name ORDER BY Total_Quantity DESC;"
    },
    {
        "question_id": 635,
        "answer_sql": "SELECT c.Name, co.Dish_Name, SUM(co.Quantity) as Total_Quantity FROM customer_order as co JOIN customer as c ON co.Customer_ID = c.Customer_ID GROUP BY co.Customer_ID, co.Dish_Name ORDER BY Total_Quantity DESC;"
    },
    {
        "question_id": 636,
        "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantities_Ordered FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name;"
    },
    {
        "question_id": 637,
        "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name;"
    },
    {
        "question_id": 638,
        "answer_sql": "SELECT c.Customer_ID, c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Customer_ID, c.Name HAVING SUM(co.Quantity) > 1;"
    },
    {
        "question_id": 639,
        "answer_sql": "SELECT c.Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name HAVING SUM(co.Quantity) > 1;"
    },
    {
        "question_id": 640,
        "answer_sql": "SELECT DISTINCT b.Manager FROM branch b INNER JOIN customer_order co ON b.Branch_ID = co.Branch_ID;"
    },
    {
        "question_id": 641,
        "answer_sql": "SELECT DISTINCT Manager FROM branch;"
    },
    {
        "question_id": 642,
        "answer_sql": "SELECT c.Name FROM customer c WHERE NOT EXISTS ( SELECT 1 FROM customer_order co WHERE c.Customer_ID = co.Customer_ID );"
    },
    {
        "question_id": 643,
        "answer_sql": "SELECT c.Name FROM customer c LEFT JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE co.Customer_ID IS NULL;"
    },
    {
        "question_id": 644,
        "answer_sql": "SELECT COUNT(*) FROM club_leader;"
    },
    {
        "question_id": 645,
        "answer_sql": "SELECT m.Name FROM member m ORDER BY m.Age ASC;"
    },
    {
        "question_id": 646,
        "answer_sql": "SELECT member.Name, member.Nationality FROM member INNER JOIN club_leader ON member.Member_ID = club_leader.Member_ID INNER JOIN club ON club_leader.Club_ID = club.Club_ID;"
    },
    {
        "question_id": 647,
        "answer_sql": "SELECT member.Name FROM member JOIN club_leader ON member.Member_ID = club_leader.Member_ID JOIN club ON club.Club_ID = club_leader.Club_ID WHERE member.Nationality != 'England' AND club.Overall_Ranking > 100;"
    },
    {
        "question_id": 648,
        "answer_sql": "SELECT m.Name FROM member m WHERE m.Age IN (19, 20);"
    },
    {
        "question_id": 649,
        "answer_sql": "SELECT Name FROM member WHERE Age = (SELECT MIN(Age) FROM member);"
    },
    {
        "question_id": 650,
        "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Members FROM member GROUP BY Nationality;"
    },
    {
        "question_id": 651,
        "answer_sql": "SELECT Nationality, COUNT(*) as Count FROM member GROUP BY Nationality ORDER BY Count DESC LIMIT 1;"
    },
    {
        "question_id": 652,
        "answer_sql": "SELECT m.Nationality FROM member m GROUP BY m.Nationality HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 653,
        "answer_sql": "SELECT m.Name AS Club_Leader_Name, c.Club_Name AS Club_Name FROM club_leader AS cl JOIN club AS c ON cl.Club_ID = c.Club_ID JOIN member AS m ON cl.Member_ID = m.Member_ID;"
    },
    {
        "question_id": 654,
        "answer_sql": "SELECT m.Name FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID WHERE c.Overall_Ranking > 100;"
    },
    {
        "question_id": 655,
        "answer_sql": ""
    },
    {
        "question_id": 656,
        "answer_sql": "SELECT m.Name FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID WHERE c.Club_Name = 'Houston';"
    },
    {
        "question_id": 657,
        "answer_sql": "SELECT m.Name FROM member m WHERE m.Member_ID NOT IN ( SELECT cl.Member_ID FROM club_leader cl );"
    },
    {
        "question_id": 658,
        "answer_sql": ""
    },
    {
        "question_id": 659,
        "answer_sql": "SELECT AVG(member.Age) as Average_Age FROM member INNER JOIN club_leader ON member.Member_ID = club_leader.Member_ID;"
    },
    {
        "question_id": 660,
        "answer_sql": "SELECT Club_Name FROM club WHERE Club_Name LIKE '%state%';"
    },
    {
        "question_id": 661,
        "answer_sql": "SELECT Collection_Subsets.Collection_Subset_Name FROM Collection_Subset_Members INNER JOIN Collection_Subsets ON Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID;"
    },
    {
        "question_id": 662,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subset_Members INNER JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID;"
    },
    {
        "question_id": 663,
        "answer_sql": "SELECT * FROM Collection_Subsets WHERE Collection_Subset_Name = 'Top collection';"
    },
    {
        "question_id": 664,
        "answer_sql": ""
    },
    {
        "question_id": 665,
        "answer_sql": "SELECT Document_Objects.Owner, Document_Subsets.Document_Subset_Name FROM Document_Subset_Members INNER JOIN Document_Objects ON Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID INNER JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID;"
    },
    {
        "question_id": 666,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets WHERE Document_Subset_ID IN ( SELECT Document_Subset_ID FROM Document_Subset_Members WHERE Related_Document_Object_ID IN ( SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Object_ID FROM Collection_Subset_Members WHERE Collection_ID = [Collection_ID] ) ) );"
    },
    {
        "question_id": 667,
        "answer_sql": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 668,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_Name, Document_Subsets.Document_Subset_Details FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID WHERE Document_Subsets.Document_Subset_Name = 'Best for 2000';"
    },
    {
        "question_id": 669,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects;"
    },
    {
        "question_id": 670,
        "answer_sql": ""
    },
    {
        "question_id": 671,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Owner = 'Marlin';"
    },
    {
        "question_id": 672,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 673,
        "answer_sql": "SELECT Owner FROM Document_Objects WHERE Description = 'Braeden Collection';"
    },
    {
        "question_id": 674,
        "answer_sql": ""
    },
    {
        "question_id": 675,
        "answer_sql": "SELECT Documents_in_Collections.Document_Object_ID, Documents_in_Collections.Collection_ID, Document_Objects.Owner FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Owner = 'Marlin';"
    },
    {
        "question_id": 676,
        "answer_sql": ""
    },
    {
        "question_id": 677,
        "answer_sql": "SELECT DISTINCT Description FROM Document_Objects WHERE Parent_Document_Object_ID IN (SELECT Document_Object_ID FROM Documents_in_Collections);"
    },
    {
        "question_id": 678,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, Document_Objects.Description FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID;"
    },
    {
        "question_id": 679,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 680,
        "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"
    },
    {
        "question_id": 681,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Document_Object_ID NOT IN ( SELECT Document_Objects.Parent_Document_Object_ID FROM Document_Objects ) GROUP BY Document_Objects.Document_Object_ID;"
    },
    {
        "question_id": 682,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE NOT EXISTS ( SELECT 1 FROM Document_Objects P WHERE P.Parent_Document_Object_ID = D.Document_Object_ID );"
    },
    {
        "question_id": 683,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(*) as Child_Documents FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID;"
    },
    {
        "question_id": 684,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(Documents_in_Collections.Document_Object_ID) AS Child_Documents FROM Document_Objects LEFT JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID;"
    },
    {
        "question_id": 685,
        "answer_sql": "SELECT Collection_Name FROM Collections;"
    },
    {
        "question_id": 686,
        "answer_sql": "SELECT DISTINCT c.Collection_Name FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Subset_Members dsm ON di.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID;"
    },
    {
        "question_id": 687,
        "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Best';"
    },
    {
        "question_id": 688,
        "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Best';"
    },
    {
        "question_id": 689,
        "answer_sql": "SELECT Parent_Collection_ID FROM Collections WHERE Collection_Name = 'Nice';"
    },
    {
        "question_id": 690,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections did ON c.Collection_ID = did.Collection_ID JOIN Collections c2 ON did.Collection_ID = c2.Parent_Collection_ID WHERE c2.Collection_Name = 'Nice';"
    },
    {
        "question_id": 691,
        "answer_sql": "SELECT Collection_Name FROM Collections WHERE Collection_ID NOT IN ( SELECT Parent_Collection_ID FROM Collections )"
    },
    {
        "question_id": 692,
        "answer_sql": ""
    },
    {
        "question_id": 693,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Object_ID IN ( SELECT Document_Objects.Document_Object_ID FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID HAVING COUNT(*) > 1 );"
    },
    {
        "question_id": 694,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects WHERE Document_Objects.Document_Object_ID IN ( SELECT Document_Objects.Document_Object_ID FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID HAVING COUNT(*) > 1 );"
    },
    {
        "question_id": 695,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best');"
    },
    {
        "question_id": 696,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best');"
    },
    {
        "question_id": 697,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Document_Objects.Owner = 'Ransom';"
    },
    {
        "question_id": 698,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Ransom';"
    },
    {
        "question_id": 699,
        "answer_sql": ""
    },
    {
        "question_id": 700,
        "answer_sql": ""
    },
    {
        "question_id": 701,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(*) as Child_Count FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID ORDER BY Child_Count DESC LIMIT 1;"
    },
    {
        "question_id": 702,
        "answer_sql": "SELECT Document_Object_ID, COUNT(*) as Number_of_Children FROM Documents_in_Collections GROUP BY Document_Object_ID;"
    },
    {
        "question_id": 703,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(*) as Number_of_Related_Documents FROM Document_Subset_Members JOIN Document_Objects ON Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID ORDER BY Number_of_Related_Documents LIMIT 1;"
    },
    {
        "question_id": 704,
        "answer_sql": "SELECT Document_Object_ID FROM ( SELECT Document_Object_ID, COUNT(*) as document_count FROM Documents_in_Collections GROUP BY Document_Object_ID ) as document_counts WHERE document_count = ( SELECT MIN(document_count) FROM ( SELECT COUNT(*) as document_count FROM Documents_in_Collections GROUP BY Document_Object_ID ) as document_counts );"
    },
    {
        "question_id": 705,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(*) as Number_of_Related_Documents FROM Document_Subset_Members JOIN Document_Objects ON Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID HAVING COUNT(*) BETWEEN 2 AND 4;"
    },
    {
        "question_id": 706,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(Document_Subset_Members.Related_Document_Object_ID) as Related_Documents_Count FROM Document_Objects LEFT JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID GROUP BY Document_Objects.Document_Object_ID HAVING COUNT(Document_Subset_Members.Related_Document_Object_ID) BETWEEN 2 AND 4"
    },
    {
        "question_id": 707,
        "answer_sql": "SELECT D.Owner FROM Document_Objects D WHERE D.Owner IN ( SELECT D.Owner FROM Document_Objects D WHERE D.Parent_Document_Object_ID IN ( SELECT D.Document_Object_ID FROM Document_Objects D WHERE D.Owner = 'Braeden' ) );"
    },
    {
        "question_id": 708,
        "answer_sql": "SELECT DISTINCT Owner FROM Document_Objects WHERE Document_Objects.Owner = 'Braeden';"
    },
    {
        "question_id": 709,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subset_Members JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID JOIN Document_Subsets ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID WHERE Document_Objects.Owner = 'Braeden';"
    },
    {
        "question_id": 710,
        "answer_sql": "SELECT Document_Subset_Name FROM Document_Subset_Members JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID JOIN Document_Subsets ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID WHERE Document_Objects.Owner = 'Braeden';"
    },
    {
        "question_id": 711,
        "answer_sql": ""
    },
    {
        "question_id": 712,
        "answer_sql": ""
    },
    {
        "question_id": 713,
        "answer_sql": ""
    },
    {
        "question_id": 714,
        "answer_sql": ""
    },
    {
        "question_id": 715,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000');"
    },
    {
        "question_id": 716,
        "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000');"
    },
    {
        "question_id": 717,
        "answer_sql": "SELECT Document_Subsets.Document_Subset_Name, Document_Subset_Members.Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subset_Members.Document_Object_ID IN ( SELECT Document_Objects.Document_Object_ID FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID );"
    },
    {
        "question_id": 718,
        "answer_sql": "SELECT Document_Subset_Members.Document_Object_ID, Document_Subsets.Document_Subset_Name, Document_Subset_Members.Related_Document_Object_ID FROM Document_Subset_Members INNER JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID ORDER BY Document_Subset_Members.Document_Object_ID;"
    },
    {
        "question_id": 719,
        "answer_sql": "SELECT Collections.Collection_Name FROM Collections INNER JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID INNER JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Owner = 'Ransom';"
    },
    {
        "question_id": 720,
        "answer_sql": "SELECT Collections.Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Objects ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID WHERE Document_Objects.Owner = 'Ransom';"
    },
    {
        "question_id": 721,
        "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(Collections.Collection_ID) as Collection_Count FROM Document_Objects INNER JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID INNER JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID GROUP BY Document_Objects.Document_Object_ID;"
    },
    {
        "question_id": 722,
        "answer_sql": "SELECT COUNT(*) as count_of_collections FROM Documents_in_Collections WHERE Document_Object_ID = [Document_Object_ID];"
    },
    {
        "question_id": 723,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best');"
    },
    {
        "question_id": 724,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best');"
    },
    {
        "question_id": 725,
        "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collections C ON DC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Best';"
    },
    {
        "question_id": 726,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best');"
    },
    {
        "question_id": 727,
        "answer_sql": "SELECT C.Collection_Name, C.Collection_ID, COUNT(D.Document_Object_ID) as Document_Count FROM Collections C JOIN Documents_in_Collections D ON C.Collection_ID = D.Collection_ID GROUP BY C.Collection_Name, C.Collection_ID ORDER BY Document_Count DESC LIMIT 1;"
    },
    {
        "question_id": 728,
        "answer_sql": ""
    },
    {
        "question_id": 729,
        "answer_sql": ""
    },
    {
        "question_id": 730,
        "answer_sql": "SELECT DISTINCT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' );"
    },
    {
        "question_id": 731,
        "answer_sql": ""
    },
    {
        "question_id": 732,
        "answer_sql": "SELECT DISTINCT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' ) AND Document_Object_ID NOT IN ( SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best' ) );"
    },
    {
        "question_id": 733,
        "answer_sql": ""
    },
    {
        "question_id": 734,
        "answer_sql": "SELECT DISTINCT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000' );"
    },
    {
        "question_id": 735,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections did ON c.Collection_ID = did.Collection_ID WHERE c.Collection_Name = 'Best';"
    },
    {
        "question_id": 736,
        "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections did ON c.Collection_ID = did.Collection_ID WHERE did.Collection_ID = ( SELECT c.Collection_ID FROM Collections c WHERE c.Collection_Name = 'Best' );"
    },
    {
        "question_id": 737,
        "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best');"
    },
    {
        "question_id": 738,
        "answer_sql": "SELECT COUNT(*) FROM Collection_Subset_Members WHERE Collection_Subset_ID IN ( SELECT Collection_Subset_ID FROM Collection_Subsets WHERE Collection_Subset_Name = 'Best' );"
    },
    {
        "question_id": 739,
        "answer_sql": ""
    },
    {
        "question_id": 740,
        "answer_sql": "SELECT Collection_Subset_ID FROM Collection_Subset_Members WHERE Collection_ID = ( SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best' );"
    },
    {
        "question_id": 741,
        "answer_sql": "SELECT COUNT(*) FROM songs WHERE name LIKE '%Love%';"
    },
    {
        "question_id": 742,
        "answer_sql": "SELECT s.name FROM songs s JOIN performance_score ps ON s.id = ps.songs_id ORDER BY s.name ASC;"
    },
    {
        "question_id": 743,
        "answer_sql": "SELECT songs.name, songs.language FROM songs JOIN performance_score ON songs.id = performance_score.songs_id GROUP BY songs.name, songs.language;"
    },
    {
        "question_id": 744,
        "answer_sql": "SELECT MAX(voice_sound_quality) AS max_voice_sound_quality, MIN(voice_sound_quality) AS min_voice_sound_quality FROM performance_score;"
    },
    {
        "question_id": 745,
        "answer_sql": "SELECT voice_sound_quality , rhythm_tempo , stage_presence FROM performance_score INNER JOIN participants ON performance_score . participant_id = participants . id INNER JOIN songs ON performance_score . songs_id = songs . id WHERE participants . name = 'Freeway';"
    },
    {
        "question_id": 746,
        "answer_sql": "SELECT s.id, s.language, s.original_artist FROM songs s WHERE s.name != 'Love'"
    },
    {
        "question_id": 747,
        "answer_sql": "SELECT name, original_artist FROM songs WHERE english_translation = 'All the streets of love';"
    },
    {
        "question_id": 748,
        "answer_sql": "SELECT DISTINCT performance_score.stage_presence FROM performance_score INNER JOIN songs ON performance_score.songs_id = songs.id WHERE songs.language = 'English';"
    },
    {
        "question_id": 749,
        "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON ps.songs_id = s.id GROUP BY p.id, p.name HAVING COUNT(DISTINCT s.id) >= 2;"
    },
    {
        "question_id": 750,
        "answer_sql": "SELECT p.id, p.name, p.popularity FROM participants p JOIN ( SELECT participant_id, COUNT(*) as song_count FROM performance_score GROUP BY participant_id ) ps ON p.id = ps.participant_id ORDER BY ps.song_count DESC;"
    },
    {
        "question_id": 751,
        "answer_sql": "SELECT participants.id, participants.name FROM participants INNER JOIN performance_score ON participants.id = performance_score.participant_id WHERE performance_score.voice_sound_quality = 5 OR performance_score.rhythm_tempo = 5;"
    },
    {
        "question_id": 752,
        "answer_sql": ""
    },
    {
        "question_id": 753,
        "answer_sql": "SELECT s.id, s.name FROM songs s JOIN ( SELECT p.songs_id, COUNT(*) as num_participants FROM performance_score p GROUP BY p.songs_id ORDER BY num_participants DESC LIMIT 1 ) p ON s.id = p.songs_id;"
    },
    {
        "question_id": 754,
        "answer_sql": "SELECT COUNT(*) FROM performance_score WHERE stage_presence < 7 OR stage_presence > 9;"
    },
    {
        "question_id": 755,
        "answer_sql": "SELECT COUNT(*) FROM songs s LEFT JOIN performance_score ps ON s.id = ps.songs_id WHERE ps.songs_id IS NULL;"
    },
    {
        "question_id": 756,
        "answer_sql": "SELECT s.language, AVG(ps.rhythm_tempo) as average_rhythm_score FROM performance_score ps JOIN songs s ON ps.songs_id = s.id GROUP BY s.language;"
    },
    {
        "question_id": 757,
        "answer_sql": "SELECT DISTINCT participants.name FROM participants INNER JOIN performance_score ON participants.id = performance_score.participant_id INNER JOIN songs ON songs.id = performance_score.songs_id WHERE songs.language = 'English';"
    },
    {
        "question_id": 758,
        "answer_sql": "SELECT p.name, p.popularity FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON ps.songs_id = s.id WHERE s.language = 'Croatian' AND s.english_translation IS NOT NULL;"
    },
    {
        "question_id": 759,
        "answer_sql": "SELECT name FROM songs WHERE name LIKE '%Is%';"
    },
    {
        "question_id": 760,
        "answer_sql": "SELECT p.name, s.original_artist, ps.voice_sound_quality, ps.rhythm_tempo FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON ps.songs_id = s.id WHERE ps.rhythm_tempo > 5 ORDER BY ps.voice_sound_quality DESC;"
    },
    {
        "question_id": 761,
        "answer_sql": "SELECT COUNT(*) as total_cities FROM City;"
    },
    {
        "question_id": 762,
        "answer_sql": "SELECT COUNT(*) FROM City;"
    },
    {
        "question_id": 763,
        "answer_sql": "SELECT DISTINCT state FROM City;"
    },
    {
        "question_id": 764,
        "answer_sql": "SELECT DISTINCT state FROM City;"
    },
    {
        "question_id": 765,
        "answer_sql": "SELECT COUNT(DISTINCT country) as number_of_countries FROM City;"
    },
    {
        "question_id": 766,
        "answer_sql": "SELECT COUNT(*) as NumberOfCountries FROM City WHERE country IS NOT NULL;"
    },
    {
        "question_id": 767,
        "answer_sql": "SELECT City.city_name, City.city_code, City.state, City.country FROM City INNER JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code;"
    },
    {
        "question_id": 768,
        "answer_sql": "SELECT city_name, city_code, state, country FROM City;"
    },
    {
        "question_id": 769,
        "answer_sql": ""
    },
    {
        "question_id": 770,
        "answer_sql": ""
    },
    {
        "question_id": 771,
        "answer_sql": "SELECT City.city_name FROM City WHERE City.state = 'PA';"
    },
    {
        "question_id": 772,
        "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.city2_code IN (SELECT city_code FROM City WHERE state = 'PA');"
    },
    {
        "question_id": 773,
        "answer_sql": "SELECT COUNT(*) as NumberOfCitiesInCanada FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 774,
        "answer_sql": "SELECT COUNT(*) FROM City WHERE country = 'Canada';"
    },
    {
        "question_id": 775,
        "answer_sql": "SELECT c.city_name FROM City c WHERE c.country = 'USA' ORDER BY c.latitude;"
    },
    {
        "question_id": 776,
        "answer_sql": "SELECT city_name FROM City WHERE country = 'USA' ORDER BY latitude;"
    },
    {
        "question_id": 777,
        "answer_sql": "SELECT c.state, COUNT(c.city_code) as number_of_cities FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.state;"
    },
    {
        "question_id": 778,
        "answer_sql": "SELECT state, COUNT(city_code) as number_of_cities FROM City GROUP BY state;"
    },
    {
        "question_id": 779,
        "answer_sql": "SELECT c.country, COUNT(*) as number_of_cities FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.country;"
    },
    {
        "question_id": 780,
        "answer_sql": "SELECT c.country, COUNT(c.city_code) as num_cities FROM City c GROUP BY c.country;"
    },
    {
        "question_id": 781,
        "answer_sql": "SELECT C.state FROM City C JOIN ( SELECT city1_code, COUNT(*) as city_count FROM Direct_distance GROUP BY city1_code HAVING COUNT(*) >= 2 ) D ON C.city_code = D.city1_code GROUP BY C.state HAVING COUNT(*) > 0;"
    },
    {
        "question_id": 782,
        "answer_sql": "SELECT state FROM City GROUP BY state HAVING COUNT(city_code) >= 2;"
    },
    {
        "question_id": 783,
        "answer_sql": "SELECT state, COUNT(city_code) as number_of_cities FROM City GROUP BY state ORDER BY number_of_cities DESC LIMIT 1;"
    },
    {
        "question_id": 784,
        "answer_sql": "SELECT city_name, state, COUNT(*) as city_count FROM City GROUP BY state ORDER BY city_count DESC LIMIT 1;"
    },
    {
        "question_id": 785,
        "answer_sql": "SELECT c.country, COUNT(c.city_code) as city_count FROM City c GROUP BY c.country ORDER BY city_count LIMIT 1;"
    },
    {
        "question_id": 786,
        "answer_sql": "SELECT country FROM City GROUP BY country ORDER BY COUNT(city_code) LIMIT 1;"
    },
    {
        "question_id": 787,
        "answer_sql": "SELECT Fname, LName FROM Student INNER JOIN City ON Student.city_code = City.city_code WHERE City.state = 'MD';"
    },
    {
        "question_id": 788,
        "answer_sql": "SELECT S.Fname, S.LName FROM Student S INNER JOIN City C ON S.city_code = C.city_code WHERE C.state = 'MD';"
    },
    {
        "question_id": 789,
        "answer_sql": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country = 'China');"
    },
    {
        "question_id": 790,
        "answer_sql": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country = 'China');"
    },
    {
        "question_id": 791,
        "answer_sql": "SELECT Fname, Major FROM Student WHERE city_code = (SELECT city_code FROM City WHERE city_name = 'Baltimore');"
    },
    {
        "question_id": 792,
        "answer_sql": "SELECT Fname, Major FROM Student WHERE city_code = (SELECT city_code FROM City WHERE city_name = 'Baltimore');"
    },
    {
        "question_id": 793,
        "answer_sql": "SELECT c.country, COUNT(s.StuID) as Number_of_Students FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.country;"
    },
    {
        "question_id": 794,
        "answer_sql": "SELECT c.country, COUNT(s.StuID) as Number_of_Students FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.country;"
    },
    {
        "question_id": 795,
        "answer_sql": "SELECT C.city_name, COUNT(S.StuID) as Number_of_Students FROM Student S JOIN City C ON S.city_code = C.city_code GROUP BY C.city_name;"
    },
    {
        "question_id": 796,
        "answer_sql": "SELECT C.city_name, COUNT(S.StuID) as Number_of_Students FROM Student S JOIN City C ON S.city_code = C.city_code GROUP BY S.city_code;"
    },
    {
        "question_id": 797,
        "answer_sql": "SELECT c.state, COUNT(s.StuID) as student_count FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.state ORDER BY student_count DESC LIMIT 1;"
    },
    {
        "question_id": 798,
        "answer_sql": ""
    },
    {
        "question_id": 799,
        "answer_sql": "SELECT c.country, COUNT(s.StuID) as student_count FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.country ORDER BY student_count LIMIT 1;"
    },
    {
        "question_id": 800,
        "answer_sql": "SELECT c.country, COUNT(s.StuID) as student_count FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.country ORDER BY student_count LIMIT 1;"
    },
    {
        "question_id": 801,
        "answer_sql": "SELECT c.city_name FROM City c WHERE c.city_code IN ( SELECT d.city1_code FROM Direct_distance d GROUP BY d.city1_code HAVING COUNT(*) >= 3 )"
    },
    {
        "question_id": 802,
        "answer_sql": "SELECT City.city_name FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_name HAVING COUNT(Student.StuID) >= 3;"
    },
    {
        "question_id": 803,
        "answer_sql": "SELECT state FROM ( SELECT city.state, COUNT(student.StuID) as student_count FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY city.state ) as subquery WHERE student_count > 5;"
    },
    {
        "question_id": 804,
        "answer_sql": "SELECT c.state, COUNT(s.StuID) as student_count FROM Student s JOIN City c ON s.city_code = c.city_code GROUP BY c.state HAVING COUNT(s.StuID) > 5;"
    },
    {
        "question_id": 805,
        "answer_sql": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');"
    },
    {
        "question_id": 806,
        "answer_sql": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');"
    },
    {
        "question_id": 807,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN ( SELECT city1_code FROM Direct_distance WHERE city2_code IN ( SELECT city_code FROM City WHERE state = 'PA' ) );"
    },
    {
        "question_id": 808,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN (SELECT city_code FROM City WHERE state = 'PA');"
    },
    {
        "question_id": 809,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');"
    },
    {
        "question_id": 810,
        "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');"
    },
    {
        "question_id": 811,
        "answer_sql": "SELECT Direct_distance.distance FROM Direct_distance WHERE city1_code = 'BAL' AND city2_code = 'CHI';"
    },
    {
        "question_id": 812,
        "answer_sql": "SELECT Direct_distance.distance FROM Direct_distance WHERE Direct_distance.city1_code = 'BAL' AND Direct_distance.city2_code = 'CHI';"
    },
    {
        "question_id": 813,
        "answer_sql": "SELECT Direct_distance.distance FROM Direct_distance INNER JOIN City AS Boston ON Direct_distance.city1_code = Boston.city_code INNER JOIN City AS Newark ON Direct_distance.city2_code = Newark.city_code WHERE Boston.city_name = 'Boston' AND Newark.city_name = 'Newark';"
    },
    {
        "question_id": 814,
        "answer_sql": ""
    },
    {
        "question_id": 815,
        "answer_sql": "SELECT AVG(distance) as Average_Distance, MIN(distance) as Minimum_Distance, MAX(distance) as Maximum_Distance FROM Direct_distance;"
    },
    {
        "question_id": 816,
        "answer_sql": "SELECT AVG(distance) as average_distance, MIN(distance) as minimum_distance, MAX(distance) as maximum_distance FROM Direct_distance WHERE city1_code = 'city1' AND city2_code = 'city2';"
    },
    {
        "question_id": 817,
        "answer_sql": "SELECT city1_code, city2_code, SUM(distance) as total_distance FROM Direct_distance GROUP BY city1_code, city2_code ORDER BY total_distance DESC LIMIT 1;"
    },
    {
        "question_id": 818,
        "answer_sql": "SELECT City.city_code FROM Direct_distance INNER JOIN City ON Direct_distance.city1_code = City.city_code WHERE Direct_distance.distance = ( SELECT MAX(Direct_distance.distance) FROM Direct_distance );"
    },
    {
        "question_id": 819,
        "answer_sql": "SELECT city1_code, city2_code FROM Direct_distance WHERE distance > ( SELECT AVG(distance) FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code WHERE city1_code IN ( SELECT city_code FROM City WHERE city_code IN ( SELECT city1_code FROM Direct_distance GROUP BY city1_code HAVING COUNT(city2_code) > 1 ) ) );"
    },
    {
        "question_id": 820,
        "answer_sql": "SELECT city_code FROM City WHERE city_code IN ( SELECT city1_code FROM Direct_distance GROUP BY city1_code HAVING AVG(distance) < ( SELECT AVG(distance) FROM Direct_distance ) );"
    },
    {
        "question_id": 821,
        "answer_sql": "SELECT city1_code, city2_code FROM Direct_distance WHERE distance < 1000;"
    },
    {
        "question_id": 822,
        "answer_sql": "SELECT City.city_code FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.distance < 1000;"
    },
    {
        "question_id": 823,
        "answer_sql": "SELECT SUM(d1.distance) as total_distance FROM Direct_distance d1 JOIN City c1 ON d1.city1_code = c1.city_code JOIN City c2 ON d1.city2_code = c2.city_code WHERE c1.city_name = 'BAL';"
    },
    {
        "question_id": 824,
        "answer_sql": "SELECT SUM(d.distance) as Total_Distance FROM Direct_distance as d JOIN City as c1 ON d.city1_code = c1.city_code JOIN City as c2 ON d.city2_code = c2.city_code WHERE c1.city_name = 'BAL';"
    },
    {
        "question_id": 825,
        "answer_sql": "SELECT AVG(d1.distance) as average_distance FROM Direct_distance d1 JOIN City c1 ON d1.city1_code = c1.city_code JOIN City c2 ON d1.city2_code = c2.city_code WHERE c1.city_name = 'Boston';"
    },
    {
        "question_id": 826,
        "answer_sql": "SELECT AVG(d.distance) as Average_Distance FROM Direct_distance d JOIN City c1 ON d.city1_code = c1.city_code JOIN City c2 ON d.city2_code = c2.city_code WHERE c1.city_name = 'Boston' AND c2.city_name != 'Boston';"
    },
    {
        "question_id": 827,
        "answer_sql": "SELECT city_name FROM City WHERE city_code = (SELECT city_code FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Chicago') ORDER BY distance ASC LIMIT 1);"
    },
    {
        "question_id": 828,
        "answer_sql": ""
    },
    {
        "question_id": 829,
        "answer_sql": "SELECT city_name FROM City WHERE city_code = (SELECT city_code FROM Direct_distance WHERE distance = (SELECT MAX(distance) FROM Direct_distance WHERE city2_code = 'BOS'));"
    },
    {
        "question_id": 830,
        "answer_sql": "SELECT City.city_name FROM City WHERE city_code = ( SELECT city2_code FROM Direct_distance WHERE city1_code = ( SELECT city_code FROM City WHERE city_name = 'Boston' ) ORDER BY distance DESC LIMIT 1 );"
    },
    {
        "question_id": 831,
        "answer_sql": "SELECT c1.city_code, SUM(d.distance) as total_distance FROM City c1 JOIN Direct_distance d ON c1.city_code = d.city1_code GROUP BY c1.city_code;"
    },
    {
        "question_id": 832,
        "answer_sql": "SELECT City.city_code, SUM(Direct_distance.distance) as total_distance FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY City.city_code;"
    },
    {
        "question_id": 833,
        "answer_sql": "SELECT C.city_name, AVG(D.distance) as average_distance FROM City C JOIN Direct_distance D ON C.city_code = D.city1_code GROUP BY C.city_name;"
    },
    {
        "question_id": 834,
        "answer_sql": "SELECT C.city_name, AVG(D.distance) as average_distance FROM City C JOIN Direct_distance D ON C.city_code = D.city1_code GROUP BY C.city_name;"
    },
    {
        "question_id": 835,
        "answer_sql": "SELECT City1.city_name, City2.city_name, Direct_distance.distance FROM Student JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code JOIN City AS City1 ON City1.city_code = Direct_distance.city1_code JOIN City AS City2 ON City2.city_code = Direct_distance.city2_code;"
    },
    {
        "question_id": 836,
        "answer_sql": "SELECT Direct_distance.distance FROM Student JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code WHERE Student.Fname = 'Linda' AND Student.LName = 'Smith' AND Direct_distance.city2_code IN ( SELECT City.city_code FROM Student JOIN City ON Student.city_code = City.city_code WHERE Student.Fname = 'Tracy' AND Student.LName = 'Kim' );"
    },
    {
        "question_id": 837,
        "answer_sql": "SELECT Fname, LName FROM Student WHERE StuID = ( SELECT StuID FROM Student WHERE Fname = 'Linda' AND LName = 'Smith' ORDER BY age DESC LIMIT 1 );"
    },
    {
        "question_id": 838,
        "answer_sql": "SELECT S.Fname, S.LName FROM Student S WHERE S.Age = ( SELECT MAX(S2.Age) FROM Student S2 WHERE S2.Fname = 'Linda' );"
    },
    {
        "question_id": 839,
        "answer_sql": "SELECT state FROM City WHERE city_code IN (SELECT city_code FROM Student WHERE Fname = 'Linda');"
    },
    {
        "question_id": 840,
        "answer_sql": "SELECT c.state FROM Student s JOIN City c ON s.city_code = c.city_code WHERE s.Fname = 'Linda';"
    },
    {
        "question_id": 841,
        "answer_sql": "SELECT * FROM Sailors WHERE age > 30;"
    },
    {
        "question_id": 842,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.age > 30;"
    },
    {
        "question_id": 843,
        "answer_sql": "SELECT name, age FROM Sailors WHERE age < 30;"
    },
    {
        "question_id": 844,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors WHERE Sailors.age < 30;"
    },
    {
        "question_id": 845,
        "answer_sql": "SELECT Boats.name FROM Boats INNER JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid = (SELECT sid FROM Sailors WHERE sid = 1);"
    },
    {
        "question_id": 846,
        "answer_sql": "SELECT bid FROM Reserves WHERE sid = 1;"
    },
    {
        "question_id": 847,
        "answer_sql": "SELECT Sailors.name FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;"
    },
    {
        "question_id": 848,
        "answer_sql": "SELECT Sailors.name FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;"
    },
    {
        "question_id": 849,
        "answer_sql": "SELECT DISTINCT Reserves.bid FROM Reserves INNER JOIN Sailors ON Reserves.sid = Sailors.sid INNER JOIN Boats ON Reserves.bid = Boats.bid;"
    },
    {
        "question_id": 850,
        "answer_sql": "SELECT DISTINCT Boats.bid FROM Reserves INNER JOIN Boats ON Reserves.bid = Boats.bid;"
    },
    {
        "question_id": 851,
        "answer_sql": "SELECT name FROM Sailors WHERE name LIKE '%e%';"
    },
    {
        "question_id": 852,
        "answer_sql": "SELECT name FROM Sailors WHERE name LIKE '%e%';"
    },
    {
        "question_id": 853,
        "answer_sql": ""
    },
    {
        "question_id": 854,
        "answer_sql": "SELECT DISTINCT sid FROM Sailors WHERE sid NOT IN ( SELECT sid FROM Sailors WHERE age = ( SELECT MIN(age) FROM Sailors ) );"
    },
    {
        "question_id": 855,
        "answer_sql": "SELECT DISTINCT Sailors.name FROM Sailors WHERE Sailors.age > (SELECT MAX(Sailors.age) FROM Sailors WHERE Sailors.rating > 7);"
    },
    {
        "question_id": 856,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.age > (SELECT Sailors.age FROM Sailors WHERE Sailors.rating > 7)"
    },
    {
        "question_id": 857,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors WHERE Sailors.sid IN ( SELECT Reserves.sid FROM Reserves GROUP BY Reserves.sid HAVING COUNT(Reserves.bid) >= 1 );"
    },
    {
        "question_id": 858,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid HAVING COUNT(Reserves.bid) > 0;"
    },
    {
        "question_id": 859,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid, Sailors.name HAVING COUNT(Reserves.bid) > 1;"
    },
    {
        "question_id": 860,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name HAVING COUNT(Reserves.bid) >= 2;"
    },
    {
        "question_id": 861,
        "answer_sql": "SELECT Sailors.sid FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid INNER JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 862,
        "answer_sql": "SELECT DISTINCT sid FROM Reserves WHERE bid IN ( SELECT bid FROM Boats WHERE color IN ('red', 'blue') );"
    },
    {
        "question_id": 863,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid INNER JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 864,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 865,
        "answer_sql": "SELECT Sailors.sid FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid IN ( SELECT Boats.bid FROM Boats WHERE Boats.color IN ('red', 'blue') ) GROUP BY Sailors.sid;"
    },
    {
        "question_id": 866,
        "answer_sql": "SELECT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 867,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid INNER JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 868,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"
    },
    {
        "question_id": 869,
        "answer_sql": "SELECT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 870,
        "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves);"
    },
    {
        "question_id": 871,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 872,
        "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 873,
        "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves);"
    },
    {
        "question_id": 874,
        "answer_sql": "SELECT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"
    },
    {
        "question_id": 875,
        "answer_sql": "SELECT Sailors.name FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"
    },
    {
        "question_id": 876,
        "answer_sql": "SELECT Sailors.name FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"
    },
    {
        "question_id": 877,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis');"
    },
    {
        "question_id": 878,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > (SELECT Sailors.rating FROM Sailors WHERE Sailors.name = 'Luis');"
    },
    {
        "question_id": 879,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis');"
    },
    {
        "question_id": 880,
        "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT rating FROM Sailors WHERE name = 'Luis');"
    },
    {
        "question_id": 881,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.rating > 2;"
    },
    {
        "question_id": 882,
        "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.rating >= 3;"
    },
    {
        "question_id": 883,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors WHERE Sailors.age = ( SELECT MAX(Sailors.age) FROM Sailors );"
    },
    {
        "question_id": 884,
        "answer_sql": "SELECT name, age FROM Sailors WHERE age = (SELECT MAX(age) FROM Sailors);"
    },
    {
        "question_id": 885,
        "answer_sql": "SELECT COUNT(*) as Total_Sailors FROM Sailors;"
    },
    {
        "question_id": 886,
        "answer_sql": "SELECT COUNT(*) as NumberOfSailors FROM Sailors;"
    },
    {
        "question_id": 887,
        "answer_sql": "SELECT AVG(age) as average_age FROM Sailors WHERE rating = 7;"
    },
    {
        "question_id": 888,
        "answer_sql": "SELECT AVG(Sailors.age) FROM Sailors WHERE Sailors.rating = 7;"
    },
    {
        "question_id": 889,
        "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 890,
        "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"
    },
    {
        "question_id": 891,
        "answer_sql": "SELECT AVG(rating) as average_rating, MAX(age) as max_age FROM Sailors;"
    },
    {
        "question_id": 892,
        "answer_sql": "SELECT AVG(Sailors.rating) AS AverageRating, MAX(Sailors.age) AS MaxAge FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid;"
    },
    {
        "question_id": 893,
        "answer_sql": "SELECT Boats.bid, Boats.name, COUNT(Reserves.bid) as Number_of_Reservations FROM Boats LEFT JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid, Boats.name;"
    },
    {
        "question_id": 894,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) as Number_of_Reservations FROM Boats LEFT JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name;"
    },
    {
        "question_id": 895,
        "answer_sql": "SELECT Boats.bid, COUNT(Reserves.bid) as ReservationCount FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.bid > 50 GROUP BY Boats.bid;"
    },
    {
        "question_id": 896,
        "answer_sql": "SELECT Boats.bid, COUNT(Reserves.bid) as ReservationCount FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.bid > 50 GROUP BY Boats.bid;"
    },
    {
        "question_id": 897,
        "answer_sql": "SELECT Boats.bid, Boats.name, COUNT(Reserves.bid) as ReservationCount FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid, Boats.name HAVING COUNT(Reserves.bid) > 1;"
    },
    {
        "question_id": 898,
        "answer_sql": "SELECT Boats.bid, Boats.name, COUNT(Reserves.bid) as Reservation_Count FROM Boats LEFT JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid, Boats.name HAVING COUNT(Reserves.bid) > 1;"
    },
    {
        "question_id": 899,
        "answer_sql": "SELECT Boats.bid, COUNT(Reserves.sid) as NumberOfReservations FROM Boats LEFT JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid > 1 GROUP BY Boats.bid;"
    },
    {
        "question_id": 900,
        "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) as Number_of_Reservations FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.sid > 1 GROUP BY Reserves.bid;"
    },
    {
        "question_id": 901,
        "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) as Average_Age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"
    },
    {
        "question_id": 902,
        "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) FROM Reserves INNER JOIN Sailors ON Reserves.sid = Sailors.sid INNER JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"
    },
    {
        "question_id": 903,
        "answer_sql": "SELECT name, rating, age FROM Sailors ORDER BY rating ASC, age ASC;"
    },
    {
        "question_id": 904,
        "answer_sql": "SELECT Sailors.name, Sailors.rating, Sailors.age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid ORDER BY Sailors.rating, Sailors.age;"
    },
    {
        "question_id": 905,
        "answer_sql": "SELECT COUNT(*) as total_boats FROM Boats UNION ALL SELECT COUNT(*) as total_reserves FROM Reserves;"
    },
    {
        "question_id": 906,
        "answer_sql": "SELECT COUNT(*) as total_boats FROM Boats;"
    },
    {
        "question_id": 907,
        "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"
    },
    {
        "question_id": 908,
        "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"
    },
    {
        "question_id": 909,
        "answer_sql": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Sailors.sid = Reserves.sid WHERE Sailors.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 910,
        "answer_sql": "SELECT Boats.name FROM Boats INNER JOIN Reserves ON Boats.bid = Reserves.bid INNER JOIN Sailors ON Sailors.sid = Reserves.sid WHERE Sailors.age BETWEEN 20 AND 30;"
    },
    {
        "question_id": 911,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > ( SELECT AVG(Sailors.rating) FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid INNER JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' );"
    },
    {
        "question_id": 912,
        "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > (SELECT AVG(Sailors.rating) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red');"
    },
    {
        "question_id": 913,
        "answer_sql": "SELECT MAX(rating) as Highest_Rating FROM Sailors;"
    },
    {
        "question_id": 914,
        "answer_sql": "SELECT MAX(rating) as MaximumRating FROM Sailors;"
    },
    {
        "question_id": 915,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon';"
    },
    {
        "question_id": 916,
        "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon';"
    },
    {
        "question_id": 917,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors ORDER BY Sailors.rating DESC;"
    },
    {
        "question_id": 918,
        "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name, Sailors.age ORDER BY Sailors.rating DESC;"
    },
    {
        "question_id": 919,
        "answer_sql": "SELECT Model FROM headphone WHERE Price = (SELECT MAX(Price) FROM headphone);"
    },
    {
        "question_id": 920,
        "answer_sql": "SELECT Model FROM headphone WHERE Price = (SELECT MAX(Price) FROM headphone);"
    },
    {
        "question_id": 921,
        "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;"
    },
    {
        "question_id": 922,
        "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;"
    },
    {
        "question_id": 923,
        "answer_sql": "SELECT Class FROM headphone GROUP BY Class ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 924,
        "answer_sql": "SELECT Class FROM headphone GROUP BY Class ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 925,
        "answer_sql": "SELECT Class, COUNT(*) as NumberOfHeadphones FROM headphone GROUP BY Class HAVING COUNT(*) > 2;"
    },
    {
        "question_id": 926,
        "answer_sql": "SELECT H.Class FROM headphone H WHERE ( SELECT COUNT(*) FROM stock S WHERE S.Headphone_ID = H.Headphone_ID ) <= 2;"
    },
    {
        "question_id": 927,
        "answer_sql": ""
    },
    {
        "question_id": 928,
        "answer_sql": "SELECT h.Class, COUNT(h.Class) as Number_of_Headphones FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE h.Price > 200 GROUP BY h.Class;"
    },
    {
        "question_id": 929,
        "answer_sql": "SELECT COUNT(DISTINCT Earpads ) FROM headphone ;"
    },
    {
        "question_id": 930,
        "answer_sql": "SELECT COUNT(DISTINCT Earpads ) as NumberOfEarpads FROM headphone ;"
    },
    {
        "question_id": 931,
        "answer_sql": "SELECT h.Earpads, COUNT(*) as count FROM stock s JOIN headphone h ON s.Headphone_ID = h.Headphone_ID GROUP BY h.Earpads ORDER BY count DESC LIMIT 2;"
    },
    {
        "question_id": 932,
        "answer_sql": "SELECT h.Model, COUNT(s.Headphone_ID) as Number_of_Headphones FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model ORDER BY Number_of_Headphones DESC LIMIT 2;"
    },
    {
        "question_id": 933,
        "answer_sql": "SELECT Model, Class, Construction FROM headphone WHERE Price = (SELECT MIN(Price) FROM headphone);"
    },
    {
        "question_id": 934,
        "answer_sql": "SELECT Model, Class, Construction FROM headphone WHERE Price = (SELECT MIN(Price) FROM headphone);"
    },
    {
        "question_id": 935,
        "answer_sql": "SELECT Headphone.Construction, AVG(Headphone.Price) as AveragePrice FROM Headphone JOIN Stock ON Headphone.Headphone_ID = Stock.Headphone_ID GROUP BY Headphone.Construction;"
    },
    {
        "question_id": 936,
        "answer_sql": "SELECT Headphone_ID, AVG(Price) as Average_Price FROM Headphone GROUP BY Headphone_ID;"
    },
    {
        "question_id": 937,
        "answer_sql": "SELECT DISTINCT h.Class FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID JOIN store st ON s.Store_ID = st.Store_ID WHERE h.Earpads = 'Bowls' AND h.Class IN ( SELECT h2.Class FROM headphone h2 JOIN stock s2 ON h2.Headphone_ID = s2.Headphone_ID JOIN store st2 ON s2.Store_ID = st2.Store_ID WHERE h2.Earpads = 'Comfort Pads' );"
    },
    {
        "question_id": 938,
        "answer_sql": ""
    },
    {
        "question_id": 939,
        "answer_sql": ""
    },
    {
        "question_id": 940,
        "answer_sql": "SELECT * FROM headphone WHERE Construction != 'Plastic';"
    },
    {
        "question_id": 941,
        "answer_sql": "SELECT h.Model FROM headphone h WHERE h.Price < (SELECT AVG(h2.Price) FROM headphone h2);"
    },
    {
        "question_id": 942,
        "answer_sql": "SELECT h.Model FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model HAVING MIN(h.Price) <= ( SELECT AVG(h1.Price) FROM headphone h1 JOIN stock s1 ON h1.Headphone_ID = s1.Headphone_ID );"
    },
    {
        "question_id": 943,
        "answer_sql": "SELECT s.Name, s.Date_Opened FROM store s ORDER BY s.Date_Opened;"
    },
    {
        "question_id": 944,
        "answer_sql": "SELECT s.Name FROM store s ORDER BY s.Date_Opened;"
    },
    {
        "question_id": 945,
        "answer_sql": ""
    },
    {
        "question_id": 946,
        "answer_sql": ""
    },
    {
        "question_id": 947,
        "answer_sql": "SELECT COUNT(DISTINCT s.Neighborhood) as Number_of_Neighborhoods FROM store s;"
    },
    {
        "question_id": 948,
        "answer_sql": "SELECT COUNT(DISTINCT Neighborhood) FROM store;"
    },
    {
        "question_id": 949,
        "answer_sql": "SELECT s.Neighborhood, COUNT(DISTINCT s.Store_ID) as Number_of_Stores FROM store s GROUP BY s.Neighborhood;"
    },
    {
        "question_id": 950,
        "answer_sql": "SELECT s.Neighborhood, COUNT(DISTINCT s.Store_ID) as Number_of_Stores FROM store s GROUP BY s.Neighborhood;"
    },
    {
        "question_id": 951,
        "answer_sql": ""
    },
    {
        "question_id": 952,
        "answer_sql": "SELECT s.Name, SUM(st.Quantity) as Total_Quantity FROM store s JOIN stock st ON s.Store_ID = st.Store_ID GROUP BY s.Name;"
    },
    {
        "question_id": 953,
        "answer_sql": "SELECT s.Name FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL;"
    },
    {
        "question_id": 954,
        "answer_sql": "SELECT s.Name FROM store s WHERE NOT EXISTS ( SELECT 1 FROM stock st WHERE s.Store_ID = st.Store_ID );"
    },
    {
        "question_id": 955,
        "answer_sql": "SELECT DISTINCT h.Model FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE s.Headphone_ID IS NULL OR s.Headphone_ID IS NOT NULL;"
    },
    {
        "question_id": 956,
        "answer_sql": "SELECT DISTINCT h.Model FROM headphone h WHERE h.Headphone_ID NOT IN ( SELECT s.Headphone_ID FROM stock s );"
    },
    {
        "question_id": 957,
        "answer_sql": "SELECT h.Model, SUM(s.Quantity) as Total_Quantity FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model ORDER BY Total_Quantity DESC LIMIT 1;"
    },
    {
        "question_id": 958,
        "answer_sql": "SELECT h.Model FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model ORDER BY SUM(s.Quantity) DESC LIMIT 1;"
    },
    {
        "question_id": 959,
        "answer_sql": "SELECT COUNT(*) as Number_of_Headphones_In_Woodman_Store FROM stock INNER JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = 'Woodman';"
    },
    {
        "question_id": 960,
        "answer_sql": "SELECT s.Name, SUM(st.Quantity) as Total_Quantity FROM stock st JOIN store s ON st.Store_ID = s.Store_ID WHERE s.Name = 'Woodman' GROUP BY s.Name;"
    },
    {
        "question_id": 961,
        "answer_sql": "SELECT s.Neighborhood FROM store s WHERE NOT EXISTS ( SELECT 1 FROM stock WHERE stock.Store_ID = s.Store_ID );"
    },
    {
        "question_id": 962,
        "answer_sql": "SELECT s.Neighborhood FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Store_ID IS NULL;"
    },
    {
        "question_id": 963,
        "answer_sql": "SELECT COUNT(DISTINCT author_id) as number_of_authors FROM Author_list;"
    },
    {
        "question_id": 964,
        "answer_sql": "SELECT COUNT(DISTINCT author_id) as num_authors FROM Author_list;"
    },
    {
        "question_id": 965,
        "answer_sql": "SELECT COUNT(*) as total_papers FROM Paper;"
    },
    {
        "question_id": 966,
        "answer_sql": "SELECT COUNT(*) as total_papers FROM Paper;"
    },
    {
        "question_id": 967,
        "answer_sql": "SELECT COUNT(*) as Total_Affiliations FROM Affiliation;"
    },
    {
        "question_id": 968,
        "answer_sql": "SELECT COUNT(DISTINCT affiliation_id) AS number_of_affiliations FROM Affiliation;"
    },
    {
        "question_id": 969,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000';"
    },
    {
        "question_id": 970,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000';"
    },
    {
        "question_id": 971,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE year = 2009 AND venue LIKE '%Columbia University%';"
    },
    {
        "question_id": 972,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year = 2009;"
    },
    {
        "question_id": 973,
        "answer_sql": ""
    },
    {
        "question_id": 974,
        "answer_sql": ""
    },
    {
        "question_id": 975,
        "answer_sql": ""
    },
    {
        "question_id": 976,
        "answer_sql": "SELECT DISTINCT venue FROM Paper ORDER BY year;"
    },
    {
        "question_id": 977,
        "answer_sql": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Harvard University';"
    },
    {
        "question_id": 978,
        "answer_sql": ""
    },
    {
        "question_id": 979,
        "answer_sql": ""
    },
    {
        "question_id": 980,
        "answer_sql": ""
    },
    {
        "question_id": 981,
        "answer_sql": "SELECT P.paper_id, P.title FROM Paper P JOIN Author_list A ON P.paper_id = A.paper_id JOIN Affiliation AA ON A.affiliation_id = AA.affiliation_id WHERE AA.name IN ('Stanford University', 'Columbia University');"
    },
    {
        "question_id": 982,
        "answer_sql": "SELECT P.title, P.paper_id FROM Paper P WHERE P.paper_id IN ( SELECT AL.paper_id FROM Author_list AL WHERE AL.affiliation_id IN ( SELECT affiliation_id FROM Affiliation WHERE name IN ('Stanford University', 'Columbia University') ) ) AND P.paper_id IN ( SELECT C.cited_paper_id FROM Citation C );"
    },
    {
        "question_id": 983,
        "answer_sql": "SELECT P.paper_id, P.title FROM Paper P WHERE P.paper_id IN ( SELECT AL.paper_id FROM Author_list AL WHERE AL.author_id IN ( SELECT A.author_id FROM Author A WHERE A.name IN ('Mckeown, Kathleen', 'Rambow, Owen') ) )"
    },
    {
        "question_id": 984,
        "answer_sql": "SELECT P.title, A.author_id, A.name FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('Mckeown, Kathleen', 'Rambow, Owen') GROUP BY A.author_id;"
    },
    {
        "question_id": 985,
        "answer_sql": ""
    },
    {
        "question_id": 986,
        "answer_sql": ""
    },
    {
        "question_id": 987,
        "answer_sql": "SELECT P.paper_id, P.title FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('Mckeown, Kathleen', 'Rambow, Owen');"
    },
    {
        "question_id": 988,
        "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('Mckeown, Kathleen', 'Rambow, Owen');"
    },
    {
        "question_id": 989,
        "answer_sql": ""
    },
    {
        "question_id": 990,
        "answer_sql": ""
    },
    {
        "question_id": 991,
        "answer_sql": ""
    },
    {
        "question_id": 992,
        "answer_sql": ""
    },
    {
        "question_id": 993,
        "answer_sql": "SELECT A.name FROM Author A WHERE ( SELECT COUNT(*) FROM Author_list B WHERE B.author_id = A.author_id ) > 50;"
    },
    {
        "question_id": 994,
        "answer_sql": "SELECT A.name FROM Author A WHERE ( SELECT COUNT(*) FROM Author_list B WHERE A.author_id = B.author_id ) > 50;"
    },
    {
        "question_id": 995,
        "answer_sql": ""
    },
    {
        "question_id": 996,
        "answer_sql": ""
    },
    {
        "question_id": 997,
        "answer_sql": "SELECT Venue, Year, COUNT(*) as PublicationCount FROM Paper GROUP BY Venue, Year ORDER BY PublicationCount DESC LIMIT 1;"
    },
    {
        "question_id": 998,
        "answer_sql": "SELECT Venue, Year, COUNT(*) as Publications FROM Paper GROUP BY Venue, Year ORDER BY Publications DESC LIMIT 1;"
    },
    {
        "question_id": 999,
        "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(paper_id) LIMIT 1;"
    },
    {
        "question_id": 1000,
        "answer_sql": "SELECT Venue, COUNT(*) as Publications FROM Paper GROUP BY Venue ORDER BY Publications LIMIT 1;"
    },
    {
        "question_id": 1001,
        "answer_sql": "SELECT COUNT(*) as cnt FROM `Citation` WHERE `cited_paper_id` = 'A00-1002';"
    },
    {
        "question_id": 1002,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE paper_id IN ( SELECT cited_paper_id FROM Citation WHERE paper_id = 'A00-1002' );"
    },
    {
        "question_id": 1003,
        "answer_sql": "SELECT COUNT(*) as num_of_references FROM `Citation` WHERE `paper_id` = 'D12-1027';"
    },
    {
        "question_id": 1004,
        "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'D12-1027';"
    },
    {
        "question_id": 1005,
        "answer_sql": "SELECT paper_id, COUNT(*) as num_citations FROM Citation GROUP BY paper_id ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1006,
        "answer_sql": "SELECT P.paper_id, COUNT(*) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id ORDER BY citation_count DESC LIMIT 1;"
    },
    {
        "question_id": 1007,
        "answer_sql": "SELECT title FROM Paper WHERE paper_id IN ( SELECT paper_id FROM Citation GROUP BY paper_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1008,
        "answer_sql": "SELECT P.title FROM Paper P WHERE P.paper_id IN ( SELECT C.cited_paper_id FROM Citation C GROUP BY C.cited_paper_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1009,
        "answer_sql": "SELECT P.paper_id, P.title, COUNT(C.paper_id) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id, P.title ORDER BY citation_count DESC LIMIT 10;"
    },
    {
        "question_id": 1010,
        "answer_sql": "SELECT P.paper_id, P.title, COUNT(C.cited_paper_id) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id, P.title ORDER BY citation_count DESC LIMIT 10;"
    },
    {
        "question_id": 1011,
        "answer_sql": "SELECT COUNT(*) as Number_of_Citations FROM Citation WHERE paper_id IN ( SELECT paper_id FROM Author_list WHERE author_id IN ( SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen' ) );"
    },
    {
        "question_id": 1012,
        "answer_sql": "SELECT COUNT(*) as num_citations FROM Citation WHERE paper_id IN ( SELECT paper_id FROM Author_list WHERE author_id = ( SELECT author_id FROM Author WHERE name = 'Mckeown, K.' ) );"
    },
    {
        "question_id": 1013,
        "answer_sql": "SELECT COUNT(*) as num_papers_cited FROM Author_list WHERE author_id = ( SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen' );"
    },
    {
        "question_id": 1014,
        "answer_sql": "SELECT COUNT(*) as num_papers_cited FROM Citation WHERE paper_id IN ( SELECT paper_id FROM Author_list WHERE author_id = ( SELECT author_id FROM Author WHERE name = 'Mckeown' ) );"
    },
    {
        "question_id": 1015,
        "answer_sql": "SELECT A.name, COUNT(*) as num_citations FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id JOIN Citation C ON P.paper_id = C.paper_id GROUP BY A.name ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1016,
        "answer_sql": "SELECT A.name, COUNT(C.paper_id) as num_citations FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id JOIN Citation C ON P.paper_id = C.paper_id GROUP BY A.name ORDER BY num_citations DESC LIMIT 1;"
    },
    {
        "question_id": 1017,
        "answer_sql": "SELECT A.venue, A.year FROM Paper A JOIN Author_list AL ON A.paper_id = AL.paper_id JOIN Author AA ON AL.author_id = AA.author_id WHERE AA.name = 'McKeown, Kathleen' GROUP BY A.venue, A.year;"
    },
    {
        "question_id": 1018,
        "answer_sql": ""
    },
    {
        "question_id": 1019,
        "answer_sql": "SELECT venue, year FROM Paper WHERE paper_id IN ( SELECT paper_id FROM Author_list WHERE affiliation_id = ( SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University' ) );"
    },
    {
        "question_id": 1020,
        "answer_sql": "SELECT venue, year FROM Paper WHERE paper_id IN ( SELECT paper_id FROM Author_list WHERE affiliation_id = ( SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University' ) );"
    },
    {
        "question_id": 1021,
        "answer_sql": "SELECT A.name FROM Author A WHERE EXISTS ( SELECT 1 FROM Author_list B JOIN Paper C ON B.author_id = A.author_id WHERE B.affiliation_id IS NULL AND C.year = 2009 GROUP BY B.author_id HAVING COUNT(B.paper_id) = ( SELECT COUNT(DISTINCT paper_id) FROM Paper WHERE year = 2009 ) );"
    },
    {
        "question_id": 1022,
        "answer_sql": "SELECT A.name FROM Author A WHERE A.author_id IN ( SELECT AL.author_id FROM Author_list AL WHERE AL.paper_id IN ( SELECT P.paper_id FROM Paper P WHERE P.year = 2009 ) ) GROUP BY A.author_id ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1023,
        "answer_sql": "SELECT A.name, COUNT(P.paper_id) as num_papers FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Author AA ON AL.author_id = AA.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.year = 2009 GROUP BY A.name ORDER BY num_papers DESC LIMIT 3;"
    },
    {
        "question_id": 1024,
        "answer_sql": "SELECT a.name, COUNT(ap.paper_id) as num_papers FROM Affiliation a JOIN Author_list al ON a.affiliation_id = al.affiliation_id JOIN Paper ap ON al.paper_id = ap.paper_id WHERE ap.year = 2009 GROUP BY a.name ORDER BY num_papers DESC LIMIT 3;"
    },
    {
        "question_id": 1025,
        "answer_sql": "SELECT COUNT(*) as NumberOfPapers FROM Paper WHERE year <= 2009 AND paper_id IN ( SELECT paper_id FROM Author_list WHERE affiliation_id = ( SELECT affiliation_id FROM Affiliation WHERE name = 'Columbia University' ) );"
    },
    {
        "question_id": 1026,
        "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year <= 2009;"
    },
    {
        "question_id": 1027,
        "answer_sql": "SELECT COUNT(*) as 'Number of papers' FROM Paper WHERE year BETWEEN 2000 AND 2009 AND paper_id IN ( SELECT paper_id FROM Author_list WHERE affiliation_id = ( SELECT affiliation_id FROM Affiliation WHERE name = 'Stanford University' ) );"
    },
    {
        "question_id": 1028,
        "answer_sql": "SELECT COUNT(*) as `Number of papers Stanford University had between 2000 and 2009` FROM `Paper` WHERE `paper_id` IN ( SELECT `paper_id` FROM `Author_list` WHERE `affiliation_id` IN ( SELECT `affiliation_id` FROM `Affiliation` WHERE `name` = 'Stanford University' ) ) AND `year` BETWEEN 2000 AND 2009;"
    },
    {
        "question_id": 1029,
        "answer_sql": "SELECT Paper.title FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id GROUP BY Paper.title ORDER BY COUNT(Author_list.author_id) DESC LIMIT 1;"
    },
    {
        "question_id": 1030,
        "answer_sql": "SELECT P.title FROM Paper P WHERE ( SELECT COUNT(*) FROM Author_list AL WHERE AL.paper_id = P.paper_id ) = ( SELECT MAX(author_count) FROM ( SELECT COUNT(*) AS author_count FROM Author_list AL GROUP BY AL.paper_id ) );"
    },
    {
        "question_id": 1031,
        "answer_sql": ""
    },
    {
        "question_id": 1032,
        "answer_sql": "SELECT COUNT(*) as collaborators_count FROM Author_list WHERE author_id = ( SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen' );"
    },
    {
        "question_id": 1033,
        "answer_sql": "SELECT COUNT(*) as num_papers FROM Author_list WHERE author_id IN ( SELECT author_id FROM Author_list WHERE affiliation_id IN ( SELECT affiliation_id FROM Affiliation WHERE name = 'Mckeown, Kathleen' ) ) AND paper_id IN ( SELECT paper_id FROM Author_list WHERE author_id IN ( SELECT author_id FROM Author_list WHERE affiliation_id IN ( SELECT affiliation_id FROM Affiliation WHERE name = 'Mckeown, Kathleen' ) ) );"
    },
    {
        "question_id": 1034,
        "answer_sql": ""
    },
    {
        "question_id": 1035,
        "answer_sql": "SELECT paper_id FROM Paper WHERE title LIKE '%translation%';"
    },
    {
        "question_id": 1036,
        "answer_sql": "SELECT paper_id FROM Paper WHERE title LIKE '%translation%';"
    },
    {
        "question_id": 1037,
        "answer_sql": ""
    },
    {
        "question_id": 1038,
        "answer_sql": ""
    },
    {
        "question_id": 1039,
        "answer_sql": "SELECT A.name FROM Affiliation A WHERE A.address LIKE '%China%' GROUP BY A.address ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1040,
        "answer_sql": "SELECT A.name FROM Affiliation A WHERE A.address LIKE '%China%' GROUP BY A.name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1041,
        "answer_sql": ""
    },
    {
        "question_id": 1042,
        "answer_sql": "SELECT Venue, Year, COUNT(paper_id) as Number_of_Papers FROM Paper GROUP BY Venue, Year;"
    },
    {
        "question_id": 1043,
        "answer_sql": ""
    },
    {
        "question_id": 1044,
        "answer_sql": ""
    },
    {
        "question_id": 1045,
        "answer_sql": "SELECT P.title FROM Paper P WHERE ( SELECT COUNT(*) FROM Citation CI WHERE CI.paper_id = P.paper_id ) > 50;"
    },
    {
        "question_id": 1046,
        "answer_sql": "SELECT title FROM Paper WHERE paper_id IN ( SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(*) > 50 );"
    },
    {
        "question_id": 1047,
        "answer_sql": "SELECT COUNT(DISTINCT Author.author_id) AS Number_of_Authors FROM Author WHERE Author.author_id NOT IN ( SELECT Author_list.author_id FROM Author_list LEFT JOIN Citation ON Author_list.paper_id = Citation.cited_paper_id GROUP BY Author_list.author_id HAVING COUNT(*) > 50 );"
    },
    {
        "question_id": 1048,
        "answer_sql": "SELECT COUNT(DISTINCT a.author_id) AS num_authors FROM Author a WHERE a.author_id NOT IN ( SELECT al.author_id FROM Author_list al INNER JOIN Citation c ON al.paper_id = c.paper_id GROUP BY al.author_id HAVING COUNT(*) > 50 );"
    },
    {
        "question_id": 1049,
        "answer_sql": ""
    },
    {
        "question_id": 1050,
        "answer_sql": ""
    },
    {
        "question_id": 1051,
        "answer_sql": "SELECT DISTINCT A.name FROM Author A WHERE A.author_id NOT IN ( SELECT AL.author_id FROM Author_list AL INNER JOIN Paper P ON AL.paper_id = P.paper_id );"
    },
    {
        "question_id": 1052,
        "answer_sql": ""
    },
    {
        "question_id": 1053,
        "answer_sql": "SELECT COUNT(*) as Number_of_Conferences FROM conference;"
    },
    {
        "question_id": 1054,
        "answer_sql": "SELECT COUNT(*) as total_conferences FROM conference;"
    },
    {
        "question_id": 1055,
        "answer_sql": "SELECT DISTINCT Conference_Name FROM conference;"
    },
    {
        "question_id": 1056,
        "answer_sql": "SELECT Conference_Name FROM conference;"
    },
    {
        "question_id": 1057,
        "answer_sql": "SELECT c.Conference_Name, c.Year, c.Location FROM conference c INNER JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID;"
    },
    {
        "question_id": 1058,
        "answer_sql": "SELECT c.Conference_Name, c.Year, c.Location FROM conference c INNER JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID"
    },
    {
        "question_id": 1059,
        "answer_sql": "SELECT c.Conference_Name, COUNT(cp.Conference_ID) as Number_of_Conferences FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name;"
    },
    {
        "question_id": 1060,
        "answer_sql": "SELECT c.Conference_Name, COUNT(cp.Conference_ID) as Number_of_Times_Occurred FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name;"
    },
    {
        "question_id": 1061,
        "answer_sql": "SELECT Year, COUNT(*) as NumberOfConferences FROM conference GROUP BY Year;"
    },
    {
        "question_id": 1062,
        "answer_sql": "SELECT COUNT(*) as Number_of_Conferences_Per_Year FROM conference GROUP BY Year;"
    },
    {
        "question_id": 1063,
        "answer_sql": "SELECT Year FROM conference GROUP BY Year ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1064,
        "answer_sql": "SELECT MIN(Year) as Year_with_fewest_conferences FROM conference;"
    },
    {
        "question_id": 1065,
        "answer_sql": "SELECT Location FROM conference GROUP BY Location HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 1066,
        "answer_sql": "SELECT Location FROM conference GROUP BY Location HAVING COUNT(*) >= 2;"
    },
    {
        "question_id": 1067,
        "answer_sql": "SELECT institution.Institution_Name, institution.Location, institution.Founded FROM institution;"
    },
    {
        "question_id": 1068,
        "answer_sql": "SELECT Institution_Name, Location, Founded FROM institution;"
    },
    {
        "question_id": 1069,
        "answer_sql": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900;"
    },
    {
        "question_id": 1070,
        "answer_sql": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900;"
    },
    {
        "question_id": 1071,
        "answer_sql": "SELECT i.Institution_Name, i.Location FROM institution i ORDER BY i.Founded DESC LIMIT 1;"
    },
    {
        "question_id": 1072,
        "answer_sql": "SELECT i.Institution_Name, i.Location FROM institution i WHERE i.Founded = (SELECT MAX(Founded) FROM institution);"
    },
    {
        "question_id": 1073,
        "answer_sql": "SELECT institution.Institution_Name, COUNT(staff.staff_ID) as Number_of_Staff FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_Name;"
    },
    {
        "question_id": 1074,
        "answer_sql": "SELECT institution.Institution_ID, institution.Institution_Name, COUNT(staff.staff_ID) as Number_of_Staff FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_ID, institution.Institution_Name;"
    },
    {
        "question_id": 1075,
        "answer_sql": "SELECT Institution_Name FROM institution WHERE Institution_ID NOT IN (SELECT Institution_ID FROM staff);"
    },
    {
        "question_id": 1076,
        "answer_sql": "SELECT Institution_Name FROM institution WHERE Institution_ID NOT IN (SELECT Institution_ID FROM staff);"
    },
    {
        "question_id": 1077,
        "answer_sql": "SELECT s.name FROM staff AS s WHERE s.Age > (SELECT AVG(Age) FROM staff);"
    },
    {
        "question_id": 1078,
        "answer_sql": "SELECT AVG(Age) as Average_Age FROM staff;"
    },
    {
        "question_id": 1079,
        "answer_sql": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM staff JOIN institution ON staff.Institution_ID = institution.Institution_ID WHERE institution.Location = 'United States';"
    },
    {
        "question_id": 1080,
        "answer_sql": "SELECT MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM staff;"
    },
    {
        "question_id": 1081,
        "answer_sql": "SELECT DISTINCT conference.Conference_Name FROM conference INNER JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID INNER JOIN staff ON staff.staff_ID = conference_participation.staff_ID WHERE staff.Nationality = 'Canada';"
    },
    {
        "question_id": 1082,
        "answer_sql": "SELECT c.Conference_Name FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.Nationality = 'Canada';"
    },
    {
        "question_id": 1083,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.role IN ('Speaker', 'Sponsor') GROUP BY s.name HAVING COUNT(DISTINCT cp.Conference_ID) > 1;"
    },
    {
        "question_id": 1084,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.role IN ('Speaker', 'Sponsor') GROUP BY s.name HAVING COUNT(DISTINCT cp.Conference_ID) > 1;"
    },
    {
        "question_id": 1085,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Conference_Name IN ('ACL', 'NACL');"
    },
    {
        "question_id": 1086,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Conference_Name IN ('ACL', 'NACCL');"
    },
    {
        "question_id": 1087,
        "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Year = 2003 OR c.Year = 2004;"
    },
    {
        "question_id": 1088,
        "answer_sql": "SELECT s.name FROM staff AS s JOIN conference_participation AS cp ON s.staff_ID = cp.staff_ID JOIN conference AS c ON cp.Conference_ID = c.Conference_ID WHERE c.Year BETWEEN 2003 AND 2004;"
    },
    {
        "question_id": 1089,
        "answer_sql": "SELECT c.Conference_Name, c.Year, COUNT(cp.staff_ID) as Participants_Count FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name, c.Year;"
    },
    {
        "question_id": 1090,
        "answer_sql": "SELECT c.Conference_Name, c.Year, COUNT(cp.staff_ID) as Participants_Number FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_ID;"
    },
    {
        "question_id": 1091,
        "answer_sql": "SELECT c.Conference_Name, COUNT(cp.staff_ID) as Total_Attendants FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name ORDER BY Total_Attendants DESC LIMIT 2;"
    },
    {
        "question_id": 1092,
        "answer_sql": "SELECT c.Conference_Name, COUNT(cp.staff_ID) as Attendance FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name ORDER BY Attendance DESC LIMIT 2;"
    },
    {
        "question_id": 1093,
        "answer_sql": "SELECT s.name, s.Nationality FROM staff s WHERE NOT EXISTS ( SELECT 1 FROM conference_participation cp WHERE cp.staff_ID = s.staff_ID AND cp.Conference_ID IN ( SELECT Conference_ID FROM conference WHERE Year = 2020 ) );"
    },
    {
        "question_id": 1094,
        "answer_sql": "SELECT s.name, s.Nationality FROM staff AS s WHERE s.staff_ID NOT IN ( SELECT cp.staff_ID FROM conference_participation AS cp WHERE cp.Conference_ID IN ( SELECT c.Conference_ID FROM conference AS c WHERE c.Year = 2018 ) );"
    },
    {
        "question_id": 1095,
        "answer_sql": ""
    },
    {
        "question_id": 1096,
        "answer_sql": ""
    },
    {
        "question_id": 1097,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1098,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1099,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age;"
    },
    {
        "question_id": 1100,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age ASC;"
    },
    {
        "question_id": 1101,
        "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1102,
        "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"
    },
    {
        "question_id": 1103,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age < 35;"
    },
    {
        "question_id": 1104,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < 35 AND plane_name = 'Piper Cub';"
    },
    {
        "question_id": 1105,
        "answer_sql": ""
    },
    {
        "question_id": 1106,
        "answer_sql": ""
    },
    {
        "question_id": 1107,
        "answer_sql": "SELECT COUNT(DISTINCT location) as NumberOfDifferentLocations FROM Hangar WHERE plane_name IN (SELECT plane_name FROM PilotSkills);"
    },
    {
        "question_id": 1108,
        "answer_sql": "SELECT COUNT(DISTINCT location) as NumberOfLocations FROM Hangar;"
    },
    {
        "question_id": 1109,
        "answer_sql": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Jones' AND PilotSkills.age = 32;"
    },
    {
        "question_id": 1110,
        "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32;"
    },
    {
        "question_id": 1111,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name IN ( SELECT pilot_name FROM PilotSkills WHERE age > 40 );"
    },
    {
        "question_id": 1112,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1113,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = '[pilot_name]' AND plane_name = 'B-52' AND age < 35;"
    },
    {
        "question_id": 1114,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name IN ( SELECT pilot_name FROM PilotSkills WHERE age < 35 ) AND plane_name = 'B-52';"
    },
    {
        "question_id": 1115,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age ASC LIMIT 1;"
    },
    {
        "question_id": 1116,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills) AND plane_name = 'Piper Cub';"
    },
    {
        "question_id": 1117,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1118,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1119,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1120,
        "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) ASC LIMIT 1;"
    },
    {
        "question_id": 1121,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Chicago');"
    },
    {
        "question_id": 1122,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Chicago');"
    },
    {
        "question_id": 1123,
        "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Smith' AND age = 41;"
    },
    {
        "question_id": 1124,
        "answer_sql": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Smith' AND PilotSkills.age = 41;"
    },
    {
        "question_id": 1125,
        "answer_sql": "SELECT COUNT(DISTINCT plane_name) as NumberOfDistinctPlanes FROM Hangar;"
    },
    {
        "question_id": 1126,
        "answer_sql": "SELECT COUNT(DISTINCT plane_name) as NumberOfDifferentPlaneNames FROM PilotSkills;"
    },
    {
        "question_id": 1127,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = 'Smith';"
    },
    {
        "question_id": 1128,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = 'Smith';"
    },
    {
        "question_id": 1129,
        "answer_sql": "SELECT COUNT(DISTINCT Hangar.plane_name) FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age > 40;"
    },
    {
        "question_id": 1130,
        "answer_sql": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills WHERE age > 40;"
    },
    {
        "question_id": 1131,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"
    },
    {
        "question_id": 1132,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"
    },
    {
        "question_id": 1133,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC;"
    },
    {
        "question_id": 1134,
        "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC;"
    },
    {
        "question_id": 1135,
        "answer_sql": "SELECT Hangar.location FROM PilotSkills INNER JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name ORDER BY PilotSkills.plane_name;"
    },
    {
        "question_id": 1136,
        "answer_sql": "SELECT Hangar.location, COUNT(PilotSkills.plane_name) as Number_of_Planes FROM Hangar LEFT JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.location ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1137,
        "answer_sql": "SELECT DISTINCT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1138,
        "answer_sql": "SELECT plane_name FROM Hangar ORDER BY plane_name ASC;"
    },
    {
        "question_id": 1139,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"
    },
    {
        "question_id": 1140,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"
    },
    {
        "question_id": 1141,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age > 35 OR (plane_name = 'F-14 Fighter' AND age < 30);"
    },
    {
        "question_id": 1142,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30);"
    },
    {
        "question_id": 1143,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND pilot_name NOT IN ( SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber' );"
    },
    {
        "question_id": 1144,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND pilot_name NOT IN ( SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber' );"
    },
    {
        "question_id": 1145,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' OR plane_name = 'B-52 Bomber';"
    },
    {
        "question_id": 1146,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE pilot_name IN ( SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ) AND pilot_name IN ( SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber' );"
    },
    {
        "question_id": 1147,
        "answer_sql": "SELECT AVG(age) AS Average_Age, MIN(age) AS Smallest_Age FROM PilotSkills;"
    },
    {
        "question_id": 1148,
        "answer_sql": "SELECT AVG(age) AS Average_Age, MIN(age) AS Minimum_Age FROM PilotSkills"
    },
    {
        "question_id": 1149,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ( SELECT plane_name FROM Hangar WHERE location = 'Austin' ) INTERSECT SELECT pilot_name FROM PilotSkills WHERE plane_name IN ( SELECT plane_name FROM Hangar WHERE location = 'Boston' );"
    },
    {
        "question_id": 1150,
        "answer_sql": ""
    },
    {
        "question_id": 1151,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'F-14 Fighter');"
    },
    {
        "question_id": 1152,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'F-14 Fighter');"
    },
    {
        "question_id": 1153,
        "answer_sql": "SELECT Hangar.plane_name, AVG(PilotSkills.age) as average_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.plane_name;"
    },
    {
        "question_id": 1154,
        "answer_sql": "SELECT Hangar.plane_name, AVG(PilotSkills.age) as average_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.plane_name;"
    },
    {
        "question_id": 1155,
        "answer_sql": "SELECT plane_name, COUNT(*) as count_of_planes FROM PilotSkills GROUP BY plane_name;"
    },
    {
        "question_id": 1156,
        "answer_sql": "SELECT plane_name, COUNT(*) as count FROM PilotSkills GROUP BY plane_name;"
    },
    {
        "question_id": 1157,
        "answer_sql": "SELECT Hangar.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age = ( SELECT MAX(PilotSkills.age) FROM PilotSkills WHERE PilotSkills.plane_name = Hangar.plane_name ) ORDER BY Hangar.plane_name;"
    },
    {
        "question_id": 1158,
        "answer_sql": "SELECT Hangar.plane_name, PilotSkills.pilot_name, PilotSkills.age FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age = (SELECT MAX(age) FROM PilotSkills WHERE plane_name = Hangar.plane_name);"
    },
    {
        "question_id": 1159,
        "answer_sql": "SELECT Hangar.plane_name, PilotSkills.pilot_name, MAX(PilotSkills.age) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.plane_name;"
    },
    {
        "question_id": 1160,
        "answer_sql": "SELECT Hangar.plane_name, PilotSkills.pilot_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age = (SELECT MAX(age) FROM PilotSkills WHERE plane_name = Hangar.plane_name);"
    },
    {
        "question_id": 1161,
        "answer_sql": "SELECT pilot_name, MAX(age) as max_age FROM PilotSkills GROUP BY pilot_name;"
    },
    {
        "question_id": 1162,
        "answer_sql": "SELECT pilot_name, MAX(age) as max_age FROM PilotSkills GROUP BY pilot_name;"
    },
    {
        "question_id": 1163,
        "answer_sql": "SELECT Hangar.location, COUNT(PilotSkills.pilot_name) AS Number_of_Pilots, AVG(PilotSkills.age) AS Average_Age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.location;"
    },
    {
        "question_id": 1164,
        "answer_sql": "SELECT Hangar.location, COUNT(PilotSkills.pilot_name) as 'Number of Pilots', AVG(PilotSkills.age) as 'Average Age' FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.location;"
    },
    {
        "question_id": 1165,
        "answer_sql": "SELECT COUNT(DISTINCT PilotSkills.pilot_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Hangar' AND PilotSkills.age < 35;"
    },
    {
        "question_id": 1166,
        "answer_sql": "SELECT Hangar.plane_name, AVG(PilotSkills.age) as average_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.plane_name HAVING AVG(PilotSkills.age) < 35;"
    },
    {
        "question_id": 1167,
        "answer_sql": "SELECT location FROM Hangar WHERE plane_name = ( SELECT plane_name FROM PilotSkills WHERE age = ( SELECT MIN(age) FROM PilotSkills ) );"
    },
    {
        "question_id": 1168,
        "answer_sql": "SELECT location FROM Hangar WHERE plane_name = (SELECT plane_name FROM PilotSkills GROUP BY pilot_name ORDER BY age ASC LIMIT 1);"
    },
    {
        "question_id": 1169,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Austin');"
    },
    {
        "question_id": 1170,
        "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Austin');"
    },
    {
        "question_id": 1171,
        "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age > 25 AND plane_name = 'Piper Cub' ORDER BY pilot_name;"
    },
    {
        "question_id": 1172,
        "answer_sql": "SELECT ps.pilot_name FROM PilotSkills ps WHERE ps.age > ( SELECT ps2.age FROM PilotSkills ps2 WHERE ps2.plane_name = 'Piper Cub' ) ORDER BY ps.pilot_name ASC;"
    },
    {
        "question_id": 1173,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills PS WHERE PS.age < (SELECT PS2.age FROM PilotSkills PS2 WHERE PS2.plane_name = 'F-14 Fighter')"
    },
    {
        "question_id": 1174,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age < (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'F-14');"
    },
    {
        "question_id": 1175,
        "answer_sql": "SELECT DISTINCT plane_name FROM PilotSkills WHERE plane_name LIKE '%Bomber%';"
    },
    {
        "question_id": 1176,
        "answer_sql": "SELECT plane_name FROM Hangar WHERE plane_name LIKE '%Bomber%';"
    },
    {
        "question_id": 1177,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > (SELECT age FROM PilotSkills WHERE pilot_name = 'Piper Cub');"
    },
    {
        "question_id": 1178,
        "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > (SELECT age FROM PilotSkills WHERE pilot_name = 'Piper Cub')"
    },
    {
        "question_id": 1179,
        "answer_sql": "SELECT d.Name FROM district d JOIN (SELECT District_ID, MAX(Area_km) as MaxArea FROM district) da ON d.District_ID = da.District_ID WHERE d.Area_km = da.MaxArea;"
    },
    {
        "question_id": 1180,
        "answer_sql": "SELECT district . Area_km , district . Government_website FROM district WHERE district . Population = (SELECT MIN( district . Population ) FROM district );"
    },
    {
        "question_id": 1181,
        "answer_sql": "SELECT d.Name, d.Population FROM district d WHERE d.Area_km > (SELECT AVG(d2.Area_km) FROM district d2);"
    },
    {
        "question_id": 1182,
        "answer_sql": "SELECT MAX(d.Area_km) AS Max_Area, AVG(d.Area_km) AS Avg_Area FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID;"
    },
    {
        "question_id": 1183,
        "answer_sql": "SELECT SUM(d.Population) as Total_Population FROM district d JOIN ( SELECT sd.District_ID FROM spokesman_district sd GROUP BY sd.District_ID ORDER BY SUM(sd.District_ID) DESC LIMIT 3 ) top_districts ON d.District_ID = top_districts.District_ID;"
    },
    {
        "question_id": 1184,
        "answer_sql": "SELECT d.District_ID, d.Name, d.Government_website FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID GROUP BY d.District_ID ORDER BY d.Population DESC;"
    },
    {
        "question_id": 1185,
        "answer_sql": ""
    },
    {
        "question_id": 1186,
        "answer_sql": "SELECT d.District_ID, d.Name FROM district d WHERE d.Population > 4000 OR d.Area_km > 3000;"
    },
    {
        "question_id": 1187,
        "answer_sql": "SELECT s.Name, s.Speach_title FROM spokesman s INNER JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID;"
    },
    {
        "question_id": 1188,
        "answer_sql": "SELECT AVG(s.Points) AS Average_Points, AVG(s.Age) AS Average_Age FROM spokesman s JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE s.Rank_position = 1;"
    },
    {
        "question_id": 1189,
        "answer_sql": "SELECT s.Name, s.Points FROM spokesman s WHERE s.Age < 40;"
    },
    {
        "question_id": 1190,
        "answer_sql": "SELECT s.Name, s.Age, s.Speach_title, s.Rank_position FROM spokesman s WHERE s.Rank_position = (SELECT MAX(spokesman.Rank_position) FROM spokesman);"
    },
    {
        "question_id": 1191,
        "answer_sql": "SELECT s.Name FROM spokesman s WHERE s.Points < (SELECT AVG(Points) FROM spokesman);"
    },
    {
        "question_id": 1192,
        "answer_sql": "SELECT d.Name FROM district d JOIN ( SELECT sd.District_ID, COUNT(sd.Spokesman_ID) as Spokesman_Count FROM spokesman_district sd GROUP BY sd.District_ID ORDER BY Spokesman_Count DESC LIMIT 1 ) as max_spokesmen ON d.District_ID = max_spokesmen.District_ID;"
    },
    {
        "question_id": 1193,
        "answer_sql": "SELECT s.Name FROM spokesman AS s JOIN spokesman_district AS pd ON s.Spokesman_ID = pd.Spokesman_ID WHERE pd.Start_year < 2004;"
    },
    {
        "question_id": 1194,
        "answer_sql": "SELECT d.Name AS District_Name, COUNT(sd.Spokesman_ID) AS Number_of_Spokesmen FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID GROUP BY d.Name;"
    },
    {
        "question_id": 1195,
        "answer_sql": ""
    },
    {
        "question_id": 1196,
        "answer_sql": "SELECT d.Name FROM district d JOIN ( SELECT sd.District_ID FROM spokesman_district sd GROUP BY sd.District_ID HAVING COUNT(sd.Spokesman_ID) > 1 ) sd_group ON d.District_ID = sd_group.District_ID;"
    },
    {
        "question_id": 1197,
        "answer_sql": "SELECT COUNT(d.District_ID) FROM district d LEFT JOIN spokesman_district sd ON d.District_ID = sd.District_ID WHERE sd.Spokesman_ID IS NULL;"
    },
    {
        "question_id": 1198,
        "answer_sql": "SELECT s.Name FROM spokesman s WHERE NOT EXISTS ( SELECT 1 FROM spokesman_district pd WHERE pd.Spokesman_ID = s.Spokesman_ID );"
    },
    {
        "question_id": 1199,
        "answer_sql": "SELECT SUM(d.Population) AS Total_Population, AVG(d.Population) AS Average_Population FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID;"
    },
    {
        "question_id": 1200,
        "answer_sql": "SELECT title FROM Sculptures WHERE year = (SELECT MAX(year) FROM Sculptures);"
    },
    {
        "question_id": 1201,
        "answer_sql": "SELECT title FROM Sculptures ORDER BY year DESC LIMIT 1;"
    },
    {
        "question_id": 1202,
        "answer_sql": "SELECT title, location FROM Paintings WHERE year = (SELECT MAX(year) FROM Paintings);"
    },
    {
        "question_id": 1203,
        "answer_sql": "SELECT Paintings.title, Artists.fname, Artists.lname, Paintings.location FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID ORDER BY Paintings.year DESC LIMIT 1;"
    },
    {
        "question_id": 1204,
        "answer_sql": ""
    },
    {
        "question_id": 1205,
        "answer_sql": "SELECT Sculptures.title FROM Sculptures INNER JOIN Paintings ON Sculptures.sculptorID = Paintings.painterID WHERE Paintings.location = 'Gallery 226';"
    },
    {
        "question_id": 1206,
        "answer_sql": "SELECT Paintings.title, Paintings.location FROM Paintings INNER JOIN Artists ON Paintings.painterID = Artists.artistID;"
    },
    {
        "question_id": 1207,
        "answer_sql": "SELECT Paintings.title, Paintings.location FROM Paintings INNER JOIN Artists ON Paintings.painterID = Artists.artistID;"
    },
    {
        "question_id": 1208,
        "answer_sql": "SELECT Sculptures.title, Sculptures.location FROM Sculptures INNER JOIN Artists ON Sculptures.sculptorID = Artists.artistID;"
    },
    {
        "question_id": 1209,
        "answer_sql": "SELECT Sculptures.title, Sculptures.location FROM Sculptures INNER JOIN Artists ON Sculptures.sculptorID = Artists.artistID;"
    },
    {
        "question_id": 1210,
        "answer_sql": "SELECT medium FROM Paintings WHERE paintingID = 80;"
    },
    {
        "question_id": 1211,
        "answer_sql": "SELECT medium FROM Paintings WHERE paintingID = 80;"
    },
    {
        "question_id": 1212,
        "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear > 1850;"
    },
    {
        "question_id": 1213,
        "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear > 1850;"
    },
    {
        "question_id": 1214,
        "answer_sql": ""
    },
    {
        "question_id": 1215,
        "answer_sql": ""
    },
    {
        "question_id": 1216,
        "answer_sql": "SELECT DISTINCT a.fname, a.lname FROM Artists a JOIN Sculptures s ON a.artistID = s.sculptorID WHERE s.year < 1900;"
    },
    {
        "question_id": 1217,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a JOIN Sculptures s ON a.artistID = s.sculptorID WHERE s.year < 1900;"
    },
    {
        "question_id": 1218,
        "answer_sql": "SELECT DISTINCT Artists.fname, Artists.lname, Artists.birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.year > 1920;"
    },
    {
        "question_id": 1219,
        "answer_sql": "SELECT DISTINCT Artists.fname, Artists.lname, Artists.birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.year > 1920;"
    },
    {
        "question_id": 1220,
        "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear = (SELECT MIN(birthYear) FROM Artists);"
    },
    {
        "question_id": 1221,
        "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear = (SELECT MIN(birthYear) FROM Artists);"
    },
    {
        "question_id": 1222,
        "answer_sql": "SELECT MIN(2022 - birthYear) as Shortest_Life FROM Artists;"
    },
    {
        "question_id": 1223,
        "answer_sql": "SELECT artistID, fname, lname, birthYear FROM Artists WHERE birthYear = (SELECT MIN(birthYear) FROM Artists);"
    },
    {
        "question_id": 1224,
        "answer_sql": "SELECT fname, CASE WHEN deathYear IS NULL THEN 2022 - birthYear ELSE deathYear - birthYear END AS age FROM Artists ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1225,
        "answer_sql": "SELECT fname, MAX(birthYear) - birthYear AS age FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.artistID ORDER BY age DESC LIMIT 1;"
    },
    {
        "question_id": 1226,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE location = 'Gallery 240';"
    },
    {
        "question_id": 1227,
        "answer_sql": "SELECT COUNT(Paintings.paintingID) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.artistID = 240;"
    },
    {
        "question_id": 1228,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE painterID IN ( SELECT artistID FROM Artists WHERE deathYear IS NULL )"
    },
    {
        "question_id": 1229,
        "answer_sql": "SELECT COUNT(*) as painting_count FROM Paintings WHERE painterID IN ( SELECT artistID FROM Artists WHERE deathYear IS NULL )"
    },
    {
        "question_id": 1230,
        "answer_sql": "SELECT Paintings.title, Paintings.year FROM Paintings INNER JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Mary';"
    },
    {
        "question_id": 1231,
        "answer_sql": "SELECT Paintings.title, Paintings.year FROM Paintings INNER JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Mary';"
    },
    {
        "question_id": 1232,
        "answer_sql": "SELECT Paintings.width_mm FROM Paintings INNER JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.birthYear < 1850;"
    },
    {
        "question_id": 1233,
        "answer_sql": "SELECT Paintings.width_mm FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.birthYear < 1850;"
    },
    {
        "question_id": 1234,
        "answer_sql": "SELECT Paintings.location, Paintings.medium FROM Paintings INNER JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo';"
    },
    {
        "question_id": 1235,
        "answer_sql": "SELECT Paintings.location, Paintings.medium FROM Paintings INNER JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo';"
    },
    {
        "question_id": 1236,
        "answer_sql": "SELECT A.fname, A.lname FROM Artists A WHERE EXISTS ( SELECT 1 FROM Paintings P WHERE A.artistID = P.painterID ) AND EXISTS ( SELECT 1 FROM Sculptures S WHERE A.artistID = S.sculptorID );"
    },
    {
        "question_id": 1237,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a WHERE EXISTS ( SELECT 1 FROM Paintings p WHERE p.painterID = a.artistID ) AND EXISTS ( SELECT 1 FROM Sculptures s WHERE s.sculptorID = a.artistID );"
    },
    {
        "question_id": 1238,
        "answer_sql": ""
    },
    {
        "question_id": 1239,
        "answer_sql": ""
    },
    {
        "question_id": 1240,
        "answer_sql": ""
    },
    {
        "question_id": 1241,
        "answer_sql": "SELECT Artists.birthYear FROM Artists INNER JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year = 1884;"
    },
    {
        "question_id": 1242,
        "answer_sql": ""
    },
    {
        "question_id": 1243,
        "answer_sql": "SELECT fname FROM Artists WHERE artistID IN ( SELECT painterID FROM Paintings WHERE location = 'Gallery 241' );"
    },
    {
        "question_id": 1244,
        "answer_sql": "SELECT medium, COUNT(*) as number_of_works FROM Paintings WHERE medium IS NOT NULL GROUP BY medium UNION ALL SELECT medium, COUNT(*) as number_of_works FROM Sculptures WHERE medium IS NOT NULL GROUP BY medium;"
    },
    {
        "question_id": 1245,
        "answer_sql": "SELECT medium, COUNT(*) as count FROM Paintings WHERE medium IS NOT NULL GROUP BY medium UNION ALL SELECT medium, COUNT(*) as count FROM Sculptures WHERE medium IS NOT NULL GROUP BY medium;"
    },
    {
        "question_id": 1246,
        "answer_sql": "SELECT medium, AVG(height_mm) as average_height FROM Paintings GROUP BY medium;"
    },
    {
        "question_id": 1247,
        "answer_sql": "SELECT medium, AVG(height_mm) as average_height FROM Paintings GROUP BY medium;"
    },
    {
        "question_id": 1248,
        "answer_sql": "SELECT location, COUNT(*) as painting_count FROM Paintings WHERE year < 1900 GROUP BY location;"
    },
    {
        "question_id": 1249,
        "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE year < 1900 AND location IS NOT NULL;"
    },
    {
        "question_id": 1250,
        "answer_sql": "SELECT title FROM Paintings WHERE year > 1910 AND medium = 'oil';"
    },
    {
        "question_id": 1251,
        "answer_sql": "SELECT Paintings.title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.year > 1910 AND Paintings.medium = 'oil';"
    },
    {
        "question_id": 1252,
        "answer_sql": ""
    },
    {
        "question_id": 1253,
        "answer_sql": ""
    },
    {
        "question_id": 1254,
        "answer_sql": ""
    },
    {
        "question_id": 1255,
        "answer_sql": ""
    },
    {
        "question_id": 1256,
        "answer_sql": "SELECT DISTINCT paintingID FROM Paintings WHERE year < (SELECT year FROM Paintings WHERE location = 'Gallery 240')"
    },
    {
        "question_id": 1257,
        "answer_sql": "SELECT DISTINCT paintingID FROM Paintings WHERE year > 1800 AND paintingID IN (SELECT paintingID FROM Paintings WHERE location = 'Gallery 240');"
    },
    {
        "question_id": 1258,
        "answer_sql": "SELECT MAX(year) AS oldest_painting_year FROM Paintings;"
    },
    {
        "question_id": 1259,
        "answer_sql": "SELECT paintingID FROM Paintings ORDER BY year ASC LIMIT 1;"
    },
    {
        "question_id": 1260,
        "answer_sql": "SELECT a.fname, a.lname FROM Artists a JOIN Sculptures s ON a.artistID = s.sculptorID WHERE s.title LIKE '%female%';"
    },
    {
        "question_id": 1261,
        "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.title LIKE '%female%';"
    },
    {
        "question_id": 1262,
        "answer_sql": "SELECT DISTINCT Paintings.title FROM Paintings ORDER BY Paintings.title ASC;"
    },
    {
        "question_id": 1263,
        "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY title ASC;"
    },
    {
        "question_id": 1264,
        "answer_sql": "SELECT Paintings.title, Paintings.height_mm FROM Paintings ORDER BY Paintings.height_mm;"
    },
    {
        "question_id": 1265,
        "answer_sql": "SELECT title FROM Paintings ORDER BY height_mm ASC;"
    },
    {
        "question_id": 1266,
        "answer_sql": "SELECT P.title, S.title FROM Paintings P JOIN Sculptures S ON P.painterID = S.sculptorID WHERE P.year BETWEEN 1900 AND 1950 AND S.year BETWEEN 1900 AND 1950;"
    },
    {
        "question_id": 1267,
        "answer_sql": "SELECT Paintings.title, Sculptures.title FROM Paintings JOIN Sculptures ON Paintings.painterID = Sculptures.sculptorID WHERE Paintings.year BETWEEN 1900 AND 1950;"
    },
    {
        "question_id": 1268,
        "answer_sql": "SELECT Paintings.title, Sculptures.title FROM Paintings INNER JOIN Sculptures ON Paintings.painterID = Sculptures.sculptorID WHERE Paintings.painterID = 222;"
    },
    {
        "question_id": 1269,
        "answer_sql": "SELECT title FROM Paintings WHERE painterID = 222;"
    },
    {
        "question_id": 1270,
        "answer_sql": ""
    },
    {
        "question_id": 1271,
        "answer_sql": "SELECT artistID FROM Artists WHERE artistID IN ( SELECT painterID FROM Paintings WHERE year < 1900 ) GROUP BY artistID ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1272,
        "answer_sql": "SELECT fname FROM Artists WHERE artistID IN ( SELECT sculptorID FROM Sculptures GROUP BY sculptorID ORDER BY COUNT(sculptureID) DESC LIMIT 1 );"
    },
    {
        "question_id": 1273,
        "answer_sql": "SELECT fname FROM Artists WHERE artistID = ( SELECT sculptorID FROM Sculptures GROUP BY sculptorID ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1274,
        "answer_sql": "SELECT title FROM Paintings WHERE (width_mm < 600 OR height_mm > 800);"
    },
    {
        "question_id": 1275,
        "answer_sql": ""
    },
    {
        "question_id": 1276,
        "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 OR year > 1930;"
    },
    {
        "question_id": 1277,
        "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 OR year > 1930;"
    },
    {
        "question_id": 1278,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1279,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"
    },
    {
        "question_id": 1280,
        "answer_sql": ""
    },
    {
        "question_id": 1281,
        "answer_sql": ""
    },
    {
        "question_id": 1282,
        "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 OR year > 1930;"
    },
    {
        "question_id": 1283,
        "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 OR (year > 1930 AND year IS NOT NULL) UNION SELECT location FROM Sculptures WHERE year < 1885 OR (year > 1930 AND year IS NOT NULL);"
    },
    {
        "question_id": 1284,
        "answer_sql": "SELECT AVG(Paintings.height_mm) AS AverageHeight, AVG(Paintings.width_mm) AS AverageWidth FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.medium = 'oil' AND Paintings.location = 'Gallery 241';"
    },
    {
        "question_id": 1285,
        "answer_sql": "SELECT AVG(Paintings.height_mm) AS AverageHeight, AVG(Paintings.width_mm) AS AverageWidth FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.medium = 'oil' AND Paintings.location = 'gallery 241';"
    },
    {
        "question_id": 1286,
        "answer_sql": "SELECT MAX(height_mm), paintingID FROM Paintings WHERE year < 1900"
    },
    {
        "question_id": 1287,
        "answer_sql": "SELECT height_mm, paintingID FROM Paintings WHERE height_mm = (SELECT MAX(height_mm) FROM Paintings WHERE year < 1900);"
    },
    {
        "question_id": 1288,
        "answer_sql": "SELECT year, MAX(height_mm) as max_height, MAX(width_mm) as max_width FROM Paintings GROUP BY year;"
    },
    {
        "question_id": 1289,
        "answer_sql": "SELECT year, MAX(height_mm) as max_height, MAX(width_mm) as max_width FROM Paintings GROUP BY year;"
    },
    {
        "question_id": 1290,
        "answer_sql": "SELECT A.fname || ' ' || A.lname AS painter, AVG(P.height_mm) AS average_height, AVG(P.width_mm) AS average_width FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.artistID ORDER BY painter;"
    },
    {
        "question_id": 1291,
        "answer_sql": "SELECT A.fname || ' ' || A.lname AS painter, AVG(P.height_mm) AS average_height, AVG(P.width_mm) AS average_width FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.artistID ORDER BY painter;"
    },
    {
        "question_id": 1292,
        "answer_sql": "SELECT A.fname, COUNT(P.paintingID) as painting_count FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.fname HAVING COUNT(P.paintingID) >= 2;"
    },
    {
        "question_id": 1293,
        "answer_sql": "SELECT A.fname, COUNT(P.paintingID) as painting_count FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.artistID, A.fname HAVING COUNT(P.paintingID) >= 2;"
    },
    {
        "question_id": 1294,
        "answer_sql": "SELECT a.artistID, a.lname, a.fname, a.birthYear, a.deathYear FROM Artists a WHERE (SELECT COUNT(*) FROM Paintings p WHERE p.painterID = a.artistID) <= 3;"
    },
    {
        "question_id": 1295,
        "answer_sql": "SELECT A.lname, A.fname, A.birthYear, A.deathYear FROM Artists A WHERE ( SELECT COUNT(*) FROM Paintings P WHERE P.painterID = A.artistID ) < 4;"
    },
    {
        "question_id": 1296,
        "answer_sql": "SELECT A.artistID, A.lname, A.birthYear, A.deathYear, COUNT(S.sculptureID) as num_sculptures FROM Artists A LEFT JOIN Sculptures S ON A.artistID = S.sculptorID GROUP BY A.artistID ORDER BY num_sculptures LIMIT 1;"
    },
    {
        "question_id": 1297,
        "answer_sql": "SELECT A.lname, A.fname, COUNT(S.sculptureID) as num_sculptures FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID GROUP BY A.artistID ORDER BY num_sculptures LIMIT 1;"
    },
    {
        "question_id": 1298,
        "answer_sql": "SELECT paintingID, height_mm FROM Paintings WHERE width_mm = ( SELECT MAX(width_mm) FROM Paintings WHERE location = 'Gallery 240' );"
    },
    {
        "question_id": 1299,
        "answer_sql": ""
    },
    {
        "question_id": 1300,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE year < 2000 AND location = 'Gallery 240';"
    },
    {
        "question_id": 1301,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE year < (SELECT MIN(year) FROM Paintings WHERE location = 'Gallery 240');"
    },
    {
        "question_id": 1302,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900);"
    },
    {
        "question_id": 1303,
        "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900);"
    },
    {
        "question_id": 1304,
        "answer_sql": "SELECT a.fname, a.lname, COUNT(p.paintingID) as painting_count FROM Artists a JOIN Paintings p ON a.artistID = p.painterID WHERE p.medium = 'oil' GROUP BY a.artistID ORDER BY painting_count DESC LIMIT 3;"
    },
    {
        "question_id": 1305,
        "answer_sql": "SELECT a.fname, a.lname, COUNT(p.paintingID) as painting_count FROM Artists a JOIN Paintings p ON a.artistID = p.painterID GROUP BY a.artistID ORDER BY painting_count DESC LIMIT 1;"
    },
    {
        "question_id": 1306,
        "answer_sql": ""
    },
    {
        "question_id": 1307,
        "answer_sql": "SELECT Paintings.paintingID, Paintings.location, Paintings.title, Paintings.year FROM Paintings WHERE Paintings.medium = 'oil' ORDER BY Paintings.year;"
    },
    {
        "question_id": 1308,
        "answer_sql": "SELECT year, location, title FROM Paintings WHERE height_mm > 1000 ORDER BY title;"
    },
    {
        "question_id": 1309,
        "answer_sql": "SELECT P.year, P.location, A.fname, A.lname FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.height_mm > 1000 ORDER BY P.year, P.location, A.lname, A.fname;"
    },
    {
        "question_id": 1310,
        "answer_sql": "SELECT A.fname, A.lname FROM Artists A WHERE A.artistID IN ( SELECT P.painterID FROM Paintings P LEFT JOIN Sculptures S ON P.painterID = S.sculptorID WHERE S.sculptorID IS NULL )"
    },
    {
        "question_id": 1311,
        "answer_sql": "SELECT A.fname, A.lname FROM Artists A WHERE A.artistID NOT IN ( SELECT S.sculptorID FROM Sculptures S ) AND A.artistID IN ( SELECT P.painterID FROM Paintings P );"
    },
    {
        "question_id": 1312,
        "answer_sql": ""
    },
    {
        "question_id": 1313,
        "answer_sql": ""
    },
    {
        "question_id": 1314,
        "answer_sql": "SELECT COUNT(*) FROM race;"
    },
    {
        "question_id": 1315,
        "answer_sql": "SELECT COUNT(DISTINCT Road) as Number_of_Races FROM race;"
    },
    {
        "question_id": 1316,
        "answer_sql": "SELECT d.Driver_Name, r.Winning_team FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID ORDER BY r.Winning_team ASC;"
    },
    {
        "question_id": 1317,
        "answer_sql": "SELECT d.Driver_Name, r.Winning_team FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID ORDER BY r.Winning_team ASC;"
    },
    {
        "question_id": 1318,
        "answer_sql": "SELECT d.Driver_Name FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID WHERE r.Pole_Position <> 'Junior Strous' GROUP BY d.Driver_Name HAVING COUNT(DISTINCT r.Road) >= 2;"
    },
    {
        "question_id": 1319,
        "answer_sql": ""
    },
    {
        "question_id": 1320,
        "answer_sql": "SELECT d.Constructor, d.Age FROM driver d ORDER BY d.Age ASC;"
    },
    {
        "question_id": 1321,
        "answer_sql": "SELECT DISTINCT Constructor FROM driver ORDER BY Age ASC;"
    },
    {
        "question_id": 1322,
        "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;"
    },
    {
        "question_id": 1323,
        "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;"
    },
    {
        "question_id": 1324,
        "answer_sql": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM driver;"
    },
    {
        "question_id": 1325,
        "answer_sql": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM driver;"
    },
    {
        "question_id": 1326,
        "answer_sql": "SELECT COUNT(DISTINCT Engine ) as Number_of_Different_Engines FROM driver WHERE Age > 30 OR Age < 20;"
    },
    {
        "question_id": 1327,
        "answer_sql": "SELECT COUNT(DISTINCT Engine ) as Number_of_Different_Engines FROM driver WHERE Age >= 20 OR Age <= 30;"
    },
    {
        "question_id": 1328,
        "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;"
    },
    {
        "question_id": 1329,
        "answer_sql": "SELECT d.Driver_Name FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID ORDER BY d.Driver_Name DESC;"
    },
    {
        "question_id": 1330,
        "answer_sql": "SELECT d.Driver_Name, r.Race_Name FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID;"
    },
    {
        "question_id": 1331,
        "answer_sql": "SELECT driver.Driver_Name, race.Race_Name FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID;"
    },
    {
        "question_id": 1332,
        "answer_sql": "SELECT d.Driver_Name, COUNT(r.Road) as Number_of_Races FROM driver as d JOIN race as r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_Name;"
    },
    {
        "question_id": 1333,
        "answer_sql": "SELECT d.Driver_ID, d.Driver_Name, COUNT(r.Road) as Number_of_Races FROM driver d LEFT JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_ID, d.Driver_Name;"
    },
    {
        "question_id": 1334,
        "answer_sql": "SELECT A.Driver_ID, A.Driver_Name, COUNT(B.Road) as Number_of_Races FROM driver A JOIN race B ON A.Driver_ID = B.Driver_ID GROUP BY A.Driver_ID, A.Driver_Name ORDER BY Number_of_Races DESC LIMIT 1;"
    },
    {
        "question_id": 1335,
        "answer_sql": "SELECT Age FROM driver WHERE Driver_ID IN ( SELECT Driver_ID FROM race GROUP BY Driver_ID ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1336,
        "answer_sql": "SELECT d.Driver_Name, d.Age FROM driver d WHERE d.Driver_ID IN ( SELECT r.Driver_ID FROM race r GROUP BY r.Driver_ID HAVING COUNT(*) >= 2 );"
    },
    {
        "question_id": 1337,
        "answer_sql": "SELECT d.Driver_Name, d.Age FROM driver d WHERE d.Driver_ID IN ( SELECT r.Driver_ID FROM race r GROUP BY r.Driver_ID HAVING COUNT(*) >= 2 );"
    },
    {
        "question_id": 1338,
        "answer_sql": "SELECT r.Road, r.Race_Name FROM race r JOIN driver d ON r.Driver_ID = d.Driver_ID WHERE d.Age >= 26;"
    },
    {
        "question_id": 1339,
        "answer_sql": "SELECT race.Race_Name FROM race WHERE race.Driver_ID IN ( SELECT driver.Driver_ID FROM driver WHERE driver.Age >= 26 );"
    },
    {
        "question_id": 1340,
        "answer_sql": "SELECT d.Driver_Name FROM driver d WHERE d.Constructor <> 'Bugatti';"
    },
    {
        "question_id": 1341,
        "answer_sql": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race WHERE Constructor = 'Bugatti');"
    },
    {
        "question_id": 1342,
        "answer_sql": "SELECT Constructor, COUNT(*) as Number_of_Drivers FROM driver GROUP BY Constructor;"
    },
    {
        "question_id": 1343,
        "answer_sql": "SELECT Constructor, COUNT(*) as Number_of_Drivers FROM driver GROUP BY Constructor;"
    },
    {
        "question_id": 1344,
        "answer_sql": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1345,
        "answer_sql": ""
    },
    {
        "question_id": 1346,
        "answer_sql": "SELECT DISTINCT Engine FROM driver WHERE Driver_ID IN ( SELECT Driver_ID FROM race GROUP BY Driver_ID HAVING COUNT(DISTINCT Road) >= 2 );"
    },
    {
        "question_id": 1347,
        "answer_sql": "SELECT DISTINCT Engine FROM driver WHERE Driver_ID IN ( SELECT Driver_ID FROM race GROUP BY Driver_ID HAVING COUNT(DISTINCT Road) >= 2 );"
    },
    {
        "question_id": 1348,
        "answer_sql": "SELECT d.Driver_Name FROM driver d WHERE NOT EXISTS ( SELECT 1 FROM race r WHERE r.Driver_ID = d.Driver_ID );"
    },
    {
        "question_id": 1349,
        "answer_sql": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race);"
    },
    {
        "question_id": 1350,
        "answer_sql": ""
    },
    {
        "question_id": 1351,
        "answer_sql": ""
    },
    {
        "question_id": 1352,
        "answer_sql": "SELECT D.Driver_Name, COUNT(DISTINCT R.Road) as Wins FROM driver D JOIN race R ON D.Driver_ID = R.Driver_ID GROUP BY D.Driver_Name HAVING COUNT(DISTINCT R.Road) > 1;"
    },
    {
        "question_id": 1353,
        "answer_sql": "SELECT d.Constructor, COUNT(r.Road) as Number_of_Races_Won FROM driver as d JOIN race as r ON d.Driver_ID = r.Driver_ID GROUP BY d.Constructor HAVING COUNT(r.Road) > 1;"
    },
    {
        "question_id": 1354,
        "answer_sql": "SELECT d.Driver_Name FROM driver d WHERE d.Driver_ID IN ( SELECT r.Driver_ID FROM race r WHERE r.Pole_Position = 'James Hinchcliffe' OR r.Pole_Position = 'Carl Skerlong' GROUP BY r.Driver_ID HAVING COUNT(DISTINCT Pole_Position) = 2 );"
    },
    {
        "question_id": 1355,
        "answer_sql": "SELECT D.Driver_Name FROM driver D WHERE D.Driver_ID IN ( SELECT R.Driver_ID FROM race R WHERE R.Pole_Position = 'James Hinchcliffe' OR R.Pole_Position = 'Carl Skerlong' );"
    },
    {
        "question_id": 1356,
        "answer_sql": "SELECT d.Driver_Name FROM driver d WHERE d.Driver_ID NOT IN ( SELECT r.Driver_ID FROM race r WHERE r.Pole_Position = 'James Hinchcliffe' );"
    },
    {
        "question_id": 1357,
        "answer_sql": "SELECT d.Driver_Name FROM driver d WHERE d.Driver_ID NOT IN ( SELECT r.Driver_ID FROM race r WHERE r.Pole_Position = 'James Hinchcliffe' );"
    },
    {
        "question_id": 1358,
        "answer_sql": "SELECT COUNT(*) as total_languages FROM languages;"
    },
    {
        "question_id": 1359,
        "answer_sql": "SELECT COUNT(*) FROM languages;"
    },
    {
        "question_id": 1360,
        "answer_sql": "SELECT name FROM languages ORDER BY name ASC;"
    },
    {
        "question_id": 1361,
        "answer_sql": "SELECT name FROM languages ORDER BY name ASC;"
    },
    {
        "question_id": 1362,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id WHERE l.name LIKE '%ish%';"
    },
    {
        "question_id": 1363,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id WHERE l.name LIKE '%ish%';"
    },
    {
        "question_id": 1364,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1365,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.overall_score DESC;"
    },
    {
        "question_id": 1366,
        "answer_sql": "SELECT AVG(justice_score) as average_justice_score FROM countries;"
    },
    {
        "question_id": 1367,
        "answer_sql": "SELECT AVG( countries . justice_score ) FROM countries INNER JOIN official_languages ON countries . id = official_languages . country_id WHERE official_languages . language_id = (SELECT id FROM languages WHERE name = 'English');"
    },
    {
        "question_id": 1368,
        "answer_sql": "SELECT MAX(health_score) AS max_health_score, MIN(health_score) AS min_health_score FROM countries WHERE name != 'Norway';"
    },
    {
        "question_id": 1369,
        "answer_sql": "SELECT MAX(health_score) AS MaxHealthScore, MIN(health_score) AS MinHealthScore FROM countries WHERE name != 'Norway';"
    },
    {
        "question_id": 1370,
        "answer_sql": "SELECT COUNT(DISTINCT official_languages.language_id) as num_different_languages FROM official_languages;"
    },
    {
        "question_id": 1371,
        "answer_sql": "SELECT COUNT(DISTINCT official_languages.language_id) as num_different_languages FROM official_languages;"
    },
    {
        "question_id": 1372,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.education_score DESC;"
    },
    {
        "question_id": 1373,
        "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.education_score DESC;"
    },
    {
        "question_id": 1374,
        "answer_sql": "SELECT c.name FROM countries c WHERE c.politics_score = ( SELECT MAX(c2.politics_score) FROM countries c2 );"
    },
    {
        "question_id": 1375,
        "answer_sql": "SELECT c.name FROM countries c WHERE c.politics_score = (SELECT MAX(c2.politics_score) FROM countries c2);"
    },
    {
        "question_id": 1376,
        "answer_sql": "SELECT countries.name, languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id;"
    },
    {
        "question_id": 1377,
        "answer_sql": "SELECT countries.name AS country_name, languages.name AS language_name FROM official_languages INNER JOIN countries ON official_languages.country_id = countries.id INNER JOIN languages ON official_languages.language_id = languages.id;"
    },
    {
        "question_id": 1378,
        "answer_sql": "SELECT l.name AS official_language, COUNT(ol.country_id) AS number_of_countries FROM official_languages AS ol JOIN languages AS l ON ol.language_id = l.id GROUP BY l.name;"
    },
    {
        "question_id": 1379,
        "answer_sql": "SELECT l.name AS 'Official Language', COUNT(distinct c.id) AS 'Number of Countries' FROM official_languages AS ol JOIN languages AS l ON ol.language_id = l.id JOIN countries AS c ON ol.country_id = c.id GROUP BY ol.language_id;"
    },
    {
        "question_id": 1380,
        "answer_sql": "SELECT l.name AS official_language, COUNT(ol.country_id) AS number_of_countries FROM official_languages AS ol JOIN languages AS l ON ol.language_id = l.id GROUP BY ol.language_id ORDER BY number_of_countries DESC LIMIT 1;"
    },
    {
        "question_id": 1381,
        "answer_sql": "SELECT l.name FROM languages l WHERE l.id = ( SELECT language_id FROM official_languages GROUP BY language_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1382,
        "answer_sql": "SELECT l.name AS official_language FROM languages AS l JOIN official_languages AS ol ON l.id = ol.language_id GROUP BY l.name HAVING COUNT(DISTINCT ol.country_id) >= 2;"
    },
    {
        "question_id": 1383,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name HAVING COUNT(DISTINCT ol.country_id) >= 2;"
    },
    {
        "question_id": 1384,
        "answer_sql": "SELECT AVG(countries.overall_score) FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id WHERE languages.name = 'English';"
    },
    {
        "question_id": 1385,
        "answer_sql": "SELECT AVG(countries.overall_score) FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id WHERE languages.name = 'English';"
    },
    {
        "question_id": 1386,
        "answer_sql": "SELECT l.name, COUNT(*) as count FROM official_languages as o JOIN languages as l ON o.language_id = l.id GROUP BY o.language_id ORDER BY count DESC LIMIT 3;"
    },
    {
        "question_id": 1387,
        "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY COUNT(*) DESC LIMIT 3;"
    },
    {
        "question_id": 1388,
        "answer_sql": "SELECT l.name AS official_language, AVG(c.overall_score) AS average_score FROM official_languages AS ol JOIN languages AS l ON ol.language_id = l.id JOIN countries AS c ON ol.country_id = c.id GROUP BY ol.language_id ORDER BY average_score DESC;"
    },
    {
        "question_id": 1389,
        "answer_sql": "SELECT l.name AS official_language, AVG(c.overall_score) AS average_score FROM official_languages AS ol JOIN languages AS l ON ol.language_id = l.id JOIN countries AS c ON ol.country_id = c.id GROUP BY ol.language_id ORDER BY average_score DESC;"
    },
    {
        "question_id": 1390,
        "answer_sql": "SELECT c.name FROM countries c WHERE c.id IN ( SELECT ol.country_id FROM official_languages ol GROUP BY ol.country_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1391,
        "answer_sql": "SELECT c.name FROM countries c JOIN ( SELECT ol.country_id FROM official_languages ol GROUP BY ol.country_id ORDER BY COUNT(*) DESC LIMIT 1 ) ol ON c.id = ol.country_id;"
    },
    {
        "question_id": 1392,
        "answer_sql": ""
    },
    {
        "question_id": 1393,
        "answer_sql": ""
    },
    {
        "question_id": 1394,
        "answer_sql": ""
    },
    {
        "question_id": 1395,
        "answer_sql": ""
    },
    {
        "question_id": 1396,
        "answer_sql": "SELECT l.name FROM languages AS l JOIN official_languages AS ol ON l.id = ol.language_id WHERE ol.country_id IN ( SELECT c.id FROM countries AS c WHERE c.overall_score > 95 ) AND l.id IN ( SELECT ol.language_id FROM official_languages AS ol WHERE ol.country_id IN ( SELECT c.id FROM countries AS c WHERE c.overall_score < 90 ) );"
    },
    {
        "question_id": 1397,
        "answer_sql": ""
    },
    {
        "question_id": 1398,
        "answer_sql": "SELECT DISTINCT country, town_city FROM Addresses;"
    },
    {
        "question_id": 1399,
        "answer_sql": "SELECT Addresses.country, Addresses.town_city FROM Addresses INNER JOIN Users ON Addresses.address_id = Users.user_address_id;"
    },
    {
        "question_id": 1400,
        "answer_sql": "SELECT DISTINCT town_city FROM Properties INNER JOIN Addresses ON Properties.property_address_id = Addresses.address_id;"
    },
    {
        "question_id": 1401,
        "answer_sql": "SELECT DISTINCT town_city FROM Users INNER JOIN Addresses ON Users.user_address_id = Addresses.address_id;"
    },
    {
        "question_id": 1402,
        "answer_sql": "SELECT feature_name, feature_description FROM Features WHERE feature_name = 'rooftop';"
    },
    {
        "question_id": 1403,
        "answer_sql": "SELECT `feature_description` FROM `Features` WHERE `feature_name` = 'rooftop';"
    },
    {
        "question_id": 1404,
        "answer_sql": "SELECT Features.feature_name, Features.feature_description FROM Features JOIN Property_Features ON Features.feature_id = Property_Features.feature_id GROUP BY Features.feature_name, Features.feature_description ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1405,
        "answer_sql": ""
    },
    {
        "question_id": 1406,
        "answer_sql": "SELECT MIN(room_count) as min_rooms FROM Properties;"
    },
    {
        "question_id": 1407,
        "answer_sql": "SELECT MIN(room_count) as Lowest_Room_Count FROM Properties;"
    },
    {
        "question_id": 1408,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE parking_lots = '1' OR garage_yn = '1';"
    },
    {
        "question_id": 1409,
        "answer_sql": "SELECT COUNT(*) FROM Properties WHERE garage_yn = 'Y' OR parking_lots = 'Y';"
    },
    {
        "question_id": 1410,
        "answer_sql": ""
    },
    {
        "question_id": 1411,
        "answer_sql": "SELECT Ref_Age_Categories.age_category_description FROM Ref_Age_Categories JOIN Users ON Ref_Age_Categories.age_category_code = Users.age_category_code WHERE Users.user_category_code IN ( SELECT Ref_User_Categories.user_category_code FROM Ref_User_Categories WHERE Ref_User_Categories.user_category_description LIKE '%Mother%' )"
    },
    {
        "question_id": 1412,
        "answer_sql": "SELECT U.first_name FROM Users U WHERE U.user_id IN ( SELECT UP.user_id FROM User_Property_History UP GROUP BY UP.user_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1413,
        "answer_sql": "SELECT U.first_name FROM Users U WHERE U.user_id IN ( SELECT UP.user_id FROM User_Property_History UP GROUP BY UP.user_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1414,
        "answer_sql": "SELECT AVG(room_count) as average_room_count FROM Properties WHERE property_id IN ( SELECT property_id FROM Rooms WHERE room_type_code = 'GARDEN' );"
    },
    {
        "question_id": 1415,
        "answer_sql": "SELECT AVG(property_count) as average_rooms FROM ( SELECT p.property_id, COUNT(*) as property_count FROM Properties p INNER JOIN Rooms r ON p.property_id = r.property_id INNER JOIN Features f ON p.property_id = f.feature_id WHERE f.feature_name = 'Garden' GROUP BY p.property_id ) as garden_properties;"
    },
    {
        "question_id": 1416,
        "answer_sql": ""
    },
    {
        "question_id": 1417,
        "answer_sql": ""
    },
    {
        "question_id": 1418,
        "answer_sql": "SELECT property_id, vendor_requested_price FROM Properties ORDER BY vendor_requested_price ASC LIMIT 1;"
    },
    {
        "question_id": 1419,
        "answer_sql": "SELECT property_id, vendor_requested_price FROM Properties ORDER BY vendor_requested_price ASC LIMIT 1;"
    },
    {
        "question_id": 1420,
        "answer_sql": "SELECT AVG(room_count) as average_rooms FROM Properties;"
    },
    {
        "question_id": 1421,
        "answer_sql": "SELECT AVG(room_count) as average_rooms FROM Properties;"
    },
    {
        "question_id": 1422,
        "answer_sql": "SELECT COUNT(DISTINCT room_size) as num_room_sizes FROM Rooms;"
    },
    {
        "question_id": 1423,
        "answer_sql": "SELECT COUNT(DISTINCT `Rooms`.`room_size`) as `Number of Different Room Sizes` FROM `Rooms`;"
    },
    {
        "question_id": 1424,
        "answer_sql": "SELECT Users.user_id, User_Searches.search_string FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id GROUP BY Users.user_id HAVING COUNT(DISTINCT User_Searches.search_seq) >= 2;"
    },
    {
        "question_id": 1425,
        "answer_sql": "SELECT U.user_id, US.search_seq FROM Users U JOIN ( SELECT user_id, search_seq FROM User_Searches GROUP BY user_id HAVING COUNT(*) >= 2 ) US ON U.user_id = US.user_id;"
    },
    {
        "question_id": 1426,
        "answer_sql": ""
    },
    {
        "question_id": 1427,
        "answer_sql": "SELECT search_datetime FROM User_Searches ORDER BY search_datetime DESC LIMIT 1;"
    },
    {
        "question_id": 1428,
        "answer_sql": "SELECT U.user_id, U.first_name, U.last_name, US.search_datetime, US.search_string FROM Users U JOIN User_Searches US ON U.user_id = US.user_id ORDER BY US.search_string DESC;"
    },
    {
        "question_id": 1429,
        "answer_sql": "SELECT Users.login_name, User_Searches.search_string, User_Searches.search_datetime FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id ORDER BY User_Searches.search_string DESC;"
    },
    {
        "question_id": 1430,
        "answer_sql": "SELECT a.zip_postcode FROM Addresses a WHERE ( SELECT COUNT(*) FROM Properties p WHERE p.property_address_id = a.address_id AND p.owner_user_id IN ( SELECT u.user_id FROM Users u WHERE u.age_category_code = 'Minor' ) ) <= 2;"
    },
    {
        "question_id": 1431,
        "answer_sql": "SELECT a.zip_postcode FROM Addresses a WHERE a.address_id NOT IN ( SELECT uph.user_id FROM Users u JOIN User_Property_History uph ON u.user_id = uph.user_id GROUP BY uph.user_id HAVING COUNT(DISTINCT uph.property_id) <= 2 );"
    },
    {
        "question_id": 1432,
        "answer_sql": "SELECT Users.user_category_code, Users.user_id FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id GROUP BY Users.user_category_code, Users.user_id HAVING COUNT(User_Searches.search_seq) = 1;"
    },
    {
        "question_id": 1433,
        "answer_sql": "SELECT Users.user_id, Ref_User_Categories.user_category_code FROM Users INNER JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code WHERE Users.user_id IN ( SELECT User_Searches.user_id FROM User_Searches GROUP BY User_Searches.user_id HAVING COUNT(User_Searches.search_seq) = 1 )"
    },
    {
        "question_id": 1434,
        "answer_sql": "SELECT Ref_Age_Categories.age_category_description FROM Users JOIN Ref_Age_Categories ON Users.age_category_code = Ref_Age_Categories.age_category_code WHERE Users.user_id = ( SELECT User_Searches.user_id FROM User_Searches ORDER BY User_Searches.search_seq LIMIT 1 );"
    },
    {
        "question_id": 1435,
        "answer_sql": "SELECT age_category_code FROM Users WHERE user_id = ( SELECT user_id FROM User_Searches ORDER BY search_datetime ASC LIMIT 1 );"
    },
    {
        "question_id": 1436,
        "answer_sql": ""
    },
    {
        "question_id": 1437,
        "answer_sql": ""
    },
    {
        "question_id": 1438,
        "answer_sql": "SELECT COUNT(*) as total_searches FROM User_Searches WHERE user_id IN ( SELECT user_id FROM Users WHERE is_buyer = 'Y' );"
    },
    {
        "question_id": 1439,
        "answer_sql": "SELECT COUNT(*) as total_searches FROM User_Searches WHERE user_id IN ( SELECT user_id FROM Users WHERE is_buyer = 'Y' );"
    },
    {
        "question_id": 1440,
        "answer_sql": "SELECT Users.date_registered FROM Users WHERE Users.login_name = 'ratione';"
    },
    {
        "question_id": 1441,
        "answer_sql": "SELECT `date_registered` FROM `Users` WHERE `login_name` = 'ratione';"
    },
    {
        "question_id": 1442,
        "answer_sql": "SELECT U.first_name, U.middle_name, U.last_name, U.login_name FROM Users U INNER JOIN Properties P ON U.user_id = P.owner_user_id WHERE U.is_seller = '1';"
    },
    {
        "question_id": 1443,
        "answer_sql": ""
    },
    {
        "question_id": 1444,
        "answer_sql": ""
    },
    {
        "question_id": 1445,
        "answer_sql": ""
    },
    {
        "question_id": 1446,
        "answer_sql": "SELECT COUNT(DISTINCT p.property_id) FROM Properties p JOIN Property_Features pf ON p.property_id = pf.property_id GROUP BY p.property_id HAVING COUNT(DISTINCT pf.feature_id) >= 2;"
    },
    {
        "question_id": 1447,
        "answer_sql": "SELECT COUNT(DISTINCT p.property_id) as num_properties FROM Properties p JOIN Property_Features pf ON p.property_id = pf.property_id GROUP BY p.property_id HAVING COUNT(DISTINCT pf.feature_id) >= 2;"
    },
    {
        "question_id": 1448,
        "answer_sql": "SELECT property_id, COUNT(*) as num_of_photos FROM Property_Photos GROUP BY property_id;"
    },
    {
        "question_id": 1449,
        "answer_sql": "SELECT p.property_id, COUNT(pp.photo_filename) as num_photos FROM Properties p JOIN Property_Photos pp ON p.property_id = pp.property_id GROUP BY p.property_id;"
    },
    {
        "question_id": 1450,
        "answer_sql": "SELECT U.user_id, COUNT(P.property_id) as num_photos FROM Users U JOIN Properties P ON U.user_id = P.owner_user_id GROUP BY U.user_id;"
    },
    {
        "question_id": 1451,
        "answer_sql": "SELECT Users.user_id, COUNT(Properties.property_id) as property_count FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Users.user_id;"
    },
    {
        "question_id": 1452,
        "answer_sql": "SELECT SUM(vendor_requested_price) AS total_max_price FROM Properties JOIN Users ON Properties.owner_user_id = Users.user_id WHERE Users.user_category_code = 'M' OR Users.user_category_code = 'S';"
    },
    {
        "question_id": 1453,
        "answer_sql": "SELECT MAX(price_max) as max_price FROM Properties INNER JOIN Users ON Properties.owner_user_id = Users.user_id INNER JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code WHERE Ref_User_Categories.user_category_description IN ('Single Mothers', 'Students');"
    },
    {
        "question_id": 1454,
        "answer_sql": "SELECT UPH.datestamp, P.property_name FROM User_Property_History UPH INNER JOIN Properties P ON UPH.property_id = P.property_id ORDER BY UPH.datestamp;"
    },
    {
        "question_id": 1455,
        "answer_sql": "SELECT ph.datestamp, p.property_name FROM User_Property_History AS ph JOIN Properties AS p ON ph.property_id = p.property_id ORDER BY ph.datestamp;"
    },
    {
        "question_id": 1456,
        "answer_sql": "SELECT property_type_description, property_type_code FROM Ref_Property_Types WHERE property_type_description = ( SELECT property_type_description FROM Properties GROUP BY property_type_code ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 1457,
        "answer_sql": "SELECT Ref_Property_Types.property_type_description, COUNT(*) as count FROM Properties INNER JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code GROUP BY Ref_Property_Types.property_type_description ORDER BY count DESC LIMIT 1;"
    },
    {
        "question_id": 1458,
        "answer_sql": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code = 'Over 60';"
    },
    {
        "question_id": 1459,
        "answer_sql": "SELECT Ref_Age_Categories.age_category_description FROM Ref_Age_Categories INNER JOIN Users ON Ref_Age_Categories.age_category_code = Users.age_category_code WHERE Users.age_category_code = 'Over 60';"
    },
    {
        "question_id": 1460,
        "answer_sql": "SELECT room_size, COUNT(*) as room_count FROM Rooms GROUP BY room_size;"
    },
    {
        "question_id": 1461,
        "answer_sql": "SELECT r.room_size, COUNT(*) as room_count FROM Rooms r GROUP BY r.room_size;"
    },
    {
        "question_id": 1462,
        "answer_sql": ""
    },
    {
        "question_id": 1463,
        "answer_sql": "SELECT country FROM Users INNER JOIN Addresses ON Users.user_address_id = Addresses.address_id WHERE first_name = 'Robbie';"
    },
    {
        "question_id": 1464,
        "answer_sql": "SELECT U.first_name, U.middle_name, U.last_name FROM Users U INNER JOIN Properties P ON U.user_id = P.owner_user_id INNER JOIN Addresses A ON P.property_address_id = A.address_id;"
    },
    {
        "question_id": 1465,
        "answer_sql": "SELECT U.first_name, U.last_name FROM Users U JOIN Properties P ON U.user_id = P.owner_user_id"
    },
    {
        "question_id": 1466,
        "answer_sql": "SELECT Users.user_id, Users.first_name, Users.last_name FROM Users WHERE Users.user_id NOT IN ( SELECT DISTINCT Users.user_id FROM Users INNER JOIN Properties ON Users.user_id = Properties.owner_user_id );"
    },
    {
        "question_id": 1467,
        "answer_sql": "SELECT DISTINCT `search_string` FROM `User_Searches` WHERE `user_id` NOT IN ( SELECT `owner_user_id` FROM `Properties` WHERE `owner_user_id` IS NOT NULL );"
    },
    {
        "question_id": 1468,
        "answer_sql": "SELECT U.last_name, U.user_id FROM Users U JOIN (SELECT user_id, COUNT(property_id) as property_count FROM User_Property_History GROUP BY user_id) UP ON U.user_id = UP.user_id JOIN (SELECT user_id, COUNT(search_seq) as search_count FROM User_Searches GROUP BY user_id) US ON U.user_id = US.user_id WHERE UP.property_count >= 2 AND US.search_count <= 2;"
    },
    {
        "question_id": 1469,
        "answer_sql": "SELECT U.last_name, U.user_id FROM Users U JOIN ( SELECT user_id, COUNT(*) as search_count FROM User_Searches GROUP BY user_id HAVING COUNT(*) <= 2 ) S ON U.user_id = S.user_id JOIN ( SELECT property_id, COUNT(*) as property_count FROM User_Property_History GROUP BY property_id HAVING COUNT(*) >= 2 ) P ON U.user_id = P.property_id WHERE S.search_count <= 2 AND P.property_count >= 2;"
    },
    {
        "question_id": 1470,
        "answer_sql": "SELECT COUNT(*) FROM bike WHERE weight > 780;"
    },
    {
        "question_id": 1471,
        "answer_sql": "SELECT b.product_name, b.weight FROM bike b JOIN cyclists_own_bikes cb ON b.id = cb.bike_id WHERE b.price = ( SELECT MIN(bike.price) FROM bike ) ORDER BY b.price ASC;"
    },
    {
        "question_id": 1472,
        "answer_sql": "SELECT heat, name, nation FROM cyclist;"
    },
    {
        "question_id": 1473,
        "answer_sql": "SELECT MAX(weight) AS maximum_weight, MIN(weight) AS minimum_weight FROM bike;"
    },
    {
        "question_id": 1474,
        "answer_sql": "SELECT AVG(b.price) FROM bike b JOIN cyclists_own_bikes cob ON b.id = cob.bike_id JOIN cyclist c ON cob.cyclist_id = c.id WHERE b.material = 'Carbon CC';"
    },
    {
        "question_id": 1475,
        "answer_sql": "SELECT c.name, c.result FROM cyclist c WHERE c.nation != 'Russia'"
    },
    {
        "question_id": 1476,
        "answer_sql": "SELECT DISTINCT bike.id, bike.product_name FROM bike INNER JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id INNER JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE cyclists_own_bikes.purchase_year > 2015;"
    },
    {
        "question_id": 1477,
        "answer_sql": "SELECT b.id, b.product_name FROM bike b JOIN ( SELECT co.bike_id FROM cyclists_own_bikes co GROUP BY co.bike_id HAVING COUNT(co.cyclist_id) >= 4 ) c ON b.id = c.bike_id;"
    },
    {
        "question_id": 1478,
        "answer_sql": "SELECT c.id, c.name FROM cyclist c WHERE c.id IN ( SELECT co.cyclist_id FROM cyclists_own_bikes co GROUP BY co.cyclist_id ORDER BY COUNT(co.bike_id) DESC LIMIT 1 );"
    },
    {
        "question_id": 1479,
        "answer_sql": "SELECT DISTINCT b.product_name FROM bike b JOIN cyclists_own_bikes co ON b.id = co.bike_id JOIN cyclist c ON c.id = co.cyclist_id WHERE c.nation = 'Russia' OR c.nation = 'Great Britain';"
    },
    {
        "question_id": 1480,
        "answer_sql": "SELECT COUNT(DISTINCT heat) as number_of_levels_of_heat FROM cyclist;"
    },
    {
        "question_id": 1481,
        "answer_sql": "SELECT COUNT(DISTINCT cyclist.id) FROM cyclist WHERE NOT EXISTS ( SELECT 1 FROM cyclists_own_bikes WHERE cyclists_own_bikes.cyclist_id = cyclist.id AND cyclists_own_bikes.purchase_year > 2015 );"
    },
    {
        "question_id": 1482,
        "answer_sql": "SELECT DISTINCT b.product_name FROM bike b JOIN cyclists_own_bikes cb ON b.id = cb.bike_id JOIN cyclist c ON cb.cyclist_id = c.id WHERE c.result > 4.21558;"
    },
    {
        "question_id": 1483,
        "answer_sql": ""
    },
    {
        "question_id": 1484,
        "answer_sql": "SELECT c.name, c.nation, c.result FROM cyclist c LEFT JOIN cyclists_own_bikes cb ON c.id = cb.cyclist_id WHERE cb.bike_id IS NULL;"
    },
    {
        "question_id": 1485,
        "answer_sql": "SELECT b.product_name FROM bike b WHERE b.material LIKE '%fiber%';"
    },
    {
        "question_id": 1486,
        "answer_sql": "SELECT c.id as cyclist_id, COUNT(cb.bike_id) as number_of_bikes FROM cyclists_own_bikes cb JOIN cyclist c ON cb.cyclist_id = c.id GROUP BY c.id ORDER BY c.id;"
    },
    {
        "question_id": 1487,
        "answer_sql": "SELECT goods.Flavor, goods.Food, goods.Price FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber GROUP BY goods.Flavor ORDER BY goods.Price DESC LIMIT 1;"
    },
    {
        "question_id": 1488,
        "answer_sql": "SELECT goods.Id, goods.Flavor FROM goods ORDER BY goods.Price DESC LIMIT 1;"
    },
    {
        "question_id": 1489,
        "answer_sql": "SELECT goods.Flavor, goods.Food, goods.Price FROM goods WHERE goods.Price = (SELECT MIN(Price) FROM goods);"
    },
    {
        "question_id": 1490,
        "answer_sql": "SELECT goods.Id, goods.Flavor FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Price = (SELECT MIN(Price) FROM goods);"
    },
    {
        "question_id": 1491,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Flavor = 'Apple';"
    },
    {
        "question_id": 1492,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Flavor = 'Apple';"
    },
    {
        "question_id": 1493,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Price < 3;"
    },
    {
        "question_id": 1494,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Price < 3;"
    },
    {
        "question_id": 1495,
        "answer_sql": "SELECT DISTINCT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'Lemon' AND g.Food = 'Cake';"
    },
    {
        "question_id": 1496,
        "answer_sql": "SELECT DISTINCT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'Lemon';"
    },
    {
        "question_id": 1497,
        "answer_sql": "SELECT goods.Food, COUNT(DISTINCT receipts.CustomerId) as NumberOfCustomers FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber GROUP BY goods.Food;"
    },
    {
        "question_id": 1498,
        "answer_sql": "SELECT g.Flavor, COUNT(DISTINCT r.ReceiptNumber) as NumberOfCustomers FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt GROUP BY g.Flavor;"
    },
    {
        "question_id": 1499,
        "answer_sql": "SELECT c.Id FROM customers c WHERE ( SELECT COUNT(*) FROM receipts r WHERE r.CustomerId = c.Id ) >= 15;"
    },
    {
        "question_id": 1500,
        "answer_sql": "SELECT c.Id FROM customers c WHERE ( SELECT COUNT(*) FROM receipts r WHERE r.CustomerId = c.Id ) >= 15;"
    },
    {
        "question_id": 1501,
        "answer_sql": "SELECT c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt GROUP BY c.LastName HAVING COUNT(i.Ordinal) > 10;"
    },
    {
        "question_id": 1502,
        "answer_sql": "SELECT c.LastName FROM customers c WHERE ( SELECT COUNT(*) FROM receipts r WHERE r.CustomerId = c.Id ) > 10;"
    },
    {
        "question_id": 1503,
        "answer_sql": "SELECT COUNT(DISTINCT goods.Flavor) as NumberOfCakes FROM goods WHERE goods.Food = 'Cake';"
    },
    {
        "question_id": 1504,
        "answer_sql": "SELECT COUNT(DISTINCT goods.Flavor) as NumberOfCakes FROM goods;"
    },
    {
        "question_id": 1505,
        "answer_sql": "SELECT DISTINCT goods.Flavor FROM goods INNER JOIN items ON goods.Id = items.Item;"
    },
    {
        "question_id": 1506,
        "answer_sql": "SELECT goods.Flavor FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Croissant';"
    },
    {
        "question_id": 1507,
        "answer_sql": ""
    },
    {
        "question_id": 1508,
        "answer_sql": ""
    },
    {
        "question_id": 1509,
        "answer_sql": "SELECT goods.Flavor, AVG(goods.Price) as AveragePrice, MAX(goods.Price) as MaxPrice, MIN(goods.Price) as MinPrice FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Flavor;"
    },
    {
        "question_id": 1510,
        "answer_sql": "SELECT goods.Flavor, AVG(goods.Price) as AveragePrice, MIN(goods.Price) as MinimumPrice, MAX(goods.Price) as MaximumPrice FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Flavor;"
    },
    {
        "question_id": 1511,
        "answer_sql": "SELECT ReceiptNumber FROM receipts INNER JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE Item IN ( SELECT Id FROM goods WHERE Flavor = 'Cake' OR Food = 'Cookie' ) GROUP BY ReceiptNumber HAVING COUNT(DISTINCT Item) = 2;"
    },
    {
        "question_id": 1512,
        "answer_sql": "SELECT ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE Item IN ( SELECT Id FROM goods WHERE Flavor = 'Cake' OR Food = 'Cookie' ) GROUP BY ReceiptNumber HAVING COUNT(DISTINCT Item) = 2;"
    },
    {
        "question_id": 1513,
        "answer_sql": ""
    },
    {
        "question_id": 1514,
        "answer_sql": ""
    },
    {
        "question_id": 1515,
        "answer_sql": "SELECT ReceiptNumber, Date FROM receipts INNER JOIN ( SELECT Receipt, MAX(Price) as MaxPrice FROM goods INNER JOIN items ON goods.Id = items.Item GROUP BY Receipt ) ON receipts.ReceiptNumber = receipts.ReceiptNumber ORDER BY MaxPrice DESC LIMIT 1;"
    },
    {
        "question_id": 1516,
        "answer_sql": "SELECT ReceiptNumber, Date FROM receipts INNER JOIN ( SELECT Receipt, MAX(Price) as MaxPrice FROM goods INNER JOIN items ON goods.Id = items.Item GROUP BY Receipt ) AS SubQuery ON receipts.ReceiptNumber = SubQuery.Receipt;"
    },
    {
        "question_id": 1517,
        "answer_sql": ""
    },
    {
        "question_id": 1518,
        "answer_sql": ""
    },
    {
        "question_id": 1519,
        "answer_sql": "SELECT goods.Food, COUNT(goods.Id) as AvailableGoods FROM goods LEFT JOIN items ON goods.Id = items.Item GROUP BY goods.Food;"
    },
    {
        "question_id": 1520,
        "answer_sql": "SELECT goods.Food, COUNT(items.Item) as Count FROM goods LEFT JOIN items ON goods.Id = items.Item GROUP BY goods.Food;"
    },
    {
        "question_id": 1521,
        "answer_sql": "SELECT goods.Food, AVG(goods.Price) as AveragePrice FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Food;"
    },
    {
        "question_id": 1522,
        "answer_sql": "SELECT goods.Flavor, AVG(goods.Price) as AveragePrice FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Flavor;"
    },
    {
        "question_id": 1523,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Flavor = 'Apricot' AND goods.Price < 5;"
    },
    {
        "question_id": 1524,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Flavor = 'Apricot' AND goods.Price < 5;"
    },
    {
        "question_id": 1525,
        "answer_sql": "SELECT goods.Flavor FROM goods WHERE goods.Price > 10 AND goods.Id IN ( SELECT items.Item FROM items INNER JOIN goods ON items.Item = goods.Id );"
    },
    {
        "question_id": 1526,
        "answer_sql": "SELECT g.Flavor FROM goods g JOIN items i ON g.Id = i.Item WHERE g.Price > 10;"
    },
    {
        "question_id": 1527,
        "answer_sql": "SELECT DISTINCT goods.Id, goods.Price FROM goods WHERE goods.Price < (SELECT AVG(goods.Price) FROM goods);"
    },
    {
        "question_id": 1528,
        "answer_sql": "SELECT goods.Id, goods.Price FROM goods WHERE goods.Price < ( SELECT AVG(goods.Price) FROM goods ) GROUP BY goods.Id;"
    },
    {
        "question_id": 1529,
        "answer_sql": ""
    },
    {
        "question_id": 1530,
        "answer_sql": ""
    },
    {
        "question_id": 1531,
        "answer_sql": "SELECT DISTINCT receipts.ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Price > 13;"
    },
    {
        "question_id": 1532,
        "answer_sql": "SELECT ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Price > 13;"
    },
    {
        "question_id": 1533,
        "answer_sql": "SELECT r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 15;"
    },
    {
        "question_id": 1534,
        "answer_sql": "SELECT Date FROM receipts INNER JOIN customers ON receipts.CustomerId = customers.Id WHERE customers.Id IN ( SELECT CustomerId FROM receipts INNER JOIN items ON receipts.ReceiptNumber = items.Receipt INNER JOIN goods ON items.Item = goods.Id WHERE goods.Price > 15 );"
    },
    {
        "question_id": 1535,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Id LIKE '%APP%';"
    },
    {
        "question_id": 1536,
        "answer_sql": "SELECT Id FROM goods WHERE Id LIKE '%APP%';"
    },
    {
        "question_id": 1537,
        "answer_sql": "SELECT goods.Flavor, goods.Price FROM goods INNER JOIN items ON goods.Id = items.Item WHERE goods.Id LIKE '%70%';"
    },
    {
        "question_id": 1538,
        "answer_sql": ""
    },
    {
        "question_id": 1539,
        "answer_sql": "SELECT c.LastName FROM customers c ORDER BY c.LastName ASC;"
    },
    {
        "question_id": 1540,
        "answer_sql": "SELECT LastName FROM customers ORDER BY LastName ASC;"
    },
    {
        "question_id": 1541,
        "answer_sql": "SELECT goods.Id FROM goods JOIN items ON goods.Id = items.Item ORDER BY goods.Id;"
    },
    {
        "question_id": 1542,
        "answer_sql": "SELECT DISTINCT goods.Id FROM goods JOIN items ON goods.Id = items.Item ORDER BY goods.Id;"
    },
    {
        "question_id": 1543,
        "answer_sql": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'apple' OR r.CustomerId = 12;"
    },
    {
        "question_id": 1544,
        "answer_sql": "SELECT ReceiptNumber FROM receipts WHERE ReceiptNumber IN ( SELECT Receipt FROM items WHERE Item IN ( SELECT Id FROM goods WHERE Flavor = 'Apple' ) ) OR CustomerId = 12;"
    },
    {
        "question_id": 1545,
        "answer_sql": "SELECT r.ReceiptNumber, r.Date, c.Id, c.LastName, c.FirstName FROM receipts r JOIN customers c ON r.CustomerId = c.Id WHERE r.Date = ( SELECT MAX(Date) FROM receipts );"
    },
    {
        "question_id": 1546,
        "answer_sql": "SELECT ReceiptNumber, Date FROM receipts INNER JOIN customers ON receipts.CustomerId = customers.Id WHERE Date IN ( SELECT MAX(Date) FROM receipts INNER JOIN customers ON receipts.CustomerId = customers.Id );"
    },
    {
        "question_id": 1547,
        "answer_sql": "SELECT r.ReceiptNumber FROM receipts r WHERE (SELECT MIN(Date) FROM receipts) <= r.Date OR EXISTS ( SELECT 1 FROM items i JOIN goods g ON i.Item = g.Id WHERE g.Price > 10 );"
    },
    {
        "question_id": 1548,
        "answer_sql": "SELECT ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Price > 10 OR Date IN (SELECT MIN(Date) FROM receipts);"
    },
    {
        "question_id": 1549,
        "answer_sql": ""
    },
    {
        "question_id": 1550,
        "answer_sql": "SELECT goods.Id, goods.Flavor, goods.Food, goods.Price FROM goods WHERE goods.Price BETWEEN 3 AND 7 AND goods.Id IN ( SELECT items.Item FROM items WHERE items.Item IN ( SELECT goods.Id FROM goods WHERE goods.Price BETWEEN 3 AND 7 ) );"
    },
    {
        "question_id": 1551,
        "answer_sql": "SELECT customers.FirstName, customers.LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE items.Ordinal = 1 ORDER BY receipts.Date ASC LIMIT 1;"
    },
    {
        "question_id": 1552,
        "answer_sql": "SELECT c.FirstName, c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId WHERE r.Date = (SELECT MIN(Date) FROM receipts);"
    },
    {
        "question_id": 1553,
        "answer_sql": "SELECT AVG(Price) FROM goods WHERE Flavor IN ('Blackberry', 'Blueberry');"
    },
    {
        "question_id": 1554,
        "answer_sql": "SELECT AVG(Price) as AveragePrice FROM goods WHERE Flavor IN ('Blackberry', 'Blueberry');"
    },
    {
        "question_id": 1555,
        "answer_sql": "SELECT g.Flavor, g.Price FROM goods g WHERE g.Flavor = 'Cheese' AND g.Price = ( SELECT MIN(Price) FROM goods WHERE Flavor = 'Cheese' );"
    },
    {
        "question_id": 1556,
        "answer_sql": "SELECT g.Id, g.Flavor, g.Food, g.Price FROM goods g WHERE g.Flavor = 'Cheese' ORDER BY g.Price ASC LIMIT 1;"
    },
    {
        "question_id": 1557,
        "answer_sql": "SELECT g.Flavor, MIN(g.Price) as LowestPrice, MAX(g.Price) as HighestPrice, AVG(g.Price) as AveragePrice FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor ORDER BY g.Flavor;"
    },
    {
        "question_id": 1558,
        "answer_sql": "SELECT g.Flavor, MIN(g.Price) as MinPrice, MAX(g.Price) as MaxPrice, AVG(g.Price) as AveragePrice FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor ORDER BY g.Flavor;"
    },
    {
        "question_id": 1559,
        "answer_sql": "SELECT goods.Flavor, MIN(goods.Price) as LowestPrice, MAX(goods.Price) as HighestPrice FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Flavor ORDER BY goods.Flavor;"
    },
    {
        "question_id": 1560,
        "answer_sql": "SELECT goods.Flavor, MIN(goods.Price) AS MinPrice, MAX(goods.Price) AS MaxPrice FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber GROUP BY goods.Flavor;"
    },
    {
        "question_id": 1561,
        "answer_sql": "SELECT Date, COUNT(ReceiptNumber) as ReceiptCount FROM receipts GROUP BY Date ORDER BY ReceiptCount DESC LIMIT 3;"
    },
    {
        "question_id": 1562,
        "answer_sql": "SELECT Date FROM receipts GROUP BY Date ORDER BY COUNT(ReceiptNumber) DESC LIMIT 3;"
    },
    {
        "question_id": 1563,
        "answer_sql": "SELECT c.FirstName, c.LastName, COUNT(r.ReceiptNumber) as NumberOfPurchases FROM customers c JOIN receipts r ON c.Id = r.CustomerId GROUP BY r.CustomerId ORDER BY NumberOfPurchases DESC LIMIT 1;"
    },
    {
        "question_id": 1564,
        "answer_sql": "SELECT c.Id AS CustomerId, COUNT(r.ReceiptNumber) AS NumberOfPurchases FROM customers c JOIN receipts r ON c.Id = r.CustomerId GROUP BY c.Id ORDER BY NumberOfPurchases DESC LIMIT 1;"
    },
    {
        "question_id": 1565,
        "answer_sql": "SELECT Date, COUNT(DISTINCT CustomerId) as NumberOfCustomers FROM receipts GROUP BY Date;"
    },
    {
        "question_id": 1566,
        "answer_sql": "SELECT Date, COUNT(DISTINCT CustomerId) as NumberOfCustomers FROM receipts GROUP BY Date;"
    },
    {
        "question_id": 1567,
        "answer_sql": "SELECT customers.FirstName, customers.LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Food = 'Tart' AND goods.Flavor = 'Apple';"
    },
    {
        "question_id": 1568,
        "answer_sql": "SELECT c.FirstName, c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'Apple' AND g.Food = 'Tart';"
    },
    {
        "question_id": 1569,
        "answer_sql": ""
    },
    {
        "question_id": 1570,
        "answer_sql": "SELECT c.Id FROM customers c WHERE c.Id NOT IN ( SELECT r.CustomerId FROM receipts r INNER JOIN items i ON r.ReceiptNumber = i.Receipt INNER JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'Croissant' ) AND c.Id IN ( SELECT r.CustomerId FROM receipts r INNER JOIN items i ON r.ReceiptNumber = i.Receipt INNER JOIN goods g ON i.Item = g.Id GROUP BY r.CustomerId HAVING MIN(g.Price) < 1.0 );"
    },
    {
        "question_id": 1571,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Price >= (SELECT AVG(goods.Price) FROM goods WHERE goods.Food = 'Tart');"
    },
    {
        "question_id": 1572,
        "answer_sql": ""
    },
    {
        "question_id": 1573,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Price > 2 * (SELECT AVG(goods.Price) FROM goods);"
    },
    {
        "question_id": 1574,
        "answer_sql": "SELECT goods.Id FROM goods WHERE goods.Price > 2 * (SELECT AVG(goods.Price) FROM goods);"
    },
    {
        "question_id": 1575,
        "answer_sql": "SELECT goods.Id, goods.Flavor, goods.Food, goods.Price FROM goods JOIN items ON goods.Id = items.Item ORDER BY goods.Price;"
    },
    {
        "question_id": 1576,
        "answer_sql": "SELECT goods.Id, goods.Flavor, goods.Food, goods.Price FROM goods JOIN items ON goods.Id = items.Item ORDER BY goods.Price;"
    },
    {
        "question_id": 1577,
        "answer_sql": "SELECT goods.Id, goods.Flavor FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake' ORDER BY goods.Flavor;"
    },
    {
        "question_id": 1578,
        "answer_sql": "SELECT goods.Id, goods.Flavor FROM goods INNER JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake' ORDER BY goods.Flavor;"
    },
    {
        "question_id": 1579,
        "answer_sql": ""
    },
    {
        "question_id": 1580,
        "answer_sql": "SELECT g.Flavor, COUNT(*) as ItemCount FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor HAVING COUNT(*) > 10;"
    },
    {
        "question_id": 1581,
        "answer_sql": "SELECT goods.Flavor FROM goods WHERE goods.Flavor IN ( SELECT goods.Flavor FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake' ) AND goods.Food = 'Tart';"
    },
    {
        "question_id": 1582,
        "answer_sql": "SELECT goods.Flavor FROM goods WHERE goods.Flavor NOT IN ( SELECT goods.Flavor FROM goods INNER JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Tart' );"
    },
    {
        "question_id": 1583,
        "answer_sql": "SELECT g.Flavor, COUNT(*) as Count FROM items i JOIN goods g ON i.Item = g.Id GROUP BY i.Item ORDER BY Count DESC LIMIT 3;"
    },
    {
        "question_id": 1584,
        "answer_sql": "SELECT g.Flavor, g.Food, COUNT(i.Item) as Quantity FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON i.Receipt = r.ReceiptNumber GROUP BY g.Flavor, g.Food ORDER BY Quantity DESC LIMIT 3;"
    },
    {
        "question_id": 1585,
        "answer_sql": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id HAVING SUM(g.Price) > 150;"
    },
    {
        "question_id": 1586,
        "answer_sql": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id HAVING SUM(g.Price) > 150;"
    },
    {
        "question_id": 1587,
        "answer_sql": "SELECT c.Id, g.Id, AVG(r.ReceiptNumber) as AverageSpending FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id, g.Id HAVING AVG(r.ReceiptNumber) > 5;"
    },
    {
        "question_id": 1588,
        "answer_sql": ""
    },
    {
        "question_id": 1589,
        "answer_sql": "SELECT r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date HAVING SUM(g.Price) > 100;"
    },
    {
        "question_id": 1590,
        "answer_sql": "SELECT r.Date FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date HAVING SUM(g.Price) > 100;"
    },
    {
        "question_id": 1591,
        "answer_sql": "SELECT COUNT(*) as Total_Drivers FROM driver;"
    },
    {
        "question_id": 1592,
        "answer_sql": "SELECT COUNT(*) as Total_Drivers FROM driver;"
    },
    {
        "question_id": 1593,
        "answer_sql": ""
    },
    {
        "question_id": 1594,
        "answer_sql": ""
    },
    {
        "question_id": 1595,
        "answer_sql": ""
    },
    {
        "question_id": 1596,
        "answer_sql": ""
    },
    {
        "question_id": 1597,
        "answer_sql": "SELECT AVG( Laps ) as Average_Laps FROM driver WHERE Age < 20;"
    },
    {
        "question_id": 1598,
        "answer_sql": "SELECT AVG(d.Laps) as Average_Laps FROM driver as d WHERE d.Age < 20;"
    },
    {
        "question_id": 1599,
        "answer_sql": ""
    },
    {
        "question_id": 1600,
        "answer_sql": ""
    },
    {
        "question_id": 1601,
        "answer_sql": "SELECT Make FROM team GROUP BY Make HAVING COUNT(DISTINCT Team_ID) > 1;"
    },
    {
        "question_id": 1602,
        "answer_sql": "SELECT Make FROM team GROUP BY Make HAVING COUNT(DISTINCT Team_ID) > 1;"
    },
    {
        "question_id": 1603,
        "answer_sql": ""
    },
    {
        "question_id": 1604,
        "answer_sql": "SELECT Make FROM team WHERE Car_Owner = 'Buddy Arrington';"
    },
    {
        "question_id": 1605,
        "answer_sql": "SELECT MAX(Points) AS Maximum_Points, MIN(Points) AS Minimum_Points FROM driver;"
    },
    {
        "question_id": 1606,
        "answer_sql": "SELECT MAX(Points) AS Highest_Points, MIN(Points) AS Lowest_Points FROM driver;"
    },
    {
        "question_id": 1607,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Points < 150;"
    },
    {
        "question_id": 1608,
        "answer_sql": "SELECT COUNT(*) FROM driver WHERE Points < 150;"
    },
    {
        "question_id": 1609,
        "answer_sql": "SELECT d.Driver, d.Age FROM driver d ORDER BY d.Age ASC;"
    },
    {
        "question_id": 1610,
        "answer_sql": "SELECT d.Driver, d.Age FROM driver d ORDER BY d.Age ASC;"
    },
    {
        "question_id": 1611,
        "answer_sql": "SELECT d.Driver, SUM(d.Points) as Total_Points FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID GROUP BY d.Driver_ID ORDER BY Total_Points DESC;"
    },
    {
        "question_id": 1612,
        "answer_sql": "SELECT d.Driver, d.Points, d.Laps, d.Winnings FROM driver d ORDER BY d.Points DESC;"
    },
    {
        "question_id": 1613,
        "answer_sql": "SELECT d.Driver, c.Country FROM driver d JOIN country c ON d.Country = c.Country_Id;"
    },
    {
        "question_id": 1614,
        "answer_sql": "SELECT d.Driver, c.Country FROM driver d JOIN country c ON d.Country = c.Country_Id;"
    },
    {
        "question_id": 1615,
        "answer_sql": "SELECT MAX(d.Points) as Maximum_Points FROM driver d JOIN country c ON d.Country = c.Country_Id WHERE c.Capital = 'Dublin';"
    },
    {
        "question_id": 1616,
        "answer_sql": "SELECT MAX(`Points`) as Max_Points FROM `driver` WHERE `Country` = (SELECT `Country_Id` FROM `country` WHERE `Capital` = 'Dublin');"
    },
    {
        "question_id": 1617,
        "answer_sql": "SELECT AVG(d.Age) AS Average_Age FROM driver d JOIN country c ON d.Country = c.Country_Id WHERE c.Official_native_language = 'English';"
    },
    {
        "question_id": 1618,
        "answer_sql": "SELECT AVG(d.Age) AS Average_Age FROM driver d JOIN country c ON d.Country = c.Country_Id WHERE c.Official_native_language = 'English';"
    },
    {
        "question_id": 1619,
        "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d ON c.Country_Id = d.Country WHERE d.Points > 150;"
    },
    {
        "question_id": 1620,
        "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d ON c.Country_Id = d.Country WHERE d.Points > 150;"
    },
    {
        "question_id": 1621,
        "answer_sql": "SELECT c.Capital FROM country c WHERE c.Country_Id = ( SELECT d.Country FROM driver d ORDER BY d.Points DESC LIMIT 1 );"
    },
    {
        "question_id": 1622,
        "answer_sql": "SELECT c.Country, c.Capital FROM driver d JOIN country c ON d.Country = c.Country_Id WHERE d.Points = (SELECT MAX(Points) FROM driver);"
    },
    {
        "question_id": 1623,
        "answer_sql": "SELECT Make, COUNT(*) as Number_of_Drivers FROM driver GROUP BY Make;"
    },
    {
        "question_id": 1624,
        "answer_sql": "SELECT Make, COUNT(*) as Number_of_Drivers FROM driver GROUP BY Make;"
    },
    {
        "question_id": 1625,
        "answer_sql": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(Make) DESC LIMIT 1;"
    },
    {
        "question_id": 1626,
        "answer_sql": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1627,
        "answer_sql": "SELECT d.Make FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID GROUP BY d.Make HAVING COUNT(d.Driver_ID) >= 3;"
    },
    {
        "question_id": 1628,
        "answer_sql": "SELECT Make FROM team WHERE Team_ID IN ( SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING COUNT(Driver_ID) >= 3 );"
    },
    {
        "question_id": 1629,
        "answer_sql": "SELECT t.Team FROM team t LEFT JOIN team_driver td ON t.Team_ID = td.Team_ID WHERE td.Team_ID IS NULL;"
    },
    {
        "question_id": 1630,
        "answer_sql": "SELECT t.Team FROM team t LEFT JOIN team_driver td ON t.Team_ID = td.Team_ID WHERE td.Team_ID IS NULL;"
    },
    {
        "question_id": 1631,
        "answer_sql": "SELECT c.Country FROM country c WHERE c.Country_Id IN ( SELECT d.Country FROM driver d WHERE d.Make = 'Dodge' ) AND c.Country_Id IN ( SELECT d.Country FROM driver d WHERE d.Make = 'Chevrolet' );"
    },
    {
        "question_id": 1632,
        "answer_sql": "SELECT c.Country FROM country c WHERE c.Country_Id IN ( SELECT d.Country FROM driver d WHERE d.Make = 'Dodge' ) AND c.Country_Id IN ( SELECT d.Country FROM driver d WHERE d.Make = 'Chevrolet' );"
    },
    {
        "question_id": 1633,
        "answer_sql": "SELECT COUNT(*) AS Total_Drivers, AVG(driver.Points) AS Average_Points FROM driver;"
    },
    {
        "question_id": 1634,
        "answer_sql": "SELECT COUNT(*) AS Total_Drivers, AVG(driver.Points) AS Average_Points FROM driver;"
    },
    {
        "question_id": 1635,
        "answer_sql": "SELECT c.Country, c.Country_Id FROM country c LEFT JOIN driver d ON c.Country_Id = d.Country WHERE d.Driver_ID IS NULL;"
    },
    {
        "question_id": 1636,
        "answer_sql": "SELECT DISTINCT c.Country FROM country c LEFT JOIN driver d ON c.Country_Id = d.Country WHERE d.Driver_Id IS NULL;"
    },
    {
        "question_id": 1637,
        "answer_sql": "SELECT t.Manager, t.Sponsor FROM team t JOIN ( SELECT td.Team_ID, COUNT(td.Driver_ID) as Driver_Count FROM team_driver td GROUP BY td.Team_ID ORDER BY Driver_Count DESC LIMIT 1 ) td ON t.Team_ID = td.Team_ID;"
    },
    {
        "question_id": 1638,
        "answer_sql": "SELECT t.Manager, t.Sponsor FROM team t JOIN ( SELECT td.Team_ID FROM team_driver td GROUP BY td.Team_ID ORDER BY COUNT(*) DESC LIMIT 1 ) td ON t.Team_ID = td.Team_ID;"
    },
    {
        "question_id": 1639,
        "answer_sql": ""
    },
    {
        "question_id": 1640,
        "answer_sql": "SELECT t.Team, t.Manager, t.Car_Owner FROM team t JOIN ( SELECT td.Team_ID FROM team_driver td GROUP BY td.Team_ID HAVING COUNT(*) >= 2 ) td ON t.Team_ID = td.Team_ID;"
    },
    {
        "question_id": 1641,
        "answer_sql": "SELECT COUNT(*) as TotalInstitutions FROM institution;"
    },
    {
        "question_id": 1642,
        "answer_sql": "SELECT COUNT(*) as Total_Institutions FROM institution;"
    },
    {
        "question_id": 1643,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"
    },
    {
        "question_id": 1644,
        "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"
    },
    {
        "question_id": 1645,
        "answer_sql": "SELECT i.Name, i.Founded FROM institution i ORDER BY i.Founded ASC;"
    },
    {
        "question_id": 1646,
        "answer_sql": "SELECT i.Name, i.Founded FROM institution i JOIN championship c ON i.Institution_ID = c.Institution_ID ORDER BY i.Founded;"
    },
    {
        "question_id": 1647,
        "answer_sql": "SELECT City, Province FROM institution;"
    },
    {
        "question_id": 1648,
        "answer_sql": "SELECT City, Province FROM institution;"
    },
    {
        "question_id": 1649,
        "answer_sql": "SELECT MAX(Enrollment) AS Maximum_Enrollment, MIN(Enrollment) AS Minimum_Enrollment FROM institution;"
    },
    {
        "question_id": 1650,
        "answer_sql": "SELECT MAX(Enrollment) AS Maximum_Enrollment, MIN(Enrollment) AS Minimum_Enrollment FROM institution;"
    },
    {
        "question_id": 1651,
        "answer_sql": "SELECT Affiliation FROM institution WHERE City != 'Vancouver';"
    },
    {
        "question_id": 1652,
        "answer_sql": "SELECT institution.Affiliation FROM institution WHERE institution.City != 'Vancouver';"
    },
    {
        "question_id": 1653,
        "answer_sql": "SELECT i.Stadium, i.Capacity FROM institution i JOIN championship c ON i.Institution_ID = c.Institution_ID ORDER BY i.Capacity DESC;"
    },
    {
        "question_id": 1654,
        "answer_sql": "SELECT i.Stadium FROM institution i JOIN championship c ON i.Institution_ID = c.Institution_ID ORDER BY i.Capacity DESC;"
    },
    {
        "question_id": 1655,
        "answer_sql": "SELECT `Stadium` FROM `institution` WHERE `Enrollment` = (SELECT MAX(`Enrollment`) FROM `institution`);"
    },
    {
        "question_id": 1656,
        "answer_sql": "SELECT Institution.Stadium FROM institution WHERE Institution.Enrollment = (SELECT MAX(Institution.Enrollment) FROM institution);"
    },
    {
        "question_id": 1657,
        "answer_sql": "SELECT Name, Nickname FROM institution INNER JOIN Championship ON institution.Institution_ID = Championship.Institution_ID;"
    },
    {
        "question_id": 1658,
        "answer_sql": "SELECT i.Name, c.Nickname FROM institution i JOIN Championship c ON i.Institution_ID = c.Institution_ID;"
    },
    {
        "question_id": 1659,
        "answer_sql": "SELECT Nickname FROM Championship WHERE Institution_ID = (SELECT MIN(Institution_ID) FROM institution);"
    },
    {
        "question_id": 1660,
        "answer_sql": "SELECT Nickname FROM Championship WHERE Institution_ID = ( SELECT MIN(Institution_ID) FROM institution );"
    },
    {
        "question_id": 1661,
        "answer_sql": "SELECT i.Name, COUNT(c.Nickname) as Number_of_Championships FROM institution i LEFT JOIN Championship c ON i.Institution_ID = c.Institution_ID GROUP BY i.Name ORDER BY Number_of_Championships DESC;"
    },
    {
        "question_id": 1662,
        "answer_sql": "SELECT i.Name, COUNT(c.Nickname) as Number_of_Championships FROM institution i JOIN Championship c ON i.Institution_ID = c.Institution_ID GROUP BY i.Name ORDER BY Number_of_Championships DESC;"
    },
    {
        "question_id": 1663,
        "answer_sql": "SELECT i.Name FROM institution i JOIN Championship c ON i.Institution_ID = c.Institution_ID GROUP BY i.Name HAVING COUNT(c.Institution_ID) >= 1;"
    },
    {
        "question_id": 1664,
        "answer_sql": "SELECT i.Name FROM institution i JOIN Championship c ON i.Institution_ID = c.Institution_ID GROUP BY i.Name HAVING COUNT(c.Institution_ID) >= 1;"
    },
    {
        "question_id": 1665,
        "answer_sql": "SELECT SUM(Number_of_Championships) as Total_Number_of_Championships FROM Championship WHERE Institution_ID IN ( SELECT Institution_ID FROM institution WHERE Affiliation = 'Public' );"
    },
    {
        "question_id": 1666,
        "answer_sql": "SELECT COUNT(*) FROM Championship WHERE Institution_ID IN (SELECT Institution_ID FROM Institution WHERE Affiliation = 'Public');"
    },
    {
        "question_id": 1667,
        "answer_sql": "SELECT Affiliation, COUNT(*) as Number_of_Institutions FROM institution GROUP BY Affiliation;"
    },
    {
        "question_id": 1668,
        "answer_sql": "SELECT Affiliation, COUNT(*) as Number_of_Institutions FROM institution GROUP BY Affiliation;"
    },
    {
        "question_id": 1669,
        "answer_sql": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1670,
        "answer_sql": "SELECT Affiliation, COUNT(*) as Institution_Count FROM institution GROUP BY Affiliation ORDER BY Institution_Count DESC LIMIT 1;"
    },
    {
        "question_id": 1671,
        "answer_sql": ""
    },
    {
        "question_id": 1672,
        "answer_sql": "SELECT `Founded`, COUNT(*) as `Number_of_Institutions` FROM `institution` GROUP BY `Founded` HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1673,
        "answer_sql": "SELECT c.Nickname FROM Championship c JOIN institution i ON c.Institution_ID = i.Institution_ID ORDER BY i.Capacity DESC;"
    },
    {
        "question_id": 1674,
        "answer_sql": "SELECT c.Nickname FROM Championship c JOIN institution i ON c.Institution_ID = i.Institution_ID ORDER BY i.Capacity DESC;"
    },
    {
        "question_id": 1675,
        "answer_sql": "SELECT SUM( Enrollment ) as Total_Enrollment FROM institution WHERE City = 'Vancouver' OR City = 'Calgary';"
    },
    {
        "question_id": 1676,
        "answer_sql": "SELECT Institution_ID, Enrollment FROM institution WHERE City IN ('Vancouver', 'Calgary')"
    },
    {
        "question_id": 1677,
        "answer_sql": ""
    },
    {
        "question_id": 1678,
        "answer_sql": "SELECT DISTINCT Province FROM institution WHERE (Founded < 1920 OR Founded > 1950) AND Province IS NOT NULL;"
    },
    {
        "question_id": 1679,
        "answer_sql": "SELECT COUNT(DISTINCT Province) as Number_of_Provinces FROM institution;"
    },
    {
        "question_id": 1680,
        "answer_sql": "SELECT COUNT(DISTINCT Province) as Number_of_Provinces FROM institution;"
    },
    {
        "question_id": 1681,
        "answer_sql": "SELECT * FROM Warehouses;"
    },
    {
        "question_id": 1682,
        "answer_sql": "SELECT * FROM Warehouses WHERE Code IN (SELECT Warehouse FROM Boxes);"
    },
    {
        "question_id": 1683,
        "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York';"
    },
    {
        "question_id": 1684,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'New York');"
    },
    {
        "question_id": 1685,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > 150;"
    },
    {
        "question_id": 1686,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > 150;"
    },
    {
        "question_id": 1687,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as AverageValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1688,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as AverageValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1689,
        "answer_sql": "SELECT AVG(Value) AS AverageValue, SUM(Value) AS TotalValue FROM Boxes;"
    },
    {
        "question_id": 1690,
        "answer_sql": "SELECT AVG(Value) AS AverageValue, SUM(Value) AS TotalValue FROM Boxes;"
    },
    {
        "question_id": 1691,
        "answer_sql": "SELECT AVG(Warehouses.Capacity) AS Average_Warehouse_Capacity, SUM(Warehouses.Capacity) AS Total_Warehouse_Capacity FROM Warehouses"
    },
    {
        "question_id": 1692,
        "answer_sql": "SELECT AVG(Warehouses.Capacity) AS AverageCapacity, SUM(Warehouses.Capacity) AS TotalCapacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse;"
    },
    {
        "question_id": 1693,
        "answer_sql": "SELECT b.Contents, AVG(b.Value) as AverageValue, MAX(b.Value) as MaxValue FROM Boxes as b GROUP BY b.Contents;"
    },
    {
        "question_id": 1694,
        "answer_sql": "SELECT Contents, AVG(Value) as Average_Value, MAX(Value) as Max_Value FROM Boxes GROUP BY Contents;"
    },
    {
        "question_id": 1695,
        "answer_sql": "SELECT b.Contents, SUM(b.Value) as TotalValue FROM Boxes as b GROUP BY b.Contents ORDER BY TotalValue DESC LIMIT 1;"
    },
    {
        "question_id": 1696,
        "answer_sql": "SELECT Contents, MAX(Value) FROM Boxes;"
    },
    {
        "question_id": 1697,
        "answer_sql": "SELECT AVG(Value) as AverageValue FROM Boxes;"
    },
    {
        "question_id": 1698,
        "answer_sql": "SELECT AVG(Value) as AverageValue FROM Boxes;"
    },
    {
        "question_id": 1699,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"
    },
    {
        "question_id": 1700,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"
    },
    {
        "question_id": 1701,
        "answer_sql": "SELECT COUNT(DISTINCT Contents) AS NumberOfDistinctContents FROM Boxes;"
    },
    {
        "question_id": 1702,
        "answer_sql": "SELECT COUNT(DISTINCT Contents) FROM Boxes;"
    },
    {
        "question_id": 1703,
        "answer_sql": "SELECT DISTINCT Warehouses.Location FROM Warehouses INNER JOIN Boxes ON Warehouses.Code = Boxes.Warehouse;"
    },
    {
        "question_id": 1704,
        "answer_sql": "SELECT DISTINCT Location FROM Warehouses;"
    },
    {
        "question_id": 1705,
        "answer_sql": "SELECT Boxes.Code FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1706,
        "answer_sql": "SELECT Boxes.Code FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1707,
        "answer_sql": "SELECT SUM(Boxes.Value) as TotalValue FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1708,
        "answer_sql": "SELECT SUM(Value) AS TotalValue FROM Boxes WHERE Warehouse IN (1, 2);"
    },
    {
        "question_id": 1709,
        "answer_sql": "SELECT Boxes.Contents FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1710,
        "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"
    },
    {
        "question_id": 1711,
        "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes WHERE Boxes.Warehouse NOT IN (SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location = 'New York');"
    },
    {
        "question_id": 1712,
        "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York';"
    },
    {
        "question_id": 1713,
        "answer_sql": "SELECT Warehouses.Location FROM Warehouses WHERE Warehouses.Code IN ( SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents = 'Rocks' GROUP BY Boxes.Warehouse HAVING COUNT(*) = ( SELECT COUNT(*) FROM Boxes WHERE Boxes.Warehouse = Warehouses.Code AND Boxes.Contents = 'Scissors' ) );"
    },
    {
        "question_id": 1714,
        "answer_sql": "SELECT W.Location FROM Warehouses W WHERE W.Code NOT IN ( SELECT B.Warehouse FROM Boxes B WHERE B.Contents = 'Rocks' ) AND W.Code IN ( SELECT B.Warehouse FROM Boxes B WHERE B.Contents = 'Scissors' );"
    },
    {
        "question_id": 1715,
        "answer_sql": "SELECT Warehouses.Code, Warehouses.Location, Warehouses.Capacity FROM Warehouses WHERE Warehouses.Code IN ( SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents = 'Rocks' OR Boxes.Contents = 'Scissors' GROUP BY Boxes.Warehouse HAVING COUNT(*) > 1 );"
    },
    {
        "question_id": 1716,
        "answer_sql": "SELECT DISTINCT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors');"
    },
    {
        "question_id": 1717,
        "answer_sql": ""
    },
    {
        "question_id": 1718,
        "answer_sql": ""
    },
    {
        "question_id": 1719,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes ORDER BY Boxes.Value;"
    },
    {
        "question_id": 1720,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes ORDER BY Boxes.Value;"
    },
    {
        "question_id": 1721,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes);"
    },
    {
        "question_id": 1722,
        "answer_sql": "SELECT Code, Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes);"
    },
    {
        "question_id": 1723,
        "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes WHERE Boxes.Value > ( SELECT AVG(Boxes.Value) FROM Boxes );"
    },
    {
        "question_id": 1724,
        "answer_sql": "SELECT b.Contents, b.Value FROM Boxes AS b WHERE b.Value > (SELECT AVG(b2.Value) FROM Boxes AS b2) GROUP BY b.Contents, b.Value;"
    },
    {
        "question_id": 1725,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents;"
    },
    {
        "question_id": 1726,
        "answer_sql": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents ASC;"
    },
    {
        "question_id": 1727,
        "answer_sql": "SELECT b.Code FROM Boxes AS b WHERE b.Value > (SELECT b2.Value FROM Boxes AS b2 WHERE b2.Contents = 'Rocks');"
    },
    {
        "question_id": 1728,
        "answer_sql": "SELECT Code FROM Boxes WHERE Value > (SELECT Value FROM Boxes WHERE Contents = 'Rocks');"
    },
    {
        "question_id": 1729,
        "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value > (SELECT MAX(Boxes2.Value) FROM Boxes AS Boxes2 WHERE Boxes2.Contents = 'Scissors');"
    },
    {
        "question_id": 1730,
        "answer_sql": "SELECT B.Code, B.Contents FROM Boxes B WHERE B.Value > (SELECT MAX(B2.Value) FROM Boxes B2 WHERE B2.Contents = 'Scissors')"
    },
    {
        "question_id": 1731,
        "answer_sql": "SELECT SUM(Value) as TotalValue FROM Boxes WHERE Warehouse = ( SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1 );"
    },
    {
        "question_id": 1732,
        "answer_sql": "SELECT SUM(Value) as TotalValue FROM Boxes WHERE Warehouse = ( SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1 );"
    },
    {
        "question_id": 1733,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as AverageValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150;"
    },
    {
        "question_id": 1734,
        "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as AverageValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150;"
    },
    {
        "question_id": 1735,
        "answer_sql": "SELECT b.Contents, SUM(b.Value) AS TotalValue, COUNT(b.Code) AS NumberOfBoxes FROM Boxes AS b GROUP BY b.Contents;"
    },
    {
        "question_id": 1736,
        "answer_sql": "SELECT Boxes.Contents, SUM(Boxes.Value) AS TotalValue, COUNT(Boxes.Code) AS NumberOfBoxes FROM Boxes GROUP BY Boxes.Contents;"
    },
    {
        "question_id": 1737,
        "answer_sql": "SELECT Warehouses.Location, SUM(Boxes.Value) AS TotalValue, AVG(Boxes.Value) AS AverageValue, MAX(Warehouses.Capacity) AS MaxCapacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"
    },
    {
        "question_id": 1738,
        "answer_sql": "SELECT Warehouses.Location, COUNT(Warehouses.Code) as TotalWarehouses, AVG(Warehouses.Capacity) as AverageCapacity, MAX(Warehouses.Capacity) as MaximumCapacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"
    },
    {
        "question_id": 1739,
        "answer_sql": "SELECT SUM(Warehouses.Capacity) as Total_Capacity FROM Warehouses"
    },
    {
        "question_id": 1740,
        "answer_sql": "SELECT SUM(Capacity) as Total_Capacity FROM Warehouses;"
    },
    {
        "question_id": 1741,
        "answer_sql": "SELECT Warehouses.Location, MAX(Boxes.Value) as MaxValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"
    },
    {
        "question_id": 1742,
        "answer_sql": "SELECT Warehouses.Location, MAX(Boxes.Value) as MaxValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"
    },
    {
        "question_id": 1743,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxesCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1744,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxesCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1745,
        "answer_sql": "SELECT COUNT(DISTINCT Warehouses.Location) as NumberOfDistinctLocations FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse;"
    },
    {
        "question_id": 1746,
        "answer_sql": "SELECT COUNT(*) FROM Boxes WHERE Contents = 'Rocks';"
    },
    {
        "question_id": 1747,
        "answer_sql": "SELECT Boxes.Code, Warehouses.Location FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1748,
        "answer_sql": "SELECT Boxes.Code, Warehouses.Location FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"
    },
    {
        "question_id": 1749,
        "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'Chicago');"
    },
    {
        "question_id": 1750,
        "answer_sql": "SELECT Boxes.Code FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'Chicago';"
    },
    {
        "question_id": 1751,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1752,
        "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as Boxes_Count FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"
    },
    {
        "question_id": 1753,
        "answer_sql": "SELECT Warehouse, COUNT(DISTINCT Contents) as NumberOfDistinctContents FROM Boxes GROUP BY Warehouse;"
    },
    {
        "question_id": 1754,
        "answer_sql": "SELECT Warehouse, COUNT(DISTINCT Contents) as NumberOfDifferentContents FROM Boxes GROUP BY Warehouse;"
    },
    {
        "question_id": 1755,
        "answer_sql": "SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Capacity > (SELECT AVG(Warehouses.Capacity) FROM Warehouses);"
    },
    {
        "question_id": 1756,
        "answer_sql": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING COUNT(Boxes.Code) > Warehouses.Capacity;"
    },
    {
        "question_id": 1757,
        "answer_sql": "SELECT SUM(Boxes.Value) AS TotalValue FROM Boxes WHERE Boxes.Warehouse NOT IN ( SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location = 'Chicago' );"
    },
    {
        "question_id": 1758,
        "answer_sql": "SELECT SUM(Value) FROM Boxes WHERE Warehouse NOT IN (SELECT Code FROM Warehouses WHERE Location = 'Chicago');"
    },
    {
        "question_id": 1759,
        "answer_sql": "SELECT u.University_Name, u.City, u.State FROM university u ORDER BY u.University_Name ASC;"
    },
    {
        "question_id": 1760,
        "answer_sql": "SELECT u.University_Name, u.City, u.State FROM university u ORDER BY u.University_Name ASC;"
    },
    {
        "question_id": 1761,
        "answer_sql": "SELECT COUNT(*) FROM university WHERE (State = 'Illinois' OR State = 'Ohio')"
    },
    {
        "question_id": 1762,
        "answer_sql": "SELECT COUNT(*) FROM university WHERE (City = 'Illinois' OR City = 'Ohio');"
    },
    {
        "question_id": 1763,
        "answer_sql": "SELECT MAX(Enrollment) as Maximum_Enrollment, AVG(Enrollment) as Average_Enrollment, MIN(Enrollment) as Minimum_Enrollment FROM university;"
    },
    {
        "question_id": 1764,
        "answer_sql": "SELECT MAX(Enrollment) as Maximum_Enrollment, AVG(Enrollment) as Average_Enrollment, MIN(Enrollment) as Minimum_Enrollment FROM university;"
    },
    {
        "question_id": 1765,
        "answer_sql": "SELECT u.Team_Name FROM university u JOIN overall_ranking ora ON u.University_ID = ora.University_ID WHERE u.Enrollment > (SELECT AVG(Enrollment) FROM university);"
    },
    {
        "question_id": 1766,
        "answer_sql": "SELECT u.Team_Name FROM university u WHERE u.Enrollment > (SELECT AVG(Enrollment) FROM university);"
    },
    {
        "question_id": 1767,
        "answer_sql": "SELECT DISTINCT Home_Conference FROM university;"
    },
    {
        "question_id": 1768,
        "answer_sql": "SELECT DISTINCT Home_Conference FROM university;"
    },
    {
        "question_id": 1769,
        "answer_sql": "SELECT Home_Conference, COUNT(DISTINCT University_ID) as Number_of_Universities FROM university GROUP BY Home_Conference;"
    },
    {
        "question_id": 1770,
        "answer_sql": "SELECT Home_Conference, COUNT(DISTINCT University_ID) as Number_of_Universities FROM university GROUP BY Home_Conference;"
    },
    {
        "question_id": 1771,
        "answer_sql": "SELECT State, COUNT(*) as Number_of_Universities FROM university GROUP BY State ORDER BY Number_of_Universities DESC LIMIT 1;"
    },
    {
        "question_id": 1772,
        "answer_sql": "SELECT State, COUNT(*) as University_Count FROM university GROUP BY State ORDER BY University_Count DESC LIMIT 1;"
    },
    {
        "question_id": 1773,
        "answer_sql": "SELECT Home_Conference, AVG(Enrollment) as Average_Enrollment FROM university GROUP BY Home_Conference HAVING AVG(Enrollment) > 2000;"
    },
    {
        "question_id": 1774,
        "answer_sql": "SELECT Home_Conference FROM university GROUP BY Home_Conference HAVING AVG(Enrollment) > 2000;"
    },
    {
        "question_id": 1775,
        "answer_sql": "SELECT Home_Conference FROM university GROUP BY Home_Conference ORDER BY COUNT(*) LIMIT 1;"
    },
    {
        "question_id": 1776,
        "answer_sql": "SELECT Home_Conference, COUNT(*) as Number_of_Students FROM university GROUP BY Home_Conference ORDER BY Number_of_Students LIMIT 1;"
    },
    {
        "question_id": 1777,
        "answer_sql": "SELECT m.Major_Name, m.Major_Code FROM major m JOIN major_ranking mr ON m.Major_ID = mr.Major_ID ORDER BY m.Major_Code ASC;"
    },
    {
        "question_id": 1778,
        "answer_sql": "SELECT major.Major_Name, major.Major_Code FROM major ORDER BY major.Major_Code;"
    },
    {
        "question_id": 1779,
        "answer_sql": "SELECT m.Major_Name, mr.Rank FROM major m JOIN major_ranking mr ON m.Major_ID = mr.Major_ID JOIN university u ON mr.University_ID = u.University_ID WHERE u.University_Name = 'Augustana College';"
    },
    {
        "question_id": 1780,
        "answer_sql": ""
    },
    {
        "question_id": 1781,
        "answer_sql": "SELECT u.University_Name, u.City, u.State FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE m.Major_Name = 'Accounting' AND mr.Rank = 1;"
    },
    {
        "question_id": 1782,
        "answer_sql": "SELECT u.University_Name, u.City, u.State FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE m.Major_Name = 'Accounting' AND mr.Rank = 1;"
    },
    {
        "question_id": 1783,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID WHERE mr.Rank = 1 GROUP BY u.University_Name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1784,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major m ON u.University_ID = m.Major_ID WHERE (SELECT COUNT(*) FROM major_ranking mr WHERE mr.University_ID = u.University_ID) = 1 GROUP BY u.University_Name ORDER BY COUNT(*) DESC LIMIT 1;"
    },
    {
        "question_id": 1785,
        "answer_sql": "SELECT u.University_Name FROM university u WHERE u.University_ID NOT IN ( SELECT mr.University_ID FROM major_ranking mr WHERE mr.Rank = 1 );"
    },
    {
        "question_id": 1786,
        "answer_sql": "SELECT u.University_Name FROM university u WHERE NOT EXISTS ( SELECT 1 FROM major_ranking mr WHERE u.University_ID = mr.University_ID AND mr.Rank = 1 );"
    },
    {
        "question_id": 1787,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON m.Major_ID = mr.Major_ID WHERE m.Major_Name IN ('Accounting', 'Urban Education');"
    },
    {
        "question_id": 1788,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major m ON u.University_ID = m.Major_ID WHERE m.Major_Name IN ('Accounting', 'Urban Education');"
    },
    {
        "question_id": 1789,
        "answer_sql": "SELECT u.University_Name, o.Rank FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE u.State = 'Wisconsin' ORDER BY o.Rank;"
    },
    {
        "question_id": 1790,
        "answer_sql": "SELECT u.University_Name, mr.Rank FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID WHERE u.State = 'Wisconsin';"
    },
    {
        "question_id": 1791,
        "answer_sql": "SELECT u.University_Name, o.Research_point FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE o.Research_point = (SELECT MAX(Research_point) FROM overall_ranking);"
    },
    {
        "question_id": 1792,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN overall_ranking ora ON u.University_ID = ora.University_ID WHERE ora.Research_point = (SELECT MAX(Research_point) FROM overall_ranking);"
    },
    {
        "question_id": 1793,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN overall_ranking ora ON u.University_ID = ora.University_ID ORDER BY ora.Reputation_point ASC;"
    },
    {
        "question_id": 1794,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN overall_ranking ora ON u.University_ID = ora.University_ID ORDER BY ora.Reputation_point ASC;"
    },
    {
        "question_id": 1795,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID WHERE mr.Rank >= 3;"
    },
    {
        "question_id": 1796,
        "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE m.Major_Name = 'Accounting' AND mr.Rank >= 3;"
    },
    {
        "question_id": 1797,
        "answer_sql": "SELECT SUM(university.Enrollment) FROM university INNER JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Rank <= 5;"
    },
    {
        "question_id": 1798,
        "answer_sql": "SELECT SUM(Enrollment) + SUM(Reputation_point) AS Total_Students FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE Rank <= 5;"
    },
    {
        "question_id": 1799,
        "answer_sql": "SELECT u.University_Name, o.Citation_point FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE o.Reputation_point > 0 ORDER BY o.Reputation_point DESC LIMIT 3;"
    },
    {
        "question_id": 1800,
        "answer_sql": "SELECT u.University_Name, o.Reputation_point, m.Major_Name FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID JOIN major_ranking mr ON u.University_ID = mr.University_ID JOIN major m ON mr.Major_ID = m.Major_ID WHERE o.Reputation_point = ( SELECT MAX(Reputation_point) FROM overall_ranking WHERE University_ID NOT IN ( SELECT University_ID FROM overall_ranking WHERE Reputation_point < ( SELECT Reputation_point FROM overall_ranking ORDER BY Reputation_point DESC LIMIT 1 ) ) ) ORDER BY o.Reputation_point DESC LIMIT 3;"
    },
    {
        "question_id": 1801,
        "answer_sql": "SELECT m.Major_Name FROM major m JOIN major_ranking mr ON m.Major_ID = mr.Major_ID JOIN university u ON mr.University_ID = u.University_ID WHERE u.Enrollment < 3000 GROUP BY m.Major_Name HAVING COUNT(DISTINCT u.University_ID) > 2;"
    },
    {
        "question_id": 1802,
        "answer_sql": "SELECT DISTINCT State FROM university WHERE Enrollment > 2 AND State IN ( SELECT State FROM university GROUP BY State HAVING COUNT(University_ID) > 2 )"
    },
    {
        "question_id": 1803,
        "answer_sql": "SELECT Movies.Title FROM Movies WHERE Movies.Rating IS NULL;"
    },
    {
        "question_id": 1804,
        "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Movie IS NULL;"
    },
    {
        "question_id": 1805,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1806,
        "answer_sql": "SELECT Movies.Title FROM Movies WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1807,
        "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon';"
    },
    {
        "question_id": 1808,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon';"
    },
    {
        "question_id": 1809,
        "answer_sql": "SELECT Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie;"
    },
    {
        "question_id": 1810,
        "answer_sql": "SELECT Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie;"
    },
    {
        "question_id": 1811,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1812,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"
    },
    {
        "question_id": 1813,
        "answer_sql": "SELECT COUNT(*) as Total_Movies_Playing FROM MovieTheaters INNER JOIN Movies ON MovieTheaters.Movie = Movies.Code;"
    },
    {
        "question_id": 1814,
        "answer_sql": "SELECT COUNT(*) FROM MovieTheaters WHERE Movie IS NOT NULL;"
    },
    {
        "question_id": 1815,
        "answer_sql": "SELECT COUNT(DISTINCT Movie) as NumberOfDistinctMovies FROM MovieTheaters;"
    },
    {
        "question_id": 1816,
        "answer_sql": "SELECT COUNT(DISTINCT Movies.Code) as NumberOfMovies FROM Movies WHERE Movies.Code IN (SELECT MovieTheaters.Movie FROM MovieTheaters);"
    },
    {
        "question_id": 1817,
        "answer_sql": "SELECT COUNT(DISTINCT MovieTheaters.Code) AS NumberOfDistinctMovieTheaters FROM MovieTheaters;"
    },
    {
        "question_id": 1818,
        "answer_sql": "SELECT COUNT(DISTINCT Code) AS NumberOfMovieTheaters FROM MovieTheaters;"
    },
    {
        "question_id": 1819,
        "answer_sql": "SELECT Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Title LIKE '%Citizen%';"
    },
    {
        "question_id": 1820,
        "answer_sql": "SELECT Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Title LIKE '%Citizen%';"
    },
    {
        "question_id": 1821,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating IN ('G', 'PG');"
    },
    {
        "question_id": 1822,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters INNER JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE (Movies.Rating = 'G' OR Movies.Rating = 'PG');"
    },
    {
        "question_id": 1823,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name IN ('Odeon', 'Imperial');"
    },
    {
        "question_id": 1824,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon' OR MovieTheaters.Name = 'Imperial';"
    },
    {
        "question_id": 1825,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name IN ('Odeon', 'Imperial');"
    },
    {
        "question_id": 1826,
        "answer_sql": ""
    },
    {
        "question_id": 1827,
        "answer_sql": "SELECT Movies.Title FROM Movies WHERE Movies.Code NOT IN ( SELECT MovieTheaters.Movie FROM MovieTheaters WHERE MovieTheaters.Name = 'Odeon' );"
    },
    {
        "question_id": 1828,
        "answer_sql": "SELECT Movies.Title FROM Movies WHERE Movies.Code NOT IN ( SELECT MovieTheaters.Movie FROM MovieTheaters WHERE MovieTheaters.Name = 'Odeon' );"
    },
    {
        "question_id": 1829,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Title ASC;"
    },
    {
        "question_id": 1830,
        "answer_sql": "SELECT Title FROM Movies ORDER BY Title ASC;"
    },
    {
        "question_id": 1831,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Rating;"
    },
    {
        "question_id": 1832,
        "answer_sql": "SELECT Movies.Title, Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Rating;"
    },
    {
        "question_id": 1833,
        "answer_sql": "SELECT MovieTheaters.Name, COUNT(Movies.Code) as MovieCount FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Name ORDER BY MovieCount DESC LIMIT 1;"
    },
    {
        "question_id": 1834,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Name ORDER BY COUNT(Movies.Code) DESC LIMIT 1;"
    },
    {
        "question_id": 1835,
        "answer_sql": "SELECT Movies.Title, COUNT(MovieTheaters.Code) as NumberOfTheaters FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Title ORDER BY NumberOfTheaters DESC LIMIT 1;"
    },
    {
        "question_id": 1836,
        "answer_sql": "SELECT Movies.Title, COUNT(MovieTheaters.Code) as NumberOfTheaters FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Title ORDER BY NumberOfTheaters DESC LIMIT 1;"
    },
    {
        "question_id": 1837,
        "answer_sql": "SELECT Rating, COUNT(*) as NumberOfMovies FROM Movies GROUP BY Rating;"
    },
    {
        "question_id": 1838,
        "answer_sql": "SELECT Rating, COUNT(*) as NumberOfMovies FROM Movies GROUP BY Rating;"
    },
    {
        "question_id": 1839,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1840,
        "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"
    },
    {
        "question_id": 1841,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies);"
    },
    {
        "question_id": 1842,
        "answer_sql": "SELECT DISTINCT MovieTheaters.Name FROM MovieTheaters INNER JOIN Movies ON MovieTheaters.Movie = Movies.Code;"
    },
    {
        "question_id": 1843,
        "answer_sql": "SELECT mt.Name FROM MovieTheaters mt LEFT JOIN Movies m ON mt.Movie = m.Code WHERE m.Code IS NULL;"
    },
    {
        "question_id": 1844,
        "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL;"
    },
    {
        "question_id": 1845,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1846,
        "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G';"
    },
    {
        "question_id": 1847,
        "answer_sql": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie;"
    },
    {
        "question_id": 1848,
        "answer_sql": "SELECT Title FROM Movies;"
    },
    {
        "question_id": 1849,
        "answer_sql": "SELECT DISTINCT Rating FROM Movies;"
    },
    {
        "question_id": 1850,
        "answer_sql": "SELECT DISTINCT Rating FROM Movies;"
    },
    {
        "question_id": 1851,
        "answer_sql": "SELECT * FROM Movies WHERE Rating IS NULL;"
    },
    {
        "question_id": 1852,
        "answer_sql": "SELECT * FROM Movies WHERE Rating IS NULL;"
    },
    {
        "question_id": 1853,
        "answer_sql": ""
    },
    {
        "question_id": 1854,
        "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Movie IS NULL;"
    },
    {
        "question_id": 1855,
        "answer_sql": "SELECT C.Name FROM Client C JOIN Package P ON C.AccountNumber = P.Recipient WHERE P.Weight = (SELECT MAX(Weight) FROM Package);"
    },
    {
        "question_id": 1856,
        "answer_sql": "SELECT C.Name FROM Client C JOIN Package P ON C.AccountNumber = P.Recipient WHERE P.Weight = (SELECT MAX(Weight) FROM Package);"
    },
    {
        "question_id": 1857,
        "answer_sql": "SELECT SUM(Weight) as TotalWeight FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1858,
        "answer_sql": "SELECT SUM(Weight) as TotalWeight FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1859,
        "answer_sql": "SELECT Position FROM Employee WHERE Name = 'Amy Wong';"
    },
    {
        "question_id": 1860,
        "answer_sql": "SELECT Position FROM Employee WHERE Name = 'Amy Wong';"
    },
    {
        "question_id": 1861,
        "answer_sql": "SELECT Employee.Salary, Employee.Position FROM Employee WHERE Employee.Name = 'Turanga Leela';"
    },
    {
        "question_id": 1862,
        "answer_sql": "SELECT Salary, Position FROM Employee WHERE Name = 'Turanga Leela';"
    },
    {
        "question_id": 1863,
        "answer_sql": "SELECT AVG(Salary) AS Average_Salary FROM Employee WHERE Position = 'Intern';"
    },
    {
        "question_id": 1864,
        "answer_sql": "SELECT AVG(Salary) AS AverageSalary FROM Employee WHERE Position = 'Intern';"
    },
    {
        "question_id": 1865,
        "answer_sql": ""
    },
    {
        "question_id": 1866,
        "answer_sql": ""
    },
    {
        "question_id": 1867,
        "answer_sql": "SELECT Package.PackageNumber FROM Package INNER JOIN Shipment ON Package.Shipment = Shipment.ShipmentID INNER JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1868,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1869,
        "answer_sql": "SELECT Package.PackageNumber FROM Package INNER JOIN Shipment ON Package.Shipment = Shipment.ShipmentID INNER JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1870,
        "answer_sql": "SELECT Package.PackageNumber FROM Package INNER JOIN Shipment ON Package.Shipment = Shipment.ShipmentID INNER JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1871,
        "answer_sql": "SELECT Package.PackageNumber, Package.Contents, Package.Weight, Client.Name AS Sender, Client.Name AS Recipient FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'Leo Wong' OR Client.Name = 'Leo Wong' UNION SELECT Package.PackageNumber, Package.Contents, Package.Weight, Client.Name AS Sender, Client.Name AS Recipient FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Leo Wong' OR Client.Name = 'Leo Wong';"
    },
    {
        "question_id": 1872,
        "answer_sql": "SELECT PackageNumber FROM Package WHERE Recipient IN ( SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong' ) OR Sender IN ( SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong' );"
    },
    {
        "question_id": 1873,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1874,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"
    },
    {
        "question_id": 1875,
        "answer_sql": "SELECT Package.Contents, Package.Weight FROM Package INNER JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'John Zoidfarb';"
    },
    {
        "question_id": 1876,
        "answer_sql": "SELECT Package.Contents FROM Package INNER JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'John Zoidfarb';"
    },
    {
        "question_id": 1877,
        "answer_sql": ""
    },
    {
        "question_id": 1878,
        "answer_sql": ""
    },
    {
        "question_id": 1879,
        "answer_sql": "SELECT PackageNumber, Weight FROM Package ORDER BY Weight ASC LIMIT 3;"
    },
    {
        "question_id": 1880,
        "answer_sql": "SELECT PackageNumber, Weight FROM Package ORDER BY Weight ASC LIMIT 3;"
    },
    {
        "question_id": 1881,
        "answer_sql": "SELECT c.Name AS ClientName, COUNT(p.PackageNumber) AS NumberOfPackages FROM Client c JOIN Package p ON c.AccountNumber = p.Sender GROUP BY c.AccountNumber ORDER BY NumberOfPackages DESC LIMIT 1;"
    },
    {
        "question_id": 1882,
        "answer_sql": "SELECT Client.Name, COUNT(Package.PackageNumber) as NumberOfPackages FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name ORDER BY NumberOfPackages DESC LIMIT 1;"
    },
    {
        "question_id": 1883,
        "answer_sql": "SELECT c.Name, COUNT(p.PackageNumber) as NumberOfPackages FROM Client c JOIN Package p ON c.AccountNumber = p.Recipient GROUP BY c.AccountNumber ORDER BY NumberOfPackages LIMIT 1;"
    },
    {
        "question_id": 1884,
        "answer_sql": "SELECT COUNT(*) as Number_of_Packages, Sender FROM Package GROUP BY Sender ORDER BY Number_of_Packages ASC LIMIT 1;"
    },
    {
        "question_id": 1885,
        "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name HAVING COUNT(Package.Shipment) > 1;"
    },
    {
        "question_id": 1886,
        "answer_sql": "SELECT C.Name FROM Client C JOIN Package P ON C.AccountNumber = P.Sender GROUP BY C.AccountNumber HAVING COUNT(DISTINCT P.Shipment) > 1;"
    },
    {
        "question_id": 1887,
        "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';"
    },
    {
        "question_id": 1888,
        "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';"
    },
    {
        "question_id": 1889,
        "answer_sql": "SELECT Planet.Name, Planet.Coordinates FROM Planet ORDER BY Planet.Name ASC;"
    },
    {
        "question_id": 1890,
        "answer_sql": "SELECT Planet.Name, Planet.Coordinates FROM Planet ORDER BY Planet.Name ASC;"
    },
    {
        "question_id": 1891,
        "answer_sql": "SELECT Shipment.ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'Phillip J. Fry';"
    },
    {
        "question_id": 1892,
        "answer_sql": ""
    },
    {
        "question_id": 1893,
        "answer_sql": "SELECT Date FROM Shipment;"
    },
    {
        "question_id": 1894,
        "answer_sql": "SELECT Date FROM Shipment;"
    },
    {
        "question_id": 1895,
        "answer_sql": "SELECT ShipmentID FROM Shipment INNER JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';"
    },
    {
        "question_id": 1896,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars');"
    },
    {
        "question_id": 1897,
        "answer_sql": "SELECT ShipmentID FROM Shipment JOIN Has_Clearance ON Shipment.Manager = Has_Clearance.Employee JOIN Planet ON Has_Clearance.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars' AND Has_Clearance.Level = 2;"
    },
    {
        "question_id": 1898,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"
    },
    {
        "question_id": 1899,
        "answer_sql": "SELECT ShipmentID FROM Shipment JOIN Has_Clearance ON Shipment.Manager = Has_Clearance.Employee JOIN Planet ON Has_Clearance.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars' OR Has_Clearance.Level = 1;"
    },
    {
        "question_id": 1900,
        "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"
    },
    {
        "question_id": 1901,
        "answer_sql": "SELECT P.Name, COUNT(S.ShipmentID) as TotalShipments FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.Name;"
    },
    {
        "question_id": 1902,
        "answer_sql": "SELECT P.Name, COUNT(S.ShipmentID) as NumberOfShipments FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.Name;"
    },
    {
        "question_id": 1903,
        "answer_sql": "SELECT P.Name AS PlanetName, COUNT(S.ShipmentID) AS NumberOfShipments FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.Name ORDER BY NumberOfShipments DESC LIMIT 1;"
    },
    {
        "question_id": 1904,
        "answer_sql": "SELECT P.Name AS PlanetName, COUNT(S.ShipmentID) AS NumberOfShipments FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.PlanetID ORDER BY NumberOfShipments DESC LIMIT 1;"
    },
    {
        "question_id": 1905,
        "answer_sql": "SELECT E.Name, COUNT(S.ShipmentID) as NumberOfShipments FROM Employee E JOIN Shipment S ON E.EmployeeID = S.Manager GROUP BY E.EmployeeID;"
    },
    {
        "question_id": 1906,
        "answer_sql": "SELECT COUNT(Shipment.ShipmentID) as NumberOfShipments, Employee.Name as ManagerName FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID GROUP BY Shipment.Manager;"
    },
    {
        "question_id": 1907,
        "answer_sql": "SELECT SUM(Weight) AS TotalWeightOnMars FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';"
    },
    {
        "question_id": 1908,
        "answer_sql": "SELECT SUM(Weight) as TotalWeight FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';"
    },
    {
        "question_id": 1909,
        "answer_sql": "SELECT P.Name AS PlanetName, SUM(Pkg.Weight) AS TotalWeight FROM Shipment AS S JOIN Planet AS P ON S.Planet = P.PlanetID JOIN Package AS Pkg ON S.ShipmentID = Pkg.Shipment GROUP BY P.Name;"
    },
    {
        "question_id": 1910,
        "answer_sql": ""
    },
    {
        "question_id": 1911,
        "answer_sql": "SELECT P.Name FROM Planet P WHERE ( SELECT SUM(Pkg.Weight) FROM Package Pkg WHERE Pkg.Shipment IN ( SELECT S.ShipmentID FROM Shipment S WHERE S.Planet = P.PlanetID ) ) > 30;"
    },
    {
        "question_id": 1912,
        "answer_sql": "SELECT P.Name FROM Planet P WHERE ( SELECT SUM(Package.Weight) FROM Package WHERE Package.Shipment IN ( SELECT Shipment.ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID ) ) > 30;"
    },
    {
        "question_id": 1913,
        "answer_sql": "SELECT Package.PackageNumber FROM Package INNER JOIN Shipment ON Package.Shipment = Shipment.ShipmentID INNER JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Omicron Persei 8' AND Package.Sender IN ( SELECT Client.AccountNumber FROM Client INNER JOIN Package ON Client.AccountNumber = Package.Recipient WHERE Client.Name = 'Zapp Brannigan' );"
    },
    {
        "question_id": 1914,
        "answer_sql": "SELECT COUNT(*) FROM Package WHERE Shipment IN (SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Omicron Persei 8') AND Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan'))"
    },
    {
        "question_id": 1915,
        "answer_sql": "SELECT Package.PackageNumber FROM Package INNER JOIN Shipment ON Package.Shipment = Shipment.ShipmentID INNER JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Omicron Persei 8' AND Package.Sender IN (SELECT Client.AccountNumber FROM Client WHERE Client.Name = 'Zapp Brannigan');"
    },
    {
        "question_id": 1916,
        "answer_sql": "SELECT COUNT(*) as NumberOfPackages FROM Package WHERE Shipment IN ( SELECT ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Omicron Persei 8' ) OR Sender IN ( SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan' );"
    },
    {
        "question_id": 1917,
        "answer_sql": "SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30;"
    },
    {
        "question_id": 1918,
        "answer_sql": "SELECT PackageNumber, Weight FROM Package WHERE Weight BETWEEN 10 AND 30;"
    },
    {
        "question_id": 1919,
        "answer_sql": "SELECT Name FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') );"
    },
    {
        "question_id": 1920,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE NOT EXISTS ( SELECT 1 FROM Has_Clearance HC WHERE E.EmployeeID = HC.Employee AND HC.Planet = 1 );"
    },
    {
        "question_id": 1921,
        "answer_sql": ""
    },
    {
        "question_id": 1922,
        "answer_sql": ""
    },
    {
        "question_id": 1923,
        "answer_sql": "SELECT P.Name FROM Planet P WHERE P.PlanetID IN ( SELECT HC.Planet FROM Has_Clearance HC GROUP BY HC.Planet HAVING COUNT(DISTINCT HC.Employee) = 1 );"
    },
    {
        "question_id": 1924,
        "answer_sql": "SELECT P.Name FROM Planet P WHERE EXISTS ( SELECT 1 FROM Has_Clearance HC INNER JOIN Employee E ON HC.Employee = E.EmployeeID WHERE HC.Planet = P.PlanetID AND E.EmployeeID IN ( SELECT E.EmployeeID FROM Employee E WHERE E.EmployeeID IN ( SELECT HC.Employee FROM Has_Clearance HC GROUP BY HC.Employee HAVING COUNT(DISTINCT HC.Planet) = 1 ) ) );"
    },
    {
        "question_id": 1925,
        "answer_sql": "SELECT E.Name FROM Employee E JOIN Has_Clearance HC ON E.EmployeeID = HC.Employee WHERE E.Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1926,
        "answer_sql": "SELECT E.Name FROM Employee E JOIN Has_Clearance HC ON E.EmployeeID = HC.Employee WHERE E.Salary BETWEEN 5000 AND 10000;"
    },
    {
        "question_id": 1927,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary > ( SELECT AVG(E2.Salary) FROM Employee E2 );"
    },
    {
        "question_id": 1928,
        "answer_sql": "SELECT E.Name FROM Employee E WHERE E.Salary > ( SELECT AVG(E2.Salary) FROM Employee E2 ) OR E.Salary > 5000;"
    },
    {
        "question_id": 1929,
        "answer_sql": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') );"
    },
    {
        "question_id": 1930,
        "answer_sql": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Level = 3 );"
    },
    {
        "question_id": 1931,
        "answer_sql": "SELECT COUNT(*) FROM game;"
    },
    {
        "question_id": 1932,
        "answer_sql": "SELECT COUNT(*) FROM game;"
    },
    {
        "question_id": 1933,
        "answer_sql": "SELECT Title, Developers FROM game ORDER BY Units_sold_Millions DESC;"
    },
    {
        "question_id": 1934,
        "answer_sql": "SELECT game.Title, game.Developers FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID ORDER BY game.Units_sold_Millions DESC;"
    },
    {
        "question_id": 1935,
        "answer_sql": "SELECT AVG(game.Units_sold_Millions) as Average_Units_Sold FROM game WHERE game.Developers != 'Nintendo' AND game.Units_sold_Millions IS NOT NULL;"
    },
    {
        "question_id": 1936,
        "answer_sql": "SELECT AVG( Units_sold_Millions ) FROM game WHERE Developers != 'Nintendo' AND Platform_ID IN (SELECT Platform_ID FROM platform WHERE Platform_name = 'Nintendo');"
    },
    {
        "question_id": 1937,
        "answer_sql": "SELECT Platform_name, Market_district FROM platform;"
    },
    {
        "question_id": 1938,
        "answer_sql": "SELECT platform.Platform_name, platform.Market_district FROM platform JOIN game ON platform.Platform_ID = game.Platform_ID;"
    },
    {
        "question_id": 1939,
        "answer_sql": "SELECT DISTINCT p.Platform_name, p.Platform_ID FROM platform p JOIN game g ON p.Platform_ID = g.Platform_ID WHERE p.Download_rank = 1;"
    },
    {
        "question_id": 1940,
        "answer_sql": "SELECT p.Platform_ID, p.Platform_name FROM platform p WHERE p.Download_rank = 1;"
    },
    {
        "question_id": 1941,
        "answer_sql": "SELECT MAX(Rank_of_the_year) as Maximum_Rank, MIN(Rank_of_the_year) as Minimum_Rank FROM player;"
    },
    {
        "question_id": 1942,
        "answer_sql": "SELECT MAX(Rank_of_the_year) AS Maximum_Rank_of_the_Year, MIN(Rank_of_the_year) AS Minimum_Rank_of_the_Year FROM player;"
    },
    {
        "question_id": 1943,
        "answer_sql": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year < 3;"
    },
    {
        "question_id": 1944,
        "answer_sql": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year <= 3;"
    },
    {
        "question_id": 1945,
        "answer_sql": ""
    },
    {
        "question_id": 1946,
        "answer_sql": "SELECT player.Player_name FROM player ORDER BY player.Player_name ASC;"
    },
    {
        "question_id": 1947,
        "answer_sql": "SELECT player.Player_ID, player.Player_name, player.College, player.Rank_of_the_year FROM player ORDER BY player.Rank_of_the_year DESC;"
    },
    {
        "question_id": 1948,
        "answer_sql": ""
    },
    {
        "question_id": 1949,
        "answer_sql": "SELECT player.Player_name, player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = 'Super Mario World';"
    },
    {
        "question_id": 1950,
        "answer_sql": "SELECT player.Player_name, player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = 'Super Mario World';"
    },
    {
        "question_id": 1951,
        "answer_sql": "SELECT DISTINCT game.Developers FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = 'Auburn';"
    },
    {
        "question_id": 1952,
        "answer_sql": ""
    },
    {
        "question_id": 1953,
        "answer_sql": "SELECT AVG( game . Units_sold_Millions ) as Average_Units_Sold_in_Millions FROM game JOIN game_player ON game . Game_ID = game_player . Game_ID JOIN player ON game_player . Player_ID = player . Player_ID WHERE player . Position = 'Guard';"
    },
    {
        "question_id": 1954,
        "answer_sql": "SELECT AVG(game. Units_sold_Millions ) FROM game JOIN game_player ON game. Game_ID = game_player. Game_ID JOIN player ON game_player. Player_ID = player. Player_ID WHERE player. Position = 'Guard';"
    },
    {
        "question_id": 1955,
        "answer_sql": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID"
    },
    {
        "question_id": 1956,
        "answer_sql": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID;"
    },
    {
        "question_id": 1957,
        "answer_sql": "SELECT g.Title FROM game g JOIN platform p ON g.Platform_ID = p.Platform_ID WHERE p.Market_district IN ('Asia', 'USA');"
    },
    {
        "question_id": 1958,
        "answer_sql": "SELECT game.Title FROM game INNER JOIN platform ON game.Platform_ID = platform.Platform_ID WHERE platform.Market_district IN ('Asia', 'USA');"
    },
    {
        "question_id": 1959,
        "answer_sql": ""
    },
    {
        "question_id": 1960,
        "answer_sql": "SELECT Franchise, COUNT(*) as Number_of_Games FROM game GROUP BY Franchise;"
    },
    {
        "question_id": 1961,
        "answer_sql": ""
    },
    {
        "question_id": 1962,
        "answer_sql": "SELECT Franchise, COUNT(*) as Game_Count FROM game GROUP BY Franchise ORDER BY Game_Count DESC LIMIT 1;"
    },
    {
        "question_id": 1963,
        "answer_sql": ""
    },
    {
        "question_id": 1964,
        "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*) > 2;"
    },
    {
        "question_id": 1965,
        "answer_sql": "SELECT p.Player_name FROM player p LEFT JOIN game_player gp ON p.Player_ID = gp.Player_ID WHERE gp.Game_ID IS NULL;"
    },
    {
        "question_id": 1966,
        "answer_sql": "SELECT player.Player_name FROM player WHERE player.Player_ID NOT IN ( SELECT game_player.Player_ID FROM game_player WHERE game_player.If_active = 1 );"
    },
    {
        "question_id": 1967,
        "answer_sql": "SELECT g.Title FROM game g JOIN game_player gp1 ON g.Game_ID = gp1.Game_ID JOIN player p1 ON gp1.Player_ID = p1.Player_ID JOIN game_player gp2 ON g.Game_ID = gp2.Game_ID JOIN player p2 ON gp2.Player_ID = p2.Player_ID WHERE p1.College = 'Oklahoma' AND p2.College = 'Auburn';"
    },
    {
        "question_id": 1968,
        "answer_sql": "SELECT g.Title FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.College = 'Oklahoma' OR p.College = 'Auburn';"
    },
    {
        "question_id": 1969,
        "answer_sql": "SELECT DISTINCT Franchise FROM game;"
    },
    {
        "question_id": 1970,
        "answer_sql": "SELECT DISTINCT Franchise FROM game;"
    },
    {
        "question_id": 1971,
        "answer_sql": "SELECT g.Title FROM game g WHERE g.Game_ID NOT IN ( SELECT gp.Game_ID FROM game_player gp INNER JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position = 'Guard' );"
    },
    {
        "question_id": 1972,
        "answer_sql": "SELECT g.Title FROM game g WHERE g.Game_ID NOT IN ( SELECT gp.Game_ID FROM game_player gp WHERE gp.If_active = 1 AND gp.Player_ID IN ( SELECT p.Player_ID FROM player p WHERE p.Position = 'Guard' ) );"
    },
    {
        "question_id": 1973,
        "answer_sql": "SELECT p.Name, SUM(b.Sale_Amount) as Total_Sales FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name ORDER BY Total_Sales DESC;"
    },
    {
        "question_id": 1974,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p ORDER BY p.Year_Profits_billion DESC;"
    },
    {
        "question_id": 1975,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion, p.Month_Profits_billion FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name HAVING SUM(b.Sale_Amount) > 15 AND SUM(b.Sale_Amount) > 1;"
    },
    {
        "question_id": 1976,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Year_Profits_billion > 15 OR p.Month_Profits_billion > 1;"
    },
    {
        "question_id": 1977,
        "answer_sql": "SELECT p.Name, AVG(p.Month_Profits_billion) AS Average_Month_Profit, MAX(p.Year_Profits_billion) AS Max_Year_Profit FROM book b JOIN press p ON b.Press_ID = p.Press_ID GROUP BY p.Name;"
    },
    {
        "question_id": 1978,
        "answer_sql": "SELECT p.Name, AVG(p.Year_Profits_billion) as Average_Yearly_Profit, MAX(p.Year_Profits_billion) as Max_Yearly_Profit FROM book b JOIN press p ON b.Press_ID = p.Press_ID GROUP BY p.Name;"
    },
    {
        "question_id": 1979,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(p2.Month_Profits_billion) FROM press p2 );"
    },
    {
        "question_id": 1980,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press);"
    },
    {
        "question_id": 1981,
        "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(Month_Profits_billion) FROM press ) OR p.Month_Profits_billion = ( SELECT MIN(Month_Profits_billion) FROM press );"
    },
    {
        "question_id": 1982,
        "answer_sql": ""
    },
    {
        "question_id": 1983,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1984,
        "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"
    },
    {
        "question_id": 1985,
        "answer_sql": "SELECT Gender, AVG(Age) as Average_Age FROM author GROUP BY Gender;"
    },
    {
        "question_id": 1986,
        "answer_sql": "SELECT Gender, AVG(Age) as Average_Age FROM author GROUP BY Gender;"
    },
    {
        "question_id": 1987,
        "answer_sql": "SELECT Gender, COUNT(*) as Number_of_Authors FROM author WHERE Age > 30 GROUP BY Gender;"
    },
    {
        "question_id": 1988,
        "answer_sql": "SELECT Gender, COUNT(*) as Number_of_Authors FROM author WHERE Age > 30 GROUP BY Gender;"
    },
    {
        "question_id": 1989,
        "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"
    },
    {
        "question_id": 1990,
        "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"
    },
    {
        "question_id": 1991,
        "answer_sql": "SELECT b.Book_Series, COUNT(b.Book_ID) as Number_of_Books FROM book b GROUP BY b.Book_Series;"
    },
    {
        "question_id": 1992,
        "answer_sql": "SELECT b.Book_Series, COUNT(b.Book_ID) as Book_Count FROM book b GROUP BY b.Book_Series;"
    },
    {
        "question_id": 1993,
        "answer_sql": "SELECT b.Title, b.Release_date FROM book b JOIN ( SELECT Book_ID, Title, MAX(Sale_Amount) as Max_Sale_Amount FROM book GROUP BY Book_ID, Title ORDER BY Max_Sale_Amount DESC LIMIT 5 ) top_selling_books ON b.Book_ID = top_selling_books.Book_ID ORDER BY b.Release_date DESC;"
    },
    {
        "question_id": 1994,
        "answer_sql": "SELECT Title, Release_date FROM book ORDER BY Sale_Amount DESC LIMIT 5;"
    },
    {
        "question_id": 1995,
        "answer_sql": "SELECT b.Book_Series FROM book b JOIN ( SELECT b.Book_Series, COUNT(*) as book_count FROM book b GROUP BY b.Book_Series HAVING COUNT(*) > 1 ) as books ON b.Book_Series = books.Book_Series WHERE CAST(b.Sale_Amount AS INTEGER) > 500 AND CAST(b.Sale_Amount AS INTEGER) < 1000;"
    },
    {
        "question_id": 1996,
        "answer_sql": "SELECT b.Book_Series FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount > '1000' AND b.Sale_Amount < '500' GROUP BY b.Book_Series HAVING COUNT(*) > 1;"
    },
    {
        "question_id": 1997,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID JOIN press p ON b.Press_ID = p.Press_ID WHERE b.Book_Series IN ('MM', 'LT') GROUP BY a.Name HAVING COUNT(DISTINCT b.Book_Series) = 2;"
    },
    {
        "question_id": 1998,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID JOIN press p ON b.Press_ID = p.Press_ID WHERE b.Book_Series IN ('MM', 'LT') GROUP BY a.Name HAVING COUNT(DISTINCT b.Book_Series) = 2;"
    },
    {
        "question_id": 1999,
        "answer_sql": "SELECT a.Name, a.Age FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Author_ID IS NULL;"
    },
    {
        "question_id": 2000,
        "answer_sql": "SELECT a.Name FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Author_ID IS NULL;"
    },
    {
        "question_id": 2001,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Name HAVING COUNT(b.Book_ID) > 1;"
    },
    {
        "question_id": 2002,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Name HAVING COUNT(b.Book_ID) > 1;"
    },
    {
        "question_id": 2003,
        "answer_sql": "SELECT b.Title, a.Name, p.Name FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3;"
    },
    {
        "question_id": 2004,
        "answer_sql": "SELECT b.Title, a.Name, p.Name FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID GROUP BY b.Title, p.Name ORDER BY SUM(b.Sale_Amount) DESC LIMIT 3;"
    },
    {
        "question_id": 2005,
        "answer_sql": "SELECT p.Name, SUM(b.Sale_Amount) as Total_Book_Sale_Amount FROM book b JOIN press p ON b.Press_ID = p.Press_ID GROUP BY b.Press_ID;"
    },
    {
        "question_id": 2006,
        "answer_sql": "SELECT p.Name, SUM(b.Sale_Amount) as Total_Book_Sale_Amount FROM book b JOIN press p ON b.Press_ID = p.Press_ID GROUP BY b.Press_ID;"
    },
    {
        "question_id": 2007,
        "answer_sql": "SELECT p.Name, COUNT(b.Book_ID) as Number_of_books_sold_more_than_1000 FROM book b JOIN press p ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Name;"
    },
    {
        "question_id": 2008,
        "answer_sql": "SELECT p.Name, COUNT(b.Book_ID) as Number_of_books_sold_above_1000 FROM press p JOIN book b ON p.Press_ID = b.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Name;"
    },
    {
        "question_id": 2009,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Sale_Amount = (SELECT MAX(b2.Sale_Amount) FROM book b2 WHERE b2.Author_ID = a.Author_ID);"
    },
    {
        "question_id": 2010,
        "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Author_ID ORDER BY MAX(b.Sale_Amount) DESC LIMIT 1;"
    },
    {
        "question_id": 2011,
        "answer_sql": "SELECT a.Name, a.Gender FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Name, a.Gender HAVING COUNT(b.Book_ID) = ( SELECT COUNT(Book_ID) FROM book GROUP BY Author_ID ORDER BY COUNT(Book_ID) DESC LIMIT 1 );"
    },
    {
        "question_id": 2012,
        "answer_sql": "SELECT a.Name, a.Gender FROM author a WHERE a.Author_ID IN ( SELECT b.Author_ID FROM book b GROUP BY b.Author_ID ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 2013,
        "answer_sql": "SELECT a.Name FROM author a WHERE NOT EXISTS ( SELECT 1 FROM book b WHERE b.Author_ID = a.Author_ID AND b.Press_ID = (SELECT Press_ID FROM press WHERE Name = 'Accor') );"
    },
    {
        "question_id": 2014,
        "answer_sql": "SELECT a.Name FROM author a WHERE NOT EXISTS ( SELECT 1 FROM book b WHERE b.Author_ID = a.Author_ID AND b.Press_ID = (SELECT Press_ID FROM press WHERE Name = 'Accor') );"
    },
    {
        "question_id": 2015,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name, p.Year_Profits_billion HAVING COUNT(b.Book_ID) > 2;"
    },
    {
        "question_id": 2016,
        "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Name, p.Year_Profits_billion HAVING COUNT(b.Book_ID) > 2;"
    },
    {
        "question_id": 2017,
        "answer_sql": "SELECT COUNT(*) as Number_of_Authors FROM Authors;"
    },
    {
        "question_id": 2018,
        "answer_sql": "SELECT author_name FROM Documents;"
    },
    {
        "question_id": 2019,
        "answer_sql": "SELECT author_name, other_details FROM Authors;"
    },
    {
        "question_id": 2020,
        "answer_sql": "SELECT other_details FROM Authors WHERE author_name = 'Addison Denesik';"
    },
    {
        "question_id": 2021,
        "answer_sql": "SELECT COUNT(*) as Number_of_Documents FROM Documents WHERE document_id IN ( SELECT document_id FROM Documents_Processes WHERE process_id IN ( SELECT process_id FROM Business_Processes WHERE process_id IN ( SELECT process_id FROM Staff_in_Processes WHERE staff_id IN ( SELECT staff_id FROM Staff WHERE staff_id IN ( SELECT staff_id FROM Staff_in_Processes WHERE document_id IN ( SELECT document_id FROM Documents_Processes WHERE process_outcome_code = 'Completed' ) ) ) ) ) );"
    },
    {
        "question_id": 2022,
        "answer_sql": "SELECT author_name FROM Documents WHERE document_id = 4;"
    },
    {
        "question_id": 2023,
        "answer_sql": "SELECT a.author_name FROM Authors a JOIN Documents d ON a.author_name = d.author_name WHERE d.document_name = 'Travel to Brazil';"
    },
    {
        "question_id": 2024,
        "answer_sql": "SELECT COUNT(*) as total_documents FROM Documents WHERE author_name = 'Era Kerluke';"
    },
    {
        "question_id": 2025,
        "answer_sql": "SELECT Documents.document_name, Documents.document_description FROM Documents;"
    },
    {
        "question_id": 2026,
        "answer_sql": "SELECT d.document_id, d.document_name FROM Documents d JOIN Authors a ON d.author_name = a.author_name WHERE a.author_name = 'Bianka Cummings';"
    },
    {
        "question_id": 2027,
        "answer_sql": "SELECT Authors.author_name, Authors.other_details FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name WHERE Documents.document_name = 'Travel to China';"
    },
    {
        "question_id": 2028,
        "answer_sql": "SELECT Authors.author_name, COUNT(Documents.document_id) as number_of_documents FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.author_name;"
    },
    {
        "question_id": 2029,
        "answer_sql": "SELECT a.author_name, COUNT(d.document_id) as document_count FROM Authors a JOIN Documents d ON a.author_name = d.author_name GROUP BY a.author_name ORDER BY document_count DESC LIMIT 1;"
    },
    {
        "question_id": 2030,
        "answer_sql": "SELECT a.author_name FROM Authors a JOIN Documents d ON a.author_name = d.author_name GROUP BY a.author_name HAVING COUNT(d.document_id) >= 2;"
    },
    {
        "question_id": 2031,
        "answer_sql": "SELECT COUNT(*) FROM Business_Processes;"
    },
    {
        "question_id": 2032,
        "answer_sql": "SELECT bp.process_id, bp.process_name, bp.process_description FROM Business_Processes bp JOIN Documents_Processes dp ON bp.process_id = dp.process_id WHERE dp.process_id = 9;"
    },
    {
        "question_id": 2033,
        "answer_sql": "SELECT process_name FROM Business_Processes WHERE process_id IN ( SELECT process_id FROM Documents_Processes WHERE document_id IN ( SELECT document_id FROM Staff_in_Processes WHERE process_id = 9 ) );"
    },
    {
        "question_id": 2034,
        "answer_sql": "SELECT COUNT(DISTINCT process_outcome_code) AS NumberOfProcessOutcomes FROM Documents_Processes WHERE process_outcome_code IN ( SELECT process_outcome_code FROM Documents_Processes JOIN Business_Processes ON Business_Processes.process_id = Documents_Processes.process_id WHERE process_name = '[Hint]' );"
    },
    {
        "question_id": 2035,
        "answer_sql": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes;"
    },
    {
        "question_id": 2036,
        "answer_sql": "SELECT process_outcome_description FROM Process_Outcomes WHERE process_outcome_code = 'working';"
    },
    {
        "question_id": 2037,
        "answer_sql": "SELECT COUNT(DISTINCT process_status_code) as Number_of_Process_Status FROM Documents_Processes WHERE process_status_code IN (SELECT process_status_code FROM Process_Status WHERE process_status_description = 'Completed');"
    },
    {
        "question_id": 2038,
        "answer_sql": "SELECT process_status_code, process_status_description FROM Process_Status;"
    },
    {
        "question_id": 2039,
        "answer_sql": "SELECT process_status_description FROM Process_Status WHERE process_status_code = 'ct';"
    },
    {
        "question_id": 2040,
        "answer_sql": "SELECT COUNT(DISTINCT staff_id) as Number_of_Staff FROM Staff_in_Processes WHERE staff_id IN (SELECT staff_id FROM Staff);"
    },
    {
        "question_id": 2041,
        "answer_sql": "SELECT Staff.staff_id, Staff.staff_details FROM Staff JOIN Staff_in_Processes ON Staff.staff_id = Staff_in_Processes.staff_id;"
    },
    {
        "question_id": 2042,
        "answer_sql": "SELECT * FROM Staff WHERE staff_id = 100;"
    },
    {
        "question_id": 2043,
        "answer_sql": "SELECT COUNT(DISTINCT staff_role_code) as Number_of_Staff_Roles FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2044,
        "answer_sql": "SELECT staff_role_code, staff_role_description FROM Ref_Staff_Roles;"
    },
    {
        "question_id": 2045,
        "answer_sql": "SELECT staff_role_description FROM Ref_Staff_Roles WHERE staff_role_code = 'HR';"
    },
    {
        "question_id": 2046,
        "answer_sql": "SELECT COUNT(*) as total_documents FROM Documents_Processes WHERE process_id IN ( SELECT process_id FROM Business_Processes WHERE process_id IN ( SELECT process_id FROM Staff_in_Processes WHERE staff_id IN ( SELECT staff_id FROM Staff WHERE staff_id IN ( SELECT staff_id FROM Staff_in_Processes WHERE document_id IN ( SELECT document_id FROM Documents_Processes WHERE process_outcome_code = 'Completed' ) ) ) ) );"
    },
    {
        "question_id": 2047,
        "answer_sql": "SELECT DISTINCT Business_Processes.process_id FROM Business_Processes INNER JOIN Documents_Processes ON Business_Processes.process_id = Documents_Processes.process_id;"
    },
    {
        "question_id": 2048,
        "answer_sql": "SELECT D.document_id FROM Documents D WHERE D.document_id NOT IN ( SELECT DP.document_id FROM Documents_Processes DP );"
    },
    {
        "question_id": 2049,
        "answer_sql": ""
    },
    {
        "question_id": 2050,
        "answer_sql": "SELECT process_outcome_description, process_status_description FROM Documents_Processes JOIN Process_Outcomes ON Documents_Processes.process_outcome_code = Process_Outcomes.process_outcome_code JOIN Process_Status ON Documents_Processes.process_status_code = Process_Status.process_status_code WHERE document_id = 0;"
    },
    {
        "question_id": 2051,
        "answer_sql": "SELECT Business_Processes.process_name FROM Business_Processes JOIN Documents_Processes ON Business_Processes.process_id = Documents_Processes.process_id JOIN Documents ON Documents_Processes.document_id = Documents.document_id WHERE Documents.document_name = 'Travel to Brazil';"
    },
    {
        "question_id": 2052,
        "answer_sql": "SELECT Business_Processes.process_id, COUNT(Documents_Processes.document_id) as document_count FROM Business_Processes JOIN Documents_Processes ON Business_Processes.process_id = Documents_Processes.process_id GROUP BY Business_Processes.process_id;"
    },
    {
        "question_id": 2053,
        "answer_sql": "SELECT COUNT(DISTINCT staff_id) AS number_of_staff FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9;"
    },
    {
        "question_id": 2054,
        "answer_sql": "SELECT S.staff_id, COUNT(DISTINCT DP.document_id) as num_doc_processes FROM Staff S JOIN Staff_in_Processes SPI ON S.staff_id = SPI.staff_id JOIN Documents_Processes DP ON SPI.document_id = DP.document_id AND SPI.process_id = DP.process_id GROUP BY S.staff_id;"
    },
    {
        "question_id": 2055,
        "answer_sql": "SELECT Ref_Staff_Roles.staff_role_code, COUNT(Staff_in_Processes.staff_id) as Number_of_Document_Processes FROM Staff_in_Processes INNER JOIN Ref_Staff_Roles ON Staff_in_Processes.staff_role_code = Ref_Staff_Roles.staff_role_code GROUP BY Ref_Staff_Roles.staff_role_code;"
    },
    {
        "question_id": 2056,
        "answer_sql": "SELECT COUNT(DISTINCT staff_role_code) as number_of_roles FROM Staff_in_Processes WHERE staff_id = 3;"
    },
    {
        "question_id": 2057,
        "answer_sql": "SELECT COUNT(*) as 'Number of Agencies' FROM Agencies;"
    },
    {
        "question_id": 2058,
        "answer_sql": "SELECT COUNT(*) as total_agencies FROM Agencies;"
    },
    {
        "question_id": 2059,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id GROUP BY A.agency_id;"
    },
    {
        "question_id": 2060,
        "answer_sql": "SELECT agency_id, agency_details FROM Agencies;"
    },
    {
        "question_id": 2061,
        "answer_sql": "SELECT COUNT(DISTINCT client_id) AS Number_of_Clients FROM Clients;"
    },
    {
        "question_id": 2062,
        "answer_sql": "SELECT COUNT(DISTINCT client_id) as total_clients FROM Clients;"
    },
    {
        "question_id": 2063,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients INNER JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2064,
        "answer_sql": "SELECT client_id, client_details FROM Clients;"
    },
    {
        "question_id": 2065,
        "answer_sql": "SELECT Agencies.agency_id, COUNT(Clients.client_id) as number_of_clients FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id GROUP BY Agencies.agency_id;"
    },
    {
        "question_id": 2066,
        "answer_sql": "SELECT A.agency_id, A.agency_details, COUNT(C.client_id) as number_of_clients FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id;"
    },
    {
        "question_id": 2067,
        "answer_sql": "SELECT A.agency_id, A.agency_details, COUNT(C.client_id) as client_count FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id ORDER BY client_count DESC LIMIT 1;"
    },
    {
        "question_id": 2068,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A WHERE ( SELECT COUNT(*) FROM Clients C WHERE C.agency_id = A.agency_id ) = ( SELECT MAX(count_clients) FROM ( SELECT COUNT(*) AS count_clients FROM Clients GROUP BY agency_id ) );"
    },
    {
        "question_id": 2069,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id, A.agency_details HAVING COUNT(C.client_id) >= 2;"
    },
    {
        "question_id": 2070,
        "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A WHERE ( SELECT COUNT(*) FROM Clients C WHERE A.agency_id = C.agency_id ) >= 2;"
    },
    {
        "question_id": 2071,
        "answer_sql": "SELECT Agencies.agency_id, Agencies.agency_details FROM Clients INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Clients.client_details = 'Mac';"
    },
    {
        "question_id": 2072,
        "answer_sql": "SELECT `agency_details` FROM `Clients` INNER JOIN `Agencies` ON `Clients`.`agency_id` = `Agencies`.`agency_id` WHERE `Clients`.`client_details` = 'Mac';"
    },
    {
        "question_id": 2073,
        "answer_sql": "SELECT Clients.client_details, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2074,
        "answer_sql": "SELECT Clients.client_details, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"
    },
    {
        "question_id": 2075,
        "answer_sql": "SELECT sic_code, COUNT(client_id) as number_of_clients FROM Clients GROUP BY sic_code;"
    },
    {
        "question_id": 2076,
        "answer_sql": "SELECT sic_code, COUNT(client_id) as number_of_clients FROM Clients GROUP BY sic_code;"
    },
    {
        "question_id": 2077,
        "answer_sql": ""
    },
    {
        "question_id": 2078,
        "answer_sql": "SELECT Clients.client_details, Clients.sic_code, Clients.client_id FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Clients.sic_code = 'Bad';"
    },
    {
        "question_id": 2079,
        "answer_sql": "SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id;"
    },
    {
        "question_id": 2080,
        "answer_sql": "SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id;"
    },
    {
        "question_id": 2081,
        "answer_sql": "SELECT agency_id FROM Agencies WHERE agency_id NOT IN (SELECT DISTINCT agency_id FROM Clients);"
    },
    {
        "question_id": 2082,
        "answer_sql": "SELECT A.agency_id FROM Agencies A LEFT JOIN Clients C ON A.agency_id = C.agency_id WHERE C.agency_id IS NULL;"
    },
    {
        "question_id": 2083,
        "answer_sql": "SELECT COUNT(*) as total_invoices FROM Invoices WHERE client_id IN (SELECT client_id FROM Clients WHERE agency_id = [agency_id]);"
    },
    {
        "question_id": 2084,
        "answer_sql": "SELECT COUNT(*) as Total_Invoices FROM Invoices WHERE invoice_status = 'Paid';"
    },
    {
        "question_id": 2085,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices INNER JOIN Clients ON Invoices.client_id = Clients.client_id;"
    },
    {
        "question_id": 2086,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices INNER JOIN Clients ON Invoices.client_id = Clients.client_id;"
    },
    {
        "question_id": 2087,
        "answer_sql": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) as invoice_count FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2088,
        "answer_sql": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) as invoice_count FROM Clients LEFT JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2089,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details, COUNT(Invoices.invoice_id) as NumberOfInvoices FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id, Clients.client_details ORDER BY NumberOfInvoices DESC LIMIT 1;"
    },
    {
        "question_id": 2090,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients INNER JOIN ( SELECT client_id, COUNT(invoice_id) as invoice_count FROM Invoices GROUP BY client_id ORDER BY invoice_count DESC LIMIT 1 ) AS MostInvoices ON Clients.client_id = MostInvoices.client_id;"
    },
    {
        "question_id": 2091,
        "answer_sql": "SELECT Clients.client_id FROM Clients WHERE Clients.client_id IN ( SELECT Invoices.client_id FROM Invoices GROUP BY Invoices.client_id HAVING COUNT(Invoices.client_id) >= 2 );"
    },
    {
        "question_id": 2092,
        "answer_sql": "SELECT Clients.client_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id HAVING COUNT(Invoices.invoice_id) >= 2;"
    },
    {
        "question_id": 2093,
        "answer_sql": "SELECT invoice_status, COUNT(*) as invoice_count FROM Invoices GROUP BY invoice_status;"
    },
    {
        "question_id": 2094,
        "answer_sql": "SELECT invoice_status, COUNT(invoice_id) as number_of_invoices FROM Invoices GROUP BY invoice_status;"
    },
    {
        "question_id": 2095,
        "answer_sql": "SELECT invoice_status, COUNT(*) as invoice_count FROM Invoices GROUP BY invoice_status ORDER BY invoice_count DESC LIMIT 1;"
    },
    {
        "question_id": 2096,
        "answer_sql": "SELECT i.invoice_status, COUNT(i.invoice_id) as invoice_count FROM Invoices i JOIN Clients c ON i.client_id = c.client_id GROUP BY i.invoice_status ORDER BY invoice_count DESC LIMIT 1;"
    },
    {
        "question_id": 2097,
        "answer_sql": ""
    },
    {
        "question_id": 2098,
        "answer_sql": "SELECT Invoices.invoice_status, Invoices.invoice_details, Clients.client_id, Clients.client_details, Agencies.agency_id, Agencies.agency_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Invoices.invoice_id IN ( SELECT Payments.invoice_id FROM Payments GROUP BY Payments.invoice_id HAVING COUNT(*) > 1 );"
    },
    {
        "question_id": 2099,
        "answer_sql": ""
    },
    {
        "question_id": 2100,
        "answer_sql": "SELECT meeting_type, other_details FROM Meetings;"
    },
    {
        "question_id": 2101,
        "answer_sql": "SELECT M.meeting_outcome, M.meeting_type, COUNT(*) as total_meetings FROM Meetings M JOIN Clients C ON M.client_id = C.client_id GROUP BY M.meeting_outcome, M.meeting_type;"
    },
    {
        "question_id": 2102,
        "answer_sql": "SELECT DISTINCT `meeting_outcome`, `meeting_type` FROM `Meetings`;"
    },
    {
        "question_id": 2103,
        "answer_sql": "SELECT Payments.payment_id, Payments.payment_details FROM Payments INNER JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id WHERE Invoices.invoice_status = 'Working';"
    },
    {
        "question_id": 2104,
        "answer_sql": "SELECT Payments.payment_id, Payments.payment_details FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id WHERE Invoices.invoice_status = 'Working';"
    },
    {
        "question_id": 2105,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status FROM Invoices LEFT JOIN Payments ON Invoices.invoice_id = Payments.invoice_id WHERE Payments.invoice_id IS NULL;"
    },
    {
        "question_id": 2106,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status FROM Invoices i LEFT JOIN Payments p ON i.invoice_id = p.invoice_id WHERE p.invoice_id IS NULL;"
    },
    {
        "question_id": 2107,
        "answer_sql": "SELECT COUNT(*) as total_payments FROM Payments;"
    },
    {
        "question_id": 2108,
        "answer_sql": "SELECT COUNT(*) as total_payments FROM Payments"
    },
    {
        "question_id": 2109,
        "answer_sql": "SELECT Payments.payment_id, Invoices.invoice_id, Payments.payment_details FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id;"
    },
    {
        "question_id": 2110,
        "answer_sql": "SELECT Payments.payment_id, Invoices.invoice_id, Payments.payment_details FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id;"
    },
    {
        "question_id": 2111,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status FROM Invoices JOIN Payments ON Invoices.invoice_id = Payments.invoice_id;"
    },
    {
        "question_id": 2112,
        "answer_sql": ""
    },
    {
        "question_id": 2113,
        "answer_sql": "SELECT Invoices.invoice_id, COUNT(Payments.payment_id) as Number_of_Payments FROM Invoices JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id;"
    },
    {
        "question_id": 2114,
        "answer_sql": "SELECT COUNT(*) as payment_count, invoice_id FROM Payments GROUP BY invoice_id;"
    },
    {
        "question_id": 2115,
        "answer_sql": "SELECT i.invoice_id, i.invoice_status, i.invoice_details, COUNT(p.payment_id) as payment_count FROM Invoices i LEFT JOIN Payments p ON i.invoice_id = p.invoice_id GROUP BY i.invoice_id ORDER BY payment_count DESC LIMIT 1;"
    },
    {
        "question_id": 2116,
        "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices INNER JOIN (SELECT invoice_id, COUNT(*) as payment_count FROM Payments GROUP BY invoice_id) as Payments_Count ON Invoices.invoice_id = Payments_Count.invoice_id ORDER BY Payments_Count.payment_count DESC LIMIT 1;"
    },
    {
        "question_id": 2117,
        "answer_sql": "SELECT COUNT(*) as total_staff FROM Staff;"
    },
    {
        "question_id": 2118,
        "answer_sql": "SELECT COUNT(*) as total_staff FROM Staff;"
    },
    {
        "question_id": 2119,
        "answer_sql": "SELECT Agencies.agency_id, COUNT(Staff.staff_id) as staff_count FROM Agencies JOIN Staff ON Agencies.agency_id = Staff.agency_id GROUP BY Agencies.agency_id;"
    },
    {
        "question_id": 2120,
        "answer_sql": "SELECT A.agency_id, COUNT(S.staff_id) as number_of_staff FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id GROUP BY A.agency_id;"
    },
    {
        "question_id": 2121,
        "answer_sql": "SELECT agency_id, agency_details FROM Agencies WHERE agency_id IN ( SELECT agency_id FROM Staff GROUP BY agency_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 2122,
        "answer_sql": "SELECT agency_id, agency_details FROM Agencies WHERE agency_id IN ( SELECT agency_id FROM Staff GROUP BY agency_id ORDER BY COUNT(*) DESC LIMIT 1 );"
    },
    {
        "question_id": 2123,
        "answer_sql": "SELECT `meeting_outcome`, COUNT(*) as `Number of Meetings` FROM `Meetings` GROUP BY `meeting_outcome`;"
    },
    {
        "question_id": 2124,
        "answer_sql": "SELECT `meeting_outcome`, COUNT(*) as `Number_of_Meetings` FROM `Meetings` GROUP BY `meeting_outcome`;"
    },
    {
        "question_id": 2125,
        "answer_sql": "SELECT Clients.client_id, COUNT(Meetings.client_id) as number_of_meetings FROM Clients INNER JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2126,
        "answer_sql": "SELECT Clients.client_id, COUNT(Meetings.client_id) as Number_of_Meetings FROM Clients LEFT JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2127,
        "answer_sql": "SELECT M.meeting_type, COUNT(C.client_id) as Number_of_Clients FROM Meetings M JOIN Clients C ON M.client_id = C.client_id GROUP BY M.meeting_type;"
    },
    {
        "question_id": 2128,
        "answer_sql": "SELECT meeting_type, COUNT(*) as total_meetings FROM Meetings GROUP BY meeting_type;"
    },
    {
        "question_id": 2129,
        "answer_sql": "SELECT M.meeting_id, M.meeting_outcome, M.meeting_type, C.client_details FROM Meetings M JOIN Clients C ON M.client_id = C.client_id;"
    },
    {
        "question_id": 2130,
        "answer_sql": "SELECT m.meeting_id, m.meeting_outcome, m.meeting_type, c.client_details FROM Meetings m JOIN Clients c ON m.client_id = c.client_id"
    },
    {
        "question_id": 2131,
        "answer_sql": "SELECT M.meeting_id, COUNT(SI.staff_id) as staff_count FROM Meetings M JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id JOIN Staff SI ON SM.staff_id = SI.staff_id GROUP BY M.meeting_id;"
    },
    {
        "question_id": 2132,
        "answer_sql": "SELECT `Meetings`.`meeting_id`, COUNT(`Staff_in_Meetings`.`staff_id`) as `staff_count` FROM `Meetings` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` GROUP BY `Meetings`.`meeting_id`;"
    },
    {
        "question_id": 2133,
        "answer_sql": "SELECT `Staff`.`staff_id`, COUNT(`Meetings`.`meeting_id`) AS `Meetings_Attended` FROM `Staff` JOIN `Staff_in_Meetings` ON `Staff`.`staff_id` = `Staff_in_Meetings`.`staff_id` JOIN `Meetings` ON `Staff_in_Meetings`.`meeting_id` = `Meetings`.`meeting_id` GROUP BY `Staff`.`staff_id` HAVING COUNT(`Meetings`.`meeting_id`) = ( SELECT COUNT(`Meetings`.`meeting_id`) AS `Meetings_Count` FROM `Staff` JOIN `Staff_in_Meetings` ON `Staff`.`staff_id` = `Staff_in_Meetings`.`staff_id` JOIN `Meetings` ON `Staff_in_Meetings`.`meeting_id` = `Meetings`.`meeting_id` GROUP BY `Staff`.`staff_id` ORDER BY `Meetings_Count` ASC LIMIT 1 );"
    },
    {
        "question_id": 2134,
        "answer_sql": "SELECT `staff_id` FROM `Staff` WHERE `staff_id` NOT IN ( SELECT `staff_id` FROM `Staff_in_Meetings` WHERE `meeting_id` IN ( SELECT `meeting_id` FROM `Meetings` WHERE `client_id` IN ( SELECT `client_id` FROM `Clients` WHERE `agency_id` IN ( SELECT `agency_id` FROM `Agencies` WHERE `agency_details` LIKE '%agency%' ) ) ) )"
    },
    {
        "question_id": 2135,
        "answer_sql": "SELECT COUNT(*) FROM Staff_in_Meetings WHERE meeting_id IN ( SELECT meeting_id FROM Meetings WHERE client_id IN ( SELECT client_id FROM Clients WHERE agency_id IN ( SELECT agency_id FROM Staff WHERE staff_id IN ( SELECT staff_id FROM Staff_in_Meetings ) ) ) );"
    },
    {
        "question_id": 2136,
        "answer_sql": "SELECT COUNT(DISTINCT `Staff`.`staff_id`) AS `Number_of_Staff_Attended_Meeting` FROM `Meetings` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id`;"
    },
    {
        "question_id": 2137,
        "answer_sql": "SELECT COUNT(DISTINCT Staff.staff_id) FROM Staff LEFT JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id WHERE Staff_in_Meetings.staff_id IS NULL;"
    },
    {
        "question_id": 2138,
        "answer_sql": "SELECT COUNT(*) FROM Staff WHERE staff_id NOT IN (SELECT DISTINCT staff_id FROM Staff_in_Meetings);"
    },
    {
        "question_id": 2139,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients INNER JOIN Invoices ON Clients.client_id = Invoices.client_id INNER JOIN Meetings ON Clients.client_id = Meetings.client_id WHERE Clients.client_id IN ( SELECT client_id FROM Invoices UNION SELECT client_id FROM Meetings ) GROUP BY Clients.client_id;"
    },
    {
        "question_id": 2140,
        "answer_sql": "SELECT Clients.client_id, Clients.client_details, Invoices.invoice_id, Invoices.invoice_details, Meetings.meeting_id, Meetings.meeting_outcome FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Clients.client_id = Meetings.client_id;"
    },
    {
        "question_id": 2141,
        "answer_sql": "SELECT s.staff_id, s.staff_details FROM Staff s JOIN (SELECT sm.staff_id FROM Staff_in_Meetings sm GROUP BY sm.staff_id HAVING COUNT(DISTINCT sm.meeting_id) >= 1) t ON s.staff_id = t.staff_id WHERE s.staff_details LIKE '%s%';"
    },
    {
        "question_id": 2142,
        "answer_sql": "SELECT S.staff_id, S.staff_details FROM Staff S JOIN (SELECT SM.staff_id FROM Staff_in_Meetings SM GROUP BY SM.staff_id HAVING COUNT(DISTINCT SM.meeting_id) >= 1) T ON S.staff_id = T.staff_id WHERE S.staff_details LIKE '%s%';"
    },
    {
        "question_id": 2143,
        "answer_sql": "SELECT Clients.client_id, Clients.sic_code, Clients.agency_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Clients.client_id = Meetings.client_id WHERE Meetings.meeting_id IN ( SELECT meeting_id FROM Staff_in_Meetings WHERE staff_id IN ( SELECT staff_id FROM Staff WHERE staff_id IN ( SELECT staff_id FROM Staff_in_Meetings WHERE meeting_id IN ( SELECT meeting_id FROM Meetings WHERE client_id = Clients.client_id ) ) ) ) AND Invoices.invoice_id IN ( SELECT invoice_id FROM Invoices WHERE client_id = Clients.client_id );"
    },
    {
        "question_id": 2144,
        "answer_sql": "SELECT Clients.client_id, Clients.sic_code, Clients.agency_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id WHERE (SELECT COUNT(*) FROM Meetings WHERE Clients.client_id = Meetings.client_id) = 1 AND (SELECT COUNT(*) FROM Invoices WHERE Clients.client_id = Invoices.client_id) = 1;"
    },
    {
        "question_id": 2145,
        "answer_sql": "SELECT M.start_date_time, M.end_date_time, C.client_details, S.staff_details FROM Meetings M JOIN Clients C ON M.client_id = C.client_id JOIN Staff S ON M.client_id = S.agency_id;"
    },
    {
        "question_id": 2146,
        "answer_sql": ""
    }
]