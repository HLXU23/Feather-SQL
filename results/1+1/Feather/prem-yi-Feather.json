[{"question_id": 0, "answer_sql": "SELECT MAX(CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) FROM frpm WHERE `County Name` = 'Alameda' AND `Free Meal Count (K-12)` > 0 AND `Enrollment (K-12)` > 0;"}, {"question_id": 1, "answer_sql": "SELECT `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` FROM frpm WHERE `Educational Option Type` = 'Continuation School' AND `Free Meal Count (Ages 5-17)` IS NOT NULL ORDER BY `Free Meal Count (Ages 5-17)` / `Enrollment (Ages 5-17)` ASC LIMIT 3;"}, {"question_id": 2, "answer_sql": "SELECT T1.Zip FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Fresno' AND T2.`Charter School (Y/N)` = 1;"}, {"question_id": 3, "answer_sql": "SELECT T2.MailStreet, T2.MailStrAbr FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1;"}, {"question_id": 4, "answer_sql": "SELECT T1.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Charter Funding Type` = 'Directly funded' AND T1.OpenDate > '2000-01-01' AND T2.`Charter School (Y/N)` = 1;"}, {"question_id": 5, "answer_sql": "SELECT COUNT(DISTINCT T2.School) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.Virtual = 'F' AND T1.AvgScrMath < 400;"}, {"question_id": 6, "answer_sql": "SELECT T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Magnet = 1 OR T1.SOC = 'MAGNET' AND T2.NumGE1500 > 500;"}, {"question_id": 7, "answer_sql": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumTstTakr DESC LIMIT 1"}, {"question_id": 8, "answer_sql": "SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`FRPM Count (K-12)` = ( SELECT MAX(`FRPM Count (K-12)`) FROM frpm ) ORDER BY T2.NumTstTakr DESC LIMIT 1;"}, {"question_id": 9, "answer_sql": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T3.cds = T2.CDSCode WHERE T3.AvgScrMath > 560 AND T2.`Charter Funding Type` = 'Directly funded';"}, {"question_id": 10, "answer_sql": "SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrRead DESC LIMIT 1;"}, {"question_id": 11, "answer_sql": "SELECT T1.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` + T1.`Enrollment (Ages 5-17)` > 500;"}, {"question_id": 12, "answer_sql": "SELECT MAX(CAST(`Free Meal Count (Ages 5-17)` AS REAL) / `Enrollment (Ages 5-17)`) FROM frpm JOIN satscores ON frpm.CDSCode = satscores.cds WHERE CAST(satscores.NumGE1500 AS REAL) / satscores.NumTstTakr > 0.3;"}, {"question_id": 13, "answer_sql": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr DESC LIMIT 3;"}, {"question_id": 14, "answer_sql": "SELECT T2.NCESSchool FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`Enrollment (Ages 5-17)` DESC LIMIT 5;"}, {"question_id": 15, "answer_sql": "SELECT T1.District, AVG(T2.AvgScrRead) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Active' GROUP BY T1.District ORDER BY AVG(T2.AvgScrRead) DESC LIMIT 1;"}, {"question_id": 16, "answer_sql": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.StatusType = 'Merged' AND T1.County = 'Alameda' AND T2.NumTstTakr < 100;"}, {"question_id": 17, "answer_sql": ""}, {"question_id": 18, "answer_sql": "SELECT COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`County Name` = 'Contra Costa' AND T1.`Charter Funding Type` = 'directly funded' AND T2.NumTstTakr <= 250;"}, {"question_id": 19, "answer_sql": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.AvgScrMath DESC LIMIT 1"}, {"question_id": 20, "answer_sql": "SELECT COUNT(School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Amador' AND T1.`Low Grade` = 9 AND T1.`High Grade` = 12;"}, {"question_id": 21, "answer_sql": "SELECT COUNT(*) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `Free Meal Count (K-12)` < 700;"}, {"question_id": 22, "answer_sql": ""}, {"question_id": 23, "answer_sql": ""}, {"question_id": 24, "answer_sql": ""}, {"question_id": 25, "answer_sql": "SELECT T1.School, T2.`Charter Funding Type` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T3.cds = T2.CDSCode WHERE T1.County = 'Riverside' AND T3.AvgScrMath > 400;"}, {"question_id": 26, "answer_sql": "SELECT `School Name`, MailStreet, MailCity, MailZip, MailState FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Monterey' AND T2.`Free Meal Count (Ages 5-17)` > 800;"}, {"question_id": 27, "answer_sql": "SELECT T2.School, T1.AvgScrWrite, T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.OpenDate > '1991-01-01' OR T2.ClosedDate < '2000-12-31'"}, {"question_id": 28, "answer_sql": "SELECT T1.School, T1.DOC FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.FundingType = 'Locally funded' AND CAST(T2.`Enrollment (K-12)` AS REAL) - CAST(T2.`Enrollment (Ages 5-17)` AS REAL) > ( SELECT AVG(CAST(T2.`Enrollment (K-12)` AS REAL) - CAST(T2.`Enrollment (Ages 5-17)` AS REAL)) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.FundingType = 'Locally funded' )"}, {"question_id": 29, "answer_sql": "SELECT T1.OpenDate FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` = ( SELECT MAX(`Enrollment (K-12)`) FROM frpm ) AND T2.`2013-14 CALPADS Fall 1 Certification Status` = 1;"}, {"question_id": 30, "answer_sql": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` < 60 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 5;"}, {"question_id": 31, "answer_sql": "SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2;"}, {"question_id": 32, "answer_sql": ""}, {"question_id": 33, "answer_sql": "SELECT T1.Website, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000;"}, {"question_id": 34, "answer_sql": "SELECT T1.`Free Meal Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.AdmFName1 = 'Kacey' AND T2.AdmLName1 = 'Gibson';"}, {"question_id": 35, "answer_sql": ""}, {"question_id": 36, "answer_sql": "SELECT T1.AdmFName1, T1.AdmLName1 FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = ( SELECT MAX(T2.NumGE1500) FROM satscores AS T2 )"}, {"question_id": 37, "answer_sql": "SELECT T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.NumGE1500 / T2.NumTstTakr ASC LIMIT 1;"}, {"question_id": 38, "answer_sql": "SELECT T2.Website FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.NumTstTakr BETWEEN 2000 AND 3000;"}, {"question_id": 39, "answer_sql": "SELECT AVG(T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.City = 'Fresno' AND T1.OpenDate BETWEEN '1980-01-01' AND '1980-12-31';"}, {"question_id": 40, "answer_sql": ""}, {"question_id": 41, "answer_sql": ""}, {"question_id": 42, "answer_sql": ""}, {"question_id": 43, "answer_sql": "SELECT T2.AvgScrMath, T2.AvgScrRead, T2.AvgScrWrite, T1.County FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrMath IS NOT NULL ORDER BY T2.AvgScrMath + T2.AvgScrRead + T2.AvgScrWrite ASC LIMIT 1;"}, {"question_id": 44, "answer_sql": "SELECT T2.AvgScrWrite, T1.City FROM schools AS T1 INNER JOIN satscores AS T2 ON T2.cds = T1.CDSCode INNER JOIN frpm AS T3 ON T3.CDSCode = T2.cds ORDER BY T2.NumGE1500 DESC LIMIT 1;"}, {"question_id": 45, "answer_sql": "SELECT T2.School, AVG(T1.AvgScrWrite) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich' GROUP BY T2.School;"}, {"question_id": 46, "answer_sql": "SELECT T1.State, T2.`School Name`, T2.`Enrollment (K-12)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = 31 ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 1;"}, {"question_id": 47, "answer_sql": "SELECT CAST(COUNT(School) AS REAL) / 12 FROM schools WHERE DOC = 52 AND County = 'Alameda' AND strftime('%Y', OpenDate) = '1980';"}, {"question_id": 48, "answer_sql": "SELECT ( SELECT COUNT(*) FROM schools WHERE DOC = 54 AND County = 'Orange' ) / ( SELECT COUNT(*) FROM schools WHERE DOC = 52 AND County = 'Orange' ) AS Percentage FROM schools WHERE DOC = 54 AND County = 'Orange' GROUP BY DOC ORDER BY DOC DESC LIMIT 1;"}, {"question_id": 49, "answer_sql": "SELECT County, School, ClosedDate FROM schools WHERE StatusType = 'Closed' GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1;"}, {"question_id": 50, "answer_sql": "SELECT T2.MailStreet, T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds ORDER BY T3.AvgScrMath DESC LIMIT 5, 1"}, {"question_id": 51, "answer_sql": "SELECT T2.MailStreet, T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T3.cds = T2.CDSCode ORDER BY T3.AvgScrRead LIMIT 1;"}, {"question_id": 52, "answer_sql": "SELECT COUNT(DISTINCT T2.School) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.MailCity = 'Lakeport' AND T1.AvgScrRead + T1.AvgScrMath + T1.AvgScrWrite >= 1500;"}, {"question_id": 53, "answer_sql": "SELECT T2.NumTstTakr FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.MailCity = 'Fresno'"}, {"question_id": 54, "answer_sql": ""}, {"question_id": 55, "answer_sql": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA';"}, {"question_id": 56, "answer_sql": "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN schools_admins AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.MailState = 'California' AND T2.SchoolName = 'San Joaquin' AND T1.StatusType = 'Active';"}, {"question_id": 57, "answer_sql": "SELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY T2.AvgScrWrite DESC LIMIT 333"}, {"question_id": 58, "answer_sql": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704';"}, {"question_id": 59, "answer_sql": ""}, {"question_id": 60, "answer_sql": "SELECT Website FROM schools WHERE Virtual = 'P' AND County = 'San Joaquin' AND Charter = 1;"}, {"question_id": 61, "answer_sql": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman';"}, {"question_id": 62, "answer_sql": "SELECT COUNT(*) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T1.`Free Meal Count (K-12)` * 100 / T1.`Enrollment (K-12)` < 0.18 AND T2.Charter = 0;"}, {"question_id": 63, "answer_sql": ""}, {"question_id": 64, "answer_sql": "SELECT COUNT(School) FROM schools WHERE CharterNum = '00D4' AND MailCity = 'Hickman';"}, {"question_id": 65, "answer_sql": "SELECT CAST(SUM(CASE WHEN FundingType = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM schools WHERE County = 'Santa Clara' AND (Charter = 1 OR Charter = 0);"}, {"question_id": 66, "answer_sql": "SELECT COUNT(CDSCode) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND County = 'Stanislaus' AND FundingType = 'Directly funded';"}, {"question_id": 67, "answer_sql": "SELECT COUNT(*) FROM schools WHERE StatusType = 'Closed' AND City = 'San Francisco' AND strftime('%Y', ClosedDate) = '1989';"}, {"question_id": 68, "answer_sql": "SELECT County, COUNT(*) as num_closures FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND SOC = 11 GROUP BY County ORDER BY num_closures DESC LIMIT 1;"}, {"question_id": 69, "answer_sql": "SELECT NCESDist FROM schools WHERE SOC = 31;"}, {"question_id": 70, "answer_sql": "SELECT COUNT(*) FROM schools WHERE (StatusType = 'Active' OR StatusType = 'Closed') AND County = 'Alpine';"}, {"question_id": 71, "answer_sql": "SELECT T1.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.City = 'Fresno' AND T2.Magnet = 0"}, {"question_id": 72, "answer_sql": "SELECT SUM(`Enrollment (Ages 5-17)`) FROM frpm WHERE `School Type` = 'State Special School' AND `Academic Year` = 'Y' AND `County Name` = 'Fremont';"}, {"question_id": 73, "answer_sql": ""}, {"question_id": 74, "answer_sql": ""}, {"question_id": 75, "answer_sql": ""}, {"question_id": 76, "answer_sql": "SELECT T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.`High Grade` = 12 AND T2.`Low Grade` = 9 AND T1.County = 'Merced' AND T1.EILCode = 'HS';"}, {"question_id": 77, "answer_sql": ""}, {"question_id": 78, "answer_sql": "SELECT GSserved FROM schools WHERE City = 'Adelanto' GROUP BY GSserved ORDER BY COUNT(GSserved) DESC LIMIT 1;"}, {"question_id": 79, "answer_sql": "SELECT COUNT(Virtual) FROM schools WHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara') AND Virtual = 'F';"}, {"question_id": 80, "answer_sql": ""}, {"question_id": 81, "answer_sql": "SELECT T1.City, T2.`Low Grade`, T2.`School Name` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.State = 'CA' ORDER BY T1.Latitude LIMIT 1;"}, {"question_id": 82, "answer_sql": "SELECT T1.GSoffered FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.Longitude DESC LIMIT 1;"}, {"question_id": 83, "answer_sql": ""}, {"question_id": 84, "answer_sql": ""}, {"question_id": 85, "answer_sql": ""}, {"question_id": 86, "answer_sql": ""}, {"question_id": 87, "answer_sql": ""}, {"question_id": 88, "answer_sql": "SELECT T1.AdmEmail1, T1.School FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumGE1500 = ( SELECT MAX(NumGE1500) FROM satscores )"}, {"question_id": 89, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A3 = 'east Bohemia' AND T3.type = 'POPLATEK PO OBRATU';"}, {"question_id": 90, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id WHERE T2.A3 = 'Prague' AND T4.status = 'eligible';"}, {"question_id": 91, "answer_sql": "SELECT (CASE WHEN A12 > A13 THEN '1995' ELSE '1996' END) AS year, ROUND(A12, 1) AS unemployment_ratio FROM district;"}, {"question_id": 92, "answer_sql": "SELECT COUNT(*) FROM district WHERE A11 BETWEEN 6000 AND 10000 AND district_id IN (SELECT district_id FROM client WHERE gender = 'F')"}, {"question_id": 93, "answer_sql": ""}, {"question_id": 94, "answer_sql": "SELECT T1.account_id, MAX(T4.A11) - MIN(T4.A11) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T3.gender = 'F' ORDER BY T3.birth_date ASC, T4.A11 DESC LIMIT 1;"}, {"question_id": 95, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T3.gender = 'M' ORDER BY T4.A11 DESC, T3.birth_date ASC LIMIT 1;"}, {"question_id": 96, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER';"}, {"question_id": 97, "answer_sql": ""}, {"question_id": 98, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE STRFTIME('%Y', T3.date) = '1997' AND T3.date BETWEEN '1997-01-01' AND '1997-12-31' AND T1.frequency = 'POPLATEK TYDNE' ORDER BY T3.amount LIMIT 1;"}, {"question_id": 99, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 12 AND STRFTIME('%Y', T1.date) = '1993' ORDER BY T2.amount DESC LIMIT 1;"}, {"question_id": 100, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND STRFTIME('%Y', T1.birth_date) < '1950' AND T2.A2 = 'Slokolov';"}, {"question_id": 101, "answer_sql": "SELECT account_id FROM trans WHERE date = ( SELECT MIN(date) FROM trans WHERE STRFTIME('%Y', date) = '1995' )"}, {"question_id": 102, "answer_sql": "SELECT DISTINCT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T1.date < '1997-01-01' AND T2.amount > 3000;"}, {"question_id": 103, "answer_sql": "SELECT T1.client_id FROM disp AS T2 INNER JOIN client AS T1 ON T2.client_id = T1.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1994-03-03'"}, {"question_id": 104, "answer_sql": "SELECT T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1998-10-14' AND T2.amount = 840;"}, {"question_id": 105, "answer_sql": "SELECT T2.district_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1994-08-25'"}, {"question_id": 106, "answer_sql": "SELECT T2.amount FROM disp AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T1.disp_id = T3.disp_id INNER JOIN client AS T4 ON T1.client_id = T4.client_id WHERE T3.issued = '1996-10-21' ORDER BY T2.amount DESC LIMIT 1;"}, {"question_id": 107, "answer_sql": "SELECT T1.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id ORDER BY T1.birth_date ASC, T4.A11 DESC LIMIT 1;"}, {"question_id": 108, "answer_sql": "SELECT T1.amount FROM trans AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = ( SELECT MAX(amount) FROM loan ) ORDER BY T1.date ASC LIMIT 1;"}, {"question_id": 109, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik' AND T1.gender = 'F';"}, {"question_id": 110, "answer_sql": "SELECT T1.disp_id FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.date = '1998-09-02' AND T3.amount = 5100;"}, {"question_id": 111, "answer_sql": "SELECT COUNT(account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Litomerice' AND STRFTIME('%Y', T1.date) = '1996';"}, {"question_id": 112, "answer_sql": "SELECT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 ON T3.client_id = T2.account_id WHERE T3.birth_date = '1976-01-29' AND T3.gender = 'F';"}, {"question_id": 113, "answer_sql": "SELECT T2.birth_date FROM loan AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id WHERE T1.amount = 98832 AND STRFTIME('%Y', T1.date) = '1996' AND T1.date = '1996-01-03';"}, {"question_id": 114, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T3.account_id = T1.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T2.A3 = 'Prague' GROUP BY T1.account_id;"}, {"question_id": 115, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' ORDER BY T2.A4 DESC LIMIT 1;"}, {"question_id": 116, "answer_sql": "SELECT CAST((SUM(IIF(T2.date = '1998-12-27', T2.balance, 0)) - SUM(IIF(T2.date = '1993-03-22', T2.balance, 0))) AS REAL) * 100 / SUM(IIF(T2.date = '1993-03-22', T2.balance, 0)) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.date IN ('1993-03-22', '1998-12-27') AND T2.date = (SELECT MIN(date) FROM trans WHERE date IN ('1993-03-22', '1998-12-27'));"}, {"question_id": 117, "answer_sql": "SELECT CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100 / SUM(amount) FROM loan WHERE status = 'A';"}, {"question_id": 118, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.amount < 100000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.loan_id) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'C';"}, {"question_id": 119, "answer_sql": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date > '1993-01-01' AND T1.frequency = 'POPLATEK PO OBRATU';"}, {"question_id": 120, "answer_sql": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'east Bohemia' AND T1.date BETWEEN '1995-01-01' AND '2000-12-31';"}, {"question_id": 121, "answer_sql": "SELECT T1.account_id, T1.date FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Prachatice'"}, {"question_id": 122, "answer_sql": "SELECT T1.A2, T1.A3 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.loan_id = 4990"}, {"question_id": 123, "answer_sql": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.amount > 300000;"}, {"question_id": 124, "answer_sql": "SELECT T1.loan_id, T2.A3, AVG(T2.A11) FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.duration = 60 GROUP BY T1.loan_id;"}, {"question_id": 125, "answer_sql": "SELECT T3.A2, (T3.A13 - T3.A12) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D' AND STRFTIME('%Y', T1.date) BETWEEN '1995' AND '1996'"}, {"question_id": 126, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.A2 = 'Decin' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1993';"}, {"question_id": 127, "answer_sql": "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE';"}, {"question_id": 128, "answer_sql": "SELECT T2.A2 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 10;"}, {"question_id": 129, "answer_sql": "SELECT T1.A2, T3.amount FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' AND T3.date LIKE '1996-01%' ORDER BY T1.A2 LIMIT 10;"}, {"question_id": 130, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'south bohemia' AND T2.type != 'own' AND T1.client_id NOT IN ( SELECT T5.client_id FROM disp AS T5 INNER JOIN account AS T6 ON T5.account_id = T6.account_id INNER JOIN client AS T7 ON T5.client_id = T7.client_id WHERE T6.frequency = 'unlimited' );"}, {"question_id": 131, "answer_sql": "SELECT T3.A3 FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T2.status IN ('C', 'D') GROUP BY T3.A3 ORDER BY COUNT(T2.loan_id) DESC LIMIT 1;"}, {"question_id": 132, "answer_sql": "SELECT AVG(T2.amount) FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.account_id WHERE T1.gender = 'M'"}, {"question_id": 133, "answer_sql": "SELECT T2.A2, T2.district_id FROM district AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.A13 IS NOT NULL ORDER BY T1.A13 DESC LIMIT 1;"}, {"question_id": 134, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) = '1996' AND T2.A16 = ( SELECT MAX(A16) FROM district );"}, {"question_id": 135, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.balance < 0 AND T1.frequency = 'POPLATEK MESICNE' AND T2.operation = 'VYBER KARTOU';"}, {"question_id": 136, "answer_sql": "SELECT COUNT(loan_id) FROM loan WHERE amount >= 250000 AND date BETWEEN '1995-01-01' AND '1997-12-31' AND account_id IN ( SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE' ) AND status = 'approved';"}, {"question_id": 137, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 ON T1.district_id = T4.district_id INNER JOIN loan AS T5 ON T1.account_id = T5.account_id WHERE T4.district_id = 1 AND T5.status IN ('C', 'D');"}, {"question_id": 138, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A15 = ( SELECT A15 FROM district ORDER BY A15 DESC LIMIT 1, 1 )"}, {"question_id": 139, "answer_sql": "SELECT COUNT(*) FROM card WHERE type = 'disponent' AND disp_id IN (SELECT disp_id FROM disp WHERE account_id IN (SELECT account_id FROM account WHERE type = 'gold'));"}, {"question_id": 140, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek';"}, {"question_id": 141, "answer_sql": ""}, {"question_id": 142, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.k_symbol = 'SIPO' AND T1.district_id = ( SELECT district_id FROM district WHERE A2 = 'Pisek' );"}, {"question_id": 143, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.type = 'gold' OR T3.type = 'junior' GROUP BY T1.account_id;"}, {"question_id": 144, "answer_sql": "SELECT AVG(T2.amount) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.date) = '2021' AND T2.operation = 'VYBER KARTOU';"}, {"question_id": 145, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN trans AS T4 ON T4.account_id = T1.account_id WHERE STRFTIME('%Y', T4.date) = '1998' AND T4.operation = 'VYBER KARTOU' AND T4.amount / 30 < ( SELECT AVG(T4.amount / 30) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id INNER JOIN trans AS T4 ON T4.account_id = T1.account_id WHERE STRFTIME('%Y', T4.date) = '1998' AND T4.operation = 'VYBER KARTOU' )"}, {"question_id": 146, "answer_sql": ""}, {"question_id": 147, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN client AS T3 ON T3.client_id = T2.district_id WHERE T2.A3 = 'south Bohemia' AND T3.gender = 'F';"}, {"question_id": 148, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T3.account_id = T1.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'"}, {"question_id": 149, "answer_sql": "SELECT T1.type, AVG(T3.A11) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type != 'OWNER' AND T3.A11 BETWEEN 8000 AND 9000 GROUP BY T1.type;"}, {"question_id": 150, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'North Bohemia' AND T1.date = '2013-01-01' AND T1.frequency = 'monthly' AND T1.account_id = 12345;"}, {"question_id": 151, "answer_sql": "SELECT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'VYDAJ' GROUP BY T1.A2;"}, {"question_id": 152, "answer_sql": "SELECT AVG(A15) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'A3' AND T2.date BETWEEN '1997-01-01' AND '1997-12-31' AND T1.A15 > 4000;"}, {"question_id": 153, "answer_sql": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'OWNER' AND T1.type = 'classic';"}, {"question_id": 154, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Hl.m. Praha' AND T1.gender = 'M';"}, {"question_id": 155, "answer_sql": "SELECT CAST(SUM(CASE WHEN type = 'gold' AND STRFTIME('%Y', issued) < '1998' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(card_id) FROM card WHERE type = 'gold';"}, {"question_id": 156, "answer_sql": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id ORDER BY T4.amount DESC LIMIT 1;"}, {"question_id": 157, "answer_sql": "SELECT T1.A15 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.account_id = 532"}, {"question_id": 158, "answer_sql": ""}, {"question_id": 159, "answer_sql": "SELECT T1.amount FROM trans AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.client_id = 3356 AND T1.operation = 'VYBER';"}, {"question_id": 160, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.amount < 200000 AND T1.frequency = 'POPLATEK TYDNE';"}, {"question_id": 161, "answer_sql": "SELECT T1.type FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.client_id = 13539"}, {"question_id": 162, "answer_sql": "SELECT T1.A3 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.client_id = 3541"}, {"question_id": 163, "answer_sql": "SELECT T1.A2 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.status = 'A' GROUP BY T1.district_id ORDER BY COUNT(T2.account_id) DESC LIMIT 1;"}, {"question_id": 164, "answer_sql": ""}, {"question_id": 165, "answer_sql": "SELECT T1.trans_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.district_id = 5"}, {"question_id": 166, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Jesenik';"}, {"question_id": 167, "answer_sql": "SELECT T1.client_id FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'junior' AND T2.issued > '1996-12-31'"}, {"question_id": 168, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 > 10000;"}, {"question_id": 169, "answer_sql": "SELECT CAST(SUM(IIF(T3.gender = 'M', T4.amount, 0)) AS REAL) * 100 / SUM(IIF(T3.gender = 'F', T4.amount, 0)) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN loan AS T4 ON T1.account_id = T4.account_id WHERE T1.date BETWEEN '1996-01-01' AND '1997-12-31';"}, {"question_id": 170, "answer_sql": "SELECT COUNT(trans_id) FROM trans WHERE STRFTIME('%Y', date) > '1995' AND operation = 'VYBER KARTOU';"}, {"question_id": 171, "answer_sql": "SELECT SUM(IIF(A3 = 'North Bohemia', A16, 0)) - SUM(IIF(A3 = 'East Bohemia', A16, 0)) FROM district;"}, {"question_id": 172, "answer_sql": "SELECT COUNT(T1.disp_id) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id BETWEEN 1 AND 10;"}, {"question_id": 173, "answer_sql": "SELECT T1.frequency, T2.amount, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id = 3 OR T1.account_id = 3;"}, {"question_id": 174, "answer_sql": "SELECT STRFTIME('%Y', T1.birth_date) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.account_id = 130;"}, {"question_id": 175, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'OWNER';"}, {"question_id": 176, "answer_sql": "SELECT T1.amount, T1.status FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T4.client_id = 992"}, {"question_id": 177, "answer_sql": "SELECT T1.amount, T3.type, T3.type FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id WHERE T3.client_id = 4 AND T1.trans_id = 851;"}, {"question_id": 178, "answer_sql": "SELECT T1.type FROM disp AS T1 INNER JOIN card AS T2 ON T1.disp_id = T2.disp_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T3.client_id = 9;"}, {"question_id": 179, "answer_sql": "SELECT SUM(T3.amount) FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.client_id = 617 AND STRFTIME('%Y', T3.date) = '1998';"}, {"question_id": 180, "answer_sql": ""}, {"question_id": 181, "answer_sql": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3"}, {"question_id": 182, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN loan AS T4 ON T3.account_id = T4.account_id INNER JOIN trans AS T5 ON T3.account_id = T5.account_id WHERE T1.gender = 'M' AND STRFTIME('%Y', T1.birth_date) BETWEEN '1974' AND '1976' AND T4.payments > 4000 AND T5.k_symbol = 'SIPO';"}, {"question_id": 183, "answer_sql": "SELECT COUNT(account_id) FROM account WHERE district_id = (SELECT district_id FROM district WHERE A2 = 'Beroun') AND date > '1996-12-31';"}, {"question_id": 184, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T1.gender = 'F' AND T3.type = 'junior';"}, {"question_id": 185, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.client_id) FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T1.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'Prague';"}, {"question_id": 186, "answer_sql": "SELECT CAST(SUM(CASE WHEN T3.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T1.frequency = 'POPLATEK TYDNE';"}, {"question_id": 187, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.frequency = 'POPLATEK TYDNE' AND T2.type = 'User';"}, {"question_id": 188, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration > 24 AND STRFTIME('%Y', T1.date) < '1997' ORDER BY T2.amount ASC LIMIT 1;"}, {"question_id": 189, "answer_sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T2.gender = 'F' ORDER BY T2.birth_date ASC, T3.A11 ASC LIMIT 1;"}, {"question_id": 190, "answer_sql": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia';"}, {"question_id": 191, "answer_sql": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration = 24 AND T1.frequency = 'POPLATEK TYDNE' AND T2.status = 'prepayment';"}, {"question_id": 192, "answer_sql": "SELECT AVG(amount) FROM loan WHERE status IN ('C', 'D') AND date > ( SELECT MIN(date) FROM trans );"}, {"question_id": 193, "answer_sql": ""}, {"question_id": 194, "answer_sql": ""}, {"question_id": 195, "answer_sql": "SELECT bond_type FROM bond GROUP BY bond_type ORDER BY COUNT(bond_type) DESC LIMIT 1"}, {"question_id": 196, "answer_sql": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element = 'cl';"}, {"question_id": 197, "answer_sql": "SELECT AVG(CASE WHEN T1.element = 'o' THEN 1 ELSE 0 END) AS avg_oxygen_atoms FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-';"}, {"question_id": 198, "answer_sql": "SELECT CAST(COUNT(DISTINCT CASE WHEN T2.bond_type = '-' THEN T1.molecule_id ELSE NULL END) AS REAL) / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';"}, {"question_id": 199, "answer_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element = 'na';"}, {"question_id": 200, "answer_sql": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.molecule_id IN ( SELECT T3.molecule_id FROM molecule AS T3 INNER JOIN atom AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.label = '+' GROUP BY T3.molecule_id HAVING COUNT(T4.atom_id) > 3 );"}, {"question_id": 201, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.element = 'c' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=';"}, {"question_id": 202, "answer_sql": "SELECT COUNT(*) FROM bond WHERE bond_type = '#';"}, {"question_id": 203, "answer_sql": "SELECT COUNT(DISTINCT a.atom_id) FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id WHERE a.element != 'br';"}, {"question_id": 204, "answer_sql": "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+';"}, {"question_id": 205, "answer_sql": ""}, {"question_id": 206, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_id = 'TR004_8_9';"}, {"question_id": 207, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_type = '=';"}, {"question_id": 208, "answer_sql": "SELECT t3.label FROM atom AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id INNER JOIN molecule AS t3 ON t2.molecule_id = t3.molecule_id WHERE t1.element = 'h' GROUP BY t3.label ORDER BY COUNT(t3.label) DESC LIMIT 1;"}, {"question_id": 209, "answer_sql": "SELECT DISTINCT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'te'"}, {"question_id": 210, "answer_sql": "SELECT T1.atom_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-' GROUP BY T1.atom_id HAVING COUNT(T1.atom_id) = 1;"}, {"question_id": 211, "answer_sql": "SELECT T3.atom_id, T3.atom_id2 FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T1.label = '-' AND T2.bond_type != 'carcinogenic';"}, {"question_id": 212, "answer_sql": "SELECT T1.element AS least_numerous_element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element NOT IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1;"}, {"question_id": 213, "answer_sql": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20';"}, {"question_id": 214, "answer_sql": "SELECT DISTINCT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element != 'sn' AND T1.label NOT IN ( SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'sn' );"}, {"question_id": 215, "answer_sql": "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element IN ('i', 's') AND T3.bond_type = '-';"}, {"question_id": 216, "answer_sql": ""}, {"question_id": 217, "answer_sql": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR181'"}, {"question_id": 218, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.element != 'f' THEN T1.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';"}, {"question_id": 219, "answer_sql": "SELECT CAST(COUNT(CASE WHEN t2.label = '+' THEN t1.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(t1.bond_id) FROM bond AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id WHERE t1.bond_type = '#';"}, {"question_id": 220, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR000' ORDER BY T1.element LIMIT 3;"}, {"question_id": 221, "answer_sql": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR001' AND T1.bond_id = 'TR001_2_6';"}, {"question_id": 222, "answer_sql": "SELECT SUM(IIF(label = '+', 1, 0)) - SUM(IIF(label = '-', 1, 0)) AS difference FROM molecule;"}, {"question_id": 223, "answer_sql": ""}, {"question_id": 224, "answer_sql": "SELECT DISTINCT T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id2 = 'TR000_2';"}, {"question_id": 225, "answer_sql": "SELECT DISTINCT T1.molecule_id, T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' ORDER BY T1.label LIMIT 5;"}, {"question_id": 226, "answer_sql": "SELECT CAST(COUNT(CASE WHEN bond_type = '=' THEN bond_id ELSE NULL END) AS REAL) * 100 / COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008';"}, {"question_id": 227, "answer_sql": "SELECT CAST(COUNT(CASE WHEN label = '+' THEN molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(molecule_id) FROM molecule;"}, {"question_id": 228, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.element = 'h' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR206';"}, {"question_id": 229, "answer_sql": "SELECT DISTINCT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR000'"}, {"question_id": 230, "answer_sql": "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060';"}, {"question_id": 231, "answer_sql": ""}, {"question_id": 232, "answer_sql": "SELECT DISTINCT T1.molecule_id, T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T2.bond_type = '-' AND T1.label = '-' ORDER BY T1.molecule_id LIMIT 3;"}, {"question_id": 233, "answer_sql": "SELECT T1.bond_id, T1.bond_type FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006' ORDER BY T1.bond_id LIMIT 2;"}, {"question_id": 234, "answer_sql": "SELECT COUNT(*) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12';"}, {"question_id": 235, "answer_sql": "SELECT COUNT(DISTINCT t3.molecule_id) FROM atom AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id INNER JOIN atom AS t3 ON t1.atom_id = t3.atom_id WHERE t2.label = '+' AND t1.element = 'br';"}, {"question_id": 236, "answer_sql": "SELECT bond.bond_type , connected.atom_id , connected.atom_id2 FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_id = 'TR001_6_9';"}, {"question_id": 237, "answer_sql": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_10'"}, {"question_id": 238, "answer_sql": "SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = '#';"}, {"question_id": 239, "answer_sql": "SELECT COUNT(*) FROM connected WHERE atom_id = 'TR19'"}, {"question_id": 240, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR004';"}, {"question_id": 241, "answer_sql": "SELECT COUNT(*) FROM molecule WHERE label = '-';"}, {"question_id": 242, "answer_sql": ""}, {"question_id": 243, "answer_sql": ""}, {"question_id": 244, "answer_sql": "SELECT CASE WHEN COUNT(DISTINCT t3.bond_id) > 2 THEN 'Yes' ELSE 'No' END AS carcinogenic FROM molecule AS t1 INNER JOIN bond AS t2 ON t1.molecule_id = t2.molecule_id INNER JOIN connected AS t3 ON t2.bond_id = t3.bond_id WHERE t1.label = '+' AND t2.bond_type = '=';"}, {"question_id": 245, "answer_sql": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'i';"}, {"question_id": 246, "answer_sql": "SELECT T1.bond_type, T1.bond_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE SUBSTR(T2.atom_id, 7, 2) = '45';"}, {"question_id": 247, "answer_sql": "SELECT DISTINCT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected);"}, {"question_id": 248, "answer_sql": ""}, {"question_id": 249, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_id = 'TR144_8_19';"}, {"question_id": 250, "answer_sql": "SELECT T1.molecule_id, T1.label, COUNT(T2.bond_id) AS double_bonds FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY double_bonds DESC LIMIT 1;"}, {"question_id": 251, "answer_sql": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1;"}, {"question_id": 252, "answer_sql": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.element = 'pb'"}, {"question_id": 253, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#';"}, {"question_id": 254, "answer_sql": "SELECT CAST(COUNT(*) AS REAL) * 100 / ( SELECT COUNT(*) FROM bond ) FROM bond WHERE bond_id IN ( SELECT bond_id FROM ( SELECT atom_id, atom_id2, COUNT(*) AS num FROM connected GROUP BY atom_id, atom_id2 ) AS TempTable ORDER BY TempTable.num DESC LIMIT 1 );"}, {"question_id": 255, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-';"}, {"question_id": 256, "answer_sql": "SELECT COUNT(DISTINCT atom_id) FROM atom WHERE element IN ('c', 'h');"}, {"question_id": 257, "answer_sql": "SELECT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 's'"}, {"question_id": 258, "answer_sql": "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'sn';"}, {"question_id": 259, "answer_sql": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-';"}, {"question_id": 260, "answer_sql": "SELECT COUNT(DISTINCT atom_id) FROM atom WHERE atom_id IN ( SELECT atom_id FROM bond WHERE bond_type = '#' ) AND ( element = 'p' OR element = 'br' );"}, {"question_id": 261, "answer_sql": "SELECT DISTINCT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';"}, {"question_id": 262, "answer_sql": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.label = '-' AND T3.bond_type = '-';"}, {"question_id": 263, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.element = 'cl' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-';"}, {"question_id": 264, "answer_sql": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id IN ('TR000', 'TR001', 'TR002');"}, {"question_id": 265, "answer_sql": "SELECT molecule_id FROM molecule WHERE label = '-';"}, {"question_id": 266, "answer_sql": "SELECT COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id BETWEEN 'TR000' AND 'TR030' AND T2.label = '+';"}, {"question_id": 267, "answer_sql": "SELECT DISTINCT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR000' AND 'TR050';"}, {"question_id": 268, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11';"}, {"question_id": 269, "answer_sql": "SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i';"}, {"question_id": 270, "answer_sql": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca' GROUP BY T1.label ORDER BY COUNT(T1.label) DESC LIMIT 1;"}, {"question_id": 271, "answer_sql": "SELECT CASE WHEN COUNT(DISTINCT T1.element) = 2 THEN 'yes' ELSE 'no' END AS yn FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_1_8' AND T1.element IN ('cl', 'c');"}, {"question_id": 272, "answer_sql": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 'c' AND T3.bond_type = '#' AND T2.label = '-';"}, {"question_id": 273, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.element = 'cl' THEN T2.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+';"}, {"question_id": 274, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR001';"}, {"question_id": 275, "answer_sql": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=';"}, {"question_id": 276, "answer_sql": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '#'"}, {"question_id": 277, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR005_16_26';"}, {"question_id": 278, "answer_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-' AND T1.label = '-';"}, {"question_id": 279, "answer_sql": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_10_11';"}, {"question_id": 280, "answer_sql": "SELECT T1.bond_id, T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#';"}, {"question_id": 281, "answer_sql": "SELECT T1.molecule_id, T3.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE SUBSTR(T2.atom_id, -1) = '4' AND T1.label = '+' AND T3.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');"}, {"question_id": 282, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.element = 'h' THEN T1.atom_id ELSE NULL END) AS REAL) / COUNT(T1.atom_id), T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'"}, {"question_id": 283, "answer_sql": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'ca';"}, {"question_id": 284, "answer_sql": "SELECT DISTINCT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'te';"}, {"question_id": 285, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T3.bond_id = 'TR001_10_11' AND T1.element IS NOT NULL;"}, {"question_id": 286, "answer_sql": "SELECT 100.0 * COUNT(DISTINCT CASE WHEN T2.bond_type = '#' THEN T1.molecule_id ELSE NULL END) / COUNT(DISTINCT T1.molecule_id) AS Percentage FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id;"}, {"question_id": 287, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.bond_type = '=' THEN T2.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.bond_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR047';"}, {"question_id": 288, "answer_sql": "SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 'TR001_1';"}, {"question_id": 289, "answer_sql": "SELECT CASE WHEN (SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR151' AND T1.label = '+') THEN 'Yes' ELSE 'No' END AS flag_carcinogenic;"}, {"question_id": 290, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR151';"}, {"question_id": 291, "answer_sql": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule WHERE molecule.label = '+';"}, {"question_id": 292, "answer_sql": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id BETWEEN 'TR010' AND 'TR050' AND T1.element = 'c';"}, {"question_id": 293, "answer_sql": "SELECT COUNT(DISTINCT atom_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+';"}, {"question_id": 294, "answer_sql": "SELECT DISTINCT T2.bond_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type = '=';"}, {"question_id": 295, "answer_sql": "SELECT COUNT(DISTINCT atom.atom_id) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom.element = 'h';"}, {"question_id": 296, "answer_sql": ""}, {"question_id": 297, "answer_sql": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.element = 'c';"}, {"question_id": 298, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.element = 'h' AND T1.label = '+' THEN T1.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h';"}, {"question_id": 299, "answer_sql": "SELECT CASE WHEN (SELECT T1.label FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR124' AND T1.label = '+') THEN 'Yes' ELSE 'No' END AS flag_carcinogenic;"}, {"question_id": 300, "answer_sql": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR186';"}, {"question_id": 301, "answer_sql": "SELECT DISTINCT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR007_4_19';"}, {"question_id": 302, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4';"}, {"question_id": 303, "answer_sql": "SELECT COUNT(bond.bond_id) FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR006' AND bond.bond_type = '=';"}, {"question_id": 304, "answer_sql": "SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');"}, {"question_id": 305, "answer_sql": "SELECT T1.bond_id, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-';"}, {"question_id": 306, "answer_sql": "SELECT DISTINCT T1.molecule_id, T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#' AND T3.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');"}, {"question_id": 307, "answer_sql": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_2_3' GROUP BY T1.element;"}, {"question_id": 308, "answer_sql": "SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'cl';"}, {"question_id": 309, "answer_sql": "SELECT T1.atom_id, COUNT(DISTINCT T2.bond_type) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR346' GROUP BY T1.atom_id;"}, {"question_id": 310, "answer_sql": "SELECT COUNT(DISTINCT t3.molecule_id) FROM bond AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id INNER JOIN atom AS t3 ON t2.molecule_id = t3.molecule_id WHERE t1.bond_type = '=' AND t2.label = '+';"}, {"question_id": 311, "answer_sql": "SELECT COUNT(DISTINCT t3.molecule_id) FROM atom AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id INNER JOIN bond AS t3 ON t2.molecule_id = t3.molecule_id WHERE t1.element != 's' AND t3.bond_type != '=' AND t2.molecule_id NOT IN ( SELECT molecule_id FROM bond WHERE bond_type = '=' );"}, {"question_id": 312, "answer_sql": "SELECT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id = 'TR001_2_4' AND T1.label = '+';"}, {"question_id": 313, "answer_sql": "SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR005';"}, {"question_id": 314, "answer_sql": "SELECT COUNT(*) FROM bond WHERE bond_type = '-';"}, {"question_id": 315, "answer_sql": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+';"}, {"question_id": 316, "answer_sql": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-';"}, {"question_id": 317, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.element = 'cl' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+';"}, {"question_id": 318, "answer_sql": "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7';"}, {"question_id": 319, "answer_sql": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4';"}, {"question_id": 320, "answer_sql": "SELECT T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2'"}, {"question_id": 321, "answer_sql": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id = 'TR000_2' AND T2.atom_id2 = 'TR000_4';"}, {"question_id": 322, "answer_sql": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR000_1';"}, {"question_id": 323, "answer_sql": "SELECT CASE WHEN (SELECT label FROM molecule WHERE molecule_id = 'TR000') = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic;"}, {"question_id": 324, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.bond_type = '-' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.bond_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id;"}, {"question_id": 325, "answer_sql": "SELECT COUNT(DISTINCT t3.molecule_id) FROM atom AS t1 INNER JOIN molecule AS t2 ON t1.molecule_id = t2.molecule_id INNER JOIN atom AS t3 ON t1.molecule_id = t3.molecule_id WHERE t1.element = 'n' AND t2.label = '+';"}, {"question_id": 326, "answer_sql": "SELECT DISTINCT T3.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.element = 's' AND T2.bond_type = '=';"}, {"question_id": 327, "answer_sql": "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5;"}, {"question_id": 328, "answer_sql": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' AND T1.molecule_id = 'TR024';"}, {"question_id": 329, "answer_sql": "SELECT T.molecule_id FROM ( SELECT T2.molecule_id, COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' GROUP BY T2.molecule_id ORDER BY COUNT(T1.atom_id) DESC LIMIT 1 ) AS T"}, {"question_id": 330, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.label = '+' THEN T1.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T3.molecule_id = T2.molecule_id WHERE T2.element = 'h' AND T3.bond_type = '#';"}, {"question_id": 331, "answer_sql": "SELECT COUNT(DISTINCT molecule.molecule_id) FROM molecule WHERE molecule.label = '+';"}, {"question_id": 332, "answer_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id BETWEEN 'TR004' AND 'TR010' AND T1.bond_type = '-';"}, {"question_id": 333, "answer_sql": "SELECT COUNT(atom_id) FROM atom WHERE molecule_id = 'TR008' AND element = 'c';"}, {"question_id": 334, "answer_sql": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-';"}, {"question_id": 335, "answer_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.bond_type = '=';"}, {"question_id": 336, "answer_sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.molecule_id NOT IN ( SELECT molecule_id FROM molecule WHERE label = '-' );"}, {"question_id": 337, "answer_sql": "SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR016';"}, {"question_id": 338, "answer_sql": "SELECT T2.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T1.element = 'c' AND T3.bond_type = '=' AND T1.molecule_id = 'TR012';"}, {"question_id": 339, "answer_sql": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.element = 'o';"}, {"question_id": 340, "answer_sql": "SELECT id, cardKingdomId, power, cardKingdomFoilId FROM cards WHERE cardKingdomId IS NOT NULL;"}, {"question_id": 341, "answer_sql": ""}, {"question_id": 342, "answer_sql": "SELECT name FROM cards WHERE faceConvertedManaCost = ( SELECT MAX(faceConvertedManaCost) FROM cards );"}, {"question_id": 343, "answer_sql": "SELECT name FROM cards WHERE edhrecRank < 100 AND frameVersion = 2015;"}, {"question_id": 344, "answer_sql": "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'gladiator' AND T1.rarity = 'mythic' AND T2.status = 'Banned';"}, {"question_id": 345, "answer_sql": "SELECT T1.format FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.type = 'Artifact' AND T1.format = 'vintage' AND T2.side IS NULL;"}, {"question_id": 346, "answer_sql": "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.power = '*' OR T1.power IS NULL AND T2.format = 'commander' AND T2.status = 'Legal';"}, {"question_id": 347, "answer_sql": ""}, {"question_id": 348, "answer_sql": "SELECT T1.text, T1.number FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Sublime Epiphany' AND T1.number = '74s';"}, {"question_id": 349, "answer_sql": "SELECT T1.name, T1.artist, CASE WHEN T1.isPromo = 1 THEN 'Yes' ELSE 'No' END AS isPromo FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid GROUP BY T2.uuid ORDER BY COUNT(T2.uuid) DESC LIMIT 1;"}, {"question_id": 350, "answer_sql": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Annul' AND T1.number = 29;"}, {"question_id": 351, "answer_sql": "SELECT DISTINCT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T2.language = 'Japanese';"}, {"question_id": 352, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.language = 'Chinese Simplified' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified';"}, {"question_id": 353, "answer_sql": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' GROUP BY T1.name, T1.totalSetSize;"}, {"question_id": 354, "answer_sql": "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Aaron Boyd';"}, {"question_id": 355, "answer_sql": "SELECT keywords FROM cards WHERE name = 'Angel of Mercy';"}, {"question_id": 356, "answer_sql": "SELECT COUNT(id) FROM cards WHERE power = '*';"}, {"question_id": 357, "answer_sql": "SELECT promoTypes FROM cards WHERE name = 'Duress';"}, {"question_id": 358, "answer_sql": "SELECT T1.borderColor FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen';"}, {"question_id": 359, "answer_sql": "SELECT T1.originalType FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen';"}, {"question_id": 360, "answer_sql": "SELECT T2.language FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T1.name = 'Angel of Mercy';"}, {"question_id": 361, "answer_sql": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isTextless = 0;"}, {"question_id": 362, "answer_sql": "SELECT T1.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn';"}, {"question_id": 363, "answer_sql": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Restricted' AND T1.isStarter = 1;"}, {"question_id": 364, "answer_sql": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle';"}, {"question_id": 365, "answer_sql": "SELECT type FROM cards WHERE name = 'Benalish Knight';"}, {"question_id": 366, "answer_sql": "SELECT T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight';"}, {"question_id": 367, "answer_sql": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Phyrexian';"}, {"question_id": 368, "answer_sql": "SELECT CAST(SUM(CASE WHEN borderColor = 'borderless' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards;"}, {"question_id": 369, "answer_sql": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.isReprint = 1;"}, {"question_id": 370, "answer_sql": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Russian' AND T1.borderColor = 'borderless';"}, {"question_id": 371, "answer_sql": "SELECT CAST(SUM(CASE WHEN language = 'French' AND isStorySpotlight = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE language IS NOT NULL AND isStorySpotlight = 1;"}, {"question_id": 372, "answer_sql": "SELECT COUNT(id) FROM cards WHERE toughness = 99;"}, {"question_id": 373, "answer_sql": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Aaron Boyd';"}, {"question_id": 374, "answer_sql": "SELECT COUNT(id) FROM cards WHERE availability = 'mtgo' AND borderColor = 'black';"}, {"question_id": 375, "answer_sql": "SELECT id FROM cards WHERE convertedManaCost = 0;"}, {"question_id": 376, "answer_sql": "SELECT DISTINCT cards.layout FROM cards WHERE cards.keywords LIKE '%flying%';"}, {"question_id": 377, "answer_sql": "SELECT COUNT(*) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel';"}, {"question_id": 378, "answer_sql": "SELECT id FROM cards WHERE cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL;"}, {"question_id": 379, "answer_sql": "SELECT id FROM cards WHERE duelDeck = 'a';"}, {"question_id": 380, "answer_sql": "SELECT T1.edhrecRank FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 2015;"}, {"question_id": 381, "answer_sql": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified';"}, {"question_id": 382, "answer_sql": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese';"}, {"question_id": 383, "answer_sql": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid WHERE T1.borderColor = 'white' AND T3.status = 'Banned';"}, {"question_id": 384, "answer_sql": "SELECT cards.uuid, foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'legacy';"}, {"question_id": 385, "answer_sql": "SELECT text FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Beacon of Immortality' );"}, {"question_id": 386, "answer_sql": "SELECT COUNT(T1.id), T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.frameVersion = 'future' AND T2.status = 'Legal';"}, {"question_id": 387, "answer_sql": ""}, {"question_id": 388, "answer_sql": "SELECT T1.language, T1.translation FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.setCode = T2.setCode WHERE T2.setCode = '10E' AND T2.convertedManaCost = 5;"}, {"question_id": 389, "answer_sql": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Creature - Elf';"}, {"question_id": 390, "answer_sql": "SELECT T2.format, T1.colors FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.id BETWEEN 1 AND 20;"}, {"question_id": 391, "answer_sql": "SELECT T1.id FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.originalType = 'Artifact' AND T1.colors = 'B' AND T2.language IS NOT NULL;"}, {"question_id": 392, "answer_sql": "SELECT T1.name, T2.date FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'uncommon' ORDER BY T2.date ASC LIMIT 3;"}, {"question_id": 393, "answer_sql": "SELECT COUNT(id) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND artist = 'John Avon' AND power IS NULL;"}, {"question_id": 394, "answer_sql": "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND power IS NOT NULL;"}, {"question_id": 395, "answer_sql": "SELECT COUNT(id) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = '-1';"}, {"question_id": 396, "answer_sql": "SELECT COUNT(id) FROM cards WHERE availability = 'paper' AND frameVersion = 1993 AND hasContentWarning = 1;"}, {"question_id": 397, "answer_sql": "SELECT manaCost FROM cards WHERE availability = 'paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal';"}, {"question_id": 398, "answer_sql": "SELECT SUM(manaCost) FROM cards WHERE artist = 'Rob Alexander' AND manaCost = 'unconverted';"}, {"question_id": 399, "answer_sql": "SELECT DISTINCT type, subtypes, supertypes FROM cards WHERE availability = 'arena';"}, {"question_id": 400, "answer_sql": "SELECT setCode FROM set_translations WHERE language = 'Spanish';"}, {"question_id": 401, "answer_sql": "SELECT CAST(SUM(CASE WHEN hand = '+3' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards WHERE frameEffects = 'legendary';"}, {"question_id": 402, "answer_sql": "SELECT CAST(SUM(CASE WHEN isStorySpotlight = 1 AND isTextless = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards;"}, {"question_id": 403, "answer_sql": "SELECT (CAST(SUM(CASE WHEN language = 'Spanish' THEN 1 ELSE 0 END) AS REAL) / COUNT(id)) * 100 , name FROM foreign_data GROUP BY name;"}, {"question_id": 404, "answer_sql": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.baseSetSize = 309;"}, {"question_id": 405, "answer_sql": "SELECT COUNT(T1.id) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Commander' AND T2.language = 'Portuguese (Brazil)';"}, {"question_id": 406, "answer_sql": "SELECT T1.id, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Creature' AND T2.status = 'Legal';"}, {"question_id": 407, "answer_sql": "SELECT DISTINCT CASE WHEN subtypes IS NOT NULL AND supertypes IS NOT NULL THEN subtypes ELSE supertypes END AS card_types FROM cards WHERE uuid IN ( SELECT uuid FROM foreign_data WHERE language = 'German' );"}, {"question_id": 408, "answer_sql": "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND flavorText IS NOT NULL;"}, {"question_id": 409, "answer_sql": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'premium' AND cards.side IS NULL AND cards.text LIKE '%This is a triggered mana ability%'"}, {"question_id": 410, "answer_sql": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T2.format = 'pauper' AND T1.availability = 'paper'"}, {"question_id": 411, "answer_sql": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.flavorText LIKE '%Das perfekte Gegenmittel zu einer dichten Formation%'"}, {"question_id": 412, "answer_sql": ""}, {"question_id": 413, "answer_sql": "SELECT COUNT(*) FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.rarity = 'print' AND rulings.date = '2009-01-10';"}, {"question_id": 414, "answer_sql": "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ravnica' AND T1.baseSetSize = 180;"}, {"question_id": 415, "answer_sql": "SELECT CAST(SUM(CASE WHEN hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE uuid IN ( SELECT uuid FROM legalities WHERE format = 'commander' AND status = 'Legal' );"}, {"question_id": 416, "answer_sql": ""}, {"question_id": 417, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.language = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.language) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.type = 'expansion';"}, {"question_id": 418, "answer_sql": "SELECT DISTINCT printings FROM cards WHERE artist = 'Daren Bader';"}, {"question_id": 419, "answer_sql": "SELECT COUNT(id) FROM cards WHERE edhrecRank > 12000 AND borderColor = 'borderless';"}, {"question_id": 420, "answer_sql": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1;"}, {"question_id": 421, "answer_sql": "SELECT id, name, promoTypes FROM cards WHERE power IS NULL OR power = '*' AND promoTypes = 'arenaleague' ORDER BY name LIMIT 3;"}, {"question_id": 422, "answer_sql": "SELECT language FROM foreign_data WHERE multiverseid = 149934"}, {"question_id": 423, "answer_sql": "SELECT id, cardKingdomFoilId, cardKingdomId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId LIMIT 3"}, {"question_id": 424, "answer_sql": "SELECT CAST(SUM(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards;"}, {"question_id": 425, "answer_sql": "SELECT id FROM cards WHERE side IS NULL AND subtypes = 'Angel,Wizard' AND id NOT IN ( SELECT id FROM cards WHERE side IS NOT NULL );"}, {"question_id": 426, "answer_sql": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.mtgoCode IS NULL OR T1.mtgoCode = '' ORDER BY T1.name LIMIT 3"}, {"question_id": 427, "answer_sql": "SELECT T1.language FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.mcmName = 'Archenemy' AND T1.setCode = 'ARC';"}, {"question_id": 428, "answer_sql": ""}, {"question_id": 429, "answer_sql": ""}, {"question_id": 430, "answer_sql": "SELECT T1.id, T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' ORDER BY T1.name LIMIT 2;"}, {"question_id": 431, "answer_sql": ""}, {"question_id": 432, "answer_sql": "SELECT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1;"}, {"question_id": 433, "answer_sql": "SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(isOnlineOnly) FROM cards WHERE uuid IN ( SELECT uuid FROM foreign_data WHERE language = 'Chinese Simplified' );"}, {"question_id": 434, "answer_sql": "SELECT COUNT(DISTINCT T1.code) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND (T1.mtgoCode IS NULL OR T1.mtgoCode = '');"}, {"question_id": 435, "answer_sql": "SELECT id FROM cards WHERE borderColor = 'black';"}, {"question_id": 436, "answer_sql": "SELECT id FROM cards WHERE frameEffects = 'extendedart';"}, {"question_id": 437, "answer_sql": "SELECT id FROM cards WHERE isFullArt = 1 AND borderColor = 'black';"}, {"question_id": 438, "answer_sql": "SELECT language FROM set_translations WHERE id = ( SELECT id FROM sets WHERE id = 174 );"}, {"question_id": 439, "answer_sql": "SELECT name FROM sets WHERE code = 'ALL';"}, {"question_id": 440, "answer_sql": ""}, {"question_id": 441, "answer_sql": "SELECT T2.setCode FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate = '2007-07-13';"}, {"question_id": 442, "answer_sql": "SELECT T1.baseSetSize, T1.code FROM sets AS T1 INNER JOIN sets AS T2 ON T1.block = T2.block WHERE T1.block IN ('Masques', 'Mirage');"}, {"question_id": 443, "answer_sql": "SELECT code FROM sets WHERE type = 'expansion';"}, {"question_id": 444, "answer_sql": "SELECT T2.name, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'boros';"}, {"question_id": 445, "answer_sql": "SELECT T2.language, T2.flavorText, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.watermark = 'colorpie';"}, {"question_id": 446, "answer_sql": "SELECT CAST(SUM(CASE WHEN convertedManaCost = 10 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE name = 'Abyssal Horror';"}, {"question_id": 447, "answer_sql": "SELECT DISTINCT T1.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.type = 'commander';"}, {"question_id": 448, "answer_sql": "SELECT T2.name, T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'abzan';"}, {"question_id": 449, "answer_sql": "SELECT T2.language, T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T2.uuid = T1.uuid WHERE T1.watermark = 'azorius';"}, {"question_id": 450, "answer_sql": "SELECT COUNT(id) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomId IS NOT NULL;"}, {"question_id": 451, "answer_sql": "SELECT COUNT(id) FROM cards WHERE availability LIKE '%paper%' AND hand = '+%';"}, {"question_id": 452, "answer_sql": "SELECT DISTINCT text FROM cards WHERE isTextless = 0;"}, {"question_id": 453, "answer_sql": "SELECT manaCost FROM cards WHERE name = 'Ancestor''s Chosen';"}, {"question_id": 454, "answer_sql": "SELECT COUNT(id) FROM cards WHERE power = '*' AND borderColor = 'white';"}, {"question_id": 455, "answer_sql": "SELECT DISTINCT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL;"}, {"question_id": 456, "answer_sql": "SELECT subtypes, supertypes FROM cards WHERE name = 'Molimo, Maro-Sorcerer';"}, {"question_id": 457, "answer_sql": "SELECT DISTINCT purchaseUrls FROM cards WHERE promoTypes = 'bundle';"}, {"question_id": 458, "answer_sql": "SELECT COUNT(DISTINCT artist) FROM cards WHERE availability LIKE '%arena,mtgo%' AND borderColor = 'black';"}, {"question_id": 459, "answer_sql": "SELECT CASE WHEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel' OR name = 'Shrine Keeper') = (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel' AND convertedManaCost > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper')) THEN (SELECT convertedManaCost FROM cards WHERE name = 'Serra Angel' AND convertedManaCost > (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper')) ELSE (SELECT convertedManaCost FROM cards WHERE name = 'Shrine Keeper') END AS RESULT;"}, {"question_id": 460, "answer_sql": "SELECT T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.flavorName = 'Battra, Dark Destroyer'"}, {"question_id": 461, "answer_sql": "SELECT name FROM cards WHERE frameVersion = 2003 ORDER BY convertedManaCost DESC LIMIT 3;"}, {"question_id": 462, "answer_sql": "SELECT T3.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T3.code = T2.setCode INNER JOIN set_translations AS T4 ON T4.setCode = T3.code WHERE T1.language = 'Italian' AND T2.name = 'Ancestor''s Chosen';"}, {"question_id": 463, "answer_sql": "SELECT COUNT(DISTINCT translation) FROM set_translations WHERE setCode IN ( SELECT setCode FROM cards WHERE name = 'Angel of Mercy' );"}, {"question_id": 464, "answer_sql": ""}, {"question_id": 465, "answer_sql": "SELECT CASE WHEN ( SELECT translation FROM set_translations WHERE setCode = ( SELECT setCode FROM cards WHERE name = 'Ancestor''s Chosen' ) AND language = 'Korean' ) IS NOT NULL THEN 'Yes' ELSE 'No' END AS yn;"}, {"question_id": 466, "answer_sql": "SELECT COUNT(id) FROM cards WHERE artist = 'Adam Rex' AND setCode IN ( SELECT setCode FROM set_translations WHERE translation = 'Hauptset Zehnte Edition' );"}, {"question_id": 467, "answer_sql": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition';"}, {"question_id": 468, "answer_sql": ""}, {"question_id": 469, "answer_sql": "SELECT CASE WHEN (SELECT mtgoCode FROM sets WHERE code = (SELECT setCode FROM cards WHERE name = 'Angel of Mercy')) IS NOT NULL THEN 'Yes' ELSE 'No' END AS Angel_of_Mercy;"}, {"question_id": 470, "answer_sql": "SELECT T2.releaseDate FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Ancestor''s Chosen';"}, {"question_id": 471, "answer_sql": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Hauptset Zehnte Edition';"}, {"question_id": 472, "answer_sql": "SELECT COUNT(DISTINCT T2.setCode) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.block = 'Ice Age' AND T2.language = 'Italian';"}, {"question_id": 473, "answer_sql": "SELECT CASE WHEN (SELECT isForeignOnly FROM sets WHERE name = 'Adarkar Valkyrie') = 1 THEN 'Yes' ELSE 'No' END AS result;"}, {"question_id": 474, "answer_sql": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode INNER JOIN set_translations AS T3 ON T3.setCode = T2.code WHERE T3.language = 'Italian' AND T2.baseSetSize < 10;"}, {"question_id": 475, "answer_sql": "SELECT COUNT(id) FROM cards WHERE borderColor = 'black' AND setCode = ( SELECT code FROM sets WHERE name = 'Coldsnap' );"}, {"question_id": 476, "answer_sql": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost = ( SELECT MAX(T1.convertedManaCost) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' );"}, {"question_id": 477, "answer_sql": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy');"}, {"question_id": 478, "answer_sql": "SELECT T1.number FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.number = 4"}, {"question_id": 479, "answer_sql": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5 AND (T1.power IS NULL OR T1.power = '*');"}, {"question_id": 480, "answer_sql": "SELECT T1.flavorText FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Ancestor''s Chosen' AND T1.language = 'Italian';"}, {"question_id": 481, "answer_sql": "SELECT T2.language FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.flavorText IS NOT NULL;"}, {"question_id": 482, "answer_sql": "SELECT T1.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German' AND T1.name = 'Ancestor''s Chosen';"}, {"question_id": 483, "answer_sql": "SELECT T1.text FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T3.code = T2.setCode WHERE T3.name = 'Coldsnap' AND T1.language = 'Italian';"}, {"question_id": 484, "answer_sql": "SELECT T1.name FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN sets AS T3 ON T3.code = T1.setCode WHERE T3.name = 'Coldsnap' AND T2.language = 'Italian' ORDER BY T1.convertedManaCost DESC LIMIT 1;"}, {"question_id": 485, "answer_sql": "SELECT T1.date FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T2.name = 'Reminisce';"}, {"question_id": 486, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap';"}, {"question_id": 487, "answer_sql": "SELECT CAST(SUM(CASE WHEN cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards WHERE setCode = ( SELECT code FROM sets WHERE name = 'Coldsnap' );"}, {"question_id": 488, "answer_sql": "SELECT code FROM sets WHERE releaseDate = '2017-07-14'"}, {"question_id": 489, "answer_sql": "SELECT keyruneCode FROM sets WHERE code = 'PKHC';"}, {"question_id": 490, "answer_sql": "SELECT T1.mcmId FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T1.code = 'SS2'"}, {"question_id": 491, "answer_sql": "SELECT mcmName FROM sets WHERE releaseDate = '2017-06-09';"}, {"question_id": 492, "answer_sql": "SELECT type FROM sets WHERE name LIKE '%From the Vault: Lore%';"}, {"question_id": 493, "answer_sql": "SELECT parentCode FROM sets WHERE name = 'Commander 2014 Oversized';"}, {"question_id": 494, "answer_sql": "SELECT T2.text, T1.hasContentWarning, T1.artist, T1.id, T1.side FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Jim Pavelec'"}, {"question_id": 495, "answer_sql": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Evacuation'"}, {"question_id": 496, "answer_sql": "SELECT T1.baseSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Rinascita di Alara';"}, {"question_id": 497, "answer_sql": "SELECT T1.type FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Huiti\u00e8me \u00e9dition';"}, {"question_id": 498, "answer_sql": ""}, {"question_id": 499, "answer_sql": "SELECT COUNT(DISTINCT translation) FROM set_translations WHERE setCode = ( SELECT code FROM sets WHERE name = 'Salvat 2011' );"}, {"question_id": 500, "answer_sql": "SELECT T2.name FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.name = 'Fellwar Stone' AND T3.language = 'Japanese';"}, {"question_id": 501, "answer_sql": "SELECT T1.name FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Journey into Nyx Hero''s Path' ORDER BY T1.convertedManaCost DESC LIMIT 1;"}, {"question_id": 502, "answer_sql": "SELECT T1.releaseDate FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.translation = 'Ola de fr\u00edo';"}, {"question_id": 503, "answer_sql": "SELECT T1.type FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T2.name = 'Samite Pilgrim'"}, {"question_id": 504, "answer_sql": "SELECT COUNT(id) FROM cards WHERE setCode = ( SELECT code FROM sets WHERE name = 'World Championship Decks 2004' ) AND convertedManaCost = 3;"}, {"question_id": 505, "answer_sql": "SELECT translation FROM set_translations WHERE setCode = ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified';"}, {"question_id": 506, "answer_sql": "SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' )"}, {"question_id": 507, "answer_sql": "SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM cards WHERE uuid IN ( SELECT uuid FROM set_translations WHERE language = 'Portuguese (Brazil)' );"}, {"question_id": 508, "answer_sql": "SELECT DISTINCT availability FROM cards WHERE artist != 'Aleksi Briclot' AND isTextless = 1;"}, {"question_id": 509, "answer_sql": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1"}, {"question_id": 510, "answer_sql": "SELECT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.side IS NULL ORDER BY T1.convertedManaCost DESC LIMIT 1;"}, {"question_id": 511, "answer_sql": "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY frameEffects ORDER BY COUNT(frameEffects) DESC LIMIT 1"}, {"question_id": 512, "answer_sql": "SELECT COUNT(id) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a';"}, {"question_id": 513, "answer_sql": "SELECT id FROM sets WHERE type = 'commander' AND totalSetSize = ( SELECT MAX(totalSetSize) FROM sets WHERE type = 'commander' );"}, {"question_id": 514, "answer_sql": "SELECT T1.id, T1.manaCost FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'duel' ORDER BY T1.manaCost DESC LIMIT 10;"}, {"question_id": 515, "answer_sql": "SELECT T1.originalReleaseDate, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'mythic' ORDER BY T1.originalReleaseDate ASC LIMIT 1;"}, {"question_id": 516, "answer_sql": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Volkan Baga' AND T2.language = 'French';"}, {"question_id": 517, "answer_sql": "SELECT COUNT(DISTINCT cards.id) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'rare' AND cards.types = 'Enchantment' AND cards.name = 'Abundance' AND legalities.status = 'Legal';"}, {"question_id": 518, "answer_sql": "SELECT T1.format, T1.uuid FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.status = 'Banned' GROUP BY T1.format ORDER BY COUNT(T1.status) DESC LIMIT 1;"}, {"question_id": 519, "answer_sql": "SELECT language FROM set_translations WHERE id = ( SELECT id FROM sets WHERE name = 'Battlebond' );"}, {"question_id": 520, "answer_sql": "SELECT T1.artist, T3.format FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN legalities AS T3 ON T1.uuid = T3.uuid GROUP BY T1.artist ORDER BY COUNT(T1.artist) ASC LIMIT 1;"}, {"question_id": 521, "answer_sql": "SELECT T1.format, T1.status, T2.artist, T2.frameVersion, T2.id, T2.side FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid WHERE T2.frameVersion = 1997 AND T2.hasContentWarning = 1 AND T1.format = 'legacy' AND T2.artist = 'D. Alexander Gregory';"}, {"question_id": 522, "answer_sql": ""}, {"question_id": 523, "answer_sql": "SELECT AVG(baseSetSize) as avg_sets, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T2.language ORDER BY COUNT(T2.language) DESC LIMIT 1;"}, {"question_id": 524, "answer_sql": "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.borderColor = 'black' AND T1.availability = 'arena';"}, {"question_id": 525, "answer_sql": "SELECT DISTINCT cards.uuid FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format IN ('oldschool', 'banned', 'restricted');"}, {"question_id": 526, "answer_sql": "SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper';"}, {"question_id": 527, "answer_sql": "SELECT r.text FROM cards c INNER JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Kev Walker' ORDER BY r.date DESC;"}, {"question_id": 528, "answer_sql": "SELECT T1.name, T3.format FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode INNER JOIN legalities AS T3 ON T3.uuid = T1.uuid WHERE T2.name = 'Hour of Devastation' AND T3.status = 'Legal'"}, {"question_id": 529, "answer_sql": "SELECT DISTINCT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language NOT LIKE '%Japanese%' AND T2.language = 'Korean';"}, {"question_id": 530, "answer_sql": ""}, {"question_id": 531, "answer_sql": "SELECT DisplayName FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users WHERE DisplayName IN ('Harlan', 'Jarrod Dixon') )"}, {"question_id": 532, "answer_sql": "SELECT DisplayName FROM users WHERE STRFTIME('%Y', CreationDate) = '2014'"}, {"question_id": 533, "answer_sql": "SELECT COUNT(Id) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00';"}, {"question_id": 534, "answer_sql": "SELECT DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users );"}, {"question_id": 535, "answer_sql": "SELECT COUNT(*) FROM users WHERE Upvotes > 100 AND Downvotes > 1;"}, {"question_id": 536, "answer_sql": "SELECT COUNT(Id) FROM users WHERE Views > 10 AND STRFTIME('%Y', CreationDate) > '2013';"}, {"question_id": 537, "answer_sql": "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie';"}, {"question_id": 538, "answer_sql": "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie');"}, {"question_id": 539, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Eliciting priors from experts';"}, {"question_id": 540, "answer_sql": "SELECT Title FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' ) ORDER BY ViewCount DESC LIMIT 1;"}, {"question_id": 541, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts )"}, {"question_id": 542, "answer_sql": "SELECT SUM(CommentCount) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' );"}, {"question_id": 543, "answer_sql": "SELECT MAX(AnswerCount) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' );"}, {"question_id": 544, "answer_sql": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Examples for teaching: Correlation does not mean causation'"}, {"question_id": 545, "answer_sql": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND T1.ParentId IS NULL;"}, {"question_id": 546, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ClosedDate IS NOT NULL"}, {"question_id": 547, "answer_sql": "SELECT COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20;"}, {"question_id": 548, "answer_sql": "SELECT T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Eliciting priors from experts';"}, {"question_id": 549, "answer_sql": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.TagName = 'bayesian'"}, {"question_id": 550, "answer_sql": "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId ORDER BY T2.Count DESC LIMIT 1;"}, {"question_id": 551, "answer_sql": "SELECT COUNT(badges.Id) FROM badges WHERE badges.UserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' );"}, {"question_id": 552, "answer_sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'csgillespie'"}, {"question_id": 553, "answer_sql": "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'csgillespie' AND STRFTIME('%Y', T1.Date) = '2011'"}, {"question_id": 554, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T2.UserId ORDER BY COUNT(T2.Id) DESC LIMIT 1"}, {"question_id": 555, "answer_sql": "SELECT AVG(Score) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' );"}, {"question_id": 556, "answer_sql": "SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(DISTINCT T1.DisplayName) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Views > 200;"}, {"question_id": 557, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.Age > 65 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 20;"}, {"question_id": 558, "answer_sql": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'"}, {"question_id": 559, "answer_sql": "SELECT CreationDate FROM votes GROUP BY CreationDate ORDER BY COUNT(Id) DESC LIMIT 1"}, {"question_id": 560, "answer_sql": "SELECT COUNT(Id) FROM badges WHERE Name = 'Revival';"}, {"question_id": 561, "answer_sql": "SELECT T1.Title FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score = ( SELECT MAX(Score) FROM comments );"}, {"question_id": 562, "answer_sql": "SELECT COUNT(c.Id) FROM comments c JOIN posts p ON c.PostId = p.Id WHERE p.ViewCount = 1910;"}, {"question_id": 563, "answer_sql": "SELECT FavoriteCount FROM posts WHERE Id = ( SELECT PostId FROM comments WHERE UserId = 3025 AND CreationDate = '2014-04-23 20:29:39.0' );"}, {"question_id": 564, "answer_sql": ""}, {"question_id": 565, "answer_sql": "SELECT IIF(T1.ClosedDate IS NULL, 'Not well-finished', 'well-finished') AS result FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.UserId = 23853 AND T2.CreationDate = '2013-07-12 09:08:18.0';"}, {"question_id": 566, "answer_sql": "SELECT T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 65041;"}, {"question_id": 567, "answer_sql": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Tiago Pasqualini';"}, {"question_id": 568, "answer_sql": "SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Id = 6347;"}, {"question_id": 569, "answer_sql": "SELECT COUNT(votes.Id) FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data visualization%';"}, {"question_id": 570, "answer_sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'DatEpicCoderGuyWhoPrograms'"}, {"question_id": 571, "answer_sql": "SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(DISTINCT T3.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN votes AS T3 ON T3.UserId = T2.OwnerUserId WHERE T1.Id = 24;"}, {"question_id": 572, "answer_sql": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer';"}, {"question_id": 573, "answer_sql": "SELECT Text FROM comments WHERE Score = 17;"}, {"question_id": 574, "answer_sql": "SELECT DisplayName FROM users WHERE WebsiteUrl = 'http://stackoverflow.com';"}, {"question_id": 575, "answer_sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost'"}, {"question_id": 576, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'thank you user93!'"}, {"question_id": 577, "answer_sql": ""}, {"question_id": 578, "answer_sql": "SELECT T1.DisplayName, T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Title = 'Understanding what Dassault iSight is doing?'"}, {"question_id": 579, "answer_sql": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?'"}, {"question_id": 580, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Necromancer' LIMIT 10;"}, {"question_id": 581, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T2.Title = 'Open source tools for visualizing multi-dimensional data?'"}, {"question_id": 582, "answer_sql": "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Vebjorn Ljosa'"}, {"question_id": 583, "answer_sql": "SELECT SUM(posts.Score), users.WebsiteUrl FROM posts INNER JOIN users ON posts.LastEditorUserId = users.Id WHERE users.DisplayName = 'Yevgeny' GROUP BY users.WebsiteUrl;"}, {"question_id": 584, "answer_sql": "SELECT T2.text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Why square the difference instead of taking the absolute value in standard deviation?'"}, {"question_id": 585, "answer_sql": "SELECT SUM(BountyAmount) FROM votes JOIN posts ON votes.PostId = posts.Id WHERE posts.Title LIKE '%data%';"}, {"question_id": 586, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.Title LIKE '%variance%' AND T2.BountyAmount = 50;"}, {"question_id": 587, "answer_sql": "SELECT AVG(posts.ViewCount) , posts.Title , comments.Text FROM posts INNER JOIN comments ON posts.Id = comments.PostId INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'humor'"}, {"question_id": 588, "answer_sql": "SELECT COUNT(Id) FROM comments WHERE UserId = 13;"}, {"question_id": 589, "answer_sql": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users );"}, {"question_id": 590, "answer_sql": "SELECT Id FROM users WHERE Views = ( SELECT MIN(Views) FROM users );"}, {"question_id": 591, "answer_sql": "SELECT COUNT(DISTINCT users.Id) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE STRFTIME('%Y', badges.Date) = '2011' AND badges.Name = 'Supporter';"}, {"question_id": 592, "answer_sql": "SELECT COUNT(UserId) FROM ( SELECT UserId FROM badges GROUP BY UserId HAVING COUNT(Name) > 5 );"}, {"question_id": 593, "answer_sql": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name IN ('Supporter', 'Teacher') AND users.Location = 'New York';"}, {"question_id": 594, "answer_sql": "SELECT T1.Reputation FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 1"}, {"question_id": 595, "answer_sql": ""}, {"question_id": 596, "answer_sql": "SELECT T1.UserId, T3.Name FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id INNER JOIN badges AS T3 ON T2.Id = T3.UserId GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1;"}, {"question_id": 597, "answer_sql": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'India' AND T2.Name = 'Teacher';"}, {"question_id": 598, "answer_sql": "SELECT (SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) - SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0))) * 100.0 / SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) FROM badges WHERE Name = 'Student';"}, {"question_id": 599, "answer_sql": "SELECT T1.PostHistoryTypeId , COUNT(DISTINCT T3.UserId) FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN comments AS T3 ON T2.Id = T3.PostId WHERE T2.Id = 3720 GROUP BY T1.PostHistoryTypeId;"}, {"question_id": 600, "answer_sql": "SELECT T1.Id, T1.ViewCount FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.RelatedPostId = 61217"}, {"question_id": 601, "answer_sql": "SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.PostId = 395;"}, {"question_id": 602, "answer_sql": "SELECT Id, OwnerUserId FROM posts WHERE Score > 60;"}, {"question_id": 603, "answer_sql": "SELECT SUM(FavoriteCount) FROM posts WHERE OwnerUserId = 686 AND STRFTIME('%Y', CreaionDate) = '2011';"}, {"question_id": 604, "answer_sql": "SELECT AVG(UpVotes) AS avg_up_votes, AVG(Age) AS avg_age FROM ( SELECT T1.UpVotes, T2.Age, COUNT(T2.Id) AS Count FROM users AS T1 INNER JOIN users AS T2 ON T1.Id = T2.Id GROUP BY T1.Id HAVING COUNT(T2.Id) > 10 ) AS T3;"}, {"question_id": 605, "answer_sql": "SELECT COUNT(Id) FROM badges WHERE Name = 'Announcer';"}, {"question_id": 606, "answer_sql": ""}, {"question_id": 607, "answer_sql": "SELECT COUNT(Id) FROM comments WHERE Score > 60;"}, {"question_id": 608, "answer_sql": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0';"}, {"question_id": 609, "answer_sql": "SELECT COUNT(Id) FROM posts WHERE Score = 10;"}, {"question_id": 610, "answer_sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Reputation = ( SELECT MAX(Reputation) FROM users );"}, {"question_id": 611, "answer_sql": "SELECT T1.Reputation FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'"}, {"question_id": 612, "answer_sql": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Pierre'"}, {"question_id": 613, "answer_sql": "SELECT T1.Date FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Rochester, NY'"}, {"question_id": 614, "answer_sql": "SELECT CAST(SUM(IIF(T1.Name = 'Teacher', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.Id WHERE T1.Name = 'Teacher';"}, {"question_id": 615, "answer_sql": "SELECT CAST(SUM(IIF(T2.Age BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.UserId) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Name = 'Organizer';"}, {"question_id": 616, "answer_sql": "SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:19:56.0'"}, {"question_id": 617, "answer_sql": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:37:33.0';"}, {"question_id": 618, "answer_sql": "SELECT T2.Age FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.Location = 'Vienna, Austria'"}, {"question_id": 619, "answer_sql": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Supporter' AND users.Age BETWEEN 19 AND 65;"}, {"question_id": 620, "answer_sql": "SELECT T1.Views FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Date = '2010-07-19 19:39:08.0'"}, {"question_id": 621, "answer_sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Reputation = ( SELECT MIN(Reputation) FROM users );"}, {"question_id": 622, "answer_sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Sharpie'"}, {"question_id": 623, "answer_sql": "SELECT COUNT(Id) FROM users WHERE Age > 65 AND Id IN (SELECT UserId FROM badges WHERE Name = 'Supporter');"}, {"question_id": 624, "answer_sql": "SELECT DisplayName FROM users WHERE Id = 30;"}, {"question_id": 625, "answer_sql": "SELECT COUNT(Id) FROM users WHERE Location = 'New York';"}, {"question_id": 626, "answer_sql": "SELECT COUNT(Id) FROM votes WHERE CreationDate LIKE '2010%';"}, {"question_id": 627, "answer_sql": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65;"}, {"question_id": 628, "answer_sql": "SELECT DisplayName FROM users ORDER BY Views DESC LIMIT 1;"}, {"question_id": 629, "answer_sql": "SELECT CAST(SUM(IIF(STRFTIME('%Y', CreationDate) = 2010, 1, 0)) AS REAL) / SUM(IIF(STRFTIME('%Y', CreationDate) = 2011, 1, 0)) FROM votes;"}, {"question_id": 630, "answer_sql": ""}, {"question_id": 631, "answer_sql": "SELECT COUNT(T2.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Daniel Vassallo';"}, {"question_id": 632, "answer_sql": "SELECT COUNT(v.Id) FROM votes v JOIN users u ON v.UserId = u.Id WHERE u.DisplayName = 'Harlan';"}, {"question_id": 633, "answer_sql": "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'slashnick' ORDER BY T1.AnswerCount DESC LIMIT 1;"}, {"question_id": 634, "answer_sql": "SELECT T1.DisplayName, SUM(T2.ViewCount) as TotalViews FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY T1.DisplayName ORDER BY TotalViews DESC LIMIT 1;"}, {"question_id": 635, "answer_sql": "SELECT COUNT(votes.Id) FROM votes JOIN users ON votes.UserId = users.Id WHERE users.DisplayName = 'Matt Parker' AND votes.PostId > 4;"}, {"question_id": 636, "answer_sql": "SELECT COUNT(c.Id) FROM comments c INNER JOIN users u ON c.UserId = u.Id WHERE u.DisplayName = 'Neil McGuigan' AND c.Score < 60;"}, {"question_id": 637, "answer_sql": "SELECT T1.Tags FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mark Meckes' AND T1.Id NOT IN ( SELECT PostId FROM comments );"}, {"question_id": 638, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Organizer';"}, {"question_id": 639, "answer_sql": "SELECT CAST(SUM(IIF(Tags = 'R', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM posts WHERE OwnerUserId IN ( SELECT Id FROM users WHERE DisplayName = 'Community' );"}, {"question_id": 640, "answer_sql": "SELECT (SUM(CASE WHEN T2.DisplayName = 'Mornington' THEN T1.ViewCount ELSE 0 END) - SUM(CASE WHEN T2.DisplayName = 'Amos' THEN T1.ViewCount ELSE 0 END)) AS diff FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id"}, {"question_id": 641, "answer_sql": "SELECT COUNT(DISTINCT users.Id) FROM users JOIN badges ON users.Id = badges.UserId WHERE SUBSTR(badges.Date, 1, 4) = '2014';"}, {"question_id": 642, "answer_sql": "SELECT COUNT(id) FROM posts WHERE CreaionDate = '2010-07-21';"}, {"question_id": 643, "answer_sql": "SELECT DisplayName, Age FROM users WHERE Views = (SELECT MAX(Views) FROM users);"}, {"question_id": 644, "answer_sql": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images';"}, {"question_id": 645, "answer_sql": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60;"}, {"question_id": 646, "answer_sql": "SELECT T1.Title, T2.UserDisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T2.Score > 60;"}, {"question_id": 647, "answer_sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'North Pole' AND STRFTIME('%Y', T2.Date) = '2011';"}, {"question_id": 648, "answer_sql": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.FavoriteCount > 150;"}, {"question_id": 649, "answer_sql": "SELECT T2.Id, T2.LastEditDate FROM postHistory AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.Title = 'What is the best introductory Bayesian statistics textbook?'"}, {"question_id": 650, "answer_sql": "SELECT T1.LastAccessDate, T1.Location FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'outliers'"}, {"question_id": 651, "answer_sql": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN posts AS T3 ON T3.Id = T2.RelatedPostId WHERE T1.Title = 'How to tell if something happened in a data set which monitors a value over time';"}, {"question_id": 652, "answer_sql": "SELECT T2.PostId, T1.Name FROM badges AS T1 INNER JOIN postHistory AS T2 ON T1.UserId = T2.UserId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T3.DisplayName = 'Samuel' AND STRFTIME('%Y', T1.Date) = '2013';"}, {"question_id": 653, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.ViewCount DESC LIMIT 1;"}, {"question_id": 654, "answer_sql": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T3.TagName = 'hypothesis-testing'"}, {"question_id": 655, "answer_sql": "SELECT T3.Title, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN posts AS T3 ON T2.RelatedPostId = T3.Id WHERE T1.Title = 'What are principal component scores?';"}, {"question_id": 656, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ParentId = ( SELECT Id FROM posts ORDER BY Score DESC LIMIT 1 )"}, {"question_id": 657, "answer_sql": "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId WHERE T2.VoteTypeId = 8 ORDER BY T2.BountyAmount DESC LIMIT 1;"}, {"question_id": 658, "answer_sql": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5;"}, {"question_id": 659, "answer_sql": "SELECT COUNT(Id) FROM tags WHERE Count BETWEEN 5000 AND 7000;"}, {"question_id": 660, "answer_sql": "SELECT OwnerUserId FROM posts ORDER BY FavoriteCount DESC LIMIT 1"}, {"question_id": 661, "answer_sql": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users );"}, {"question_id": 662, "answer_sql": "SELECT COUNT(*) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE STRFTIME('%Y', T1.CreationDate) = '2011' AND T1.BountyAmount = 50;"}, {"question_id": 663, "answer_sql": "SELECT Id FROM users WHERE Age = ( SELECT MIN(Age) FROM users );"}, {"question_id": 664, "answer_sql": "SELECT T1.Score FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId GROUP BY T2.TagName ORDER BY COUNT(T2.Count) DESC LIMIT 1"}, {"question_id": 665, "answer_sql": ""}, {"question_id": 666, "answer_sql": "SELECT T2.Id FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465 ORDER BY T2.FavoriteCount DESC LIMIT 1;"}, {"question_id": 667, "answer_sql": "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T1.CreaionDate LIMIT 1;"}, {"question_id": 668, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId GROUP BY T2.UserId ORDER BY COUNT(T2.Name) DESC LIMIT 1"}, {"question_id": 669, "answer_sql": "SELECT CreationDate FROM votes WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'chl' ) ORDER BY CreationDate ASC LIMIT 1;"}, {"question_id": 670, "answer_sql": "SELECT T1.CreaionDate FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T2.Age ASC, T1.CreaionDate ASC LIMIT 1"}, {"question_id": 671, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name = 'Autobiographer' ORDER BY T2.Date LIMIT 1"}, {"question_id": 672, "answer_sql": "SELECT COUNT(DISTINCT T1.id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.id = T2.owneruserid WHERE T1.location = 'United Kingdom' AND T2.FavoriteCount >= 4;"}, {"question_id": 673, "answer_sql": "SELECT AVG(PostId) FROM votes WHERE UserId = ( SELECT Id FROM users WHERE Age = ( SELECT MAX(Age) FROM users ) );"}, {"question_id": 674, "answer_sql": "SELECT DisplayName FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users );"}, {"question_id": 675, "answer_sql": "SELECT COUNT(Id) FROM users WHERE Reputation > 2000 AND Views > 1000;"}, {"question_id": 676, "answer_sql": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65;"}, {"question_id": 677, "answer_sql": "SELECT COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'Jay Stevens' AND STRFTIME('%Y', T2.CreaionDate) = '2010';"}, {"question_id": 678, "answer_sql": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1;"}, {"question_id": 679, "answer_sql": "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T1.Score DESC LIMIT 1;"}, {"question_id": 680, "answer_sql": "SELECT AVG(Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Stephen Turner'"}, {"question_id": 681, "answer_sql": "SELECT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.ViewCount > 20000 AND STRFTIME('%Y', T2.CreaionDate) = '2011'"}, {"question_id": 682, "answer_sql": "SELECT Id, OwnerDisplayName FROM posts WHERE CreaionDate LIKE '2010%' ORDER BY FavoriteCount DESC LIMIT 1;"}, {"question_id": 683, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.Reputation > 1000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE STRFTIME('%Y', T2.CreaionDate) = '2011';"}, {"question_id": 684, "answer_sql": "SELECT CAST(SUM(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Id) FROM users;"}, {"question_id": 685, "answer_sql": ""}, {"question_id": 686, "answer_sql": "SELECT COUNT(*) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts );"}, {"question_id": 687, "answer_sql": "SELECT COUNT(Id) FROM comments WHERE PostId = ( SELECT Id FROM posts ORDER BY Score DESC LIMIT 1 );"}, {"question_id": 688, "answer_sql": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0;"}, {"question_id": 689, "answer_sql": "SELECT T1.DisplayName, T1.Location FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T2.Id = 183 ORDER BY T2.LastEditDate DESC LIMIT 1;"}, {"question_id": 690, "answer_sql": "SELECT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Emmett' ORDER BY T1.Date DESC LIMIT 1;"}, {"question_id": 691, "answer_sql": "SELECT COUNT(Id) FROM users WHERE Age BETWEEN 19 AND 65 AND UpVotes > 5000;"}, {"question_id": 692, "answer_sql": "SELECT T1.Date, T2.CreationDate FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'"}, {"question_id": 693, "answer_sql": "SELECT COUNT(DISTINCT T1.Id) AS Posts, COUNT(DISTINCT T2.Id) AS Comments FROM users AS T1 LEFT JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.CreationDate = (SELECT MAX(CreationDate) FROM users);"}, {"question_id": 694, "answer_sql": "SELECT T2.Text, T1.DisplayName FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 1;"}, {"question_id": 695, "answer_sql": "SELECT COUNT(DISTINCT users.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Citizen Patrol';"}, {"question_id": 696, "answer_sql": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers';"}, {"question_id": 697, "answer_sql": "SELECT T1.Reputation, T1.Views FROM users AS T1 INNER JOIN users AS T2 ON T1.Id = T2.Id WHERE T2.DisplayName = 'Jarrod Dixon'"}, {"question_id": 698, "answer_sql": "SELECT COUNT(c.Id), COUNT(a.Id) FROM comments c INNER JOIN posts a ON c.PostId = a.Id WHERE a.Title = 'Clustering 1D data';"}, {"question_id": 699, "answer_sql": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat';"}, {"question_id": 700, "answer_sql": "SELECT COUNT(Id) FROM votes WHERE BountyAmount >= 30;"}, {"question_id": 701, "answer_sql": "SELECT CAST(SUM(IIF(Score > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users ) );"}, {"question_id": 702, "answer_sql": "SELECT COUNT(id) FROM posts WHERE score < 20;"}, {"question_id": 703, "answer_sql": "SELECT COUNT(Id) FROM tags WHERE Count <= 20 AND Id < 15;"}, {"question_id": 704, "answer_sql": "SELECT ExcerptPostId, WikiPostId FROM tags WHERE TagName = 'sample';"}, {"question_id": 705, "answer_sql": "SELECT T2.Reputation, T2.UpVotes FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text = 'fine, you win :)';"}, {"question_id": 706, "answer_sql": ""}, {"question_id": 707, "answer_sql": "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1;"}, {"question_id": 708, "answer_sql": "SELECT T1.CreationDate, T1.Age FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text LIKE '%http://%'"}, {"question_id": 709, "answer_sql": "SELECT COUNT(*) FROM posts WHERE ViewCount < 5 AND Score = 0;"}, {"question_id": 710, "answer_sql": "SELECT COUNT(Id) FROM comments WHERE PostId = 1 AND Score = 0;"}, {"question_id": 711, "answer_sql": "SELECT COUNT(DISTINCT users.Age) FROM users JOIN comments ON users.Id = comments.UserId WHERE comments.Score = 0 AND users.Age = 40;"}, {"question_id": 712, "answer_sql": "SELECT T2.Id, T3.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN comments AS T3 ON T3.Id = T2.Id WHERE T1.Title = 'Group differences on a five point Likert item';"}, {"question_id": 713, "answer_sql": "SELECT T1.UpVotes FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Text = 'R is also lazy evaluated.';"}, {"question_id": 714, "answer_sql": "SELECT T2.Text FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Harvey Motulsky'"}, {"question_id": 715, "answer_sql": "SELECT T1.UserDisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0;"}, {"question_id": 716, "answer_sql": "SELECT CAST(SUM(IIF(T1.UpVotes = 0, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 5 AND 10;"}, {"question_id": 717, "answer_sql": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.superhero_name = '3-D Man';"}, {"question_id": 718, "answer_sql": "SELECT COUNT(DISTINCT superhero_name) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength';"}, {"question_id": 719, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200;"}, {"question_id": 720, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id GROUP BY T1.id HAVING COUNT(T2.hero_id) > 15;"}, {"question_id": 721, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue';"}, {"question_id": 722, "answer_sql": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.skin_colour_id WHERE T2.superhero_name = 'Apocalypse';"}, {"question_id": 723, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T4.colour = 'Blue' AND T3.power_name = 'Agility';"}, {"question_id": 724, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T4.colour = 'Blue' AND T3.power_name = 'Agility';"}, {"question_id": 725, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics';"}, {"question_id": 726, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1;"}, {"question_id": 727, "answer_sql": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name = 'Sauron';"}, {"question_id": 728, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T3.id = T1.publisher_id WHERE T2.colour = 'Blue' AND T3.publisher_name = 'Marvel Comics';"}, {"question_id": 729, "answer_sql": "SELECT AVG(superhero.height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics';"}, {"question_id": 730, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T3.power_name = 'Super Strength' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Marvel Comics';"}, {"question_id": 731, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics';"}, {"question_id": 732, "answer_sql": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN hero_attribute AS T3 ON T2.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Speed' ORDER BY T3.attribute_value LIMIT 1;"}, {"question_id": 733, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold';"}, {"question_id": 734, "answer_sql": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II';"}, {"question_id": 735, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond';"}, {"question_id": 736, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id WHERE T3.attribute_name = 'Intelligence' ORDER BY T2.attribute_value LIMIT 1;"}, {"question_id": 737, "answer_sql": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'Copycat';"}, {"question_id": 738, "answer_sql": "SELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Durability' AND T1.attribute_value < 50;"}, {"question_id": 739, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T3.power_name = 'Death Touch'"}, {"question_id": 740, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T1.gender_id = 2 AND T2.attribute_value = 100;"}, {"question_id": 741, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id GROUP BY T1.superhero_name ORDER BY COUNT(T3.power_name) DESC LIMIT 1"}, {"question_id": 742, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire';"}, {"question_id": 743, "answer_sql": "SELECT CAST(COUNT(CASE WHEN t2.alignment = 'Bad' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(t1.id), COUNT(CASE WHEN t3.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) FROM superhero t1 INNER JOIN alignment t2 ON t1.alignment_id = t2.id INNER JOIN publisher t3 ON t1.publisher_id = t3.id WHERE t2.alignment = 'Good' OR t2.alignment = 'Neutral';"}, {"question_id": 744, "answer_sql": "SELECT ( SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ) - ( SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics' ) AS DIFFERENCE"}, {"question_id": 745, "answer_sql": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek';"}, {"question_id": 746, "answer_sql": "SELECT AVG(attribute_value) FROM hero_attribute;"}, {"question_id": 747, "answer_sql": "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL;"}, {"question_id": 748, "answer_sql": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.id = 75"}, {"question_id": 749, "answer_sql": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.superhero_name = 'Deathlok';"}, {"question_id": 750, "answer_sql": "SELECT AVG(weight_kg) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female');"}, {"question_id": 751, "answer_sql": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id INNER JOIN gender AS T4 ON T4.id = T1.gender_id WHERE T4.gender = 'Male' LIMIT 5;"}, {"question_id": 752, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien';"}, {"question_id": 753, "answer_sql": "SELECT superhero_name FROM superhero WHERE height_cm BETWEEN 170 AND 190 AND eye_colour_id = 1;"}, {"question_id": 754, "answer_sql": "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = 56"}, {"question_id": 755, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Demi-God' LIMIT 5;"}, {"question_id": 756, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad';"}, {"question_id": 757, "answer_sql": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169;"}, {"question_id": 758, "answer_sql": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T1.height_cm = 185 AND T1.race_id = ( SELECT id FROM race WHERE race = 'Human' )"}, {"question_id": 759, "answer_sql": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id ORDER BY T1.weight_kg DESC LIMIT 1;"}, {"question_id": 760, "answer_sql": "SELECT CAST(COUNT(CASE WHEN publisher_id = 13 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(publisher_id) FROM superhero WHERE height_cm BETWEEN 150 AND 180;"}, {"question_id": 761, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 'Male' AND T1.weight_kg > 0.79 * ( SELECT AVG(weight_kg) FROM superhero );"}, {"question_id": 762, "answer_sql": "SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id GROUP BY superpower.power_name ORDER BY COUNT(superhero.id) DESC LIMIT 1;"}, {"question_id": 763, "answer_sql": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Abomination';"}, {"question_id": 764, "answer_sql": "SELECT T1.power_name FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id WHERE T2.hero_id = 1;"}, {"question_id": 765, "answer_sql": "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Stealth';"}, {"question_id": 766, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' ORDER BY T2.attribute_value DESC LIMIT 1;"}, {"question_id": 767, "answer_sql": "SELECT CAST(COUNT(*) AS REAL) / SUM(CASE WHEN skin_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero WHERE skin_colour_id = 1;"}, {"question_id": 768, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Dark Horse Comics';"}, {"question_id": 769, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1;"}, {"question_id": 770, "answer_sql": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Abraham Sapien';"}, {"question_id": 771, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Flight';"}, {"question_id": 772, "answer_sql": "SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female';"}, {"question_id": 773, "answer_sql": "SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id;"}, {"question_id": 774, "answer_sql": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.superhero_name = 'A-Bomb';"}, {"question_id": 775, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female';"}, {"question_id": 776, "answer_sql": "SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler';"}, {"question_id": 777, "answer_sql": "SELECT T2.gender FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.superhero_name = 'Agent 13';"}, {"question_id": 778, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Adaptation';"}, {"question_id": 779, "answer_sql": "SELECT COUNT(T2.power_id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.superhero_name = 'Amazo';"}, {"question_id": 780, "answer_sql": ""}, {"question_id": 781, "answer_sql": "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber';"}, {"question_id": 782, "answer_sql": "SELECT superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id AND T1.hair_colour_id = T2.id WHERE T2.colour = 'Black';"}, {"question_id": 783, "answer_sql": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.skin_colour_id = ( SELECT id FROM colour WHERE colour = 'Gold' );"}, {"question_id": 784, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Vampire'"}, {"question_id": 785, "answer_sql": "SELECT superhero_name FROM superhero WHERE superhero_name IS NOT NULL AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral');"}, {"question_id": 786, "answer_sql": "SELECT COUNT(*) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute );"}, {"question_id": 787, "answer_sql": "SELECT T2.race, T3.alignment FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T1.superhero_name = 'Cameron Hicks';"}, {"question_id": 788, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics';"}, {"question_id": 789, "answer_sql": "SELECT AVG(weight_kg) FROM superhero WHERE race_id IN ( SELECT id FROM race WHERE race = 'Alien' );"}, {"question_id": 790, "answer_sql": "SELECT ( SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler' );"}, {"question_id": 791, "answer_sql": "SELECT AVG(height_cm) FROM superhero;"}, {"question_id": 792, "answer_sql": "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T2.superhero_name = 'Abomination';"}, {"question_id": 793, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.race = 'god/eternal' AND T3.gender = 'male';"}, {"question_id": 794, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' ORDER BY T2.attribute_value DESC LIMIT 1;"}, {"question_id": 795, "answer_sql": "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Neutral');"}, {"question_id": 796, "answer_sql": "SELECT T1.attribute_name, T2.attribute_value FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = '3-D Man';"}, {"question_id": 797, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown';"}, {"question_id": 798, "answer_sql": "SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy');"}, {"question_id": 799, "answer_sql": "SELECT COUNT(*) FROM superhero WHERE publisher_id = 1;"}, {"question_id": 800, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id;"}, {"question_id": 801, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.gender = 'Male' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.gender = 'Female' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id;"}, {"question_id": 802, "answer_sql": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;"}, {"question_id": 803, "answer_sql": "SELECT id FROM superpower WHERE power_name = 'Cryokinesis';"}, {"question_id": 804, "answer_sql": "SELECT superhero_name FROM superhero WHERE id = 294;"}, {"question_id": 805, "answer_sql": "SELECT full_name FROM superhero WHERE full_name IS NOT NULL AND (weight_kg IS NULL OR weight_kg = 0);"}, {"question_id": 806, "answer_sql": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.full_name = 'Karen Beecher-Duncan';"}, {"question_id": 807, "answer_sql": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.full_name = 'Helen Parr'"}, {"question_id": 808, "answer_sql": "SELECT T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 108 AND T1.height_cm = 188;"}, {"question_id": 809, "answer_sql": "SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38;"}, {"question_id": 810, "answer_sql": "SELECT T4.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN race AS T4 ON T1.race_id = T4.id WHERE T2.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute ) GROUP BY T4.race;"}, {"question_id": 811, "answer_sql": "SELECT T4.alignment, T5.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T5 ON T2.power_id = T5.id INNER JOIN alignment AS T4 ON T1.alignment_id = T4.id WHERE T1.superhero_name = 'Atom IV';"}, {"question_id": 812, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5;"}, {"question_id": 813, "answer_sql": "SELECT AVG(attribute_value) FROM hero_attribute WHERE hero_id IN ( SELECT id FROM superhero WHERE alignment_id = 3 );"}, {"question_id": 814, "answer_sql": "SELECT T3.colour FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T3.id = T1.skin_colour_id WHERE T2.attribute_value = 100;"}, {"question_id": 815, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.alignment = 'Good' AND T3.gender = 'Female';"}, {"question_id": 816, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T2.attribute_value BETWEEN 75 AND 80;"}, {"question_id": 817, "answer_sql": ""}, {"question_id": 818, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T3.gender = 'female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad'"}, {"question_id": 819, "answer_sql": "SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL"}, {"question_id": 820, "answer_sql": "SELECT T2.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Hulk' AND T3.attribute_name = 'Strength';"}, {"question_id": 821, "answer_sql": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax';"}, {"question_id": 822, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.alignment = 'Bad' AND T3.colour = 'Green';"}, {"question_id": 823, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T3.id = T1.publisher_id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics';"}, {"question_id": 824, "answer_sql": "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Wind Control' ORDER BY T1.superhero_name"}, {"question_id": 825, "answer_sql": "SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id INNER JOIN gender AS T4 ON T4.id = T1.gender_id WHERE T3.power_name = 'Phoenix Force';"}, {"question_id": 826, "answer_sql": "SELECT superhero_name FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') ORDER BY weight_kg DESC LIMIT 1;"}, {"question_id": 827, "answer_sql": "SELECT AVG(height_cm) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics' ) AND race_id != ( SELECT id FROM race WHERE race = 'Human' );"}, {"question_id": 828, "answer_sql": "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T2.attribute_value = 100 AND T3.attribute_name = 'Speed';"}, {"question_id": 829, "answer_sql": "SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics') AS DIFFERENCE;"}, {"question_id": 830, "answer_sql": "SELECT T1.attribute_name, T2.attribute_value FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.attribute_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id WHERE T3.superhero_name = 'Black Panther' ORDER BY T2.attribute_value ASC LIMIT 1;"}, {"question_id": 831, "answer_sql": "SELECT T1.colour FROM colour AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.eye_colour_id WHERE T2.superhero_name = 'Abomination';"}, {"question_id": 832, "answer_sql": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1;"}, {"question_id": 833, "answer_sql": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler';"}, {"question_id": 834, "answer_sql": ""}, {"question_id": 835, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.alignment = 'Good' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM alignment AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.alignment_id INNER JOIN publisher AS T3 ON T3.id = T2.publisher_id WHERE T3.publisher_name = 'Marvel Comics';"}, {"question_id": 836, "answer_sql": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'"}, {"question_id": 837, "answer_sql": "SELECT T1.hero_id FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T1.attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute );"}, {"question_id": 838, "answer_sql": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';"}, {"question_id": 839, "answer_sql": "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Brown' AND T1.weight_kg < 100;"}, {"question_id": 840, "answer_sql": "SELECT T1.attribute_value FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.superhero_name = 'Aquababy';"}, {"question_id": 841, "answer_sql": "SELECT T1.weight_kg, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.id = 40;"}, {"question_id": 842, "answer_sql": "SELECT AVG(height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral';"}, {"question_id": 843, "answer_sql": "SELECT T1.id FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Intelligence';"}, {"question_id": 844, "answer_sql": "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf';"}, {"question_id": 845, "answer_sql": "SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T3.id = T2.power_id WHERE T1.height_cm > 0.8 * ( SELECT AVG(height_cm) FROM superhero );"}, {"question_id": 846, "answer_sql": "SELECT T1.driverRef FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 18 AND T2.q1 = ( SELECT MAX(q1) FROM qualifying WHERE raceId = 18 );"}, {"question_id": 847, "answer_sql": ""}, {"question_id": 848, "answer_sql": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.location = 'Shanghai';"}, {"question_id": 849, "answer_sql": "SELECT url FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya';"}, {"question_id": 850, "answer_sql": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Germany';"}, {"question_id": 851, "answer_sql": "SELECT T1.position FROM constructorStandings AS T1 INNER JOIN constructors AS T2 on T1.constructorId = T2.constructorId WHERE T2.name = 'Renault'"}, {"question_id": 852, "answer_sql": "SELECT COUNT(*) FROM races WHERE year = 2010 AND circuitId NOT IN ( SELECT circuitId FROM circuits WHERE country IN ('Asia', 'Europe') );"}, {"question_id": 853, "answer_sql": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Spain';"}, {"question_id": 854, "answer_sql": ""}, {"question_id": 855, "answer_sql": "SELECT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Sepang International Circuit';"}, {"question_id": 856, "answer_sql": "SELECT T1.time FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitID = T2.circuitId WHERE T2.name = 'Sepang International Circuit';"}, {"question_id": 857, "answer_sql": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Abu Dhabi Grand Prix';"}, {"question_id": 858, "answer_sql": "SELECT T4.country FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.points = 1 AND T3.raceId = 24"}, {"question_id": 859, "answer_sql": "SELECT q1 FROM qualifying WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna' ) AND raceId = 354"}, {"question_id": 860, "answer_sql": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 355 AND T1.q2 LIKE '1:40%'"}, {"question_id": 861, "answer_sql": "SELECT T1.number FROM qualifying AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId WHERE T1.raceId = 903 AND T1.q3 LIKE '1:54%'"}, {"question_id": 862, "answer_sql": "SELECT COUNT(driverId) FROM results WHERE raceId = (SELECT raceId FROM races WHERE name = 'Bahrain Grand Prix' AND year = 2007) AND time = '';"}, {"question_id": 863, "answer_sql": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901"}, {"question_id": 864, "answer_sql": "SELECT COUNT(driverId) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE date = '2015-11-29' ) AND time IS NOT NULL;"}, {"question_id": 865, "answer_sql": "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 592 ORDER BY T1.dob ASC LIMIT 1;"}, {"question_id": 866, "answer_sql": ""}, {"question_id": 867, "answer_sql": "SELECT T2.nationality FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T1.raceId = 933 AND T1.fastestLapSpeed IS NOT NULL ORDER BY T1.fastestLapSpeed DESC LIMIT 1;"}, {"question_id": 868, "answer_sql": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Malaysian Grand Prix';"}, {"question_id": 869, "answer_sql": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 9 ORDER BY T2.points DESC LIMIT 1"}, {"question_id": 870, "answer_sql": "SELECT T1.q1 FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lucas' AND T2.surname = 'di Grassi' AND T1.raceId = 345;"}, {"question_id": 871, "answer_sql": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 347 AND T1.q2 LIKE '1:15%'"}, {"question_id": 872, "answer_sql": "SELECT SUBSTR(T1.code, 1, 1) FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 45 AND T2.q3 LIKE '1:33%'"}, {"question_id": 873, "answer_sql": "SELECT T2.time FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 743 AND T1.forename = 'Bruce' AND T1.surname = 'McLaren'"}, {"question_id": 874, "answer_sql": "SELECT T1.driverId FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'San Marino Grand Prix' AND T2.year = 2006 AND T1.position = 2;"}, {"question_id": 875, "answer_sql": "SELECT T1.url FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year WHERE T2.raceId = 901"}, {"question_id": 876, "answer_sql": "SELECT COUNT(driverId) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE date = '2015-11-29' ) AND time IS NOT NULL;"}, {"question_id": 877, "answer_sql": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T1.raceId = 872 AND T1.time IS NOT NULL ORDER BY T2.dob DESC LIMIT 1;"}, {"question_id": 878, "answer_sql": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 348 ORDER BY T2.time ASC LIMIT 1;"}, {"question_id": 879, "answer_sql": "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapSpeed IS NOT NULL AND T2.raceId = 348 ORDER BY T2.fastestLapSpeed DESC LIMIT 1;"}, {"question_id": 880, "answer_sql": "SELECT CAST((SUM(CASE WHEN T2.raceId = 853 THEN T2.fastestLapSpeed ELSE 0 END) - SUM(CASE WHEN T2.raceId = 854 THEN T2.fastestLapSpeed ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.raceId = 854 THEN T2.fastestLapSpeed ELSE 0 END) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta';"}, {"question_id": 881, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 1983 AND T2.date = '1983-07-16';"}, {"question_id": 882, "answer_sql": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1;"}, {"question_id": 883, "answer_sql": "SELECT count(raceId) FROM races WHERE year = 2005 ORDER BY name DESC"}, {"question_id": 884, "answer_sql": "SELECT name FROM races WHERE date LIKE '20%' AND name <> ( SELECT name FROM races WHERE date LIKE '20%' ORDER BY date LIMIT 1 );"}, {"question_id": 885, "answer_sql": "SELECT name, date FROM races WHERE year = 1999 AND round = ( SELECT MAX(round) FROM races WHERE year = 1999 );"}, {"question_id": 886, "answer_sql": "SELECT T1.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year GROUP BY T1.year ORDER BY COUNT(T1.raceId) DESC LIMIT 1;"}, {"question_id": 887, "answer_sql": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 );"}, {"question_id": 888, "answer_sql": "SELECT T1.country, T1.name, T1.location FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = ( SELECT MIN(year) FROM races );"}, {"question_id": 889, "answer_sql": "SELECT MAX(year) FROM races WHERE name = 'British Grand Prix' AND circuitId IN (SELECT circuitId FROM circuits WHERE name = 'Brands Hatch');"}, {"question_id": 890, "answer_sql": "SELECT COUNT(DISTINCT T2.year) FROM races AS T1 INNER JOIN seasons AS T2 ON T2.year = T1.year INNER JOIN circuits AS T3 ON T3.circuitId = T1.circuitId WHERE T3.name = 'Silverstone Circuit' AND T1.name = 'United Kindom Grand Prix';"}, {"question_id": 891, "answer_sql": "SELECT T3.forename, T3.surname, T2.position FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Singapore Grand Prix' AND T1.year = 2010 ORDER BY T2.position;"}, {"question_id": 892, "answer_sql": "SELECT T1.forename, T1.surname, MAX(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.points = ( SELECT MAX(points) FROM driverStandings );"}, {"question_id": 893, "answer_sql": "SELECT T2.forename, T2.surname, T1.points FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T3.name = 'Chinese Grand Prix' ORDER BY T1.points DESC LIMIT 3;"}, {"question_id": 894, "answer_sql": "SELECT T1.driverId, T1.raceId, T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time = ( SELECT MIN(time) FROM lapTimes )"}, {"question_id": 895, "answer_sql": "SELECT AVG(time) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Sebastian' AND surname = 'Vettel') AND raceId = (SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2009);"}, {"question_id": 896, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.position <> 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId INNER JOIN seasons AS T5 ON T3.year = T5.year WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T5.year >= 2010;"}, {"question_id": 897, "answer_sql": "SELECT T1.forename, T1.surname, T1.nationality, AVG(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.wins = ( SELECT MAX(wins) FROM driverStandings ) GROUP BY T1.driverId;"}, {"question_id": 898, "answer_sql": "SELECT forename, surname, 2022 - strftime('%Y', dob) + 1 AS age FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1;"}, {"question_id": 899, "answer_sql": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.name HAVING COUNT(T2.raceId) = 4;"}, {"question_id": 900, "answer_sql": "SELECT DISTINCT T1.name, T1.location, T2.name FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.country = 'USA' AND T2.year = 2006;"}, {"question_id": 901, "answer_sql": "SELECT races.name, circuits.name, circuits.location FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2005 AND races.date LIKE '2005-09%'"}, {"question_id": 902, "answer_sql": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T2.position < 10 AND T3.forename = 'Alex' AND T3.surname = 'Yoong';"}, {"question_id": 903, "answer_sql": "SELECT COUNT(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit' AND T2.points = ( SELECT MAX(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T1.forename = 'Michael' AND T1.surname = 'Schumacher' AND T4.name = 'Sepang International Circuit' );"}, {"question_id": 904, "answer_sql": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Michael' AND T3.surname = 'Schumacher' ORDER BY T2.milliseconds LIMIT 1;"}, {"question_id": 905, "answer_sql": "SELECT AVG(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T3.year = 2000"}, {"question_id": 906, "answer_sql": "SELECT T1.name, T2.points FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T1.year ASC LIMIT 1;"}, {"question_id": 907, "answer_sql": "SELECT T2.name, T1.country FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T2.year = 2017 ORDER BY T2.date ASC;"}, {"question_id": 908, "answer_sql": "SELECT T1.name, T1.year, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitID = T2.circuitId INNER JOIN lapTimes AS T3 ON T3.raceId = T1.raceId GROUP BY T1.name, T1.year, T2.location ORDER BY COUNT(T3.lap) DESC LIMIT 1;"}, {"question_id": 909, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.country = 'Germany' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.country) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitID = T2.circuitId WHERE T1.name = 'European Grand Prix';"}, {"question_id": 910, "answer_sql": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit';"}, {"question_id": 911, "answer_sql": "SELECT name, lat FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ORDER BY lat DESC LIMIT 1;"}, {"question_id": 912, "answer_sql": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit';"}, {"question_id": 913, "answer_sql": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1;"}, {"question_id": 914, "answer_sql": "SELECT COUNT(driverId) FROM drivers WHERE code IS NULL;"}, {"question_id": 915, "answer_sql": "SELECT nationality FROM drivers ORDER BY dob LIMIT 1;"}, {"question_id": 916, "answer_sql": "SELECT surname FROM drivers WHERE nationality = 'Italian';"}, {"question_id": 917, "answer_sql": "SELECT url FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson';"}, {"question_id": 918, "answer_sql": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton';"}, {"question_id": 919, "answer_sql": "SELECT T1.name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009;"}, {"question_id": 920, "answer_sql": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitID = T2.circuitId WHERE T2.name = 'Silverstone Circuit';"}, {"question_id": 921, "answer_sql": "SELECT DISTINCT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T2.circuitID = T1.circuitId WHERE T1.name = 'Silverstone Circuit';"}, {"question_id": 922, "answer_sql": "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.year = 2010 AND T2.circuitId = 15;"}, {"question_id": 923, "answer_sql": "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitID = T2.circuitId WHERE T2.country = 'Italy';"}, {"question_id": 924, "answer_sql": "SELECT T1.date FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitID = T2.circuitId WHERE T2.name = 'Circuit de Barcelona-Catalunya';"}, {"question_id": 925, "answer_sql": "SELECT T1.url FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year = 2009 AND T2.name = 'Spanish Grand Prix';"}, {"question_id": 926, "answer_sql": "SELECT MIN(fastestLapTime) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');"}, {"question_id": 927, "answer_sql": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapSpeed LIMIT 1;"}, {"question_id": 928, "answer_sql": "SELECT T2.driverRef FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T1.rank = 1 AND T3.name = 'Australian Grand Prix' AND T3.year = 2008;"}, {"question_id": 929, "answer_sql": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton';"}, {"question_id": 930, "answer_sql": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' ORDER BY T2.rank ASC LIMIT 1;"}, {"question_id": 931, "answer_sql": "SELECT T1.fastestLapSpeed FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009 ORDER BY T1.fastestLapSpeed DESC LIMIT 1;"}, {"question_id": 932, "answer_sql": "SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton';"}, {"question_id": 933, "answer_sql": "SELECT positionOrder FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 );"}, {"question_id": 934, "answer_sql": "SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T1.grid = 4 AND T3.name = 'Australian Grand Prix' AND T3.year = 2008;"}, {"question_id": 935, "answer_sql": "SELECT COUNT(*) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 ) AND time IS NOT NULL;"}, {"question_id": 936, "answer_sql": "SELECT MIN(milliseconds) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008);"}, {"question_id": 937, "answer_sql": "SELECT T2.time FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.rank = 2 AND T2.year = 2008"}, {"question_id": 938, "answer_sql": "SELECT T1.forename, T1.surname, T3.url FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2008 AND T2.position = 1;"}, {"question_id": 939, "answer_sql": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T3.nationality = 'American';"}, {"question_id": 940, "answer_sql": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.time IS NOT NULL;"}, {"question_id": 941, "answer_sql": "SELECT SUM(points) FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton');"}, {"question_id": 942, "answer_sql": "SELECT AVG(fastestLapTime) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';"}, {"question_id": 943, "answer_sql": "SELECT CAST(COUNT(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE NULL END) AS REAL) / COUNT(T1.raceId) FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008"}, {"question_id": 944, "answer_sql": "SELECT CAST((SUM(IIF(T1.time IS NOT NULL, T1.time, 0)) - SUM(IIF(T3.time IS NOT NULL, T3.time, 0))) AS REAL) * 100 / SUM(IIF(T3.time IS NOT NULL, T3.time, 0)) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN results AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2008 AND T1.points = 1 AND T3.points = 0;"}, {"question_id": 945, "answer_sql": "SELECT COUNT(circuitId) FROM circuits WHERE location = 'Melbourne' AND country = 'Australia';"}, {"question_id": 946, "answer_sql": "SELECT lat, lng FROM circuits WHERE country = 'USA';"}, {"question_id": 947, "answer_sql": "SELECT COUNT(*) FROM drivers WHERE nationality = 'British' AND dob > '1980-01-01';"}, {"question_id": 948, "answer_sql": "SELECT AVG(points) FROM constructorStandings cs JOIN constructors c ON cs.constructorId = c.constructorId WHERE c.nationality = 'British';"}, {"question_id": 949, "answer_sql": "SELECT name FROM constructors WHERE constructorId = ( SELECT constructorId FROM constructorStandings ORDER BY points DESC LIMIT 1 );"}, {"question_id": 950, "answer_sql": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.points = 0 AND T2.raceId = 291"}, {"question_id": 951, "answer_sql": "SELECT COUNT(T1.constructorId) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 on T1.constructorId = T2.constructorId WHERE T2.nationality = 'Japanese' AND T1.points = 0 GROUP BY T2.constructorId HAVING COUNT(T1.raceId) = 2;"}, {"question_id": 952, "answer_sql": "SELECT T1.name FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T2.position = 1;"}, {"question_id": 953, "answer_sql": "SELECT COUNT(*) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'French' AND T2.laps > 50;"}, {"question_id": 954, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T3.year BETWEEN 2007 AND 2009 AND T2.nationality = 'Japanese';"}, {"question_id": 955, "answer_sql": "SELECT T2.year, SUM(SUBSTR(T1.time, 1, INSTR(T1.time, ':') - 1) * 60 + SUBSTR(T1.time, INSTR(T1.time, ':') + 1, INSTR(T1.time, '.') - INSTR(T1.time, ':') - 1) + SUBSTR(T1.time, INSTR(T1.time, '.') + 1) / 1000) AS avg_time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL GROUP BY T2.year;"}, {"question_id": 956, "answer_sql": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.dob) > '1975' AND T2.position = 2;"}, {"question_id": 957, "answer_sql": "SELECT COUNT(*) FROM drivers WHERE nationality = 'Italian' AND driverId NOT IN ( SELECT driverId FROM results WHERE time IS NOT NULL );"}, {"question_id": 958, "answer_sql": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.milliseconds ASC LIMIT 1;"}, {"question_id": 959, "answer_sql": "SELECT T2.fastestlap FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.year = 2009 ORDER BY T2.fastestLapTime DESC LIMIT 1;"}, {"question_id": 960, "answer_sql": "SELECT AVG(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009;"}, {"question_id": 961, "answer_sql": "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.milliseconds IS NOT NULL ORDER BY T2.milliseconds LIMIT 1;"}, {"question_id": 962, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.laps > 50 AND STRFTIME('%Y', T2.dob) < '1985' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year BETWEEN 2000 AND 2005;"}, {"question_id": 963, "answer_sql": "SELECT COUNT(*) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'French' AND T1.time < 120;"}, {"question_id": 964, "answer_sql": "SELECT code FROM drivers WHERE nationality = 'American';"}, {"question_id": 965, "answer_sql": "SELECT raceId FROM races WHERE year = 2009;"}, {"question_id": 966, "answer_sql": "SELECT COUNT(driverId) FROM results WHERE raceId = 18;"}, {"question_id": 967, "answer_sql": "SELECT SUM(CASE WHEN nationality = 'Netherland' THEN 1 ELSE 0 END) FROM drivers ORDER BY dob DESC LIMIT 3;"}, {"question_id": 968, "answer_sql": "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica';"}, {"question_id": 969, "answer_sql": "SELECT COUNT(drivers.driverId) FROM drivers WHERE STRFTIME('%Y', drivers.dob) = '1980' AND drivers.nationality = 'Australia';"}, {"question_id": 970, "answer_sql": "SELECT T1.forename, T1.surname, T2.lap, T2.time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1980' AND '1990' ORDER BY T2.time ASC LIMIT 3;"}, {"question_id": 971, "answer_sql": "SELECT driverRef FROM drivers WHERE nationality = 'German' ORDER BY JULIANDAY(dob) ASC LIMIT 1;"}, {"question_id": 972, "answer_sql": "SELECT T1.driverId, T1.code FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE STRFTIME('%Y', T1.dob) = '1971' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1;"}, {"question_id": 973, "answer_sql": "SELECT T1.forename, T1.surname, T2.lap, T2.time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND STRFTIME('%Y', T1.dob) < '1982' ORDER BY T2.time DESC LIMIT 10;"}, {"question_id": 974, "answer_sql": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime LIMIT 1;"}, {"question_id": 975, "answer_sql": "SELECT T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T2.time = ( SELECT MAX(time) FROM lapTimes )"}, {"question_id": 976, "answer_sql": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time DESC LIMIT 5;"}, {"question_id": 977, "answer_sql": "SELECT COUNT(*) FROM results JOIN races ON results.raceId = races.raceId JOIN status ON results.statusId = status.statusId WHERE races.raceId BETWEEN 50 AND 100 AND status.statusId = 2 AND results.time IS NOT NULL;"}, {"question_id": 978, "answer_sql": "SELECT DISTINCT T1.location, T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T1.country = 'Austria';"}, {"question_id": 979, "answer_sql": "SELECT raceId, COUNT(*) FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 980, "answer_sql": "SELECT T1.driverRef, T1.nationality, T1.dob FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 23 AND T2.q2 IS NOT NULL;"}, {"question_id": 981, "answer_sql": "SELECT T1.year, T1.name, T1.date, T1.time FROM races AS T1 INNER JOIN qualifying AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId ORDER BY T3.dob ASC LIMIT 1;"}, {"question_id": 982, "answer_sql": "SELECT COUNT(*) FROM results WHERE statusId = 2 AND driverId IN ( SELECT driverId FROM drivers WHERE nationality = 'American' );"}, {"question_id": 983, "answer_sql": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' ORDER BY T2.points DESC LIMIT 1;"}, {"question_id": 984, "answer_sql": "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId ORDER BY T2.wins DESC LIMIT 1;"}, {"question_id": 985, "answer_sql": "SELECT T1.forename, T1.surname, T2.time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'French Grand Prix' AND T2.lap = 3 ORDER BY T2.time ASC LIMIT 1;"}, {"question_id": 986, "answer_sql": "SELECT raceId, time, milliseconds FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 1;"}, {"question_id": 987, "answer_sql": "SELECT AVG(fastestLapTime) FROM ( SELECT T1.fastestLapTime FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.name = '2006 United States Grand Prix' AND T1.rank < 11 ORDER BY T1.fastestLapTime DESC LIMIT 10 );"}, {"question_id": 988, "answer_sql": "SELECT T1.forename, T1.surname, AVG(T2.duration) FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND STRFTIME('%Y', T1.dob) BETWEEN '1980' AND '1985' GROUP BY T1.forename, T1.surname ORDER BY AVG(T2.duration) ASC LIMIT 5;"}, {"question_id": 989, "answer_sql": "SELECT T2.time, T1.forename, T1.surname FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Canadian Grand Prix' AND T3.year = 2008 AND T2.time LIKE '_:%:__.___' ORDER BY T2.time ASC;"}, {"question_id": 990, "answer_sql": "SELECT T1.constructorRef, T1.url FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.name = 'Singapore Grand Prix' AND T3.year = 2009 AND T2.position = 1;"}, {"question_id": 991, "answer_sql": "SELECT forename, surname, dob FROM drivers WHERE nationality = 'Austrian' AND dob BETWEEN '1981-01-01' AND '1991-12-31';"}, {"question_id": 992, "answer_sql": "SELECT forename, surname, url, dob FROM drivers WHERE nationality = 'German' AND STRFTIME('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC;"}, {"question_id": 993, "answer_sql": "SELECT location, country, lat, lng FROM circuits WHERE name = 'Hungaroring';"}, {"question_id": 994, "answer_sql": "SELECT T2.points, T1.name, T1.nationality FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceId = T2.raceId WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T2.points DESC LIMIT 1;"}, {"question_id": 995, "answer_sql": "SELECT AVG(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Turkish Grand Prix';"}, {"question_id": 996, "answer_sql": "SELECT AVG(raceCount) FROM ( SELECT COUNT(raceId) AS raceCount FROM races WHERE date BETWEEN '2000-01-01' AND '2010-12-31' GROUP BY year ) AS subquery"}, {"question_id": 997, "answer_sql": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY COUNT(driverId) DESC LIMIT 1;"}, {"question_id": 998, "answer_sql": "SELECT COUNT(*) FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE rank = 91;"}, {"question_id": 999, "answer_sql": "SELECT T1.name FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1;"}, {"question_id": 1000, "answer_sql": "SELECT T2.location, T2.country FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitID = T2.circuitId WHERE T1.date = ( SELECT MAX(date) FROM races );"}, {"question_id": 1001, "answer_sql": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.q3 = ( SELECT MIN(q3) FROM qualifying WHERE raceId = T2.raceId ) AND T3.year = 2008 AND T4.name = 'Marina Bay Street Circuit';"}, {"question_id": 1002, "answer_sql": "SELECT T2.forename, T2.surname, T3.nationality, T4.name FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId INNER JOIN races AS T4 on T1.raceId = T4.raceId WHERE T2.dob IS NOT NULL ORDER BY T2.dob DESC LIMIT 1;"}, {"question_id": 1003, "answer_sql": "SELECT COUNT(T2.statusId) FROM results AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T2.status = 'Accident' AND T1.driverId = ( SELECT T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' GROUP BY T1.driverId ORDER BY COUNT(T1.driverId) DESC LIMIT 1 );"}, {"question_id": 1004, "answer_sql": "SELECT T1.forename, T1.surname, SUM(T2.wins) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId ORDER BY T1.dob ASC LIMIT 1;"}, {"question_id": 1005, "answer_sql": "SELECT MAX(duration) FROM pitStops WHERE duration IS NOT NULL"}, {"question_id": 1006, "answer_sql": "SELECT T1.time FROM lapTimes AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T1.time IS NOT NULL ORDER BY T1.time ASC LIMIT 1;"}, {"question_id": 1007, "answer_sql": "SELECT MAX(duration) FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton';"}, {"question_id": 1008, "answer_sql": "SELECT T2.lap FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T3.name = 'Australian Grand Prix' AND T3.year = 2011;"}, {"question_id": 1009, "answer_sql": "SELECT T2.time FROM results AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2011"}, {"question_id": 1010, "answer_sql": "SELECT T2.lap, T2.time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'"}, {"question_id": 1011, "answer_sql": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId ORDER BY T2.time LIMIT 1;"}, {"question_id": 1012, "answer_sql": "SELECT T1.position FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.fastestLapTime IS NOT NULL ORDER BY T3.time ASC LIMIT 1;"}, {"question_id": 1013, "answer_sql": "SELECT T1.lap, T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T2.name = 'Austrian Grand Prix' ORDER BY T1.time ASC LIMIT 1;"}, {"question_id": 1014, "answer_sql": "SELECT T1.lap, T1.time FROM lapTimes AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy'"}, {"question_id": 1015, "answer_sql": "SELECT T1.name FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Austrian Grand Prix' ORDER BY T2.time ASC LIMIT 1;"}, {"question_id": 1016, "answer_sql": "SELECT T2.duration FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T3.raceId = T2.raceId WHERE T3.name = 'Austrian Grand Prix' AND T1.forename = 'Fernando' AND T1.surname = 'Alonso';"}, {"question_id": 1017, "answer_sql": "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.circuitId = T2.raceId WHERE T2.time = '1:29.488';"}, {"question_id": 1018, "answer_sql": "SELECT AVG(milliseconds) FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton';"}, {"question_id": 1019, "answer_sql": "SELECT AVG(milliseconds) FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN drivers ON lapTimes.driverId = drivers.driverId JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Italy';"}, {"question_id": 1020, "answer_sql": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1"}, {"question_id": 1021, "answer_sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.height DESC LIMIT 1;"}, {"question_id": 1022, "answer_sql": "SELECT preferred_foot FROM Player_Attributes WHERE potential = (SELECT MIN(potential) FROM Player_Attributes)"}, {"question_id": 1023, "answer_sql": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low';"}, {"question_id": 1024, "answer_sql": "SELECT player_api_id FROM Player_Attributes WHERE crossing = ( SELECT MAX(crossing) FROM Player_Attributes ) LIMIT 5;"}, {"question_id": 1025, "answer_sql": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.id ORDER BY SUM(T2.home_team_goal + T2.away_team_goal) DESC LIMIT 1;"}, {"question_id": 1026, "answer_sql": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_team_api_id WHERE T2.season = '2015/2016' AND T2.home_team_goal - T2.away_team_goal < 0 GROUP BY T1.team_long_name ORDER BY COUNT(T1.team_long_name) ASC LIMIT 1;"}, {"question_id": 1027, "answer_sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.penalties DESC LIMIT 10;"}, {"question_id": 1028, "answer_sql": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.season = '2009/2010' AND T1.away_team_goal - T1.home_team_goal > 0 GROUP BY T2.team_long_name ORDER BY COUNT(T2.team_long_name) DESC LIMIT 1;"}, {"question_id": 1029, "answer_sql": "SELECT buildUpPlaySpeed FROM Team_Attributes ORDER BY buildUpPlaySpeed DESC LIMIT 4"}, {"question_id": 1030, "answer_sql": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2015/2016' GROUP BY T1.name ORDER BY SUM(T2.home_team_goal = T2.away_team_goal) DESC LIMIT 1;"}, {"question_id": 1031, "answer_sql": "SELECT DISTINCT T1.player_name, T1.birthday FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND T2.date BETWEEN '2013-01-01 00:00:00' AND '2015-12-31 00:00:00';"}, {"question_id": 1032, "answer_sql": "SELECT T1.name, T2.count FROM League AS T1 INNER JOIN ( SELECT league_id, COUNT(id) AS count FROM Match GROUP BY league_id ) AS T2 ON T1.id = T2.league_id ORDER BY T2.count DESC LIMIT 1;"}, {"question_id": 1033, "answer_sql": "SELECT AVG(height) FROM Player WHERE birthday BETWEEN '1990-01-01 00:00:00' AND '1995-12-31 23:59:59';"}, {"question_id": 1034, "answer_sql": "SELECT DISTINCT player_api_id FROM Player_Attributes WHERE overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes WHERE SUBSTR(`date`, 1, 4) = '2010' ) ORDER BY overall_rating DESC;"}, {"question_id": 1035, "answer_sql": "SELECT DISTINCT team_fifa_api_id FROM Team_Attributes WHERE buildUpPlaySpeed BETWEEN 51 AND 59;"}, {"question_id": 1036, "answer_sql": "SELECT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes ) AND strftime('%Y', T2.date) = '2012'"}, {"question_id": 1037, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00';"}, {"question_id": 1038, "answer_sql": "SELECT name FROM League ORDER BY (SELECT SUM(home_team_goal + away_team_goal) FROM `Match` GROUP BY league_id) ASC LIMIT 5;"}, {"question_id": 1039, "answer_sql": "SELECT AVG(long_shots) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ahmed Samir Farag';"}, {"question_id": 1040, "answer_sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY AVG(T2.heading_accuracy) DESC LIMIT 10;"}, {"question_id": 1041, "answer_sql": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date >= '2014-01-01' AND T2.date <= '2014-12-31' AND T2.chanceCreationPassing < ( SELECT AVG(chanceCreationPassing) FROM Team_Attributes WHERE date >= '2014-01-01' AND date <= '2014-12-31' ) ORDER BY T2.chanceCreationPassing DESC;"}, {"question_id": 1042, "answer_sql": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2009/2010' AND T2.home_team_goal > T2.away_team_goal"}, {"question_id": 1043, "answer_sql": "SELECT team_short_name FROM Team WHERE team_long_name = 'Queens Park Rangers';"}, {"question_id": 1044, "answer_sql": "SELECT DISTINCT player_name FROM Player WHERE SUBSTR(birthday, 1, 4) = '1970' AND SUBSTR(birthday, 6, 2) = '10';"}, {"question_id": 1045, "answer_sql": "SELECT T2.attacking_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Franco Zennaro';"}, {"question_id": 1046, "answer_sql": "SELECT T2.buildUpPlayPositioningClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'ADO Den Haag' AND T2.buildUpPlayPositioningClass IS NOT NULL;"}, {"question_id": 1047, "answer_sql": ""}, {"question_id": 1048, "answer_sql": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas') AND `date` LIKE '2011%';"}, {"question_id": 1049, "answer_sql": "SELECT COUNT(*) FROM `Match` AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Scotland Premier League' AND T1.season = '2015/2016';"}, {"question_id": 1050, "answer_sql": "SELECT preferred_foot FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player ORDER BY birthday DESC LIMIT 1) ORDER BY date DESC LIMIT 1;"}, {"question_id": 1051, "answer_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.potential DESC LIMIT 1;"}, {"question_id": 1052, "answer_sql": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight < 130 AND T2.preferred_foot = 'left'"}, {"question_id": 1053, "answer_sql": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Risky';"}, {"question_id": 1054, "answer_sql": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'David Wilson';"}, {"question_id": 1055, "answer_sql": "SELECT T1.birthday FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes )"}, {"question_id": 1056, "answer_sql": "SELECT T2.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Netherlands';"}, {"question_id": 1057, "answer_sql": "SELECT AVG(home_team_goal) FROM `Match` WHERE country_id IN (SELECT id FROM Country WHERE name = 'Poland') AND season = '2010/2011';"}, {"question_id": 1058, "answer_sql": "SELECT AVG(finishing) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player ORDER BY height DESC LIMIT 1) OR player_api_id = (SELECT player_api_id FROM Player ORDER BY height ASC LIMIT 1) ORDER BY AVG(finishing) DESC LIMIT 1;"}, {"question_id": 1059, "answer_sql": "SELECT player_name FROM Player WHERE height > 180;"}, {"question_id": 1060, "answer_sql": "SELECT COUNT(*) FROM Player WHERE SUBSTR(birthday, 1, 4) > '1990';"}, {"question_id": 1061, "answer_sql": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name LIKE 'Adam%' AND T1.weight > 170;"}, {"question_id": 1062, "answer_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > 80 AND strftime('%Y', T2.`date`) BETWEEN '2008' AND '2010';"}, {"question_id": 1063, "answer_sql": "SELECT `potential` FROM `Player_Attributes` WHERE `player_api_id` = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran');"}, {"question_id": 1064, "answer_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'left';"}, {"question_id": 1065, "answer_sql": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Fast';"}, {"question_id": 1066, "answer_sql": "SELECT T1.buildUpPlayPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_short_name = 'CLB'"}, {"question_id": 1067, "answer_sql": "SELECT DISTINCT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayPassing > 70;"}, {"question_id": 1068, "answer_sql": "SELECT AVG(overall_rating) FROM Player_Attributes WHERE date BETWEEN '2010-01-01' AND '2015-12-31' AND player_api_id IN ( SELECT player_api_id FROM Player WHERE height > 170 );"}, {"question_id": 1069, "answer_sql": "SELECT player_name FROM Player ORDER BY height ASC LIMIT 1;"}, {"question_id": 1070, "answer_sql": "SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A';"}, {"question_id": 1071, "answer_sql": "SELECT T2.team_short_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32;"}, {"question_id": 1072, "answer_sql": "SELECT AVG(overall_rating) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Aaron Doran';"}, {"question_id": 1073, "answer_sql": "SELECT COUNT(*) FROM `Match` WHERE league_id = (SELECT id FROM League WHERE name = 'Germany 1. Bundesliga') AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';"}, {"question_id": 1074, "answer_sql": "SELECT DISTINCT T2.team_short_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10;"}, {"question_id": 1075, "answer_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = 61 ORDER BY T2.balance DESC LIMIT 1;"}, {"question_id": 1076, "answer_sql": "SELECT ( SELECT AVG(ball_control) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo' ) - ( SELECT AVG(ball_control) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Appindangoye' ) AS DIFFERENCE"}, {"question_id": 1077, "answer_sql": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';"}, {"question_id": 1078, "answer_sql": "SELECT player_name, birthday FROM Player WHERE player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY birthday ASC LIMIT 1;"}, {"question_id": 1079, "answer_sql": "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 1;"}, {"question_id": 1080, "answer_sql": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low';"}, {"question_id": 1081, "answer_sql": "SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Belgium Jupiler League';"}, {"question_id": 1082, "answer_sql": "SELECT T1.name FROM League AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Germany';"}, {"question_id": 1083, "answer_sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes ) ORDER BY T2.overall_rating DESC LIMIT 1;"}, {"question_id": 1084, "answer_sql": "SELECT COUNT(*) FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE strftime('%Y', birthday) < '1986') AND defensive_work_rate = 'high';"}, {"question_id": 1085, "answer_sql": "SELECT player_name, MAX(crossing) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name IN ('Alexis, Ariel Borysiuk', 'Arouna Kone') GROUP BY player_name;"}, {"question_id": 1086, "answer_sql": "SELECT t2.heading_accuracy FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Ariel Borysiuk';"}, {"question_id": 1087, "answer_sql": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 AND T2.volleys > 70;"}, {"question_id": 1088, "answer_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.volleys > 70 AND T2.dribbling > 70;"}, {"question_id": 1089, "answer_sql": "SELECT COUNT(T1.id) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.country_id = T2.id WHERE T2.name = 'Belgium' AND T1.season = '2008/2009';"}, {"question_id": 1090, "answer_sql": "SELECT T2.long_passing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.birthday ASC LIMIT 1;"}, {"question_id": 1091, "answer_sql": "SELECT COUNT(*) FROM `Match` AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T2.name = 'Belgium Jupiler League' AND T1.date LIKE '2009-04%';"}, {"question_id": 1092, "answer_sql": "SELECT T1.name FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T2.season = '2008/2009' GROUP BY T1.name ORDER BY COUNT(T1.id) DESC LIMIT 1;"}, {"question_id": 1093, "answer_sql": "SELECT AVG(overall_rating) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE strftime('%Y', Player.birthday) < '1986';"}, {"question_id": 1094, "answer_sql": "SELECT CAST((SUM(CASE WHEN T1.player_name = 'Ariel Borysiuk' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Paulin Puel' THEN T2.overall_rating ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.player_name = 'Paulin Puel' THEN T2.overall_rating ELSE 0 END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;"}, {"question_id": 1095, "answer_sql": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian';"}, {"question_id": 1096, "answer_sql": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Pietro Marino';"}, {"question_id": 1097, "answer_sql": "SELECT SUM(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox';"}, {"question_id": 1098, "answer_sql": "SELECT T1.chanceCreationPassing, T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Ajax' ORDER BY T1.chanceCreationPassing DESC LIMIT 1"}, {"question_id": 1099, "answer_sql": "SELECT T2.preferred_foot FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Abdou Diallo'"}, {"question_id": 1100, "answer_sql": "SELECT MAX(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Dorlan Pabon';"}, {"question_id": 1101, "answer_sql": "SELECT AVG(away_team_goal) FROM `Match` AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Parma' AND T1.country_id = 1;"}, {"question_id": 1102, "answer_sql": ""}, {"question_id": 1103, "answer_sql": "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy') AND `date` = '2016-02-04 00:00:00';"}, {"question_id": 1104, "answer_sql": "SELECT T2.potential FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Francesco Parravicini' AND T2.date = '2010-08-30 00:00:00';"}, {"question_id": 1105, "answer_sql": "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.`date` = '2015-05-01 00:00:00';"}, {"question_id": 1106, "answer_sql": "SELECT T2.defensive_work_rate FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Kevin Berigaud' AND T2.date = '2013-02-22 00:00:00';"}, {"question_id": 1107, "answer_sql": "SELECT T1.date FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1;"}, {"question_id": 1108, "answer_sql": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'Willem II' AND T1.`date` = '2011-02-22 00:00:00';"}, {"question_id": 1109, "answer_sql": "SELECT T2.buildUpPlayDribblingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'LEI' AND T2.`date` = '2015-09-10 00:00:00'"}, {"question_id": 1110, "answer_sql": ""}, {"question_id": 1111, "answer_sql": "SELECT T1.chanceCreationPassingClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id INNER JOIN Match AS T3 ON T2.team_api_id = T3.home_team_api_id WHERE T2.team_long_name = 'PEC Zwolle' AND T1.`date` = '2013-09-20 00:00:00'"}, {"question_id": 1112, "answer_sql": "SELECT T2.chanceCreationCrossingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Hull City' AND T2.`date` = '2010-02-22 00:00:00';"}, {"question_id": 1113, "answer_sql": "SELECT T1.defenceAggressionClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T2.team_long_name = 'Hannover 96' AND T1.date = '2015-09-10 00:00:00';"}, {"question_id": 1114, "answer_sql": "SELECT AVG(overall_rating) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Marko Arnautovic' AND Player_Attributes.date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00';"}, {"question_id": 1115, "answer_sql": "SELECT CAST((SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.date = '2013-07-12';"}, {"question_id": 1116, "answer_sql": "SELECT DISTINCT player_name FROM Player ORDER BY height DESC LIMIT 5;"}, {"question_id": 1117, "answer_sql": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10;"}, {"question_id": 1118, "answer_sql": "SELECT player_name FROM Player WHERE datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(birthday) > 34;"}, {"question_id": 1119, "answer_sql": "SELECT COUNT(*) FROM `Player` AS T1 INNER JOIN `Match` AS T2 ON T1.player_api_id = T2.home_player_1 WHERE T1.player_name = 'Aaron Lennon'"}, {"question_id": 1120, "answer_sql": "SELECT SUM(t2.away_team_goal) FROM Player AS t1 INNER JOIN Match AS t2 ON t1.player_api_id = t2.away_player_2 INNER JOIN Player AS t3 ON t3.player_name = 'Daan Smith' INNER JOIN Player AS t4 ON t4.player_name = 'Filipe Ferreira' WHERE t1.player_name IN ( 'Daan Smith', 'Filipe Ferreira' );"}, {"question_id": 1121, "answer_sql": "SELECT SUM(T1.home_team_goal) FROM `Match` AS T1 INNER JOIN Player AS T2 ON T1.home_player_1 = T2.player_api_id WHERE datetime(CURRENT_TIMESTAMP, 'localtime') - datetime(T2.birthday) < 31"}, {"question_id": 1122, "answer_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.overall_rating DESC LIMIT 10;"}, {"question_id": 1123, "answer_sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = ( SELECT MAX(potential) FROM Player_Attributes )"}, {"question_id": 1124, "answer_sql": ""}, {"question_id": 1125, "answer_sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.finishing = 1 ORDER BY T1.birthday ASC LIMIT 1;"}, {"question_id": 1126, "answer_sql": "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.away_player_1 INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T3.name = 'Belgium';"}, {"question_id": 1127, "answer_sql": ""}, {"question_id": 1128, "answer_sql": "SELECT T1.name FROM Country AS T1 INNER JOIN Match AS T2 ON T1.id = T2.country_id INNER JOIN Player AS T3 ON T2.home_player_1 = T3.player_api_id GROUP BY T1.name ORDER BY AVG(T3.weight) DESC LIMIT 1;"}, {"question_id": 1129, "answer_sql": "SELECT DISTINCT T1.team_long_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeedClass = 'Slow';"}, {"question_id": 1130, "answer_sql": "SELECT T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.chanceCreationPassingClass = 'Safe' GROUP BY T1.team_short_name;"}, {"question_id": 1131, "answer_sql": "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN Match AS T2 ON T1.player_api_id = T2.away_player_1 WHERE T2.country_id = ( SELECT id FROM Country WHERE name = 'Italy' );"}, {"question_id": 1132, "answer_sql": "SELECT player_name FROM Player WHERE height > 180 ORDER BY player_name LIMIT 3;"}, {"question_id": 1133, "answer_sql": "SELECT COUNT(*) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday > '1990-01-01' AND T1.player_name LIKE 'Aaron%';"}, {"question_id": 1134, "answer_sql": "SELECT ( SELECT jumping FROM Player_Attributes WHERE id = 6 ) - ( SELECT jumping FROM Player_Attributes WHERE id = 23 ) AS num"}, {"question_id": 1135, "answer_sql": "SELECT DISTINCT T1.id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = 'right' ORDER BY T2.potential ASC LIMIT 3;"}, {"question_id": 1136, "answer_sql": "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND crossing = (SELECT MAX(crossing) FROM Player_Attributes WHERE preferred_foot = 'left');"}, {"question_id": 1137, "answer_sql": "SELECT 100.0 * COUNT(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE NULL END) / COUNT(*) as percentage FROM Player_Attributes WHERE player_api_id IS NOT NULL;"}, {"question_id": 1138, "answer_sql": "SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Poland Ekstraklasa';"}, {"question_id": 1139, "answer_sql": "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%';"}, {"question_id": 1140, "answer_sql": "SELECT T1.sprint_speed, T1.agility, T1.acceleration FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Alexis Blin'"}, {"question_id": 1141, "answer_sql": "SELECT T1.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.team_long_name = 'KSV Cercle Brugge' GROUP BY T1.buildUpPlaySpeedClass;"}, {"question_id": 1142, "answer_sql": "SELECT COUNT(*) FROM `Match` WHERE league_id = (SELECT id FROM League WHERE name = 'Italy Serie A') AND season = '2015/2016';"}, {"question_id": 1143, "answer_sql": "SELECT MAX(home_team_goal) FROM `Match` WHERE league_id = ( SELECT id FROM League WHERE name = 'Netherlands Eredivisie' );"}, {"question_id": 1144, "answer_sql": "SELECT T2.finishing, T2.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.weight DESC LIMIT 1;"}, {"question_id": 1145, "answer_sql": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1;"}, {"question_id": 1146, "answer_sql": "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id ORDER BY T1.away_team_goal DESC LIMIT 1;"}, {"question_id": 1147, "answer_sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes )"}, {"question_id": 1148, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.overall_rating > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id;"}, {"question_id": 1149, "answer_sql": "SELECT (CASE WHEN SEX = 'M' THEN 'In-patient' ELSE 'Out-patient' END) AS Gender, (CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE Admission IN ('+', '-')) AS Percentage FROM Patient WHERE Admission IN ('+', '-') AND SEX = 'M';"}, {"question_id": 1150, "answer_sql": "SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F';"}, {"question_id": 1151, "answer_sql": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', Birthday) BETWEEN '1930' AND '1940';"}, {"question_id": 1152, "answer_sql": "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM Patient WHERE Diagnosis = 'SLE';"}, {"question_id": 1153, "answer_sql": "SELECT T1.Diagnosis, T2.Date FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 30609;"}, {"question_id": 1154, "answer_sql": "SELECT Patient.SEX , Patient.Birthday , Examination.`Examination Date` , Examination.Symptoms FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 163109"}, {"question_id": 1155, "answer_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 500;"}, {"question_id": 1156, "answer_sql": "SELECT T1.ID, T1.ID - strftime('%Y', T1.Birthday) AS Age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'"}, {"question_id": 1157, "answer_sql": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2;"}, {"question_id": 1158, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1937' AND T2.`T-CHO` >= 250;"}, {"question_id": 1159, "answer_sql": "SELECT T1.ID, T1.SEX, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB < 3.5;"}, {"question_id": 1160, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'F' AND (T2.TP < 6.0 OR T2.TP > 8.5) THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP IS NOT NULL;"}, {"question_id": 1161, "answer_sql": "SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND T1.Admission = '+';"}, {"question_id": 1162, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND STRFTIME('%Y', T1.Description) = '1997' AND T1.Admission = '-'"}, {"question_id": 1163, "answer_sql": "SELECT MIN(STRFTIME('%Y', Birthday) - STRFTIME('%Y', `First Date`)) FROM Patient;"}, {"question_id": 1164, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 1 AND T1.SEX = 'F' AND T2.`Examination Date` LIKE '1997%';"}, {"question_id": 1165, "answer_sql": ""}, {"question_id": 1166, "answer_sql": "SELECT T1.Symptoms, T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1;"}, {"question_id": 1167, "answer_sql": "SELECT CAST(COUNT(T2.ID) AS REAL) / 12 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.Date BETWEEN '1998-01-01' AND '1998-12-31';"}, {"question_id": 1168, "answer_sql": "SELECT T1.Birthday, T2.Date, T2.Date - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' ORDER BY T2.Date LIMIT 1;"}, {"question_id": 1169, "answer_sql": "SELECT CAST(SUM(CASE WHEN SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) FROM Patient WHERE ID IN ( SELECT ID FROM Laboratory WHERE UA <= 8.0 ) OR ID IN ( SELECT ID FROM Laboratory WHERE UA <= 6.5 );"}, {"question_id": 1170, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.`First Date`) >= 1;"}, {"question_id": 1171, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993' AND T1.SEX = 'Underage';"}, {"question_id": 1172, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 2.0;"}, {"question_id": 1173, "answer_sql": "SELECT Examination.Diagnosis FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.Date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Examination.Diagnosis ORDER BY COUNT(Examination.Diagnosis) DESC LIMIT 1"}, {"question_id": 1174, "answer_sql": "SELECT AVG(DISTINCT STRFTIME('%Y', Patient.Birthday)) - AVG(DISTINCT STRFTIME('%Y', Patient.Description)) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.Date BETWEEN '1991-10-01' AND '1991-10-30';"}, {"question_id": 1175, "answer_sql": "SELECT T1.`Examination Date` - strftime('%Y', T2.Birthday) AS age, T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID ORDER BY T3.HGB DESC LIMIT 1;"}, {"question_id": 1176, "answer_sql": "SELECT `ANA` FROM Examination WHERE ID = 3605340 AND `Examination Date` = '1996-12-02'"}, {"question_id": 1177, "answer_sql": "SELECT CASE WHEN `T-CHO` < 250 THEN 'Normal' ELSE 'Abnormal' END FROM Laboratory WHERE ID = 2927464 AND Date = '1995-09-04';"}, {"question_id": 1178, "answer_sql": ""}, {"question_id": 1179, "answer_sql": "SELECT T2.`aCL IgM` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Description = '1994-02-19' AND T2.`aCL IgM` IS NOT NULL;"}, {"question_id": 1180, "answer_sql": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9 AND T2.Date = '1992-06-12' AND T1.SEX IN ('M', 'F')"}, {"question_id": 1181, "answer_sql": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA = 8.4 AND T2.Date = '1991-10-21'"}, {"question_id": 1182, "answer_sql": "SELECT COUNT(T2.ID) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.`First Date` = '1991-06-13' AND T2.Diagnosis = 'SJS' AND STRFTIME('%Y', T1.Date) = '1995';"}, {"question_id": 1183, "answer_sql": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` = '1997-01-27' AND T1.Diagnosis = 'SLE';"}, {"question_id": 1184, "answer_sql": "SELECT T1.Symptoms FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T2.Birthday = '1959-03-01' AND T1.`Examination Date` = '1993-09-27'"}, {"question_id": 1185, "answer_sql": "SELECT (CAST(SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) * 100 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18'"}, {"question_id": 1186, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T2.`Examination Date` BETWEEN '197-01-01' AND '1997-12-31';"}, {"question_id": 1187, "answer_sql": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 30 AND T2.ALB < 4 AND T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31';"}, {"question_id": 1188, "answer_sql": "SELECT ID FROM Patient WHERE SEX = 'F' AND STRFTIME('%Y', Birthday) = '1964' AND Admission = '+'"}, {"question_id": 1189, "answer_sql": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > ( SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' );"}, {"question_id": 1190, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.UA <= 6.5 AND T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA <= 6.5 AND T2.`U-PRO` > 0 AND T2.`U-PRO` < 30;"}, {"question_id": 1191, "answer_sql": "SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'M' AND STRFTIME('%Y', `First Date`) = '1981';"}, {"question_id": 1192, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.Date LIKE '1991-10%' AND T2.`T-BIL` < 2.0;"}, {"question_id": 1193, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` != 'P' AND STRFTIME('%Y', T1.Birthday) BETWEEN '1980' AND '1989' AND T1.SEX = 'F';"}, {"question_id": 1194, "answer_sql": "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP > 2 AND T3.CRE = 1 AND T3.LDH = 123"}, {"question_id": 1195, "answer_sql": "SELECT AVG(T1.ALB) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'F' AND T1.PLT > 400 AND T2.Diagnosis = 'SLE';"}, {"question_id": 1196, "answer_sql": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1;"}, {"question_id": 1197, "answer_sql": "SELECT `First Date`, Diagnosis FROM Patient WHERE ID = 48473;"}, {"question_id": 1198, "answer_sql": "SELECT COUNT(ID) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'APS';"}, {"question_id": 1199, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Date) = '1997' AND T2.TP > 6 AND T2.TP < 8.5;"}, {"question_id": 1200, "answer_sql": "SELECT CAST(SUM(CASE WHEN Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Examination WHERE Symptoms = 'thrombocytopenia';"}, {"question_id": 1201, "answer_sql": "SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE STRFTIME('%Y', Birthday) = '1980' AND Diagnosis = 'RA';"}, {"question_id": 1202, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.Diagnosis = 'BEHCET' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T1.Admission = '-'"}, {"question_id": 1203, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5;"}, {"question_id": 1204, "answer_sql": ""}, {"question_id": 1205, "answer_sql": "SELECT CASE WHEN T2.UA > 8.0 AND T1.SEX = 'M' THEN 'Normal' ELSE 'Abnormal' END uric_acid_normal FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266;"}, {"question_id": 1206, "answer_sql": "SELECT Date FROM Laboratory WHERE ID = 48473 AND GOT >= 60;"}, {"question_id": 1207, "answer_sql": "SELECT DISTINCT T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND STRFTIME('%Y', T2.Date) = '1994';"}, {"question_id": 1208, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GPT >= 60;"}, {"question_id": 1209, "answer_sql": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT > 60 ORDER BY T1.Birthday ASC;"}, {"question_id": 1210, "answer_sql": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500;"}, {"question_id": 1211, "answer_sql": "SELECT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH BETWEEN 600 AND 800;"}, {"question_id": 1212, "answer_sql": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300"}, {"question_id": 1213, "answer_sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1982-04-01' AND T2.ALP < 300;"}, {"question_id": 1214, "answer_sql": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0;"}, {"question_id": 1215, "answer_sql": "SELECT T1.ID, T2.TP, T2.TP - 8.5 AS Deviation FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.TP > 8.5;"}, {"question_id": 1216, "answer_sql": "SELECT DISTINCT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND (T2.ALB <= 3.5 OR T2.ALB >= 5.5) ORDER BY T1.Birthday DESC;"}, {"question_id": 1217, "answer_sql": "SELECT T1.ID, CASE WHEN T2.ALB BETWEEN 3.5 AND 5.5 THEN 'Normal' ELSE 'Abnormal' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) = '1982';"}, {"question_id": 1218, "answer_sql": "SELECT (COUNT(T1.ID) * 100.0 / (SELECT COUNT(ID) FROM Patient WHERE SEX = 'F')) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UA > 8.0 OR (T2.UA > 6.5 AND T1.SEX = 'F')"}, {"question_id": 1219, "answer_sql": "SELECT AVG(T2.UA) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX IN ('M', 'F') AND T2.UA < 8.0 AND T2.UA < 6.5;"}, {"question_id": 1220, "answer_sql": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN = 29"}, {"question_id": 1221, "answer_sql": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.UN < 30 AND T1.Diagnosis = 'RA'"}, {"question_id": 1222, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND T1.SEX = 'M';"}, {"question_id": 1223, "answer_sql": ""}, {"question_id": 1224, "answer_sql": "SELECT T2.`T-BIL`, T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-BIL` DESC LIMIT 1;"}, {"question_id": 1225, "answer_sql": "SELECT T1.SEX, COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 GROUP BY T1.SEX;"}, {"question_id": 1226, "answer_sql": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T2.`T-CHO` DESC, T1.Birthday ASC LIMIT 1;"}, {"question_id": 1227, "answer_sql": "SELECT AVG(STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-CHO` >= 250;"}, {"question_id": 1228, "answer_sql": "SELECT DISTINCT T1.ID, T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG > 300;"}, {"question_id": 1229, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200 AND (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday)) > 50;"}, {"question_id": 1230, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK < 250 AND T1.Admission = '-'"}, {"question_id": 1231, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250;"}, {"question_id": 1232, "answer_sql": "SELECT T1.ID, T1.SEX, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250;"}, {"question_id": 1233, "answer_sql": "SELECT T1.ID, T2.GLU FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Description) >= '1991' AND T2.GLU < 180;"}, {"question_id": 1234, "answer_sql": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX ORDER BY T1.Birthday ASC;"}, {"question_id": 1235, "answer_sql": "SELECT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC < 3.5;"}, {"question_id": 1236, "answer_sql": "SELECT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Birthday IS NOT NULL AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission IN ('+', '-')"}, {"question_id": 1237, "answer_sql": "SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HGB < 10 AND T1.Admission = '-'"}, {"question_id": 1238, "answer_sql": "SELECT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HGB BETWEEN 10 AND 17 AND T1.Diagnosis = 'SLE' ORDER BY T1.Birthday ASC LIMIT 1;"}, {"question_id": 1239, "answer_sql": ""}, {"question_id": 1240, "answer_sql": "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29;"}, {"question_id": 1241, "answer_sql": "SELECT SUM(CASE WHEN T2.PLT < 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT > 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT < 100 OR T2.PLT > 400;"}, {"question_id": 1242, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) < 50 AND T2.Date LIKE '1984%';"}, {"question_id": 1243, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55;"}, {"question_id": 1244, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.`First Date`) > '1992' AND T2.PT < 14;"}, {"question_id": 1245, "answer_sql": "SELECT COUNT(*) FROM Laboratory JOIN Examination ON Laboratory.ID = Examination.ID WHERE Examination.`Examination Date` > '1997-01-01' AND Laboratory.APTT < 45;"}, {"question_id": 1246, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.APTT > 45 AND T1.Thrombosis = 3;"}, {"question_id": 1247, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.FG <= 150 AND T2.FG >= 450 AND T2.WBC BETWEEN 3.5 AND 9;"}, {"question_id": 1248, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday > '1980-01-01' AND T2.FG BETWEEN 150 AND 450;"}, {"question_id": 1249, "answer_sql": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` >= 30;"}, {"question_id": 1250, "answer_sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`U-PRO` BETWEEN 0 AND 30 AND T1.Diagnosis = 'SLE'"}, {"question_id": 1251, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGG < 900 AND T1.Symptoms = 'abortion';"}, {"question_id": 1252, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.Symptoms IS NOT NULL AND T3.IGG BETWEEN 900 AND 2000;"}, {"question_id": 1253, "answer_sql": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 ORDER BY T2.IGA DESC LIMIT 1"}, {"question_id": 1254, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND T1.`First Date` >= '1990-01-01';"}, {"question_id": 1255, "answer_sql": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGM NOT BETWEEN 40 AND 400 GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1"}, {"question_id": 1256, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP LIKE '+' OR T2.CRP LIKE '-' OR T2.CRP < 1.0 AND T1.Description IS NULL;"}, {"question_id": 1257, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN ('+-', '-') AND T2.CRP >= 1.0 AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 18;"}, {"question_id": 1258, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T3.ID WHERE T2.RA IN ('-', '+-') AND T3.KCT = '+';"}, {"question_id": 1259, "answer_sql": ""}, {"question_id": 1260, "answer_sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Birthday < DATE('now', '-60 year')"}, {"question_id": 1261, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.RF < 20 AND T3.Thrombosis = 0;"}, {"question_id": 1262, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C3 > 35 AND T1.`ANA Pattern` = 'P';"}, {"question_id": 1263, "answer_sql": "SELECT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT BETWEEN 29 AND 52 ORDER BY T1.`aCL IgA` DESC LIMIT 1"}, {"question_id": 1264, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10;"}, {"question_id": 1265, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = '-' OR T2.RNP = '0' AND T1.Admission = '+';"}, {"question_id": 1266, "answer_sql": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP NOT IN ('-', '+-') ORDER BY T1.Birthday ASC LIMIT 1;"}, {"question_id": 1267, "answer_sql": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM IN ('negative', '0') AND T1.Thrombosis = 1;"}, {"question_id": 1268, "answer_sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SM NOT IN ('negative', '0') ORDER BY T1.Birthday DESC LIMIT 3"}, {"question_id": 1269, "answer_sql": ""}, {"question_id": 1270, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T3.Symptoms = 'vertigo' AND T2.SC170 IN ('negative', '0') AND T1.SEX = 'M';"}, {"question_id": 1271, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('negative', '0') AND STRFTIME('%Y', T1.`First Date`) < '1990';"}, {"question_id": 1272, "answer_sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` ASC LIMIT 1;"}, {"question_id": 1273, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB = 'negative' OR T2.SSB = '0' AND T1.Diagnosis = 'SLE';"}, {"question_id": 1274, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSB IN ('negative', '0') AND T1.Symptoms IS NOT NULL;"}, {"question_id": 1275, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('negative', '0') AND T2.SSB IN ('negative', '0') AND T1.SEX = 'M'"}, {"question_id": 1276, "answer_sql": "SELECT DISTINCT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA >= 8;"}, {"question_id": 1277, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.Description IS NULL;"}, {"question_id": 1278, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.DNA < 8 AND T1.Admission = '+';"}, {"question_id": 1279, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.GOT >= 60 AND T1.Diagnosis = 'SLE' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60;"}, {"question_id": 1280, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.GOT < 60;"}, {"question_id": 1281, "answer_sql": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60 ORDER BY T1.Birthday DESC LIMIT 1;"}, {"question_id": 1282, "answer_sql": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT < 60 ORDER BY T2.GPT DESC LIMIT 3"}, {"question_id": 1283, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT < 60 AND T1.SEX = 'M'"}, {"question_id": 1284, "answer_sql": "SELECT T1.`First Date` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH < 500 ORDER BY T2.LDH DESC, T1.`First Date` ASC LIMIT 1;"}, {"question_id": 1285, "answer_sql": "SELECT T1.`First Date` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH >= 500 ORDER BY T1.`First Date` DESC LIMIT 1"}, {"question_id": 1286, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP >= 300 AND T1.Admission = '+'"}, {"question_id": 1287, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALP < 300 AND T1.Admission = '-';"}, {"question_id": 1288, "answer_sql": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TP < 6.0;"}, {"question_id": 1289, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5;"}, {"question_id": 1290, "answer_sql": "SELECT T1.`Examination Date` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.ALB > 3.5 AND T2.ALB < 5.5 ORDER BY T2.ALB DESC LIMIT 1;"}, {"question_id": 1291, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.ALB BETWEEN 3.5 AND 5.5 AND T2.TP BETWEEN 6.0 AND 8.5;"}, {"question_id": 1292, "answer_sql": "SELECT T2.`aCL IgG`, T2.`aCL IgM`, T2.`aCL IgA` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T1.SEX = 'F' AND T3.UA > 6.5 ORDER BY T3.UA DESC LIMIT 1;"}, {"question_id": 1293, "answer_sql": "SELECT MAX(T2.ANA) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.CRE < 1.5;"}, {"question_id": 1294, "answer_sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CRE < 1.5 ORDER BY T3.`aCL IgA` DESC LIMIT 1;"}, {"question_id": 1295, "answer_sql": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` >= 2.0 AND T1.`ANA Pattern` LIKE '%P%';"}, {"question_id": 1296, "answer_sql": "SELECT T1.`ANA` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` < 2.0 ORDER BY T2.TG DESC LIMIT 1;"}, {"question_id": 1297, "answer_sql": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` >= 250 AND T1.KCT = '-'"}, {"question_id": 1298, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-CHO` < 250 AND T1.`ANA Pattern` = 'P';"}, {"question_id": 1299, "answer_sql": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL;"}, {"question_id": 1300, "answer_sql": "SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 ORDER BY T2.TG DESC LIMIT 1;"}, {"question_id": 1301, "answer_sql": "SELECT DISTINCT T1.ID FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis = 0 AND T2.CPK < 250;"}, {"question_id": 1302, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.RVVT = '+' OR T3.LAC = '+' OR T3.KCT = '+')"}, {"question_id": 1303, "answer_sql": "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180 ORDER BY T1.Birthday ASC LIMIT 1;"}, {"question_id": 1304, "answer_sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.GLU < 180 AND T3.Thrombosis = 0;"}, {"question_id": 1305, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC BETWEEN 3.5 AND 9 AND T1.Admission = '+';"}, {"question_id": 1306, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC BETWEEN 3.5 AND 9 AND T1.Diagnosis = 'SLE';"}, {"question_id": 1307, "answer_sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RBC <= 3.5 OR T2.RBC >= 6.0 AND T1.Admission = '-'"}, {"question_id": 1308, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND T1.Diagnosis IS NOT NULL;"}, {"question_id": 1309, "answer_sql": "SELECT T2.PLT FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'MCTD' AND T2.PLT BETWEEN 100 AND 400;"}, {"question_id": 1310, "answer_sql": "SELECT AVG(T2.PT) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14;"}, {"question_id": 1311, "answer_sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Thrombosis > 1 OR T1.Thrombosis = 1 AND T2.PT < 14;"}, {"question_id": 1312, "answer_sql": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Angela' AND T2.last_name = 'Sanders'"}, {"question_id": 1313, "answer_sql": "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.college = 'College of Engineering';"}, {"question_id": 1314, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design Department';"}, {"question_id": 1315, "answer_sql": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer'"}, {"question_id": 1316, "answer_sql": "SELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T3.event_id = T2.link_to_event WHERE T3.event_name = 'Women''s Soccer'"}, {"question_id": 1317, "answer_sql": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.t_shirt_size = 'Medium';"}, {"question_id": 1318, "answer_sql": "SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id GROUP BY T2.event_name ORDER BY COUNT(T1.link_to_event) DESC LIMIT 1"}, {"question_id": 1319, "answer_sql": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'"}, {"question_id": 1320, "answer_sql": "SELECT T3.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean'"}, {"question_id": 1321, "answer_sql": "SELECT COUNT(T2.link_to_event) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison' AND SUBSTR(T3.event_date, 1, 4) = '2019';"}, {"question_id": 1322, "answer_sql": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' GROUP BY T2.event_id HAVING COUNT(T1.link_to_event) > 10"}, {"question_id": 1323, "answer_sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T2.link_to_event HAVING COUNT(T2.link_to_member) > 20;"}, {"question_id": 1324, "answer_sql": "SELECT CAST(COUNT(T1.event_id) AS REAL) / COUNT(DISTINCT T1.event_name) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE SUBSTR(T1.event_date, 1, 4) = '2020' AND T1.type = 'Meeting';"}, {"question_id": 1325, "answer_sql": "SELECT expense_description FROM expense WHERE cost = ( SELECT MAX(cost) FROM expense );"}, {"question_id": 1326, "answer_sql": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Environmental Engineering'"}, {"question_id": 1327, "answer_sql": "SELECT T3.first_name, T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Laugh Out Loud'"}, {"question_id": 1328, "answer_sql": "SELECT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'"}, {"question_id": 1329, "answer_sql": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey'"}, {"question_id": 1330, "answer_sql": "SELECT T3.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN major AS T3 ON T2.major_id = T3.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'"}, {"question_id": 1331, "answer_sql": "SELECT T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position = 'Vice President'"}, {"question_id": 1332, "answer_sql": "SELECT SUM(T3.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN budget AS T3 ON T1.budget_id = T3.budget_id WHERE T2.event_name = 'September Meeting' AND T1.category = 'Food';"}, {"question_id": 1333, "answer_sql": "SELECT T2.city, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.position = 'President';"}, {"question_id": 1334, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Illinois';"}, {"question_id": 1335, "answer_sql": "SELECT SUM(T3.spent) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN budget AS T3 ON T1.budget_id = T3.budget_id WHERE T2.event_name = 'September Meeting' AND T1.category = 'Advertisement';"}, {"question_id": 1336, "answer_sql": ""}, {"question_id": 1337, "answer_sql": "SELECT SUM(T2.amount) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'October Speaker'"}, {"question_id": 1338, "answer_sql": ""}, {"question_id": 1339, "answer_sql": "SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T1.first_name = 'Elijah' AND T1.last_name = 'Allen' AND T4.event_date LIKE '9/%' AND T4.event_date LIKE '10/%'"}, {"question_id": 1340, "answer_sql": ""}, {"question_id": 1341, "answer_sql": "SELECT location FROM event WHERE event_name = 'Spring Budget Review';"}, {"question_id": 1342, "answer_sql": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04';"}, {"question_id": 1343, "answer_sql": "SELECT remaining FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1;"}, {"question_id": 1344, "answer_sql": "SELECT notes FROM income WHERE date_received = '2019-09-14' AND source = 'Fundraising'"}, {"question_id": 1345, "answer_sql": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences';"}, {"question_id": 1346, "answer_sql": "SELECT phone FROM member WHERE last_name = 'Jacobs' AND first_name = 'Carlo';"}, {"question_id": 1347, "answer_sql": "SELECT T2.county FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Adela' AND T1.last_name = 'O''Gallagher'"}, {"question_id": 1348, "answer_sql": "SELECT COUNT(*) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'November Meeting' AND T1.remaining < 0;"}, {"question_id": 1349, "answer_sql": "SELECT SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'September Speaker';"}, {"question_id": 1350, "answer_sql": "SELECT T2.event_status FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20';"}, {"question_id": 1351, "answer_sql": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Brent' AND T1.last_name = 'Thomason'"}, {"question_id": 1352, "answer_sql": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large'"}, {"question_id": 1353, "answer_sql": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'"}, {"question_id": 1354, "answer_sql": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'"}, {"question_id": 1355, "answer_sql": "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'"}, {"question_id": 1356, "answer_sql": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.position = 'President'"}, {"question_id": 1357, "answer_sql": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Connor' AND T1.last_name = 'Hilton' AND T2.source = 'Dues';"}, {"question_id": 1358, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source = 'Dues' ORDER BY T2.date_received ASC LIMIT 1;"}, {"question_id": 1359, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event WHERE T1.category = 'Advertisement';"}, {"question_id": 1360, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.category = 'Parking' THEN T2.amount ELSE 0 END) AS REAL) * 100 / SUM(T2.amount) FROM budget AS T2 INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'November Speaker';"}, {"question_id": 1361, "answer_sql": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Pizza';"}, {"question_id": 1362, "answer_sql": "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia';"}, {"question_id": 1363, "answer_sql": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences';"}, {"question_id": 1364, "answer_sql": "SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth'"}, {"question_id": 1365, "answer_sql": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id ORDER BY T2.remaining ASC LIMIT 1;"}, {"question_id": 1366, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting'"}, {"question_id": 1367, "answer_sql": "SELECT T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major GROUP BY T2.link_to_major ORDER BY COUNT(T1.college) DESC LIMIT 1"}, {"question_id": 1368, "answer_sql": "SELECT T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.phone = '809-555-3360'"}, {"question_id": 1369, "answer_sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event ORDER BY T2.amount DESC LIMIT 1;"}, {"question_id": 1370, "answer_sql": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Vice President'"}, {"question_id": 1371, "answer_sql": "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer';"}, {"question_id": 1372, "answer_sql": "SELECT T2.date_received FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Casey' AND T1.last_name = 'Mason' AND T1.first_name = 'Casey' AND T1.last_name = 'Mason';"}, {"question_id": 1373, "answer_sql": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state = 'Maryland';"}, {"question_id": 1374, "answer_sql": "SELECT COUNT(T1.link_to_event) FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.phone = '954-555-6240';"}, {"question_id": 1375, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'School of Applied Sciences, Technology and Education'"}, {"question_id": 1376, "answer_sql": "SELECT T1.event_name, (T2.spent / T2.amount) AS ratio FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.status = 'Closed' ORDER BY ratio DESC LIMIT 1;"}, {"question_id": 1377, "answer_sql": "SELECT COUNT(*) FROM member WHERE position = 'President';"}, {"question_id": 1378, "answer_sql": "SELECT MAX(spent) FROM budget;"}, {"question_id": 1379, "answer_sql": "SELECT COUNT(event_id) FROM event WHERE STRFTIME('%Y', event_date) = '2020' AND type = 'Meeting';"}, {"question_id": 1380, "answer_sql": "SELECT SUM(spent) FROM budget WHERE category = 'Food';"}, {"question_id": 1381, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T2.link_to_member HAVING COUNT(T2.link_to_event) > 7"}, {"question_id": 1382, "answer_sql": "SELECT T3.first_name, T3.last_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN major AS T4 ON T4.major_id = T3.link_to_major WHERE T1.event_name = 'Community Theater' AND T4.major_name = 'Interior Design';"}, {"question_id": 1383, "answer_sql": ""}, {"question_id": 1384, "answer_sql": "SELECT SUM(T2.amount) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Grant' AND T1.last_name = 'Gilmour'"}, {"question_id": 1385, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.amount > 40;"}, {"question_id": 1386, "answer_sql": "SELECT SUM(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_budget WHERE T1.event_name = 'Yearly Kickoff';"}, {"question_id": 1387, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T4.event_name = 'Yearly Kickoff'"}, {"question_id": 1388, "answer_sql": "SELECT T1.first_name, T1.last_name, T2.source FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member ORDER BY T2.amount DESC LIMIT 1;"}, {"question_id": 1389, "answer_sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget ORDER BY T3.cost ASC LIMIT 1;"}, {"question_id": 1390, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.cost ELSE 0 END) AS REAL) * 100 / SUM(T1.cost) FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_budget = T2.event_id"}, {"question_id": 1391, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.major_name = 'Physics' THEN 1 ELSE 0 END) AS ratio FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name IN ('Finance', 'Physics');"}, {"question_id": 1392, "answer_sql": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY SUM(source) DESC LIMIT 1;"}, {"question_id": 1393, "answer_sql": "SELECT first_name, last_name, email FROM member WHERE position = 'Secretary';"}, {"question_id": 1394, "answer_sql": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Physics Teaching';"}, {"question_id": 1395, "answer_sql": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND STRFTIME('%Y', T1.event_date) = '2019';"}, {"question_id": 1396, "answer_sql": "SELECT COUNT(T2.link_to_event) AS attended_events , T3.major_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN major AS T3 ON T1.link_to_major = T3.major_id WHERE T1.first_name = 'Luisa' AND T1.last_name = 'Guidi'"}, {"question_id": 1397, "answer_sql": "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed';"}, {"question_id": 1398, "answer_sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' AND T2.spent = ( SELECT MAX(spent) FROM budget WHERE category = 'Advertisement' )"}, {"question_id": 1399, "answer_sql": "SELECT CASE WHEN T2.link_to_event IS NOT NULL THEN 'Yes' ELSE 'No' END AS result FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean' AND T3.event_name = 'Women''s Soccer';"}, {"question_id": 1400, "answer_sql": "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM event WHERE event_date LIKE '2019%';"}, {"question_id": 1401, "answer_sql": ""}, {"question_id": 1402, "answer_sql": "SELECT t_shirt_size FROM member GROUP BY t_shirt_size ORDER BY COUNT(t_shirt_size) DESC LIMIT 1"}, {"question_id": 1403, "answer_sql": "SELECT T3.event_name FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T2.event_status = 'Closed' AND T2.remaining < 0 ORDER BY T2.remaining LIMIT 1;"}, {"question_id": 1404, "answer_sql": "SELECT T2.type, SUM(T3.cost) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget WHERE T2.event_name = 'October Meeting' GROUP BY T2.type;"}, {"question_id": 1405, "answer_sql": "SELECT T1.category, SUM(T1.amount) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'April Speaker' GROUP BY T1.category ORDER BY SUM(T1.amount);"}, {"question_id": 1406, "answer_sql": "SELECT budget_id, category, amount FROM budget WHERE category = 'Food' AND amount = (SELECT MAX(amount) FROM budget WHERE category = 'Food')"}, {"question_id": 1407, "answer_sql": "SELECT budget_id, amount FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3;"}, {"question_id": 1408, "answer_sql": "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'"}, {"question_id": 1409, "answer_sql": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'"}, {"question_id": 1410, "answer_sql": "SELECT T1.first_name, T1.last_name, SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.member_id = 'rec4BLdZHS2Blfp4v' GROUP BY T1.first_name, T1.last_name;"}, {"question_id": 1411, "answer_sql": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'"}, {"question_id": 1412, "answer_sql": "SELECT T2.expense_description FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'X-Large'"}, {"question_id": 1413, "answer_sql": "SELECT T1.zip FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost < 50"}, {"question_id": 1414, "answer_sql": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.first_name = 'Phillip' AND T2.last_name = 'Cullen'"}, {"question_id": 1415, "answer_sql": "SELECT T1.position FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business'"}, {"question_id": 1416, "answer_sql": "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T1.t_shirt_size = 'Medium';"}, {"question_id": 1417, "answer_sql": "SELECT T2.type FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.remaining > 30;"}, {"question_id": 1418, "answer_sql": "SELECT DISTINCT type FROM event WHERE location = 'MU 215';"}, {"question_id": 1419, "answer_sql": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_date = '2020-03-24T12:00:00';"}, {"question_id": 1420, "answer_sql": "SELECT T1.major_name FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T2.position = 'Vice President'"}, {"question_id": 1421, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.major_name = 'Mathematics' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.position = 'Member';"}, {"question_id": 1422, "answer_sql": "SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215'"}, {"question_id": 1423, "answer_sql": "SELECT COUNT(*) FROM income WHERE amount = 50;"}, {"question_id": 1424, "answer_sql": "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large';"}, {"question_id": 1425, "answer_sql": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences';"}, {"question_id": 1426, "answer_sql": "SELECT T2.last_name, T1.department, T1.college FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Environmental Engineering';"}, {"question_id": 1427, "answer_sql": "SELECT DISTINCT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215' AND T1.type = 'Guest Speaker' AND T2.spent = 0;"}, {"question_id": 1428, "answer_sql": "SELECT T3.city, T3.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'"}, {"question_id": 1429, "answer_sql": "SELECT T3.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T1.position = 'Vice President' AND T3.location = '900 E. Washington St.' AND T3.type = 'Social';"}, {"question_id": 1430, "answer_sql": "SELECT T1.last_name, T1.position FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_date = '2019-09-10' AND T2.expense_description = 'Pizza';"}, {"question_id": 1431, "answer_sql": "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T2.link_to_member = T1.member_id INNER JOIN event AS T3 ON T3.event_id = T2.link_to_event WHERE T3.event_name = 'Women''s Soccer' AND T1.position = 'Member'"}, {"question_id": 1432, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.amount = 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.income_id) FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T1.t_shirt_size = 'Medium' AND T1.position = 'Member';"}, {"question_id": 1433, "answer_sql": "SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box';"}, {"question_id": 1434, "answer_sql": "SELECT zip_code FROM zip_code WHERE state = 'Puerto Rico' AND county = 'San Juan Municipio' AND type = 'PO Box'"}, {"question_id": 1435, "answer_sql": "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20';"}, {"question_id": 1436, "answer_sql": "SELECT T2.link_to_event FROM expense AS T1 INNER JOIN attendance AS T2 ON T1.link_to_member = T2.link_to_member WHERE T1.cost > 50"}, {"question_id": 1437, "answer_sql": "SELECT T1.first_name, T1.last_name, T2.link_to_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN expense AS T3 ON T3.link_to_member = T1.member_id WHERE T3.expense_date BETWEEN '2019-01-10' AND '2019-11-19' AND T3.approved = 'true'"}, {"question_id": 1438, "answer_sql": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.first_name = 'Katy' AND T2.major_id = 'rec1N0upiVLy5esTO'"}, {"question_id": 1439, "answer_sql": "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Business' AND T2.college = 'College of Agriculture and Applied Sciences';"}, {"question_id": 1440, "answer_sql": "SELECT T1.email FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_date BETWEEN '2019-09-10' AND '2019-11-19' AND T2.cost > 20;"}, {"question_id": 1441, "answer_sql": "SELECT COUNT(T2.member_id) FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'education' AND T2.position = 'Member' AND T1.college = 'College of Education & Human Services';"}, {"question_id": 1442, "answer_sql": "SELECT CAST(SUM(CASE WHEN remaining < 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(budget_id) FROM budget;"}, {"question_id": 1443, "answer_sql": "SELECT event_id, location, status FROM event WHERE SUBSTR(event_date, 1, 10) BETWEEN '2019-11-01' AND '2020-03-31'"}, {"question_id": 1444, "answer_sql": "SELECT T1.expense_description FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.cost > ( SELECT AVG(cost) FROM expense ) GROUP BY T1.expense_description;"}, {"question_id": 1445, "answer_sql": "SELECT first_name, last_name FROM member WHERE t_shirt_size = 'X-Large';"}, {"question_id": 1446, "answer_sql": "SELECT CAST(SUM(CASE WHEN type = 'PO Box' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM zip_code;"}, {"question_id": 1447, "answer_sql": "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining < 0;"}, {"question_id": 1448, "answer_sql": "SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100"}, {"question_id": 1449, "answer_sql": "SELECT T1.first_name, T1.last_name, T2.major_name FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major INNER JOIN expense AS T3 ON T3.link_to_member = T1.member_id WHERE T3.cost > 100;"}, {"question_id": 1450, "answer_sql": ""}, {"question_id": 1451, "answer_sql": ""}, {"question_id": 1452, "answer_sql": "SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.position != 'Member'"}, {"question_id": 1453, "answer_sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.cost < ( SELECT AVG(cost) FROM expense )"}, {"question_id": 1454, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.type = 'Game' THEN T3.cost ELSE 0 END) AS REAL) * 100 / SUM(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget;"}, {"question_id": 1455, "answer_sql": "SELECT T2.budget_id FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Water, chips, cookies' ORDER BY T1.cost DESC LIMIT 1"}, {"question_id": 1456, "answer_sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T2.link_to_member ORDER BY SUM(T2.cost) DESC LIMIT 5;"}, {"question_id": 1457, "answer_sql": "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > ( SELECT AVG(cost) FROM expense )"}, {"question_id": 1458, "answer_sql": "SELECT CAST(SUM(CASE WHEN state = 'Maine' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE NULL END) - CAST(SUM(CASE WHEN state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(CASE WHEN position = 'Member' THEN 1 ELSE NULL END) AS diff FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.state IN ('Maine', 'Vermont');"}, {"question_id": 1459, "answer_sql": "SELECT T2.major_name, T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Garrett' AND T1.last_name = 'Gerke'"}, {"question_id": 1460, "answer_sql": "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'"}, {"question_id": 1461, "answer_sql": "SELECT T2.last_name, T2.phone FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name = 'Elementary Education'"}, {"question_id": 1462, "answer_sql": "SELECT T2.amount, T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'January Speaker';"}, {"question_id": 1463, "answer_sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Food';"}, {"question_id": 1464, "answer_sql": ""}, {"question_id": 1465, "answer_sql": "SELECT T2.category FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id WHERE T1.expense_description = 'Posters'"}, {"question_id": 1466, "answer_sql": "SELECT T1.first_name, T1.last_name, T2.college FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T1.position = 'Secretary';"}, {"question_id": 1467, "answer_sql": "SELECT SUM(T2.spent), T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Speaker Gifts'"}, {"question_id": 1468, "answer_sql": ""}, {"question_id": 1469, "answer_sql": "SELECT T1.first_name, T1.last_name, T1.position FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T2.city = 'Lincolnton' AND T2.state = 'North Carolina' AND T2.zip_code = 28092;"}, {"question_id": 1470, "answer_sql": "SELECT COUNT(GasStationID) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium';"}, {"question_id": 1471, "answer_sql": "SELECT CAST(SUM(IIF(Currency = 'EUR', 1, 0)) AS REAL) / SUM(IIF(Currency = 'CZK', 1, 0)) FROM customers;"}, {"question_id": 1472, "answer_sql": "SELECT T2.CustomerID, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201201' AND '201212' GROUP BY T2.CustomerID ORDER BY SUM(T1.Consumption) ASC LIMIT 1;"}, {"question_id": 1473, "answer_sql": "SELECT AVG(Consumption) / 12 AS avg_monthly_consumption FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'SME' ) AND Date BETWEEN '201301' AND '201312';"}, {"question_id": 1474, "answer_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN '201101' AND '201112' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1;"}, {"question_id": 1475, "answer_sql": "SELECT COUNT(DISTINCT customers.CustomerID) FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Consumption < 30000 AND customers.Segment = 'KAM' AND yearmonth.Date BETWEEN '201201' AND '201212';"}, {"question_id": 1476, "answer_sql": "SELECT SUM(IIF(T2.Currency = 'CZK', T3.Consumption, 0)) - SUM(IIF(T2.Currency = 'EUR', T3.Consumption, 0)) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Date BETWEEN '201201' AND '201212';"}, {"question_id": 1477, "answer_sql": "SELECT SUBSTR(T1.Date, 1, 4) AS YEAR FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR' GROUP BY SUBSTR(T1.Date, 1, 4) ORDER BY SUM(T1.Consumption) DESC LIMIT 1;"}, {"question_id": 1478, "answer_sql": "SELECT T2.Segment, SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID GROUP BY T2.Segment ORDER BY SUM(T1.Consumption) ASC LIMIT 1;"}, {"question_id": 1479, "answer_sql": "SELECT SUBSTR(T2.Date, 1, 4) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' GROUP BY SUBSTR(T2.Date, 1, 4) ORDER BY SUM(T2.Consumption) DESC LIMIT 1;"}, {"question_id": 1480, "answer_sql": "SELECT T1.month FROM ( SELECT DISTINCT SUBSTR(T2.Date, 6, 2) AS month FROM customers T1 INNER JOIN yearmonth T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date LIKE '2013%' ) AS T1 ORDER BY T1.month DESC LIMIT 1;"}, {"question_id": 1481, "answer_sql": "SELECT (SUM(CASE WHEN T2.Segment = 'SME' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T2.Segment = 'LAM' THEN T1.Consumption ELSE 0 END)) * 100 / (SUM(CASE WHEN T2.Segment = 'SME' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Segment = 'LAM' THEN 1 ELSE 0 END)) AS DifferenceSME2LAM , (SUM(CASE WHEN T2.Segment = 'LAM' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T2.Segment = 'KAM' THEN T1.Consumption ELSE 0 END)) * 100 / (SUM(CASE WHEN T2.Segment = 'LAM' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Segment = 'KAM' THEN 1 ELSE 0 END)) AS DifferenceLAM2KAM , (SUM(CASE WHEN T2.Segment = 'KAM' THEN T1.Consumption ELSE 0 END) - SUM(CASE WHEN T2.Segment = 'SME' THEN T1.Consumption ELSE 0 END)) * 100 / (SUM(CASE WHEN T2.Segment = 'KAM' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.Segment = 'SME' THEN 1 ELSE 0 END)) AS DifferenceKAM2SME FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' AND T2.Currency = 'CZK';"}, {"question_id": 1482, "answer_sql": "SELECT CASE WHEN SUM(IIF(T2.Currency = 'EUR', T1.Consumption, 0)) / SUM(IIF(T2.Currency = 'EUR', T1.Consumption, 0)) - 1 > 0 THEN 'SME' WHEN SUM(IIF(T2.Currency = 'EUR', T1.Consumption, 0)) / SUM(IIF(T2.Currency = 'EUR', T1.Consumption, 0)) - 1 < 0 THEN 'LAM' ELSE 'KAM' END AS RESULT FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T2.CustomerID = T1.CustomerID WHERE T1.Date BETWEEN '201201' AND '201312'"}, {"question_id": 1483, "answer_sql": "SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 6 AND Date BETWEEN '201308' AND '201311';"}, {"question_id": 1484, "answer_sql": "SELECT COUNT(*) - ( SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' ) AS more_discount FROM gasstations WHERE Country = 'CZE';"}, {"question_id": 1485, "answer_sql": "SELECT SUM(IIF(CustomerID = 7, Consumption, 0)) - SUM(IIF(CustomerID = 5, Consumption, 0)) FROM yearmonth WHERE Date = '201304'"}, {"question_id": 1486, "answer_sql": "SELECT SUM(IIF(customers.Currency = 'Czech Koruna', 1, 0)) - SUM(IIF(customers.Currency = 'Euro', 1, 0)) FROM customers INNER JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE customers.Segment = 'SME';"}, {"question_id": 1487, "answer_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' AND T2.Date = '201310' AND T1.Segment = 'LAM' ORDER BY T2.Consumption DESC LIMIT 1;"}, {"question_id": 1488, "answer_sql": "SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' ORDER BY T2.Consumption DESC LIMIT 1;"}, {"question_id": 1489, "answer_sql": "SELECT SUM(t2.consumption) FROM customers AS t1 INNER JOIN yearmonth AS t2 ON t1.CustomerID = t2.CustomerID WHERE t1.Segment = 'KAM' AND t2.Date = '201305';"}, {"question_id": 1490, "answer_sql": "SELECT CAST(SUM(IIF(Consumption > 46.73, 1, 0)) AS REAL) * 100 / COUNT(CustomerID) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'LAM' );"}, {"question_id": 1491, "answer_sql": ""}, {"question_id": 1492, "answer_sql": "SELECT CAST(SUM(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM';"}, {"question_id": 1493, "answer_sql": "SELECT (SUM(IIF(Consumption > 528.3, 1, 0)) / COUNT(CustomerID)) * 100 FROM yearmonth WHERE Date = '201202';"}, {"question_id": 1494, "answer_sql": "SELECT CAST(SUM(IIF(Segment = 'Premium', 1, 0)) AS REAL) * 100 / COUNT(GasStationID) FROM gasstations WHERE Country = 'SVK';"}, {"question_id": 1495, "answer_sql": "SELECT CustomerID FROM yearmonth WHERE Date = '201309' AND Consumption = ( SELECT MAX(Consumption) FROM yearmonth WHERE Date = '201309' ) ORDER BY Consumption DESC LIMIT 1;"}, {"question_id": 1496, "answer_sql": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201309' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1;"}, {"question_id": 1497, "answer_sql": "SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '201206' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth WHERE Date = '201206' )"}, {"question_id": 1498, "answer_sql": "SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '2012%'"}, {"question_id": 1499, "answer_sql": "SELECT SUM(T2.Consumption) / 12 FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'EUR' GROUP BY T2.Date ORDER BY SUM(T2.Consumption) DESC LIMIT 1;"}, {"question_id": 1500, "answer_sql": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309'"}, {"question_id": 1501, "answer_sql": ""}, {"question_id": 1502, "answer_sql": "SELECT DISTINCT T2.ChainID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR';"}, {"question_id": 1503, "answer_sql": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID INNER JOIN customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.Currency = 'EUR';"}, {"question_id": 1504, "answer_sql": "SELECT AVG(Price) FROM transactions_1k WHERE Date LIKE '2012-01%';"}, {"question_id": 1505, "answer_sql": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID INNER JOIN yearmonth AS T4 ON T1.CustomerID = T4.CustomerID WHERE T1.Currency = 'EUR' AND T4.Consumption > 1000;"}, {"question_id": 1506, "answer_sql": "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Country = 'CZE';"}, {"question_id": 1507, "answer_sql": "SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11;"}, {"question_id": 1508, "answer_sql": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE' AND T1.Price > 1000;"}, {"question_id": 1509, "answer_sql": "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'CZE' AND transactions_1k.Date > '2012-01-01';"}, {"question_id": 1510, "answer_sql": "SELECT AVG(T2.Price) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T2.GasStationID = T1.GasStationID WHERE T1.Country = 'CZE';"}, {"question_id": 1511, "answer_sql": "SELECT AVG(Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR';"}, {"question_id": 1512, "answer_sql": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1"}, {"question_id": 1513, "answer_sql": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' ORDER BY CustomerID ASC LIMIT 1 );"}, {"question_id": 1514, "answer_sql": "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Time = '16:25:00'"}, {"question_id": 1515, "answer_sql": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00'"}, {"question_id": 1516, "answer_sql": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T2.Currency = 'EUR' AND T1.Date = '2012-08-26' AND T1.Time < '13:00:00';"}, {"question_id": 1517, "answer_sql": "SELECT T1.Segment FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = ( SELECT MIN(Date) FROM transactions_1k );"}, {"question_id": 1518, "answer_sql": "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00'"}, {"question_id": 1519, "answer_sql": "SELECT T1.ProductID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'"}, {"question_id": 1520, "answer_sql": ""}, {"question_id": 1521, "answer_sql": "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-26' AND T1.Time BETWEEN '8:00-9:00' AND '9:00' AND T2.Country = 'CZE';"}, {"question_id": 1522, "answer_sql": ""}, {"question_id": 1523, "answer_sql": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.CardID = 667467"}, {"question_id": 1524, "answer_sql": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Price = 548.4;"}, {"question_id": 1525, "answer_sql": "SELECT CAST(SUM(IIF(T2.Currency = 'EUR', 1, 0)) AS REAL) * 100 / COUNT(T1.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25';"}, {"question_id": 1526, "answer_sql": "SELECT (SUM(IIF(T1.Date = '2012-08-24', T1.Price, 0)) - SUM(IIF(T1.Date = '2013-08-24', T1.Price, 0))) / SUM(IIF(T1.Date = '2012-08-24', T1.Price, 0)) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8;"}, {"question_id": 1527, "answer_sql": "SELECT gasstations.Country, SUM(transactions_1k.Price * transactions_1k.Amount) AS revenue FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID GROUP BY gasstations.GasStationID ORDER BY revenue DESC LIMIT 1;"}, {"question_id": 1528, "answer_sql": "SELECT CAST(SUM(CASE WHEN T2.Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.CustomerID) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T2.CustomerID = T1.CustomerID INNER JOIN gasstations AS T3 ON T3.GasStationID = T1.GasStationID WHERE T3.Country = 'SVK';"}, {"question_id": 1529, "answer_sql": "SELECT SUM(t1.Price) FROM transactions_1k AS t1 INNER JOIN gasstations AS t2 ON t1.GasStationID = t2.GasStationID WHERE t1.CustomerID = 38508 UNION SELECT SUM(t3.Price) FROM transactions_1k AS t3 INNER JOIN yearmonth AS t4 ON t3.CustomerID = t4.CustomerID WHERE t4.Date = '201201' AND t3.CustomerID = 38508;"}, {"question_id": 1530, "answer_sql": "SELECT T1.Description FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.ProductID = T2.ProductID GROUP BY T2.ProductID ORDER BY SUM(T2.Amount) DESC LIMIT 5;"}, {"question_id": 1531, "answer_sql": ""}, {"question_id": 1532, "answer_sql": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 ORDER BY T2.Price DESC LIMIT 1;"}, {"question_id": 1533, "answer_sql": "SELECT T1.Date, T1.Consumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.ProductID = 5 AND T2.Price / T2.Amount > 29 AND T1.Date LIKE '%201208%'"}]