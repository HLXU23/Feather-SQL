[{"question_id": 0, "answer_sql": "SELECT count(*) FROM club"}, {"question_id": 1, "answer_sql": "SELECT count(*) FROM club"}, {"question_id": 2, "answer_sql": "SELECT Name FROM club ORDER BY Name ASC"}, {"question_id": 3, "answer_sql": "SELECT Name FROM club ORDER BY Name"}, {"question_id": 4, "answer_sql": "SELECT Manager , Captain FROM club"}, {"question_id": 5, "answer_sql": "SELECT Manager , Captain FROM club"}, {"question_id": 6, "answer_sql": "SELECT Name FROM club WHERE Manufacturer != Nike"}, {"question_id": 7, "answer_sql": "SELECT Name FROM club WHERE Manufacturer != Nike"}, {"question_id": 8, "answer_sql": "SELECT Name FROM player ORDER BY Wins_count ASC"}, {"question_id": 9, "answer_sql": "SELECT Name FROM player ORDER BY Wins_count ASC"}, {"question_id": 10, "answer_sql": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1"}, {"question_id": 11, "answer_sql": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1"}, {"question_id": 12, "answer_sql": "SELECT DISTINCT Country FROM player WHERE Earnings > 1200000"}, {"question_id": 13, "answer_sql": "SELECT Country FROM player WHERE Earnings > 1200000"}, {"question_id": 14, "answer_sql": "SELECT Country FROM player WHERE Earnings = (SELECT max(Earnings) FROM player WHERE Wins_count > 2)"}, {"question_id": 15, "answer_sql": "SELECT country FROM player WHERE Wins_count > 2 ORDER BY Earnings DESC LIMIT 1"}, {"question_id": 16, "answer_sql": "SELECT player.Name , club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID"}, {"question_id": 17, "answer_sql": "SELECT player.Name , club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID"}, {"question_id": 18, "answer_sql": "SELECT club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID WHERE player.Wins_count > 2"}, {"question_id": 19, "answer_sql": "SELECT club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID WHERE player.Wins_count > 2"}, {"question_id": 20, "answer_sql": "SELECT player.Name FROM club JOIN player ON club.Manager = player.Player_ID WHERE club.Name = Sam Allardyce"}, {"question_id": 21, "answer_sql": "SELECT player.Name FROM club JOIN player ON club.Manager = player.Player_ID WHERE club.Name = Sam Allardyce"}, {"question_id": 22, "answer_sql": "SELECT club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID GROUP BY club.Name ORDER BY avg(player.Earnings) DESC"}, {"question_id": 23, "answer_sql": "SELECT club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID GROUP BY club.Name ORDER BY avg(player.Earnings) DESC"}, {"question_id": 24, "answer_sql": "SELECT Manufacturer , count(*) FROM club GROUP BY Manufacturer"}, {"question_id": 25, "answer_sql": "SELECT Manufacturer , count(*) FROM club GROUP BY Manufacturer"}, {"question_id": 26, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 27, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 28, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING count(*) > 1"}, {"question_id": 29, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING count(*) > 1"}, {"question_id": 30, "answer_sql": "SELECT Country FROM player GROUP BY Country HAVING count(*) > 1"}, {"question_id": 31, "answer_sql": "SELECT Country FROM player GROUP BY Country HAVING count(*) > 1"}, {"question_id": 32, "answer_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"}, {"question_id": 33, "answer_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"}, {"question_id": 34, "answer_sql": "SELECT Country FROM player WHERE Earnings > 1400000 INTERSECT SELECT Country FROM player WHERE Earnings < 1100000"}, {"question_id": 35, "answer_sql": "SELECT Country FROM player WHERE Earnings > 1400000 INTERSECT SELECT Country FROM player WHERE Earnings < 1100000"}, {"question_id": 36, "answer_sql": "SELECT count(DISTINCT Country) FROM player"}, {"question_id": 37, "answer_sql": "SELECT count(DISTINCT Country) FROM player"}, {"question_id": 38, "answer_sql": "SELECT Earnings FROM player WHERE Country = Australia OR Country = Zimbabwe"}, {"question_id": 39, "answer_sql": "SELECT Earnings FROM player WHERE Country = Australia OR Country = Zimbabwe"}, {"question_id": 40, "answer_sql": "SELECT Orders.customer_id , Customers.customer_first_name , Customers.customer_last_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY Orders.customer_id HAVING count(*) > 2 INTERSECT SELECT Orders.customer_id , Customers.customer_first_name , Customers.customer_last_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.customer_id HAVING count(*) >= 3"}, {"question_id": 41, "answer_sql": "SELECT Orders.customer_id , Customers.customer_first_name , Customers.customer_last_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY Orders.customer_id HAVING count(*) > 2 INTERSECT SELECT Orders.customer_id , Customers.customer_first_name , Customers.customer_last_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.customer_id HAVING count(*) >= 3"}, {"question_id": 42, "answer_sql": "SELECT order_id , order_status_code , count(*) FROM Orders GROUP BY order_id , order_status_code"}, {"question_id": 43, "answer_sql": "SELECT order_id , count(*) , order_status_code FROM Orders GROUP BY order_status_code"}, {"question_id": 44, "answer_sql": "SELECT date_order_placed FROM Orders GROUP BY date_order_placed HAVING count(*) > 1 UNION SELECT date_order_placed FROM Orders ORDER BY date_order_placed LIMIT 1"}, {"question_id": 45, "answer_sql": "SELECT order_date FROM Orders ORDER BY order_date ASC LIMIT 1 UNION SELECT order_date FROM Orders GROUP BY order_date HAVING count(*) > 1"}, {"question_id": 46, "answer_sql": "SELECT customer_first_name , customer_middle_initial , customer_last_name FROM Customers EXCEPT SELECT customer_first_name , customer_middle_initial , customer_last_name FROM Orders"}, {"question_id": 47, "answer_sql": "SELECT customer_first_name , customer_last_name , customer_middle_initial FROM Customers EXCEPT SELECT customer_first_name , customer_last_name , customer_middle_initial FROM Orders"}, {"question_id": 48, "answer_sql": "SELECT product_id , product_name , product_price , product_color FROM Products EXCEPT SELECT product_id , product_name , product_price , product_color FROM Order_Items GROUP BY product_id HAVING count(*) >= 2"}, {"question_id": 49, "answer_sql": "SELECT product_id , product_name , product_price , product_color FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*) < 2)"}, {"question_id": 50, "answer_sql": "SELECT order_id , date_order_placed FROM Orders GROUP BY order_id HAVING count(*) >= 2"}, {"question_id": 51, "answer_sql": "SELECT order_id , date_order_placed FROM Orders GROUP BY order_id HAVING count(*) >= 2"}, {"question_id": 52, "answer_sql": "SELECT product_id , product_name , product_price FROM Products ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 53, "answer_sql": "SELECT product_id , product_name , product_price FROM Products ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 54, "answer_sql": "SELECT order_id , sum(product_price) FROM Order_Items GROUP BY order_id ORDER BY sum(product_price) LIMIT 1"}, {"question_id": 55, "answer_sql": "SELECT order_id , sum(product_price) FROM Order_Items GROUP BY order_id ORDER BY sum(product_price) LIMIT 1"}, {"question_id": 56, "answer_sql": "SELECT payment_method_code FROM Customer_Payment_Methods GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 57, "answer_sql": "SELECT payment_method_code FROM Customer_Payment_Methods GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 58, "answer_sql": "SELECT gender_code , count(*) FROM Customers GROUP BY gender_code"}, {"question_id": 59, "answer_sql": "SELECT gender_code , count(*) FROM Customers GROUP BY gender_code"}, {"question_id": 60, "answer_sql": "SELECT gender_code , count(*) FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY gender_code"}, {"question_id": 61, "answer_sql": "SELECT gender_code , count(*) FROM Customers GROUP BY gender_code"}, {"question_id": 62, "answer_sql": "SELECT customer_first_name , customer_middle_initial , customer_last_name , payment_method_code FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id"}, {"question_id": 63, "answer_sql": "SELECT customer_first_name , customer_middle_initial , customer_last_name , payment_method_code FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id"}, {"question_id": 64, "answer_sql": "SELECT invoice_status_code , invoice_date , shipment_date FROM Shipments"}, {"question_id": 65, "answer_sql": "SELECT invoice_status_code , invoice_date , shipment_date FROM Invoices"}, {"question_id": 66, "answer_sql": "SELECT shipments.shipment_date , Products.product_name FROM Shipments JOIN Order_Items ON Shipments.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id"}, {"question_id": 67, "answer_sql": "SELECT Products.product_name , Shipments.shipment_date FROM Products JOIN Shipments ON Products.product_id = Shipments.order_id"}, {"question_id": 68, "answer_sql": "SELECT shipment_tracking_number , order_item_status_code FROM Shipment_Items JOIN Orders ON Shipment_Items.order_id = Orders.order_id WHERE Orders.order_status_code = shipped"}, {"question_id": 69, "answer_sql": "SELECT order_item_status_code , shipment_tracking_number FROM Shipment_Items"}, {"question_id": 70, "answer_sql": "SELECT Products.product_name , Products.product_color FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Shipments ON Order_Items.order_id = Shipments.order_id"}, {"question_id": 71, "answer_sql": "SELECT Products.product_name , Products.product_color FROM Products JOIN Shipment_Items ON Products.product_id = Shipment_Items.order_item_id"}, {"question_id": 72, "answer_sql": "SELECT DISTINCT product_name , product_price , product_description FROM Products JOIN Orders JOIN Customer_Payment_Methods JOIN Customers ON Products.product_id = Orders.order_id AND Orders.customer_id = Customer_Payment_Methods.customer_id AND Customer_Payment_Methods.payment_method_code = CC AND Customers.gender_code = F"}, {"question_id": 73, "answer_sql": "SELECT DISTINCT product_name , product_price , product_description FROM Products JOIN Orders ON Products.product_id = Orders.product_id JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Customers.gender_code = F"}, {"question_id": 74, "answer_sql": "SELECT invoice_status_code FROM Invoices EXCEPT SELECT invoice_status_code FROM Shipments"}, {"question_id": 75, "answer_sql": "SELECT invoice_status_code FROM Invoices WHERE invoice_status_code != shipped"}, {"question_id": 76, "answer_sql": "SELECT order_id , date_order_placed , sum(product_price) FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY order_id"}, {"question_id": 77, "answer_sql": "SELECT order_id , date_order_placed , sum(product_price) FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY order_id"}, {"question_id": 78, "answer_sql": "SELECT count(*) FROM Orders"}, {"question_id": 79, "answer_sql": "SELECT count(DISTINCT customer_id) FROM Orders"}, {"question_id": 80, "answer_sql": "SELECT count(DISTINCT order_item_status_code) FROM Order_Items"}, {"question_id": 81, "answer_sql": "SELECT count(DISTINCT order_item_status_code) FROM Order_Items"}, {"question_id": 82, "answer_sql": "SELECT count(DISTINCT payment_method_code) FROM Customer_Payment_Methods"}, {"question_id": 83, "answer_sql": "SELECT count(DISTINCT payment_method_code) FROM Customer_Payment_Methods"}, {"question_id": 84, "answer_sql": "SELECT login_name , login_password FROM Customers WHERE phone_number LIKE '+12%'"}, {"question_id": 85, "answer_sql": "SELECT login_name , login_password FROM Customers WHERE phone_number LIKE '+12%'"}, {"question_id": 86, "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE %Dell%"}, {"question_id": 87, "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE %Dell%"}, {"question_id": 88, "answer_sql": "SELECT product_price , product_size FROM Products WHERE product_price > (SELECT avg(product_price) FROM Products)"}, {"question_id": 89, "answer_sql": "SELECT product_price , product_size FROM Products WHERE product_price > (SELECT avg(product_price) FROM Products)"}, {"question_id": 90, "answer_sql": "SELECT count(*) FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items)"}, {"question_id": 91, "answer_sql": "SELECT count(*) FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items)"}, {"question_id": 92, "answer_sql": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payment_Methods)"}, {"question_id": 93, "answer_sql": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payment_Methods)"}, {"question_id": 94, "answer_sql": "SELECT order_status_code , date_order_placed FROM Orders"}, {"question_id": 95, "answer_sql": "SELECT order_status_code , date_order_placed FROM Orders"}, {"question_id": 96, "answer_sql": "SELECT address_line_1 , town_city , county FROM Customers WHERE country = USA"}, {"question_id": 97, "answer_sql": "SELECT address_line_1 , town_city , county FROM Customers WHERE country = United States"}, {"question_id": 98, "answer_sql": "SELECT customer_first_name , product_name FROM Orders JOIN Customer_Payment_Methods ON Orders.customer_id = Customer_Payment_Methods.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id"}, {"question_id": 99, "answer_sql": "SELECT Customers.customer_first_name , Products.product_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id"}, {"question_id": 100, "answer_sql": "SELECT count(*) FROM Shipments"}, {"question_id": 101, "answer_sql": "SELECT count(*) FROM Shipments"}, {"question_id": 102, "answer_sql": "SELECT avg(product_price) FROM Products"}, {"question_id": 103, "answer_sql": "SELECT avg(product_price) FROM Products"}, {"question_id": 104, "answer_sql": "SELECT avg(product_price) FROM Order_Items"}, {"question_id": 105, "answer_sql": "SELECT avg(product_price) FROM Order_Items"}, {"question_id": 106, "answer_sql": "SELECT email_address , town_city , county FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 107, "answer_sql": "SELECT email_address , town_city , county FROM Customers WHERE gender_code = (SELECT gender_code FROM Orders GROUP BY gender_code ORDER BY count(*) LIMIT 1)"}, {"question_id": 108, "answer_sql": "SELECT Orders.date_order_placed FROM Orders JOIN Customer_Payment_Methods ON Orders.customer_id = Customer_Payment_Methods.customer_id GROUP BY Orders.customer_id HAVING count(*) >= 2"}, {"question_id": 109, "answer_sql": "SELECT Orders.date_order_placed FROM Orders JOIN Customer_Payment_Methods ON Orders.customer_id = Customer_Payment_Methods.customer_id GROUP BY Orders.customer_id HAVING count(*) >= 2"}, {"question_id": 110, "answer_sql": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 111, "answer_sql": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 112, "answer_sql": "SELECT product_id , product_description FROM Products GROUP BY product_id HAVING count(*) > 3"}, {"question_id": 113, "answer_sql": "SELECT product_id , product_description FROM Products GROUP BY product_id HAVING count(*) > 3"}, {"question_id": 114, "answer_sql": "SELECT invoice_date , invoice_number FROM Shipments GROUP BY invoice_number HAVING count(*) >= 2"}, {"question_id": 115, "answer_sql": "SELECT Invoices.invoice_date , Invoices.invoice_number FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number GROUP BY Invoices.invoice_number HAVING count(*) >= 2"}, {"question_id": 116, "answer_sql": "SELECT shipment_tracking_number , shipment_date FROM Shipments"}, {"question_id": 117, "answer_sql": "SELECT shipment_tracking_number , shipment_date FROM Shipments"}, {"question_id": 118, "answer_sql": "SELECT product_color , product_description , product_size FROM Products WHERE product_price < (SELECT max(product_price) FROM Products)"}, {"question_id": 119, "answer_sql": "SELECT product_color , product_description , product_size FROM Products WHERE product_price != (SELECT max(product_price) FROM Products)"}, {"question_id": 120, "answer_sql": "SELECT Name FROM director WHERE Age > (SELECT avg(Age) FROM director)"}, {"question_id": 121, "answer_sql": "SELECT Name FROM director ORDER BY Age DESC LIMIT 1"}, {"question_id": 122, "answer_sql": "SELECT count(*) FROM channel WHERE Internet LIKE %bbc%"}, {"question_id": 123, "answer_sql": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel"}, {"question_id": 124, "answer_sql": "SELECT Title FROM program ORDER BY Start_Year DESC"}, {"question_id": 125, "answer_sql": "SELECT director.Name FROM director JOIN director_admin ON director.Director_ID = director_admin.Director_ID JOIN program ON director_admin.Channel_ID = program.Channel_ID GROUP BY director.Name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 126, "answer_sql": "SELECT director.Name , director.Age FROM director JOIN director_admin ON director.Director_ID = director_admin.Director_ID JOIN program ON director_admin.Channel_ID = program.Channel_ID GROUP BY director.Director_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 127, "answer_sql": "SELECT Title FROM program ORDER BY Start_Year DESC LIMIT 1"}, {"question_id": 128, "answer_sql": "SELECT channel.Name , channel.Internet FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY program.Channel_ID HAVING count(*) > 1"}, {"question_id": 129, "answer_sql": "SELECT channel.Name , count(*) FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY channel.Name"}, {"question_id": 130, "answer_sql": "SELECT count(*) FROM channel WHERE Channel_ID NOT IN (SELECT Channel_ID FROM program)"}, {"question_id": 131, "answer_sql": "SELECT director.Name FROM director JOIN program ON director.Director_ID = program.Director_ID WHERE program.Title = Dracula"}, {"question_id": 132, "answer_sql": "SELECT channel.Name , channel.Internet FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID JOIN director ON program.Director_ID = director.Director_ID GROUP BY program.Channel_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 133, "answer_sql": "SELECT Name FROM director WHERE Age BETWEEN 30 AND 60"}, {"question_id": 134, "answer_sql": "SELECT channel.Name FROM director JOIN director_admin ON director.Director_ID = director_admin.Director_ID JOIN channel ON channel.Channel_ID = director_admin.Channel_ID WHERE director.Age < 40 INTERSECT SELECT channel.Name FROM director JOIN director_admin ON director.Director_ID = director_admin.Director_ID JOIN channel ON channel.Channel_ID = director_admin.Channel_ID WHERE director.Age > 60"}, {"question_id": 135, "answer_sql": "SELECT Channel_ID , Name FROM channel WHERE Channel_ID NOT IN (SELECT Channel_ID FROM program JOIN director ON program.Director_ID = director.Director_ID WHERE director.Name = Hank Baskett )"}, {"question_id": 136, "answer_sql": "SELECT count(*) FROM radio"}, {"question_id": 137, "answer_sql": "SELECT Transmitter FROM radio ORDER BY ERP_kW ASC"}, {"question_id": 138, "answer_sql": "SELECT tv_show_name , Original_Airdate FROM tv_show"}, {"question_id": 139, "answer_sql": "SELECT Station_name FROM city_channel WHERE Affiliation != ABC"}, {"question_id": 140, "answer_sql": "SELECT Transmitter FROM radio WHERE ERP_kW > 150 OR ERP_kW < 30"}, {"question_id": 141, "answer_sql": "SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1"}, {"question_id": 142, "answer_sql": "SELECT avg(ERP_kW) FROM radio"}, {"question_id": 143, "answer_sql": "SELECT Affiliation , count(*) FROM city_channel GROUP BY Affiliation"}, {"question_id": 144, "answer_sql": "SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 145, "answer_sql": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING count(*) > 3"}, {"question_id": 146, "answer_sql": "SELECT City , Station_name FROM city_channel ORDER BY Station_name ASC"}, {"question_id": 147, "answer_sql": "SELECT Transmitter , City FROM city_channel_radio"}, {"question_id": 148, "answer_sql": "SELECT Transmitter , Station_name FROM city_channel_radio ORDER BY ERP_kW DESC"}, {"question_id": 149, "answer_sql": "SELECT Transmitter , count(*) FROM city_channel_radio GROUP BY Transmitter"}, {"question_id": 150, "answer_sql": "SELECT DISTINCT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)"}, {"question_id": 151, "answer_sql": "SELECT Model FROM vehicle WHERE Top_Speed = (SELECT max(Top_Speed) FROM vehicle WHERE Power > 6000)"}, {"question_id": 152, "answer_sql": "SELECT Model FROM vehicle WHERE Power > 6000 ORDER BY Top_Speed DESC LIMIT 1"}, {"question_id": 153, "answer_sql": "SELECT Name FROM driver WHERE Citizenship = United States"}, {"question_id": 154, "answer_sql": "SELECT Name FROM driver WHERE Citizenship = USA"}, {"question_id": 155, "answer_sql": "SELECT Driver_ID , count(*) FROM vehicle_driver GROUP BY Driver_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 156, "answer_sql": "SELECT Driver_ID , count(*) FROM vehicle_driver GROUP BY Driver_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 157, "answer_sql": "SELECT max(Power) , avg(Power) FROM vehicle WHERE Builder = Zhuzhou ;"}, {"question_id": 158, "answer_sql": "SELECT max(Power) , avg(Power) FROM vehicle WHERE Builder = Zhuzhou ;"}, {"question_id": 159, "answer_sql": "SELECT Vehicle_ID FROM vehicle_driver GROUP BY Vehicle_ID ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 160, "answer_sql": "SELECT Vehicle_ID FROM vehicle_driver GROUP BY Vehicle_ID ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 161, "answer_sql": "SELECT Top_Speed , Power FROM vehicle WHERE Build_Year = 1996"}, {"question_id": 162, "answer_sql": "SELECT Top_Speed , Power FROM vehicle WHERE Build_Year = 1996"}, {"question_id": 163, "answer_sql": "SELECT Build_Year , Model , Builder FROM vehicle"}, {"question_id": 164, "answer_sql": "SELECT Build_Year , Model , Builder FROM vehicle"}, {"question_id": 165, "answer_sql": "SELECT count(*) FROM vehicle_driver JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Build_Year = 2012"}, {"question_id": 166, "answer_sql": "SELECT count(DISTINCT Driver_ID) FROM vehicle_driver JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Build_Year = 2012"}, {"question_id": 167, "answer_sql": "SELECT count(*) FROM driver WHERE Racing_Series = NASCAR ;"}, {"question_id": 168, "answer_sql": "SELECT count(*) FROM driver WHERE Racing_Series = NASCAR ;"}, {"question_id": 169, "answer_sql": "SELECT avg(Top_Speed) FROM vehicle"}, {"question_id": 170, "answer_sql": "SELECT avg(Top_Speed) FROM vehicle"}, {"question_id": 171, "answer_sql": "SELECT DISTINCT driver.Name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Power > 5000"}, {"question_id": 172, "answer_sql": "SELECT driver.Name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Power > 5000"}, {"question_id": 173, "answer_sql": "SELECT Model FROM vehicle WHERE Total_Production > 100 OR Top_Speed > 150"}, {"question_id": 174, "answer_sql": "SELECT Model FROM vehicle WHERE Total_Production > 100 OR Top_Speed > 150"}, {"question_id": 175, "answer_sql": "SELECT Model , Build_Year FROM vehicle WHERE Model LIKE %DJ%"}, {"question_id": 176, "answer_sql": "SELECT Model , Build_Year FROM vehicle WHERE Model LIKE %DJ%"}, {"question_id": 177, "answer_sql": "SELECT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver)"}, {"question_id": 178, "answer_sql": "SELECT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver)"}, {"question_id": 179, "answer_sql": "SELECT Vehicle_ID , Model FROM vehicle WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle_driver GROUP BY Vehicle_ID HAVING count(*) >= 2) OR Builder = 'Ziyang'"}, {"question_id": 180, "answer_sql": "SELECT Vehicle_ID , Model FROM vehicle_driver GROUP BY Vehicle_ID HAVING count(*) = 2 UNION SELECT Vehicle_ID , Model FROM vehicle WHERE Builder = Ziyang"}, {"question_id": 181, "answer_sql": "SELECT Vehicle_ID , Model FROM vehicle_driver GROUP BY Vehicle_ID HAVING count(*) > 2 UNION SELECT Vehicle_ID , Model FROM vehicle_driver JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE driver.Name = Jeff Gordon"}, {"question_id": 182, "answer_sql": "SELECT Vehicle.Vehicle_ID , Vehicle.Model FROM vehicle_driver JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID JOIN driver ON vehicle_driver.Driver_ID = driver.Driver_ID WHERE driver.Name = Jeff Gordon OR count(*) > 2"}, {"question_id": 183, "answer_sql": "SELECT count(*) FROM vehicle WHERE Top_Speed = (SELECT max(Top_Speed) FROM vehicle)"}, {"question_id": 184, "answer_sql": "SELECT count(*) FROM vehicle WHERE Top_Speed = (SELECT max(Top_Speed) FROM vehicle)"}, {"question_id": 185, "answer_sql": "SELECT Name FROM driver ORDER BY Name"}, {"question_id": 186, "answer_sql": "SELECT Name FROM driver ORDER BY Name"}, {"question_id": 187, "answer_sql": "SELECT Racing_Series , count(*) FROM driver GROUP BY Racing_Series"}, {"question_id": 188, "answer_sql": "SELECT Racing_Series , count(*) FROM driver GROUP BY Racing_Series"}, {"question_id": 189, "answer_sql": "SELECT driver.Name , driver.Citizenship FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Model = DJ1"}, {"question_id": 190, "answer_sql": "SELECT driver.Name , driver.Citizenship FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Model = DJ1"}, {"question_id": 191, "answer_sql": "SELECT count(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver)"}, {"question_id": 192, "answer_sql": "SELECT count(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver)"}, {"question_id": 193, "answer_sql": "SELECT count(*) FROM Exams"}, {"question_id": 194, "answer_sql": "SELECT count(*) FROM Exams"}, {"question_id": 195, "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC"}, {"question_id": 196, "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code"}, {"question_id": 197, "answer_sql": "SELECT Exam_Name , Exam_Date FROM Exams WHERE Subject_Code != Database"}, {"question_id": 198, "answer_sql": "SELECT Exam_Date , Exam_Name FROM Exams WHERE Subject_Code != Database"}, {"question_id": 199, "answer_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE %data% ORDER BY Exam_Date DESC"}, {"question_id": 200, "answer_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE %data% ORDER BY Exam_Date DESC"}, {"question_id": 201, "answer_sql": "SELECT Type_of_Question_Code , count(*) FROM Questions GROUP BY Type_of_Question_Code"}, {"question_id": 202, "answer_sql": "SELECT Type_of_Question_Code , count(*) FROM Questions GROUP BY Type_of_Question_Code"}, {"question_id": 203, "answer_sql": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments = Normal"}, {"question_id": 204, "answer_sql": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments = Normal"}, {"question_id": 205, "answer_sql": "SELECT count(DISTINCT Comments) FROM Student_Answers"}, {"question_id": 206, "answer_sql": "SELECT count(DISTINCT Comments) FROM Student_Answers"}, {"question_id": 207, "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY count(*) DESC"}, {"question_id": 208, "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY count(*) DESC"}, {"question_id": 209, "answer_sql": "SELECT Students.First_Name , Student_Answers.Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID"}, {"question_id": 210, "answer_sql": "SELECT Students.First_Name , Student_Answers.Date_of_Answer FROM Student_Answers JOIN Students ON Student_Answers.Student_ID = Students.Student_ID"}, {"question_id": 211, "answer_sql": "SELECT Email_Adress , Date_of_Answer FROM Student_Answers ORDER BY Date_of_Answer DESC"}, {"question_id": 212, "answer_sql": "SELECT Students.Email_Adress , Student_Answers.Date_of_Answer FROM Student_Answers JOIN Students ON Student_Answers.Student_ID = Students.Student_ID ORDER BY Student_Answers.Date_of_Answer DESC"}, {"question_id": 213, "answer_sql": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 214, "answer_sql": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 215, "answer_sql": "SELECT First_Name FROM Student_Answers GROUP BY Student_ID HAVING count(*) >= 2"}, {"question_id": 216, "answer_sql": "SELECT First_Name FROM Student_Answers GROUP BY Student_ID HAVING count(*) >= 2"}, {"question_id": 217, "answer_sql": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 218, "answer_sql": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 219, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU != M"}, {"question_id": 220, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU != M"}, {"question_id": 221, "answer_sql": "SELECT Gender_MFU , count(*) FROM Students GROUP BY Gender_MFU"}, {"question_id": 222, "answer_sql": "SELECT Gender_MFU , count(*) FROM Students GROUP BY Gender_MFU"}, {"question_id": 223, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU = F OR Gender_MFU = M"}, {"question_id": 224, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU = F OR Gender_MFU = M"}, {"question_id": 225, "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)"}, {"question_id": 226, "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)"}, {"question_id": 227, "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = Normal INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = Absent"}, {"question_id": 228, "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = Normal INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = Absent"}, {"question_id": 229, "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*) >= 3"}, {"question_id": 230, "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*) >= 3"}, {"question_id": 231, "answer_sql": "SELECT * FROM Students"}, {"question_id": 232, "answer_sql": "SELECT * FROM Students"}, {"question_id": 233, "answer_sql": "SELECT count(*) FROM Addresses"}, {"question_id": 234, "answer_sql": "SELECT count(*) FROM Addresses"}, {"question_id": 235, "answer_sql": "SELECT address_id , address_details FROM Addresses"}, {"question_id": 236, "answer_sql": "SELECT address_id , address_details FROM Addresses"}, {"question_id": 237, "answer_sql": "SELECT count(*) FROM Products"}, {"question_id": 238, "answer_sql": "SELECT count(*) FROM Products"}, {"question_id": 239, "answer_sql": "SELECT product_id , product_type_code , product_name FROM Products"}, {"question_id": 240, "answer_sql": "SELECT product_id , product_type_code , product_name FROM Products"}, {"question_id": 241, "answer_sql": "SELECT product_price FROM Products WHERE product_name = Monitor ;"}, {"question_id": 242, "answer_sql": "SELECT product_price FROM Products WHERE product_name = Monitor ;"}, {"question_id": 243, "answer_sql": "SELECT min(product_price) , avg(product_price) , max(product_price) FROM Products"}, {"question_id": 244, "answer_sql": "SELECT min(product_price) , avg(product_price) , max(product_price) FROM Products"}, {"question_id": 245, "answer_sql": "SELECT avg(product_price) FROM Products WHERE product_type_code = Clothes"}, {"question_id": 246, "answer_sql": "SELECT avg(product_price) FROM Products WHERE product_type_code = Clothes ;"}, {"question_id": 247, "answer_sql": "SELECT count(*) FROM Products WHERE product_type_code = hardware"}, {"question_id": 248, "answer_sql": "SELECT count(*) FROM Products WHERE product_type_code = Hardware"}, {"question_id": 249, "answer_sql": "SELECT product_name FROM Products WHERE product_price > (SELECT avg(product_price) FROM Products)"}, {"question_id": 250, "answer_sql": "SELECT product_name FROM Products WHERE product_price > (SELECT avg(product_price) FROM Products)"}, {"question_id": 251, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = hardware AND product_price > (SELECT avg(product_price) FROM Products WHERE product_type_code = hardware )"}, {"question_id": 252, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = Hardware AND product_price > (SELECT avg(product_price) FROM Products WHERE product_type_code = Hardware )"}, {"question_id": 253, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = Clothes ORDER BY product_price DESC LIMIT 1"}, {"question_id": 254, "answer_sql": "SELECT product_name FROM Products WHERE product_price = (SELECT max(product_price) FROM Products)"}, {"question_id": 255, "answer_sql": "SELECT product_id , product_name FROM Products WHERE product_type_code = Hardware ORDER BY product_price LIMIT 1"}, {"question_id": 256, "answer_sql": "SELECT product_id , product_name FROM Products ORDER BY product_price LIMIT 1"}, {"question_id": 257, "answer_sql": "SELECT product_name FROM Products ORDER BY product_price DESC"}, {"question_id": 258, "answer_sql": "SELECT product_name FROM Products ORDER BY product_price DESC"}, {"question_id": 259, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = hardware ORDER BY product_price"}, {"question_id": 260, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = Hardware ORDER BY product_price"}, {"question_id": 261, "answer_sql": "SELECT product_type_code , count(*) FROM Products GROUP BY product_type_code"}, {"question_id": 262, "answer_sql": "SELECT product_type_code , count(*) FROM Products GROUP BY product_type_code"}, {"question_id": 263, "answer_sql": "SELECT product_type_code , avg(product_price) FROM Products GROUP BY product_type_code"}, {"question_id": 264, "answer_sql": "SELECT product_type_code , avg(product_price) FROM Products GROUP BY product_type_code"}, {"question_id": 265, "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*) >= 2"}, {"question_id": 266, "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*) >= 2"}, {"question_id": 267, "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 268, "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 269, "answer_sql": "SELECT count(*) FROM Customers"}, {"question_id": 270, "answer_sql": "SELECT count(*) FROM Customers"}, {"question_id": 271, "answer_sql": "SELECT customer_id , customer_name FROM Customers"}, {"question_id": 272, "answer_sql": "SELECT customer_id , customer_name FROM Customers"}, {"question_id": 273, "answer_sql": "SELECT customer_address , customer_phone , customer_email FROM Customers WHERE customer_name = Jeromy ;"}, {"question_id": 274, "answer_sql": "SELECT customer_address , customer_phone , customer_email FROM Customers WHERE customer_name = Jeromy"}, {"question_id": 275, "answer_sql": "SELECT payment_method_code , count(*) FROM Customers GROUP BY payment_method_code"}, {"question_id": 276, "answer_sql": "SELECT payment_method_code , count(*) FROM Customers GROUP BY payment_method_code"}, {"question_id": 277, "answer_sql": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 278, "answer_sql": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 279, "answer_sql": "SELECT customer_name FROM Customers GROUP BY payment_method_code ORDER BY count(*) LIMIT 1"}, {"question_id": 280, "answer_sql": "SELECT customer_name FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 281, "answer_sql": "SELECT payment_method_code , customer_number FROM Customers WHERE customer_name = Jeromy"}, {"question_id": 282, "answer_sql": "SELECT payment_method_code , customer_number FROM Customers WHERE customer_name = Jeromy"}, {"question_id": 283, "answer_sql": "SELECT DISTINCT payment_method_code FROM Customers"}, {"question_id": 284, "answer_sql": "SELECT DISTINCT payment_method_code FROM Customers"}, {"question_id": 285, "answer_sql": "SELECT product_id , product_type_code FROM Products ORDER BY product_name"}, {"question_id": 286, "answer_sql": "SELECT product_id , product_type_code FROM Products ORDER BY product_name"}, {"question_id": 287, "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 288, "answer_sql": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 289, "answer_sql": "SELECT count(*) FROM Customer_Orders"}, {"question_id": 290, "answer_sql": "SELECT count(*) FROM Customer_Orders"}, {"question_id": 291, "answer_sql": "SELECT order_id , order_date , order_status_code FROM Customer_Orders WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_name = Jeromy )"}, {"question_id": 292, "answer_sql": "SELECT order_id , order_date , order_status_code FROM Customer_Orders WHERE customer_id = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"}, {"question_id": 293, "answer_sql": "SELECT customer_name , customer_id , count(*) FROM Customer_Orders GROUP BY customer_id"}, {"question_id": 294, "answer_sql": "SELECT customer_name , customer_id , count(*) FROM Customer_Orders GROUP BY customer_id"}, {"question_id": 295, "answer_sql": "SELECT customer_id , customer_name , customer_phone , customer_email FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 296, "answer_sql": "SELECT customer_id , customer_name , customer_phone , customer_email FROM Customers ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 297, "answer_sql": "SELECT order_status_code , count(*) FROM Customer_Orders GROUP BY order_status_code"}, {"question_id": 298, "answer_sql": "SELECT order_status_code , count(*) FROM Customer_Orders GROUP BY order_status_code"}, {"question_id": 299, "answer_sql": "SELECT order_status_code FROM Customer_Orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 300, "answer_sql": "SELECT order_status_code FROM Customer_Orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 301, "answer_sql": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders)"}, {"question_id": 302, "answer_sql": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders)"}, {"question_id": 303, "answer_sql": "SELECT product_name FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items)"}, {"question_id": 304, "answer_sql": "SELECT product_name FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items)"}, {"question_id": 305, "answer_sql": "SELECT count(*) FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_name = Monitor"}, {"question_id": 306, "answer_sql": "SELECT sum(order_quantity) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id WHERE product_type_code = Monitor"}, {"question_id": 307, "answer_sql": "SELECT count(*) FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE product_name = Monitor"}, {"question_id": 308, "answer_sql": "SELECT count(DISTINCT customer_id) FROM Customer_Orders JOIN Products ON Customer_Orders.order_id = Products.product_id WHERE product_type_code = Monitor"}, {"question_id": 309, "answer_sql": "SELECT count(*) FROM Customer_Orders"}, {"question_id": 310, "answer_sql": "SELECT count(DISTINCT customer_id) FROM Customer_Orders"}, {"question_id": 311, "answer_sql": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_Orders"}, {"question_id": 312, "answer_sql": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_Orders"}, {"question_id": 313, "answer_sql": "SELECT order_date , order_id FROM Order_Items WHERE order_quantity > 6 UNION SELECT order_date , order_id FROM Order_Items GROUP BY order_id HAVING count(*) > 3"}, {"question_id": 314, "answer_sql": "SELECT order_id , order_date FROM Customer_Orders WHERE order_quantity > 6 OR order_id IN (SELECT order_id FROM Order_Items GROUP BY order_id HAVING count(*) > 3)"}, {"question_id": 315, "answer_sql": "SELECT count(*) FROM building"}, {"question_id": 316, "answer_sql": "SELECT count(*) FROM building"}, {"question_id": 317, "answer_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC"}, {"question_id": 318, "answer_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC"}, {"question_id": 319, "answer_sql": "SELECT Address FROM building ORDER BY Completed_Year DESC"}, {"question_id": 320, "answer_sql": "SELECT Address FROM building ORDER BY Completed_Year DESC"}, {"question_id": 321, "answer_sql": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != 1980"}, {"question_id": 322, "answer_sql": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != 1980"}, {"question_id": 323, "answer_sql": "SELECT avg(Population) FROM region"}, {"question_id": 324, "answer_sql": "SELECT avg(Population) FROM region"}, {"question_id": 325, "answer_sql": "SELECT Name FROM region ORDER BY Name ASC"}, {"question_id": 326, "answer_sql": "SELECT Name FROM region ORDER BY Name"}, {"question_id": 327, "answer_sql": "SELECT Capital FROM region WHERE Area > 10000"}, {"question_id": 328, "answer_sql": "SELECT Capital FROM region WHERE Area > 10000"}, {"question_id": 329, "answer_sql": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1"}, {"question_id": 330, "answer_sql": "SELECT Name , Capital FROM region ORDER BY Population DESC LIMIT 1"}, {"question_id": 331, "answer_sql": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5"}, {"question_id": 332, "answer_sql": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5"}, {"question_id": 333, "answer_sql": "SELECT building.Name , region.Name FROM building JOIN region ON building.Region_ID = region.Region_ID"}, {"question_id": 334, "answer_sql": "SELECT building.Name , region.Name FROM building JOIN region ON building.Region_ID = region.Region_ID"}, {"question_id": 335, "answer_sql": "SELECT region.Name FROM region JOIN building ON region.Region_ID = building.Region_ID GROUP BY region.Name HAVING count(*) > 1"}, {"question_id": 336, "answer_sql": "SELECT region.Name FROM region JOIN building ON region.Region_ID = building.Region_ID GROUP BY region.Region_ID HAVING count(*) > 1"}, {"question_id": 337, "answer_sql": "SELECT region.Capital FROM region JOIN building ON region.Region_ID = building.Region_ID GROUP BY region.Capital ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 338, "answer_sql": "SELECT Capital FROM region ORDER BY Area DESC LIMIT 1"}, {"question_id": 339, "answer_sql": "SELECT building.Address , region.Capital FROM building JOIN region ON building.Region_ID = region.Region_ID"}, {"question_id": 340, "answer_sql": "SELECT building.Address , region.Name FROM building JOIN region ON building.Region_ID = region.Region_ID"}, {"question_id": 341, "answer_sql": "SELECT Number_of_Stories FROM building WHERE Region_ID = (SELECT Region_ID FROM region WHERE Name = Abruzzo );"}, {"question_id": 342, "answer_sql": "SELECT Number_of_Stories FROM building WHERE Region_ID = (SELECT Region_ID FROM region WHERE Name = Abruzzo );"}, {"question_id": 343, "answer_sql": "SELECT Completed_Year , count(*) FROM building GROUP BY Completed_Year"}, {"question_id": 344, "answer_sql": "SELECT Completed_Year , count(*) FROM building GROUP BY Completed_Year"}, {"question_id": 345, "answer_sql": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 346, "answer_sql": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 347, "answer_sql": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)"}, {"question_id": 348, "answer_sql": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)"}, {"question_id": 349, "answer_sql": "SELECT Completed_Year FROM building WHERE Number_of_Stories > 20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories < 15"}, {"question_id": 350, "answer_sql": "SELECT Completed_Year FROM building WHERE Number_of_Stories > 20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories < 15"}, {"question_id": 351, "answer_sql": "SELECT DISTINCT Address FROM building"}, {"question_id": 352, "answer_sql": "SELECT DISTINCT Address FROM building"}, {"question_id": 353, "answer_sql": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC"}, {"question_id": 354, "answer_sql": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC"}, {"question_id": 355, "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details"}, {"question_id": 356, "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details"}, {"question_id": 357, "answer_sql": "SELECT count(*) FROM Services"}, {"question_id": 358, "answer_sql": "SELECT count(*) FROM Services"}, {"question_id": 359, "answer_sql": "SELECT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 360, "answer_sql": "SELECT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 361, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = Hardy Kutch"}, {"question_id": 362, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = Hardy Kutch"}, {"question_id": 363, "answer_sql": "SELECT Service_Details FROM Services GROUP BY Service_Details HAVING count(*) > 3"}, {"question_id": 364, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID GROUP BY Services.Service_ID HAVING count(*) > 3"}, {"question_id": 365, "answer_sql": "SELECT Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID GROUP BY Customer_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 366, "answer_sql": "SELECT Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID GROUP BY Customer_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 367, "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Services ON Customer_Interactions.Service_ID = Services.Service_ID GROUP BY Customers.Customer_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 368, "answer_sql": "SELECT Customer_Details FROM Customers_and_Services GROUP BY Customer_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 369, "answer_sql": "SELECT Customer_Details FROM Customers EXCEPT SELECT Customer_Details FROM Customers_and_Services"}, {"question_id": 370, "answer_sql": "SELECT Customer_Details FROM Customers EXCEPT SELECT Customer_Details FROM Customers_and_Services"}, {"question_id": 371, "answer_sql": "SELECT Customer_Details FROM Customers EXCEPT SELECT Customer_Details FROM Customers_and_Services GROUP BY Customer_ID ORDER BY count(*) LIMIT 1"}, {"question_id": 372, "answer_sql": "SELECT DISTINCT Customer_Details FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customer_Interaction_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID ORDER BY count(*) LIMIT 1"}, {"question_id": 373, "answer_sql": "SELECT count(*) FROM Customers_and_Services"}, {"question_id": 374, "answer_sql": "SELECT count(*) FROM Customers;"}, {"question_id": 375, "answer_sql": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE %Kutch%"}, {"question_id": 376, "answer_sql": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE %Kutch%"}, {"question_id": 377, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = Hardy Kutch INTERSECT SELECT Services.Service_Details FROM Services JOIN Analytical_Layer ON Services.Service_ID = Analytical_Layer.Customers_and_Services_ID WHERE Analytical_Layer.Pattern_Recognition = good"}, {"question_id": 378, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = Hardy Kutch OR Services.Service_Details = good"}, {"question_id": 379, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = Hardy Kutch INTERSECT SELECT Services.Service_Details FROM Services JOIN Analytical_Layer ON Services.Service_ID = Analytical_Layer.Customers_and_Services_ID JOIN Customer_Interactions ON Analytical_Layer.Customers_and_Services_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = Hardy Kutch AND Analytical_Layer.Pattern_Recognition = bad"}, {"question_id": 380, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = Hardy Kutch AND Services.Service_Rating = bad"}, {"question_id": 381, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID WHERE Customer_Interactions.Channel_ID = 15"}, {"question_id": 382, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID WHERE Channels.Channel_Details = 15 ij"}, {"question_id": 383, "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Channels.Channel_Details FROM Channels JOIN Customer_Interactions ON Channels.Channel_ID = Customer_Interactions.Channel_ID WHERE Customer_Interactions.Status_Code = Stuck"}, {"question_id": 384, "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE Customer_Interactions.Status_Code = Stuck INTERSECT SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID WHERE"}, {"question_id": 385, "answer_sql": "SELECT count(*) FROM Integration_Platform WHERE Status_Code = SUCCESS"}, {"question_id": 386, "answer_sql": "SELECT count(*) FROM Integration_Platform WHERE Integration_Platform_Details = Success"}, {"question_id": 387, "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = failed"}, {"question_id": 388, "answer_sql": "SELECT Customer_Details FROM Integration_Platform WHERE Integration_Platform_Details = Fail"}, {"question_id": 389, "answer_sql": "SELECT Service_Details FROM Services WHERE Service_ID NOT IN (SELECT Service_ID FROM Customers_and_Services)"}, {"question_id": 390, "answer_sql": "SELECT Service_Details FROM Services WHERE Service_ID NOT IN (SELECT Service_ID FROM Customers_and_Services)"}, {"question_id": 391, "answer_sql": "SELECT Analytical_Layer_Type_Code , count(*) FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code"}, {"question_id": 392, "answer_sql": "SELECT Analytical_Layer_Type_Code , count(*) FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code"}, {"question_id": 393, "answer_sql": "SELECT Service_Details FROM Services WHERE Service_Details = unsatisfied ;"}, {"question_id": 394, "answer_sql": "SELECT Service_Details FROM Customers_and_Services WHERE Rating = unsatisfied"}, {"question_id": 395, "answer_sql": "SELECT count(*) FROM Vehicles"}, {"question_id": 396, "answer_sql": "SELECT count(*) FROM Vehicles"}, {"question_id": 397, "answer_sql": "SELECT name FROM Vehicles ORDER BY Model_year DESC"}, {"question_id": 398, "answer_sql": "SELECT name FROM Vehicles ORDER BY Model_year DESC"}, {"question_id": 399, "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles"}, {"question_id": 400, "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles"}, {"question_id": 401, "answer_sql": "SELECT name , Type_of_powertrain , Annual_fuel_cost FROM Vehicles WHERE Model_year = 2013 OR Model_year = 2014"}, {"question_id": 402, "answer_sql": "SELECT name , Type_of_powertrain , Model_year FROM Vehicles WHERE Model_year = 2013 OR Model_year = 2014"}, {"question_id": 403, "answer_sql": "SELECT Type_of_powertrain FROM Vehicles WHERE Model_year = 2014 INTERSECT SELECT Type_of_powertrain FROM Vehicles WHERE Model_year = 2013"}, {"question_id": 404, "answer_sql": "SELECT Type_of_powertrain FROM Vehicles WHERE Model_year = 2013 INTERSECT SELECT Type_of_powertrain FROM Vehicles WHERE Model_year = 2014"}, {"question_id": 405, "answer_sql": "SELECT TYPE_OF_POWERTRAIN , count(*) FROM Vehicles GROUP BY TYPE_OF_POWERTRAIN"}, {"question_id": 406, "answer_sql": "SELECT TYPE_OF_POWERTRAIN , count(*) FROM Vehicles GROUP BY TYPE_OF_POWERTRAIN"}, {"question_id": 407, "answer_sql": "SELECT Type_of_powertrain FROM Vehicles GROUP BY Type_of_powertrain ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 408, "answer_sql": "SELECT Type_of_powertrain FROM Vehicles GROUP BY Type_of_powertrain ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 409, "answer_sql": "SELECT min(Annual_fuel_cost) , max(Annual_fuel_cost) , avg(Annual_fuel_cost) FROM Vehicles"}, {"question_id": 410, "answer_sql": "SELECT min(Annual_fuel_cost) , max(Annual_fuel_cost) , avg(Annual_fuel_cost) FROM Vehicles"}, {"question_id": 411, "answer_sql": "SELECT name , Model_year FROM Vehicles WHERE City_fuel_economy_rate <= Highway_fuel_economy_rate"}, {"question_id": 412, "answer_sql": "SELECT name , Model_year FROM Vehicles WHERE City_fuel_economy_rate <= Highway_fuel_economy_rate"}, {"question_id": 413, "answer_sql": "SELECT TYPE_OF_POWERTRAIN , avg(Annual_fuel_cost) FROM Vehicles GROUP BY TYPE_OF_POWERTRAIN HAVING count(*) >= 2"}, {"question_id": 414, "answer_sql": "SELECT TYPE_OF_POWERTRAIN , avg(Annual_fuel_cost) FROM Vehicles GROUP BY TYPE_OF_POWERTRAIN HAVING count(*) >= 2"}, {"question_id": 415, "answer_sql": "SELECT name , age , membership_credit FROM Customers"}, {"question_id": 416, "answer_sql": "SELECT name , age , membership_credit FROM Customers"}, {"question_id": 417, "answer_sql": "SELECT name , age FROM Customers ORDER BY membership_credit DESC LIMIT 1"}, {"question_id": 418, "answer_sql": "SELECT name , age FROM Customers ORDER BY membership_credit DESC LIMIT 1"}, {"question_id": 419, "answer_sql": "SELECT avg(age) FROM Customers WHERE membership_credit > (SELECT avg(membership_credit) FROM Customers)"}, {"question_id": 420, "answer_sql": "SELECT avg(age) FROM Customers WHERE membership_credit > (SELECT avg(membership_credit) FROM Customers)"}, {"question_id": 421, "answer_sql": "SELECT * FROM Discount"}, {"question_id": 422, "answer_sql": "SELECT * FROM Discount"}, {"question_id": 423, "answer_sql": "SELECT vehicles.name , sum(total_hours) FROM Vehicles JOIN Renting_history ON vehicles.id = Renting_history.vehicles_id GROUP BY vehicles.name"}, {"question_id": 424, "answer_sql": "SELECT vehicles.name , sum(Renting_history.total_hours) FROM Renting_history JOIN vehicles ON Renting_history.vehicles_id = vehicles.id GROUP BY vehicles.name"}, {"question_id": 425, "answer_sql": "SELECT name FROM Vehicles WHERE id NOT IN (SELECT vehicles_id FROM Renting_history)"}, {"question_id": 426, "answer_sql": "SELECT name FROM Vehicles WHERE id NOT IN (SELECT vehicles_id FROM Renting_history)"}, {"question_id": 427, "answer_sql": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Renting_history.customer_id HAVING count(*) >= 2"}, {"question_id": 428, "answer_sql": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.name HAVING count(*) >= 2"}, {"question_id": 429, "answer_sql": "SELECT Vehicles.name , Vehicles.Model_year FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id GROUP BY Renting_history.vehicles_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 430, "answer_sql": "SELECT Vehicles.name , Vehicles.Model_year FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id GROUP BY Renting_history.vehicles_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 431, "answer_sql": "SELECT Vehicles.name FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id ORDER BY total_hours DESC"}, {"question_id": 432, "answer_sql": "SELECT name FROM Vehicles ORDER BY total_hours DESC"}, {"question_id": 433, "answer_sql": "SELECT Discount.name FROM Discount JOIN Renting_history ON Discount.id = Renting_history.discount_id GROUP BY Renting_history.discount_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 434, "answer_sql": "SELECT Discount.name FROM Discount JOIN Renting_history ON Discount.id = Renting_history.discount_id GROUP BY Renting_history.discount_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 435, "answer_sql": "SELECT Vehicles.name , Vehicles.Type_of_powertrain FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id WHERE Renting_history.total_hours > 30"}, {"question_id": 436, "answer_sql": "SELECT Vehicles.name , Vehicles.Type_of_powertrain FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id GROUP BY Renting_history.vehicles_id HAVING sum(total_hours) > 30"}, {"question_id": 437, "answer_sql": "SELECT avg(City_fuel_economy_rate) , avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM Vehicles GROUP BY Type_of_powertrain"}, {"question_id": 438, "answer_sql": "SELECT TYPE_OF_POWERTRAIN , avg(City_fuel_economy_rate) , avg(Highway_fuel_economy_rate) FROM Vehicles GROUP BY TYPE_OF_POWERTRAIN"}, {"question_id": 439, "answer_sql": "SELECT avg(amount_of_loan) FROM Student_Loans"}, {"question_id": 440, "answer_sql": "SELECT avg(amount_of_loan) FROM Student_Loans"}, {"question_id": 441, "answer_sql": "SELECT bio_data , student_id FROM Classes GROUP BY student_id HAVING count(*) >= 2 UNION SELECT bio_data , student_id FROM Detention GROUP BY student_id HAVING count(*) <= 2"}, {"question_id": 442, "answer_sql": "SELECT bio_data , student_id FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY student_id HAVING count(*) >= 2 UNION SELECT bio_data , student_id FROM Detention GROUP BY student_id HAVING count(*) < 2"}, {"question_id": 443, "answer_sql": "SELECT teacher_details FROM Teachers EXCEPT SELECT Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details LIKE %data% INTERSECT SELECT Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details LIKE net%"}, {"question_id": 444, "answer_sql": "SELECT teacher_details FROM Teachers EXCEPT SELECT teacher_details FROM Classes WHERE class_details LIKE %net%"}, {"question_id": 445, "answer_sql": "SELECT bio_data FROM Students EXCEPT SELECT bio_data FROM Students_Addresses UNION SELECT bio_data FROM Student_Loans"}, {"question_id": 446, "answer_sql": "SELECT bio_data FROM Students EXCEPT SELECT bio_data FROM Student_Loans UNION SELECT bio_data FROM Students EXCEPT SELECT bio_data FROM Student_Loans"}, {"question_id": 447, "answer_sql": "SELECT student_loan_id , date_of_loan FROM Student_Loans JOIN Achievements ON Student_Loans.student_id = Achievements.student_id GROUP BY student_loan_id HAVING count(*) >= 2"}, {"question_id": 448, "answer_sql": "SELECT amount_of_loan , date_of_loan FROM Student_Loans JOIN Achievements ON Student_Loans.student_loan_id = Achievements.student_id GROUP BY Achievements.student_id HAVING count(*) >= 2"}, {"question_id": 449, "answer_sql": "SELECT Teachers.teacher_details , Classes.teacher_id FROM Classes JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id GROUP BY Classes.teacher_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 450, "answer_sql": "SELECT Classes.teacher_id , Teachers.teacher_details FROM Classes JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id GROUP BY Classes.teacher_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 451, "answer_sql": "SELECT DISTINCT detention_summary FROM Detention"}, {"question_id": 452, "answer_sql": "SELECT DISTINCT detention_summary FROM Detention"}, {"question_id": 453, "answer_sql": "SELECT student_details , address_type_description FROM Students_Addresses JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code"}, {"question_id": 454, "answer_sql": "SELECT Students.bio_data , Ref_Address_Types.address_type_description FROM Students_Addresses JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code"}, {"question_id": 455, "answer_sql": "SELECT bio_data , address_details FROM Students_Addresses JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id"}, {"question_id": 456, "answer_sql": "SELECT bio_data , address_details FROM Students_Addresses JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id"}, {"question_id": 457, "answer_sql": "SELECT bio_data , date_of_transcript FROM Transcripts"}, {"question_id": 458, "answer_sql": "SELECT bio_data , date_of_transcript FROM Transcripts"}, {"question_id": 459, "answer_sql": "SELECT behavior_monitoring_details , count(*) FROM Behaviour_Monitoring GROUP BY behavior_monitoring_details ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 460, "answer_sql": "SELECT behavior_monitoring_details , count(*) FROM Behaviour_Monitoring GROUP BY behavior_monitoring_details ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 461, "answer_sql": "SELECT bio_data , student_details FROM Students WHERE student_id NOT IN (SELECT student_id FROM Behaviour_Monitoring GROUP BY student_id ORDER BY count(*) DESC LIMIT 1)"}, {"question_id": 462, "answer_sql": "SELECT bio_data , student_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY student_id HAVING count(*) = (SELECT count(*) FROM Behaviour_Monitoring GROUP BY student_id ORDER BY count(*) DESC LIMIT 1) INTERSECT SELECT bio_data , student_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY student_id HAVING count(*) = 3"}, {"question_id": 463, "answer_sql": "SELECT bio_data FROM Behaviour_Monitoring GROUP BY bio_data ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 464, "answer_sql": "SELECT bio_data FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY Behaviour_Monitoring.student_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 465, "answer_sql": "SELECT Students.bio_data , Student_Events.event_date FROM Student_Events JOIN Students ON Student_Events.student_id = Students.student_id"}, {"question_id": 466, "answer_sql": "SELECT bio_data , event_date FROM Student_Events"}, {"question_id": 467, "answer_sql": "SELECT count(*) , event_type_code , event_type_description FROM Student_Events GROUP BY event_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 468, "answer_sql": "SELECT count(*) , event_type_code , event_type_description FROM Student_Events GROUP BY event_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 469, "answer_sql": "SELECT achievement_details , achievement_type_description FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code"}, {"question_id": 470, "answer_sql": "SELECT achievement_details , achievement_type_description FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code"}, {"question_id": 471, "answer_sql": "SELECT count(*) FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Students.student_id = Classes.student_id WHERE Students.student_id NOT IN (SELECT student_id FROM Achievements)"}, {"question_id": 472, "answer_sql": "SELECT count(*) FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Students.student_id = Classes.student_id EXCEPT SELECT Teachers.teacher_id FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Achievements ON Achievements.student_id = Classes.student_id"}, {"question_id": 473, "answer_sql": "SELECT date_of_transcript , transcript_details FROM Transcripts"}, {"question_id": 474, "answer_sql": "SELECT date_of_transcript , transcript_details FROM Transcripts"}, {"question_id": 475, "answer_sql": "SELECT achievement_type_code , achievement_details , date_achievement FROM Achievements"}, {"question_id": 476, "answer_sql": "SELECT achievement_type_code , achievement_details , date_achievement FROM Achievements"}, {"question_id": 477, "answer_sql": "SELECT datetime_detention_start , datetime_detention_end FROM Detention"}, {"question_id": 478, "answer_sql": "SELECT datetime_detention_start , datetime_detention_end FROM Detention"}, {"question_id": 479, "answer_sql": "SELECT bio_data FROM Students WHERE student_details LIKE %Suite%"}, {"question_id": 480, "answer_sql": "SELECT bio_data FROM Students WHERE student_details LIKE %Suite%"}, {"question_id": 481, "answer_sql": "SELECT Teachers.teacher_details , Students.bio_data FROM Classes JOIN Students ON Classes.student_id = Students.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id"}, {"question_id": 482, "answer_sql": "SELECT Teachers.teacher_details , Students.student_details FROM Classes JOIN Students ON Classes.student_id = Students.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id"}, {"question_id": 483, "answer_sql": "SELECT count(*) FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 484, "answer_sql": "SELECT teacher_id , count(*) FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 485, "answer_sql": "SELECT count(*) FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 486, "answer_sql": "SELECT student_id , count(*) FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 487, "answer_sql": "SELECT Students.student_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Classes.student_id HAVING count(*) = 2"}, {"question_id": 488, "answer_sql": "SELECT student_id , bio_data FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY student_id HAVING count(*) = 2"}, {"question_id": 489, "answer_sql": "SELECT detention_type_code , detention_type_description FROM Ref_Detention_Type GROUP BY detention_type_code ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 490, "answer_sql": "SELECT detention_type_code , detention_type_description FROM Ref_Detention_Type GROUP BY detention_type_code ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 491, "answer_sql": "SELECT bio_data , student_details FROM Students_Loans WHERE amount_of_loan > (SELECT avg(amount_of_loan) FROM Students_Loans)"}, {"question_id": 492, "answer_sql": "SELECT bio_data , student_details FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE amount_of_loan > (SELECT avg(amount_of_loan) FROM Student_Loans)"}, {"question_id": 493, "answer_sql": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1"}, {"question_id": 494, "answer_sql": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1"}, {"question_id": 495, "answer_sql": "SELECT bio_data FROM Student_Loans ORDER BY amount_of_loan LIMIT 1"}, {"question_id": 496, "answer_sql": "SELECT bio_data FROM Students ORDER BY student_loan_id LIMIT 1"}, {"question_id": 497, "answer_sql": "SELECT date_of_transcript FROM Transcripts WHERE student_id IN (SELECT student_id FROM Student_Loans ORDER BY amount_of_loan DESC LIMIT 1)"}, {"question_id": 498, "answer_sql": "SELECT date_of_loan FROM Student_Loans ORDER BY amount_of_loan DESC LIMIT 1"}, {"question_id": 499, "answer_sql": "SELECT Teachers.teacher_details FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id JOIN Classes ON Classes.student_id = Students.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id ORDER BY Transcripts.date_of_transcript LIMIT 1"}, {"question_id": 500, "answer_sql": "SELECT Teachers.teacher_details FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id JOIN Classes ON Classes.student_id = Students.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id ORDER BY Transcripts.date_of_transcript LIMIT 1"}, {"question_id": 501, "answer_sql": "SELECT student_id , sum(amount_of_loan) FROM Student_Loans GROUP BY student_id"}, {"question_id": 502, "answer_sql": "SELECT student_id , sum(amount_of_loan) FROM Student_Loans GROUP BY student_id"}, {"question_id": 503, "answer_sql": "SELECT student_id , bio_data , count(*) FROM Classes GROUP BY student_id"}, {"question_id": 504, "answer_sql": "SELECT student_id , bio_data , count(*) FROM Classes GROUP BY student_id"}, {"question_id": 505, "answer_sql": "SELECT count(*) FROM Detention"}, {"question_id": 506, "answer_sql": "SELECT count(*) FROM Detention"}, {"question_id": 507, "answer_sql": "SELECT address_type_code , address_type_description FROM Ref_Address_Types GROUP BY address_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 508, "answer_sql": "SELECT address_type_code , address_type_description FROM Ref_Address_Types GROUP BY address_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 509, "answer_sql": "SELECT bio_data FROM Students EXCEPT SELECT bio_data FROM Student_Loans"}, {"question_id": 510, "answer_sql": "SELECT bio_data FROM Students EXCEPT SELECT bio_data FROM Student_Loans"}, {"question_id": 511, "answer_sql": "SELECT datetime_from , datetime_to FROM Students_Addresses WHERE student_id IN (SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*) = 2)"}, {"question_id": 512, "answer_sql": "SELECT datetime_detention_start , datetime_detention_end FROM Detention WHERE student_id IN (SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*) = 2)"}, {"question_id": 513, "answer_sql": "SELECT datetime_detention_start FROM Detention"}, {"question_id": 514, "answer_sql": "SELECT datetime_detention_start FROM Detention"}, {"question_id": 515, "answer_sql": "SELECT Name FROM Author"}, {"question_id": 516, "answer_sql": "SELECT Name FROM Author"}, {"question_id": 517, "answer_sql": "SELECT Name , Address FROM Client"}, {"question_id": 518, "answer_sql": "SELECT Name , Address FROM Client"}, {"question_id": 519, "answer_sql": "SELECT Title , ISBN , SalePrice FROM Book"}, {"question_id": 520, "answer_sql": "SELECT Title , ISBN , SalePrice FROM Book"}, {"question_id": 521, "answer_sql": "SELECT count(*) FROM Book"}, {"question_id": 522, "answer_sql": "SELECT count(*) FROM Book"}, {"question_id": 523, "answer_sql": "SELECT count(*) FROM Author"}, {"question_id": 524, "answer_sql": "SELECT count(*) FROM Author"}, {"question_id": 525, "answer_sql": "SELECT count(*) FROM Client"}, {"question_id": 526, "answer_sql": "SELECT count(*) FROM Client"}, {"question_id": 527, "answer_sql": "SELECT Name , Address FROM Client ORDER BY Name"}, {"question_id": 528, "answer_sql": "SELECT Name , Address FROM Client ORDER BY Name"}, {"question_id": 529, "answer_sql": "SELECT Book.Title , Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor"}, {"question_id": 530, "answer_sql": "SELECT Book.Title , Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor"}, {"question_id": 531, "answer_sql": "SELECT IdOrder , Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient"}, {"question_id": 532, "answer_sql": "SELECT IdOrder , Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient"}, {"question_id": 533, "answer_sql": "SELECT Author.Name , count(*) FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN GROUP BY Author.Name"}, {"question_id": 534, "answer_sql": "SELECT Author.Name , count(*) FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN GROUP BY Author.Name"}, {"question_id": 535, "answer_sql": "SELECT ISBN , count(*) FROM Books_Order GROUP BY ISBN"}, {"question_id": 536, "answer_sql": "SELECT ISBN , count(*) FROM Books_Order GROUP BY ISBN"}, {"question_id": 537, "answer_sql": "SELECT ISBN , sum(amount) FROM Books_Order GROUP BY ISBN"}, {"question_id": 538, "answer_sql": "SELECT ISBN , sum(amount) FROM Books_Order GROUP BY ISBN"}, {"question_id": 539, "answer_sql": "SELECT Book.Title FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN GROUP BY Books_Order.ISBN ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 540, "answer_sql": "SELECT Book.Title FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN GROUP BY Books_Order.ISBN ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 541, "answer_sql": "SELECT Book.Title , Book.PurchasePrice FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN ORDER BY Books_Order.amount DESC LIMIT 1"}, {"question_id": 542, "answer_sql": "SELECT Book.Title , Book.PurchasePrice FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Books_Order.ISBN ORDER BY sum(amount) DESC LIMIT 1"}, {"question_id": 543, "answer_sql": "SELECT Book.Title FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN"}, {"question_id": 544, "answer_sql": "SELECT DISTINCT Book.Title FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN"}, {"question_id": 545, "answer_sql": "SELECT DISTINCT Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient"}, {"question_id": 546, "answer_sql": "SELECT DISTINCT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient"}, {"question_id": 547, "answer_sql": "SELECT Client.Name , count(*) FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name"}, {"question_id": 548, "answer_sql": "SELECT Client.Name , count(*) FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name"}, {"question_id": 549, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Orders.IdClient ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 550, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Orders.IdClient ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 551, "answer_sql": "SELECT Client.Name , sum(Books_Order.amount) FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder GROUP BY Client.Name"}, {"question_id": 552, "answer_sql": "SELECT Client.Name , sum(Book.Title) FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN GROUP BY Client.Name"}, {"question_id": 553, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder GROUP BY Client.Name ORDER BY sum(amount) DESC LIMIT 1"}, {"question_id": 554, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder GROUP BY Orders.IdClient ORDER BY sum(amount) DESC LIMIT 1"}, {"question_id": 555, "answer_sql": "SELECT Title FROM Book WHERE ISBN NOT IN (SELECT ISBN FROM Books_Order)"}, {"question_id": 556, "answer_sql": "SELECT Title FROM Book WHERE ISBN NOT IN (SELECT ISBN FROM Books_Order)"}, {"question_id": 557, "answer_sql": "SELECT Name FROM Client WHERE IdClient NOT IN (SELECT IdClient FROM Orders)"}, {"question_id": 558, "answer_sql": "SELECT Name FROM Client WHERE IdClient NOT IN (SELECT IdClient FROM Orders)"}, {"question_id": 559, "answer_sql": "SELECT max(SalePrice) , min(SalePrice) FROM Book"}, {"question_id": 560, "answer_sql": "SELECT max(SalePrice) , min(SalePrice) FROM Book"}, {"question_id": 561, "answer_sql": "SELECT avg(PurchasePrice) , avg(SalePrice) FROM Book"}, {"question_id": 562, "answer_sql": "SELECT avg(PurchasePrice) , avg(SalePrice) FROM Book"}, {"question_id": 563, "answer_sql": "SELECT max(SalePrice - PurchasePrice) FROM Book"}, {"question_id": 564, "answer_sql": "SELECT max(SalePrice) - min(PurchasePrice) FROM Book"}, {"question_id": 565, "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT avg(SalePrice) FROM Book)"}, {"question_id": 566, "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT avg(SalePrice) FROM Book)"}, {"question_id": 567, "answer_sql": "SELECT Title FROM Book ORDER BY SalePrice ASC"}, {"question_id": 568, "answer_sql": "SELECT Title FROM Book WHERE SalePrice = (SELECT min(SalePrice) FROM Book)"}, {"question_id": 569, "answer_sql": "SELECT Title FROM Book ORDER BY PurchasePrice DESC"}, {"question_id": 570, "answer_sql": "SELECT Title FROM Book ORDER BY PurchasePrice DESC LIMIT 1"}, {"question_id": 571, "answer_sql": "SELECT avg(SalePrice) FROM Book WHERE Author = George Orwell ;"}, {"question_id": 572, "answer_sql": "SELECT avg(SalePrice) FROM Book WHERE Author = George Orwell ;"}, {"question_id": 573, "answer_sql": "SELECT SalePrice FROM Book WHERE Author = Plato ;"}, {"question_id": 574, "answer_sql": "SELECT SalePrice FROM Book WHERE Author = Plato ;"}, {"question_id": 575, "answer_sql": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = George Orwell ORDER BY Book.SalePrice LIMIT 1"}, {"question_id": 576, "answer_sql": "SELECT Title FROM Book WHERE Author = George Orwell ORDER BY SalePrice LIMIT 1"}, {"question_id": 577, "answer_sql": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = Plato AND Book.SalePrice < (SELECT avg(SalePrice) FROM Book)"}, {"question_id": 578, "answer_sql": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = Plato AND Book.SalePrice < (SELECT avg(SalePrice) FROM Book)"}, {"question_id": 579, "answer_sql": "SELECT Author FROM Book WHERE Title = Pride and Prejudice ;"}, {"question_id": 580, "answer_sql": "SELECT Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Book.Title = Pride and Prejudice ;"}, {"question_id": 581, "answer_sql": "SELECT Title FROM Book WHERE Author LIKE %Plato%"}, {"question_id": 582, "answer_sql": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name LIKE %Plato%"}, {"question_id": 583, "answer_sql": "SELECT count(*) FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN JOIN Orders ON Books_Order.idOrder = Orders.IdOrder WHERE Book.Title = Pride and Prejudice ;"}, {"question_id": 584, "answer_sql": "SELECT count(*) FROM Books_Order JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = Pride and Prejudice ;"}, {"question_id": 585, "answer_sql": "SELECT IdOrder FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = Pride and Prejudice INTERSECT SELECT IdOrder FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = The Little Prince"}, {"question_id": 586, "answer_sql": "SELECT IdOrder FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN JOIN Books_Order ON Books_Order.ISBN = Book.ISBN JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = Pride and Prejudice AND Book.Title = The Little Prince"}, {"question_id": 587, "answer_sql": "SELECT ISBN FROM Books_Order WHERE IdOrder IN (SELECT IdOrder FROM Orders WHERE IdClient IN (SELECT IdClient FROM Client WHERE Name = Peter Doe ) INTERSECT SELECT IdOrder FROM Orders WHERE IdClient IN (SELECT IdClient FROM Client WHERE Name = James Smith ))"}, {"question_id": 588, "answer_sql": "SELECT ISBN FROM Books_Order JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder JOIN Client ON Orders.IdClient = Client.IdClient WHERE Client.Name = Peter Doe INTERSECT SELECT ISBN FROM Books_Order JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder JOIN Client ON Orders.IdClient = Client.IdClient WHERE Client.Name = James Smith"}, {"question_id": 589, "answer_sql": "SELECT Book.Title FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Client.Name = Peter Doe EXCEPT SELECT Book.Title FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Client.Name = James Smith"}, {"question_id": 590, "answer_sql": "SELECT Book.Title FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Client.Name = Peter Doe EXCEPT SELECT Book.Title FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Client.Name = James Smith"}, {"question_id": 591, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = Pride and Prejudice"}, {"question_id": 592, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = Pride and Prejudice"}, {"question_id": 593, "answer_sql": "SELECT count(*) FROM book"}, {"question_id": 594, "answer_sql": "SELECT Title FROM book ORDER BY Title ASC"}, {"question_id": 595, "answer_sql": "SELECT Title FROM book ORDER BY Pages DESC"}, {"question_id": 596, "answer_sql": "SELECT Type , Release FROM book"}, {"question_id": 597, "answer_sql": "SELECT max(Chapters) , min(Chapters) FROM book"}, {"question_id": 598, "answer_sql": "SELECT Title FROM book WHERE Type != Poet"}, {"question_id": 599, "answer_sql": "SELECT avg(Rating) FROM review"}, {"question_id": 600, "answer_sql": "SELECT Title , Rating FROM book"}, {"question_id": 601, "answer_sql": "SELECT Rating FROM book ORDER BY Chapters DESC LIMIT 1"}, {"question_id": 602, "answer_sql": "SELECT Rank FROM book ORDER BY Pages ASC LIMIT 1"}, {"question_id": 603, "answer_sql": "SELECT book.Title FROM book JOIN review ON book.Book_ID = review.Book_ID ORDER BY review.Rank DESC LIMIT 1"}, {"question_id": 604, "answer_sql": "SELECT avg(Readers_in_Million) FROM book WHERE Type = Novel"}, {"question_id": 605, "answer_sql": "SELECT TYPE , count(*) FROM book GROUP BY TYPE"}, {"question_id": 606, "answer_sql": "SELECT Type FROM book GROUP BY Type ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 607, "answer_sql": "SELECT Type FROM book GROUP BY Type HAVING count(*) >= 3"}, {"question_id": 608, "answer_sql": "SELECT Title FROM book JOIN review ON book.Book_ID = review.Book_ID ORDER BY Rating ASC"}, {"question_id": 609, "answer_sql": "SELECT Title , Audio FROM book ORDER BY Readers_in_Million DESC"}, {"question_id": 610, "answer_sql": "SELECT count(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)"}, {"question_id": 611, "answer_sql": "SELECT TYPE FROM book WHERE Chapters > 75 INTERSECT SELECT TYPE FROM book WHERE Chapters < 50"}, {"question_id": 612, "answer_sql": "SELECT count(DISTINCT TYPE) FROM book"}, {"question_id": 613, "answer_sql": "SELECT Type , Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)"}, {"question_id": 614, "answer_sql": "SELECT count(*) FROM customer"}, {"question_id": 615, "answer_sql": "SELECT count(*) FROM customer"}, {"question_id": 616, "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC"}, {"question_id": 617, "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC"}, {"question_id": 618, "answer_sql": "SELECT Nationality , Card_Credit FROM customer"}, {"question_id": 619, "answer_sql": "SELECT Nationality , Card_Credit FROM customer"}, {"question_id": 620, "answer_sql": "SELECT Name FROM customer WHERE Nationality = England OR Nationality = Australia"}, {"question_id": 621, "answer_sql": "SELECT Name FROM customer WHERE Nationality = England OR Nationality = Australia"}, {"question_id": 622, "answer_sql": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership > 1"}, {"question_id": 623, "answer_sql": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership > 1"}, {"question_id": 624, "answer_sql": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1"}, {"question_id": 625, "answer_sql": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1"}, {"question_id": 626, "answer_sql": "SELECT Nationality , count(*) FROM customer GROUP BY Nationality"}, {"question_id": 627, "answer_sql": "SELECT Nationality , count(*) FROM customer GROUP BY Nationality"}, {"question_id": 628, "answer_sql": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 629, "answer_sql": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 630, "answer_sql": "SELECT Nationality FROM customer WHERE Card_Credit < 50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit > 75"}, {"question_id": 631, "answer_sql": "SELECT Nationality FROM customer WHERE Card_Credit > 50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit < 75"}, {"question_id": 632, "answer_sql": "SELECT customer.Name , customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID"}, {"question_id": 633, "answer_sql": "SELECT customer.Name , customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID"}, {"question_id": 634, "answer_sql": "SELECT customer.Name , customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID ORDER BY customer_order.Quantity DESC"}, {"question_id": 635, "answer_sql": "SELECT customer.Name , customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID ORDER BY customer_order.Quantity DESC"}, {"question_id": 636, "answer_sql": "SELECT customer.Name , sum(customer_order.Quantity) FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Name"}, {"question_id": 637, "answer_sql": "SELECT customer.Name , sum(customer_order.Quantity) FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Name"}, {"question_id": 638, "answer_sql": "SELECT customer.Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Customer_ID HAVING sum(customer_order.Quantity) > 1"}, {"question_id": 639, "answer_sql": "SELECT customer.Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Customer_ID HAVING sum(customer_order.Quantity) > 1"}, {"question_id": 640, "answer_sql": "SELECT DISTINCT Manager FROM branch"}, {"question_id": 641, "answer_sql": "SELECT DISTINCT Manager FROM branch"}, {"question_id": 642, "answer_sql": "SELECT Name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)"}, {"question_id": 643, "answer_sql": "SELECT Name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)"}, {"question_id": 644, "answer_sql": "SELECT count(*) FROM member"}, {"question_id": 645, "answer_sql": "SELECT Name FROM member ORDER BY Age ASC"}, {"question_id": 646, "answer_sql": "SELECT Name , Nationality FROM member"}, {"question_id": 647, "answer_sql": "SELECT Name FROM member WHERE Nationality != England"}, {"question_id": 648, "answer_sql": "SELECT Name FROM member WHERE Age = 19 OR Age = 20"}, {"question_id": 649, "answer_sql": "SELECT Name FROM member ORDER BY Age DESC LIMIT 1"}, {"question_id": 650, "answer_sql": "SELECT Nationality , count(*) FROM member GROUP BY Nationality"}, {"question_id": 651, "answer_sql": "SELECT Nationality FROM member GROUP BY Nationality ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 652, "answer_sql": "SELECT Nationality FROM member GROUP BY Nationality HAVING count(*) >= 2"}, {"question_id": 653, "answer_sql": "SELECT club_leader.Member_ID , club.Club_Name FROM club_leader JOIN club ON club_leader.Club_ID = club.Club_ID"}, {"question_id": 654, "answer_sql": "SELECT member.Name FROM club_leader JOIN member ON club_leader.Member_ID = member.Member_ID JOIN club ON club_leader.Club_ID = club.Club_ID WHERE club.Overall_Ranking > 100"}, {"question_id": 655, "answer_sql": "SELECT member.Name FROM club_leader JOIN member ON club_leader.Member_ID = member.Member_ID WHERE YEAR_JOIN < 2018"}, {"question_id": 656, "answer_sql": "SELECT member.Name FROM club_leader JOIN member ON club_leader.Member_ID = member.Member_ID JOIN club ON club_leader.Club_ID = club.Club_ID WHERE club.Club_Name = Houston"}, {"question_id": 657, "answer_sql": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader)"}, {"question_id": 658, "answer_sql": "SELECT Nationality FROM member WHERE Age > 22 INTERSECT SELECT Nationality FROM member WHERE Age < 19"}, {"question_id": 659, "answer_sql": "SELECT avg(Age) FROM club_leader"}, {"question_id": 660, "answer_sql": "SELECT Club_Name FROM club WHERE Club_Name LIKE %state%"}, {"question_id": 661, "answer_sql": "SELECT Collection_Subset_Name FROM Collection_Subsets"}, {"question_id": 662, "answer_sql": "SELECT Collection_Subset_Name FROM Collection_Subsets"}, {"question_id": 663, "answer_sql": "SELECT Collection_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = Top collection ;"}, {"question_id": 664, "answer_sql": "SELECT Collection_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = Top collection ;"}, {"question_id": 665, "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets"}, {"question_id": 666, "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets"}, {"question_id": 667, "answer_sql": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = Best for 2000 ;"}, {"question_id": 668, "answer_sql": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = Best for 2000 ;"}, {"question_id": 669, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects"}, {"question_id": 670, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects"}, {"question_id": 671, "answer_sql": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE Owner = Marlin"}, {"question_id": 672, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = Marlin"}, {"question_id": 673, "answer_sql": "SELECT Owner FROM Document_Objects WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = Braeden Collection )"}, {"question_id": 674, "answer_sql": "SELECT Owner FROM Collections JOIN Document_Objects ON Collections.Collection_ID = Document_Objects.Parent_Collection_ID WHERE Collection_Name = Braeden Collection"}, {"question_id": 675, "answer_sql": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE Owner = Marlin"}, {"question_id": 676, "answer_sql": "SELECT Owner FROM Document_Objects WHERE Parent_Document_Object_ID IN (SELECT Document_Object_ID FROM Document_Objects WHERE Owner = Marlin )"}, {"question_id": 677, "answer_sql": "SELECT DISTINCT Description FROM Document_Objects"}, {"question_id": 678, "answer_sql": "SELECT DISTINCT Description FROM Document_Objects"}, {"question_id": 679, "answer_sql": "SELECT count(*) FROM Document_Objects WHERE Owner = Marlin ;"}, {"question_id": 680, "answer_sql": "SELECT count(*) FROM Document_Objects WHERE Owner = Marlin ;"}, {"question_id": 681, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects"}, {"question_id": 682, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Parent_Document_Object_ID = null"}, {"question_id": 683, "answer_sql": "SELECT Parent_Document_Object_ID , count(*) FROM Document_Objects GROUP BY Parent_Document_Object_ID"}, {"question_id": 684, "answer_sql": "SELECT Parent_Document_Object_ID , count(*) FROM Document_Objects GROUP BY Parent_Document_Object_ID"}, {"question_id": 685, "answer_sql": "SELECT Collection_Name FROM Collections"}, {"question_id": 686, "answer_sql": "SELECT Collection_Name FROM Collections"}, {"question_id": 687, "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = Best ;"}, {"question_id": 688, "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = Best"}, {"question_id": 689, "answer_sql": "SELECT Collections.Parent_Collection_ID FROM Collections JOIN Collection_Subset_Members ON Collections.Collection_ID = Collection_Subset_Members.Collection_ID JOIN Collection_Subsets ON Collection_Subsets.Collection_Subset_ID = Collection_Subset_Members.Collection_Subset_ID JOIN Document_Subset_Members ON Document_Subset_Members.Related_Document_Object_ID = Collections.Collection_ID JOIN Document_Subsets ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID WHERE Collection_Subsets.Collection_Subset_Name = Nice"}, {"question_id": 690, "answer_sql": "SELECT Collection_Name FROM Collections WHERE Collection_Name = Nice ;"}, {"question_id": 691, "answer_sql": "SELECT Collection_Name FROM Collections WHERE Collection_ID NOT IN (SELECT Parent_Collection_ID FROM Collections)"}, {"question_id": 692, "answer_sql": "SELECT Collection_Name FROM Collections EXCEPT SELECT Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Parent_Collection_ID FROM Collections)"}, {"question_id": 693, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects GROUP BY Document_Object_ID HAVING count(*) > 1"}, {"question_id": 694, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects GROUP BY Document_Object_ID HAVING count(*) > 1"}, {"question_id": 695, "answer_sql": "SELECT count(*) FROM Collections WHERE Collection_Name = Best ;"}, {"question_id": 696, "answer_sql": "SELECT count(*) FROM Collections WHERE Collection_Name = Best ;"}, {"question_id": 697, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = Ransom ;"}, {"question_id": 698, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = Ransom ;"}, {"question_id": 699, "answer_sql": "SELECT Collection_Subset_ID , Collection_Subset_Name , count(*) FROM Collection_Subsets JOIN Collections ON Collection_Subsets.Collection_Subset_ID = Collections.Parent_Collection_ID GROUP BY Collection_Subset_ID"}, {"question_id": 700, "answer_sql": "SELECT Collection_Subset_ID , Collection_Subset_Name , count(*) FROM Collection_Subsets GROUP BY Collection_Subset_ID"}, {"question_id": 701, "answer_sql": "SELECT Document_Object_ID , count(*) FROM Document_Objects GROUP BY Document_Object_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 702, "answer_sql": "SELECT Document_Object_ID , count(*) FROM Document_Objects GROUP BY Document_Object_ID"}, {"question_id": 703, "answer_sql": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 704, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects GROUP BY Document_Object_ID ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 705, "answer_sql": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING count(*) BETWEEN 2 AND 4"}, {"question_id": 706, "answer_sql": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING count(*) BETWEEN 2 AND 4"}, {"question_id": 707, "answer_sql": "SELECT Owner FROM Document_Objects WHERE Owner = Braeden ;"}, {"question_id": 708, "answer_sql": "SELECT DISTINCT Owner FROM Document_Objects WHERE Owner = Braeden"}, {"question_id": 709, "answer_sql": "SELECT DISTINCT Document_Subset_Name FROM Document_Objects JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Document_Object_ID JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Owner = Braeden ;"}, {"question_id": 710, "answer_sql": "SELECT DISTINCT Document_Subset_Name FROM Document_Objects JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Document_Object_ID JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Owner = Braeden"}, {"question_id": 711, "answer_sql": "SELECT Document_Subset_ID , Document_Subset_Name , count(*) FROM Document_Subset_Members GROUP BY Document_Subset_ID"}, {"question_id": 712, "answer_sql": "SELECT Document_Subset_ID , Document_Subset_Name , count(*) FROM Document_Subset_Members GROUP BY Document_Subset_ID"}, {"question_id": 713, "answer_sql": "SELECT Document_Subset_ID , Document_Subset_Name , count(*) FROM Document_Subset_Members GROUP BY Document_Subset_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 714, "answer_sql": "SELECT Document_Subset_ID , Document_Subset_Name , count(*) FROM Document_Subset_Members GROUP BY Document_Subset_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 715, "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subsets.Document_Subset_Name = Best for 2000"}, {"question_id": 716, "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subsets.Document_Subset_Name = Best for 2000"}, {"question_id": 717, "answer_sql": "SELECT Document_Subsets.Document_Subset_Name , Document_Objects.Document_Object_ID FROM Document_Subsets JOIN Document_Subset_Members ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID"}, {"question_id": 718, "answer_sql": "SELECT Document_Subset_ID , Document_Object_ID FROM Document_Subset_Members"}, {"question_id": 719, "answer_sql": "SELECT Collections.Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Owner = Ransom"}, {"question_id": 720, "answer_sql": "SELECT Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Owner = Ransom"}, {"question_id": 721, "answer_sql": "SELECT COUNT (DISTINCT Collection_ID) , Document_Object_ID FROM Documents_in_Collections GROUP BY Document_Object_ID"}, {"question_id": 722, "answer_sql": "SELECT Document_Object_ID , count(*) FROM Documents_in_Collections GROUP BY Document_Object_ID"}, {"question_id": 723, "answer_sql": "SELECT count(*) FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = Best ;"}, {"question_id": 724, "answer_sql": "SELECT count(*) FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = Best ;"}, {"question_id": 725, "answer_sql": "SELECT Document_Object_ID FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collections.Collection_Name = Best"}, {"question_id": 726, "answer_sql": "SELECT count(*) FROM Documents_in_Collections WHERE Collection_Name = Best ;"}, {"question_id": 727, "answer_sql": "SELECT Collection_Name , Collection_ID , count(*) FROM Documents_in_Collections GROUP BY Collection_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 728, "answer_sql": "SELECT Collection_ID , Collection_Name , count(*) FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collection_Name = Best GROUP BY Collection_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 729, "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Collections ON Document_Subset_Members.Related_Document_Object_ID = Collections.Collection_ID WHERE Document_Subsets.Document_Subset_Name = Best for 2000 AND Collections.Collection_Name = Best ;"}, {"question_id": 730, "answer_sql": "SELECT DISTINCT Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID JOIN Collections ON Collections.Collection_ID = Document_Objects.Parent_Collection_ID JOIN Collection_Subsets ON Collection_Subsets.Collection_Subset_ID = Collections.Parent_Collection_ID WHERE Document_Subsets.Document_Subset_Name = Best for 2000 AND Collection_Subsets.Collection_Subset_Name = Best ;"}, {"question_id": 731, "answer_sql": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_Name = Best EXCEPT SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = Best ) AND YEAR = 2000"}, {"question_id": 732, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = Best ) EXCEPT SELECT Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subsets.Document_Subset_Name = Best for 2000"}, {"question_id": 733, "answer_sql": "SELECT Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Document_Object_ID JOIN Collections ON Collections.Collection_ID = Document_Objects.Parent_Collection_ID WHERE Document_Subsets.Document_Subset_Name = Best for 2000 OR Collections.Collection_Name = Best ;"}, {"question_id": 734, "answer_sql": "SELECT DISTINCT Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Document_Object_ID JOIN Collections ON Collections.Collection_ID = Document_Objects.Parent_Collection_ID WHERE Document_Subsets.Document_Subset_Name = Best for 2000 OR Collections.Collection_Name = Best"}, {"question_id": 735, "answer_sql": "SELECT Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = Best )"}, {"question_id": 736, "answer_sql": "SELECT Collection_Name FROM Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = Best )"}, {"question_id": 737, "answer_sql": "SELECT count(*) FROM Collections JOIN Collection_Subset_Members ON Collections.Collection_ID = Collection_Subset_Members.Collection_ID JOIN Collection_Subsets ON Collection_Subsets.Collection_Subset_ID = Collection_Subset_Members.Collection_Subset_ID WHERE Collection_Subsets.Collection_Subset_Name = Best ;"}, {"question_id": 738, "answer_sql": "SELECT count(*) FROM Collections JOIN Collection_Subset_Members ON Collections.Collection_ID = Collection_Subset_Members.Collection_ID JOIN Collection_Subsets ON Collection_Subsets.Collection_Subset_ID = Collection_Subset_Members.Collection_Subset_ID WHERE Collection_Subsets.Collection_Subset_Name = Best"}, {"question_id": 739, "answer_sql": "SELECT Collection_Subset_Name FROM Collection_Subsets WHERE Collection_Subset_ID IN (SELECT Collection_Subset_ID FROM Collections WHERE Collection_Name = Best )"}, {"question_id": 740, "answer_sql": "SELECT Collection_Subset_Name FROM Collection_Subsets JOIN Collections ON Collection_Subsets.Collection_Subset_ID = Collections.Parent_Collection_ID WHERE Collection_Name = Best"}, {"question_id": 741, "answer_sql": "SELECT count(*) FROM songs WHERE name LIKE %Love%"}, {"question_id": 742, "answer_sql": "SELECT name FROM songs ORDER BY name ASC"}, {"question_id": 743, "answer_sql": "SELECT name , language FROM songs"}, {"question_id": 744, "answer_sql": "SELECT max(voice_sound_quality) , min(voice_sound_quality) FROM performance_score"}, {"question_id": 745, "answer_sql": "SELECT voice_sound_quality , rhythm_tempo , stage_presence FROM performance_score JOIN participants ON performance_score.participant_id = participants.id WHERE participants.name = Freeway"}, {"question_id": 746, "answer_sql": "SELECT id , language , original_artist FROM songs WHERE name != Love"}, {"question_id": 747, "answer_sql": "SELECT name , original_artist FROM songs WHERE english_translation = All the streets of love"}, {"question_id": 748, "answer_sql": "SELECT DISTINCT stage_presence FROM performance_score JOIN songs ON performance_score.songs_id = songs.id WHERE songs.language = English"}, {"question_id": 749, "answer_sql": "SELECT participants.id , participants.name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id GROUP BY participants.id HAVING count(*) >= 2"}, {"question_id": 750, "answer_sql": "SELECT id , name , popularity FROM participants ORDER BY count(*)"}, {"question_id": 751, "answer_sql": "SELECT participants.id , participants.name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id WHERE performance_score.voice_sound_quality = 5 OR performance_score.rhythm_tempo = 5"}, {"question_id": 752, "answer_sql": "SELECT voice_sound_quality FROM performance_score JOIN songs ON performance_score.songs_id = songs.id WHERE songs.english_translation = The Balkan Girls"}, {"question_id": 753, "answer_sql": "SELECT songs.id , songs.name FROM performance_score JOIN songs ON performance_score.songs_id = songs.id GROUP BY songs.id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 754, "answer_sql": "SELECT count(*) FROM performance_score WHERE stage_presence < 7 OR stage_presence > 9"}, {"question_id": 755, "answer_sql": "SELECT count(*) FROM songs WHERE id NOT IN (SELECT songs_id FROM performance_score)"}, {"question_id": 756, "answer_sql": "SELECT avg(rhythm_tempo) , language FROM performance_score GROUP BY language"}, {"question_id": 757, "answer_sql": "SELECT DISTINCT name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id JOIN songs ON songs.id = performance_score.songs_id WHERE songs.language = English"}, {"question_id": 758, "answer_sql": "SELECT participants.name , participants.popularity FROM participants JOIN performance_score ON participants.id = performance_score.participant_id JOIN songs ON songs.id = performance_score.songs_id WHERE songs.language = Croatian INTERSECT SELECT participants.name , participants.popularity FROM participants JOIN performance_score ON participants.id = performance_score.participant_id JOIN songs ON songs.id = performance_score.songs_id WHERE songs.language = English"}, {"question_id": 759, "answer_sql": "SELECT name FROM songs WHERE name LIKE %Is%"}, {"question_id": 760, "answer_sql": "SELECT original_artist FROM songs WHERE rhythm_tempo > 5 ORDER BY voice_sound_quality DESC"}, {"question_id": 761, "answer_sql": "SELECT count(*) FROM City"}, {"question_id": 762, "answer_sql": "SELECT count(*) FROM City"}, {"question_id": 763, "answer_sql": "SELECT DISTINCT state FROM City"}, {"question_id": 764, "answer_sql": "SELECT DISTINCT state FROM City"}, {"question_id": 765, "answer_sql": "SELECT count(*) FROM City"}, {"question_id": 766, "answer_sql": "SELECT count(DISTINCT country) FROM City"}, {"question_id": 767, "answer_sql": "SELECT city_name , city_code , state , country FROM City"}, {"question_id": 768, "answer_sql": "SELECT city_name , city_code , state , country FROM City"}, {"question_id": 769, "answer_sql": "SELECT latitude , longitude FROM City WHERE city_name = Baltimore ;"}, {"question_id": 770, "answer_sql": "SELECT latitude , longitude FROM City WHERE city_name = Baltimore ;"}, {"question_id": 771, "answer_sql": "SELECT city_name FROM City WHERE state = PA"}, {"question_id": 772, "answer_sql": "SELECT city_name FROM City WHERE state = PA ;"}, {"question_id": 773, "answer_sql": "SELECT count(*) FROM City WHERE country = Canada ;"}, {"question_id": 774, "answer_sql": "SELECT count(*) FROM City WHERE country = Canada ;"}, {"question_id": 775, "answer_sql": "SELECT city_name FROM City WHERE state = USA ORDER BY latitude"}, {"question_id": 776, "answer_sql": "SELECT city_name FROM City WHERE country = USA ORDER BY latitude"}, {"question_id": 777, "answer_sql": "SELECT state , count(*) FROM City GROUP BY state"}, {"question_id": 778, "answer_sql": "SELECT state , count(*) FROM City GROUP BY state"}, {"question_id": 779, "answer_sql": "SELECT country , count(*) FROM City GROUP BY country"}, {"question_id": 780, "answer_sql": "SELECT country , count(*) FROM City GROUP BY country"}, {"question_id": 781, "answer_sql": "SELECT state FROM City GROUP BY state HAVING count(*) >= 2"}, {"question_id": 782, "answer_sql": "SELECT state FROM City GROUP BY state HAVING count(*) >= 2"}, {"question_id": 783, "answer_sql": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 784, "answer_sql": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 785, "answer_sql": "SELECT country FROM City GROUP BY country ORDER BY count(*) LIMIT 1"}, {"question_id": 786, "answer_sql": "SELECT country FROM City GROUP BY country ORDER BY count(*) LIMIT 1"}, {"question_id": 787, "answer_sql": "SELECT Fname , LName FROM Student WHERE state = MD"}, {"question_id": 788, "answer_sql": "SELECT LName , Fname FROM Student WHERE city_code = MD ;"}, {"question_id": 789, "answer_sql": "SELECT count(*) FROM Student WHERE city_code = CHN ;"}, {"question_id": 790, "answer_sql": "SELECT count(*) FROM Student WHERE city_code = CHN ;"}, {"question_id": 791, "answer_sql": "SELECT Fname , Major FROM Student WHERE city_code = Baltimore ;"}, {"question_id": 792, "answer_sql": "SELECT Fname , Major FROM Student WHERE city_code = Baltimore ;"}, {"question_id": 793, "answer_sql": "SELECT country , count(*) FROM Student GROUP BY country"}, {"question_id": 794, "answer_sql": "SELECT country , count(*) FROM Student GROUP BY country"}, {"question_id": 795, "answer_sql": "SELECT city_name , count(*) FROM Student GROUP BY city_name"}, {"question_id": 796, "answer_sql": "SELECT city_name , count(*) FROM Student GROUP BY city_name"}, {"question_id": 797, "answer_sql": "SELECT state FROM Student GROUP BY state ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 798, "answer_sql": "SELECT state FROM Student GROUP BY state ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 799, "answer_sql": "SELECT country FROM Student GROUP BY country ORDER BY count(*) LIMIT 1"}, {"question_id": 800, "answer_sql": "SELECT country FROM Student GROUP BY country ORDER BY count(*) LIMIT 1"}, {"question_id": 801, "answer_sql": "SELECT city_name FROM Student GROUP BY city_name HAVING count(*) >= 3"}, {"question_id": 802, "answer_sql": "SELECT city_name FROM Student GROUP BY city_name HAVING count(*) >= 3"}, {"question_id": 803, "answer_sql": "SELECT state FROM Student GROUP BY state HAVING count(*) > 5"}, {"question_id": 804, "answer_sql": "SELECT state FROM Student GROUP BY state HAVING count(*) > 5"}, {"question_id": 805, "answer_sql": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = USA )"}, {"question_id": 806, "answer_sql": "SELECT StuID FROM Student WHERE city_code != USA ;"}, {"question_id": 807, "answer_sql": "SELECT StuID FROM Student WHERE sex = F AND city_code IN (SELECT city_code FROM City WHERE state = PA )"}, {"question_id": 808, "answer_sql": "SELECT StuID FROM Student WHERE Sex = F AND state = PA ;"}, {"question_id": 809, "answer_sql": "SELECT StuID FROM Student WHERE Sex = M EXCEPT SELECT StuID FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country != USA )"}, {"question_id": 810, "answer_sql": "SELECT StuID FROM Student WHERE Sex = M EXCEPT SELECT StuID FROM Student WHERE country = USA"}, {"question_id": 811, "answer_sql": "SELECT distance FROM Direct_distance WHERE city1_code = BAL AND city2_code = CHI ;"}, {"question_id": 812, "answer_sql": "SELECT distance FROM Direct_distance WHERE city1_code = BAL AND city2_code = CHI ;"}, {"question_id": 813, "answer_sql": "SELECT distance FROM Direct_distance WHERE city1_code = Boston AND city2_code = Newark ;"}, {"question_id": 814, "answer_sql": "SELECT distance FROM Direct_distance WHERE city1_code = Boston AND city2_code = Newark ;"}, {"question_id": 815, "answer_sql": "SELECT avg(distance) , min(distance) , max(distance) FROM Direct_distance"}, {"question_id": 816, "answer_sql": "SELECT avg(distance) , min(distance) , max(distance) FROM Direct_distance"}, {"question_id": 817, "answer_sql": "SELECT city1_code , city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 2"}, {"question_id": 818, "answer_sql": "SELECT city1_code FROM Direct_distance GROUP BY city1_code ORDER BY max(distance) DESC LIMIT 1"}, {"question_id": 819, "answer_sql": "SELECT city1_code , city2_code FROM Direct_distance WHERE distance > (SELECT avg(distance) FROM Direct_distance)"}, {"question_id": 820, "answer_sql": "SELECT city1_code FROM Direct_distance WHERE distance > (SELECT avg(distance) FROM Direct_distance)"}, {"question_id": 821, "answer_sql": "SELECT city1_code , city2_code FROM Direct_distance WHERE distance < 1000"}, {"question_id": 822, "answer_sql": "SELECT city1_code FROM Direct_distance WHERE distance < 1000"}, {"question_id": 823, "answer_sql": "SELECT sum(distance) FROM Direct_distance WHERE city1_code = BAL"}, {"question_id": 824, "answer_sql": "SELECT sum(distance) FROM Direct_distance WHERE city1_code = BAL"}, {"question_id": 825, "answer_sql": "SELECT avg(distance) FROM Direct_distance WHERE city1_code = Boston ;"}, {"question_id": 826, "answer_sql": "SELECT avg(distance) FROM Direct_distance WHERE city1_code = Boston ;"}, {"question_id": 827, "answer_sql": "SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city"}, {"question_id": 828, "answer_sql": "SELECT city_name FROM City WHERE city_name IN (SELECT city_name FROM City WHERE city_name = Chicago ORDER BY city_name LIMIT 1)"}, {"question_id": 829, "answer_sql": "SELECT city_name FROM City WHERE city_name = (SELECT city_name FROM City WHERE city_name = Boston ORDER BY distance LIMIT 1)"}, {"question_id": 830, "answer_sql": "SELECT city_name FROM City ORDER BY distance LIMIT 1"}, {"question_id": 831, "answer_sql": "SELECT city1_code , sum(distance) FROM Direct_distance GROUP BY city1_code"}, {"question_id": 832, "answer_sql": "SELECT city1_code , sum(distance) FROM Direct_distance GROUP BY city1_code"}, {"question_id": 833, "answer_sql": "SELECT city_name , avg(distance) FROM Direct_distance GROUP BY city1_code"}, {"question_id": 834, "answer_sql": "SELECT city_name , avg(distance) FROM Direct_distance GROUP BY city1_code"}, {"question_id": 835, "answer_sql": "SELECT city_name FROM Student WHERE Fname = Linda AND LName = Smith UNION SELECT city_name FROM Student WHERE Fname = Tracy AND LName = Kim ;"}, {"question_id": 836, "answer_sql": "SELECT Direct_distance.distance FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code JOIN City ON Direct_distance.city2_code = City.city_code WHERE City.city_name = Linda Smith AND City.city_name = Tracy Kim ;"}, {"question_id": 837, "answer_sql": "SELECT DISTINCT Student.Fname , Student.LName FROM Student JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code JOIN Student ON Student.city_code = Direct_distance.city2_code WHERE Student.LName = Linda AND Student.Fname = Smith ORDER BY Direct_distance.distance LIMIT 1"}, {"question_id": 838, "answer_sql": "SELECT Student.LName , Student.Fname FROM Student JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code WHERE Student.Fname = Linda AND Student.Lname = Smith ORDER BY distance DESC LIMIT 1"}, {"question_id": 839, "answer_sql": "SELECT state FROM Student WHERE Fname = Linda"}, {"question_id": 840, "answer_sql": "SELECT state FROM Student WHERE Fname = Linda"}, {"question_id": 841, "answer_sql": "SELECT * FROM Sailors WHERE age > 30"}, {"question_id": 842, "answer_sql": "SELECT name FROM Sailors WHERE age > 30"}, {"question_id": 843, "answer_sql": "SELECT name , age FROM Sailors WHERE age < 30"}, {"question_id": 844, "answer_sql": "SELECT name , age FROM Sailors WHERE age < 30"}, {"question_id": 845, "answer_sql": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid = 1"}, {"question_id": 846, "answer_sql": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1"}, {"question_id": 847, "answer_sql": "SELECT name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid = 102)"}, {"question_id": 848, "answer_sql": "SELECT name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid = 102)"}, {"question_id": 849, "answer_sql": "SELECT DISTINCT bid FROM Reserves"}, {"question_id": 850, "answer_sql": "SELECT bid FROM Reserves"}, {"question_id": 851, "answer_sql": "SELECT name FROM Sailors WHERE name LIKE %e%"}, {"question_id": 852, "answer_sql": "SELECT name FROM Sailors WHERE name LIKE %e%"}, {"question_id": 853, "answer_sql": "SELECT DISTINCT sid FROM Sailors WHERE age > (SELECT max(age) FROM Sailors)"}, {"question_id": 854, "answer_sql": "SELECT DISTINCT sid FROM Sailors WHERE age != (SELECT min(age) FROM Sailors)"}, {"question_id": 855, "answer_sql": "SELECT name FROM Sailors WHERE age > (SELECT max(age) FROM Sailors WHERE rating > 7)"}, {"question_id": 856, "answer_sql": "SELECT DISTINCT name FROM Sailors WHERE age > (SELECT max(age) FROM Sailors WHERE rating > 7)"}, {"question_id": 857, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid"}, {"question_id": 858, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid"}, {"question_id": 859, "answer_sql": "SELECT Sailors.sid , Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid HAVING count(*) > 1"}, {"question_id": 860, "answer_sql": "SELECT DISTINCT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name HAVING count(*) >= 2"}, {"question_id": 861, "answer_sql": "SELECT sid FROM Boats WHERE color = red INTERSECT SELECT sid FROM Boats WHERE color = blue"}, {"question_id": 862, "answer_sql": "SELECT sid FROM Reserves WHERE bid IN (SELECT bid FROM Boats WHERE color = red ) OR bid IN (SELECT bid FROM Boats WHERE color = blue )"}, {"question_id": 863, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color = red OR Boats.color = blue"}, {"question_id": 864, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color = red OR Boats.color = blue"}, {"question_id": 865, "answer_sql": "SELECT sid FROM Boats WHERE color = red INTERSECT SELECT sid FROM Boats WHERE color = blue"}, {"question_id": 866, "answer_sql": "SELECT sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = red INTERSECT SELECT sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = blue"}, {"question_id": 867, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color = red AND Boats.color = blue"}, {"question_id": 868, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color = red AND Boats.color = blue"}, {"question_id": 869, "answer_sql": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"}, {"question_id": 870, "answer_sql": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"}, {"question_id": 871, "answer_sql": "SELECT name , sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves)"}, {"question_id": 872, "answer_sql": "SELECT name , sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves)"}, {"question_id": 873, "answer_sql": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"}, {"question_id": 874, "answer_sql": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves"}, {"question_id": 875, "answer_sql": "SELECT name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid = 103)"}, {"question_id": 876, "answer_sql": "SELECT name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves WHERE bid = 103)"}, {"question_id": 877, "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT max(rating) FROM Sailors WHERE name = Luis )"}, {"question_id": 878, "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT max(rating) FROM Sailors WHERE name = Luis )"}, {"question_id": 879, "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT max(rating) FROM Sailors WHERE name != Luis )"}, {"question_id": 880, "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT max(rating) FROM Sailors WHERE name = Luis )"}, {"question_id": 881, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > 2"}, {"question_id": 882, "answer_sql": "SELECT Sailors.name , Reserves.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating >= 3"}, {"question_id": 883, "answer_sql": "SELECT name , age FROM Sailors ORDER BY age DESC LIMIT 1"}, {"question_id": 884, "answer_sql": "SELECT name , age FROM Sailors ORDER BY age DESC LIMIT 1"}, {"question_id": 885, "answer_sql": "SELECT count(*) FROM Sailors"}, {"question_id": 886, "answer_sql": "SELECT count(*) FROM Sailors"}, {"question_id": 887, "answer_sql": "SELECT avg(age) FROM Sailors WHERE rating = 7"}, {"question_id": 888, "answer_sql": "SELECT avg(age) FROM Sailors WHERE rating = 7"}, {"question_id": 889, "answer_sql": "SELECT count(*) FROM Sailors WHERE name LIKE D%"}, {"question_id": 890, "answer_sql": "SELECT count(*) FROM Sailors WHERE name LIKE D%"}, {"question_id": 891, "answer_sql": "SELECT avg(rating) , max(age) FROM Sailors"}, {"question_id": 892, "answer_sql": "SELECT avg(rating) , max(age) FROM Sailors"}, {"question_id": 893, "answer_sql": "SELECT count(*) , Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name"}, {"question_id": 894, "answer_sql": "SELECT count(*) , Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name"}, {"question_id": 895, "answer_sql": "SELECT count(*) FROM Reserves WHERE bid > 50"}, {"question_id": 896, "answer_sql": "SELECT count(*) FROM Reserves WHERE bid > 50"}, {"question_id": 897, "answer_sql": "SELECT count(*) , Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name HAVING count(*) > 1"}, {"question_id": 898, "answer_sql": "SELECT Boats.name , count(*) FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name HAVING count(*) > 1"}, {"question_id": 899, "answer_sql": "SELECT count(*) , Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid > 1 GROUP BY Boats.name"}, {"question_id": 900, "answer_sql": "SELECT Boats.name , count(*) FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.sid > 1 GROUP BY Boats.name"}, {"question_id": 901, "answer_sql": "SELECT rating , avg(age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Boats.bid = Reserves.bid WHERE Boats.color = red GROUP BY rating"}, {"question_id": 902, "answer_sql": "SELECT rating , avg(age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Boats.bid = Reserves.bid WHERE Boats.color = red GROUP BY rating"}, {"question_id": 903, "answer_sql": "SELECT name , rating , age FROM Sailors ORDER BY rating , age"}, {"question_id": 904, "answer_sql": "SELECT name , rating , age FROM Sailors ORDER BY rating , age"}, {"question_id": 905, "answer_sql": "SELECT count(*) FROM Boats"}, {"question_id": 906, "answer_sql": "SELECT count(*) FROM Boats"}, {"question_id": 907, "answer_sql": "SELECT count(*) FROM Boats WHERE color = red ;"}, {"question_id": 908, "answer_sql": "SELECT count(*) FROM Boats WHERE color = red ;"}, {"question_id": 909, "answer_sql": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.age BETWEEN 20 AND 30"}, {"question_id": 910, "answer_sql": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.age BETWEEN 20 AND 30"}, {"question_id": 911, "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT min(rating) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Boats.bid = Reserves.bid WHERE Boats.color = red )"}, {"question_id": 912, "answer_sql": "SELECT name FROM Sailors WHERE rating > (SELECT max(rating) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Boats.bid = Reserves.bid WHERE Boats.color = red )"}, {"question_id": 913, "answer_sql": "SELECT max(rating) FROM Sailors"}, {"question_id": 914, "answer_sql": "SELECT max(rating) FROM Sailors"}, {"question_id": 915, "answer_sql": "SELECT name FROM Sailors WHERE sid IN (SELECT sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = Melon )"}, {"question_id": 916, "answer_sql": "SELECT name FROM Sailors INTERSECT SELECT name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.name = Melon"}, {"question_id": 917, "answer_sql": "SELECT name , age FROM Sailors ORDER BY rating DESC"}, {"question_id": 918, "answer_sql": "SELECT name , age FROM Sailors ORDER BY rating DESC"}, {"question_id": 919, "answer_sql": "SELECT Model FROM headphone ORDER BY Price DESC LIMIT 1"}, {"question_id": 920, "answer_sql": "SELECT Model FROM headphone ORDER BY Price DESC LIMIT 1"}, {"question_id": 921, "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model"}, {"question_id": 922, "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model"}, {"question_id": 923, "answer_sql": "SELECT Class FROM headphone GROUP BY Class ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 924, "answer_sql": "SELECT Class FROM headphone GROUP BY Class ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 925, "answer_sql": "SELECT Class FROM headphone GROUP BY Class HAVING count(*) > 2"}, {"question_id": 926, "answer_sql": "SELECT Class FROM headphone GROUP BY Class HAVING count(*) <= 2"}, {"question_id": 927, "answer_sql": "SELECT Class , count(*) FROM headphone WHERE Price > 200 GROUP BY Class"}, {"question_id": 928, "answer_sql": "SELECT Class , count(*) FROM headphone WHERE Price > 200 GROUP BY Class"}, {"question_id": 929, "answer_sql": "SELECT count(DISTINCT Earpads) FROM headphone"}, {"question_id": 930, "answer_sql": "SELECT count(DISTINCT Earpads) FROM headphone"}, {"question_id": 931, "answer_sql": "SELECT Earpads FROM headphone GROUP BY Earpads ORDER BY count(*) DESC LIMIT 2"}, {"question_id": 932, "answer_sql": "SELECT Earpads FROM headphone GROUP BY Earpads ORDER BY count(*) DESC LIMIT 2"}, {"question_id": 933, "answer_sql": "SELECT Model , Class , Construction FROM headphone ORDER BY Price ASC LIMIT 1"}, {"question_id": 934, "answer_sql": "SELECT Model , Class , Construction FROM headphone ORDER BY Price ASC LIMIT 1"}, {"question_id": 935, "answer_sql": "SELECT avg(Price) , Construction FROM headphone GROUP BY Construction"}, {"question_id": 936, "answer_sql": "SELECT avg(Price) , Construction FROM headphone GROUP BY Construction"}, {"question_id": 937, "answer_sql": "SELECT Class FROM headphone WHERE Earpads LIKE %Bowls% INTERSECT SELECT Class FROM headphone WHERE Earpads LIKE %Comfort Pads%"}, {"question_id": 938, "answer_sql": "SELECT Class FROM headphone WHERE Earpads LIKE %Bowls% INTERSECT SELECT Class FROM headphone WHERE Earpads LIKE %Comfort Pads%"}, {"question_id": 939, "answer_sql": "SELECT Earpads FROM headphone WHERE Construction != plastic"}, {"question_id": 940, "answer_sql": "SELECT Earpads FROM headphone WHERE Construction != plastic"}, {"question_id": 941, "answer_sql": "SELECT Model FROM headphone WHERE Price < (SELECT avg(Price) FROM headphone)"}, {"question_id": 942, "answer_sql": "SELECT Model FROM headphone WHERE Price < (SELECT avg(Price) FROM headphone)"}, {"question_id": 943, "answer_sql": "SELECT Name FROM store ORDER BY Date_Opened"}, {"question_id": 944, "answer_sql": "SELECT Name FROM store ORDER BY Date_Opened"}, {"question_id": 945, "answer_sql": "SELECT Name , Parking FROM store WHERE Neighborhood = Tarzana ;"}, {"question_id": 946, "answer_sql": "SELECT Name , Parking FROM store WHERE Neighborhood = Tarzana"}, {"question_id": 947, "answer_sql": "SELECT count(DISTINCT Neighborhood) FROM store"}, {"question_id": 948, "answer_sql": "SELECT count(DISTINCT Neighborhood) FROM store"}, {"question_id": 949, "answer_sql": "SELECT Neighborhood , count(*) FROM store GROUP BY Neighborhood"}, {"question_id": 950, "answer_sql": "SELECT Neighborhood , count(*) FROM store GROUP BY Neighborhood"}, {"question_id": 951, "answer_sql": "SELECT store.Name , count(*) FROM stock JOIN store ON stock.Store_ID = store.Store_ID GROUP BY stock.Store_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 952, "answer_sql": "SELECT store.Name , sum(stock.Quantity) FROM stock JOIN store ON stock.Store_ID = store.Store_ID GROUP BY stock.Store_ID"}, {"question_id": 953, "answer_sql": "SELECT Name FROM store WHERE Store_ID NOT IN (SELECT Store_ID FROM stock)"}, {"question_id": 954, "answer_sql": "SELECT Name FROM store WHERE Store_ID NOT IN (SELECT Store_ID FROM stock)"}, {"question_id": 955, "answer_sql": "SELECT Model FROM headphone WHERE Headphone_ID NOT IN (SELECT Headphone_ID FROM stock)"}, {"question_id": 956, "answer_sql": "SELECT Model FROM headphone WHERE Headphone_ID NOT IN (SELECT Headphone_ID FROM stock)"}, {"question_id": 957, "answer_sql": "SELECT headphone.Model FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID GROUP BY stock.Headphone_ID ORDER BY sum(stock.Quantity) DESC LIMIT 1"}, {"question_id": 958, "answer_sql": "SELECT headphone.Model FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID GROUP BY stock.Headphone_ID ORDER BY sum(stock.Quantity) DESC LIMIT 1"}, {"question_id": 959, "answer_sql": "SELECT count(*) FROM stock JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = Woodman ;"}, {"question_id": 960, "answer_sql": "SELECT sum(stock.Quantity) FROM stock JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = Woodman ;"}, {"question_id": 961, "answer_sql": "SELECT Name FROM store WHERE Neighborhood NOT IN (SELECT Neighborhood FROM stock)"}, {"question_id": 962, "answer_sql": "SELECT Neighborhood FROM store EXCEPT SELECT store.Neighborhood FROM store JOIN stock ON store.Store_ID = stock.Store_ID"}, {"question_id": 963, "answer_sql": "SELECT count(*) FROM Author"}, {"question_id": 964, "answer_sql": "SELECT count(*) FROM Author"}, {"question_id": 965, "answer_sql": "SELECT count(*) FROM Paper"}, {"question_id": 966, "answer_sql": "SELECT count(*) FROM Paper"}, {"question_id": 967, "answer_sql": "SELECT count(*) FROM Affiliation"}, {"question_id": 968, "answer_sql": "SELECT count(*) FROM Affiliation"}, {"question_id": 969, "answer_sql": "SELECT count(*) FROM Paper WHERE YEAR = 2000 AND venue = NAACL ;"}, {"question_id": 970, "answer_sql": "SELECT count(*) FROM Paper WHERE YEAR = 2000 AND venue = NAACL ;"}, {"question_id": 971, "answer_sql": "SELECT count(*) FROM Paper WHERE YEAR = 2009 AND title LIKE %Columbia University%"}, {"question_id": 972, "answer_sql": "SELECT count(*) FROM Paper WHERE title LIKE %Columbia University% AND YEAR = 2009"}, {"question_id": 973, "answer_sql": "SELECT name , address FROM Affiliation"}, {"question_id": 974, "answer_sql": "SELECT name , address FROM Affiliation"}, {"question_id": 975, "answer_sql": "SELECT venue , YEAR FROM Paper ORDER BY YEAR"}, {"question_id": 976, "answer_sql": "SELECT DISTINCT venue FROM Paper ORDER BY YEAR"}, {"question_id": 977, "answer_sql": "SELECT DISTINCT title , paper_id FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = Harvard University"}, {"question_id": 978, "answer_sql": "SELECT DISTINCT Paper.title , Paper.paper_id FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = Harvard University"}, {"question_id": 979, "answer_sql": "SELECT DISTINCT title , paper_id FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE name = Mckeown ;"}, {"question_id": 980, "answer_sql": "SELECT DISTINCT title , paper_id FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE name = Mckeown ;"}, {"question_id": 981, "answer_sql": "SELECT DISTINCT Paper.paper_id , Paper.title FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = Stanford University INTERSECT SELECT DISTINCT Paper.paper_id , Paper.title FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = Columbia University"}, {"question_id": 982, "answer_sql": "SELECT DISTINCT Paper.title , Paper.paper_id FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = Stanford INTERSECT SELECT DISTINCT Paper.title , Paper.paper_id FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = Columbia University"}, {"question_id": 983, "answer_sql": "SELECT DISTINCT Paper.paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Author_list ON Author_list.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Paper.paper_id = Author_list.paper_id WHERE Author.name = Mckeown AND Author.name = Kathleen AND Author.name = Rambow AND Author.name = Owen ;"}, {"question_id": 984, "answer_sql": "SELECT DISTINCT Paper.title , Author_list.paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Author_list ON Author_list.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = Mckeown AND Author.name = Kathleen AND Author.name = Rambow AND Author.name = Owen ;"}, {"question_id": 985, "answer_sql": "SELECT DISTINCT title , paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = Mckeown EXCEPT SELECT DISTINCT title , paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = Rambow"}, {"question_id": 986, "answer_sql": "SELECT DISTINCT title , paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = Mckeown EXCEPT SELECT DISTINCT title , paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = Rambow"}, {"question_id": 987, "answer_sql": "SELECT DISTINCT Paper.title , Paper.paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = Mckeown OR Author.name = Kathleen OR Author.name = Rambow OR Author.name = Owens ;"}, {"question_id": 988, "answer_sql": "SELECT DISTINCT Paper.title , Paper.paper_id FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Author.name = Mckeown OR Author.name = Kathleen OR Author.name = Rambow OR Author.name = Owen"}, {"question_id": 989, "answer_sql": "SELECT name , count(*) FROM Author_list GROUP BY author_id ORDER BY count(*) DESC"}, {"question_id": 990, "answer_sql": "SELECT author_id , count(*) FROM Author_list GROUP BY author_id ORDER BY count(*) DESC"}, {"question_id": 991, "answer_sql": "SELECT Affiliation.name FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Affiliation.affiliation_id ORDER BY count(*) ASC"}, {"question_id": 992, "answer_sql": "SELECT name FROM Affiliation ORDER BY count(*)"}, {"question_id": 993, "answer_sql": "SELECT name FROM Author_list GROUP BY author_id HAVING count(*) > 50"}, {"question_id": 994, "answer_sql": "SELECT name FROM Author_list GROUP BY author_id HAVING count(*) > 50"}, {"question_id": 995, "answer_sql": "SELECT name FROM Author GROUP BY author_id HAVING count(*) = 1"}, {"question_id": 996, "answer_sql": "SELECT name FROM Author GROUP BY name HAVING count(*) = 1"}, {"question_id": 997, "answer_sql": "SELECT venue , YEAR FROM Paper GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 998, "answer_sql": "SELECT venue , YEAR FROM Paper GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 999, "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY count(*) LIMIT 1"}, {"question_id": 1000, "answer_sql": "SELECT venue FROM Paper GROUP BY venue ORDER BY count(*) LIMIT 1"}, {"question_id": 1001, "answer_sql": "SELECT DISTINCT COUNT (DISTINCT cited_paper_id) FROM Citation WHERE paper_id = A00-1002 ;"}, {"question_id": 1002, "answer_sql": "SELECT count(*) FROM Citation WHERE cited_paper_id = A00-1002 ;"}, {"question_id": 1003, "answer_sql": "SELECT count(*) FROM Citation WHERE paper_id = D12-1027 ;"}, {"question_id": 1004, "answer_sql": "SELECT count(*) FROM Citation WHERE paper_id = D12-1027 ;"}, {"question_id": 1005, "answer_sql": "SELECT cited_paper_id , count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1006, "answer_sql": "SELECT cited_paper_id , count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1007, "answer_sql": "SELECT title FROM Paper ORDER BY COUNT (DISTINCT cited_paper_id) DESC LIMIT 1"}, {"question_id": 1008, "answer_sql": "SELECT title FROM Paper ORDER BY COUNT (DISTINCT cited_paper_id) DESC LIMIT 1"}, {"question_id": 1009, "answer_sql": "SELECT cited_paper_id , count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10"}, {"question_id": 1010, "answer_sql": "SELECT DISTINCT COUNT (DISTINCT cited_paper_id) , paper_id FROM Citation GROUP BY paper_id ORDER BY COUNT (DISTINCT cited_paper_id) DESC LIMIT 10"}, {"question_id": 1011, "answer_sql": "SELECT count(*) FROM Citation JOIN Author ON Citation.paper_id = Author.author_id WHERE Author.name = Mckeown AND Author.name = Kathleen ;"}, {"question_id": 1012, "answer_sql": "SELECT count(*) FROM Citation JOIN Author ON Citation.paper_id = Author.paper_id WHERE Author.name = Mckeown AND Author.name = Kathleen ;"}, {"question_id": 1013, "answer_sql": "SELECT DISTINCT COUNT (DISTINCT cited_paper_id) FROM Citation WHERE paper_id IN (SELECT paper_id FROM Author_list WHERE name = Mckeown , Kathleen )"}, {"question_id": 1014, "answer_sql": "SELECT count(*) FROM Citation JOIN Paper ON Citation.paper_id = Paper.paper_id JOIN Author ON Citation.cited_paper_id = Author.author_id WHERE Author.name = Mckeown AND Author.name = Kathleen ;"}, {"question_id": 1015, "answer_sql": "SELECT author.name , count(*) FROM Author JOIN Author_list ON author.author_id = Author_list.author_id JOIN Citation ON Author_list.paper_id = Citation.paper_id GROUP BY author.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1016, "answer_sql": "SELECT author.name , count(*) FROM Author JOIN Author_list ON author.author_id = Author_list.author_id JOIN Citation ON Author_list.paper_id = Citation.paper_id GROUP BY author.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1017, "answer_sql": "SELECT DISTINCT venue , YEAR FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = Mckeown AND Author.name = Kathleen"}, {"question_id": 1018, "answer_sql": "SELECT DISTINCT venue , YEAR FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = Mckeown AND Author.name = Kathleen ;"}, {"question_id": 1019, "answer_sql": "SELECT venue , YEAR FROM Paper WHERE title LIKE %Columbia University%"}, {"question_id": 1020, "answer_sql": "SELECT DISTINCT venue , YEAR FROM Paper WHERE title LIKE %Columbia University%"}, {"question_id": 1021, "answer_sql": "SELECT Author.name FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Paper.paper_id = Author_list.paper_id WHERE Paper.year = 2009 GROUP BY Author.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1022, "answer_sql": "SELECT Author.name FROM Author_list JOIN Paper ON Author_list.paper_id = Paper.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Paper.year = 2009 GROUP BY Author.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1023, "answer_sql": "SELECT name FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.year = 2009 GROUP BY Affiliation.affiliation_id ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1024, "answer_sql": "SELECT Affiliation.name FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.year = 2009 GROUP BY Affiliation.affiliation_id ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1025, "answer_sql": "SELECT count(*) FROM Paper WHERE YEAR <= 2009;"}, {"question_id": 1026, "answer_sql": "SELECT count(*) FROM Paper WHERE YEAR < 2009;"}, {"question_id": 1027, "answer_sql": "SELECT count(*) FROM Paper WHERE YEAR BETWEEN 2000 AND 2009;"}, {"question_id": 1028, "answer_sql": "SELECT count(*) FROM Paper WHERE YEAR BETWEEN 2000 AND 2009"}, {"question_id": 1029, "answer_sql": "SELECT title FROM Paper GROUP BY title ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1030, "answer_sql": "SELECT title FROM Paper ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1031, "answer_sql": "SELECT count(*) FROM Author_list WHERE author_id = (SELECT author_id FROM Author WHERE name = Mckeown ) AND author_id = (SELECT author_id FROM Author WHERE name = Kathleen );"}, {"question_id": 1032, "answer_sql": "SELECT count(*) FROM Author_list WHERE author_id = (SELECT author_id FROM Author WHERE name = Mckeown ) AND author_id = (SELECT author_id FROM Author WHERE name = Kathleen );"}, {"question_id": 1033, "answer_sql": "SELECT DISTINCT COUNT (DISTINCT author_id) FROM Author_list WHERE name = Mckeown INTERSECT SELECT DISTINCT COUNT (DISTINCT author_id) FROM Author_list WHERE name = Kathleen ;"}, {"question_id": 1034, "answer_sql": "SELECT DISTINCT Author.name FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = Mckeown INTERSECT SELECT DISTINCT Author.name FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = Kathleen ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1035, "answer_sql": "SELECT DISTINCT paper_id FROM Paper WHERE title LIKE %translation%"}, {"question_id": 1036, "answer_sql": "SELECT DISTINCT paper_id FROM Paper WHERE title LIKE %translation%"}, {"question_id": 1037, "answer_sql": "SELECT DISTINCT paper_id , title FROM Paper WHERE paper_id NOT IN (SELECT DISTINCT paper_id FROM Citation)"}, {"question_id": 1038, "answer_sql": "SELECT DISTINCT paper_id , title FROM Paper WHERE paper_id NOT IN (SELECT DISTINCT paper_id FROM Citation)"}, {"question_id": 1039, "answer_sql": "SELECT Affiliation.name FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.address LIKE %China% GROUP BY Affiliation.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1040, "answer_sql": "SELECT Affiliation.name FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.venue LIKE %China% GROUP BY Affiliation.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1041, "answer_sql": "SELECT COUNT (DISTINCT paper_id) , YEAR FROM Paper GROUP BY YEAR"}, {"question_id": 1042, "answer_sql": "SELECT venue , YEAR , count(*) FROM Paper GROUP BY venue , YEAR"}, {"question_id": 1043, "answer_sql": "SELECT affiliation_id , count(*) FROM Author_list GROUP BY affiliation_id"}, {"question_id": 1044, "answer_sql": "SELECT affiliation_id , count(*) FROM Author_list GROUP BY affiliation_id"}, {"question_id": 1045, "answer_sql": "SELECT DISTINCT title FROM Citation JOIN Paper ON Citation.paper_id = Paper.paper_id GROUP BY title HAVING count(*) > 50"}, {"question_id": 1046, "answer_sql": "SELECT DISTINCT title FROM Citation JOIN Paper ON Citation.paper_id = Paper.paper_id GROUP BY title HAVING count(*) > 50"}, {"question_id": 1047, "answer_sql": "SELECT count(*) FROM (SELECT DISTINCT author_id FROM Author_list EXCEPT SELECT DISTINCT author_id FROM Citation GROUP BY author_id HAVING count(*) > 50)"}, {"question_id": 1048, "answer_sql": "SELECT count(*) FROM (SELECT DISTINCT author_id FROM Author_list JOIN Citation ON Author_list.paper_id = Citation.paper_id GROUP BY author_id HAVING count(*) > 50)"}, {"question_id": 1049, "answer_sql": "SELECT DISTINCT Author.name FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Affiliation.affiliation_id = Author_list.affiliation_id WHERE Affiliation.name = NAACL AND Affiliation.name = ACL AND Paper.year = 2009;"}, {"question_id": 1050, "answer_sql": "SELECT DISTINCT Author.name FROM Author_list JOIN Paper ON Author_list.paper_id = Paper.paper_id JOIN Author_list ON Author_list.paper_id = Paper.paper_id JOIN Paper ON Author_list.paper_id = Paper.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = NAACL AND Affiliation.name = ACL AND Paper.year = 2009;"}, {"question_id": 1051, "answer_sql": "SELECT name FROM Author EXCEPT SELECT DISTINCT Author.name FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.venue = ACL"}, {"question_id": 1052, "answer_sql": "SELECT name FROM Author EXCEPT SELECT DISTINCT Author.name FROM Author JOIN Author_list ON Author.author_id = Author_list.author_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.venue = ACL"}, {"question_id": 1053, "answer_sql": "SELECT count(*) FROM conference"}, {"question_id": 1054, "answer_sql": "SELECT count(*) FROM conference"}, {"question_id": 1055, "answer_sql": "SELECT DISTINCT Conference_Name FROM conference"}, {"question_id": 1056, "answer_sql": "SELECT DISTINCT Conference_Name FROM conference"}, {"question_id": 1057, "answer_sql": "SELECT Conference_Name , YEAR , LOCATION FROM conference"}, {"question_id": 1058, "answer_sql": "SELECT Conference_Name , YEAR , LOCATION FROM conference"}, {"question_id": 1059, "answer_sql": "SELECT Conference_Name , count(*) FROM conference GROUP BY Conference_Name"}, {"question_id": 1060, "answer_sql": "SELECT Conference_Name , count(*) FROM conference GROUP BY Conference_Name"}, {"question_id": 1061, "answer_sql": "SELECT YEAR , count(*) FROM conference GROUP BY YEAR"}, {"question_id": 1062, "answer_sql": "SELECT COUNT (DISTINCT Conference_Name) FROM conference"}, {"question_id": 1063, "answer_sql": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 1064, "answer_sql": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 1065, "answer_sql": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*) >= 2"}, {"question_id": 1066, "answer_sql": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*) >= 2"}, {"question_id": 1067, "answer_sql": "SELECT Institution_Name , LOCATION , Founded FROM institution"}, {"question_id": 1068, "answer_sql": "SELECT Institution_Name , LOCATION , Founded FROM institution"}, {"question_id": 1069, "answer_sql": "SELECT count(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900"}, {"question_id": 1070, "answer_sql": "SELECT count(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900"}, {"question_id": 1071, "answer_sql": "SELECT Institution_Name , LOCATION FROM institution ORDER BY Founded DESC LIMIT 1"}, {"question_id": 1072, "answer_sql": "SELECT Institution_Name , LOCATION FROM institution ORDER BY Founded DESC LIMIT 1"}, {"question_id": 1073, "answer_sql": "SELECT institution.Institution_Name , count(*) FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_Name"}, {"question_id": 1074, "answer_sql": "SELECT institution.Institution_Name , count(*) FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_Name"}, {"question_id": 1075, "answer_sql": "SELECT Institution_Name FROM institution WHERE Institution_ID NOT IN (SELECT Institution_ID FROM staff)"}, {"question_id": 1076, "answer_sql": "SELECT Institution_Name FROM institution WHERE Institution_ID NOT IN (SELECT Institution_ID FROM staff)"}, {"question_id": 1077, "answer_sql": "SELECT name FROM staff WHERE Age > (SELECT avg(Age) FROM staff)"}, {"question_id": 1078, "answer_sql": "SELECT name FROM staff WHERE Age > (SELECT avg(Age) FROM staff)"}, {"question_id": 1079, "answer_sql": "SELECT max(Age) , min(Age) FROM staff WHERE Nationality = United States ;"}, {"question_id": 1080, "answer_sql": "SELECT max(Age) , min(Age) FROM staff"}, {"question_id": 1081, "answer_sql": "SELECT conference.Conference_Name FROM conference_participation JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID JOIN staff ON conference_participation.staff_ID = staff.staff_ID WHERE staff.Nationality = Canada"}, {"question_id": 1082, "answer_sql": "SELECT conference.Conference_Name FROM conference_participation JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID JOIN staff ON conference_participation.staff_ID = staff.staff_ID WHERE staff.Nationality = Canada"}, {"question_id": 1083, "answer_sql": "SELECT name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE role = Speaker ) INTERSECT SELECT name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE role = Sponsor )"}, {"question_id": 1084, "answer_sql": "SELECT name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation INTERSECT SELECT staff_ID FROM conference_participation)"}, {"question_id": 1085, "answer_sql": "SELECT name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID IN (SELECT Conference_ID FROM conference WHERE Conference_Name = ACL )) INTERSECT SELECT name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID IN (SELECT Conference_ID FROM conference WHERE Conference_Name = Naccl ))"}, {"question_id": 1086, "answer_sql": "SELECT name FROM conference_participation WHERE Conference_ID = (SELECT Conference_ID FROM conference WHERE Conference_Name = ACL ) INTERSECT SELECT name FROM conference_participation WHERE Conference_ID = (SELECT Conference_ID FROM conference WHERE Conference_Name = NACCL )"}, {"question_id": 1087, "answer_sql": "SELECT name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID IN (SELECT Conference_ID FROM conference WHERE YEAR = 2003 OR YEAR = 2004));"}, {"question_id": 1088, "answer_sql": "SELECT name FROM staff WHERE staff_ID IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID IN (SELECT Conference_ID FROM conference WHERE YEAR >= 2003 OR YEAR >= 2004))"}, {"question_id": 1089, "answer_sql": "SELECT conference.Conference_Name , conference.Year , count(*) FROM conference JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Conference_ID"}, {"question_id": 1090, "answer_sql": "SELECT conference.Conference_Name , conference.Year , count(*) FROM conference JOIN conference_participation ON conference.Conference_ID = conference_participation.Conference_ID GROUP BY conference.Conference_ID"}, {"question_id": 1091, "answer_sql": "SELECT conference.Conference_Name FROM conference_participation JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID GROUP BY conference.Conference_Name ORDER BY count(*) DESC LIMIT 2"}, {"question_id": 1092, "answer_sql": "SELECT conference.Conference_Name FROM conference_participation JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID GROUP BY conference.Conference_Name ORDER BY count(*) DESC LIMIT 2"}, {"question_id": 1093, "answer_sql": "SELECT name , Nationality FROM staff WHERE staff_ID NOT IN (SELECT staff_ID FROM conference_participation)"}, {"question_id": 1094, "answer_sql": "SELECT name , Nationality FROM staff WHERE staff_ID NOT IN (SELECT staff_ID FROM conference_participation)"}, {"question_id": 1095, "answer_sql": "SELECT Institution_Name , LOCATION FROM institution WHERE Institution_ID NOT IN (SELECT Institution_ID FROM conference_participation WHERE YEAR = 2004)"}, {"question_id": 1096, "answer_sql": "SELECT Institution_Name , LOCATION FROM institution WHERE Institution_ID NOT IN (SELECT Institution_ID FROM conference_participation WHERE YEAR = 2004)"}, {"question_id": 1097, "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1"}, {"question_id": 1098, "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1"}, {"question_id": 1099, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT avg(age) FROM PilotSkills) ORDER BY age"}, {"question_id": 1100, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT avg(age) FROM PilotSkills) ORDER BY age ASC"}, {"question_id": 1101, "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30"}, {"question_id": 1102, "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30"}, {"question_id": 1103, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = Piper Cub AND age < 35"}, {"question_id": 1104, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age < 35 INTERSECT SELECT pilot_name FROM Hangar WHERE plane_name = Piper Cub"}, {"question_id": 1105, "answer_sql": "SELECT LOCATION FROM Hangar WHERE plane_name = F-14 Fighter ;"}, {"question_id": 1106, "answer_sql": "SELECT LOCATION FROM Hangar WHERE plane_name = F-14 Fighter ;"}, {"question_id": 1107, "answer_sql": "SELECT count(DISTINCT LOCATION) FROM Hangar"}, {"question_id": 1108, "answer_sql": "SELECT count(DISTINCT LOCATION) FROM Hangar"}, {"question_id": 1109, "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = Jones AND age = 32"}, {"question_id": 1110, "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = Jones AND age = 32"}, {"question_id": 1111, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > 40"}, {"question_id": 1112, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > 40"}, {"question_id": 1113, "answer_sql": "SELECT count(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name = B-52 Bomber AND PilotSkills.age < 35"}, {"question_id": 1114, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE LOCATION = B52 ) AND age < 35"}, {"question_id": 1115, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT min(age) FROM PilotSkills WHERE plane_name = Piper Cub )"}, {"question_id": 1116, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT min(age) FROM PilotSkills WHERE pilot_name = Piper Cub )"}, {"question_id": 1117, "answer_sql": "SELECT plane_name FROM Hangar ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1118, "answer_sql": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1119, "answer_sql": "SELECT plane_name FROM Hangar ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 1120, "answer_sql": "SELECT plane_name FROM Hangar GROUP BY plane_name ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 1121, "answer_sql": "SELECT count(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = Chicago ;"}, {"question_id": 1122, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE LOCATION = Chicago ;"}, {"question_id": 1123, "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = Smith AND age = 41"}, {"question_id": 1124, "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = Smith AND age = 41"}, {"question_id": 1125, "answer_sql": "SELECT count(DISTINCT plane_name) FROM Hangar"}, {"question_id": 1126, "answer_sql": "SELECT count(DISTINCT plane_name) FROM Hangar"}, {"question_id": 1127, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE pilot_name = Smith ;"}, {"question_id": 1128, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE pilot_name = Smith ;"}, {"question_id": 1129, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > 40"}, {"question_id": 1130, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > 40"}, {"question_id": 1131, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC"}, {"question_id": 1132, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC"}, {"question_id": 1133, "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC"}, {"question_id": 1134, "answer_sql": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC"}, {"question_id": 1135, "answer_sql": "SELECT LOCATION FROM Hangar ORDER BY plane_name"}, {"question_id": 1136, "answer_sql": "SELECT LOCATION FROM Hangar ORDER BY plane_name"}, {"question_id": 1137, "answer_sql": "SELECT DISTINCT TYPE FROM Hangar"}, {"question_id": 1138, "answer_sql": "SELECT DISTINCT plane_name FROM Hangar ORDER BY plane_name"}, {"question_id": 1139, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > 40 OR age < 30"}, {"question_id": 1140, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > 40 OR age < 30"}, {"question_id": 1141, "answer_sql": "SELECT pilot_name , age FROM PilotSkills WHERE plane_name = Piper Cub OR plane_name = F-14 Fighter AND age < 30 OR age > 35"}, {"question_id": 1142, "answer_sql": "SELECT pilot_name , age FROM PilotSkills WHERE plane_name = Piper Cub OR plane_name = F-14 Fighter AND age > 35 OR age < 30"}, {"question_id": 1143, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = Piper Cub EXCEPT SELECT pilot_name FROM PilotSkills WHERE plane_name = B-52 Bomber"}, {"question_id": 1144, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = Piper Cub EXCEPT SELECT pilot_name FROM PilotSkills WHERE plane_name = B-52 Bomber"}, {"question_id": 1145, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = Piper Cub INTERSECT SELECT pilot_name FROM PilotSkills WHERE plane_name = B-52 Bomber"}, {"question_id": 1146, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = B-52 Bomber INTERSECT SELECT pilot_name FROM PilotSkills WHERE plane_name = Piper Cub"}, {"question_id": 1147, "answer_sql": "SELECT avg(age) , min(age) FROM PilotSkills"}, {"question_id": 1148, "answer_sql": "SELECT avg(age) , min(age) FROM PilotSkills"}, {"question_id": 1149, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE LOCATION = Austin INTERSECT SELECT pilot_name FROM PilotSkills WHERE LOCATION = Boston"}, {"question_id": 1150, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE LOCATION = Austin INTERSECT SELECT pilot_name FROM PilotSkills WHERE LOCATION = Boston"}, {"question_id": 1151, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = Piper Cub OR plane_name = F-14 Fighter"}, {"question_id": 1152, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = F-14 Fighter OR plane_name = Piper Cub"}, {"question_id": 1153, "answer_sql": "SELECT avg(age) , plane_name FROM PilotSkills GROUP BY plane_name"}, {"question_id": 1154, "answer_sql": "SELECT avg(age) , plane_name FROM PilotSkills GROUP BY plane_name"}, {"question_id": 1155, "answer_sql": "SELECT count(*) , plane_name FROM Hangar GROUP BY plane_name"}, {"question_id": 1156, "answer_sql": "SELECT plane_name , count(*) FROM Hangar GROUP BY plane_name"}, {"question_id": 1157, "answer_sql": "SELECT pilot_name FROM PilotSkills GROUP BY plane_name ORDER BY max(age)"}, {"question_id": 1158, "answer_sql": "SELECT DISTINCT plane_name FROM PilotSkills ORDER BY plane_name"}, {"question_id": 1159, "answer_sql": "SELECT pilot_name FROM PilotSkills GROUP BY plane_name ORDER BY max(age)"}, {"question_id": 1160, "answer_sql": "SELECT pilot_name FROM PilotSkills GROUP BY pilot_name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1161, "answer_sql": "SELECT pilot_name , max(age) FROM PilotSkills GROUP BY pilot_name"}, {"question_id": 1162, "answer_sql": "SELECT pilot_name , max(age) FROM PilotSkills GROUP BY pilot_name"}, {"question_id": 1163, "answer_sql": "SELECT LOCATION , count(*) , avg(age) FROM PilotSkills GROUP BY LOCATION"}, {"question_id": 1164, "answer_sql": "SELECT LOCATION , count(*) , avg(age) FROM PilotSkills GROUP BY LOCATION"}, {"question_id": 1165, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age < 35"}, {"question_id": 1166, "answer_sql": "SELECT plane_name , count(*) FROM PilotSkills GROUP BY plane_name HAVING avg(age) < 35"}, {"question_id": 1167, "answer_sql": "SELECT LOCATION FROM Hangar ORDER BY age LIMIT 1"}, {"question_id": 1168, "answer_sql": "SELECT LOCATION FROM Hangar ORDER BY age LIMIT 1"}, {"question_id": 1169, "answer_sql": "SELECT pilot_name , age FROM PilotSkills WHERE LOCATION = Austin ;"}, {"question_id": 1170, "answer_sql": "SELECT pilot_name , age FROM PilotSkills WHERE LOCATION = Austin"}, {"question_id": 1171, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age > (SELECT min(age) FROM PilotSkills WHERE plane_name = Piper Cub ) ORDER BY pilot_name"}, {"question_id": 1172, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age > (SELECT max(age) FROM PilotSkills WHERE pilot_name = Piper Cub ) ORDER BY pilot_name"}, {"question_id": 1173, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age < (SELECT max(age) FROM PilotSkills WHERE plane_name = F-14 Fighter )"}, {"question_id": 1174, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age < (SELECT max(age) FROM PilotSkills WHERE plane_name = F-14 Fighter )"}, {"question_id": 1175, "answer_sql": "SELECT DISTINCT plane_name FROM Hangar WHERE plane_name LIKE %Bomber%"}, {"question_id": 1176, "answer_sql": "SELECT DISTINCT plane_name FROM Hangar WHERE plane_name LIKE %Bomber%"}, {"question_id": 1177, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > (SELECT min(age) FROM PilotSkills WHERE plane_name = Piper Cub )"}, {"question_id": 1178, "answer_sql": "SELECT count(*) FROM PilotSkills WHERE age > (SELECT min(age) FROM PilotSkills WHERE pilot_name = Piper Cub )"}, {"question_id": 1179, "answer_sql": "SELECT Name FROM district ORDER BY Area_km DESC LIMIT 1"}, {"question_id": 1180, "answer_sql": "SELECT Area_km , Government_website FROM district ORDER BY Population ASC LIMIT 1"}, {"question_id": 1181, "answer_sql": "SELECT Name , Population FROM district WHERE Area_km > (SELECT avg(Area_km) FROM district)"}, {"question_id": 1182, "answer_sql": "SELECT max(Area_km) , avg(Area_km) FROM district"}, {"question_id": 1183, "answer_sql": "SELECT sum(Population) FROM district ORDER BY Area_km DESC LIMIT 3"}, {"question_id": 1184, "answer_sql": "SELECT District_ID , Name , Government_website FROM district ORDER BY Population"}, {"question_id": 1185, "answer_sql": "SELECT Name FROM district WHERE Government_website LIKE %gov%"}, {"question_id": 1186, "answer_sql": "SELECT District_ID , Name FROM district WHERE Population > 4000 OR Area_km > 3000"}, {"question_id": 1187, "answer_sql": "SELECT Name , Speach_title FROM spokesman"}, {"question_id": 1188, "answer_sql": "SELECT avg(Points) , avg(Age) FROM spokesman WHERE Rank_position = 1"}, {"question_id": 1189, "answer_sql": "SELECT Name , Points FROM spokesman WHERE Age < 40"}, {"question_id": 1190, "answer_sql": "SELECT Name FROM spokesman ORDER BY Age DESC LIMIT 1"}, {"question_id": 1191, "answer_sql": "SELECT Name FROM spokesman WHERE Points < (SELECT avg(Points) FROM spokesman)"}, {"question_id": 1192, "answer_sql": "SELECT district.Name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID GROUP BY district.District_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1193, "answer_sql": "SELECT spokesman.Name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID JOIN spokesman ON spokesman_district.Spokesman_ID = spokesman.Spokesman_ID WHERE district.Start_year < 2004"}, {"question_id": 1194, "answer_sql": "SELECT district.Name , count(*) FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID GROUP BY district.Name"}, {"question_id": 1195, "answer_sql": "SELECT district.Name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID JOIN spokesman ON spokesman_district.Spokesman_ID = spokesman.Spokesman_ID WHERE spokesman.Rank_position = 1 INTERSECT SELECT district.Name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID JOIN spokesman ON spokesman_district.Spokesman_ID = spokesman.Spokesman_ID WHERE spokesman.Rank_position = 2"}, {"question_id": 1196, "answer_sql": "SELECT district.Name FROM district JOIN spokesman_district ON district.District_ID = spokesman_district.District_ID GROUP BY district.Name HAVING count(*) > 1"}, {"question_id": 1197, "answer_sql": "SELECT count(*) FROM district WHERE District_ID NOT IN (SELECT District_ID FROM spokesman_district)"}, {"question_id": 1198, "answer_sql": "SELECT Name FROM spokesman WHERE Spokesman_ID NOT IN (SELECT Spokesman_ID FROM spokesman_district)"}, {"question_id": 1199, "answer_sql": "SELECT sum(Population) , avg(Population) FROM district WHERE District_ID IN (SELECT District_ID FROM spokesman_district)"}, {"question_id": 1200, "answer_sql": "SELECT title FROM Sculptures ORDER BY YEAR DESC LIMIT 1"}, {"question_id": 1201, "answer_sql": "SELECT title FROM Sculptures ORDER BY YEAR DESC LIMIT 1"}, {"question_id": 1202, "answer_sql": "SELECT title , LOCATION FROM Paintings ORDER BY YEAR DESC LIMIT 1"}, {"question_id": 1203, "answer_sql": "SELECT title , LOCATION FROM Paintings ORDER BY birthYear DESC LIMIT 1"}, {"question_id": 1204, "answer_sql": "SELECT title FROM Sculptures WHERE LOCATION = gallery 226 ;"}, {"question_id": 1205, "answer_sql": "SELECT title FROM Sculptures WHERE location = gallery 226 ;"}, {"question_id": 1206, "answer_sql": "SELECT title , LOCATION FROM Paintings"}, {"question_id": 1207, "answer_sql": "SELECT title , LOCATION FROM Paintings"}, {"question_id": 1208, "answer_sql": "SELECT title , LOCATION FROM Sculptures"}, {"question_id": 1209, "answer_sql": "SELECT title , LOCATION FROM Sculptures"}, {"question_id": 1210, "answer_sql": "SELECT medium FROM Paintings WHERE paintingID = 80"}, {"question_id": 1211, "answer_sql": "SELECT medium FROM Paintings WHERE paintingID = 80"}, {"question_id": 1212, "answer_sql": "SELECT fname , lname FROM Artists WHERE birthYear > 1850"}, {"question_id": 1213, "answer_sql": "SELECT fname , lname FROM Artists WHERE birthYear > 1850"}, {"question_id": 1214, "answer_sql": "SELECT title , YEAR FROM Sculptures WHERE LOCATION != gallery 226"}, {"question_id": 1215, "answer_sql": "SELECT title , year FROM Sculptures WHERE LOCATION != gallery 226"}, {"question_id": 1216, "answer_sql": "SELECT DISTINCT fname , lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE YEAR < 1900"}, {"question_id": 1217, "answer_sql": "SELECT DISTINCT Artists.fname , Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.year < 1900"}, {"question_id": 1218, "answer_sql": "SELECT birthYear FROM Artists EXCEPT SELECT birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE YEAR > 1920"}, {"question_id": 1219, "answer_sql": "SELECT DISTINCT birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE YEAR > 1920"}, {"question_id": 1220, "answer_sql": "SELECT fname , lname FROM Artists WHERE deathYear - birthYear = (SELECT max(deathYear - birthYear) FROM Artists)"}, {"question_id": 1221, "answer_sql": "SELECT fname , lname FROM Artists ORDER BY deathYear - birthYear DESC LIMIT 1"}, {"question_id": 1222, "answer_sql": "SELECT birthYear FROM Artists ORDER BY deathYear - birthYear LIMIT 1"}, {"question_id": 1223, "answer_sql": "SELECT birthYear FROM Artists ORDER BY deathYear - birthYear LIMIT 1"}, {"question_id": 1224, "answer_sql": "SELECT fname , lname , (deathYear - birthYear) FROM Artists ORDER BY (deathYear - birthYear) DESC LIMIT 1"}, {"question_id": 1225, "answer_sql": "SELECT fname , lname , (deathYear - birthYear) FROM Artists ORDER BY deathYear - birthYear DESC LIMIT 1"}, {"question_id": 1226, "answer_sql": "SELECT count(*) FROM Paintings WHERE location = gallery 240 ;"}, {"question_id": 1227, "answer_sql": "SELECT count(*) FROM Paintings WHERE location = gallery 240 ;"}, {"question_id": 1228, "answer_sql": "SELECT count(*) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.birthYear = (SELECT max(birthYear) FROM Artists)"}, {"question_id": 1229, "answer_sql": "SELECT count(*) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.deathYear - Artists.birthYear = (SELECT max(deathYear - birthYear) FROM Artists)"}, {"question_id": 1230, "answer_sql": "SELECT Paintings.title , Paintings.year FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Artists.fname = Mary"}, {"question_id": 1231, "answer_sql": "SELECT Paintings.title , Paintings.year FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Artists.fname = Mary"}, {"question_id": 1232, "answer_sql": "SELECT width_mm FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE birthYear < 1850)"}, {"question_id": 1233, "answer_sql": "SELECT width_mm FROM Paintings WHERE YEAR < 1850"}, {"question_id": 1234, "answer_sql": "SELECT LOCATION , medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = Pablo"}, {"question_id": 1235, "answer_sql": "SELECT LOCATION , medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = Pablo"}, {"question_id": 1236, "answer_sql": "SELECT fname , lname FROM Artists INTERSECT SELECT fname , lname FROM Artists"}, {"question_id": 1237, "answer_sql": "SELECT fname , lname FROM Artists WHERE artistID IN (SELECT painterID FROM Paintings) INTERSECT SELECT fname , lname FROM Artists WHERE artistID IN (SELECT sculptorID FROM Sculptures)"}, {"question_id": 1238, "answer_sql": "SELECT DISTINCT Artists.fname , Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.medium = oil INTERSECT SELECT DISTINCT Artists.fname , Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.medium = lithographic"}, {"question_id": 1239, "answer_sql": "SELECT Artists.fname , Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.medium = oil INTERSECT SELECT Artists.fname , Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.medium = lithographic ;"}, {"question_id": 1240, "answer_sql": "SELECT birthYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE YEAR = 1884 AND medium = canvas ;"}, {"question_id": 1241, "answer_sql": "SELECT birthYear FROM Artists WHERE deathYear = null AND fname = Leonardo AND lname = da Vinci ;"}, {"question_id": 1242, "answer_sql": "SELECT DISTINCT fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE medium = oil AND LOCATION = gallery 241 ;"}, {"question_id": 1243, "answer_sql": "SELECT DISTINCT Artists.fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.location = gallery 241 AND Paintings.medium = oil ;"}, {"question_id": 1244, "answer_sql": "SELECT medium , count(*) FROM Paintings GROUP BY medium"}, {"question_id": 1245, "answer_sql": "SELECT medium , count(*) FROM Paintings GROUP BY medium"}, {"question_id": 1246, "answer_sql": "SELECT medium , avg(height_mm) FROM Paintings GROUP BY medium"}, {"question_id": 1247, "answer_sql": "SELECT medium , avg(height_mm) FROM Paintings GROUP BY medium"}, {"question_id": 1248, "answer_sql": "SELECT count(*) , LOCATION FROM Paintings WHERE YEAR < 1900 GROUP BY LOCATION"}, {"question_id": 1249, "answer_sql": "SELECT LOCATION , count(*) FROM Paintings WHERE YEAR < 1900 GROUP BY LOCATION"}, {"question_id": 1250, "answer_sql": "SELECT title FROM Paintings WHERE medium = oil AND YEAR > 1910"}, {"question_id": 1251, "answer_sql": "SELECT title FROM Paintings WHERE medium = oil AND YEAR > 1910"}, {"question_id": 1252, "answer_sql": "SELECT DISTINCT painterID FROM Paintings WHERE medium = oil AND LOCATION = gallery 240"}, {"question_id": 1253, "answer_sql": "SELECT DISTINCT painterID FROM Paintings WHERE medium = oil AND LOCATION = gallery 240"}, {"question_id": 1254, "answer_sql": "SELECT DISTINCT title FROM Paintings WHERE height_mm > (SELECT max(height_mm) FROM Paintings)"}, {"question_id": 1255, "answer_sql": "SELECT DISTINCT title FROM Paintings WHERE height_mm > (SELECT min(height_mm) FROM Paintings WHERE medium = canvas )"}, {"question_id": 1256, "answer_sql": "SELECT DISTINCT paintingID FROM Paintings WHERE YEAR > (SELECT min(YEAR) FROM Paintings WHERE LOCATION = gallery 240 )"}, {"question_id": 1257, "answer_sql": "SELECT DISTINCT paintingID FROM Paintings WHERE YEAR > (SELECT min(YEAR) FROM Paintings WHERE galleryID = 240)"}, {"question_id": 1258, "answer_sql": "SELECT paintingID FROM Paintings ORDER BY birthYear DESC LIMIT 1"}, {"question_id": 1259, "answer_sql": "SELECT paintingID FROM Paintings ORDER BY height_mm DESC LIMIT 1"}, {"question_id": 1260, "answer_sql": "SELECT Artists.fname , Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE title LIKE %female%"}, {"question_id": 1261, "answer_sql": "SELECT Artists.fname , Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE title LIKE %female%"}, {"question_id": 1262, "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY title"}, {"question_id": 1263, "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY title"}, {"question_id": 1264, "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY width_mm"}, {"question_id": 1265, "answer_sql": "SELECT DISTINCT title FROM Paintings ORDER BY height_mm ASC"}, {"question_id": 1266, "answer_sql": "SELECT title FROM Paintings WHERE YEAR > 1900 AND YEAR < 1950 UNION SELECT title FROM Sculptures WHERE YEAR > 1900 AND YEAR < 1950"}, {"question_id": 1267, "answer_sql": "SELECT title FROM Paintings WHERE YEAR > 1900 AND YEAR < 1950 UNION SELECT title FROM Sculptures WHERE YEAR > 1900 AND YEAR < 1950"}, {"question_id": 1268, "answer_sql": "SELECT title FROM Paintings WHERE painterID = 222 UNION SELECT title FROM Sculptures WHERE sculptorID = 222"}, {"question_id": 1269, "answer_sql": "SELECT title FROM Paintings UNION SELECT title FROM Sculptures WHERE sculptorID = 222"}, {"question_id": 1270, "answer_sql": "SELECT artistID FROM Paintings WHERE YEAR < 1900 GROUP BY artistID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1271, "answer_sql": "SELECT artistID FROM Paintings WHERE YEAR < 1900 GROUP BY artistID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1272, "answer_sql": "SELECT Artists.fname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY Artists.fname ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1273, "answer_sql": "SELECT fname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY Sculptures.sculptorID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1274, "answer_sql": "SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800"}, {"question_id": 1275, "answer_sql": "SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800"}, {"question_id": 1276, "answer_sql": "SELECT LOCATION FROM Paintings WHERE YEAR < 1885 OR YEAR > 1930"}, {"question_id": 1277, "answer_sql": "SELECT LOCATION FROM Paintings WHERE YEAR < 1885 OR YEAR > 1930"}, {"question_id": 1278, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000"}, {"question_id": 1279, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 INTERSECT SELECT paintingID FROM Paintings WHERE height_mm < 2000"}, {"question_id": 1280, "answer_sql": "SELECT LOCATION FROM Paintings WHERE medium = panel INTERSECT SELECT LOCATION FROM Paintings WHERE medium = canvas ;"}, {"question_id": 1281, "answer_sql": "SELECT LOCATION FROM Paintings WHERE medium = panel INTERSECT SELECT LOCATION FROM Paintings WHERE medium = canvas"}, {"question_id": 1282, "answer_sql": "SELECT LOCATION FROM Paintings WHERE YEAR < 1885 INTERSECT SELECT LOCATION FROM Paintings WHERE YEAR > 1930"}, {"question_id": 1283, "answer_sql": "SELECT LOCATION FROM Paintings WHERE YEAR < 1885 INTERSECT SELECT LOCATION FROM Paintings WHERE YEAR > 1930"}, {"question_id": 1284, "answer_sql": "SELECT avg(height_mm) , avg(width_mm) FROM Paintings WHERE medium = oil AND LOCATION = gallery 241 ;"}, {"question_id": 1285, "answer_sql": "SELECT avg(height_mm) , avg(width_mm) FROM Paintings WHERE medium = oil AND galleryID = 241"}, {"question_id": 1286, "answer_sql": "SELECT max(height_mm) , paintingID FROM Paintings WHERE YEAR < 1900 GROUP BY paintingID"}, {"question_id": 1287, "answer_sql": "SELECT height_mm , paintingID FROM Paintings WHERE YEAR < 1900 ORDER BY height_mm DESC LIMIT 1"}, {"question_id": 1288, "answer_sql": "SELECT max(height_mm) , max(width_mm) , YEAR FROM Paintings GROUP BY YEAR"}, {"question_id": 1289, "answer_sql": "SELECT title , max(height_mm) , max(width_mm) , YEAR FROM Paintings GROUP BY YEAR"}, {"question_id": 1290, "answer_sql": "SELECT avg(height_mm) , avg(width_mm) , artistID FROM Paintings GROUP BY artistID ORDER BY fname"}, {"question_id": 1291, "answer_sql": "SELECT avg(height_mm) , avg(width_mm) , artist.fname , artist.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY artist.fname , artist.lname ORDER BY artist.fname"}, {"question_id": 1292, "answer_sql": "SELECT fname , count(*) FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Paintings.painterID HAVING count(*) >= 2"}, {"question_id": 1293, "answer_sql": "SELECT fname , count(*) FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Paintings.painterID HAVING count(*) >= 2"}, {"question_id": 1294, "answer_sql": "SELECT deathYear FROM Artists INTERSECT SELECT Artists.deathYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.deathYear HAVING count(*) <= 3"}, {"question_id": 1295, "answer_sql": "SELECT deathYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.artistID HAVING count(*) < 4"}, {"question_id": 1296, "answer_sql": "SELECT deathYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY Sculptures.sculptorID ORDER BY count(*) LIMIT 1"}, {"question_id": 1297, "answer_sql": "SELECT deathYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY Sculptures.sculptorID ORDER BY count(*) LIMIT 1"}, {"question_id": 1298, "answer_sql": "SELECT paintingID , height_mm FROM Paintings WHERE width_mm = (SELECT max(width_mm) FROM Paintings WHERE galleryID = 240)"}, {"question_id": 1299, "answer_sql": "SELECT height_mm , paintingID FROM Paintings WHERE LOCATION = gallery 240 ORDER BY width_mm DESC LIMIT 1"}, {"question_id": 1300, "answer_sql": "SELECT paintingID FROM Paintings WHERE YEAR < (SELECT min(YEAR) FROM Paintings WHERE galleryID = 240)"}, {"question_id": 1301, "answer_sql": "SELECT paintingID FROM Paintings WHERE YEAR < (SELECT max(YEAR) FROM Paintings WHERE galleryID = 240)"}, {"question_id": 1302, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT max(height_mm) FROM Paintings WHERE YEAR > 1900)"}, {"question_id": 1303, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT max(height_mm) FROM Paintings WHERE YEAR > 1900)"}, {"question_id": 1304, "answer_sql": "SELECT artistID FROM Paintings WHERE medium = oil GROUP BY artistID ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1305, "answer_sql": "SELECT Artists.fname , Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.medium = oil GROUP BY Artists.artistID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1306, "answer_sql": "SELECT paintingID , LOCATION , title FROM Paintings WHERE medium = oil ORDER BY YEAR"}, {"question_id": 1307, "answer_sql": "SELECT paintingID , LOCATION , title FROM Paintings WHERE medium = oil ORDER BY year"}, {"question_id": 1308, "answer_sql": "SELECT title , LOCATION , YEAR FROM Paintings WHERE height_mm > 1000 ORDER BY title"}, {"question_id": 1309, "answer_sql": "SELECT title , LOCATION , YEAR FROM Paintings WHERE height_mm > 1000 ORDER BY YEAR"}, {"question_id": 1310, "answer_sql": "SELECT fname , lname FROM Artists EXCEPT SELECT Artists.fname , Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID"}, {"question_id": 1311, "answer_sql": "SELECT fname , lname FROM Artists EXCEPT SELECT Artists.fname , Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID JOIN Paintings ON Sculptures.sculptureID = Paintings.painterID"}, {"question_id": 1312, "answer_sql": "SELECT LOCATION FROM Paintings WHERE YEAR < 1885 EXCEPT SELECT LOCATION FROM Paintings WHERE medium = canvas ;"}, {"question_id": 1313, "answer_sql": "SELECT LOCATION FROM Paintings WHERE YEAR < 1885 EXCEPT SELECT LOCATION FROM Paintings WHERE medium = canvas"}, {"question_id": 1314, "answer_sql": "SELECT count(*) FROM race"}, {"question_id": 1315, "answer_sql": "SELECT count(*) FROM race"}, {"question_id": 1316, "answer_sql": "SELECT Winning_driver , Winning_team FROM race ORDER BY Winning_team ASC"}, {"question_id": 1317, "answer_sql": "SELECT Winning_driver , Winning_team FROM race ORDER BY Winning_team"}, {"question_id": 1318, "answer_sql": "SELECT Winning_driver FROM race WHERE Pole_Position != Junior Strous"}, {"question_id": 1319, "answer_sql": "SELECT Winning_driver FROM race WHERE Pole_Position != Junior Strous"}, {"question_id": 1320, "answer_sql": "SELECT Constructor FROM driver ORDER BY Age ASC"}, {"question_id": 1321, "answer_sql": "SELECT DISTINCT Constructor FROM driver ORDER BY Age ASC"}, {"question_id": 1322, "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20"}, {"question_id": 1323, "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20"}, {"question_id": 1324, "answer_sql": "SELECT max(Age) , min(Age) FROM driver"}, {"question_id": 1325, "answer_sql": "SELECT max(Age) , min(Age) FROM driver"}, {"question_id": 1326, "answer_sql": "SELECT count(DISTINCT Engine) FROM driver WHERE Age > 30 OR Age < 20"}, {"question_id": 1327, "answer_sql": "SELECT count(DISTINCT Engine) FROM driver WHERE Age > 30 OR Age < 20"}, {"question_id": 1328, "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC"}, {"question_id": 1329, "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC"}, {"question_id": 1330, "answer_sql": "SELECT driver.Driver_Name , race.Race_Name FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID"}, {"question_id": 1331, "answer_sql": "SELECT driver.Driver_Name , race.Race_Name FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID"}, {"question_id": 1332, "answer_sql": "SELECT Driver_Name , count(*) FROM race GROUP BY Driver_ID"}, {"question_id": 1333, "answer_sql": "SELECT Driver_ID , count(*) FROM race GROUP BY Driver_ID"}, {"question_id": 1334, "answer_sql": "SELECT driver.Age FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID GROUP BY race.Driver_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1335, "answer_sql": "SELECT driver.Age FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID GROUP BY race.Driver_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1336, "answer_sql": "SELECT Driver_Name , Age FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM race GROUP BY Driver_ID HAVING count(*) >= 2)"}, {"question_id": 1337, "answer_sql": "SELECT Driver_Name , Age FROM driver WHERE Driver_ID IN (SELECT Driver_ID FROM race GROUP BY Driver_ID HAVING count(*) >= 2)"}, {"question_id": 1338, "answer_sql": "SELECT Race_Name FROM race WHERE Driver_ID IN (SELECT Driver_ID FROM driver WHERE Age >= 26)"}, {"question_id": 1339, "answer_sql": "SELECT Race_Name FROM race WHERE Driver_ID IN (SELECT Driver_ID FROM driver WHERE Age >= 26)"}, {"question_id": 1340, "answer_sql": "SELECT Driver_Name FROM driver WHERE Constructor != Bugatti"}, {"question_id": 1341, "answer_sql": "SELECT Driver_Name FROM driver WHERE Constructor != Bugatti"}, {"question_id": 1342, "answer_sql": "SELECT Constructor , count(*) FROM driver GROUP BY Constructor"}, {"question_id": 1343, "answer_sql": "SELECT COUNT (DISTINCT Constructor) FROM driver"}, {"question_id": 1344, "answer_sql": "SELECT Engine FROM driver GROUP BY Engine ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1345, "answer_sql": "SELECT Engine FROM driver GROUP BY Engine ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1346, "answer_sql": "SELECT DISTINCT Engine FROM driver GROUP BY Engine HAVING count(*) >= 2"}, {"question_id": 1347, "answer_sql": "SELECT DISTINCT Engine FROM driver"}, {"question_id": 1348, "answer_sql": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)"}, {"question_id": 1349, "answer_sql": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)"}, {"question_id": 1350, "answer_sql": "SELECT DISTINCT Constructor FROM driver WHERE Age < 20 INTERSECT SELECT DISTINCT Constructor FROM driver WHERE Age > 30"}, {"question_id": 1351, "answer_sql": "SELECT Constructor FROM driver WHERE Age < 20 INTERSECT SELECT Constructor FROM driver WHERE Age > 30"}, {"question_id": 1352, "answer_sql": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*) > 1"}, {"question_id": 1353, "answer_sql": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*) > 1"}, {"question_id": 1354, "answer_sql": "SELECT DISTINCT Driver_Name FROM race WHERE Pole_Position = James Hinchcliffe INTERSECT SELECT DISTINCT Driver_Name FROM race WHERE Pole_Position = Carl Skerlong"}, {"question_id": 1355, "answer_sql": "SELECT Driver_Name FROM race WHERE Pole_Position = James Hinchcliffe INTERSECT SELECT Driver_Name FROM race WHERE Pole_Position = Carl Skerlong"}, {"question_id": 1356, "answer_sql": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race WHERE Pole_Position = James Hinchcliffe )"}, {"question_id": 1357, "answer_sql": "SELECT Driver_Name FROM driver WHERE Pole_Position != James Hinchcliffe"}, {"question_id": 1358, "answer_sql": "SELECT count(*) FROM languages"}, {"question_id": 1359, "answer_sql": "SELECT count(*) FROM languages"}, {"question_id": 1360, "answer_sql": "SELECT name FROM languages ORDER BY name ASC"}, {"question_id": 1361, "answer_sql": "SELECT name FROM languages ORDER BY name"}, {"question_id": 1362, "answer_sql": "SELECT name FROM languages WHERE name LIKE %ish%"}, {"question_id": 1363, "answer_sql": "SELECT name FROM languages WHERE name LIKE %ish%"}, {"question_id": 1364, "answer_sql": "SELECT name FROM countries ORDER BY overall_score DESC"}, {"question_id": 1365, "answer_sql": "SELECT name FROM countries ORDER BY overall_score DESC"}, {"question_id": 1366, "answer_sql": "SELECT avg(justice_score) FROM countries"}, {"question_id": 1367, "answer_sql": "SELECT avg(justice_score) FROM countries"}, {"question_id": 1368, "answer_sql": "SELECT max(health_score) , min(health_score) FROM countries WHERE name != Norway"}, {"question_id": 1369, "answer_sql": "SELECT max(health_score) , min(health_score) FROM countries WHERE name != Norway"}, {"question_id": 1370, "answer_sql": "SELECT count(*) FROM official_languages"}, {"question_id": 1371, "answer_sql": "SELECT count(*) FROM official_languages"}, {"question_id": 1372, "answer_sql": "SELECT name FROM countries ORDER BY education_score DESC"}, {"question_id": 1373, "answer_sql": "SELECT name FROM countries ORDER BY education_score DESC"}, {"question_id": 1374, "answer_sql": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1"}, {"question_id": 1375, "answer_sql": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1"}, {"question_id": 1376, "answer_sql": "SELECT countries.name , languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id"}, {"question_id": 1377, "answer_sql": "SELECT countries.name , languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id"}, {"question_id": 1378, "answer_sql": "SELECT languages.name , count(*) FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id GROUP BY languages.name"}, {"question_id": 1379, "answer_sql": "SELECT languages.name , count(*) FROM official_languages JOIN languages ON official_languages.language_id = languages.id GROUP BY official_languages.language_id"}, {"question_id": 1380, "answer_sql": "SELECT languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id GROUP BY languages.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1381, "answer_sql": "SELECT languages.name FROM languages JOIN official_languages ON languages.id = official_languages.language_id GROUP BY languages.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1382, "answer_sql": "SELECT languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id GROUP BY languages.name HAVING count(*) >= 2"}, {"question_id": 1383, "answer_sql": "SELECT languages.name FROM languages JOIN official_languages ON languages.id = official_languages.language_id GROUP BY languages.name HAVING count(*) >= 2"}, {"question_id": 1384, "answer_sql": "SELECT avg(overall_score) FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id WHERE languages.name = English"}, {"question_id": 1385, "answer_sql": "SELECT avg(overall_score) FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id WHERE languages.name = English"}, {"question_id": 1386, "answer_sql": "SELECT languages.name FROM official_languages JOIN languages ON official_languages.language_id = languages.id JOIN countries ON official_languages.country_id = countries.id ORDER BY countries.overall_score DESC LIMIT 3"}, {"question_id": 1387, "answer_sql": "SELECT languages.name FROM official_languages JOIN languages ON official_languages.language_id = languages.id JOIN countries ON official_languages.country_id = countries.id GROUP BY official_languages.language_id ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1388, "answer_sql": "SELECT languages.name FROM official_languages JOIN languages ON official_languages.language_id = languages.id JOIN countries ON official_languages.country_id = countries.id ORDER BY avg(overall_score) DESC"}, {"question_id": 1389, "answer_sql": "SELECT languages.name FROM official_languages JOIN languages ON official_languages.language_id = languages.id JOIN countries ON official_languages.country_id = countries.id ORDER BY avg(overall_score) DESC"}, {"question_id": 1390, "answer_sql": "SELECT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id GROUP BY countries.id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1391, "answer_sql": "SELECT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id GROUP BY countries.name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1392, "answer_sql": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)"}, {"question_id": 1393, "answer_sql": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)"}, {"question_id": 1394, "answer_sql": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)"}, {"question_id": 1395, "answer_sql": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)"}, {"question_id": 1396, "answer_sql": "SELECT languages.name FROM languages JOIN official_languages ON languages.id = official_languages.language_id JOIN countries ON countries.id = official_languages.country_id WHERE countries.overall_score > 95 INTERSECT SELECT languages.name FROM languages JOIN official_languages ON languages.id = official_languages.language_id JOIN countries ON countries.id = official_languages.country_id WHERE countries.overall_score < 90"}, {"question_id": 1397, "answer_sql": "SELECT languages.name FROM languages JOIN official_languages ON languages.id = official_languages.language_id JOIN countries ON countries.id = official_languages.country_id WHERE countries.overall_score > 95 INTERSECT SELECT languages.name FROM languages JOIN official_languages ON languages.id = official_languages.language_id JOIN countries ON countries.id = official_languages.country_id WHERE countries.overall_score < 90"}, {"question_id": 1398, "answer_sql": "SELECT country , town_city FROM Addresses"}, {"question_id": 1399, "answer_sql": "SELECT country , town_city FROM Addresses"}, {"question_id": 1400, "answer_sql": "SELECT county_state_province FROM Properties GROUP BY county_state_province;"}, {"question_id": 1401, "answer_sql": "SELECT count(*) FROM Properties"}, {"question_id": 1402, "answer_sql": "SELECT feature_value FROM Properties JOIN Property_Features ON Properties.property_id = Property_Features.property_id WHERE feature_id = (SELECT feature_id FROM Features WHERE feature_name = rooftop )"}, {"question_id": 1403, "answer_sql": "SELECT feature_description FROM Features WHERE feature_name = rooftop ;"}, {"question_id": 1404, "answer_sql": "SELECT feature_name , feature_description FROM Features GROUP BY feature_name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1405, "answer_sql": "SELECT feature_name , feature_description FROM Features GROUP BY feature_name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1406, "answer_sql": "SELECT min(room_count) FROM Properties"}, {"question_id": 1407, "answer_sql": "SELECT room_count FROM Properties GROUP BY room_count ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 1408, "answer_sql": "SELECT count(*) FROM Properties WHERE parking_lots = 1 OR garage_yn = 'Y';"}, {"question_id": 1409, "answer_sql": "SELECT count(*) FROM Properties WHERE parking_lots = 1 OR garage_yn = 'Y';"}, {"question_id": 1410, "answer_sql": "SELECT age_category_code FROM Users WHERE other_user_details LIKE %Mother%"}, {"question_id": 1411, "answer_sql": "SELECT age_category_code FROM Users WHERE user_category_code = Mother"}, {"question_id": 1412, "answer_sql": "SELECT Users.first_name FROM Properties JOIN Users ON Properties.owner_user_id = Users.user_id GROUP BY Properties.owner_user_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1413, "answer_sql": "SELECT Users.first_name FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id GROUP BY Users.first_name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1414, "answer_sql": "SELECT avg(room_count) FROM Properties WHERE garage_yn = 'Y'"}, {"question_id": 1415, "answer_sql": "SELECT avg(room_count) FROM Properties JOIN Property_Features ON Properties.property_id = Property_Features.property_id WHERE feature_id = (SELECT feature_id FROM Features WHERE feature_name = garden )"}, {"question_id": 1416, "answer_sql": "SELECT Properties.property_name FROM Properties JOIN Property_Features ON Properties.property_id = Property_Features.property_id JOIN Features ON Property_Features.feature_id = Features.feature_id WHERE Features.feature_name = swimming pool"}, {"question_id": 1417, "answer_sql": "SELECT Addresses.town_city FROM Properties JOIN Addresses ON Properties.property_address_id = Addresses.address_id JOIN Rooms ON Properties.property_id = Rooms.property_id JOIN Ref_Room_Types ON Rooms.room_type_code = Ref_Room_Types.room_type_code WHERE Ref_Room_Types.room_type_description = swimming pool"}, {"question_id": 1418, "answer_sql": "SELECT property_id , vendor_requested_price FROM Properties ORDER BY vendor_requested_price ASC LIMIT 1"}, {"question_id": 1419, "answer_sql": "SELECT property_id , vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1"}, {"question_id": 1420, "answer_sql": "SELECT avg(room_count) FROM Properties"}, {"question_id": 1421, "answer_sql": "SELECT avg(room_count) FROM Properties"}, {"question_id": 1422, "answer_sql": "SELECT count(DISTINCT room_size) FROM Rooms"}, {"question_id": 1423, "answer_sql": "SELECT count(DISTINCT room_size) FROM Rooms"}, {"question_id": 1424, "answer_sql": "SELECT user_id , search_string FROM User_Searches GROUP BY user_id HAVING count(*) >= 2"}, {"question_id": 1425, "answer_sql": "SELECT user_id , search_seq FROM User_Searches GROUP BY user_id HAVING count(*) >= 2"}, {"question_id": 1426, "answer_sql": "SELECT max(search_datetime) FROM User_Searches"}, {"question_id": 1427, "answer_sql": "SELECT search_datetime FROM User_Searches ORDER BY search_datetime DESC LIMIT 1"}, {"question_id": 1428, "answer_sql": "SELECT search_datetime , search_string FROM User_Searches ORDER BY search_string DESC"}, {"question_id": 1429, "answer_sql": "SELECT search_string , search_datetime FROM User_Searches ORDER BY search_string DESC"}, {"question_id": 1430, "answer_sql": "SELECT zip_postcode FROM Properties EXCEPT SELECT Properties.zip_postcode FROM Properties JOIN Users ON Properties.owner_user_id = Users.user_id GROUP BY Properties.zip_postcode HAVING count(*) <= 2"}, {"question_id": 1431, "answer_sql": "SELECT zip_postcode FROM Properties EXCEPT SELECT Properties.zip_postcode FROM Properties JOIN Users ON Properties.owner_user_id = Users.user_id GROUP BY Properties.zip_postcode HAVING count(*) <= 2"}, {"question_id": 1432, "answer_sql": "SELECT user_category_code , user_id FROM Users GROUP BY user_category_code HAVING count(*) = 1"}, {"question_id": 1433, "answer_sql": "SELECT user_category_code FROM Users GROUP BY user_category_code HAVING count(*) = 1"}, {"question_id": 1434, "answer_sql": "SELECT age_category_code FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id ORDER BY search_seq LIMIT 1"}, {"question_id": 1435, "answer_sql": "SELECT Users.age_category_code FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id ORDER BY search_datetime LIMIT 1"}, {"question_id": 1436, "answer_sql": "SELECT login_name FROM Users WHERE age_category_code = Senior Citizen ORDER BY first_name"}, {"question_id": 1437, "answer_sql": "SELECT login_name FROM Users WHERE age_category_code = Senior Citizen ORDER BY first_name"}, {"question_id": 1438, "answer_sql": "SELECT count(*) FROM USER_SEARCHES WHERE is_buyer = 1"}, {"question_id": 1439, "answer_sql": "SELECT count(*) FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id WHERE Users.is_buyer = 'Y'"}, {"question_id": 1440, "answer_sql": "SELECT date_registered FROM Users WHERE login_name = ratione ;"}, {"question_id": 1441, "answer_sql": "SELECT date_registered FROM Users WHERE login_name = ratione"}, {"question_id": 1442, "answer_sql": "SELECT first_name , middle_name , last_name , login_name FROM Users WHERE is_seller = 1"}, {"question_id": 1443, "answer_sql": "SELECT first_name , middle_name , last_name , login_name FROM Users WHERE is_seller = 1"}, {"question_id": 1444, "answer_sql": "SELECT line_1_number_building , line_2_number_street , town_city FROM Users WHERE age_category_code = Senior Citizen ;"}, {"question_id": 1445, "answer_sql": "SELECT line_1_number_building , line_2_number_street , town_city FROM Addresses WHERE county_state_province = senior citizen ;"}, {"question_id": 1446, "answer_sql": "SELECT count(*) FROM Properties JOIN Property_Features ON Properties.property_id = Property_Features.property_id GROUP BY Properties.property_id HAVING count(*) >= 2"}, {"question_id": 1447, "answer_sql": "SELECT count(*) FROM Properties JOIN Property_Features ON Properties.property_id = Property_Features.property_id GROUP BY Properties.property_id HAVING count(*) >= 2"}, {"question_id": 1448, "answer_sql": "SELECT count(*) FROM Property_Photos"}, {"question_id": 1449, "answer_sql": "SELECT count(*) FROM Property_Photos"}, {"question_id": 1450, "answer_sql": "SELECT owner_user_id , count(*) FROM Property_Photos GROUP BY owner_user_id"}, {"question_id": 1451, "answer_sql": "SELECT owner_user_id , count(*) FROM Properties JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY owner_user_id"}, {"question_id": 1452, "answer_sql": "SELECT sum(price_max) FROM Properties WHERE owner_user_id IN (SELECT user_id FROM Users WHERE age_category_code = M OR age_category_code = U )"}, {"question_id": 1453, "answer_sql": "SELECT sum(price_max) FROM Properties JOIN Users ON Properties.owner_user_id = Users.user_id WHERE Users.gender = M OR Users.gender = F"}, {"question_id": 1454, "answer_sql": "SELECT datestamp , property_name FROM User_Property_History ORDER BY datestamp"}, {"question_id": 1455, "answer_sql": "SELECT datestamp , property_name FROM User_Property_History ORDER BY datestamp"}, {"question_id": 1456, "answer_sql": "SELECT property_type_description , property_type_code FROM Ref_Property_Types GROUP BY property_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1457, "answer_sql": "SELECT property_type_code , property_type_description FROM Ref_Property_Types GROUP BY property_type_code ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1458, "answer_sql": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code = Over 60"}, {"question_id": 1459, "answer_sql": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code = Over 60 ;"}, {"question_id": 1460, "answer_sql": "SELECT room_size , count(*) FROM Rooms GROUP BY room_size"}, {"question_id": 1461, "answer_sql": "SELECT room_size , count(*) FROM Rooms GROUP BY room_size"}, {"question_id": 1462, "answer_sql": "SELECT country FROM Users WHERE first_name = Robbie"}, {"question_id": 1463, "answer_sql": "SELECT country FROM Users WHERE first_name = Robbie"}, {"question_id": 1464, "answer_sql": "SELECT Users.first_name , Users.middle_name , Users.last_name FROM Users JOIN Property_Features ON Users.user_id = Property_Features.property_id JOIN Properties ON Properties.property_id = Property_Features.property_id"}, {"question_id": 1465, "answer_sql": "SELECT Users.first_name , Users.last_name FROM Users JOIN Property_Features ON Users.user_id = Property_Features.property_id WHERE Property_Features.feature_name = owner"}, {"question_id": 1466, "answer_sql": "SELECT search_string FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id EXCEPT SELECT Users.login_name FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id"}, {"question_id": 1467, "answer_sql": "SELECT search_string FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id WHERE Users.user_id NOT IN (SELECT owner_user_id FROM Properties)"}, {"question_id": 1468, "answer_sql": "SELECT Users.first_name , Users.last_name , Users.user_id FROM Users JOIN User_Property_History ON Users.user_id = User_Property_History.user_id GROUP BY Users.user_id HAVING count(*) >= 2 UNION SELECT Users.first_name , Users.last_name , Users.user_id FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id GROUP BY Users.user_id HAVING count(*) <= 2"}, {"question_id": 1469, "answer_sql": "SELECT Users.last_name , Users.user_id FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id GROUP BY Users.user_id HAVING count(*) <= 2 INTERSECT SELECT Users.last_name , Users.user_id FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id GROUP BY Users.user_id HAVING count(*) >= 2"}, {"question_id": 1470, "answer_sql": "SELECT count(*) FROM bike WHERE weight > 780"}, {"question_id": 1471, "answer_sql": "SELECT product_name , weight FROM bike ORDER BY price ASC"}, {"question_id": 1472, "answer_sql": "SELECT heat , name , nation FROM cyclist"}, {"question_id": 1473, "answer_sql": "SELECT max(weight) , min(weight) FROM bike"}, {"question_id": 1474, "answer_sql": "SELECT avg(price) FROM bike WHERE material = Carbon CC"}, {"question_id": 1475, "answer_sql": "SELECT name , RESULT FROM cyclist WHERE nation != 'Russia'"}, {"question_id": 1476, "answer_sql": "SELECT DISTINCT bike_id , product_name FROM bike WHERE purchase_year > 2015"}, {"question_id": 1477, "answer_sql": "SELECT bike.id , bike.product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id GROUP BY bike.id HAVING count(*) >= 4"}, {"question_id": 1478, "answer_sql": "SELECT cyclist.id , cyclist.name FROM cyclists_own_bikes JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id GROUP BY cyclist.id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1479, "answer_sql": "SELECT DISTINCT product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE cyclist.nation = Russia OR cyclist.nation = Great Britain"}, {"question_id": 1480, "answer_sql": "SELECT count(DISTINCT heat) FROM cyclist"}, {"question_id": 1481, "answer_sql": "SELECT count(*) FROM cyclist WHERE id NOT IN (SELECT cyclist_id FROM cyclists_own_bikes WHERE purchase_year > 2015)"}, {"question_id": 1482, "answer_sql": "SELECT DISTINCT bike.product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE cyclist.result > 4:21.558"}, {"question_id": 1483, "answer_sql": "SELECT bike.product_name , bike.price FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE cyclist.name = Bradley Wiggins INTERSECT SELECT bike.product_name , bike.price FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE cyclist.name = Antonio Tauler"}, {"question_id": 1484, "answer_sql": "SELECT name , nation , RESULT FROM cyclist WHERE id NOT IN (SELECT cyclist_id FROM cyclists_own_bikes)"}, {"question_id": 1485, "answer_sql": "SELECT product_name FROM bike WHERE material LIKE %fiber%"}, {"question_id": 1486, "answer_sql": "SELECT count(*) FROM cyclists_own_bikes"}, {"question_id": 1487, "answer_sql": "SELECT Flavor FROM goods ORDER BY Price DESC LIMIT 1"}, {"question_id": 1488, "answer_sql": "SELECT Id , Flavor FROM goods ORDER BY Price DESC LIMIT 1"}, {"question_id": 1489, "answer_sql": "SELECT Flavor FROM goods ORDER BY Price ASC LIMIT 1"}, {"question_id": 1490, "answer_sql": "SELECT Id , Flavor FROM goods ORDER BY Price ASC LIMIT 1"}, {"question_id": 1491, "answer_sql": "SELECT Id FROM goods WHERE Flavor = apple"}, {"question_id": 1492, "answer_sql": "SELECT Id FROM goods WHERE Flavor = apple ;"}, {"question_id": 1493, "answer_sql": "SELECT Id FROM goods WHERE Price < 3"}, {"question_id": 1494, "answer_sql": "SELECT Id FROM goods WHERE Price < 3"}, {"question_id": 1495, "answer_sql": "SELECT DISTINCT customers.Id FROM customers JOIN items ON customers.Id = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = lemon"}, {"question_id": 1496, "answer_sql": "SELECT DISTINCT customers.Id FROM customers JOIN items ON customers.Id = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = lemon"}, {"question_id": 1497, "answer_sql": "SELECT Food , count(*) FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt GROUP BY Food"}, {"question_id": 1498, "answer_sql": "SELECT Food , count(*) FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY Food"}, {"question_id": 1499, "answer_sql": "SELECT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id HAVING count(*) >= 15"}, {"question_id": 1500, "answer_sql": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*) >= 15"}, {"question_id": 1501, "answer_sql": "SELECT customers.LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id HAVING count(*) > 10"}, {"question_id": 1502, "answer_sql": "SELECT LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id HAVING count(*) > 10"}, {"question_id": 1503, "answer_sql": "SELECT count(*) FROM goods"}, {"question_id": 1504, "answer_sql": "SELECT count(*) FROM goods"}, {"question_id": 1505, "answer_sql": "SELECT Flavor FROM goods WHERE Food = Croissant ;"}, {"question_id": 1506, "answer_sql": "SELECT Flavor FROM goods WHERE Food = croissant"}, {"question_id": 1507, "answer_sql": "SELECT DISTINCT Item FROM items JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE CustomerId = 15"}, {"question_id": 1508, "answer_sql": "SELECT DISTINCT Item FROM items JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE CustomerId = 15"}, {"question_id": 1509, "answer_sql": "SELECT Flavor , avg(Price) , max(Price) , min(Price) FROM goods GROUP BY Flavor"}, {"question_id": 1510, "answer_sql": "SELECT avg(Price) , min(Price) , max(Price) FROM goods"}, {"question_id": 1511, "answer_sql": "SELECT ReceiptNumber FROM items WHERE Item = Cake INTERSECT SELECT ReceiptNumber FROM items WHERE Item = Cookie"}, {"question_id": 1512, "answer_sql": "SELECT ReceiptNumber FROM items WHERE Item = cakes INTERSECT SELECT ReceiptNumber FROM items WHERE Item = cookies"}, {"question_id": 1513, "answer_sql": "SELECT DISTINCT ReceiptNumber FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE customers.LastName = LOGAN AND items.Item = Croissant ;"}, {"question_id": 1514, "answer_sql": "SELECT ReceiptNumber FROM customers JOIN receipts ON customers.Id = receipts.CustomerId WHERE customers.LastName = Logan AND items.Item = croissant ;"}, {"question_id": 1515, "answer_sql": "SELECT ReceiptNumber , Date FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt ORDER BY items.Price DESC LIMIT 1"}, {"question_id": 1516, "answer_sql": "SELECT ReceiptNumber , Date FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt ORDER BY items.Price DESC LIMIT 1"}, {"question_id": 1517, "answer_sql": "SELECT Item FROM items GROUP BY Item ORDER BY count(*) LIMIT 1"}, {"question_id": 1518, "answer_sql": "SELECT Item FROM items GROUP BY Item ORDER BY count(*) LIMIT 1"}, {"question_id": 1519, "answer_sql": "SELECT Flavor , count(*) FROM goods GROUP BY Flavor"}, {"question_id": 1520, "answer_sql": "SELECT Flavor , count(*) FROM goods GROUP BY Flavor"}, {"question_id": 1521, "answer_sql": "SELECT Flavor , avg(Price) FROM goods GROUP BY Flavor"}, {"question_id": 1522, "answer_sql": "SELECT Flavor , avg(Price) FROM goods GROUP BY Flavor"}, {"question_id": 1523, "answer_sql": "SELECT Id FROM goods WHERE Flavor = Apricot AND Price > 5"}, {"question_id": 1524, "answer_sql": "SELECT Id FROM goods WHERE Flavor = Apricot INTERSECT SELECT Id FROM goods WHERE Price < 5"}, {"question_id": 1525, "answer_sql": "SELECT Flavor FROM goods WHERE Price > 10"}, {"question_id": 1526, "answer_sql": "SELECT Flavor FROM goods WHERE Price > 10"}, {"question_id": 1527, "answer_sql": "SELECT DISTINCT Id , Price FROM goods WHERE Price < (SELECT avg(Price) FROM goods)"}, {"question_id": 1528, "answer_sql": "SELECT DISTINCT Id , Price FROM goods WHERE Price < (SELECT avg(Price) FROM goods)"}, {"question_id": 1529, "answer_sql": "SELECT DISTINCT Id FROM goods WHERE Price < (SELECT min(Price) FROM goods WHERE Flavor = Tart )"}, {"question_id": 1530, "answer_sql": "SELECT DISTINCT Id FROM goods WHERE Price < (SELECT min(Price) FROM goods WHERE Flavor = Tart )"}, {"question_id": 1531, "answer_sql": "SELECT DISTINCT ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE items.Item IN (SELECT Id FROM goods WHERE Price > 13)"}, {"question_id": 1532, "answer_sql": "SELECT DISTINCT ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE items.Item IN (SELECT Id FROM goods WHERE Price > 13)"}, {"question_id": 1533, "answer_sql": "SELECT Date FROM receipts JOIN customers ON receipts.CustomerId = customers.Id JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE customers.FirstName = Jane AND customers.LastName = Doe AND items.Item IN (SELECT Id FROM goods WHERE Price > 15)"}, {"question_id": 1534, "answer_sql": "SELECT Date FROM receipts JOIN customers ON receipts.CustomerId = customers.Id WHERE customers.FirstName = Jane AND customers.LastName = Doe AND goods.Price > 15;"}, {"question_id": 1535, "answer_sql": "SELECT Id FROM goods WHERE Id LIKE %APP%"}, {"question_id": 1536, "answer_sql": "SELECT Id FROM goods WHERE Id LIKE %APP%"}, {"question_id": 1537, "answer_sql": "SELECT Flavor , Food , Price FROM goods WHERE Id LIKE %70%"}, {"question_id": 1538, "answer_sql": "SELECT Id , Price FROM goods WHERE Id LIKE %70%"}, {"question_id": 1539, "answer_sql": "SELECT LastName FROM customers ORDER BY LastName"}, {"question_id": 1540, "answer_sql": "SELECT LastName FROM customers ORDER BY LastName"}, {"question_id": 1541, "answer_sql": "SELECT Id FROM goods ORDER BY Id"}, {"question_id": 1542, "answer_sql": "SELECT DISTINCT Id FROM goods"}, {"question_id": 1543, "answer_sql": "SELECT DISTINCT Receipt FROM items JOIN goods ON items.Item = goods.Id JOIN receipts ON receipts.ReceiptNumber = items.Receipt WHERE goods.Flavor = apple OR customers.Id = 12"}, {"question_id": 1544, "answer_sql": "SELECT ReceiptNumber FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt WHERE items.Item = apple pie OR customers.Id = 12"}, {"question_id": 1545, "answer_sql": "SELECT ReceiptNumber , Date FROM receipts ORDER BY Date DESC LIMIT 1"}, {"question_id": 1546, "answer_sql": "SELECT ReceiptNumber , Date FROM receipts ORDER BY Date DESC LIMIT 1"}, {"question_id": 1547, "answer_sql": "SELECT DISTINCT ReceiptNumber FROM receipts WHERE Date = (SELECT min(Date) FROM receipts) OR Price > 10"}, {"question_id": 1548, "answer_sql": "SELECT ReceiptNumber FROM receipts JOIN goods ON receipts.ReceiptNumber = goods.Id WHERE Price > 10 UNION SELECT ReceiptNumber FROM receipts ORDER BY Date LIMIT 1"}, {"question_id": 1549, "answer_sql": "SELECT Id FROM goods WHERE Flavor = Cookie INTERSECT SELECT Id FROM goods WHERE Flavor = Cake AND Price BETWEEN 3 AND 7"}, {"question_id": 1550, "answer_sql": "SELECT Id FROM goods WHERE Flavor = Cookies OR Flavor = Cakes AND Price BETWEEN 3 AND 7"}, {"question_id": 1551, "answer_sql": "SELECT customers.FirstName , customers.LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId ORDER BY receipts.Date LIMIT 1"}, {"question_id": 1552, "answer_sql": "SELECT customers.FirstName , customers.LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId ORDER BY receipts.Date LIMIT 1"}, {"question_id": 1553, "answer_sql": "SELECT avg(Price) FROM goods WHERE Flavor = blackberry OR Flavor = blueberry ;"}, {"question_id": 1554, "answer_sql": "SELECT avg(Price) FROM goods WHERE Flavor = blackberry OR Flavor = blueberry ;"}, {"question_id": 1555, "answer_sql": "SELECT min(Price) FROM goods WHERE Flavor = cheese ;"}, {"question_id": 1556, "answer_sql": "SELECT Id FROM goods WHERE Flavor = cheese ORDER BY Price ASC LIMIT 1"}, {"question_id": 1557, "answer_sql": "SELECT avg(Price) , max(Price) , min(Price) , Flavor FROM goods GROUP BY Flavor ORDER BY Flavor"}, {"question_id": 1558, "answer_sql": "SELECT max(Price) , min(Price) , avg(Price) FROM goods ORDER BY Flavor"}, {"question_id": 1559, "answer_sql": "SELECT min(Price) , max(Price) , Food FROM goods GROUP BY Food ORDER BY Food"}, {"question_id": 1560, "answer_sql": "SELECT min(Price) , max(Price) FROM goods ORDER BY Flavor"}, {"question_id": 1561, "answer_sql": "SELECT Date FROM receipts GROUP BY Date ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1562, "answer_sql": "SELECT Date FROM receipts GROUP BY Date ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1563, "answer_sql": "SELECT customers.FirstName , customers.LastName , count(*) FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1564, "answer_sql": "SELECT CustomerId , count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1565, "answer_sql": "SELECT Date, count(DISTINCT CustomerId) FROM receipts GROUP BY Date"}, {"question_id": 1566, "answer_sql": "SELECT Date, count(*) FROM receipts GROUP BY Date"}, {"question_id": 1567, "answer_sql": "SELECT customers.FirstName , customers.LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = apple"}, {"question_id": 1568, "answer_sql": "SELECT customers.FirstName , customers.LastName FROM customers JOIN items ON customers.Id = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = apple AND goods.Food = Tart ;"}, {"question_id": 1569, "answer_sql": "SELECT Id FROM goods WHERE Flavor = Cookies AND Price < (SELECT min(Price) FROM goods WHERE Flavor = Croissant )"}, {"question_id": 1570, "answer_sql": "SELECT Id FROM goods WHERE Price < (SELECT min(Price) FROM goods WHERE Food = croissant )"}, {"question_id": 1571, "answer_sql": "SELECT Id FROM goods WHERE Price >= (SELECT avg(Price) FROM goods WHERE Flavor = Tart )"}, {"question_id": 1572, "answer_sql": "SELECT Id FROM goods WHERE Price >= (SELECT avg(Price) FROM goods WHERE Flavor = Tart )"}, {"question_id": 1573, "answer_sql": "SELECT Id FROM goods WHERE Price > (SELECT avg(Price) FROM goods)"}, {"question_id": 1574, "answer_sql": "SELECT Id FROM goods WHERE Price > (SELECT avg(Price) FROM goods)"}, {"question_id": 1575, "answer_sql": "SELECT Id , Flavor , Food FROM goods ORDER BY Price"}, {"question_id": 1576, "answer_sql": "SELECT Id , Flavor , Food FROM goods ORDER BY Price"}, {"question_id": 1577, "answer_sql": "SELECT Id , Flavor FROM goods ORDER BY Flavor"}, {"question_id": 1578, "answer_sql": "SELECT Id , Flavor FROM goods ORDER BY Flavor"}, {"question_id": 1579, "answer_sql": "SELECT Item FROM goods WHERE Flavor = chocolate EXCEPT SELECT Item FROM items GROUP BY Item HAVING count(*) > 10"}, {"question_id": 1580, "answer_sql": "SELECT Item FROM goods WHERE Flavor = chocolate GROUP BY Item HAVING count(*) <= 10"}, {"question_id": 1581, "answer_sql": "SELECT Flavor FROM goods WHERE Food = Cake EXCEPT SELECT Flavor FROM goods WHERE Food = Tart"}, {"question_id": 1582, "answer_sql": "SELECT Flavor FROM goods WHERE Flavor != Tart"}, {"question_id": 1583, "answer_sql": "SELECT Flavor FROM goods GROUP BY Flavor ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1584, "answer_sql": "SELECT Item FROM items GROUP BY Item ORDER BY count(*) DESC LIMIT 3"}, {"question_id": 1585, "answer_sql": "SELECT Id FROM customers GROUP BY Id HAVING sum(Price) > 150"}, {"question_id": 1586, "answer_sql": "SELECT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id HAVING sum(goods.Price) > 150"}, {"question_id": 1587, "answer_sql": "SELECT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt GROUP BY customers.Id HAVING avg(items.Item) > 5"}, {"question_id": 1588, "answer_sql": "SELECT Id FROM customers GROUP BY Id HAVING avg(Price) > 5"}, {"question_id": 1589, "answer_sql": "SELECT Date FROM receipts JOIN customers ON receipts.CustomerId = customers.Id GROUP BY Date HAVING sum(Price) > 100"}, {"question_id": 1590, "answer_sql": "SELECT Date FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt GROUP BY Date HAVING sum(Price) > 100"}, {"question_id": 1591, "answer_sql": "SELECT count(*) FROM driver"}, {"question_id": 1592, "answer_sql": "SELECT count(*) FROM driver"}, {"question_id": 1593, "answer_sql": "SELECT Make , count(*) FROM driver WHERE Points > 150 GROUP BY Make"}, {"question_id": 1594, "answer_sql": "SELECT Make , count(*) FROM driver WHERE Points > 150 GROUP BY Make"}, {"question_id": 1595, "answer_sql": "SELECT Make , avg(Age) FROM driver GROUP BY Make"}, {"question_id": 1596, "answer_sql": "SELECT avg(Age) , Make FROM driver GROUP BY Make"}, {"question_id": 1597, "answer_sql": "SELECT avg(Laps) FROM driver WHERE Age < 20"}, {"question_id": 1598, "answer_sql": "SELECT avg(Laps) FROM driver WHERE Age < 20"}, {"question_id": 1599, "answer_sql": "SELECT Manager , Sponsor FROM team ORDER BY Car_Owner"}, {"question_id": 1600, "answer_sql": "SELECT Manager , Sponsor FROM team ORDER BY Car_Owner"}, {"question_id": 1601, "answer_sql": "SELECT Make FROM team GROUP BY Make HAVING count(*) > 1"}, {"question_id": 1602, "answer_sql": "SELECT Make FROM team GROUP BY Make HAVING count(*) > 1"}, {"question_id": 1603, "answer_sql": "SELECT Make FROM team WHERE Car_Owner = Buddy Arrington"}, {"question_id": 1604, "answer_sql": "SELECT Make FROM team WHERE Car_Owner = Buddy Arrington"}, {"question_id": 1605, "answer_sql": "SELECT max(Points) , min(Points) FROM driver"}, {"question_id": 1606, "answer_sql": "SELECT max(Points) , min(Points) FROM driver"}, {"question_id": 1607, "answer_sql": "SELECT count(*) FROM driver WHERE Points < 150"}, {"question_id": 1608, "answer_sql": "SELECT count(*) FROM driver WHERE Points < 150"}, {"question_id": 1609, "answer_sql": "SELECT Driver FROM driver ORDER BY Age ASC"}, {"question_id": 1610, "answer_sql": "SELECT Driver FROM driver ORDER BY Age ASC"}, {"question_id": 1611, "answer_sql": "SELECT Driver FROM driver ORDER BY Points DESC"}, {"question_id": 1612, "answer_sql": "SELECT Driver FROM driver ORDER BY Points DESC"}, {"question_id": 1613, "answer_sql": "SELECT Driver , country FROM driver"}, {"question_id": 1614, "answer_sql": "SELECT Driver , Country FROM driver"}, {"question_id": 1615, "answer_sql": "SELECT max(Points) FROM driver WHERE Country IN (SELECT Country_Id FROM country WHERE Capital = Dublin )"}, {"question_id": 1616, "answer_sql": "SELECT max(Points) FROM driver WHERE Country IN (SELECT Country_Id FROM country WHERE Capital = Dublin )"}, {"question_id": 1617, "answer_sql": "SELECT avg(Age) FROM driver WHERE Country IN (SELECT Country_Id FROM country WHERE Official_native_language = English )"}, {"question_id": 1618, "answer_sql": "SELECT avg(Age) FROM driver WHERE Country IN (SELECT Country_Id FROM country WHERE Official_native_language = English )"}, {"question_id": 1619, "answer_sql": "SELECT country FROM driver WHERE Points > 150"}, {"question_id": 1620, "answer_sql": "SELECT country FROM driver WHERE points > 150"}, {"question_id": 1621, "answer_sql": "SELECT country.Capital FROM country JOIN driver ON country.Country_Id = driver.Country WHERE driver.Points = (SELECT max(Points) FROM driver)"}, {"question_id": 1622, "answer_sql": "SELECT country.Capital FROM country JOIN driver ON country.Country_Id = driver.Country ORDER BY driver.Points DESC LIMIT 1"}, {"question_id": 1623, "answer_sql": "SELECT Make , count(*) FROM driver GROUP BY Make"}, {"question_id": 1624, "answer_sql": "SELECT Make , count(*) FROM driver GROUP BY Make"}, {"question_id": 1625, "answer_sql": "SELECT Make FROM driver GROUP BY Make ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1626, "answer_sql": "SELECT Make FROM driver GROUP BY Make ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1627, "answer_sql": "SELECT Make FROM driver GROUP BY Make HAVING count(*) >= 3"}, {"question_id": 1628, "answer_sql": "SELECT Make FROM driver GROUP BY Make HAVING count(*) >= 3"}, {"question_id": 1629, "answer_sql": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)"}, {"question_id": 1630, "answer_sql": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)"}, {"question_id": 1631, "answer_sql": "SELECT country.Country FROM country JOIN driver ON country.Country_Id = driver.Country WHERE driver.Make = Dodge INTERSECT SELECT country.Country FROM country JOIN driver ON country.Country_Id = driver.Country WHERE driver.Make = Chevrolet"}, {"question_id": 1632, "answer_sql": "SELECT country FROM driver WHERE Make = Dodge INTERSECT SELECT country FROM driver WHERE Make = Chevrolet"}, {"question_id": 1633, "answer_sql": "SELECT sum(Points) , avg(Points) FROM driver"}, {"question_id": 1634, "answer_sql": "SELECT sum(Points) , avg(Points) FROM driver"}, {"question_id": 1635, "answer_sql": "SELECT Country FROM country WHERE Country_Id NOT IN (SELECT Country FROM driver)"}, {"question_id": 1636, "answer_sql": "SELECT Country FROM country WHERE Country_Id NOT IN (SELECT Country FROM driver)"}, {"question_id": 1637, "answer_sql": "SELECT Manager , Sponsor FROM team ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1638, "answer_sql": "SELECT Manager , Sponsor FROM team ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1639, "answer_sql": "SELECT Manager , Car_Owner FROM team WHERE Team_ID IN (SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING count(*) >= 2)"}, {"question_id": 1640, "answer_sql": "SELECT Manager , Car_Owner FROM team WHERE Team_ID IN (SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING count(*) >= 2)"}, {"question_id": 1641, "answer_sql": "SELECT count(*) FROM institution"}, {"question_id": 1642, "answer_sql": "SELECT count(*) FROM institution"}, {"question_id": 1643, "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC"}, {"question_id": 1644, "answer_sql": "SELECT Name FROM institution ORDER BY Name"}, {"question_id": 1645, "answer_sql": "SELECT Name FROM institution ORDER BY Founded ASC"}, {"question_id": 1646, "answer_sql": "SELECT Name FROM institution ORDER BY Founded"}, {"question_id": 1647, "answer_sql": "SELECT City , Province FROM institution"}, {"question_id": 1648, "answer_sql": "SELECT City , Province FROM institution"}, {"question_id": 1649, "answer_sql": "SELECT max(Enrollment) , min(Enrollment) FROM institution"}, {"question_id": 1650, "answer_sql": "SELECT max(Enrollment) , min(Enrollment) FROM institution"}, {"question_id": 1651, "answer_sql": "SELECT Affiliation FROM institution WHERE City != Vancouver"}, {"question_id": 1652, "answer_sql": "SELECT Affiliation FROM institution WHERE City != Vancouver"}, {"question_id": 1653, "answer_sql": "SELECT Stadium FROM institution ORDER BY Capacity DESC"}, {"question_id": 1654, "answer_sql": "SELECT Stadium FROM institution ORDER BY Capacity DESC"}, {"question_id": 1655, "answer_sql": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1"}, {"question_id": 1656, "answer_sql": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1"}, {"question_id": 1657, "answer_sql": "SELECT Name FROM institution"}, {"question_id": 1658, "answer_sql": "SELECT institution.Name , Championship.Nickname FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID"}, {"question_id": 1659, "answer_sql": "SELECT Nickname FROM institution ORDER BY Enrollment LIMIT 1"}, {"question_id": 1660, "answer_sql": "SELECT Nickname FROM institution ORDER BY Enrollment LIMIT 1"}, {"question_id": 1661, "answer_sql": "SELECT Name FROM institution ORDER BY Number_of_Championships DESC"}, {"question_id": 1662, "answer_sql": "SELECT Name FROM Championship ORDER BY Number_of_Championships DESC"}, {"question_id": 1663, "answer_sql": "SELECT institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID"}, {"question_id": 1664, "answer_sql": "SELECT institution.Name FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID"}, {"question_id": 1665, "answer_sql": "SELECT sum(Number_of_Championships) FROM Championship JOIN institution ON Championship.Institution_ID = institution.Institution_ID WHERE institution.Affiliation = public"}, {"question_id": 1666, "answer_sql": "SELECT sum(Number_of_Championships) FROM Championship JOIN institution ON Championship.Institution_ID = institution.Institution_ID WHERE institution.Affiliation = Public"}, {"question_id": 1667, "answer_sql": "SELECT Affiliation , count(*) FROM institution GROUP BY Affiliation"}, {"question_id": 1668, "answer_sql": "SELECT Affiliation , count(*) FROM institution GROUP BY Affiliation"}, {"question_id": 1669, "answer_sql": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1670, "answer_sql": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1671, "answer_sql": "SELECT Founded FROM institution GROUP BY Founded HAVING count(*) > 1"}, {"question_id": 1672, "answer_sql": "SELECT Founded , count(*) FROM institution GROUP BY Founded HAVING count(*) > 1"}, {"question_id": 1673, "answer_sql": "SELECT Nickname FROM Championship ORDER BY Capacity DESC"}, {"question_id": 1674, "answer_sql": "SELECT Nickname FROM Championship ORDER BY Capacity DESC"}, {"question_id": 1675, "answer_sql": "SELECT sum(Enrollment) FROM institution WHERE City = Vancouver OR City = Calgary ;"}, {"question_id": 1676, "answer_sql": "SELECT Enrollment FROM institution WHERE City = Vancouver OR City = Calgary"}, {"question_id": 1677, "answer_sql": "SELECT Province FROM institution WHERE Founded < 1920 INTERSECT SELECT Province FROM institution WHERE Founded > 1950"}, {"question_id": 1678, "answer_sql": "SELECT Province FROM institution WHERE Founded > 1950 INTERSECT SELECT Province FROM institution WHERE Founded < 1920"}, {"question_id": 1679, "answer_sql": "SELECT count(DISTINCT Province) FROM institution"}, {"question_id": 1680, "answer_sql": "SELECT count(DISTINCT Province) FROM institution"}, {"question_id": 1681, "answer_sql": "SELECT * FROM Warehouses"}, {"question_id": 1682, "answer_sql": "SELECT * FROM Warehouses"}, {"question_id": 1683, "answer_sql": "SELECT DISTINCT Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = New York ;"}, {"question_id": 1684, "answer_sql": "SELECT DISTINCT Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = New York"}, {"question_id": 1685, "answer_sql": "SELECT Contents FROM Boxes WHERE Value > 150"}, {"question_id": 1686, "answer_sql": "SELECT Contents FROM Boxes WHERE Value > 150"}, {"question_id": 1687, "answer_sql": "SELECT Warehouse , avg(Value) FROM Boxes GROUP BY Warehouse"}, {"question_id": 1688, "answer_sql": "SELECT Warehouse , avg(Value) FROM Boxes GROUP BY Warehouse"}, {"question_id": 1689, "answer_sql": "SELECT avg(Value) , sum(Value) FROM Boxes"}, {"question_id": 1690, "answer_sql": "SELECT avg(Value) , sum(Value) FROM Boxes"}, {"question_id": 1691, "answer_sql": "SELECT avg(Capacity) , sum(Capacity) FROM Warehouses"}, {"question_id": 1692, "answer_sql": "SELECT avg(Capacity) , sum(Capacity) FROM Warehouses"}, {"question_id": 1693, "answer_sql": "SELECT avg(Value) , max(Value) , Contents FROM Boxes GROUP BY Contents"}, {"question_id": 1694, "answer_sql": "SELECT avg(Value) , max(Value) , Contents FROM Boxes GROUP BY Contents"}, {"question_id": 1695, "answer_sql": "SELECT Contents FROM Boxes GROUP BY Contents ORDER BY sum(Value) DESC LIMIT 1"}, {"question_id": 1696, "answer_sql": "SELECT Contents FROM Boxes ORDER BY Value DESC LIMIT 1"}, {"question_id": 1697, "answer_sql": "SELECT avg(Value) FROM Boxes"}, {"question_id": 1698, "answer_sql": "SELECT avg(Value) FROM Boxes"}, {"question_id": 1699, "answer_sql": "SELECT DISTINCT Contents FROM Boxes"}, {"question_id": 1700, "answer_sql": "SELECT DISTINCT Contents FROM Boxes"}, {"question_id": 1701, "answer_sql": "SELECT count(DISTINCT Contents) FROM Boxes"}, {"question_id": 1702, "answer_sql": "SELECT count(DISTINCT Contents) FROM Boxes"}, {"question_id": 1703, "answer_sql": "SELECT DISTINCT LOCATION FROM Warehouses"}, {"question_id": 1704, "answer_sql": "SELECT DISTINCT LOCATION FROM Warehouses"}, {"question_id": 1705, "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE LOCATION = Chicago ) OR Warehouse IN (SELECT Code FROM Warehouses WHERE LOCATION = New York )"}, {"question_id": 1706, "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE LOCATION = Chicago ) OR Warehouse IN (SELECT Code FROM Warehouses WHERE LOCATION = New York )"}, {"question_id": 1707, "answer_sql": "SELECT sum(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = Chicago OR Warehouses.Location = New York"}, {"question_id": 1708, "answer_sql": "SELECT sum(Value) FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE LOCATION = Chicago ) OR Warehouse IN (SELECT Code FROM Warehouses WHERE LOCATION = New York )"}, {"question_id": 1709, "answer_sql": "SELECT Contents FROM Warehouses WHERE LOCATION = Chicago INTERSECT SELECT Contents FROM Warehouses WHERE LOCATION = New York"}, {"question_id": 1710, "answer_sql": "SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = Chicago ) INTERSECT SELECT Contents FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE Location = New York )"}, {"question_id": 1711, "answer_sql": "SELECT DISTINCT Contents FROM Boxes EXCEPT SELECT DISTINCT Contents FROM Warehouses WHERE LOCATION = New York"}, {"question_id": 1712, "answer_sql": "SELECT DISTINCT Contents FROM Boxes EXCEPT SELECT DISTINCT Contents FROM Warehouses WHERE LOCATION = New York ;"}, {"question_id": 1713, "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = Rocks EXCEPT SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = Scissors"}, {"question_id": 1714, "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = Rocks EXCEPT SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = Scissors"}, {"question_id": 1715, "answer_sql": "SELECT Warehouse FROM Boxes WHERE Contents = Rocks OR Contents = Scissors"}, {"question_id": 1716, "answer_sql": "SELECT DISTINCT Warehouse FROM Boxes WHERE Contents = Rocks OR Contents = Scissors"}, {"question_id": 1717, "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = Rocks INTERSECT SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = Scissors"}, {"question_id": 1718, "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = Rocks AND Boxes.Contents = Scissors"}, {"question_id": 1719, "answer_sql": "SELECT Code , Contents FROM Boxes ORDER BY Value"}, {"question_id": 1720, "answer_sql": "SELECT Code , Contents FROM Boxes ORDER BY Value"}, {"question_id": 1721, "answer_sql": "SELECT Code , Contents FROM Boxes ORDER BY Value LIMIT 1"}, {"question_id": 1722, "answer_sql": "SELECT Code , Contents FROM Boxes ORDER BY Value LIMIT 1"}, {"question_id": 1723, "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Value > (SELECT avg(Value) FROM Boxes)"}, {"question_id": 1724, "answer_sql": "SELECT DISTINCT Contents FROM Boxes WHERE Value > (SELECT avg(Value) FROM Boxes)"}, {"question_id": 1725, "answer_sql": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents"}, {"question_id": 1726, "answer_sql": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents"}, {"question_id": 1727, "answer_sql": "SELECT Code FROM Boxes WHERE Value > (SELECT max(Value) FROM Boxes WHERE Contents = Rocks )"}, {"question_id": 1728, "answer_sql": "SELECT Code FROM Boxes WHERE Value > (SELECT max(Value) FROM Boxes WHERE Contents = Rocks )"}, {"question_id": 1729, "answer_sql": "SELECT Code , Contents FROM Boxes WHERE Value > (SELECT max(Value) FROM Boxes WHERE Contents = Scissors )"}, {"question_id": 1730, "answer_sql": "SELECT Code , Contents FROM Boxes WHERE Value > (SELECT max(Value) FROM Boxes WHERE Contents = Scissors )"}, {"question_id": 1731, "answer_sql": "SELECT sum(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Capacity = (SELECT max(Capacity) FROM Warehouses)"}, {"question_id": 1732, "answer_sql": "SELECT sum(Value) FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1)"}, {"question_id": 1733, "answer_sql": "SELECT Warehouse , avg(Value) FROM Boxes GROUP BY Warehouse HAVING avg(Value) > 150"}, {"question_id": 1734, "answer_sql": "SELECT Warehouse , avg(Value) FROM Boxes GROUP BY Warehouse HAVING avg(Value) > 150"}, {"question_id": 1735, "answer_sql": "SELECT Contents , sum(Value) , count(*) FROM Boxes GROUP BY Contents"}, {"question_id": 1736, "answer_sql": "SELECT Contents , sum(Value) , count(*) FROM Boxes GROUP BY Contents"}, {"question_id": 1737, "answer_sql": "SELECT sum(Capacity) , avg(Capacity) , max(Capacity) , LOCATION FROM Warehouses GROUP BY LOCATION"}, {"question_id": 1738, "answer_sql": "SELECT LOCATION , sum(Capacity) , avg(Capacity) , max(Capacity) FROM Warehouses GROUP BY LOCATION"}, {"question_id": 1739, "answer_sql": "SELECT sum(Capacity) FROM Warehouses"}, {"question_id": 1740, "answer_sql": "SELECT sum(Capacity) FROM Warehouses"}, {"question_id": 1741, "answer_sql": "SELECT Warehouses.Location , max(Boxes.Value) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location"}, {"question_id": 1742, "answer_sql": "SELECT Warehouses.Location , Boxes.Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse ORDER BY Boxes.Value DESC LIMIT 1"}, {"question_id": 1743, "answer_sql": "SELECT Warehouse , count(*) FROM Boxes GROUP BY Warehouse"}, {"question_id": 1744, "answer_sql": "SELECT Warehouse , count(*) FROM Boxes GROUP BY Warehouse"}, {"question_id": 1745, "answer_sql": "SELECT count(DISTINCT LOCATION) FROM Boxes WHERE Contents = Rocks ;"}, {"question_id": 1746, "answer_sql": "SELECT count(DISTINCT Warehouse) FROM Boxes WHERE Contents = Rocks ;"}, {"question_id": 1747, "answer_sql": "SELECT Boxes.Code , Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code"}, {"question_id": 1748, "answer_sql": "SELECT Boxes.Code , Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code"}, {"question_id": 1749, "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses WHERE LOCATION = Chicago )"}, {"question_id": 1750, "answer_sql": "SELECT Code FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE LOCATION = Chicago )"}, {"question_id": 1751, "answer_sql": "SELECT Warehouse , count(*) FROM Boxes GROUP BY Warehouse"}, {"question_id": 1752, "answer_sql": "SELECT Warehouse , count(*) FROM Boxes GROUP BY Warehouse"}, {"question_id": 1753, "answer_sql": "SELECT count(DISTINCT Contents) , Warehouse FROM Boxes GROUP BY Warehouse"}, {"question_id": 1754, "answer_sql": "SELECT Warehouse , count(DISTINCT Contents) FROM Boxes GROUP BY Warehouse"}, {"question_id": 1755, "answer_sql": "SELECT Code FROM Warehouses WHERE Capacity > (SELECT max(Capacity) FROM Warehouses)"}, {"question_id": 1756, "answer_sql": "SELECT Warehouse FROM Boxes WHERE Value > (SELECT Capacity FROM Warehouses)"}, {"question_id": 1757, "answer_sql": "SELECT sum(Value) FROM Boxes WHERE Warehouse NOT IN (SELECT Code FROM Warehouses WHERE LOCATION = Chicago )"}, {"question_id": 1758, "answer_sql": "SELECT sum(Value) FROM Boxes WHERE Warehouse NOT IN (SELECT Code FROM Warehouses WHERE LOCATION = Chicago )"}, {"question_id": 1759, "answer_sql": "SELECT University_Name , City , State FROM university ORDER BY University_Name"}, {"question_id": 1760, "answer_sql": "SELECT University_Name , City , State FROM university ORDER BY University_Name"}, {"question_id": 1761, "answer_sql": "SELECT count(*) FROM university WHERE State = Illinois OR State = Ohio ;"}, {"question_id": 1762, "answer_sql": "SELECT count(*) FROM university WHERE State = Illinois OR State = Ohio ;"}, {"question_id": 1763, "answer_sql": "SELECT max(Enrollment) , avg(Enrollment) , min(Enrollment) FROM university"}, {"question_id": 1764, "answer_sql": "SELECT max(Enrollment) , avg(Enrollment) , min(Enrollment) FROM university"}, {"question_id": 1765, "answer_sql": "SELECT Team_Name FROM university WHERE Enrollment > (SELECT avg(Enrollment) FROM university)"}, {"question_id": 1766, "answer_sql": "SELECT Team_Name FROM university WHERE Enrollment > (SELECT avg(Enrollment) FROM university)"}, {"question_id": 1767, "answer_sql": "SELECT Home_Conference FROM university"}, {"question_id": 1768, "answer_sql": "SELECT DISTINCT Home_Conference FROM university"}, {"question_id": 1769, "answer_sql": "SELECT Home_Conference , count(*) FROM university GROUP BY Home_Conference"}, {"question_id": 1770, "answer_sql": "SELECT Home_Conference , count(*) FROM university GROUP BY Home_Conference"}, {"question_id": 1771, "answer_sql": "SELECT State FROM university GROUP BY State ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1772, "answer_sql": "SELECT State FROM university GROUP BY State ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1773, "answer_sql": "SELECT Home_Conference FROM university WHERE Enrollment > 2000"}, {"question_id": 1774, "answer_sql": "SELECT Home_Conference FROM university GROUP BY Home_Conference HAVING avg(Enrollment) > 2000"}, {"question_id": 1775, "answer_sql": "SELECT Home_Conference FROM university GROUP BY Home_Conference ORDER BY count(*) LIMIT 1"}, {"question_id": 1776, "answer_sql": "SELECT Home_Conference FROM university GROUP BY Home_Conference ORDER BY count(*) LIMIT 1"}, {"question_id": 1777, "answer_sql": "SELECT Major_Name , Major_Code FROM major ORDER BY Major_Code"}, {"question_id": 1778, "answer_sql": "SELECT Major_Name , Major_Code FROM major ORDER BY Major_Code"}, {"question_id": 1779, "answer_sql": "SELECT major.Major_Name , major_ranking.Rank FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE university.University_Name = Augustana College"}, {"question_id": 1780, "answer_sql": "SELECT Rank , Major_Name FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE university.University_Name = Augustana College"}, {"question_id": 1781, "answer_sql": "SELECT university.University_Name , university.City , university.State FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE major.Major_Name = Accounting AND major_ranking.Rank = 1"}, {"question_id": 1782, "answer_sql": "SELECT university.University_Name , university.City , university.State FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE major.Major_Name = Accounting ORDER BY major_ranking.Rank LIMIT 1"}, {"question_id": 1783, "answer_sql": "SELECT university.University_Name FROM major_ranking JOIN university ON major_ranking.University_ID = university.University_ID JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major_ranking.Rank = 1 GROUP BY major_ranking.University_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1784, "answer_sql": "SELECT university.University_Name FROM major_ranking JOIN university ON major_ranking.University_ID = university.University_ID WHERE major_ranking.Rank = 1"}, {"question_id": 1785, "answer_sql": "SELECT University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Rank = 1)"}, {"question_id": 1786, "answer_sql": "SELECT University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Rank = 1)"}, {"question_id": 1787, "answer_sql": "SELECT University_Name FROM major JOIN major_ranking ON major.Major_ID = major_ranking.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE major.Major_Name = Accounting INTERSECT SELECT University_Name FROM major JOIN major_ranking ON major.Major_ID = major_ranking.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE major.Major_Name = Urban Education ;"}, {"question_id": 1788, "answer_sql": "SELECT University_Name FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE major.Major_Name = Accounting INTERSECT SELECT University_Name FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE major.Major_Name = Urban Education ;"}, {"question_id": 1789, "answer_sql": "SELECT University_Name , Rank FROM overall_ranking WHERE State = Wisconsin ;"}, {"question_id": 1790, "answer_sql": "SELECT University_Name , Rank FROM overall_ranking WHERE State = Wisconsin ;"}, {"question_id": 1791, "answer_sql": "SELECT University_Name FROM overall_ranking ORDER BY Research_point DESC LIMIT 1"}, {"question_id": 1792, "answer_sql": "SELECT University_Name FROM overall_ranking ORDER BY Research_point DESC LIMIT 1"}, {"question_id": 1793, "answer_sql": "SELECT University_Name FROM overall_ranking ORDER BY Reputation_point ASC"}, {"question_id": 1794, "answer_sql": "SELECT University_Name FROM overall_ranking ORDER BY Reputation_point ASC"}, {"question_id": 1795, "answer_sql": "SELECT University_Name FROM major_ranking JOIN university ON major_ranking.University_ID = university.University_ID JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = Accounting AND major_ranking.Rank >= 3"}, {"question_id": 1796, "answer_sql": "SELECT University_Name FROM major_ranking JOIN university ON major_ranking.University_ID = university.University_ID JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = Accounting AND major_ranking.Rank >= 3"}, {"question_id": 1797, "answer_sql": "SELECT sum(enrollment) FROM overall_ranking WHERE Rank <= 5"}, {"question_id": 1798, "answer_sql": "SELECT sum(enrollment) FROM overall_ranking WHERE Rank <= 5"}, {"question_id": 1799, "answer_sql": "SELECT University_Name , Citation_point FROM overall_ranking WHERE Reputation_point >= 3"}, {"question_id": 1800, "answer_sql": "SELECT university.University_Name , overall_ranking.Citation_point FROM overall_ranking JOIN university ON overall_ranking.University_ID = university.University_ID ORDER BY overall_ranking.Reputation_point DESC LIMIT 3"}, {"question_id": 1801, "answer_sql": "SELECT State FROM university WHERE Enrollment < 3000 GROUP BY State HAVING count(*) > 2"}, {"question_id": 1802, "answer_sql": "SELECT State FROM university WHERE Enrollment < 3000 GROUP BY State HAVING count(*) > 2"}, {"question_id": 1803, "answer_sql": "SELECT Title FROM Movies WHERE Rating = null"}, {"question_id": 1804, "answer_sql": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters)"}, {"question_id": 1805, "answer_sql": "SELECT Title FROM Movies WHERE Rating = G"}, {"question_id": 1806, "answer_sql": "SELECT Title FROM Movies WHERE Rating = G"}, {"question_id": 1807, "answer_sql": "SELECT Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = Odeon ;"}, {"question_id": 1808, "answer_sql": "SELECT Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = Odeon ;"}, {"question_id": 1809, "answer_sql": "SELECT Movies.Title , MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code"}, {"question_id": 1810, "answer_sql": "SELECT Movies.Title , MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code"}, {"question_id": 1811, "answer_sql": "SELECT count(*) FROM Movies WHERE Rating = G"}, {"question_id": 1812, "answer_sql": "SELECT count(*) FROM Movies WHERE Rating = G"}, {"question_id": 1813, "answer_sql": "SELECT count(*) FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code"}, {"question_id": 1814, "answer_sql": "SELECT count(*) FROM MovieTheaters"}, {"question_id": 1815, "answer_sql": "SELECT count(DISTINCT Movie) FROM MovieTheaters"}, {"question_id": 1816, "answer_sql": "SELECT count(DISTINCT Title) FROM Movies"}, {"question_id": 1817, "answer_sql": "SELECT count(*) FROM MovieTheaters"}, {"question_id": 1818, "answer_sql": "SELECT count(*) FROM MovieTheaters"}, {"question_id": 1819, "answer_sql": "SELECT Rating FROM Movies WHERE Title LIKE %Citizen%"}, {"question_id": 1820, "answer_sql": "SELECT Rating FROM Movies WHERE Title LIKE %Citizen%"}, {"question_id": 1821, "answer_sql": "SELECT DISTINCT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Rating = 'G' OR Rating = 'PG'"}, {"question_id": 1822, "answer_sql": "SELECT Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Rating = G OR Rating = PG"}, {"question_id": 1823, "answer_sql": "SELECT Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Name = cinema Odeon OR Name = Imperial ;"}, {"question_id": 1824, "answer_sql": "SELECT Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Name = Odeon OR Name = Imperial"}, {"question_id": 1825, "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie INTERSECT SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie"}, {"question_id": 1826, "answer_sql": "SELECT Movies.Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE MovieTheaters.Name = Odeon INTERSECT SELECT Movies.Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE MovieTheaters.Name = Imperial"}, {"question_id": 1827, "answer_sql": "SELECT Title FROM Movies EXCEPT SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = Odeon"}, {"question_id": 1828, "answer_sql": "SELECT Title FROM Movies EXCEPT SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = Odeon"}, {"question_id": 1829, "answer_sql": "SELECT Title FROM Movies ORDER BY Title"}, {"question_id": 1830, "answer_sql": "SELECT Title FROM Movies ORDER BY Title"}, {"question_id": 1831, "answer_sql": "SELECT Title FROM Movies ORDER BY Rating"}, {"question_id": 1832, "answer_sql": "SELECT Title FROM Movies ORDER BY Rating"}, {"question_id": 1833, "answer_sql": "SELECT Name FROM MovieTheaters GROUP BY Movie ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1834, "answer_sql": "SELECT Name FROM MovieTheaters GROUP BY Movie ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1835, "answer_sql": "SELECT Movies.Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Movie ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1836, "answer_sql": "SELECT Movies.Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Movie ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1837, "answer_sql": "SELECT Rating , count(*) FROM Movies GROUP BY Rating"}, {"question_id": 1838, "answer_sql": "SELECT Rating , count(*) FROM Movies GROUP BY Rating"}, {"question_id": 1839, "answer_sql": "SELECT count(*) FROM Movies WHERE Rating != null"}, {"question_id": 1840, "answer_sql": "SELECT count(*) FROM Movies WHERE Rating != null"}, {"question_id": 1841, "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie != null"}, {"question_id": 1842, "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie != null"}, {"question_id": 1843, "answer_sql": "SELECT Name FROM MovieTheaters EXCEPT SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Title = The Matrix ;"}, {"question_id": 1844, "answer_sql": "SELECT Name FROM MovieTheaters WHERE Code NOT IN (SELECT Movie FROM Movies)"}, {"question_id": 1845, "answer_sql": "SELECT DISTINCT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Rating = G"}, {"question_id": 1846, "answer_sql": "SELECT Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Rating = G"}, {"question_id": 1847, "answer_sql": "SELECT Title FROM Movies"}, {"question_id": 1848, "answer_sql": "SELECT Title FROM Movies"}, {"question_id": 1849, "answer_sql": "SELECT DISTINCT Rating FROM Movies"}, {"question_id": 1850, "answer_sql": "SELECT DISTINCT Rating FROM Movies"}, {"question_id": 1851, "answer_sql": "SELECT * FROM Movies WHERE Rating = Unrated ;"}, {"question_id": 1852, "answer_sql": "SELECT * FROM Movies WHERE Rating = Unrated ;"}, {"question_id": 1853, "answer_sql": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters)"}, {"question_id": 1854, "answer_sql": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters)"}, {"question_id": 1855, "answer_sql": "SELECT Recipient FROM Package ORDER BY Weight DESC LIMIT 1"}, {"question_id": 1856, "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient JOIN Shipment ON Shipment.ShipmentID = Package.Shipment WHERE Weight = (SELECT max(Weight) FROM Package)"}, {"question_id": 1857, "answer_sql": "SELECT sum(Weight) FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = Leo Wong )"}, {"question_id": 1858, "answer_sql": "SELECT sum(Weight) FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = Leo Wong )"}, {"question_id": 1859, "answer_sql": "SELECT Position FROM Employee WHERE Name = Amy Wong ;"}, {"question_id": 1860, "answer_sql": "SELECT Position FROM Employee WHERE Name = Amy Wong ;"}, {"question_id": 1861, "answer_sql": "SELECT Salary , Position FROM Employee WHERE Name = Turanga Leela ;"}, {"question_id": 1862, "answer_sql": "SELECT Salary , Position FROM Employee WHERE Name = Turanga Leela ;"}, {"question_id": 1863, "answer_sql": "SELECT avg(Salary) FROM Employee WHERE Position = Intern"}, {"question_id": 1864, "answer_sql": "SELECT avg(Salary) FROM Employee WHERE Position = Intern"}, {"question_id": 1865, "answer_sql": "SELECT Position FROM Employee WHERE Position = Physician ;"}, {"question_id": 1866, "answer_sql": "SELECT Level FROM Employee WHERE Position = physician"}, {"question_id": 1867, "answer_sql": "SELECT PackageNumber FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Shipment.Manager = (SELECT EmployeeID FROM Employee WHERE Name = Leo Wong )"}, {"question_id": 1868, "answer_sql": "SELECT count(*) FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee JOIN Shipment ON Shipment.Manager = Employee.EmployeeID JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Employee.Name = Leo Wong ;"}, {"question_id": 1869, "answer_sql": "SELECT PackageNumber FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = Leo Wong )"}, {"question_id": 1870, "answer_sql": "SELECT PackageNumber FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = Leo Wong )"}, {"question_id": 1871, "answer_sql": "SELECT DISTINCT Package.Contents FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee JOIN Shipment ON Shipment.Manager = Employee.EmployeeID JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Employee.Name = Leo Wong"}, {"question_id": 1872, "answer_sql": "SELECT DISTINCT PackageNumber FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = Leo Wong"}, {"question_id": 1873, "answer_sql": "SELECT count(*) FROM Package WHERE Sender IN (SELECT AccountNumber FROM Client WHERE Name = Ogden Wernstrom ) AND Recipient IN (SELECT AccountNumber FROM Client WHERE Name = Leo Wong )"}, {"question_id": 1874, "answer_sql": "SELECT count(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = Ogden Wernstrom ) AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = Leo Wong )"}, {"question_id": 1875, "answer_sql": "SELECT Contents FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = John Zoidfarb )"}, {"question_id": 1876, "answer_sql": "SELECT Contents FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Shipment.Sender = Client.AccountNumber WHERE Client.Name = John Zoidfarb"}, {"question_id": 1877, "answer_sql": "SELECT PackageNumber , Weight FROM Package WHERE Sender IN (SELECT AccountNumber FROM Client WHERE Name LIKE %John% ) ORDER BY Weight DESC"}, {"question_id": 1878, "answer_sql": "SELECT PackageNumber , Weight FROM Package WHERE Weight = (SELECT max(Weight) FROM Package WHERE Sender LIKE %John% )"}, {"question_id": 1879, "answer_sql": "SELECT PackageNumber , Weight FROM Package ORDER BY Weight LIMIT 3"}, {"question_id": 1880, "answer_sql": "SELECT PackageNumber , Weight FROM Package ORDER BY Weight ASC LIMIT 3"}, {"question_id": 1881, "answer_sql": "SELECT Client.Name , count(*) FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1882, "answer_sql": "SELECT Sender.Name , count(*) FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Shipment.Sender = Client.AccountNumber GROUP BY Sender.Name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1883, "answer_sql": "SELECT Client.Name , count(*) FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Client.Name ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 1884, "answer_sql": "SELECT Recipient , count(*) FROM Package GROUP BY Recipient ORDER BY count(*) ASC LIMIT 1"}, {"question_id": 1885, "answer_sql": "SELECT Sender.Name FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment GROUP BY Sender.Name HAVING count(*) > 1"}, {"question_id": 1886, "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name HAVING count(*) > 1"}, {"question_id": 1887, "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = Mars ;"}, {"question_id": 1888, "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = Mars ;"}, {"question_id": 1889, "answer_sql": "SELECT Name , Coordinates FROM Planet ORDER BY Name"}, {"question_id": 1890, "answer_sql": "SELECT Name , Coordinates FROM Planet ORDER BY Name"}, {"question_id": 1891, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = Phillip J. Fry );"}, {"question_id": 1892, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = Phillip J Fry )"}, {"question_id": 1893, "answer_sql": "SELECT Date FROM Shipment"}, {"question_id": 1894, "answer_sql": "SELECT Date FROM Shipment"}, {"question_id": 1895, "answer_sql": "SELECT ShipmentID FROM Planet WHERE Name = Mars"}, {"question_id": 1896, "answer_sql": "SELECT ShipmentID FROM Planet WHERE Name = Mars"}, {"question_id": 1897, "answer_sql": "SELECT ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = Turanga Leela AND Planet.Name = Mars ;"}, {"question_id": 1898, "answer_sql": "SELECT ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = Turanga Leela AND Planet = (SELECT PlanetID FROM Planet WHERE Name = Mars );"}, {"question_id": 1899, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = Mars ) OR Manager = (SELECT EmployeeID FROM Employee WHERE Name = Turanga Leela )"}, {"question_id": 1900, "answer_sql": "SELECT ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = Turanga Leela AND Planet.Name = Mars ;"}, {"question_id": 1901, "answer_sql": "SELECT Planet.Name , count(*) FROM Planet JOIN Shipment ON Planet.PlanetID = Shipment.Planet GROUP BY Shipment.Planet"}, {"question_id": 1902, "answer_sql": "SELECT PlanetID , count(*) FROM Shipment GROUP BY PlanetID"}, {"question_id": 1903, "answer_sql": "SELECT Planet.Name FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Shipment.Planet ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1904, "answer_sql": "SELECT Planet.Name FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Shipment.Planet ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1905, "answer_sql": "SELECT Employee.Name , count(*) FROM Employee JOIN Shipment ON Employee.EmployeeID = Shipment.Manager GROUP BY Employee.Name"}, {"question_id": 1906, "answer_sql": "SELECT Manager , count(*) FROM Shipment GROUP BY Manager"}, {"question_id": 1907, "answer_sql": "SELECT sum(Weight) FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = Mars )"}, {"question_id": 1908, "answer_sql": "SELECT sum(Weight) FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = Mars )"}, {"question_id": 1909, "answer_sql": "SELECT sum(Package.Weight) , Planet.Name FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Planet.Name"}, {"question_id": 1910, "answer_sql": "SELECT sum(Package.Weight) , Planet.Name FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Planet.Name"}, {"question_id": 1911, "answer_sql": "SELECT Planet.Name FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Shipment.Planet HAVING sum(Package.Weight) > 30"}, {"question_id": 1912, "answer_sql": "SELECT Planet.Name FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID GROUP BY Shipment.Planet HAVING sum(Package.Weight) > 30"}, {"question_id": 1913, "answer_sql": "SELECT PackageNumber FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = Omicron Persei 8 ) AND Sender = (SELECT AccountNumber FROM Client WHERE Name = Zapp Brannigan );"}, {"question_id": 1914, "answer_sql": "SELECT count(*) FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Shipment.Manager = (SELECT EmployeeID FROM Employee WHERE Name = Zapp Brannigan ) AND Shipment.Planet = (SELECT PlanetID FROM Planet WHERE Name = Omicron Persei 8 )"}, {"question_id": 1915, "answer_sql": "SELECT PackageNumber FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = Omicron Persei 8 ) OR Sender = (SELECT AccountNumber FROM Client WHERE Name = Zapp Brannigan )"}, {"question_id": 1916, "answer_sql": "SELECT count(*) FROM Shipment JOIN Package ON Shipment.ShipmentID = Package.Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = Omicron Persei 8 ) OR Sender = (SELECT AccountNumber FROM Client WHERE Name = Zapp Brannigan )"}, {"question_id": 1917, "answer_sql": "SELECT PackageNumber , Weight FROM Package WHERE Weight BETWEEN 10 AND 30"}, {"question_id": 1918, "answer_sql": "SELECT PackageNumber , Weight FROM Package WHERE Weight BETWEEN 10 AND 30"}, {"question_id": 1919, "answer_sql": "SELECT Name FROM Employee EXCEPT SELECT Employee.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee WHERE Has_Clearance.Planet = Mars"}, {"question_id": 1920, "answer_sql": "SELECT Name FROM Employee EXCEPT SELECT Employee.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee WHERE Has_Clearance.Planet = Mars"}, {"question_id": 1921, "answer_sql": "SELECT Employee.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee WHERE Has_Clearance.Level = Omega III"}, {"question_id": 1922, "answer_sql": "SELECT Employee.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee WHERE Has_Clearance.Level = Omega III"}, {"question_id": 1923, "answer_sql": "SELECT Planet.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee JOIN Planet ON Planet.PlanetID = Has_Clearance.Planet GROUP BY Planet.Name HAVING count(*) = 1"}, {"question_id": 1924, "answer_sql": "SELECT Planet.Name FROM Employee JOIN Has_Clearance ON Employee.EmployeeID = Has_Clearance.Employee JOIN Planet ON Planet.PlanetID = Has_Clearance.Planet WHERE Employee.Name = Alice"}, {"question_id": 1925, "answer_sql": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000"}, {"question_id": 1926, "answer_sql": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000"}, {"question_id": 1927, "answer_sql": "SELECT Name FROM Employee WHERE Salary > (SELECT avg(Salary) FROM Employee) OR Salary > 5000"}, {"question_id": 1928, "answer_sql": "SELECT Name FROM Employee WHERE Salary > (SELECT avg(Salary) FROM Employee) OR Salary > 5000"}, {"question_id": 1929, "answer_sql": "SELECT count(*) FROM Employee WHERE EmployeeID NOT IN (SELECT Employee FROM Has_Clearance WHERE Planet = Mars )"}, {"question_id": 1930, "answer_sql": "SELECT count(*) FROM Employee WHERE EmployeeID NOT IN (SELECT Employee FROM Has_Clearance WHERE Planet = Mars )"}, {"question_id": 1931, "answer_sql": "SELECT count(*) FROM game"}, {"question_id": 1932, "answer_sql": "SELECT count(*) FROM game"}, {"question_id": 1933, "answer_sql": "SELECT Title , Developers FROM game ORDER BY Units_sold_Millions DESC"}, {"question_id": 1934, "answer_sql": "SELECT Title , Developers FROM game ORDER BY Units_sold_Millions DESC"}, {"question_id": 1935, "answer_sql": "SELECT avg(Units_sold_Millions) FROM game WHERE Franchise != Nintendo"}, {"question_id": 1936, "answer_sql": "SELECT avg(Units_sold_Millions) FROM game WHERE Franchise != Nintendo"}, {"question_id": 1937, "answer_sql": "SELECT Platform_name , Market_district FROM platform"}, {"question_id": 1938, "answer_sql": "SELECT Platform_name , Market_district FROM platform"}, {"question_id": 1939, "answer_sql": "SELECT Platform_name , Platform_ID FROM platform WHERE Download_rank = 1"}, {"question_id": 1940, "answer_sql": "SELECT Platform_name , Platform_ID FROM platform WHERE Download_rank = 1"}, {"question_id": 1941, "answer_sql": "SELECT max(Rank_of_the_year) , min(Rank_of_the_year) FROM player"}, {"question_id": 1942, "answer_sql": "SELECT max(Rank_of_the_year) , min(Rank_of_the_year) FROM player"}, {"question_id": 1943, "answer_sql": "SELECT count(*) FROM player WHERE Rank_of_the_year < 3"}, {"question_id": 1944, "answer_sql": "SELECT count(*) FROM player WHERE Rank_of_the_year <= 3"}, {"question_id": 1945, "answer_sql": "SELECT Player_name FROM player ORDER BY Player_name ASC"}, {"question_id": 1946, "answer_sql": "SELECT Player_name FROM player ORDER BY Player_name"}, {"question_id": 1947, "answer_sql": "SELECT Player_name , College FROM player ORDER BY Rank_of_the_year DESC"}, {"question_id": 1948, "answer_sql": "SELECT Player_name , College FROM player ORDER BY Rank_of_the_year DESC"}, {"question_id": 1949, "answer_sql": "SELECT player.Player_name , player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = Super Mario World"}, {"question_id": 1950, "answer_sql": "SELECT player.Player_name , player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = Super Mario World"}, {"question_id": 1951, "answer_sql": "SELECT DISTINCT Developers FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = Auburn"}, {"question_id": 1952, "answer_sql": "SELECT DISTINCT Developers FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = Auburn"}, {"question_id": 1953, "answer_sql": "SELECT avg(Units_sold_Millions) FROM game_player WHERE Position = Guard"}, {"question_id": 1954, "answer_sql": "SELECT avg(Units_sold_Millions) FROM game_player WHERE Position = Guard"}, {"question_id": 1955, "answer_sql": "SELECT Title , platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID"}, {"question_id": 1956, "answer_sql": "SELECT Title , platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID"}, {"question_id": 1957, "answer_sql": "SELECT Title FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID WHERE platform.Market_district = Asia OR platform.Market_district = USA"}, {"question_id": 1958, "answer_sql": "SELECT Title FROM game WHERE Platform_ID IN (SELECT Platform_ID FROM platform WHERE Market_district = Asia OR Market_district = USA )"}, {"question_id": 1959, "answer_sql": "SELECT Franchise , count(*) FROM game GROUP BY Franchise"}, {"question_id": 1960, "answer_sql": "SELECT Franchise , count(*) FROM game GROUP BY Franchise"}, {"question_id": 1961, "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1962, "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 1963, "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise HAVING count(*) >= 2"}, {"question_id": 1964, "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise HAVING count(*) >= 2"}, {"question_id": 1965, "answer_sql": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)"}, {"question_id": 1966, "answer_sql": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)"}, {"question_id": 1967, "answer_sql": "SELECT game.Title FROM game_player JOIN player ON game_player.Player_ID = player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE player.College = Oklahoma INTERSECT SELECT game.Title FROM game_player JOIN player ON game_player.Player_ID = player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE player.College = Auburn"}, {"question_id": 1968, "answer_sql": "SELECT game.Title FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE player.College = Oklahoma OR player.College = Auburn"}, {"question_id": 1969, "answer_sql": "SELECT DISTINCT Franchise FROM game"}, {"question_id": 1970, "answer_sql": "SELECT DISTINCT Franchise FROM game"}, {"question_id": 1971, "answer_sql": "SELECT Title FROM game WHERE Game_ID NOT IN (SELECT Game_ID FROM game_player WHERE If_active = 1)"}, {"question_id": 1972, "answer_sql": "SELECT Title FROM game WHERE Game_ID NOT IN (SELECT Game_ID FROM game_player WHERE If_active = 1)"}, {"question_id": 1973, "answer_sql": "SELECT Name FROM press ORDER BY Year_Profits_billion DESC"}, {"question_id": 1974, "answer_sql": "SELECT Name FROM press ORDER BY Year_Profits_billion DESC"}, {"question_id": 1975, "answer_sql": "SELECT Name FROM press WHERE Month_Profits_billion > 15 OR Year_Profits_billion > 1"}, {"question_id": 1976, "answer_sql": "SELECT Name FROM press WHERE Year_Profits_billion > 15 OR Month_Profits_billion > 1"}, {"question_id": 1977, "answer_sql": "SELECT avg(Year_Profits_billion) , max(Year_Profits_billion) FROM press"}, {"question_id": 1978, "answer_sql": "SELECT avg(Year_Profits_billion) , max(Year_Profits_billion) FROM press"}, {"question_id": 1979, "answer_sql": "SELECT Name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1"}, {"question_id": 1980, "answer_sql": "SELECT Name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1"}, {"question_id": 1981, "answer_sql": "SELECT Name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1"}, {"question_id": 1982, "answer_sql": "SELECT Name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1"}, {"question_id": 1983, "answer_sql": "SELECT count(*) FROM author WHERE Age < 30"}, {"question_id": 1984, "answer_sql": "SELECT count(*) FROM author WHERE Age < 30"}, {"question_id": 1985, "answer_sql": "SELECT avg(Age) , Gender FROM author GROUP BY Gender"}, {"question_id": 1986, "answer_sql": "SELECT Gender , avg(Age) FROM author GROUP BY Gender"}, {"question_id": 1987, "answer_sql": "SELECT count(*) , Gender FROM author WHERE Age > 30 GROUP BY Gender"}, {"question_id": 1988, "answer_sql": "SELECT count(*) , Gender FROM author WHERE Age > 30 GROUP BY Gender"}, {"question_id": 1989, "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC"}, {"question_id": 1990, "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC"}, {"question_id": 1991, "answer_sql": "SELECT Book_Series , count(*) FROM book GROUP BY Book_Series"}, {"question_id": 1992, "answer_sql": "SELECT Book_Series , count(*) FROM book GROUP BY Book_Series"}, {"question_id": 1993, "answer_sql": "SELECT Title , Release_date FROM book ORDER BY Sale_Amount DESC LIMIT 5"}, {"question_id": 1994, "answer_sql": "SELECT Title , Release_date FROM book ORDER BY Sale_Amount DESC LIMIT 5"}, {"question_id": 1995, "answer_sql": "SELECT Book_Series FROM book WHERE Sale_Amount > 1000 INTERSECT SELECT Book_Series FROM book WHERE Sale_Amount < 500"}, {"question_id": 1996, "answer_sql": "SELECT Book_Series FROM book WHERE Sale_Amount > 1000 INTERSECT SELECT Book_Series FROM book WHERE Sale_Amount < 500"}, {"question_id": 1997, "answer_sql": "SELECT author.Name FROM book JOIN author ON book.Author_ID = author.Author_ID WHERE book.Book_Series = MM INTERSECT SELECT author.Name FROM book JOIN author ON book.Author_ID = author.Author_ID WHERE book.Book_Series = LT"}, {"question_id": 1998, "answer_sql": "SELECT author.Name FROM book JOIN author ON book.Author_ID = author.Author_ID WHERE book.Book_Series = MM INTERSECT SELECT author.Name FROM book JOIN author ON book.Author_ID = author.Author_ID WHERE book.Book_Series = LT"}, {"question_id": 1999, "answer_sql": "SELECT Name , Age FROM author WHERE Author_ID NOT IN (SELECT Author_ID FROM book)"}, {"question_id": 2000, "answer_sql": "SELECT Name FROM author WHERE Author_ID NOT IN (SELECT Author_ID FROM book)"}, {"question_id": 2001, "answer_sql": "SELECT author.Name FROM author JOIN book ON author.Author_ID = book.Author_ID GROUP BY book.Author_ID HAVING count(*) > 1"}, {"question_id": 2002, "answer_sql": "SELECT author.Name FROM book JOIN author ON book.Author_ID = author.Author_ID GROUP BY book.Author_ID HAVING count(*) > 1"}, {"question_id": 2003, "answer_sql": "SELECT book.Title , author.Name , press.Name FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID ORDER BY book.Sale_Amount DESC LIMIT 3"}, {"question_id": 2004, "answer_sql": "SELECT book.Title , author.Name , press.Name FROM book JOIN author ON book.Author_ID = author.Author_ID JOIN press ON book.Press_ID = press.Press_ID ORDER BY book.Sale_Amount DESC LIMIT 3"}, {"question_id": 2005, "answer_sql": "SELECT Press.Name , sum(book.Sale_Amount) FROM book JOIN press ON book.Press_ID = press.Press_ID GROUP BY book.Press_ID"}, {"question_id": 2006, "answer_sql": "SELECT Press.Name , sum(book.Sale_Amount) FROM book JOIN press ON book.Press_ID = press.Press_ID GROUP BY book.Press_ID"}, {"question_id": 2007, "answer_sql": "SELECT Press.Name , count(*) FROM book JOIN press ON book.Press_ID = press.Press_ID WHERE book.Sale_Amount > 1000 GROUP BY book.Press_ID"}, {"question_id": 2008, "answer_sql": "SELECT press.Name , count(*) FROM book JOIN press ON book.Press_ID = press.Press_ID WHERE book.Sale_Amount > 1000 GROUP BY book.Press_ID"}, {"question_id": 2009, "answer_sql": "SELECT author.Name FROM book JOIN author ON book.Author_ID = author.Author_ID ORDER BY book.Sale_Amount DESC LIMIT 1"}, {"question_id": 2010, "answer_sql": "SELECT author.Name FROM book JOIN author ON book.Author_ID = author.Author_ID GROUP BY book.Author_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2011, "answer_sql": "SELECT author.Name , author.Gender FROM author JOIN book ON author.Author_ID = book.Author_ID GROUP BY book.Author_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2012, "answer_sql": "SELECT author.Name , author.Gender FROM author JOIN book ON author.Author_ID = book.Author_ID GROUP BY author.Author_ID ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2013, "answer_sql": "SELECT Name FROM author WHERE Author_ID NOT IN (SELECT Author_ID FROM book WHERE Press_ID = (SELECT Press_ID FROM press WHERE Name = Accor ));"}, {"question_id": 2014, "answer_sql": "SELECT Name FROM author WHERE Author_ID NOT IN (SELECT Author_ID FROM book WHERE Press_ID = (SELECT Press_ID FROM press WHERE Name = Accor ));"}, {"question_id": 2015, "answer_sql": "SELECT press.Name , press.Year_Profits_billion FROM book JOIN press ON book.Press_ID = press.Press_ID GROUP BY book.Press_ID HAVING count(*) > 2"}, {"question_id": 2016, "answer_sql": "SELECT Press.Name , Press.Year_Profits_billion FROM book JOIN press ON book.Press_ID = press.Press_ID GROUP BY book.Press_ID HAVING count(*) > 2"}, {"question_id": 2017, "answer_sql": "SELECT count(*) FROM Authors"}, {"question_id": 2018, "answer_sql": "SELECT author_name FROM Authors"}, {"question_id": 2019, "answer_sql": "SELECT author_name , other_details FROM Authors"}, {"question_id": 2020, "answer_sql": "SELECT other_details FROM Authors WHERE author_name = Addison Denesik ;"}, {"question_id": 2021, "answer_sql": "SELECT count(*) FROM Documents"}, {"question_id": 2022, "answer_sql": "SELECT author_name FROM Documents WHERE document_id = 4"}, {"question_id": 2023, "answer_sql": "SELECT author_name FROM Documents WHERE document_name = Travel to Brazil ;"}, {"question_id": 2024, "answer_sql": "SELECT count(*) FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE author_name = Era Kerluke ;"}, {"question_id": 2025, "answer_sql": "SELECT document_name , document_description FROM Documents"}, {"question_id": 2026, "answer_sql": "SELECT document_id , document_name FROM Documents WHERE author_name = Bianka Cummings"}, {"question_id": 2027, "answer_sql": "SELECT author_name , other_details FROM Documents WHERE document_name = Travel to China"}, {"question_id": 2028, "answer_sql": "SELECT author_name , count(*) FROM Documents GROUP BY author_name"}, {"question_id": 2029, "answer_sql": "SELECT author_name FROM Documents GROUP BY author_name ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2030, "answer_sql": "SELECT author_name FROM Documents GROUP BY author_name HAVING count(*) >= 2"}, {"question_id": 2031, "answer_sql": "SELECT count(*) FROM Business_Processes"}, {"question_id": 2032, "answer_sql": "SELECT next_process_id , process_name , process_description FROM Business_Processes WHERE process_id = 9"}, {"question_id": 2033, "answer_sql": "SELECT process_name FROM Business_Processes WHERE process_id = 9"}, {"question_id": 2034, "answer_sql": "SELECT count(*) FROM Process_Outcomes"}, {"question_id": 2035, "answer_sql": "SELECT process_outcome_code , process_outcome_description FROM Process_Outcomes"}, {"question_id": 2036, "answer_sql": "SELECT process_outcome_description FROM Process_Outcomes"}, {"question_id": 2037, "answer_sql": "SELECT count(*) FROM Process_Status"}, {"question_id": 2038, "answer_sql": "SELECT process_status_code , process_status_description FROM Process_Status"}, {"question_id": 2039, "answer_sql": "SELECT process_status_description FROM Process_Status WHERE process_status_code = ct ;"}, {"question_id": 2040, "answer_sql": "SELECT count(*) FROM Staff"}, {"question_id": 2041, "answer_sql": "SELECT staff_id , staff_details FROM Staff"}, {"question_id": 2042, "answer_sql": "SELECT staff_details FROM Staff WHERE staff_id = 100"}, {"question_id": 2043, "answer_sql": "SELECT count(*) FROM Ref_Staff_Roles"}, {"question_id": 2044, "answer_sql": "SELECT staff_role_code , staff_role_description FROM Ref_Staff_Roles"}, {"question_id": 2045, "answer_sql": "SELECT staff_role_description FROM Ref_Staff_Roles WHERE staff_role_code = HR ;"}, {"question_id": 2046, "answer_sql": "SELECT count(*) FROM Documents_Processes"}, {"question_id": 2047, "answer_sql": "SELECT process_id FROM Documents_Processes"}, {"question_id": 2048, "answer_sql": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_Processes"}, {"question_id": 2049, "answer_sql": "SELECT process_id FROM Business_Processes EXCEPT SELECT process_id FROM Documents_Processes"}, {"question_id": 2050, "answer_sql": "SELECT Process_Outcomes.process_outcome_description , Process_Status.process_status_description FROM Documents_Processes JOIN Process_Outcomes ON Documents_Processes.process_outcome_code = Process_Outcomes.process_outcome_code JOIN Process_Status ON Documents_Processes.process_status_code = Process_Status.process_status_code WHERE document_id = 0"}, {"question_id": 2051, "answer_sql": "SELECT Business_Processes.process_name FROM Business_Processes JOIN Documents_Processes ON Business_Processes.process_id = Documents_Processes.process_id JOIN Documents ON Documents_Processes.document_id = Documents.document_id WHERE Documents.document_name = Travel to Brazil"}, {"question_id": 2052, "answer_sql": "SELECT process_id , count(*) FROM Documents_Processes GROUP BY process_id"}, {"question_id": 2053, "answer_sql": "SELECT count(*) FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9"}, {"question_id": 2054, "answer_sql": "SELECT staff_id , count(*) FROM Staff_in_Processes GROUP BY staff_id"}, {"question_id": 2055, "answer_sql": "SELECT staff_role_code , count(*) FROM Staff_in_Processes GROUP BY staff_role_code"}, {"question_id": 2056, "answer_sql": "SELECT count(DISTINCT staff_role_code) FROM Staff_in_Processes WHERE staff_id = 3"}, {"question_id": 2057, "answer_sql": "SELECT count(*) FROM Agencies"}, {"question_id": 2058, "answer_sql": "SELECT count(*) FROM Agencies"}, {"question_id": 2059, "answer_sql": "SELECT agency_id , agency_details FROM Agencies"}, {"question_id": 2060, "answer_sql": "SELECT agency_id , agency_details FROM Agencies"}, {"question_id": 2061, "answer_sql": "SELECT count(*) FROM Clients"}, {"question_id": 2062, "answer_sql": "SELECT count(*) FROM Clients"}, {"question_id": 2063, "answer_sql": "SELECT client_id , client_details FROM Clients"}, {"question_id": 2064, "answer_sql": "SELECT client_id , client_details FROM Clients"}, {"question_id": 2065, "answer_sql": "SELECT agency_id , count(*) FROM Clients GROUP BY agency_id"}, {"question_id": 2066, "answer_sql": "SELECT agency_id , count(*) FROM Clients GROUP BY agency_id"}, {"question_id": 2067, "answer_sql": "SELECT agency_id , agency_details FROM Clients GROUP BY agency_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2068, "answer_sql": "SELECT agency_id , agency_details FROM Agencies ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2069, "answer_sql": "SELECT agency_id , agency_details FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id GROUP BY agency_id HAVING count(*) >= 2"}, {"question_id": 2070, "answer_sql": "SELECT agency_id , agency_details FROM Agencies GROUP BY agency_id HAVING count(*) >= 2"}, {"question_id": 2071, "answer_sql": "SELECT agency_details FROM Clients WHERE client_details = Mac ;"}, {"question_id": 2072, "answer_sql": "SELECT agency_details FROM Clients WHERE client_details LIKE %Mac%"}, {"question_id": 2073, "answer_sql": "SELECT Clients.client_details , Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id"}, {"question_id": 2074, "answer_sql": "SELECT Clients.client_details , Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id"}, {"question_id": 2075, "answer_sql": "SELECT sic_code , count(*) FROM Clients GROUP BY sic_code"}, {"question_id": 2076, "answer_sql": "SELECT sic_code , count(*) FROM Clients GROUP BY sic_code"}, {"question_id": 2077, "answer_sql": "SELECT client_id , client_details FROM Clients WHERE sic_code = Bad"}, {"question_id": 2078, "answer_sql": "SELECT client_details FROM Clients WHERE sic_code = Bad ;"}, {"question_id": 2079, "answer_sql": "SELECT agency_id , agency_details FROM Agencies WHERE agency_id IN (SELECT agency_id FROM Clients)"}, {"question_id": 2080, "answer_sql": "SELECT agency_id , agency_details FROM Agencies WHERE agency_id IN (SELECT agency_id FROM Clients)"}, {"question_id": 2081, "answer_sql": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients"}, {"question_id": 2082, "answer_sql": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients"}, {"question_id": 2083, "answer_sql": "SELECT count(*) FROM Invoices"}, {"question_id": 2084, "answer_sql": "SELECT count(*) FROM Invoices"}, {"question_id": 2085, "answer_sql": "SELECT invoice_id , invoice_status , invoice_details FROM Invoices"}, {"question_id": 2086, "answer_sql": "SELECT invoice_id , invoice_status , invoice_details FROM Invoices"}, {"question_id": 2087, "answer_sql": "SELECT client_id , count(*) FROM Invoices GROUP BY client_id"}, {"question_id": 2088, "answer_sql": "SELECT client_id , count(*) FROM Invoices GROUP BY client_id"}, {"question_id": 2089, "answer_sql": "SELECT client_id , client_details FROM Invoices GROUP BY client_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2090, "answer_sql": "SELECT client_id , client_details FROM Clients ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2091, "answer_sql": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*) >= 2"}, {"question_id": 2092, "answer_sql": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*) >= 2"}, {"question_id": 2093, "answer_sql": "SELECT invoice_status , count(*) FROM Invoices GROUP BY invoice_status"}, {"question_id": 2094, "answer_sql": "SELECT invoice_status , count(*) FROM Invoices GROUP BY invoice_status"}, {"question_id": 2095, "answer_sql": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2096, "answer_sql": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2097, "answer_sql": "SELECT invoice_status , invoice_details , Clients.client_id , Clients.client_details , Agencies.agency_id , Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id JOIN Invoices ON Clients.client_id = Invoices.client_id"}, {"question_id": 2098, "answer_sql": "SELECT invoice_status , invoice_details , Clients.client_id , Clients.client_details , Agencies.agency_id , Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id JOIN Invoices ON Clients.client_id = Invoices.client_id"}, {"question_id": 2099, "answer_sql": "SELECT meeting_type , other_details FROM Meetings"}, {"question_id": 2100, "answer_sql": "SELECT meeting_type , other_details FROM Meetings"}, {"question_id": 2101, "answer_sql": "SELECT meeting_outcome , purpose_of_meeting FROM Meetings"}, {"question_id": 2102, "answer_sql": "SELECT meeting_outcome , purpose_of_meeting FROM Meetings"}, {"question_id": 2103, "answer_sql": "SELECT payment_id , payment_details FROM Payments WHERE invoice_id IN (SELECT invoice_id FROM Invoices WHERE invoice_status = 'Working')"}, {"question_id": 2104, "answer_sql": "SELECT payment_id , payment_details FROM Invoices WHERE invoice_status = Working"}, {"question_id": 2105, "answer_sql": "SELECT invoice_id , invoice_status FROM Invoices WHERE invoice_id NOT IN (SELECT invoice_id FROM Payments)"}, {"question_id": 2106, "answer_sql": "SELECT invoice_id , invoice_status FROM Invoices WHERE invoice_id NOT IN (SELECT invoice_id FROM Payments)"}, {"question_id": 2107, "answer_sql": "SELECT count(*) FROM Payments"}, {"question_id": 2108, "answer_sql": "SELECT count(*) FROM Payments"}, {"question_id": 2109, "answer_sql": "SELECT payment_id , invoice_id , payment_details FROM Payments"}, {"question_id": 2110, "answer_sql": "SELECT payment_id , invoice_id , payment_details FROM Payments"}, {"question_id": 2111, "answer_sql": "SELECT invoice_id , invoice_status FROM Payments"}, {"question_id": 2112, "answer_sql": "SELECT DISTINCT invoice_id , invoice_status FROM Payments"}, {"question_id": 2113, "answer_sql": "SELECT invoice_id , count(*) FROM Payments GROUP BY invoice_id"}, {"question_id": 2114, "answer_sql": "SELECT invoice_id , count(*) FROM Payments GROUP BY invoice_id"}, {"question_id": 2115, "answer_sql": "SELECT invoice_id , invoice_status , invoice_details FROM Invoices ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2116, "answer_sql": "SELECT invoice_id , invoice_status , invoice_details FROM Invoices ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2117, "answer_sql": "SELECT count(*) FROM Staff"}, {"question_id": 2118, "answer_sql": "SELECT count(*) FROM Staff"}, {"question_id": 2119, "answer_sql": "SELECT agency_id , count(*) FROM Staff GROUP BY agency_id"}, {"question_id": 2120, "answer_sql": "SELECT agency_id , count(*) FROM Staff GROUP BY agency_id"}, {"question_id": 2121, "answer_sql": "SELECT staff_id , agency_details FROM Staff GROUP BY staff_id ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2122, "answer_sql": "SELECT agency_id , agency_details FROM Agencies ORDER BY count(*) DESC LIMIT 1"}, {"question_id": 2123, "answer_sql": "SELECT meeting_outcome , count(*) FROM Meetings GROUP BY meeting_outcome"}, {"question_id": 2124, "answer_sql": "SELECT meeting_outcome , count(*) FROM Meetings GROUP BY meeting_outcome"}, {"question_id": 2125, "answer_sql": "SELECT client_id , count(*) FROM Meetings GROUP BY client_id"}, {"question_id": 2126, "answer_sql": "SELECT client_id , count(*) FROM Meetings GROUP BY client_id"}, {"question_id": 2127, "answer_sql": "SELECT meeting_type , count(*) FROM Meetings GROUP BY meeting_type"}, {"question_id": 2128, "answer_sql": "SELECT meeting_type , count(*) FROM Meetings GROUP BY meeting_type"}, {"question_id": 2129, "answer_sql": "SELECT meeting_id , meeting_outcome , meeting_type , other_details FROM Meetings JOIN Clients ON Meetings.client_id = Clients.client_id"}, {"question_id": 2130, "answer_sql": "SELECT meeting_id , meeting_outcome , meeting_type , client_details FROM Meetings"}, {"question_id": 2131, "answer_sql": "SELECT meeting_id , count(*) FROM Staff_in_Meetings GROUP BY meeting_id"}, {"question_id": 2132, "answer_sql": "SELECT meeting_id , count(*) FROM Staff_in_Meetings GROUP BY meeting_id"}, {"question_id": 2133, "answer_sql": "SELECT staff_id , count(*) FROM Staff_in_Meetings GROUP BY staff_id ORDER BY count(*) LIMIT 1"}, {"question_id": 2134, "answer_sql": "SELECT staff_id FROM Staff_in_Meetings GROUP BY staff_id ORDER BY count(*) LIMIT 1"}, {"question_id": 2135, "answer_sql": "SELECT count(*) FROM Staff_in_Meetings"}, {"question_id": 2136, "answer_sql": "SELECT count(DISTINCT staff_id) FROM Staff_in_Meetings"}, {"question_id": 2137, "answer_sql": "SELECT count(*) FROM Staff WHERE staff_id NOT IN (SELECT staff_id FROM Staff_in_Meetings)"}, {"question_id": 2138, "answer_sql": "SELECT count(*) FROM Staff WHERE staff_id NOT IN (SELECT staff_id FROM Staff_in_Meetings)"}, {"question_id": 2139, "answer_sql": "SELECT Clients.client_id , Clients.client_details FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Invoices ON Meetings.client_id = Invoices.client_id"}, {"question_id": 2140, "answer_sql": "SELECT Clients.client_id , Clients.client_details FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Invoices ON Meetings.client_id = Invoices.client_id"}, {"question_id": 2141, "answer_sql": "SELECT staff_id , staff_details FROM Staff WHERE staff_id IN (SELECT staff_id FROM Staff_in_Meetings GROUP BY staff_id HAVING count(*) >= 1) INTERSECT SELECT staff_id , staff_details FROM Staff WHERE staff_details LIKE %s%"}, {"question_id": 2142, "answer_sql": "SELECT staff_id , staff_details FROM Staff WHERE staff_id IN (SELECT staff_id FROM Staff_in_Meetings) INTERSECT SELECT staff_id , staff_details FROM Staff WHERE staff_details LIKE %s%"}, {"question_id": 2143, "answer_sql": "SELECT Clients.client_id , Clients.sic_code , Clients.agency_id FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Invoices ON Meetings.meeting_id = Invoices.invoice_id GROUP BY Clients.client_id HAVING count(*) = 1"}, {"question_id": 2144, "answer_sql": "SELECT Clients.client_id , Clients.sic_code , Clients.agency_id FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Invoices ON Meetings.meeting_id = Invoices.invoice_id GROUP BY Clients.client_id HAVING count(*) = 1"}, {"question_id": 2145, "answer_sql": "SELECT start_date_time , end_date_time , Clients.client_details , Staff.staff_details FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id"}, {"question_id": 2146, "answer_sql": "SELECT Meetings.start_date_time , Meetings.end_date_time , Clients.client_details , Staff.staff_details FROM Meetings JOIN Clients ON Meetings.client_id = Clients.client_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id"}]