[{"question_id": 0, "answer_sql": "SELECT COUNT(*) FROM club;"}, {"question_id": 1, "answer_sql": "SELECT COUNT(*) FROM club;"}, {"question_id": 2, "answer_sql": "SELECT Name FROM club ORDER BY Name ASC;"}, {"question_id": 3, "answer_sql": "SELECT Name FROM club ORDER BY Name;"}, {"question_id": 4, "answer_sql": "SELECT Manager , Captain FROM club ;"}, {"question_id": 5, "answer_sql": "SELECT Manager , Captain FROM club ;"}, {"question_id": 6, "answer_sql": "SELECT Name FROM club WHERE Manufacturer != 'Nike';"}, {"question_id": 7, "answer_sql": "SELECT club.Name FROM club WHERE club.Manufacturer != 'Nike';"}, {"question_id": 8, "answer_sql": "SELECT Name FROM player ORDER BY Wins_count ASC;"}, {"question_id": 9, "answer_sql": "SELECT p.Name FROM player p ORDER BY p.Wins_count ASC;"}, {"question_id": 10, "answer_sql": "SELECT p.Name FROM player p WHERE p.Earnings = (SELECT MAX(Earnings) FROM player)"}, {"question_id": 11, "answer_sql": "SELECT player.Name FROM player WHERE player.Earnings = (SELECT MAX(player.Earnings) FROM player);"}, {"question_id": 12, "answer_sql": "SELECT DISTINCT Country FROM player WHERE Earnings > 1200000;"}, {"question_id": 13, "answer_sql": "SELECT player.Country FROM player WHERE player.Earnings > 1200000;"}, {"question_id": 14, "answer_sql": "SELECT player.Country FROM player WHERE player.Earnings = (SELECT MAX(player2.Earnings) FROM player AS player2 WHERE player2.Wins_count > 2) AND player.Wins_count > 2;"}, {"question_id": 15, "answer_sql": "SELECT player.Country FROM player WHERE player.Wins_count > 2 ORDER BY player.Earnings DESC LIMIT 1;"}, {"question_id": 16, "answer_sql": "SELECT p.Name AS Player_Name, c.Name AS Club_Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID;"}, {"question_id": 17, "answer_sql": "SELECT p.Name, c.Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID;"}, {"question_id": 18, "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2"}, {"question_id": 19, "answer_sql": "SELECT c.Name FROM club c JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Wins_count > 2 GROUP BY c.Name HAVING COUNT(DISTINCT p.Player_ID) = COUNT(p.Player_ID);"}, {"question_id": 20, "answer_sql": "SELECT player.Name FROM player JOIN club ON player.Club_ID = club.Club_ID WHERE club.Manager = 'Sam Allardyce';"}, {"question_id": 21, "answer_sql": "SELECT player . Name FROM player JOIN club ON player . Club_ID = club . Club_ID WHERE club . Manager = 'Sam Allardyce';"}, {"question_id": 22, "answer_sql": "SELECT Name FROM club JOIN player ON club.Club_ID = player.Club_ID GROUP BY Name ORDER BY AVG(player.Earnings) DESC;"}, {"question_id": 23, "answer_sql": "SELECT c.Name, AVG(p.Earnings) as Average_Earnings FROM club c JOIN player p ON c.Club_ID = p.Club_ID GROUP BY c.Name ORDER BY Average_Earnings DESC;"}, {"question_id": 24, "answer_sql": "SELECT Manufacturer, COUNT(Club_ID) as Number_of_Clubs FROM club GROUP BY Manufacturer;"}, {"question_id": 25, "answer_sql": "SELECT Manufacturer, COUNT(Club_ID) FROM club GROUP BY Manufacturer;"}, {"question_id": 26, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 27, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 28, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(Club_ID) > 1;"}, {"question_id": 29, "answer_sql": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(Club_ID) > 1;"}, {"question_id": 30, "answer_sql": "SELECT p.Country FROM player p GROUP BY p.Country HAVING COUNT(p.Player_ID) > 1;"}, {"question_id": 31, "answer_sql": "SELECT p.Country FROM player p GROUP BY p.Country HAVING COUNT(p.Player_ID) > 1;"}, {"question_id": 32, "answer_sql": "SELECT c.Name FROM club c LEFT JOIN player p ON c.Club_ID = p.Club_ID WHERE p.Club_ID IS NULL;"}, {"question_id": 33, "answer_sql": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player);"}, {"question_id": 34, "answer_sql": "SELECT player.Country FROM player WHERE player.Earnings > 1400000 AND player.Earnings < 1100000;"}, {"question_id": 35, "answer_sql": "SELECT DISTINCT p.Country FROM player p WHERE p.Earnings BETWEEN 1400000 AND 1100000;"}, {"question_id": 36, "answer_sql": "SELECT COUNT(DISTINCT Country ) FROM player ;"}, {"question_id": 37, "answer_sql": "SELECT COUNT(DISTINCT Country ) FROM player ;"}, {"question_id": 38, "answer_sql": "SELECT Player. Earnings FROM player WHERE Player. Country IN ('Australia', 'Zimbabwe');"}, {"question_id": 39, "answer_sql": "SELECT p. Earnings FROM player p WHERE p. Country IN ('Australia', 'Zimbabwe');"}, {"question_id": 40, "answer_sql": "SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM Customers c JOIN ( SELECT o.customer_id FROM Orders o GROUP BY o.customer_id HAVING COUNT(o.order_id) > 2 ) o ON c.customer_id = o.customer_id JOIN ( SELECT oi.order_id FROM Order_Items oi GROUP BY oi.order_id HAVING COUNT(oi.order_item_id) >= 3 ) oi ON c.customer_id = oi.order_id"}, {"question_id": 41, "answer_sql": "SELECT Customers.customer_id, Customers.customer_first_name, Customers.customer_last_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id WHERE Orders.order_status_code = 'ordered' GROUP BY Customers.customer_id HAVING COUNT(Order_Items.order_item_id) >= 3 ORDER BY COUNT(Order_Items.order_item_id) DESC;"}, {"question_id": 42, "answer_sql": "SELECT Orders.order_id, Orders.order_status_code, COUNT(Order_Items.product_id) as product_count FROM Orders LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.order_status_code;"}, {"question_id": 43, "answer_sql": "SELECT Orders.order_id, Orders.order_status_code, COUNT(Order_Items.product_id) as product_count FROM Orders LEFT JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.order_status_code;"}, {"question_id": 44, "answer_sql": "SELECT date_order_placed FROM Orders WHERE order_status_code = 'Placed' AND (SELECT COUNT(*) FROM Order_Items WHERE Order_Items.order_id = Orders.order_id) > 1 ORDER BY date_order_placed ASC;"}, {"question_id": 45, "answer_sql": "SELECT MIN(date_order_placed) as earliest_order, COUNT(*) as num_orders_more_than_one_item FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id HAVING COUNT(*) > 1;"}, {"question_id": 46, "answer_sql": "SELECT `customer_first_name`, `customer_middle_initial`, `customer_last_name` FROM `Customers` WHERE `customer_id` NOT IN (SELECT `customer_id` FROM `Orders`);"}, {"question_id": 47, "answer_sql": "SELECT `customer_first_name`, `customer_last_name`, `customer_middle_initial` FROM `Customers` WHERE `customer_id` NOT IN ( SELECT `customer_id` FROM `Orders` )"}, {"question_id": 48, "answer_sql": "SELECT product_id, product_name, product_price, product_color FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(DISTINCT order_id) < 2 )"}, {"question_id": 49, "answer_sql": "SELECT product_id, product_name, product_price, product_color FROM Products WHERE product_id IN ( SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(DISTINCT order_id) < 2 )"}, {"question_id": 50, "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed HAVING COUNT(Products.product_id) >= 2;"}, {"question_id": 51, "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed HAVING COUNT(Products.product_id) >= 2;"}, {"question_id": 52, "answer_sql": "SELECT Products.product_id, Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id WHERE Orders.order_status_code = 'COMPLETED' GROUP BY Products.product_id, Products.product_name, Products.product_price ORDER BY COUNT(*) DESC;"}, {"question_id": 53, "answer_sql": "SELECT p.product_id, p.product_name, p.product_price FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id JOIN Orders o ON oi.order_id = o.order_id WHERE o.order_status_code = 'ordered' GROUP BY p.product_id, p.product_name, p.product_price ORDER BY COUNT(oi.order_item_id) DESC;"}, {"question_id": 54, "answer_sql": "SELECT Orders.order_id, SUM(Products.product_price) as total_price FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id ORDER BY total_price ASC LIMIT 1;"}, {"question_id": 55, "answer_sql": "SELECT o.order_id, o.customer_id, SUM(p.product_price) as total_cost FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Product_Items pi ON oi.product_id = pi.product_id JOIN Products p ON pi.product_id = p.product_id GROUP BY o.order_id, o.customer_id ORDER BY total_cost ASC LIMIT 1;"}, {"question_id": 56, "answer_sql": "SELECT `payment_method_code`, COUNT(`payment_method_code`) as 'Number of Payments' FROM `Customer_Payment_Methods` GROUP BY `payment_method_code` ORDER BY 'Number of Payments' DESC LIMIT 1;"}, {"question_id": 57, "answer_sql": "SELECT `payment_method_code` FROM `Customer_Payment_Methods` WHERE `customer_id` IN ( SELECT `customer_id` FROM `Customers` ORDER BY `customer_id` LIMIT 1 )"}, {"question_id": 58, "answer_sql": "SELECT gender_code, COUNT(product_id) as number_of_products FROM Customers GROUP BY gender_code;"}, {"question_id": 59, "answer_sql": "SELECT c.gender_code, COUNT(p.product_id) as product_count FROM Customers c JOIN Order_Items oi ON c.customer_id = oi.order_id JOIN Orders o ON oi.order_id = o.order_id JOIN Product_Items pi ON oi.order_item_id = pi.order_item_id JOIN Products p ON pi.product_id = p.product_id GROUP BY c.gender_code;"}, {"question_id": 60, "answer_sql": "SELECT gender_code, COUNT(customer_id) as number_of_orders FROM Customers GROUP BY gender_code;"}, {"question_id": 61, "answer_sql": "SELECT gender_code, COUNT(customer_id) as number_of_orders FROM Customers GROUP BY gender_code;"}, {"question_id": 62, "answer_sql": "SELECT `customer_first_name`, `customer_middle_initial`, `customer_last_name`, `payment_method_code` FROM `Customers` JOIN `Customer_Payment_Methods` ON `Customers`.`customer_id` = `Customer_Payment_Methods`.`customer_id`;"}, {"question_id": 63, "answer_sql": "SELECT `customer_first_name`, `customer_middle_initial`, `customer_last_name`, `payment_method_code` FROM `Customers`;"}, {"question_id": 64, "answer_sql": "SELECT Invoices.invoice_status_code, Invoices.invoice_date, Shipments.shipment_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;"}, {"question_id": 65, "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Shipments.shipment_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;"}, {"question_id": 66, "answer_sql": "SELECT Products.product_name, Shipments.shipment_date FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id ORDER BY Products.product_name;"}, {"question_id": 67, "answer_sql": "SELECT Products.product_name, Shipments.shipment_date FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id GROUP BY Products.product_name, Shipments.shipment_date;"}, {"question_id": 68, "answer_sql": "SELECT `Orders`.`order_status_code`, `Shipments`.`shipment_tracking_number` FROM `Orders` JOIN `Shipment_Items` ON `Orders`.`order_id` = `Shipment_Items`.`order_id` JOIN `Shipments` ON `Shipment_Items`.`shipment_id` = `Shipments`.`shipment_id` WHERE `Orders`.`order_status_code` = 'ORDER_STATUS_CODE_HINT' AND `Shipments`.`shipment_tracking_number` = 'SHIPMENT_TRACKING_NUMBER_HINT';"}, {"question_id": 69, "answer_sql": "SELECT Orders.order_status_code, Orders.date_order_placed, Shipments.shipment_tracking_number FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE Orders.order_status_code = 'Ordered' AND Shipments.shipment_date IS NOT NULL;"}, {"question_id": 70, "answer_sql": "SELECT Products.product_name, Customers.customer_first_name, Customers.customer_color FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Shipments.shipment_date IS NOT NULL;"}, {"question_id": 71, "answer_sql": "SELECT Products.product_name, Products.product_color FROM Products JOIN Shipment_Items ON Products.product_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE Shipments.shipment_date IS NOT NULL;"}, {"question_id": 72, "answer_sql": "SELECT Products.product_name, Products.product_price, Products.product_description FROM Products JOIN Orders ON Products.parent_product_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Customers.gender_code = 'F' GROUP BY Products.product_name, Products.product_price, Products.product_description;"}, {"question_id": 73, "answer_sql": "SELECT Products.product_name, Products.product_price, Products.product_description FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Customers.gender_code = 'F'"}, {"question_id": 74, "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_status_code, Orders.order_status_code FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id JOIN Invoices ON Shipments.invoice_number = Invoices.invoice_number WHERE Orders.order_status_code != 'Shipped'"}, {"question_id": 75, "answer_sql": "SELECT Invoice_status_code FROM Orders WHERE order_status_code = 'Ordered' AND order_id NOT IN (SELECT order_id FROM Shipments);"}, {"question_id": 76, "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed, SUM(Order_Items.order_item_status_code * Products.product_price) as total_cost FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Order_Items ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed;"}, {"question_id": 77, "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed, SUM(Order_Items.order_item_status_code * Products.product_price) as total_amount_paid FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed"}, {"question_id": 78, "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id IN (SELECT customer_id FROM Orders);"}, {"question_id": 79, "answer_sql": "SELECT COUNT(DISTINCT Orders.customer_id) as Number_of_Different_Customers_Who_Ordered_Things FROM Orders;"}, {"question_id": 80, "answer_sql": "SELECT COUNT(DISTINCT `order_item_status_code`) as 'Number of Item States' FROM `Orders`;"}, {"question_id": 81, "answer_sql": "SELECT COUNT(DISTINCT `order_item_status_code`) FROM `Order_Items`;"}, {"question_id": 82, "answer_sql": "SELECT COUNT(DISTINCT `payment_method_code`) FROM `Customer_Payment_Methods`;"}, {"question_id": 83, "answer_sql": "SELECT COUNT(DISTINCT `payment_method_code`) FROM `Customer_Payment_Methods`;"}, {"question_id": 84, "answer_sql": "SELECT `login_name`, `login_password` FROM `Customers` WHERE `phone_number` LIKE '+12%';"}, {"question_id": 85, "answer_sql": "SELECT `login_name`, `login_password` FROM `Customers` WHERE `phone_number` LIKE '+12%';"}, {"question_id": 86, "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%';"}, {"question_id": 87, "answer_sql": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%';"}, {"question_id": 88, "answer_sql": "SELECT product_price, product_size FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products)"}, {"question_id": 89, "answer_sql": "SELECT product_name, product_price, product_size FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products) AND product_price > 0;"}, {"question_id": 90, "answer_sql": "SELECT COUNT(*) FROM Products LEFT JOIN (SELECT product_id FROM Order_Items WHERE order_item_id NOT IN (SELECT order_item_id FROM Shipment_Items)) AS temp ON temp.product_id = Products.product_id WHERE temp.product_id IS NULL;"}, {"question_id": 91, "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_id NOT IN (SELECT product_id FROM Order_Items);"}, {"question_id": 92, "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payment_Methods);"}, {"question_id": 93, "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Payment_Methods);"}, {"question_id": 94, "answer_sql": "SELECT Orders.order_id, Orders.date_order_placed, Orders.customer_id, Customers.customer_first_name, Customers.customer_last_name FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id;"}, {"question_id": 95, "answer_sql": "SELECT Orders.order_status_code, Orders.date_order_placed FROM Orders"}, {"question_id": 96, "answer_sql": "SELECT `address_line_1`, `town_city`, `county` FROM `Customers` WHERE `country` = 'USA';"}, {"question_id": 97, "answer_sql": "SELECT `address_line_1`, `town_city`, `county` FROM `Customers` WHERE `country` = 'United States';"}, {"question_id": 98, "answer_sql": "SELECT `customer_first_name`, `product_name` FROM `Customers` JOIN `Order_Items` ON `Customers`.`customer_id` = `Order_Items`.`customer_id` JOIN `Products` ON `Order_Items`.`product_id` = `Products`.`product_id`;"}, {"question_id": 99, "answer_sql": "SELECT c.customer_first_name, p.product_name FROM Customers c JOIN Order_Items oi ON c.customer_id = oi.order_id JOIN Orders o ON oi.order_id = o.order_id JOIN Products p ON oi.product_id = p.product_id WHERE c.gender_code = 'M' GROUP BY c.customer_first_name, p.product_name ORDER BY c.customer_first_name, p.product_name;"}, {"question_id": 100, "answer_sql": "SELECT COUNT(*) FROM Shipments;"}, {"question_id": 101, "answer_sql": "SELECT COUNT(*) FROM Orders JOIN Shipments ON Orders.order_id = Shipments.order_id;"}, {"question_id": 102, "answer_sql": "SELECT AVG(product_price) as 'Product Average Price' FROM Products;"}, {"question_id": 103, "answer_sql": "SELECT AVG(product_price) FROM Products;"}, {"question_id": 104, "answer_sql": "SELECT AVG(product_price) as Average_Price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id"}, {"question_id": 105, "answer_sql": "SELECT AVG(product_price) as Average_Price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id"}, {"question_id": 106, "answer_sql": "SELECT Customers.email_address, Customers.town_city, Customers.county FROM Customers WHERE Customers.gender_code IN (SELECT MIN(gender_code) FROM Customers GROUP BY gender_code)"}, {"question_id": 107, "answer_sql": "SELECT Customers.email_address, Customers.town_city, Customers.county FROM Customers JOIN (SELECT customer_id, COUNT(*) as order_frequency FROM Orders GROUP BY customer_id ORDER BY order_frequency ASC LIMIT 1) as orders_table ON Customers.customer_id = orders_table.customer_id WHERE Customers.gender_code = 'F'"}, {"question_id": 108, "answer_sql": "SELECT Orders.date_order_placed FROM Orders JOIN Customer_Payment_Methods ON Orders.customer_id = Customer_Payment_Methods.customer_id GROUP BY Orders.date_order_placed HAVING COUNT(Customer_Payment_Methods.payment_method_code) >= 2;"}, {"question_id": 109, "answer_sql": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT customer_id FROM Customer_Payment_Methods GROUP BY customer_id HAVING COUNT(payment_method_code) >= 2 )"}, {"question_id": 110, "answer_sql": "SELECT `order_status_code` FROM `Orders` WHERE `order_status_code` NOT IN (SELECT `order_status_code` FROM `Orders`)"}, {"question_id": 111, "answer_sql": "SELECT o.order_status_code, COUNT(*) as count FROM Orders o JOIN Order_Items oi ON o.order_id = oi.order_id GROUP BY o.order_status_code ORDER BY count ASC LIMIT 1;"}, {"question_id": 112, "answer_sql": "SELECT Products.product_id, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id GROUP BY Products.product_id, Products.product_name HAVING COUNT(Order_Items.order_item_id) > 3;"}, {"question_id": 113, "answer_sql": "SELECT product_id, product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id GROUP BY Products.product_id, Products.product_name HAVING COUNT(DISTINCT Orders.order_id) > 3;"}, {"question_id": 114, "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number GROUP BY Invoices.invoice_number, Invoices.invoice_date HAVING COUNT(Shipments.shipment_id) >= 2;"}, {"question_id": 115, "answer_sql": "SELECT Invoices.invoice_number, Invoices.invoice_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number GROUP BY Invoices.invoice_number, Invoices.invoice_date HAVING COUNT(Shipments.shipment_id) >= 2;"}, {"question_id": 116, "answer_sql": "SELECT `Shipments`.`shipment_tracking_number`, `Shipments`.`shipment_date` FROM `Shipments`;"}, {"question_id": 117, "answer_sql": "SELECT `shipment_tracking_number`, `shipment_date` FROM `Shipments`"}, {"question_id": 118, "answer_sql": "SELECT product_color, product_description, product_size FROM Products WHERE product_price < (SELECT MAX(product_price) FROM Products);"}, {"question_id": 119, "answer_sql": "SELECT product_color, product_description, product_size FROM Products WHERE product_price < (SELECT MAX(product_price) FROM Products);"}, {"question_id": 120, "answer_sql": "SELECT d.Name FROM director d WHERE d.Age > (SELECT AVG(director.Age) FROM director JOIN director_admin ON director.Director_ID = director_admin.Director_ID WHERE director_admin.Is_first_director = True)"}, {"question_id": 121, "answer_sql": "SELECT d.Name FROM director d WHERE d.Age = (SELECT MIN(Age) FROM director);"}, {"question_id": 122, "answer_sql": "SELECT COUNT(*) FROM channel WHERE Internet LIKE '%bbc%';"}, {"question_id": 123, "answer_sql": "SELECT COUNT(DISTINCT Digital_terrestrial_channel ) FROM channel ;"}, {"question_id": 124, "answer_sql": "SELECT Title, Start_Year FROM program JOIN director_admin ON program.Director_ID = director_admin.Director_ID JOIN channel ON program.Channel_ID = channel.Channel_ID ORDER BY Start_Year DESC;"}, {"question_id": 125, "answer_sql": "SELECT d.Name, COUNT(p.Program_ID) as Total_Programs FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID JOIN program p ON da.Channel_ID = p.Channel_ID GROUP BY d.Name ORDER BY Total_Programs DESC LIMIT 1;"}, {"question_id": 126, "answer_sql": "SELECT d.Name, d.Age FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID GROUP BY d.Director_ID ORDER BY COUNT(p.Program_ID) DESC LIMIT 1;"}, {"question_id": 127, "answer_sql": "SELECT p.Title FROM program p WHERE p.Start_Year = (SELECT MAX(Start_Year) FROM program) This SQL query will return the title of the program that began most recently. The query first finds the maximum start year in the program table, and then selects the program with that year."}, {"question_id": 128, "answer_sql": "SELECT c.Name, c.Analogue_terrestrial_channel, c.Digital_terrestrial_channel, c.Internet FROM channel c JOIN program p ON c.Channel_ID = p.Channel_ID GROUP BY c.Channel_ID HAVING COUNT(p.Program_ID) > 1;"}, {"question_id": 129, "answer_sql": "SELECT c.Name, COUNT(p.Program_ID) as Number_of_Programs FROM channel c JOIN program p ON c.Channel_ID = p.Channel_ID GROUP BY c.Name;"}, {"question_id": 130, "answer_sql": "SELECT COUNT(*) FROM channel c LEFT JOIN program p ON c.Channel_ID = p.Channel_ID WHERE p.Program_ID IS NULL;"}, {"question_id": 131, "answer_sql": "SELECT d.Name FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID WHERE da.Channel_ID IN (SELECT Channel_ID FROM program WHERE Title = 'Dracula');"}, {"question_id": 132, "answer_sql": "SELECT c.Name AS Channel_Name, c.Internet AS Channel_Internet FROM channel c JOIN (SELECT d.Name AS Director_Name, d.Age AS Director_Age, COUNT(da.Director_ID) AS Number_of_Directors FROM director d JOIN director_admin da ON d.Director_ID = da.Director_ID GROUP BY d.Director_ID, d.Name, d.Age ORDER BY Number_of_Directors DESC LIMIT 1) AS Most_Directed ON c.Channel_ID = Most_Directed.Channel_ID ```"}, {"question_id": 133, "answer_sql": "SELECT d.Name FROM director d WHERE d.Age BETWEEN 30 AND 60;"}, {"question_id": 134, "answer_sql": "SELECT c.Name FROM channel c JOIN director d ON c.Channel_ID = d.Director_ID JOIN director_admin da ON c.Channel_ID = da.Channel_ID AND d.Director_ID = da.Director_ID WHERE d.Age < 40 AND da.Is_first_director = True AND d.Age > 60;"}, {"question_id": 135, "answer_sql": "SELECT Channel_ID , Name FROM channel WHERE Channel_ID NOT IN ( SELECT Channel_ID FROM director_admin WHERE Director_ID IN ( SELECT Director_ID FROM director WHERE Name = 'Hank Baskett' ) );"}, {"question_id": 136, "answer_sql": "SELECT COUNT(*) FROM radio;"}, {"question_id": 137, "answer_sql": "SELECT Transmitter FROM radio ORDER BY ERP_kW ASC;"}, {"question_id": 138, "answer_sql": "SELECT tv_show_name , Original_Airdate FROM tv_show ;"}, {"question_id": 139, "answer_sql": "SELECT Station_name FROM city_channel WHERE Affiliation != 'ABC';"}, {"question_id": 140, "answer_sql": "SELECT Transmitter FROM radio WHERE ERP_kW > 150 OR ERP_kW < 30;"}, {"question_id": 141, "answer_sql": "SELECT Transmitter FROM radio WHERE ERP_kW = (SELECT MAX( ERP_kW ) FROM radio );"}, {"question_id": 142, "answer_sql": "SELECT AVG( ERP_kW ) FROM radio ;"}, {"question_id": 143, "answer_sql": "SELECT Affiliation, COUNT(*) FROM city_channel GROUP BY Affiliation;"}, {"question_id": 144, "answer_sql": "SELECT Affiliation, COUNT(*) as Total_Channels FROM city_channel GROUP BY Affiliation ORDER BY Total_Channels DESC;"}, {"question_id": 145, "answer_sql": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*) > 3;"}, {"question_id": 146, "answer_sql": "SELECT c.City, c.Station_name FROM city_channel c JOIN city_channel_radio cr ON c.ID = cr.City_channel_ID JOIN radio r ON cr.Radio_ID = r.Radio_ID WHERE r.Transmitter = 'Cities' ORDER BY c.Station_name ASC;"}, {"question_id": 147, "answer_sql": "SELECT Transmitter , City FROM city_channel_radio JOIN city_channel ON city_channel_radio . City_channel_ID = city_channel . ID ;"}, {"question_id": 148, "answer_sql": "SELECT r.Transmitter, c.Station_name FROM radio r JOIN city_channel_radio cc ON r.Radio_ID = cc.Radio_ID JOIN city_channel c ON cc.City_channel_ID = c.ID ORDER BY r.ERP_kW DESC;"}, {"question_id": 149, "answer_sql": "SELECT r.Transmitter, COUNT(c.City_channel_ID) as Num_of_Channels FROM radio r JOIN city_channel_radio cc ON r.Radio_ID = cc.Radio_ID JOIN city c ON cc.City_channel_ID = c.ID GROUP BY r.Transmitter;"}, {"question_id": 150, "answer_sql": "SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio) OR Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_tv_show);"}, {"question_id": 151, "answer_sql": "SELECT Model FROM vehicle WHERE Power > 6000 AND Top_Speed = (SELECT MAX( Top_Speed ) FROM vehicle );"}, {"question_id": 152, "answer_sql": "SELECT Model FROM vehicle WHERE Power > 6000 ORDER BY Top_Speed DESC LIMIT 1;"}, {"question_id": 153, "answer_sql": "SELECT D.Name FROM driver D JOIN vehicle_driver V ON D.Driver_ID = V.Driver_ID WHERE D.Citizenship = 'United States';"}, {"question_id": 154, "answer_sql": "[SQL query]"}, {"question_id": 155, "answer_sql": "SELECT d.Driver_ID, COUNT(v.Vehicle_ID) as Vehicle_Count FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID GROUP BY d.Driver_ID HAVING Vehicle_Count = ( SELECT MAX(Vehicle_Count) FROM ( SELECT d.Driver_ID, COUNT(v.Vehicle_ID) as Vehicle_Count FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID GROUP BY d.Driver_ID ORDER BY Vehicle_Count DESC LIMIT 1 ) as SubQuery );"}, {"question_id": 156, "answer_sql": "SELECT d.Driver_ID, COUNT(v.Vehicle_ID) as Vehicle_Count FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID GROUP BY d.Driver_ID ORDER BY Vehicle_Count DESC LIMIT 1;"}, {"question_id": 157, "answer_sql": "SELECT MAX(Power) as Maximum_Power, AVG(Power) as Average_Power FROM vehicle WHERE Builder = 'Zhuzhou';"}, {"question_id": 158, "answer_sql": "SELECT MAX( Power ), AVG( Power ) FROM vehicle JOIN vehicle_driver ON vehicle . Vehicle_ID = vehicle_driver . Vehicle_ID JOIN driver ON vehicle_driver . Driver_ID = driver . Driver_ID WHERE vehicle . Builder = 'Zhuzhou';"}, {"question_id": 159, "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(vd.Driver_ID) ASC LIMIT 1;"}, {"question_id": 160, "answer_sql": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID ORDER BY COUNT(vd.Driver_ID) ASC LIMIT 1;"}, {"question_id": 161, "answer_sql": "SELECT v. Top_Speed , v. Power FROM vehicle v JOIN vehicle_driver vd ON v. Vehicle_ID = vd. Vehicle_ID JOIN driver d ON vd. Driver_ID = d. Driver_ID WHERE d. Build_Year = '1996' LIMIT 1;"}, {"question_id": 162, "answer_sql": "SELECT Top_Speed , Power FROM vehicle WHERE Build_Year = '1996';"}, {"question_id": 163, "answer_sql": "SELECT Build_Year , Model , Builder FROM vehicle ;"}, {"question_id": 164, "answer_sql": "SELECT vehicle . Build_Year , vehicle . Model , vehicle . Builder FROM vehicle JOIN vehicle_driver ON vehicle . Vehicle_ID = vehicle_driver . Vehicle_ID JOIN driver ON vehicle_driver . Driver_ID = driver . Driver_ID ;"}, {"question_id": 165, "answer_sql": "SELECT COUNT(*) FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Build_Year = '2012';"}, {"question_id": 166, "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM vehicle_driver WHERE Vehicle_ID IN (SELECT Vehicle_ID FROM vehicle WHERE Build_Year = '2012');"}, {"question_id": 167, "answer_sql": "SELECT COUNT(DISTINCT Driver_ID) FROM driver WHERE Racing_Series = 'NASCAR';"}, {"question_id": 168, "answer_sql": "SELECT COUNT(*) FROM driver WHERE Racing_Series = 'NASCAR';"}, {"question_id": 169, "answer_sql": "SELECT AVG(Top_Speed) FROM vehicle;"}, {"question_id": 170, "answer_sql": "SELECT AVG( Top_Speed ) FROM vehicle ;"}, {"question_id": 171, "answer_sql": "SELECT DISTINCT driver.Name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle_driver.Vehicle_ID = vehicle.Vehicle_ID WHERE vehicle.Power > 5000;"}, {"question_id": 172, "answer_sql": "SELECT d.Name FROM driver d JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID JOIN vehicle v ON vd.Vehicle_ID = v.Vehicle_ID WHERE v.Power > 5000;"}, {"question_id": 173, "answer_sql": "SELECT vehicle . Model FROM vehicle JOIN vehicle_driver ON vehicle . Vehicle_ID = vehicle_driver . Vehicle_ID JOIN driver ON vehicle_driver . Driver_ID = driver . Driver_ID WHERE vehicle . Total_Production > '100' AND vehicle . Top_Speed > 150 GROUP BY vehicle . Model ;"}, {"question_id": 174, "answer_sql": "SELECT vehicle . Model FROM vehicle JOIN vehicle_driver ON vehicle . Vehicle_ID = vehicle_driver . Vehicle_ID JOIN driver ON vehicle_driver . Driver_ID = driver . Driver_ID WHERE ( vehicle . Total_Production > 100 OR vehicle . Top_Speed > 150) AND vehicle . Builder = 'Ford' AND driver . Citizenship = 'USA';"}, {"question_id": 175, "answer_sql": "SELECT Model, Build_Year FROM vehicle WHERE Model LIKE '%DJ%'"}, {"question_id": 176, "answer_sql": "SELECT Model , Build_Year FROM vehicle WHERE Model LIKE '%DJ%' This SQL query will return the model and build year of the vehicles that include DJ in their model names. The LIKE keyword is used in the WHERE clause to search for a specified pattern in a column. The '%' is a wildcard character that matches any sequence of characters."}, {"question_id": 177, "answer_sql": "SELECT Model FROM vehicle WHERE Vehicle_ID NOT IN (SELECT Vehicle_ID FROM vehicle_driver );"}, {"question_id": 178, "answer_sql": "SELECT vehicle . Model FROM vehicle LEFT JOIN vehicle_driver ON vehicle . Vehicle_ID = vehicle_driver . Vehicle_ID WHERE vehicle_driver . Driver_ID IS NULL;"}, {"question_id": 179, "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE d.Name IN ('Two Drivers', 'Ziyang') GROUP BY v.Vehicle_ID, v.Model HAVING COUNT(d.Name) = 2;"}, {"question_id": 180, "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID JOIN driver d ON vd.Driver_ID = d.Driver_ID WHERE d.Name IN ('Drivers1', 'Drivers2') GROUP BY v.Vehicle_ID, v.Model HAVING COUNT(DISTINCT d.Name) = 1;"}, {"question_id": 181, "answer_sql": "SELECT v.Vehicle_ID, v.Model FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID WHERE vd.Driver_ID IN ( SELECT Driver_ID FROM driver WHERE Name = 'Jeff Gordon' ) GROUP BY v.Vehicle_ID, v.Model HAVING COUNT(DISTINCT Driver_ID) > 2;"}, {"question_id": 182, "answer_sql": "SELECT Vehicle.Vehicle_ID, Vehicle.Model FROM Vehicle JOIN vehicle_driver ON Vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID WHERE vehicle_driver.Driver_ID IN ( SELECT driver.Driver_ID FROM driver WHERE driver.Name = 'Jeff Gordon' OR driver.Name = 'J.G.' ) GROUP BY Vehicle.Vehicle_ID, Vehicle.Model HAVING COUNT(DISTINCT vehicle_driver.Driver_ID) > 2;"}, {"question_id": 183, "answer_sql": "SELECT MAX(Top_Speed) as Max_Top_Speed FROM vehicle;"}, {"question_id": 184, "answer_sql": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle);"}, {"question_id": 185, "answer_sql": "SELECT Name FROM driver ORDER BY Name;"}, {"question_id": 186, "answer_sql": "SELECT Name FROM driver ORDER BY Name ;"}, {"question_id": 187, "answer_sql": "SELECT d. Racing_Series , COUNT(v. Vehicle_ID ) as Number_of_Drivers FROM driver as d JOIN vehicle_driver as vd ON d. Driver_ID = vd. Driver_ID JOIN vehicle as v ON vd. Vehicle_ID = v. Vehicle_ID GROUP BY d. Racing_Series ORDER BY d. Racing_Series ;"}, {"question_id": 188, "answer_sql": "SELECT d. Racing_Series , COUNT(v. Vehicle_ID ) as Number_of_Drivers FROM driver as d JOIN vehicle_driver as vd ON d. Driver_ID = vd. Driver_ID JOIN vehicle as v ON vd. Vehicle_ID = v. Vehicle_ID GROUP BY d. Racing_Series ORDER BY Number_of_Drivers DESC;"}, {"question_id": 189, "answer_sql": "SELECT driver . Name , driver . Citizenship FROM driver JOIN vehicle_driver ON driver . Driver_ID = vehicle_driver . Driver_ID JOIN vehicle ON vehicle_driver . Vehicle_ID = vehicle . Vehicle_ID WHERE vehicle . Model = 'DJ1';"}, {"question_id": 190, "answer_sql": "SELECT driver . Name , driver . Citizenship FROM driver JOIN vehicle_driver ON driver . Driver_ID = vehicle_driver . Driver_ID JOIN vehicle ON vehicle_driver . Vehicle_ID = vehicle . Vehicle_ID WHERE vehicle . Model = 'DJ1';"}, {"question_id": 191, "answer_sql": "SELECT COUNT(*) FROM driver WHERE Vehicle_ID IS NULL;"}, {"question_id": 192, "answer_sql": "SELECT COUNT(*) FROM driver d LEFT JOIN vehicle_driver vd ON d.Driver_ID = vd.Driver_ID WHERE vd.Vehicle_ID IS NULL;"}, {"question_id": 193, "answer_sql": "SELECT COUNT(*) FROM Exams;"}, {"question_id": 194, "answer_sql": "SELECT COUNT(*) FROM Exams;"}, {"question_id": 195, "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"}, {"question_id": 196, "answer_sql": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;"}, {"question_id": 197, "answer_sql": "SELECT Exams.Exam_Name, Exams.Exam_Date FROM Exams WHERE Subject_Code != 'Database'"}, {"question_id": 198, "answer_sql": "SELECT Exam_Date, Exam_Name FROM Exams WHERE Subject_Code != 'Database';"}, {"question_id": 199, "answer_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC;"}, {"question_id": 200, "answer_sql": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC;"}, {"question_id": 201, "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) as Question_Count FROM Questions_in_Exams GROUP BY Type_of_Question_Code;"}, {"question_id": 202, "answer_sql": "SELECT Type_of_Question_Code, COUNT(*) FROM Questions_in_Exams GROUP BY Type_of_Question_Code;"}, {"question_id": 203, "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal'"}, {"question_id": 204, "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal' AND Student_Answer_Text IS NOT NULL;"}, {"question_id": 205, "answer_sql": "SELECT COUNT(DISTINCT Comments) as 'Number of Different Comments' FROM Student_Answers;"}, {"question_id": 206, "answer_sql": "SELECT COUNT(DISTINCT Comments) FROM Student_Answers;"}, {"question_id": 207, "answer_sql": "SELECT Student_Answer_Text, COUNT(*) as Answer_Count FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY Answer_Count DESC;"}, {"question_id": 208, "answer_sql": "SELECT Student_Answer_Text, COUNT(*) as Frequency FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY Frequency DESC;"}, {"question_id": 209, "answer_sql": "SELECT First_Name, Date_of_Answer FROM Students INNER JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID;"}, {"question_id": 210, "answer_sql": "SELECT First_Name, Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID;"}, {"question_id": 211, "answer_sql": "SELECT Email_Adress, Date_of_Answer FROM Student_Answers ORDER BY Date_of_Answer DESC;"}, {"question_id": 212, "answer_sql": "SELECT S.Email_Adress, SA.Date_of_Answer FROM Students S JOIN Student_Answers SA ON S.Student_ID = SA.Student_ID ORDER BY SA.Date_of_Answer DESC;"}, {"question_id": 213, "answer_sql": "SELECT Student_Answer_ID, Student_Answer_Text, Assessment FROM Student_Assessments WHERE Assessment = (SELECT MIN(Assessment) FROM Student_Assessments);"}, {"question_id": 214, "answer_sql": "SELECT Assessment, COUNT(*) as Frequency FROM Student_Assessments GROUP BY Assessment ORDER BY Frequency ASC LIMIT 1;"}, {"question_id": 215, "answer_sql": "SELECT First_Name FROM Students WHERE First_Name IN ( SELECT Student_ID FROM Student_Answers GROUP BY Student_ID HAVING COUNT(*) >= 2 );"}, {"question_id": 216, "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID IN (SELECT Student_ID FROM Student_Answers GROUP BY Student_ID HAVING COUNT(*) >= 2);"}, {"question_id": 217, "answer_sql": "SELECT Valid_Answer_Text FROM Valid_Answers WHERE Question_ID IN (SELECT Question_ID FROM Questions_in_Exams GROUP BY Question_ID HAVING COUNT(Question_ID) = (SELECT COUNT(Question_ID) FROM Questions_in_Exams GROUP BY Question_ID ORDER BY COUNT(Question_ID) DESC LIMIT 1))"}, {"question_id": 218, "answer_sql": "SELECT Valid_Answer_Text, COUNT(*) as Frequency FROM Student_Assessments GROUP BY Valid_Answer_Text ORDER BY Frequency DESC LIMIT 1;"}, {"question_id": 219, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU <> 'M';"}, {"question_id": 220, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU <> 'M';"}, {"question_id": 221, "answer_sql": "SELECT Gender_MFU, COUNT(*) FROM Students GROUP BY Gender_MFU;"}, {"question_id": 222, "answer_sql": "SELECT Gender_MFU, COUNT(*) FROM Students GROUP BY Gender_MFU;"}, {"question_id": 223, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU IN ('F', 'M');"}, {"question_id": 224, "answer_sql": "SELECT Last_Name FROM Students WHERE Gender_MFU IN ('F', 'M');"}, {"question_id": 225, "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers);"}, {"question_id": 226, "answer_sql": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers);"}, {"question_id": 227, "answer_sql": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments LIKE '%Normal%' AND Comments LIKE '%Absent%';"}, {"question_id": 228, "answer_sql": "SELECT sa.Student_Answer_Text FROM Student_Answers sa JOIN Student_Assessments saa ON sa.Student_Answer_ID = saa.Student_Answer_ID WHERE saa.Satisfactory_YN = 'N' AND sa.Comments = 'Normal' OR sa.Comments = 'Absent'"}, {"question_id": 229, "answer_sql": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(Question_ID) >= 3;"}, {"question_id": 230, "answer_sql": "SELECT Type_of_Question_Code FROM Questions WHERE Type_of_Question_Code IN (SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(*) >= 3)"}, {"question_id": 231, "answer_sql": "SELECT * FROM Students;"}, {"question_id": 232, "answer_sql": "SELECT * FROM Students;"}, {"question_id": 233, "answer_sql": "SELECT COUNT(*) FROM Addresses;"}, {"question_id": 234, "answer_sql": "SELECT COUNT(*) FROM Addresses;"}, {"question_id": 235, "answer_sql": "SELECT `Addresses`.`address_id`, `Addresses`.`address_details` FROM `Addresses`;"}, {"question_id": 236, "answer_sql": "SELECT `address_id`, `address_details` FROM `Addresses`;"}, {"question_id": 237, "answer_sql": "SELECT COUNT(*) FROM Products;"}, {"question_id": 238, "answer_sql": "SELECT COUNT(*) FROM Products;"}, {"question_id": 239, "answer_sql": "SELECT Products.product_id, Products.product_type_code, Products.product_name FROM Products"}, {"question_id": 240, "answer_sql": "SELECT `product_id`, `product_type_code`, `product_name` FROM `Products`;"}, {"question_id": 241, "answer_sql": "SELECT `product_price` FROM `Products` WHERE `product_name` = 'Monitor';"}, {"question_id": 242, "answer_sql": "SELECT product_price FROM Products WHERE product_type_code = 'Monitor';"}, {"question_id": 243, "answer_sql": "SELECT MIN(product_price) as Min_Price, AVG(product_price) as Avg_Price, MAX(product_price) as Max_Price FROM Products;"}, {"question_id": 244, "answer_sql": "SELECT MIN(product_price) AS minimum_price, AVG(product_price) AS average_price, MAX(product_price) AS maximum_price FROM Products;"}, {"question_id": 245, "answer_sql": "SELECT AVG(Products.product_price) AS Average_Price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Clothes';"}, {"question_id": 246, "answer_sql": "SELECT AVG(`product_price`) FROM `Products` WHERE `product_type_code` = 'Clothes';"}, {"question_id": 247, "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';"}, {"question_id": 248, "answer_sql": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware';"}, {"question_id": 249, "answer_sql": "SELECT product_name, product_price FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products)"}, {"question_id": 250, "answer_sql": "SELECT product_name FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products);"}, {"question_id": 251, "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' AND Products.product_price > ( SELECT AVG(Products.product_price) FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_type_code = 'Hardware' )"}, {"question_id": 252, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Hardware' AND product_price > ( SELECT AVG(product_price) FROM Products WHERE product_type_code = 'Hardware' )"}, {"question_id": 253, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC LIMIT 1;"}, {"question_id": 254, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC LIMIT 1;"}, {"question_id": 255, "answer_sql": "SELECT `product_id`, `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' ORDER BY `product_price` ASC LIMIT 1;"}, {"question_id": 256, "answer_sql": "SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC LIMIT 1;"}, {"question_id": 257, "answer_sql": "SELECT product_name, product_price FROM Products ORDER BY product_price DESC;"}, {"question_id": 258, "answer_sql": "SELECT product_name, product_price FROM Products ORDER BY product_price DESC;"}, {"question_id": 259, "answer_sql": "SELECT Products.product_name, Products.product_price FROM Products WHERE Products.product_type_code = 'Hardware' ORDER BY Products.product_price ASC;"}, {"question_id": 260, "answer_sql": "SELECT product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC;"}, {"question_id": 261, "answer_sql": "SELECT `product_type_code`, COUNT(`product_id`) as `product_count` FROM `Products` GROUP BY `product_type_code`;"}, {"question_id": 262, "answer_sql": "SELECT Products.product_type_code, COUNT(Products.product_id) as product_count FROM Products GROUP BY Products.product_type_code;"}, {"question_id": 263, "answer_sql": "SELECT product_type_code, AVG(product_price) as average_price FROM Products GROUP BY product_type_code;"}, {"question_id": 264, "answer_sql": "SELECT Products.product_type_code, AVG(Products.product_price) as average_price FROM Products GROUP BY Products.product_type_code;"}, {"question_id": 265, "answer_sql": "SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` HAVING COUNT(`product_id`) >= 2;"}, {"question_id": 266, "answer_sql": "SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` HAVING COUNT(`product_id`) >= 2;"}, {"question_id": 267, "answer_sql": "SELECT `product_type_code`, COUNT(`product_id`) as product_count FROM `Products` GROUP BY `product_type_code` ORDER BY product_count DESC LIMIT 1;"}, {"question_id": 268, "answer_sql": "SELECT product_type_code, COUNT(*) as frequency FROM Products GROUP BY product_type_code ORDER BY frequency DESC LIMIT 1;"}, {"question_id": 269, "answer_sql": "SELECT COUNT(*) FROM Customers;"}, {"question_id": 270, "answer_sql": "SELECT COUNT(*) FROM Customers;"}, {"question_id": 271, "answer_sql": "SELECT `Customers`.`customer_id`, `Customers`.`customer_name` FROM `Customers`"}, {"question_id": 272, "answer_sql": "SELECT `customer_id`, `customer_name` FROM `Customers`;"}, {"question_id": 273, "answer_sql": "SELECT `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy';"}, {"question_id": 274, "answer_sql": "SELECT `customer_name`, `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy';"}, {"question_id": 275, "answer_sql": "SELECT `payment_method_code`, COUNT(`customer_id`) as `Number of Customers` FROM `Customers` GROUP BY `payment_method_code`;"}, {"question_id": 276, "answer_sql": "SELECT `payment_method_code`, COUNT(`customer_id`) FROM `Customers` GROUP BY `payment_method_code`;"}, {"question_id": 277, "answer_sql": "SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(`customer_id`) DESC LIMIT 1;"}, {"question_id": 278, "answer_sql": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 279, "answer_sql": "SELECT `customer_name`, `payment_method_code` FROM `Customers` WHERE `payment_method_code` IN ( SELECT `payment_method_code` FROM `Customers` GROUP BY `payment_method_code` ORDER BY COUNT(`customer_id`) ASC LIMIT 1 )"}, {"question_id": 280, "answer_sql": "SELECT c.customer_name, pm.payment_method_code FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id JOIN Payment_Methods pm ON c.payment_method_code = pm.payment_method_code GROUP BY c.customer_name, pm.payment_method_code ORDER BY COUNT(DISTINCT p.product_id) ASC LIMIT 1;"}, {"question_id": 281, "answer_sql": "SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy';"}, {"question_id": 282, "answer_sql": "SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy';"}, {"question_id": 283, "answer_sql": "SELECT DISTINCT `payment_method_code` FROM `Customers`;"}, {"question_id": 284, "answer_sql": "SELECT `payment_method_code` FROM `Customers`;"}, {"question_id": 285, "answer_sql": "SELECT Products.product_id, Products.product_type_code, Products.product_name FROM Products ORDER BY Products.product_name;"}, {"question_id": 286, "answer_sql": "SELECT Products.product_id, Products.product_type_code, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Customer_Orders.order_status_code = 'Delivered' ORDER BY Products.product_name ASC;"}, {"question_id": 287, "answer_sql": "SELECT `product_type_code`, COUNT(`product_id`) as product_count FROM `Products` GROUP BY `product_type_code` ORDER BY product_count ASC LIMIT 1;"}, {"question_id": 288, "answer_sql": "SELECT `product_type_code` FROM `Products` GROUP BY `product_type_code` ORDER BY COUNT(*) ASC LIMIT 1;"}, {"question_id": 289, "answer_sql": "SELECT COUNT(*) FROM `Customer_Orders`;"}, {"question_id": 290, "answer_sql": "SELECT COUNT(*) FROM Customer_Orders;"}, {"question_id": 291, "answer_sql": "SELECT `order_id`, `order_date`, `order_status_code` FROM `Customer_Orders` JOIN `Customers` ON `Customer_Orders`.`customer_id` = `Customers`.`customer_id` WHERE `Customers`.`customer_name` = 'Jeromy';"}, {"question_id": 292, "answer_sql": "SELECT `order_id`, `order_date`, `order_status_code` FROM `Customer_Orders` JOIN `Customers` ON `Customer_Orders`.`customer_id` = `Customers`.`customer_id` WHERE `Customers`.`customer_name` = 'Jeromy';"}, {"question_id": 293, "answer_sql": "SELECT Customers.customer_name, Customers.customer_id, COUNT(Customer_Orders.order_id) as Number_of_Orders FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_name, Customers.customer_id;"}, {"question_id": 294, "answer_sql": "SELECT Customers.customer_name, Customers.customer_id, Customers.customer_number, COUNT(Customer_Orders.order_id) as Number_of_Orders FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_name, Customers.customer_id, Customers.customer_number;"}, {"question_id": 295, "answer_sql": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email ORDER BY COUNT(Order_Items.product_id) DESC LIMIT 1;"}, {"question_id": 296, "answer_sql": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id GROUP BY Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email ORDER BY COUNT(Order_Items.order_id) DESC LIMIT 1;"}, {"question_id": 297, "answer_sql": "SELECT order_status_code, COUNT(*) as number_of_orders FROM Customer_Orders GROUP BY order_status_code;"}, {"question_id": 298, "answer_sql": "SELECT order_status_code, COUNT(*) as number_of_orders FROM Customer_Orders GROUP BY order_status_code;"}, {"question_id": 299, "answer_sql": "SELECT `order_status_code`, COUNT(*) as `count` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY `count` DESC LIMIT 1;"}, {"question_id": 300, "answer_sql": "SELECT o.order_status_code, COUNT(*) as frequency FROM Customer_Orders o GROUP BY o.order_status_code ORDER BY frequency DESC LIMIT 1;"}, {"question_id": 301, "answer_sql": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders);"}, {"question_id": 302, "answer_sql": "SELECT COUNT(*) FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.customer_id IS NULL;"}, {"question_id": 303, "answer_sql": "SELECT Products.product_name FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.order_id IS NULL;"}, {"question_id": 304, "answer_sql": "SELECT product_name FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL;"}, {"question_id": 305, "answer_sql": "SELECT COUNT(*) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';"}, {"question_id": 306, "answer_sql": "SELECT COUNT(*) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_type_code = 'Monitor';"}, {"question_id": 307, "answer_sql": "SELECT COUNT(*) FROM Customer_Orders JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';"}, {"question_id": 308, "answer_sql": "SELECT COUNT(DISTINCT c.customer_id) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id JOIN Order_Items oi ON co.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id WHERE p.product_type_code = 'Monitor';"}, {"question_id": 309, "answer_sql": "SELECT COUNT(*) FROM Customers c JOIN Customer_Orders co ON c.customer_id = co.customer_id;"}, {"question_id": 310, "answer_sql": "SELECT COUNT(DISTINCT `customer_id`) FROM `Customer_Orders`;"}, {"question_id": 311, "answer_sql": "SELECT c.customer_id FROM Customers c LEFT JOIN Customer_Orders o ON c.customer_id = o.customer_id WHERE o.order_id IS NULL;"}, {"question_id": 312, "answer_sql": "SELECT customer_id FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Orders )"}, {"question_id": 313, "answer_sql": "SELECT Order_Items.order_id, Customer_Orders.order_date FROM Order_Items JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE (Products.product_name, Order_Items.order_quantity) IN ( SELECT product_name, MAX(order_quantity) FROM Order_Items GROUP BY product_name ) OR ( SELECT COUNT(*) FROM Order_Items WHERE Order_Items.order_quantity > 6 ) > 3"}, {"question_id": 314, "answer_sql": "SELECT Order_Items.order_id, Customer_Orders.order_date FROM Order_Items JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Order_Items.order_quantity > 6 OR (SELECT COUNT(*) FROM Order_Items WHERE Order_Items.order_id = Customer_Orders.order_id) > 3;"}, {"question_id": 315, "answer_sql": "SELECT COUNT(*) FROM building ;"}, {"question_id": 316, "answer_sql": "SELECT COUNT(*) FROM building;"}, {"question_id": 317, "answer_sql": "SELECT Name FROM building ORDER BY Number_of_Stories ASC;"}, {"question_id": 318, "answer_sql": "SELECT b.Name, b.Number_of_Stories FROM building b ORDER BY b.Number_of_Stories ASC;"}, {"question_id": 319, "answer_sql": "SELECT Address FROM building WHERE Region_ID IN ( SELECT Region_ID FROM region WHERE Name = 'Hindustan' ) ORDER BY Completed_Year DESC;"}, {"question_id": 320, "answer_sql": "SELECT Address FROM building ORDER BY Completed_Year DESC;"}, {"question_id": 321, "answer_sql": "SELECT MAX( Number_of_Stories ) FROM building WHERE Completed_Year < 1980;"}, {"question_id": 322, "answer_sql": "SELECT MAX(Number_of_Stories) FROM building WHERE Completed_Year < 1980;"}, {"question_id": 323, "answer_sql": "SELECT AVG( Population ) FROM region ;"}, {"question_id": 324, "answer_sql": "SELECT AVG( region . Population ) as Average_Population FROM region ;"}, {"question_id": 325, "answer_sql": "SELECT Name FROM region ORDER BY Name ASC;"}, {"question_id": 326, "answer_sql": "SELECT r.Name FROM region AS r ORDER BY r.Name;"}, {"question_id": 327, "answer_sql": "SELECT region . Name FROM region WHERE region . Area > 10000;"}, {"question_id": 328, "answer_sql": "SELECT region . Name FROM region WHERE region . Area > 10000;"}, {"question_id": 329, "answer_sql": "SELECT r.Name as Region, r.Capital as Capital FROM region as r WHERE r.Population = (SELECT MAX(Population) FROM region)"}, {"question_id": 330, "answer_sql": "SELECT r.Name, r.Capital FROM region AS r WHERE r.Population = (SELECT MAX(Population) FROM region) ```"}, {"question_id": 331, "answer_sql": "SELECT r.Name FROM region AS r WHERE r.Area > ( SELECT MAX(r2.Area) FROM region AS r2 ) ORDER BY r.Area DESC LIMIT 5;"}, {"question_id": 332, "answer_sql": "SELECT r.Name, r.Area, r.Population FROM region AS r WHERE r.Area >= (SELECT MAX(Area) FROM region) ORDER BY r.Area DESC LIMIT 5;"}, {"question_id": 333, "answer_sql": "SELECT building . Name , region . Name FROM building JOIN region ON building . Region_ID = region . Region_ID ;"}, {"question_id": 334, "answer_sql": "SELECT b.Name AS Building_Name, r.Name AS Region_Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"}, {"question_id": 335, "answer_sql": "SELECT r.Name FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Name HAVING COUNT(b.Building_ID) > 1;"}, {"question_id": 336, "answer_sql": "SELECT r.Name FROM region r JOIN building b ON r.Region_ID = b.Region_ID GROUP BY r.Name HAVING COUNT(b.Building_ID) > 1;"}, {"question_id": 337, "answer_sql": "SELECT r.Name as Region_Name, b.Completed_Year as Most_Completed_Year FROM region as r JOIN building as b ON r.Region_ID = b.Region_ID GROUP BY r.Name ORDER BY Most_Completed_Year DESC LIMIT 1;"}, {"question_id": 338, "answer_sql": "SELECT r.Name, r.Capital FROM region AS r JOIN building AS b ON r.Region_ID = b.Region_ID GROUP BY r.Name ORDER BY COUNT(b.Building_ID) DESC LIMIT 1;"}, {"question_id": 339, "answer_sql": "SELECT building . Address , region . Capital FROM building JOIN region ON building . Region_ID = region . Region_ID ;"}, {"question_id": 340, "answer_sql": "SELECT b.Address, r.Name FROM building b JOIN region r ON b.Region_ID = r.Region_ID;"}, {"question_id": 341, "answer_sql": "SELECT Number_of_Stories FROM building JOIN region ON building.Region_ID = region.Region_ID WHERE region.Name = 'Abruzzo';"}, {"question_id": 342, "answer_sql": "SELECT b. Number_of_Stories FROM building b JOIN region r ON b. Region_ID = r. Region_ID WHERE r. Name = 'Abruzzo';"}, {"question_id": 343, "answer_sql": "SELECT Completed_Year, COUNT(*) as Number_of_Buildings FROM building GROUP BY Completed_Year ORDER BY Completed_Year;"}, {"question_id": 344, "answer_sql": "SELECT Completed_Year, COUNT(*) as Number_of_Buildings FROM building WHERE Completed_Year IS NOT NULL GROUP BY Completed_Year ORDER BY Completed_Year DESC;"}, {"question_id": 345, "answer_sql": "SELECT Completed_Year , COUNT(*) as Number_of_Buildings FROM building GROUP BY Completed_Year ORDER BY Number_of_Buildings DESC LIMIT 1;"}, {"question_id": 346, "answer_sql": "SELECT MAX(Completed_Year) as Most_Construction_Year FROM building;"}, {"question_id": 347, "answer_sql": "SELECT r.Name FROM region r LEFT JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Building_ID IS NULL;"}, {"question_id": 348, "answer_sql": "SELECT r.Name FROM region r WHERE r.Region_ID NOT IN ( SELECT b.Region_ID FROM building b )"}, {"question_id": 349, "answer_sql": "SELECT b. Completed_Year FROM building b WHERE b. Number_of_Stories > 20 AND b. Completed_Year IN ( SELECT b2. Completed_Year FROM building b2 WHERE b2. Number_of_Stories < 15 );"}, {"question_id": 350, "answer_sql": "SELECT Completed_Year FROM building WHERE Number_of_Stories > 20 AND Number_of_Stories < 15;"}, {"question_id": 351, "answer_sql": "SELECT Address FROM building;"}, {"question_id": 352, "answer_sql": "SELECT DISTINCT Address FROM building ;"}, {"question_id": 353, "answer_sql": "SELECT b. Completed_Year FROM building b ORDER BY b. Number_of_Stories DESC;"}, {"question_id": 354, "answer_sql": "SELECT Building_ID , Name , Completed_Year FROM building ORDER BY Number_of_Stories DESC, Completed_Year DESC;"}, {"question_id": 355, "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details;"}, {"question_id": 356, "answer_sql": "SELECT Channel_Details FROM Channels ORDER BY Channel_Details ASC;"}, {"question_id": 357, "answer_sql": "SELECT COUNT(*) FROM Services;"}, {"question_id": 358, "answer_sql": "SELECT COUNT(*) FROM Services;"}, {"question_id": 359, "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Frequency FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY Frequency DESC LIMIT 1;"}, {"question_id": 360, "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Frequency FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY Frequency DESC LIMIT 1;"}, {"question_id": 361, "answer_sql": "SELECT Customers_and_Services.Service_ID, Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"}, {"question_id": 362, "answer_sql": "SELECT Customers_and_Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch';"}, {"question_id": 363, "answer_sql": "SELECT Services.Service_Details, Customers_and_Services.Customers_and_Services_Details FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Services.Service_Details, Customers_and_Services.Customers_and_Services_Details HAVING COUNT(*) > 3;"}, {"question_id": 364, "answer_sql": "SELECT Services.Service_Details FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Services.Service_Details HAVING COUNT(Customers_and_Services.Service_ID) > 3;"}, {"question_id": 365, "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Customers_and_Services_ID) as Service_Usage FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_Details ORDER BY Service_Usage DESC;"}, {"question_id": 366, "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Service_ID) as Used_Services FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_Details ORDER BY Used_Services DESC LIMIT 1;"}, {"question_id": 367, "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Service_ID) as Service_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_Details ORDER BY Service_Count DESC LIMIT 1;"}, {"question_id": 368, "answer_sql": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Service_ID) as Service_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_Details ORDER BY Service_Count DESC LIMIT 1;"}, {"question_id": 369, "answer_sql": "SELECT Customers.Customer_Details FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID LEFT JOIN Service_Interactions ON Customers_and_Services.Customers_and_Services_ID = Service_Interactions.Customers_and_Services_ID WHERE Service_Interactions.Customer_ID IS NULL;"}, {"question_id": 370, "answer_sql": "SELECT Customers.Customer_Details FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID LEFT JOIN Service_Interactions ON Customers_and_Services.Customers_and_Services_ID = Service_Interactions.Customers_and_Services_ID LEFT JOIN Integration_Platform ON Service_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID LEFT JOIN Analytical_Layer ON Integration_Platform.Integration_Platform_ID = Analytical_Layer.Integration_Platform_ID WHERE Analytical_Layer.Pattern_Recognition IS NULL;"}, {"question_id": 371, "answer_sql": "SELECT Customers.Customer_Details, Services.Service_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Services.Service_ID IN ( SELECT Customers_and_Services.Service_ID FROM Customers_and_Services GROUP BY Customers_and_Services.Service_ID ORDER BY COUNT(*) ASC LIMIT 1 )"}, {"question_id": 372, "answer_sql": "SELECT DISTINCT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID WHERE Services.Service_ID IN ( SELECT Service_ID FROM ( SELECT Service_ID, COUNT(*) as Service_Count FROM Customers_and_Services GROUP BY Service_ID ORDER BY Service_Count ASC LIMIT 1 ) as Service_Counts );"}, {"question_id": 373, "answer_sql": "SELECT COUNT(DISTINCT Customers_and_Services_Details) FROM Customers_and_Services;"}, {"question_id": 374, "answer_sql": "SELECT COUNT(*) FROM Customers_and_Services;"}, {"question_id": 375, "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%';"}, {"question_id": 376, "answer_sql": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%';"}, {"question_id": 377, "answer_sql": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customers_and_Services_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Customers.Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') OR Customer_Interactions.Status_Code = 'good' GROUP BY Services.Service_Details;"}, {"question_id": 378, "answer_sql": "SELECT Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Customers_and_Services ON Customers_and_Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers.Customer_Details = 'Hardy Kutch' AND Customers_and_Services.Customers_and_Services_Details = 'good'"}, {"question_id": 379, "answer_sql": "SELECT Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customer_Interaction_ID JOIN Services ON Customer_Interactions.Service_ID = Services.Service_ID WHERE Customers.Customer_Details = 'Hardy Kutch' AND Customer_Interactions.Status_Code = 'bad'"}, {"question_id": 380, "answer_sql": "SELECT Services.Service_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Customers_and_Services ON Customers_and_Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customer_Interaction_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Customers.Customer_Details = 'Hardy Kutch' AND Customer_Interactions.Status_Code = 'bad' AND Integration_Platform.Integration_Platform_Details = 'Integration Platform 1' GROUP BY Services.Service_Details;"}, {"question_id": 381, "answer_sql": "SELECT Customers_and_Services.Service_Details FROM Customers_and_Services JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customers_and_Services_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID JOIN Analytical_Layer ON Integration_Platform.Integration_Platform_ID = Analytical_Layer.Customers_and_Services_ID WHERE Analytical_Layer.Pattern_Recognition = '15 ij' AND Customer_Interactions.Channel_ID = 'ij'"}, {"question_id": 382, "answer_sql": "SELECT Customers_and_Services.Customers_and_Services_Details FROM Customers_and_Services JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customers_and_Services_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID JOIN Analytical_Layer ON Customer_Interactions.Customer_Interaction_ID = Analytical_Layer.Customers_and_Services_ID WHERE Integration_Platform.Integration_Platform_Details = '15 ij' AND Analytical_Layer.Pattern_Recognition = 'Yes';"}, {"question_id": 383, "answer_sql": "SELECT Customers_and_Services.Customers_and_Services_Details, Customers.Customer_Details, Channels.Channel_Details FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Channels ON Customers_and_Services.Service_ID = Channels.Channel_ID WHERE Customers_and_Services.Customers_and_Services_Details = 'Stuck' AND Customers_and_Services.Customers_and_Services_Details = 'bad'"}, {"question_id": 384, "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Service_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID JOIN Analytical_Layer ON Integration_Platform.Integration_Platform_ID = Analytical_Layer.Customers_and_Services_ID WHERE Customer_Interactions.Status_Code = 'Stuck' AND Customers_and_Services.Services_and_Channels_Details = 'bad' AND Analytical_Layer.Pattern_Recognition = 'No Pattern Found';"}, {"question_id": 385, "answer_sql": "SELECT COUNT(*) FROM Customer_Interactions WHERE Status_Code = 'Success';"}, {"question_id": 386, "answer_sql": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details = 'Success';"}, {"question_id": 387, "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Failed' AND Customer_Interactions.Status_Code = 'Failed' ```"}, {"question_id": 388, "answer_sql": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail' AND Customers.Customer_ID IN (SELECT Customers_and_Services.Customer_ID FROM Customers_and_Services WHERE Customers_and_Services.Customers_and_Services_Details = 'Yes')"}, {"question_id": 389, "answer_sql": "SELECT Services.Service_Details, Customers.Customer_Details FROM Services LEFT JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID LEFT JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers_and_Services.Customer_ID IS NULL;"}, {"question_id": 390, "answer_sql": "SELECT Service_Details FROM Services LEFT JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Service_ID IS NULL;"}, {"question_id": 391, "answer_sql": "SELECT Analytical_Layer.Pattern_Recognition, Analytical_Layer.Analytical_Layer_Type_Code, COUNT(Analytical_Layer.Analytical_ID) as Usage_Count FROM Analytical_Layer JOIN Customers_and_Services ON Analytical_Layer.Customers_and_Services_ID = Customers_and_Services.Customers_and_Services_ID GROUP BY Analytical_Layer.Pattern_Recognition, Analytical_Layer.Analytical_Layer_Type_Code ORDER BY Usage_Count DESC;"}, {"question_id": 392, "answer_sql": "SELECT Analytical_Layer_Type_Code, COUNT(*) as Number_of_Times_Used FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code;"}, {"question_id": 393, "answer_sql": "SELECT Customers_and_Services.Customers_and_Services_Details FROM Customers_and_Services JOIN Analytical_Layer ON Customers_and_Services.Customers_and_Services_ID = Analytical_Layer.Customers_and_Services_ID WHERE Analytical_Layer.Pattern_Recognition = 'Unsatisfied';"}, {"question_id": 394, "answer_sql": "SELECT Service_Details FROM Customers_and_Services WHERE Customers_and_Services_Details = 'unsatisfied';"}, {"question_id": 395, "answer_sql": "SELECT COUNT(*) FROM Vehicles;"}, {"question_id": 396, "answer_sql": "SELECT COUNT(*) FROM Vehicles;"}, {"question_id": 397, "answer_sql": "SELECT Vehicles . name FROM Vehicles ORDER BY Vehicles . Model_year DESC;"}, {"question_id": 398, "answer_sql": "SELECT Vehicles . name FROM Vehicles ORDER BY Model_year DESC;"}, {"question_id": 399, "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles ;"}, {"question_id": 400, "answer_sql": "SELECT DISTINCT Type_of_powertrain FROM Vehicles;"}, {"question_id": 401, "answer_sql": "SELECT Vehicles . name , Vehicles . Type_of_powertrain , Vehicles . Annual_fuel_cost FROM Vehicles WHERE Vehicles . Model_year IN (2013, 2014);"}, {"question_id": 402, "answer_sql": "SELECT Vehicles.name, Vehicles. Type_of_powertrain , Vehicles. Model_year , Vehicles. Cost_per_25_miles FROM Vehicles WHERE Vehicles. Model_year IN (2013, 2014);"}, {"question_id": 403, "answer_sql": "SELECT Vehicles.Type_of_powertrain FROM Vehicles WHERE Model_year IN (2014, 2013);"}, {"question_id": 404, "answer_sql": "SELECT Vehicles.Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id JOIN Customers ON Renting_history.customer_id = Customers.id WHERE Vehicles.Model_year IN (2013, 2014) GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(*) > 1;"}, {"question_id": 405, "answer_sql": "SELECT Type_of_powertrain , COUNT( id ) FROM Vehicles GROUP BY Type_of_powertrain ;"}, {"question_id": 406, "answer_sql": "SELECT Type_of_powertrain , COUNT( id ) FROM Vehicles GROUP BY Type_of_powertrain ;"}, {"question_id": 407, "answer_sql": "SELECT Type_of_powertrain, COUNT(*) as Number_of_Vehicles FROM Vehicles GROUP BY Type_of_powertrain ORDER BY Number_of_Vehicles DESC LIMIT 1;"}, {"question_id": 408, "answer_sql": "SELECT Type_of_powertrain FROM Vehicles GROUP BY Type_of_powertrain ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 409, "answer_sql": "SELECT MIN( Annual_fuel_cost ) AS Minimum_Annual_Fuel_Cost , MAX( Annual_fuel_cost ) AS Maximum_Annual_Fuel_Cost , AVG( Annual_fuel_cost ) AS Average_Annual_Fuel_Cost FROM Vehicles ;"}, {"question_id": 410, "answer_sql": "SELECT MIN( Annual_fuel_cost ) as Minimum_Annual_Fuel_Cost , MAX( Annual_fuel_cost ) as Maximum_Annual_Fuel_Cost , AVG( Annual_fuel_cost ) as Average_Annual_Fuel_Cost FROM Vehicles ;"}, {"question_id": 411, "answer_sql": "SELECT Vehicles . name , Vehicles . Model_year FROM Vehicles WHERE Vehicles . City_fuel_economy_rate <= Vehicles . Highway_fuel_economy_rate ;"}, {"question_id": 412, "answer_sql": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id JOIN Discount ON Renting_history.discount_id = Discount.id WHERE Vehicles.City_fuel_economy_rate <= Vehicles.Highway_fuel_economy_rate"}, {"question_id": 413, "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Renting_history.total_hours) as average_annual_fuel_cost FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(Vehicles.id) >= 2;"}, {"question_id": 414, "answer_sql": "SELECT Vehicles.Type_of_powertrain, AVG(Vehicles.Annual_fuel_cost) as Average_Annual_Fuel_Cost FROM Vehicles GROUP BY Vehicles.Type_of_powertrain HAVING COUNT(Vehicles.Type_of_powertrain) > 1;"}, {"question_id": 415, "answer_sql": "SELECT name , age , membership_credit FROM Customers ;"}, {"question_id": 416, "answer_sql": "SELECT name, age, membership_credit FROM Customers;"}, {"question_id": 417, "answer_sql": "SELECT name , age FROM Customers WHERE membership_credit = (SELECT MAX( membership_credit ) FROM Customers );"}, {"question_id": 418, "answer_sql": "SELECT name , age FROM Customers WHERE membership_credit = (SELECT MAX( membership_credit ) FROM Customers )"}, {"question_id": 419, "answer_sql": "SELECT AVG(Customers.age) as Average_age FROM Customers WHERE Customers.membership_credit > ( SELECT AVG(Customers.membership_credit) FROM Customers );"}, {"question_id": 420, "answer_sql": "SELECT AVG(Customers.age) as average_age FROM Customers WHERE Customers.id IN ( SELECT Renting_history.customer_id FROM Renting_history GROUP BY Renting_history.customer_id HAVING AVG(Renting_history.total_hours) > ( SELECT AVG(total_hours) FROM Renting_history ) );"}, {"question_id": 421, "answer_sql": "SELECT * FROM Discount;"}, {"question_id": 422, "answer_sql": "SELECT * FROM Discount;"}, {"question_id": 423, "answer_sql": "SELECT Vehicles.name, Renting_history.total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id;"}, {"question_id": 424, "answer_sql": "SELECT V.name AS Vehicle_Name, SUM(RH.total_hours) AS Total_Rental_Hours FROM Vehicles V JOIN Renting_history RH ON V.id = RH.vehicles_id GROUP BY V.name ORDER BY Total_Rental_Hours DESC;"}, {"question_id": 425, "answer_sql": "SELECT Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL;"}, {"question_id": 426, "answer_sql": "SELECT Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL;"}, {"question_id": 427, "answer_sql": "SELECT Customers . name FROM Customers JOIN Renting_history ON Customers . id = Renting_history . customer_id GROUP BY Customers . id , Customers . name HAVING COUNT( Renting_history . id ) >= 2;"}, {"question_id": 428, "answer_sql": "SELECT name FROM Customers WHERE id IN (SELECT customer_id FROM Renting_history GROUP BY customer_id HAVING COUNT(*) >= 2);"}, {"question_id": 429, "answer_sql": "SELECT Vehicles.name, Vehicles.Model_year FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.id, Vehicles.name, Vehicles.Model_year ORDER BY COUNT(Renting_history.id) DESC LIMIT 1;"}, {"question_id": 430, "answer_sql": "SELECT V.name, V.Model_year FROM Vehicles V JOIN Renting_history R ON V.id = R.vehicles_id GROUP BY V.name, V.Model_year ORDER BY SUM(R.total_hours) DESC LIMIT 1;"}, {"question_id": 431, "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) as total_hours FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name ORDER BY total_hours DESC;"}, {"question_id": 432, "answer_sql": "SELECT Vehicles.name, SUM(Renting_history.total_hours) as total_hours_rented FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id GROUP BY Vehicles.name ORDER BY total_hours_rented DESC;"}, {"question_id": 433, "answer_sql": "SELECT D.name FROM Discount D JOIN Renting_history R ON D.id = R.discount_id GROUP BY D.name ORDER BY COUNT(R.id) DESC LIMIT 1;"}, {"question_id": 434, "answer_sql": "SELECT D.name FROM Discount D JOIN Renting_history R ON D.id = R.discount_id GROUP BY D.name ORDER BY COUNT(R.id) DESC LIMIT 1;"}, {"question_id": 435, "answer_sql": "SELECT Vehicles.name, Vehicles. Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.total_hours > 30;"}, {"question_id": 436, "answer_sql": "SELECT Vehicles.name, Vehicles. Type_of_powertrain FROM Vehicles JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.total_hours > 30 GROUP BY Vehicles.id;"}, {"question_id": 437, "answer_sql": "SELECT Type_of_powertrain, AVG(City_fuel_economy_rate) AS avg_city_fuel_rate, AVG(Highway_fuel_economy_rate) AS avg_highway_fuel_rate FROM Vehicles WHERE Type_of_powertrain IN ('Diesel', 'Gasoline') GROUP BY Type_of_powertrain;"}, {"question_id": 438, "answer_sql": "SELECT Type_of_powertrain, AVG(City_fuel_economy_rate) AS average_city_fuel_economy, AVG(Highway_fuel_economy_rate) AS average_highway_fuel_economy FROM Vehicles GROUP BY Type_of_powertrain;"}, {"question_id": 439, "answer_sql": "SELECT AVG(`amount_of_loan`) FROM `Student_Loans`;"}, {"question_id": 440, "answer_sql": "SELECT AVG(`amount_of_loan`) FROM `Student_Loans`;"}, {"question_id": 441, "answer_sql": "SELECT Students.student_id, Students.bio_data FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id, Students.bio_data HAVING COUNT(Classes.class_id) >= 2 OR SUM(CASE WHEN Detention.detention_type_code IS NOT NULL THEN 1 ELSE 0 END) < 2;"}, {"question_id": 442, "answer_sql": "SELECT bio_data, student_id FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id WHERE (SELECT COUNT(*) FROM Classes WHERE Classes.student_id = Students.student_id) >= 2 AND (SELECT COUNT(*) FROM Detention WHERE Detention.student_id = Students.student_id) < 2;"}, {"question_id": 443, "answer_sql": "SELECT T.teacher_details FROM Teachers T JOIN Classes C ON T.teacher_id = C.teacher_id WHERE C.class_details LIKE '%data%' AND C.class_details NOT LIKE 'net%'"}, {"question_id": 444, "answer_sql": "SELECT Teachers.teacher_details FROM Classes JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id WHERE Classes.class_details LIKE '%data%' AND Classes.class_details NOT LIKE 'net%'"}, {"question_id": 445, "answer_sql": "SELECT bio_data FROM Students WHERE student_id NOT IN (SELECT student_id FROM Detention) AND student_id NOT IN (SELECT student_id FROM Student_Loans);"}, {"question_id": 446, "answer_sql": "SELECT Students.student_id, Students.bio_data FROM Students LEFT JOIN Detention ON Students.student_id = Detention.student_id LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Detention.detention_id IS NULL AND Student_Loans.student_loan_id IS NULL;"}, {"question_id": 447, "answer_sql": "SELECT S.student_id, SL.amount_of_loan, SL.date_of_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id JOIN Achievements A ON S.student_id = A.student_id GROUP BY S.student_id, SL.amount_of_loan, SL.date_of_loan HAVING COUNT(A.achievement_id) >= 2;"}, {"question_id": 448, "answer_sql": "SELECT S.student_id, SL.amount_of_loan, SL.date_of_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id JOIN Achievements A ON S.student_id = A.student_id GROUP BY S.student_id, SL.date_of_loan HAVING COUNT(A.achievement_id) >= 2;"}, {"question_id": 449, "answer_sql": "SELECT `teacher_id`, `teacher_details` FROM `Teachers` JOIN `Classes` ON `Classes`.`teacher_id` = `Teachers`.`teacher_id` GROUP BY `teacher_id` ORDER BY COUNT(`Classes`.`class_id`) DESC LIMIT 1;"}, {"question_id": 450, "answer_sql": "SELECT Teachers.teacher_id, Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id GROUP BY Teachers.teacher_id, Teachers.teacher_details ORDER BY COUNT(Classes.class_id) DESC LIMIT 1;"}, {"question_id": 451, "answer_sql": "SELECT DISTINCT detention_summary FROM Detention;"}, {"question_id": 452, "answer_sql": "SELECT DISTINCT det.detention_summary FROM Detention det JOIN Students stu ON det.student_id = stu.student_id;"}, {"question_id": 453, "answer_sql": "SELECT Students.student_id, Students.bio_data AS Personal Details , Addresses.address_details AS Address Type Descriptions FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id JOIN Ref_Address_Types ON Addresses.address_type_code = Ref_Address_Types.address_type_code ORDER BY Students.student_id;"}, {"question_id": 454, "answer_sql": "SELECT Students.student_id, Students.bio_data AS Personal Details , Addresses.address_details AS Address Type Descriptions FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id ```"}, {"question_id": 455, "answer_sql": "SELECT Students.bio_data, Students_Addresses.address_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id WHERE Students_Addresses.address_type_code = 'Home' ORDER BY Students.bio_data;"}, {"question_id": 456, "answer_sql": "SELECT Students.student_id, Students.bio_data, Transcripts.transcript_id, Transcripts.date_of_transcript, Transcripts.transcript_details, Behaviour_Monitoring.behaviour_monitoring_details, Behaviour_Monitoring.behaviour_monitoring_details, Addresses.address_details FROM Students LEFT JOIN Transcripts ON Students.student_id = Transcripts.student_id LEFT JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id LEFT JOIN Addresses ON Students.student_id = Addresses.address_id;"}, {"question_id": 457, "answer_sql": "SELECT Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id;"}, {"question_id": 458, "answer_sql": "SELECT Students.student_id, Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id ORDER BY Students.student_id;"}, {"question_id": 459, "answer_sql": "SELECT COUNT(*) as total_students, behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY total_students DESC LIMIT 1;"}, {"question_id": 460, "answer_sql": "SELECT COUNT(*) as count, Behaviour_Monitoring.behaviour_monitoring_details as details FROM Behaviour_Monitoring GROUP BY Behaviour_Monitoring.behaviour_monitoring_details ORDER BY count DESC LIMIT 1;"}, {"question_id": 461, "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY Students.student_id, Students.bio_data, Students.student_details HAVING COUNT(*) IN (SELECT COUNT(*) FROM Behaviour_Monitoring GROUP BY student_id)"}, {"question_id": 462, "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY Students.student_id, Students.bio_data, Students.student_details HAVING COUNT(*) IN (SELECT COUNT(*) FROM Behaviour_Monitoring GROUP BY student_id)"}, {"question_id": 463, "answer_sql": "SELECT Students.student_id, Students.bio_data FROM Students JOIN (SELECT student_id, COUNT(behaviour_monitoring_details) as count, behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY student_id, behaviour_monitoring_details ORDER BY count DESC, behaviour_monitoring_details LIMIT 1) as most_common ON Students.student_id = most_common.student_id"}, {"question_id": 464, "answer_sql": "SELECT bio_data FROM Students WHERE student_id IN ( SELECT student_id FROM Behaviour_Monitoring GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1 );"}, {"question_id": 465, "answer_sql": "SELECT Students.student_id, Students.bio_data, Student_Events.event_date FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id WHERE Student_Events.event_date IS NOT NULL;"}, {"question_id": 466, "answer_sql": "SELECT Students.bio_data, Student_Events.event_date FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id WHERE Student_Events.event_date IS NOT NULL;"}, {"question_id": 467, "answer_sql": "SELECT COUNT(DISTINCT Student_Events.student_id), Ref_Event_Types.event_type_code, Ref_Event_Types.event_type_description FROM Student_Events JOIN Ref_Event_Types ON Student_Events.event_type_code = Ref_Event_Types.event_type_code GROUP BY Student_Events.event_type_code, Ref_Event_Types.event_type_description ORDER BY COUNT(DISTINCT Student_Events.student_id) DESC;"}, {"question_id": 468, "answer_sql": "SELECT Ref_Event_Types.event_type_code, COUNT(Students.student_id) as Number_of_Students, Ref_Event_Types.event_type_description FROM Student_Events JOIN Students ON Student_Events.student_id = Students.student_id JOIN Ref_Event_Types ON Student_Events.event_type_code = Ref_Event_Types.event_type_code GROUP BY Ref_Event_Types.event_type_code, Ref_Event_Types.event_type_description ORDER BY Number_of_Students DESC;"}, {"question_id": 469, "answer_sql": "SELECT A.achievement_type_description, A.achievement_details, A.other_details FROM Achievements A JOIN Ref_Achievement_Type R ON A.achievement_type_code = R.achievement_type_code WHERE A.student_id = 1 ORDER BY R.achievement_type_description;"}, {"question_id": 470, "answer_sql": "SELECT A.achievement_type_description, A.achievement_details, A.other_details FROM Achievements A JOIN Ref_Achievement_Type RT ON A.achievement_type_code = RT.achievement_type_code ORDER BY A.achievement_type_description;"}, {"question_id": 471, "answer_sql": "SELECT COUNT(DISTINCT Teachers.teacher_id) FROM Teachers INNER JOIN Classes ON Teachers.teacher_id = Classes.teacher_id INNER JOIN Students ON Classes.student_id = Students.student_id INNER JOIN Detention ON Students.student_id = Detention.student_id INNER JOIN Achievements ON Students.student_id = Achievements.student_id WHERE Detention.detention_id NOT IN (SELECT detention_id FROM Achievements) AND Achievements.achievement_id IS NULL;"}, {"question_id": 472, "answer_sql": "SELECT COUNT(*) FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id JOIN Students s ON c.student_id = s.student_id JOIN Detention d ON s.student_id = d.student_id LEFT JOIN Achievements a ON s.student_id = a.student_id WHERE a.achievement_id IS NULL;"}, {"question_id": 473, "answer_sql": "SELECT `date_of_transcript`, `transcript_details` FROM `Transcripts` WHERE `student_id` IN (SELECT `student_id` FROM `Students` WHERE `bio_data` LIKE '%John Doe%');"}, {"question_id": 474, "answer_sql": "SELECT Transcripts.date_of_transcript, Transcripts.transcript_details FROM Transcripts JOIN Students ON Transcripts.student_id = Students.student_id JOIN Behaviour_Monitoring ON Transcripts.student_id = Behaviour_Monitoring.student_id JOIN Addresses ON Transcripts.student_id = Addresses.address_id JOIN Ref_Achievement_Type ON Transcripts.student_id = Achievements.student_id JOIN Ref_Address_Types ON Transcripts.student_id = Students_Addresses.address_id JOIN Detention ON Transcripts.student_id = Detention.student_id JOIN Teachers ON Transcripts.student_id = Classes.teacher_id JOIN Student_Loans ON Transcripts.student_id = Student_Loans.student_id WHERE Transcripts.date_of_transcript IS NOT NULL;"}, {"question_id": 475, "answer_sql": "SELECT Ref_Achievement_Type.achievement_type_code, Ref_Achievement_Type.achievement_type_description, Achievements.date_achievement, Achievements.achievement_details FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code ORDER BY Ref_Achievement_Type.achievement_type_code;"}, {"question_id": 476, "answer_sql": "SELECT `achievement_type_code`, `achievement_type_description`, `date_achievement`, `achievement_details`, `other_details` FROM `Achievements` ```"}, {"question_id": 477, "answer_sql": "SELECT D.datetime_detention_start, D.datetime_detention_end FROM Detention D JOIN Students_Addresses SA ON D.student_id = SA.student_id JOIN Students S ON SA.student_id = S.student_id WHERE S.student_id = 1;"}, {"question_id": 478, "answer_sql": "SELECT D.datetime_detention_start, D.datetime_detention_end FROM Detention D JOIN Students_Addresses SA ON D.student_id = SA.student_id WHERE SA.address_type_code = 'detention' AND SA.date_from <= CURRENT_TIMESTAMP AND SA.date_to >= CURRENT_TIMESTAMP;"}, {"question_id": 479, "answer_sql": "SELECT `bio_data` FROM `Students` WHERE `bio_data` LIKE '%Suite%';"}, {"question_id": 480, "answer_sql": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%';"}, {"question_id": 481, "answer_sql": "SELECT Students.student_id, Students.bio_data, Teachers.teacher_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id"}, {"question_id": 482, "answer_sql": "SELECT Students.student_id, Students.bio_data, Teachers.teacher_id, Teachers.teacher_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id;"}, {"question_id": 483, "answer_sql": "SELECT t.teacher_id, COUNT(c.class_id) as total_classes_teached FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id GROUP BY t.teacher_id ORDER BY total_classes_teached DESC LIMIT 1;"}, {"question_id": 484, "answer_sql": "SELECT Teachers.teacher_id, COUNT(Classes.class_id) as Number_of_Courses FROM Classes INNER JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id GROUP BY Teachers.teacher_id ORDER BY Number_of_Courses DESC LIMIT 1;"}, {"question_id": 485, "answer_sql": "SELECT s.student_id, COUNT(DISTINCT c.class_id) as total_courses FROM Students s JOIN Classes c ON s.student_id = c.student_id GROUP BY s.student_id ORDER BY total_courses DESC LIMIT 1;"}, {"question_id": 486, "answer_sql": "SELECT Students.student_id, COUNT(Classes.class_id) as num_courses FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id ORDER BY num_courses DESC LIMIT 1;"}, {"question_id": 487, "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id, Students.bio_data, Students.student_details HAVING COUNT(Classes.class_id) = 2;"}, {"question_id": 488, "answer_sql": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students JOIN Classes ON Students.student_id = Classes.student_id JOIN Teachers ON Classes.teacher_id = Teachers.teacher_id GROUP BY Students.student_id, Students.bio_data, Students.student_details HAVING COUNT(DISTINCT Teachers.teacher_id) = 2;"}, {"question_id": 489, "answer_sql": "The least common detention type is Detention Type Code: D1, Description: D1 - Other ."}, {"question_id": 490, "answer_sql": "SELECT DISTINCT rdt.detention_type_code, rdt.detention_type_description FROM Ref_Detention_Type rdt JOIN Detention d ON d.detention_type_code = rdt.detention_type_code WHERE d.student_id IN ( SELECT student_id FROM Detention GROUP BY student_id HAVING COUNT(DISTINCT detention_id) = 1 ) ORDER BY COUNT(DISTINCT d.detention_id) ASC;"}, {"question_id": 491, "answer_sql": "SELECT Students.student_id, Students.bio_data, Students_Addresses.address_details, Classes.class_details, Student_Loans.amount_of_loan FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Classes ON Students.student_id = Classes.student_id JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan > (SELECT AVG(amount_of_loan) FROM Student_Loans) ORDER BY Student_Loans.amount_of_loan DESC;"}, {"question_id": 492, "answer_sql": "SELECT bio_data, student_details FROM Students WHERE student_id IN ( SELECT student_id FROM Student_Loans WHERE amount_of_loan > ( SELECT AVG(amount_of_loan) FROM Student_Loans ) );"}, {"question_id": 493, "answer_sql": "SELECT MIN(date_of_loan) as earliest_date_of_loan FROM Student_Loans;"}, {"question_id": 494, "answer_sql": "SELECT MIN(`date_of_loan`) as earliest_date_of_loan FROM Student_Loans;"}, {"question_id": 495, "answer_sql": "SELECT S.student_id, S.bio_data FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id WHERE SL.amount_of_loan = (SELECT MIN(amount_of_loan) FROM Student_Loans) ;"}, {"question_id": 496, "answer_sql": "SELECT bio_data FROM Students WHERE student_id IN (SELECT student_id FROM Student_Loans ORDER BY student_loan_id ASC LIMIT 1);"}, {"question_id": 497, "answer_sql": "SELECT Transcripts.date_of_transcript FROM Transcripts JOIN Student_Loans ON Transcripts.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan = (SELECT MAX(amount_of_loan) FROM Student_Loans) ORDER BY Transcripts.date_of_transcript DESC;"}, {"question_id": 498, "answer_sql": "SELECT Transcripts.date_of_transcript FROM Transcripts JOIN Students_Addresses ON Transcripts.student_id = Students_Addresses.student_id JOIN Students ON Students_Addresses.student_id = Students.student_id JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Students.student_id = ( SELECT student_id FROM Student_Loans ORDER BY amount_of_loan DESC LIMIT 1 );"}, {"question_id": 499, "answer_sql": "SELECT t.teacher_details FROM Teachers t JOIN Students_Addresses sa ON t.teacher_id = sa.address_id JOIN Students s ON sa.student_id = s.student_id JOIN Transcripts tt ON s.student_id = tt.student_id WHERE sa.date_from = (SELECT MIN(date_from) FROM Students_Addresses)"}, {"question_id": 500, "answer_sql": "SELECT t.teacher_details FROM Teachers t JOIN Classes c ON t.teacher_id = c.teacher_id JOIN Students_Addresses sa ON c.class_id = sa.class_id JOIN Students s ON sa.student_id = s.student_id JOIN Transcripts t1 ON s.student_id = t1.student_id WHERE t1.date_of_transcript = (SELECT MIN(date_of_transcript) FROM Transcripts) ```"}, {"question_id": 501, "answer_sql": "SELECT S.student_id, SUM(SL.amount_of_loan) as total_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id GROUP BY S.student_id ORDER BY total_loan DESC;"}, {"question_id": 502, "answer_sql": "SELECT Students.student_id, SUM(Student_Loans.amount_of_loan) as total_loan_amount FROM Students LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id GROUP BY Students.student_id;"}, {"question_id": 503, "answer_sql": "SELECT Students.student_id, Students.bio_data, COUNT(Classes.class_id) as course_count FROM Students LEFT JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id, Students.bio_data;"}, {"question_id": 504, "answer_sql": "SELECT Students.student_id, Students.bio_data, COUNT(Classes.class_id) AS number_of_courses FROM Students LEFT JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id, Students.bio_data;"}, {"question_id": 505, "answer_sql": "SELECT COUNT(*) FROM Detention;"}, {"question_id": 506, "answer_sql": "SELECT COUNT(*) FROM Students WHERE EXISTS (SELECT 1 FROM Detention WHERE Detention.student_id = Students.student_id);"}, {"question_id": 507, "answer_sql": "SELECT `address_type_code`, `address_type_description` FROM `Ref_Address_Types` WHERE `address_type_code` = (SELECT `address_type_code` FROM `Students_Addresses` WHERE `student_id` = (SELECT `student_id` FROM `Student_Events` WHERE `event_type_code` = 'ST'));"}, {"question_id": 508, "answer_sql": "SELECT a.address_type_code, a.address_type_description FROM Students_Addresses sa JOIN Addresses a ON sa.address_id = a.address_id GROUP BY a.address_type_code, a.address_type_description ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 509, "answer_sql": "SELECT Students.bio_data FROM Students LEFT JOIN Student_Events ON Students.student_id = Student_Events.student_id LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Events.student_id IS NULL AND Student_Loans.student_loan_id IS NULL;"}, {"question_id": 510, "answer_sql": "SELECT Students.bio_data FROM Students LEFT JOIN Student_Events ON Students.student_id = Student_Events.student_id LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.student_id IS NULL;"}, {"question_id": 511, "answer_sql": "SELECT S.student_id, SA.date_from, SA.date_to FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Transcripts T1 ON S.student_id = T1.student_id JOIN Transcripts T2 ON S.student_id = T2.student_id WHERE T1.transcript_id < T2.transcript_id"}, {"question_id": 512, "answer_sql": "SELECT Students_Addresses.date_from, Students_Addresses.date_to FROM Students_Addresses JOIN Students ON Students_Addresses.student_id = Students.student_id JOIN Transcripts ON Students.student_id = Transcripts.student_id WHERE Transcripts.transcript_id IN ( SELECT Transcripts.transcript_id FROM Transcripts WHERE Transcripts.date_of_transcript = '2022-01-01' )"}, {"question_id": 513, "answer_sql": "SELECT datetime_detention_start FROM Detention;"}, {"question_id": 514, "answer_sql": "SELECT datetime_detention_start FROM Detention;"}, {"question_id": 515, "answer_sql": "SELECT Name FROM Author;"}, {"question_id": 516, "answer_sql": "SELECT Name FROM Author;"}, {"question_id": 517, "answer_sql": "SELECT Name, Address FROM Client;"}, {"question_id": 518, "answer_sql": "SELECT Name, Address FROM Client;"}, {"question_id": 519, "answer_sql": "SELECT B.Title, B.ISBN, B.SalePrice FROM Book B JOIN Author_Book AB ON B.Author = AB.Author JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name = 'Herman Melville';"}, {"question_id": 520, "answer_sql": "SELECT Title, ISBN, SalePrice FROM Book;"}, {"question_id": 521, "answer_sql": "SELECT COUNT(*) FROM `Book`;"}, {"question_id": 522, "answer_sql": "SELECT COUNT(*) FROM `Book`;"}, {"question_id": 523, "answer_sql": "SELECT COUNT(*) FROM Author;"}, {"question_id": 524, "answer_sql": "SELECT COUNT(*) FROM Author;"}, {"question_id": 525, "answer_sql": "SELECT COUNT(*) FROM Client;"}, {"question_id": 526, "answer_sql": "SELECT COUNT(*) FROM Client;"}, {"question_id": 527, "answer_sql": "SELECT Name, Address FROM Client ORDER BY Name;"}, {"question_id": 528, "answer_sql": "SELECT Name, Address FROM Client ORDER BY Name;"}, {"question_id": 529, "answer_sql": "SELECT B.Title, A.Name FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor;"}, {"question_id": 530, "answer_sql": "SELECT B.Title, A.Name FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor;"}, {"question_id": 531, "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient;"}, {"question_id": 532, "answer_sql": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient;"}, {"question_id": 533, "answer_sql": "SELECT A.Name, COUNT(B.ISBN) as NumberOfBooks FROM Author A JOIN Author_Book AB ON A.idAuthor = AB.Author JOIN Book B ON AB.ISBN = B.ISBN GROUP BY A.Name;"}, {"question_id": 534, "answer_sql": "SELECT A.Name, COUNT(B.ISBN) as NumberOfBooks FROM Author A JOIN Author_Book AB ON A.idAuthor = AB.Author JOIN Book B ON AB.ISBN = B.ISBN GROUP BY A.Name;"}, {"question_id": 535, "answer_sql": "SELECT B.ISBN, COUNT(B.ISBN) as NumOrders FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor JOIN Books_Order BO ON B.ISBN = BO.ISBN JOIN Orders O ON BO.IdOrder = O.IdOrder GROUP BY B.ISBN;"}, {"question_id": 536, "answer_sql": "SELECT B.ISBN, COUNT(B.ISBN) as 'Times Ordered' FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN GROUP BY B.ISBN;"}, {"question_id": 537, "answer_sql": "SELECT B.ISBN, SUM(B.amount) as TotalAmountOrdered FROM Books_Order B JOIN Orders O ON B.IdOrder = O.IdOrder GROUP BY B.ISBN;"}, {"question_id": 538, "answer_sql": "SELECT B.ISBN, SUM(B.amount) as TotalAmountOrdered FROM Books_Order B JOIN Orders O ON B.IdOrder = O.IdOrder GROUP BY B.ISBN;"}, {"question_id": 539, "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE BO.amount = (SELECT MAX(amount) FROM Books_Order);"}, {"question_id": 540, "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE bo.amount = (SELECT MAX(amount) FROM Books_Order);"}, {"question_id": 541, "answer_sql": "SELECT B.Title, B.PurchasePrice FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name = 'Greatest' ORDER BY (SELECT COUNT(*) FROM Books_Order WHERE ISBN = B.ISBN) DESC LIMIT 1;"}, {"question_id": 542, "answer_sql": "SELECT B.Title, B.PurchasePrice FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN JOIN Orders O ON BO.IdOrder = O.IdOrder WHERE O.DateExped = ( SELECT MAX(DateExped) FROM Orders ) GROUP BY B.Title, B.PurchasePrice ORDER BY SUM(BO.amount) DESC LIMIT 1;"}, {"question_id": 543, "answer_sql": "SELECT B.Title FROM `Book` B JOIN `Author_Book` AB ON B.ISBN = AB.ISBN JOIN `Books_Order` BO ON B.ISBN = BO.ISBN WHERE BO.IdOrder IN (SELECT IdOrder FROM `Orders`);"}, {"question_id": 544, "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE bo.IdOrder IN (SELECT IdOrder FROM Orders WHERE DateExped > CURRENT_DATE)"}, {"question_id": 545, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name HAVING COUNT(Orders.IdOrder) > 0;"}, {"question_id": 546, "answer_sql": "SELECT DISTINCT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient;"}, {"question_id": 547, "answer_sql": "SELECT Client.Name, COUNT(Orders.IdOrder) as NumOrders FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name;"}, {"question_id": 548, "answer_sql": "SELECT Client.Name, COUNT(Orders.IdOrder) FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name;"}, {"question_id": 549, "answer_sql": "SELECT Name FROM Client WHERE IdClient=(SELECT IdClient FROM Orders ORDER BY IdOrder DESC LIMIT 1);"}, {"question_id": 550, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name ORDER BY COUNT(Orders.IdOrder) DESC LIMIT 1;"}, {"question_id": 551, "answer_sql": "SELECT Client.Name, SUM(Books_Order.amount) as Total_Amount FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Author_Book ON Orders.IdClient = Author_Book.ISBN JOIN Books_Order ON Author_Book.ISBN = Books_Order.ISBN GROUP BY Client.Name;"}, {"question_id": 552, "answer_sql": "SELECT Client.Name, SUM(Books_Order.amount) as Total_Books_Ordered FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Author_Book ON Orders.IdOrder = Author_Book.IdOrder JOIN Books_Order ON Author_Book.ISBN = Books_Order.ISBN GROUP BY Client.Name;"}, {"question_id": 553, "answer_sql": "SELECT c.Name FROM Client c JOIN Orders o ON c.IdClient = o.IdClient JOIN Books_Order bo ON o.IdOrder = bo.IdOrder JOIN Book b ON bo.ISBN = b.ISBN WHERE b.PurchasePrice > 0 GROUP BY c.Name ORDER BY SUM(b.SalePrice * bo.amount) DESC LIMIT 1;"}, {"question_id": 554, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.SalePrice > 0 GROUP BY Client.Name ORDER BY SUM(Book.SalePrice * Books_Order.amount) DESC LIMIT 1;"}, {"question_id": 555, "answer_sql": "SELECT Title FROM Book WHERE ISBN NOT IN (SELECT ISBN FROM Orders);"}, {"question_id": 556, "answer_sql": "SELECT Title FROM Book WHERE ISBN NOT IN (SELECT ISBN FROM Books_Order);"}, {"question_id": 557, "answer_sql": "SELECT Name FROM Client WHERE IdClient NOT IN (SELECT IdClient FROM Orders);"}, {"question_id": 558, "answer_sql": "SELECT Name FROM Client WHERE IdClient NOT IN (SELECT IdClient FROM Orders);"}, {"question_id": 559, "answer_sql": "SELECT MAX(SalePrice), MIN(SalePrice) FROM Book;"}, {"question_id": 560, "answer_sql": "SELECT MAX(SalePrice), MIN(SalePrice) FROM `Book`;"}, {"question_id": 561, "answer_sql": "SELECT AVG(PurchasePrice) AS Average_Purchase_Price, AVG(SalePrice) AS Average_Sale_Price FROM Book;"}, {"question_id": 562, "answer_sql": "SELECT AVG(PurchasePrice) AS AvgPurchasePrice, AVG(SalePrice) AS AvgSalePrice FROM `Book`;"}, {"question_id": 563, "answer_sql": "SELECT MAX(SalePrice) - MAX(PurchasePrice) as Difference FROM Book;"}, {"question_id": 564, "answer_sql": "SELECT MAX(SalePrice - PurchasePrice) as Difference FROM Book;"}, {"question_id": 565, "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book);"}, {"question_id": 566, "answer_sql": "SELECT Title FROM Book WHERE SalePrice > (SELECT AVG(SalePrice) FROM Book);"}, {"question_id": 567, "answer_sql": "SELECT Title FROM Book b JOIN Author_Book ab ON b.Author = ab.Author JOIN Books_Order bo ON b.ISBN = bo.ISBN WHERE b.SalePrice = (SELECT MIN(SalePrice) FROM Book) ORDER BY Title;"}, {"question_id": 568, "answer_sql": "SELECT b.Title FROM Book b JOIN Author_Book ab ON b.ISBN = ab.ISBN WHERE b.SalePrice = (SELECT MIN(SalePrice) FROM Book);"}, {"question_id": 569, "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE B.PurchasePrice = ( SELECT MAX(PurchasePrice) FROM Book WHERE PurchasePrice <> 0 ) ORDER BY B.Title;"}, {"question_id": 570, "answer_sql": "SELECT Title FROM Book WHERE PurchasePrice = (SELECT MAX(PurchasePrice) FROM Book)"}, {"question_id": 571, "answer_sql": "SELECT AVG(SalePrice) FROM Book JOIN Author_Book ON Book.Author = Author_Book.Author WHERE Author_Book.Name = 'George Orwell';"}, {"question_id": 572, "answer_sql": "SELECT AVG(SalePrice) FROM `Book` WHERE Author='George Orwell';"}, {"question_id": 573, "answer_sql": "SELECT SalePrice FROM Book WHERE Author = 'Plato';"}, {"question_id": 574, "answer_sql": "SELECT SalePrice FROM Book WHERE Author = 'Plato';"}, {"question_id": 575, "answer_sql": "SELECT `Book`.Title FROM `Book` JOIN `Author_Book` ON `Book`.ISBN = `Author_Book`.ISBN JOIN `Author` ON `Author_Book`.Author = `Author`.idAuthor WHERE `Author`.Name = 'George Orwell' ORDER BY `SalePrice` ASC LIMIT 1;"}, {"question_id": 576, "answer_sql": "SELECT Title FROM Book JOIN Author_Book ON Book.Author = Author_Book.Author WHERE Author = 'George Orwell' ORDER BY SalePrice ASC LIMIT 1;"}, {"question_id": 577, "answer_sql": "SELECT Title FROM Book JOIN Author_Book ON Book.Author = Author_Book.Author JOIN Author ON Author_Book.Author = Author.idAuthor JOIN Books_Order ON Book.ISBN = Books_Order.ISBN WHERE Book.SalePrice < (SELECT AVG(SalePrice) FROM Book) AND Book.Title = 'Plato' ORDER BY Book.SalePrice DESC LIMIT 1;"}, {"question_id": 578, "answer_sql": "SELECT Title FROM Book JOIN Author_Book ON Book.Author = Author_Book.Author WHERE Author = 'Plato' AND SalePrice < (SELECT AVG(SalePrice) FROM Book);"}, {"question_id": 579, "answer_sql": "SELECT `Author`.Name FROM `Author` INNER JOIN `Author_Book` ON `Author`.idAuthor = `Author_Book`.Author WHERE `Book`.Title = 'Pride and Prejudice';"}, {"question_id": 580, "answer_sql": "SELECT `Author`.Name FROM `Author` JOIN `Author_Book` ON `Author`.idAuthor = `Author_Book`.Author JOIN `Book` ON `Book`.ISBN = `Author_Book`.ISBN WHERE `Book`.Title = 'Pride and Prejudice';"}, {"question_id": 581, "answer_sql": "SELECT Title FROM Book JOIN Author_Book ON Book.Author = Author_Book.Author WHERE Author_Book.Name LIKE '%Plato%';"}, {"question_id": 582, "answer_sql": "SELECT Title FROM Book WHERE Author = (SELECT idAuthor FROM Author WHERE Name LIKE '%Plato%');"}, {"question_id": 583, "answer_sql": "SELECT COUNT(*) FROM Orders JOIN Author_Book ON Orders.IdClient = Author_Book.ISBN JOIN Book ON Author_Book.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';"}, {"question_id": 584, "answer_sql": "SELECT COUNT(*) FROM `Orders` WHERE `Title` = 'Pride and Prejudice';"}, {"question_id": 585, "answer_sql": "SELECT IdOrder FROM Orders WHERE Title IN ('Pride and Prejudice', 'The Little Prince');"}, {"question_id": 586, "answer_sql": "SELECT IdOrder FROM Orders JOIN Author_Book ON Orders.IdClient = Author_Book.ISBN JOIN Book ON Author_Book.ISBN = Book.ISBN WHERE Book.Title IN ('Pride and Prejudice', 'The Little Prince');"}, {"question_id": 587, "answer_sql": "SELECT B.ISBN FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor WHERE A.Name IN ('Peter Doe', 'James Smith')"}, {"question_id": 588, "answer_sql": "SELECT B.ISBN FROM Book B JOIN Author_Book AB ON B.Author = AB.Author JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE B.Title IN ( SELECT B.Title FROM Book B JOIN Author_Book AB ON B.Author = AB.Author WHERE B.Author IN ( SELECT A.idAuthor FROM Author A WHERE A.Name IN ('Peter Doe', 'James Smith') ) ) AND BO.IdOrder IN ( SELECT O.IdOrder FROM Orders O WHERE O.IdClient IN ( SELECT C.IdClient FROM Client C WHERE C.Name IN ('Peter Doe', 'James Smith') ) );"}, {"question_id": 589, "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON AB.Author = A.idAuthor JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE A.Name = 'Peter Doe' AND BO.IdOrder NOT IN ( SELECT IdOrder FROM Orders WHERE Client.Name = 'James Smith' ) This SQL query will return the titles of the books that are ordered by Peter Doe but not by James Smith."}, {"question_id": 590, "answer_sql": "SELECT B.Title FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Books_Order BO ON B.ISBN = BO.ISBN WHERE AB.Author = (SELECT idAuthor FROM Author WHERE Name = 'Peter Doe') AND BO.IdOrder NOT IN (SELECT IdOrder FROM Orders WHERE IdClient = 'James Smith') This SQL query will return the titles of the books that the client 'Peter Doe' ordered, but the client 'James Smith' did not."}, {"question_id": 591, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';"}, {"question_id": 592, "answer_sql": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';"}, {"question_id": 593, "answer_sql": "SELECT COUNT(*) FROM book;"}, {"question_id": 594, "answer_sql": "SELECT Title FROM book ORDER BY Title ASC;"}, {"question_id": 595, "answer_sql": "SELECT Title FROM book ORDER BY Pages DESC;"}, {"question_id": 596, "answer_sql": "SELECT Type , Release FROM book ;"}, {"question_id": 597, "answer_sql": "SELECT b. Chapters , MAX(b. Chapters ) OVER() AS max_chapters, MIN(b. Chapters ) OVER() AS min_chapters FROM book b"}, {"question_id": 598, "answer_sql": "SELECT Title FROM book WHERE Type != 'Poet';"}, {"question_id": 599, "answer_sql": "SELECT AVG( Rating ) FROM review ;"}, {"question_id": 600, "answer_sql": "SELECT b.Title, r.Rating FROM book b JOIN review r ON b.Book_ID = r.Book_ID;"}, {"question_id": 601, "answer_sql": "SELECT b.Title, r.Rating FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE b.Chapters = (SELECT MAX(Chapters) FROM book)"}, {"question_id": 602, "answer_sql": "SELECT `Rank` FROM `book` WHERE `Pages`=(SELECT MIN(`Pages`) FROM `book`);"}, {"question_id": 603, "answer_sql": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE r.Rank = (SELECT MAX(Rank) FROM review)"}, {"question_id": 604, "answer_sql": "SELECT AVG( Readers_in_Million ) FROM review WHERE Type = 'Novel';"}, {"question_id": 605, "answer_sql": "SELECT Type, COUNT(*) as Number_of_Books FROM book GROUP BY Type;"}, {"question_id": 606, "answer_sql": "SELECT Type, COUNT(*) as Total_Books FROM book GROUP BY Type ORDER BY Total_Books DESC LIMIT 1;"}, {"question_id": 607, "answer_sql": "SELECT b.Type FROM book b WHERE b.Book_ID IN ( SELECT r.Book_ID FROM review r GROUP BY r.Book_ID HAVING COUNT(r.Book_ID) >= 3 )"}, {"question_id": 608, "answer_sql": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID ORDER BY r.Rating ASC;"}, {"question_id": 609, "answer_sql": "SELECT b.Title, b.Audio FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE r.Readers_in_Million DESC ORDER BY b.Title;"}, {"question_id": 610, "answer_sql": "SELECT COUNT(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review);"}, {"question_id": 611, "answer_sql": "SELECT b.Type FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE b.Chapters > 75 AND b.Chapters < 50;"}, {"question_id": 612, "answer_sql": "SELECT DISTINCT Type FROM book ;"}, {"question_id": 613, "answer_sql": "SELECT Title, Type FROM book WHERE Rating IS NULL;"}, {"question_id": 614, "answer_sql": "SELECT COUNT(*) FROM customer;"}, {"question_id": 615, "answer_sql": "SELECT COUNT(*) FROM customer;"}, {"question_id": 616, "answer_sql": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC;"}, {"question_id": 617, "answer_sql": "SELECT Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID JOIN branch ON customer_order.Branch_ID = branch.Branch_ID WHERE customer.Level_of_Membership < 100 ORDER BY customer.Level_of_Membership ASC;"}, {"question_id": 618, "answer_sql": "SELECT customer . Name , customer . Nationality , customer . Card_Credit FROM customer ```"}, {"question_id": 619, "answer_sql": "SELECT customer . Name , customer . Nationality , customer . Card_Credit FROM customer JOIN customer_order ON customer . Customer_ID = customer_order . Customer_ID JOIN branch ON customer_order . Branch_ID = branch . Branch_ID GROUP BY customer . Customer_ID ;"}, {"question_id": 620, "answer_sql": "SELECT Name FROM customer WHERE Nationality IN ('England', 'Australia');"}, {"question_id": 621, "answer_sql": "SELECT Name FROM customer WHERE Nationality = 'England' OR Nationality = 'Australia';"}, {"question_id": 622, "answer_sql": "SELECT AVG( Card_Credit ) FROM `customer` WHERE `Level_of_Membership` > 1;"}, {"question_id": 623, "answer_sql": "SELECT AVG( Card_Credit ) FROM `customer` WHERE `Level_of_Membership` > 1;"}, {"question_id": 624, "answer_sql": "SELECT `Customer_ID`, `Card_Credit` FROM `customer` WHERE `Level_of_Membership` = (SELECT MAX(`Level_of_Membership`) FROM `customer`);"}, {"question_id": 625, "answer_sql": "SELECT `customer`.`Card_Credit` FROM `customer` WHERE `customer`.`Level_of_Membership` = ( SELECT MAX(`customer`.`Level_of_Membership`) FROM `customer` );"}, {"question_id": 626, "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality;"}, {"question_id": 627, "answer_sql": "SELECT c.Nationality, COUNT(c.Customer_ID) as Number_of_Customers FROM customer c GROUP BY c.Nationality;"}, {"question_id": 628, "answer_sql": "SELECT c.Nationality, COUNT(*) as 'Number of Customers' FROM customer c GROUP BY c.Nationality ORDER BY 'Number of Customers' DESC LIMIT 1;"}, {"question_id": 629, "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality ORDER BY Number_of_Customers DESC LIMIT 1;"}, {"question_id": 630, "answer_sql": "SELECT DISTINCT `Nationality` FROM `customer` WHERE `Card_Credit` < 50 AND `Card_Credit` > 75;"}, {"question_id": 631, "answer_sql": "SELECT c.Name, c.Nationality FROM customer c JOIN ( SELECT Customer_ID FROM customer WHERE Card_Credit > 50 AND Card_Credit < 75 GROUP BY Customer_ID HAVING COUNT(*) = ( SELECT COUNT(*) FROM customer WHERE Card_Credit > 50 AND Card_Credit < 75 ) ) sub ON c.Customer_ID = sub.Customer_ID"}, {"question_id": 632, "answer_sql": "SELECT `customer`.`Name`, `customer_order`.`Dish_Name` FROM `customer` JOIN `customer_order` ON `customer`.`Customer_ID` = `customer_order`.`Customer_ID` WHERE `customer_order`.`Branch_ID` = 1;"}, {"question_id": 633, "answer_sql": "SELECT c.Name, co.Dish_Name FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID"}, {"question_id": 634, "answer_sql": "SELECT c.Name, co.Dish_Name, co.Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID JOIN branch b ON co.Branch_ID = b.Branch_ID WHERE co.Dish_Name IN ( SELECT Dish_Name FROM customer_order GROUP BY Dish_Name HAVING COUNT(*) = ( SELECT COUNT(*) FROM customer_order WHERE Customer_ID = co.Customer_ID AND Branch_ID = co.Branch_ID GROUP BY Dish_Name ORDER BY COUNT(*) DESC LIMIT 1 ) ) ORDER BY co.Quantity DESC;"}, {"question_id": 635, "answer_sql": "SELECT c.Name, co.Dish_Name, co.Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY co.Dish_Name, c.Name ORDER BY co.Quantity DESC;"}, {"question_id": 636, "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name;"}, {"question_id": 637, "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name;"}, {"question_id": 638, "answer_sql": "SELECT c.Name, SUM(co.Quantity) as Total_Quantity FROM customer c JOIN customer_order co ON c.Customer_ID = co.Customer_ID GROUP BY c.Name HAVING Total_Quantity > 1;"}, {"question_id": 639, "answer_sql": "SELECT c.Name FROM customer c JOIN ( SELECT Customer_ID, SUM(Quantity) as Total_Quantity FROM customer_order GROUP BY Customer_ID ) o ON c.Customer_ID = o.Customer_ID WHERE o.Total_Quantity > 1;"}, {"question_id": 640, "answer_sql": "SELECT DISTINCT Manager FROM branch;"}, {"question_id": 641, "answer_sql": "SELECT DISTINCT Manager FROM branch;"}, {"question_id": 642, "answer_sql": "SELECT c.Name FROM customer c LEFT JOIN customer_order co ON c.Customer_ID = co.Customer_ID WHERE co.Customer_ID IS NULL;"}, {"question_id": 643, "answer_sql": "SELECT c.Name FROM customer c WHERE NOT EXISTS (SELECT 1 FROM customer_order co WHERE co.Customer_ID = c.Customer_ID);"}, {"question_id": 644, "answer_sql": "SELECT COUNT(*) FROM member;"}, {"question_id": 645, "answer_sql": "SELECT Name FROM member ORDER BY Age ASC;"}, {"question_id": 646, "answer_sql": "SELECT Name , Nationality FROM member ;"}, {"question_id": 647, "answer_sql": "SELECT Name FROM member WHERE Nationality != 'England';"}, {"question_id": 648, "answer_sql": "SELECT Name FROM member WHERE Age IN (19, 20);"}, {"question_id": 649, "answer_sql": "SELECT Name FROM member WHERE Age = (SELECT MIN(Age) FROM member);"}, {"question_id": 650, "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Members FROM member GROUP BY Nationality;"}, {"question_id": 651, "answer_sql": "SELECT Nationality, COUNT(*) as Number_of_Members FROM member GROUP BY Nationality ORDER BY Number_of_Members DESC;"}, {"question_id": 652, "answer_sql": "SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(*) >= 2;"}, {"question_id": 653, "answer_sql": "SELECT m.Name, c.Club_Name FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID;"}, {"question_id": 654, "answer_sql": "SELECT m.Name FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID WHERE c.Overall_Ranking > 100;"}, {"question_id": 655, "answer_sql": "SELECT m.Name FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID JOIN club c ON cl.Club_ID = c.Club_ID WHERE c.Team_Leader = 'Yes' AND c.Club_Name = 'Club Name' AND cl.Year_Join < '2018';"}, {"question_id": 656, "answer_sql": "SELECT m.Name FROM member m JOIN club_leader cll ON m.Member_ID = cll.Member_ID JOIN club c ON cll.Club_ID = c.Club_ID WHERE c.Club_Name = 'Houston'"}, {"question_id": 657, "answer_sql": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader);"}, {"question_id": 658, "answer_sql": "SELECT DISTINCT Nationality FROM member WHERE Age > 22 AND Age < 19;"}, {"question_id": 659, "answer_sql": "SELECT AVG(Age) FROM member m JOIN club_leader cl ON m.Member_ID = cl.Member_ID;"}, {"question_id": 660, "answer_sql": "SELECT Club_Name FROM club WHERE Club_Name LIKE '%state%';"}, {"question_id": 661, "answer_sql": "SELECT c.Collection_Subset_ID, c.Collection_Subset_Name FROM Collection_Subsets c JOIN Collection_Subset_Members cs ON c.Collection_Subset_ID = cs.Collection_Subset_ID GROUP BY c.Collection_Subset_ID, c.Collection_Subset_Name;"}, {"question_id": 662, "answer_sql": "SELECT c.Collection_Subset_Name FROM Collection_Subsets cs JOIN Collection_Subset_Members csm ON csm.Collection_Subset_ID = cs.Collection_Subset_ID JOIN Collections c ON c.Collection_ID = csm.Related_Collection_ID GROUP BY c.Collection_Subset_Name;"}, {"question_id": 663, "answer_sql": "SELECT c.Collection_Description FROM Collections c JOIN Collection_Subsets cs ON c.Collection_ID = cs.Collection_ID WHERE cs.Collection_Subset_Name = 'Top collection';"}, {"question_id": 664, "answer_sql": "SELECT c.Collection_Description FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Subset_Members dsm ON di.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Top collection';"}, {"question_id": 665, "answer_sql": "SELECT Document_Subsets.Document_Subset_Name FROM Document_Subsets"}, {"question_id": 666, "answer_sql": "SELECT Document_Subset_Name FROM Document_Subsets;"}, {"question_id": 667, "answer_sql": "SELECT Document_Subsets.Document_Subset_Details FROM Document_Subsets WHERE Document_Subsets.Document_Subset_Name = 'Best for 2000';"}, {"question_id": 668, "answer_sql": "SELECT Document_Subsets.Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000';"}, {"question_id": 669, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D"}, {"question_id": 670, "answer_sql": "SELECT Document_Object_ID FROM Document_Objects;"}, {"question_id": 671, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE D.Owner = 'Marlin' AND DS.Document_Subset_Name = 'Document Subset 1';"}, {"question_id": 672, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE D.Owner = 'Marlin';"}, {"question_id": 673, "answer_sql": "SELECT Owner FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Braeden Collection';"}, {"question_id": 674, "answer_sql": "SELECT D.Owner FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collections C ON DC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Braeden Collection';"}, {"question_id": 675, "answer_sql": "SELECT D.Owner FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DS.Related_Document_Object_ID JOIN Document_Subsets DS ON DS.Document_Subset_ID = DSM.Document_Subset_ID WHERE D.Owner = 'Marlin'"}, {"question_id": 676, "answer_sql": "SELECT D.Owner FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID WHERE D.Owner = 'Marlin'"}, {"question_id": 677, "answer_sql": "SELECT D.Description AS Parent_Document_Description FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID GROUP BY D.Description;"}, {"question_id": 678, "answer_sql": "SELECT D.Description FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Unique Description' GROUP BY D.Description;"}, {"question_id": 679, "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"}, {"question_id": 680, "answer_sql": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin';"}, {"question_id": 681, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE D.Parent_Document_Object_ID IS NULL;"}, {"question_id": 682, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE D.Parent_Document_Object_ID IS NULL;"}, {"question_id": 683, "answer_sql": "SELECT D.Document_Object_ID, COUNT(DMS.Related_Document_Object_ID) as Child_Documents FROM Document_Objects D JOIN Document_Subset_Members DMS ON D.Document_Object_ID = DMS.Document_Object_ID GROUP BY D.Document_Object_ID;"}, {"question_id": 684, "answer_sql": "SELECT D.Document_Object_ID, COUNT(D.Document_Object_ID) as Child_Documents FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID GROUP BY D.Document_Object_ID;"}, {"question_id": 685, "answer_sql": "SELECT Collection_Name FROM Collections;"}, {"question_id": 686, "answer_sql": "SELECT Collection_Subset_Name FROM Collection_Subsets"}, {"question_id": 687, "answer_sql": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Best';"}, {"question_id": 688, "answer_sql": "SELECT c.Collection_Description FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Objects do ON di.Document_Object_ID = do.Document_Object_ID JOIN Document_Subset_Members dsm ON do.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Best'"}, {"question_id": 689, "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Collections d ON c.Parent_Collection_ID = d.Collection_ID WHERE c.Collection_Name = 'Nice';"}, {"question_id": 690, "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Objects do ON di.Document_Object_ID = do.Document_Object_ID JOIN Document_Subset_Members dsm ON do.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Nice' GROUP BY c.Collection_Name;"}, {"question_id": 691, "answer_sql": "SELECT Collection_Subset_Name FROM Collection_Subsets WHERE Collection_Subset_ID NOT IN ( SELECT DISTINCT Collection_Subset_ID FROM Collections WHERE Parent_Collection_ID IS NOT NULL )"}, {"question_id": 692, "answer_sql": "SELECT c.Collection_Name FROM Collections c WHERE c.Parent_Collection_ID IS NULL"}, {"question_id": 693, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE EXISTS ( SELECT 1 FROM Document_Objects C WHERE D.Document_Object_ID = C.Parent_Document_Object_ID GROUP BY C.Document_Object_ID HAVING COUNT(*) > 1 );"}, {"question_id": 694, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D WHERE EXISTS ( SELECT 1 FROM Document_Objects C WHERE D.Document_Object_ID <> C.Document_Object_ID AND C.Parent_Document_Object_ID = D.Document_Object_ID )"}, {"question_id": 695, "answer_sql": "SELECT COUNT(*) FROM Collections WHERE Collection_Name = 'Best'"}, {"question_id": 696, "answer_sql": "SELECT COUNT(*) FROM Collections WHERE Collection_Name = 'Best';"}, {"question_id": 697, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DS.Document_Subset_ID = DSM.Document_Subset_ID WHERE D.Owner = 'Ransom' AND DS.Document_Subset_Name = 'Document_Subset_Name';"}, {"question_id": 698, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE D.Owner = 'Ransom' AND DS.Document_Subset_Name = 'Document_Subset_Name';"}, {"question_id": 699, "answer_sql": "SELECT c.Collection_Subset_ID, c.Collection_Subset_Name, COUNT(DISTINCT d.Collection_ID) as Number_of_Collections FROM Collection_Subset_Members AS cs JOIN Collection_Subsets AS c ON cs.Collection_Subset_ID = c.Collection_Subset_ID JOIN Collections AS d ON cs.Related_Collection_ID = d.Collection_ID GROUP BY c.Collection_Subset_ID, c.Collection_Subset_Name;"}, {"question_id": 700, "answer_sql": "SELECT Collection_Subset_ID, Collection_Subset_Name, COUNT(DISTINCT Related_Collection_ID) as Number_of_Collections FROM Collection_Subset_Members JOIN Collection_Subsets ON Collection_Subset_ID = Collection_Subset_ID GROUP BY Collection_Subset_ID, Collection_Subset_Name;"}, {"question_id": 701, "answer_sql": "SELECT D.Document_Object_ID, COUNT(D.Document_Object_ID) as Child_Count FROM Document_Objects D LEFT JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID LEFT JOIN Document_Subsets DS ON DS.Document_Subset_ID = DSM.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Child Document Subset' GROUP BY D.Document_Object_ID ORDER BY Child_Count DESC LIMIT 1;"}, {"question_id": 702, "answer_sql": "SELECT do.Document_Object_ID, COUNT(dsm.Related_Document_Object_ID) as Child_Count FROM Document_Objects do LEFT JOIN Document_Subset_Members dsm ON do.Document_Object_ID = dsm.Document_Object_ID GROUP BY do.Document_Object_ID;"}, {"question_id": 703, "answer_sql": "SELECT Document_Objects.Document_Object_ID, COUNT(Document_Subset_Members.Related_Document_Object_ID) as Related_Documents FROM Document_Objects LEFT JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID GROUP BY Document_Objects.Document_Object_ID ORDER BY Related_Documents ASC LIMIT 1;"}, {"question_id": 704, "answer_sql": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID ORDER BY COUNT(Documents_in_Collections.Document_Object_ID) ASC LIMIT 1;"}, {"question_id": 705, "answer_sql": "SELECT D.Document_Object_ID, COUNT(DMS.Related_Document_Object_ID) as Number_of_Related_Documents FROM Document_Objects D JOIN Document_Subset_Members DMS ON D.Document_Object_ID = DMS.Document_Object_ID JOIN Document_Subsets DS ON DMS.Document_Subset_ID = DS.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Document_Subset_Name' GROUP BY D.Document_Object_ID HAVING COUNT(DMS.Related_Document_Object_ID) BETWEEN 2 AND 4;"}, {"question_id": 706, "answer_sql": "SELECT D.Document_Object_ID, COUNT(D.Document_Object_ID) as Related_Documents FROM Document_Subset_Members DSM JOIN Document_Objects DO ON DO.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DS.Document_Subset_ID = DSM.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Name of the subset' GROUP BY D.Document_Object_ID HAVING COUNT(D.Document_Object_ID) BETWEEN 2 AND 4"}, {"question_id": 707, "answer_sql": "SELECT D.Owner FROM Document_Objects DO JOIN Documents_in_Collections DIc ON DO.Document_Object_ID = DIc.Document_Object_ID JOIN Document_Subset_Members DSM ON DO.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Related Documents' AND DO.Owner = 'Braeden';"}, {"question_id": 708, "answer_sql": "SELECT D.Owner FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DS.Related_Document_Object_ID JOIN Document_Subsets DS ON DS.Document_Subset_ID = DSM.Document_Subset_ID WHERE D.Owner = 'Braeden' GROUP BY D.Owner;"}, {"question_id": 709, "answer_sql": "SELECT D.Document_Subset_Name FROM Document_Objects DO JOIN Document_Subset_Members DSM ON DO.Document_Object_ID = DSM.Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DO.Owner = 'Braeden' GROUP BY D.Document_Subset_Name;"}, {"question_id": 710, "answer_sql": "SELECT D.Document_Subset_Name FROM Document_Subset_Members AS DS JOIN Document_Subsets AS D ON DS.Document_Subset_ID = D.Document_Subset_ID JOIN Document_Objects AS DO ON DS.Related_Document_Object_ID = DO.Document_Object_ID WHERE DO.Owner = 'Braeden' GROUP BY D.Document_Subset_Name;"}, {"question_id": 711, "answer_sql": "SELECT D.Document_Subset_ID, D.Document_Subset_Name, COUNT(DISTINCT D.Document_Object_ID) as Number_of_Documents FROM Document_Subset_Members DM JOIN Document_Subsets D ON DM.Document_Subset_ID = D.Document_Subset_ID GROUP BY D.Document_Subset_ID, D.Document_Subset_Name;"}, {"question_id": 712, "answer_sql": "SELECT D.Document_Subset_ID, D.Document_Subset_Name, COUNT(DISTINCT D.Document_Object_ID) as Number_of_Documents FROM Document_Subset_Members DSM JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID GROUP BY D.Document_Subset_ID, D.Document_Subset_Name;"}, {"question_id": 713, "answer_sql": "SELECT D.Document_Subset_ID, D.Document_Subset_Name, COUNT(DISTINCT D.Document_Object_ID) as Number_of_Documents FROM Document_Subset_Members DM JOIN Document_Subsets D ON DM.Document_Subset_ID = D.Document_Subset_ID GROUP BY D.Document_Subset_ID, D.Document_Subset_Name ORDER BY Number_of_Documents DESC LIMIT 1;"}, {"question_id": 714, "answer_sql": "SELECT D.Document_Subset_ID, D.Document_Subset_Name, COUNT(DISTINCT D.Document_Object_ID) as Number_of_Documents FROM Document_Subset_Members DM JOIN Document_Subsets D ON DM.Document_Subset_ID = D.Document_Subset_ID GROUP BY D.Document_Subset_ID, D.Document_Subset_Name ORDER BY Number_of_Documents DESC LIMIT 1;"}, {"question_id": 715, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Subsets DS JOIN Document_Subset_Members DSM ON DS.Document_Subset_ID = DSM.Document_Subset_ID JOIN Document_Objects DO ON DSM.Related_Document_Object_ID = DO.Document_Object_ID WHERE DS.Document_Subset_Name = 'Best for 2000';"}, {"question_id": 716, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Subsets DS JOIN Document_Subset_Members DSM ON DS.Document_Subset_ID = DSM.Document_Subset_ID JOIN Document_Objects DO ON DSM.Related_Document_Object_ID = DO.Document_Object_ID WHERE DS.Document_Subset_Name = 'Best for 2000'"}, {"question_id": 717, "answer_sql": "SELECT D.Document_Subset_Name, DSM.Related_Document_Object_ID FROM Document_Subset_Members AS DSM JOIN Document_Subsets AS DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID JOIN Document_Objects AS D ON DSM.Related_Document_Object_ID = D.Document_Object_ID WHERE D.Document_Object_ID = 1;"}, {"question_id": 718, "answer_sql": "SELECT D.Document_Subset_ID, D.Document_Subset_Name, D.Document_Object_ID FROM Document_Subset_Members AS DSM JOIN Document_Subsets AS DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID JOIN Document_Objects AS DO ON DSM.Related_Document_Object_ID = DO.Document_Object_ID WHERE DO.Document_Object_ID = ?;"}, {"question_id": 719, "answer_sql": "SELECT D.Document_Subset_Name FROM Document_Objects DO JOIN Documents_in_Collections DIc ON DO.Document_Object_ID = DIc.Document_Object_ID JOIN Collections C ON DIc.Collection_ID = C.Collection_ID JOIN Document_Subset_Members DSM ON DO.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DO.Owner = 'Ransom ' GROUP BY D.Document_Subset_Name;"}, {"question_id": 720, "answer_sql": "SELECT c.Collection_Name FROM Documents_in_Collections di JOIN Document_Objects do ON di.Document_Object_ID = do.Document_Object_ID JOIN Collections c ON di.Collection_ID = c.Collection_ID WHERE do.Owner = 'Ransom'"}, {"question_id": 721, "answer_sql": "SELECT D.Document_Object_ID, COUNT(C.Collection_ID) as Number_of_Collections FROM Document_Objects D JOIN Documents_in_Collections DI ON DI.Document_Object_ID = D.Document_Object_ID JOIN Collections C ON C.Collection_ID = DI.Collection_ID GROUP BY D.Document_Object_ID;"}, {"question_id": 722, "answer_sql": "SELECT D.Document_Object_ID, COUNT(C.Collection_ID) as Number_of_Collections FROM Document_Objects D JOIN Documents_in_Collections DI ON DI.Document_Object_ID = D.Document_Object_ID JOIN Collections C ON C.Collection_ID = DI.Collection_ID GROUP BY D.Document_Object_ID;"}, {"question_id": 723, "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best';"}, {"question_id": 724, "answer_sql": "SELECT COUNT(*) FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best';"}, {"question_id": 725, "answer_sql": "SELECT D.Document_Object_ID FROM Documents_in_Collections DI JOIN Documents_in_Collections DI2 ON DI.Document_Object_ID = DI2.Document_Object_ID JOIN Collections C ON DI.Collection_ID = C.Collection_ID JOIN Collections C2 ON DI2.Collection_ID = C2.Collection_ID WHERE C.Collection_Name = 'Best' GROUP BY D.Document_Object_ID;"}, {"question_id": 726, "answer_sql": "SELECT COUNT(D.Document_Object_ID) FROM Documents_in_Collections AS DC JOIN Documents_in_Collections AS D ON DC.Document_Object_ID = D.Document_Object_ID JOIN Document_Objects AS DO ON DC.Document_Object_ID = DO.Document_Object_ID JOIN Document_Subset_Members AS DSM ON DO.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets AS DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Best'"}, {"question_id": 727, "answer_sql": "SELECT c.Collection_ID, c.Collection_Name, COUNT(d.Document_Object_ID) as Number_of_Documents FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID LEFT JOIN Document_Objects d ON di.Document_Object_ID = d.Document_Object_ID GROUP BY c.Collection_ID, c.Collection_Name ORDER BY Number_of_Documents DESC LIMIT 1;"}, {"question_id": 728, "answer_sql": "SELECT C.Collection_ID, C.Collection_Name, COUNT(D.Document_Object_ID) as Number_of_Documents FROM Collections C JOIN Documents_in_Collections DI on C.Collection_ID = DI.Collection_ID JOIN Document_Objects D on DI.Document_Object_ID = D.Document_Object_ID WHERE C.Collection_Name = 'Best' GROUP BY C.Collection_ID, C.Collection_Name ORDER BY Number_of_Documents DESC LIMIT 1;"}, {"question_id": 729, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Subset_Members AS DS JOIN Document_Subsets AS DS2 ON DS.Document_Subset_ID = DS2.Document_Subset_ID JOIN Document_Objects AS D ON DS.Related_Document_Object_ID = D.Document_Object_ID JOIN Documents_in_Collections AS DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collections AS C ON DC.Collection_ID = C.Collection_ID WHERE DS2.Document_Subset_Name = 'Best' AND C.Collection_Name = 'Best'"}, {"question_id": 730, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Subset_Members AS DS JOIN Document_Subsets AS DS2 ON DS.Document_Subset_ID = DS2.Document_Subset_ID JOIN Document_Objects AS D ON DS.Related_Document_Object_ID = D.Document_Object_ID WHERE DS2.Document_Subset_Name = 'Best for 2000'"}, {"question_id": 731, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collections C ON DC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Best' AND NOT EXISTS ( SELECT 1 FROM Document_Subset_Members DSM JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE D.Document_Object_ID = DSM.Related_Document_Object_ID AND DS.Document_Subset_Name = 'Best' ) AND EXISTS ( SELECT 1 FROM Collection_Subset_Members CSM JOIN Collection_Subsets CSS ON CSM.Collection_Subset_ID = CSS.Collection_Subset_ID WHERE C.Collection_ID = CSM.Related_Collection_ID AND CSS.Collection_Subset_Name = 'Best' ) LIMIT 2000;"}, {"question_id": 732, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collections C ON DC.Collection_ID = C.Collection_ID WHERE C.Collection_Name = 'Best' AND NOT EXISTS ( SELECT 1 FROM Document_Subset_Members DSM JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE D.Document_Object_ID = DSM.Related_Document_Object_ID AND DS.Document_Subset_Name = 'Best for 2000' )"}, {"question_id": 733, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Objects D JOIN Document_Subset_Members DSM ON D.Document_Object_ID = DSM.Related_Document_Object_ID JOIN Document_Subsets DS ON DS.Document_Subset_ID = DSM.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Best' AND DS.Document_Subset_ID = 2000;"}, {"question_id": 734, "answer_sql": "SELECT D.Document_Object_ID FROM Document_Subsets DS JOIN Document_Subset_Members DSM ON DS.Document_Subset_ID = DSM.Document_Subset_ID JOIN Document_Objects DO ON DSM.Related_Document_Object_ID = DO.Document_Object_ID JOIN Documents_in_Collections DIc ON DO.Document_Object_ID = DIc.Document_Object_ID WHERE DS.Document_Subset_Name = 'Best for 2000' UNION SELECT CO.Collection_ID FROM Collection_Subsets CS JOIN Collection_Subset_Members CSS ON CS.Collection_Subset_ID = CSS.Collection_Subset_ID JOIN Collections CO ON CSS.Related_Collection_ID = CO.Collection_ID JOIN Documents_in_Collections DIc ON CO.Collection_ID = DIc.Collection_ID WHERE CO.Collection_Name = 'Best'"}, {"question_id": 735, "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Objects do ON di.Document_Object_ID = do.Document_Object_ID JOIN Document_Subset_Members dsm ON do.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Best'"}, {"question_id": 736, "answer_sql": "SELECT c.Collection_Name FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Objects do ON di.Document_Object_ID = do.Document_Object_ID JOIN Document_Subset_Members dsm ON do.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Best' GROUP BY c.Collection_Name;"}, {"question_id": 737, "answer_sql": "SELECT COUNT(*) FROM Collections WHERE Collection_Name = 'Best';"}, {"question_id": 738, "answer_sql": "SELECT COUNT(DISTINCT c.Collection_ID) as Number_of_Collections FROM Collections c JOIN Documents_in_Collections di ON c.Collection_ID = di.Collection_ID JOIN Document_Subset_Members dsm ON di.Document_Object_ID = dsm.Related_Document_Object_ID JOIN Document_Subsets ds ON dsm.Document_Subset_ID = ds.Document_Subset_ID WHERE ds.Document_Subset_Name = 'Best'"}, {"question_id": 739, "answer_sql": "SELECT c.Collection_Subset_ID, cs.Collection_Subset_Name FROM Collections c JOIN Collection_Subset_Members csm ON c.Collection_ID = csm.Collection_ID JOIN Collection_Subsets cs ON csm.Collection_Subset_ID = cs.Collection_Subset_ID WHERE c.Collection_Name = 'Best in' GROUP BY c.Collection_Subset_ID, cs.Collection_Subset_Name;"}, {"question_id": 740, "answer_sql": "SELECT cs.Collection_Subset_Name FROM Collection_Subsets cs JOIN Collection_Subset_Members csm ON cs.Collection_Subset_ID = csm.Collection_Subset_ID JOIN Collections c ON csm.Related_Collection_ID = c.Collection_ID WHERE c.Collection_Name = 'Best'"}, {"question_id": 741, "answer_sql": "SELECT COUNT(*) FROM `songs` WHERE `name` LIKE '%Love%';"}, {"question_id": 742, "answer_sql": "SELECT songs.name FROM songs ORDER BY songs.name ASC;"}, {"question_id": 743, "answer_sql": "SELECT name , language FROM songs ;"}, {"question_id": 744, "answer_sql": "SELECT MAX(voice_sound_quality) as max_score, MIN(voice_sound_quality) as min_score FROM performance_score;"}, {"question_id": 745, "answer_sql": "SELECT `performance_score`.`voice_sound_quality`, `performance_score`.`rhythm_tempo`, `performance_score`.`stage_presence` FROM `performance_score` JOIN `participants` ON `performance_score`.`participant_id` = `participants`.`id` WHERE `participants`.`name` = 'Freeway'"}, {"question_id": 746, "answer_sql": "SELECT id , language , original_artist FROM songs WHERE name != 'Love';"}, {"question_id": 747, "answer_sql": "SELECT name , original_artist FROM songs WHERE english_translation = 'All the streets of love';"}, {"question_id": 748, "answer_sql": "SELECT s.name, p.stage_presence FROM songs s JOIN performance_score ps ON s.id = ps.songs_id JOIN participants p ON ps.participant_id = p.id WHERE s.language = 'English' GROUP BY s.name, p.stage_presence ORDER BY p.stage_presence DESC;"}, {"question_id": 749, "answer_sql": "SELECT p.id, p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id GROUP BY p.id, p.name HAVING COUNT(DISTINCT songs_id) >= 2;"}, {"question_id": 750, "answer_sql": "SELECT p.id, p.name, p.popularity FROM participants p JOIN performance_score ps ON p.id = ps.participant_id GROUP BY p.id, p.name, p.popularity ORDER BY COUNT(DISTINCT songs_id) DESC;"}, {"question_id": 751, "answer_sql": "SELECT participants.id, participants.name FROM participants JOIN performance_score ON participants.id = performance_score.participant_id WHERE (performance_score.voice_sound_quality = 5 OR performance_score.rhythm_tempo = 5)"}, {"question_id": 752, "answer_sql": "SELECT `voice_sound_quality` FROM `performance_score` JOIN `songs` ON `performance_score`.`songs_id` = `songs`.`id` WHERE `songs`.`name` = 'The Balkan Girls' AND `songs`.`language` = 'English';"}, {"question_id": 753, "answer_sql": "SELECT s.id, s.name FROM songs s JOIN performance_score ps ON s.id = ps.songs_id JOIN participants p ON p.id = ps.participant_id WHERE p.popularity = ( SELECT MAX(popularity) FROM participants ) GROUP BY s.id, s.name ORDER BY COUNT(DISTINCT p.id) DESC, s.name;"}, {"question_id": 754, "answer_sql": "SELECT COUNT(*) FROM performance_score WHERE stage_presence < 7 OR stage_presence > 9;"}, {"question_id": 755, "answer_sql": "SELECT COUNT(*) FROM songs LEFT JOIN performance_score ON songs.id = performance_score.songs_id WHERE performance_score.songs_id IS NULL;"}, {"question_id": 756, "answer_sql": "SELECT s.language, AVG(p.rhythm_tempo) as average_rhythm_tempo FROM songs s JOIN performance_score ps ON s.id = ps.songs_id JOIN participants p ON ps.participant_id = p.id GROUP BY s.language;"}, {"question_id": 757, "answer_sql": "SELECT DISTINCT p.name FROM participants p JOIN performance_score ps ON p.id = ps.participant_id WHERE ps.songs_id IN (SELECT id FROM songs WHERE language = 'English')"}, {"question_id": 758, "answer_sql": "SELECT p.name, p.popularity FROM participants p JOIN performance_score ps ON p.id = ps.participant_id JOIN songs s ON s.id = ps.songs_id WHERE s.language IN ('Croatian', 'English') GROUP BY p.id, s.id HAVING COUNT(DISTINCT s.language) = 2;"}, {"question_id": 759, "answer_sql": "SELECT s.name FROM songs s JOIN performance_score ps ON s.id = ps.songs_id WHERE s.name LIKE '%Is%'"}, {"question_id": 760, "answer_sql": "SELECT `original_artist` FROM `songs` JOIN `performance_score` ON `songs`.`id` = `performance_score`.`songs_id` WHERE `performance_score`.`rhythm_tempo` > 5 GROUP BY `original_artist` ORDER BY `voice_sound_quality` DESC;"}, {"question_id": 761, "answer_sql": "SELECT COUNT(*) FROM City;"}, {"question_id": 762, "answer_sql": "SELECT COUNT(*) FROM City;"}, {"question_id": 763, "answer_sql": "SELECT DISTINCT state FROM address_1.City;"}, {"question_id": 764, "answer_sql": "SELECT DISTINCT state FROM address_1.City;"}, {"question_id": 765, "answer_sql": "SELECT COUNT(DISTINCT country) FROM Student;"}, {"question_id": 766, "answer_sql": "SELECT COUNT(*) FROM City;"}, {"question_id": 767, "answer_sql": "SELECT City.city_code, City.city_name, City.state, City.country, City.latitude, City.longitude FROM City;"}, {"question_id": 768, "answer_sql": "SELECT City.city_code, City.city_name, City.state, City.country FROM City;"}, {"question_id": 769, "answer_sql": "SELECT latitude, longitude FROM City WHERE city_name = 'Baltimore';"}, {"question_id": 770, "answer_sql": "SELECT City.latitude, City.longitude FROM City WHERE city_code = 'BAL';"}, {"question_id": 771, "answer_sql": "SELECT city_name FROM City WHERE state = 'PA';"}, {"question_id": 772, "answer_sql": "SELECT city_name FROM City WHERE state = 'PA';"}, {"question_id": 773, "answer_sql": "SELECT COUNT(*) FROM City WHERE country = 'Canada';"}, {"question_id": 774, "answer_sql": "SELECT COUNT(*) FROM City WHERE country = 'Canada';"}, {"question_id": 775, "answer_sql": "SELECT City.city_name, City.latitude, City.longitude FROM City ORDER BY City.latitude;"}, {"question_id": 776, "answer_sql": "SELECT City.city_name FROM City WHERE City.country = 'USA' ORDER BY City.latitude;"}, {"question_id": 777, "answer_sql": "SELECT State, COUNT(*) as Number_of_Cities FROM City GROUP BY State;"}, {"question_id": 778, "answer_sql": "SELECT state, COUNT(city_code) as num_cities FROM City GROUP BY state;"}, {"question_id": 779, "answer_sql": "SELECT country, COUNT(city_code) as 'Number of Cities' FROM City GROUP BY country;"}, {"question_id": 780, "answer_sql": "SELECT country, COUNT(city_code) as total_cities FROM City GROUP BY country;"}, {"question_id": 781, "answer_sql": "SELECT City.state FROM City JOIN (SELECT city_code FROM City GROUP BY city_code HAVING COUNT(*) >= 2) AS cities ON City.city_code = cities.city_code;"}, {"question_id": 782, "answer_sql": "SELECT City.state FROM City JOIN (SELECT city_code FROM City GROUP BY city_code HAVING COUNT(*) >= 2) AS cities ON City.city_code = cities.city_code;"}, {"question_id": 783, "answer_sql": "SELECT state, COUNT(*) as num_cities FROM City GROUP BY state ORDER BY num_cities DESC LIMIT 1;"}, {"question_id": 784, "answer_sql": "SELECT state FROM City GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 785, "answer_sql": "SELECT country FROM City GROUP BY country ORDER BY COUNT(city_code) ASC LIMIT 1;"}, {"question_id": 786, "answer_sql": "SELECT country FROM City GROUP BY country ORDER BY COUNT(*) ASC LIMIT 1;"}, {"question_id": 787, "answer_sql": "SELECT Fname, LName FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE state = 'MD');"}, {"question_id": 788, "answer_sql": "SELECT StuID, Fname, LName FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.state = 'MD' AND City.country = 'USA';"}, {"question_id": 789, "answer_sql": "SELECT COUNT(*) FROM Student WHERE country = 'China';"}, {"question_id": 790, "answer_sql": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country = 'China');"}, {"question_id": 791, "answer_sql": "SELECT Fname, Major FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.city_name = 'Baltimore';"}, {"question_id": 792, "answer_sql": "SELECT Fname, Major FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.city_name = 'Baltimore' AND Student.Sex = 'M'"}, {"question_id": 793, "answer_sql": "SELECT City.country, COUNT(Student.StuID) as Number_of_Students FROM City LEFT JOIN Student ON City.city_code = Student.city_code GROUP BY City.country;"}, {"question_id": 794, "answer_sql": "SELECT City.country, COUNT(Student.StuID) FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.country;"}, {"question_id": 795, "answer_sql": "SELECT City.city_name, COUNT(Student.StuID) as NumStudents FROM City LEFT JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_name;"}, {"question_id": 796, "answer_sql": "SELECT City.city_name, COUNT(Student.StuID) FROM City LEFT JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_name;"}, {"question_id": 797, "answer_sql": "SELECT City.state, COUNT(Student.StuID) as Student_Count FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state ORDER BY Student_Count DESC LIMIT 1;"}, {"question_id": 798, "answer_sql": "SELECT City.state, COUNT(Student.StuID) as StudentCount FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state ORDER BY StudentCount DESC LIMIT 1;"}, {"question_id": 799, "answer_sql": "SELECT country FROM Student GROUP BY country ORDER BY COUNT(*) ASC LIMIT 1;"}, {"question_id": 800, "answer_sql": "SELECT country FROM Student GROUP BY country ORDER BY COUNT(*) ASC LIMIT 1;"}, {"question_id": 801, "answer_sql": "SELECT City.city_name FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_name HAVING COUNT(Student.StuID) >= 3;"}, {"question_id": 802, "answer_sql": "SELECT City.city_name FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.city_name HAVING COUNT(Student.StuID) >= 3;"}, {"question_id": 803, "answer_sql": "SELECT DISTINCT state FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY state HAVING COUNT(StuID) > 5;"}, {"question_id": 804, "answer_sql": "SELECT City.state FROM City JOIN Student ON City.city_code = Student.city_code GROUP BY City.state HAVING COUNT(Student.StuID) > 5;"}, {"question_id": 805, "answer_sql": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');"}, {"question_id": 806, "answer_sql": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country != 'USA');"}, {"question_id": 807, "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN (SELECT city_code FROM City WHERE state = 'PA');"}, {"question_id": 808, "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN (SELECT city_code FROM City WHERE state = 'PA');"}, {"question_id": 809, "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country <> 'USA')"}, {"question_id": 810, "answer_sql": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country != 'USA')"}, {"question_id": 811, "answer_sql": "SELECT distance FROM Direct_distance WHERE (city1_code, city2_code) IN ((SELECT city_code FROM City WHERE city_name = 'BAL'), (SELECT city_code FROM City WHERE city_name = 'CHI'));"}, {"question_id": 812, "answer_sql": "SELECT distance FROM Direct_distance WHERE (city1_code, city2_code) IN ((SELECT city_code FROM City WHERE city_name = 'BAL'), (SELECT city_code FROM City WHERE city_name = 'CHI'));"}, {"question_id": 813, "answer_sql": "SELECT DISTANCE FROM Direct_distance WHERE (city1_code, city2_code) IN ((SELECT city_code FROM City WHERE city_name = 'Boston'), (SELECT city_code FROM City WHERE city_name = 'Newark'));"}, {"question_id": 814, "answer_sql": "SELECT distance FROM Direct_distance WHERE (city1_code, city2_code) IN ((SELECT city_code FROM City WHERE city_name = 'Boston'), (SELECT city_code FROM City WHERE city_name = 'Newark'));"}, {"question_id": 815, "answer_sql": "SELECT AVG(Direct_distance.distance) AS average_distance, MIN(Direct_distance.distance) AS min_distance, MAX(Direct_distance.distance) AS max_distance FROM Direct_distance"}, {"question_id": 816, "answer_sql": "SELECT city1_code, city2_code, AVG(distance) as average_distance, MIN(distance) as min_distance, MAX(distance) as max_distance FROM Direct_distance GROUP BY city1_code, city2_code;"}, {"question_id": 817, "answer_sql": "SELECT city1_code, city2_code, distance FROM Direct_distance WHERE distance = (SELECT MAX(distance) FROM Direct_distance);"}, {"question_id": 818, "answer_sql": "SELECT city1_code, city2_code FROM Direct_distance WHERE distance = ( SELECT MAX(distance) FROM Direct_distance );"}, {"question_id": 819, "answer_sql": "SELECT DISTINCT Direct_distance.city1_code, Direct_distance.city2_code FROM Direct_distance JOIN Student ON (Student.city_code = Direct_distance.city1_code OR Student.city_code = Direct_distance.city2_code) WHERE (SELECT AVG(distance) FROM Direct_distance) < (SELECT AVG(distance) FROM Direct_distance WHERE city1_code = Direct_distance.city1_code OR city2_code = Direct_distance.city1_code);"}, {"question_id": 820, "answer_sql": "SELECT city1_code FROM Direct_distance WHERE distance > (SELECT AVG(distance) FROM Direct_distance)"}, {"question_id": 821, "answer_sql": "SELECT DISTINCT city1_code, city2_code FROM Direct_distance WHERE distance < 1000;"}, {"question_id": 822, "answer_sql": "SELECT DISTINCT Direct_distance.city1_code FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code WHERE City.city_name IN (SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city2_code WHERE Direct_distance.distance < 1000)"}, {"question_id": 823, "answer_sql": "SELECT SUM(Direct_distance.distance) as Total_Distance FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE City.city_code = 'BAL';"}, {"question_id": 824, "answer_sql": "SELECT SUM(distance) FROM Direct_distance JOIN City ON Direct_distance.city1_code = City.city_code WHERE City.city_name = 'BAL';"}, {"question_id": 825, "answer_sql": "SELECT AVG(Direct_distance.distance) as average_distance FROM Direct_distance JOIN City as city1 ON Direct_distance.city1_code = city1.city_code JOIN City as city2 ON Direct_distance.city2_code = city2.city_code WHERE city1.city_name = 'Boston' AND city2.city_name <> 'Boston';"}, {"question_id": 826, "answer_sql": "SELECT AVG(Direct_distance.distance) as average_distance FROM Direct_distance JOIN City as city1 ON Direct_distance.city1_code = city1.city_code JOIN City as city2 ON Direct_distance.city2_code = city2.city_code WHERE city1.city_name = 'Boston' AND city2.city_name <> 'Boston';"}, {"question_id": 827, "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.distance < (SELECT MAX(distance) FROM Direct_distance WHERE city1_code = 'Chicago') ORDER BY Direct_distance.distance ASC LIMIT 1;"}, {"question_id": 828, "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.distance < 1000 AND City.city_name = 'Chicago' ORDER BY City.city_name;"}, {"question_id": 829, "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.city2_code = 'BOS' ORDER BY Direct_distance.distance DESC LIMIT 1;"}, {"question_id": 830, "answer_sql": "SELECT City.city_name FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code WHERE Direct_distance.distance > ( SELECT MAX(Direct_distance.distance) FROM Direct_distance WHERE Direct_distance.city1_code = 'BOS' ) ORDER BY City.city_name;"}, {"question_id": 831, "answer_sql": "SELECT City.city_code, SUM(Direct_distance.distance) as Total_distance FROM City LEFT JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY City.city_code;"}, {"question_id": 832, "answer_sql": "SELECT City.city_code, SUM(Direct_distance.distance) as Total_distance FROM City LEFT JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY City.city_code;"}, {"question_id": 833, "answer_sql": "SELECT City.city_name, AVG(Direct_distance.distance) FROM City LEFT JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY City.city_name;"}, {"question_id": 834, "answer_sql": "SELECT City.city_name, AVG(Direct_distance.distance) as average_distance FROM City LEFT JOIN Direct_distance ON City.city_code = Direct_distance.city1_code OR City.city_code = Direct_distance.city2_code GROUP BY City.city_name;"}, {"question_id": 835, "answer_sql": "SELECT D.distance FROM Student AS S1 JOIN Student AS S2 ON S1.city_code = S2.city_code JOIN Direct_distance AS D ON (S1.city_code = D.city1_code AND S2.city_code = D.city2_code) WHERE S1.LName = 'Smith' AND S1.Fname = 'Linda' AND S2.LName = 'Kim' AND S2.Fname = 'Tracy';"}, {"question_id": 836, "answer_sql": "SELECT D.distance FROM Student S JOIN Direct_distance D ON (S.city_code = D.city1_code AND D.city2_code = 'LIVE_CITY_CODE') JOIN City C1 ON (S.city_code = C1.city_code) JOIN City C2 ON (D.city2_code = C2.city_code) WHERE S.LName = 'Smith' AND S.Fname = 'Linda' AND C2.city_name = 'LIVE_CITY_NAME';"}, {"question_id": 837, "answer_sql": "SELECT StuID, Fname, LName FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.city_name = 'Linda Smith' ORDER BY distance DESC LIMIT 1;"}, {"question_id": 838, "answer_sql": "SELECT StuID, Fname, LName FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.city_name = 'Linda Smith' ORDER BY distance DESC LIMIT 1;"}, {"question_id": 839, "answer_sql": "SELECT City.state FROM Student JOIN City ON Student.city_code = City.city_code WHERE Student.Fname = 'Linda';"}, {"question_id": 840, "answer_sql": "SELECT City.state FROM Student JOIN City ON Student.city_code = City.city_code WHERE Student.Fname = 'Linda';"}, {"question_id": 841, "answer_sql": "SELECT * FROM Sailors WHERE age > 30;"}, {"question_id": 842, "answer_sql": "SELECT Sailors.name, Sailors.rating, Sailors.age FROM Sailors WHERE Sailors.age > 30;"}, {"question_id": 843, "answer_sql": "SELECT name, age FROM Sailors WHERE age < 30;"}, {"question_id": 844, "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors WHERE Sailors.age < 30;"}, {"question_id": 845, "answer_sql": "SELECT Boats.name, Boats.color FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid = 1;"}, {"question_id": 846, "answer_sql": "SELECT Boats.bid FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.sid = 1;"}, {"question_id": 847, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;"}, {"question_id": 848, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;"}, {"question_id": 849, "answer_sql": "SELECT Boats.bid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid;"}, {"question_id": 850, "answer_sql": "SELECT Boats.bid FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid;"}, {"question_id": 851, "answer_sql": "SELECT name FROM Sailors WHERE name LIKE '%e%';"}, {"question_id": 852, "answer_sql": "SELECT name FROM Sailors WHERE name LIKE '%e%';"}, {"question_id": 853, "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves);"}, {"question_id": 854, "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN ( SELECT sid FROM Sailors ORDER BY age LIMIT 1 );"}, {"question_id": 855, "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.age > (SELECT MAX(Sailors.age) FROM Sailors WHERE Sailors.rating > 7);"}, {"question_id": 856, "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.age > ( SELECT Sailors.age FROM Sailors WHERE Sailors.rating > 7 )"}, {"question_id": 857, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name, Sailors.sid HAVING COUNT(Boats.bid) >= 1;"}, {"question_id": 858, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name, Sailors.sid HAVING COUNT(Boats.bid) > 0;"}, {"question_id": 859, "answer_sql": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid, Sailors.name HAVING COUNT(Boats.bid) > 1;"}, {"question_id": 860, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.name HAVING COUNT(Boats.name) >= 2;"}, {"question_id": 861, "answer_sql": "SELECT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE (Boats.color = 'red' OR Boats.color = 'blue')"}, {"question_id": 862, "answer_sql": "SELECT sid FROM Sailors WHERE name IN ('red', 'blue')"}, {"question_id": 863, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.day IN ('red', 'blue') AND Boats.color IN ('red', 'blue');"}, {"question_id": 864, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.day NOT IN ('Saturday', 'Sunday') AND (Boats.color = 'Red' OR Boats.color = 'Blue');"}, {"question_id": 865, "answer_sql": "SELECT Reserves.sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Boats.color IN ('red', 'blue');"}, {"question_id": 866, "answer_sql": "SELECT Reserves.sid FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');"}, {"question_id": 867, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.day IN ('red', 'blue') AND Boats.color IN ('red', 'blue');"}, {"question_id": 868, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.day IN ('red', 'blue') AND Boats.color IN ('red', 'blue');"}, {"question_id": 869, "answer_sql": "SELECT sid FROM Sailors WHERE sid NOT IN ( SELECT sid FROM Reserves );"}, {"question_id": 870, "answer_sql": "SELECT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"}, {"question_id": 871, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"}, {"question_id": 872, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"}, {"question_id": 873, "answer_sql": "SELECT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"}, {"question_id": 874, "answer_sql": "SELECT Sailors.sid, Sailors.name, Sailors.rating, Sailors.age FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;"}, {"question_id": 875, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"}, {"question_id": 876, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;"}, {"question_id": 877, "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > ( SELECT Sailors.rating FROM Sailors WHERE Sailors.name = 'Luis' );"}, {"question_id": 878, "answer_sql": "SELECT name FROM Sailors WHERE rating > ( SELECT rating FROM Sailors WHERE name = 'Luis' );"}, {"question_id": 879, "answer_sql": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > ( SELECT Sailors.rating FROM Sailors WHERE Sailors.name = 'Luis' );"}, {"question_id": 880, "answer_sql": "SELECT name FROM Sailors WHERE rating > ( SELECT rating FROM Sailors WHERE name = 'Luis' );"}, {"question_id": 881, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > 2;"}, {"question_id": 882, "answer_sql": "SELECT Sailors.name, Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating >= 3;"}, {"question_id": 883, "answer_sql": "SELECT name, age FROM Sailors WHERE age = (SELECT MAX(age) FROM Sailors);"}, {"question_id": 884, "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors WHERE Sailors.age = (SELECT MAX(age) FROM Sailors);"}, {"question_id": 885, "answer_sql": "SELECT COUNT(*) FROM Sailors;"}, {"question_id": 886, "answer_sql": "SELECT COUNT(*) FROM Sailors;"}, {"question_id": 887, "answer_sql": "SELECT AVG(age) FROM Sailors WHERE rating = 7;"}, {"question_id": 888, "answer_sql": "SELECT AVG(age) FROM Sailors WHERE rating = 7;"}, {"question_id": 889, "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"}, {"question_id": 890, "answer_sql": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%';"}, {"question_id": 891, "answer_sql": "SELECT AVG(rating) as average_rating, MAX(age) as max_age FROM Sailors;"}, {"question_id": 892, "answer_sql": "SELECT AVG(rating) as average_rating, MAX(age) as largest_age FROM Sailors;"}, {"question_id": 893, "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) as Number_of_Reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name;"}, {"question_id": 894, "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) as Number_of_Reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name;"}, {"question_id": 895, "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) as 'Number of Reservations' FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.bid > 50 GROUP BY Boats.name;"}, {"question_id": 896, "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Boats.bid > 50 GROUP BY Boats.name;"}, {"question_id": 897, "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) as num_reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name HAVING COUNT(Reserves.bid) > 1;"}, {"question_id": 898, "answer_sql": "SELECT Boats.name, COUNT(Reserves.bid) FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name HAVING COUNT(Reserves.bid) > 1;"}, {"question_id": 899, "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) as Number_of_Reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid > 1 GROUP BY Boats.name;"}, {"question_id": 900, "answer_sql": "SELECT Boats.name, COUNT(Reserves.sid) as 'Number of Reservations' FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid > 1 GROUP BY Boats.name;"}, {"question_id": 901, "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) as average_age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"}, {"question_id": 902, "answer_sql": "SELECT Sailors.rating, AVG(Sailors.age) as average_age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;"}, {"question_id": 903, "answer_sql": "SELECT Sailors.name, Sailors.rating, Sailors.age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid ORDER BY Sailors.rating, Sailors.age;"}, {"question_id": 904, "answer_sql": "SELECT name, rating, age FROM Sailors ORDER BY rating, age;"}, {"question_id": 905, "answer_sql": "SELECT COUNT(*) FROM Boats;"}, {"question_id": 906, "answer_sql": "SELECT COUNT(*) FROM Boats;"}, {"question_id": 907, "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"}, {"question_id": 908, "answer_sql": "SELECT COUNT(*) FROM Boats WHERE color = 'red';"}, {"question_id": 909, "answer_sql": "SELECT Boats.name FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.age BETWEEN 20 AND 30;"}, {"question_id": 910, "answer_sql": "SELECT Boats.name FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.age BETWEEN 20 AND 30;"}, {"question_id": 911, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.rating > Boats.rating AND Boats.color = 'red';"}, {"question_id": 912, "answer_sql": "SELECT name FROM Sailors WHERE rating > ( SELECT rating FROM Sailors WHERE sid IN ( SELECT sid FROM Reserves WHERE bid IN ( SELECT bid FROM Boats WHERE color = 'red' ) ) );"}, {"question_id": 913, "answer_sql": "SELECT name, rating FROM Sailors WHERE rating = (SELECT MAX(rating) FROM Sailors);"}, {"question_id": 914, "answer_sql": "SELECT MAX(rating) FROM Sailors;"}, {"question_id": 915, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon';"}, {"question_id": 916, "answer_sql": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid IN ( SELECT Boats.bid FROM Boats WHERE Boats.name = 'Melon' );"}, {"question_id": 917, "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors ORDER BY Sailors.rating DESC;"}, {"question_id": 918, "answer_sql": "SELECT Sailors.name, Sailors.age FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid ORDER BY Sailors.rating DESC;"}, {"question_id": 919, "answer_sql": "SELECT Model FROM headphone WHERE Price = (SELECT MAX( Price ) FROM headphone );"}, {"question_id": 920, "answer_sql": "SELECT Model , Price FROM headphone WHERE Price = (SELECT MAX( Price ) FROM headphone );"}, {"question_id": 921, "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;"}, {"question_id": 922, "answer_sql": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;"}, {"question_id": 923, "answer_sql": "SELECT Class , COUNT( Class ) as Count FROM headphone GROUP BY Class ORDER BY Count DESC LIMIT 1;"}, {"question_id": 924, "answer_sql": "SELECT Class, COUNT(*) as Number_of_Headphones FROM headphone GROUP BY Class ORDER BY Number_of_Headphones DESC LIMIT 1;"}, {"question_id": 925, "answer_sql": "SELECT Class FROM headphone GROUP BY Class HAVING COUNT(Headphone_ID) > 2;"}, {"question_id": 926, "answer_sql": "SELECT h.Class FROM headphone h JOIN ( SELECT h1.Class, COUNT(*) as cnt FROM headphone h1 GROUP BY h1.Class HAVING COUNT(*) <= 2 ) sub ON h.Class = sub.Class"}, {"question_id": 927, "answer_sql": "SELECT h.Class, COUNT(h.Headphone_ID) as Number_of_Headphones FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID JOIN store st ON s.Store_ID = st.Store_ID WHERE h.Price > 200 GROUP BY h.Class ORDER BY Number_of_Headphones DESC;"}, {"question_id": 928, "answer_sql": "SELECT Class, COUNT(*) FROM headphone WHERE Price > 200 GROUP BY Class"}, {"question_id": 929, "answer_sql": "SELECT COUNT(DISTINCT Earpads ) FROM headphone ;"}, {"question_id": 930, "answer_sql": "SELECT COUNT(DISTINCT Earpads ) FROM headphone ;"}, {"question_id": 931, "answer_sql": "SELECT Earpads , COUNT( Earpads ) as Count FROM stock GROUP BY Earpads ORDER BY Count DESC LIMIT 2;"}, {"question_id": 932, "answer_sql": "SELECT e. Earpads , COUNT(h. Headphone_ID ) as Number of Headphones FROM headphone h JOIN stock s ON h. Headphone_ID = s. Headphone_ID JOIN store st ON s. Store_ID = st. Store_ID JOIN ( SELECT Earpads FROM headphone GROUP BY Earpads ORDER BY COUNT( Headphone_ID ) DESC LIMIT 2 ) e ON h. Earpads = e. Earpads GROUP BY e. Earpads ORDER BY Number of Headphones DESC;"}, {"question_id": 933, "answer_sql": "SELECT Model , Class , Construction FROM headphone WHERE Price = (SELECT MIN( Price ) FROM headphone );"}, {"question_id": 934, "answer_sql": "SELECT Model , Class , Construction FROM headphone WHERE Price = (SELECT MIN( Price ) FROM headphone );"}, {"question_id": 935, "answer_sql": "SELECT Construction, AVG(Price) as Average_Price FROM headphone GROUP BY Construction;"}, {"question_id": 936, "answer_sql": "SELECT h. Construction , AVG(s. Price ) as Average Price FROM headphone h JOIN stock s ON h. Headphone_ID = s. Headphone_ID GROUP BY h. Construction This SQL query will give you the average price of headphones for each construction."}, {"question_id": 937, "answer_sql": "SELECT h.Class FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE h.Earpads = 'Bowls' AND s.Quantity > 0 GROUP BY h.Class HAVING COUNT(h.Class) = ( SELECT COUNT(*) FROM headphone h2 JOIN stock s2 ON h2.Headphone_ID = s2.Headphone_ID WHERE h2.Earpads = 'Comfort Pads' AND s2.Quantity > 0 )"}, {"question_id": 938, "answer_sql": "SELECT h.Class FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE h.Earpads IN ('Bowls', 'Comfort Pads') GROUP BY h.Class HAVING COUNT(DISTINCT s.Store_ID) = 2;"}, {"question_id": 939, "answer_sql": "SELECT h.Model, h.Driver-matched_dB, s.Name, s.Neighborhood FROM headphone h JOIN store s ON h.Class = 'Class' WHERE h.Earpads != 'Plastic' AND s.Parking = 'Potholes' ORDER BY h.Driver-matched_dB DESC;"}, {"question_id": 940, "answer_sql": "SELECT Earpads FROM headphone WHERE Construction != 'Plastic' This SQL query will return all earpads that do not use plastic construction from the headphone table."}, {"question_id": 941, "answer_sql": "SELECT Model FROM headphone WHERE Price < (SELECT AVG(Price) FROM headphone);"}, {"question_id": 942, "answer_sql": "SELECT Model FROM headphone WHERE Price < (SELECT AVG( Price ) FROM headphone ) ```sql This query will return all the headphone models that are priced less than the average price of all the headphones in the database."}, {"question_id": 943, "answer_sql": "SELECT s.Name FROM store s JOIN stock st ON s.Store_ID = st.Store_ID JOIN headphone h ON h.Headphone_ID = st.Headphone_ID WHERE h.Class = 'Class_A' ORDER BY s.Date_Opened DESC;"}, {"question_id": 944, "answer_sql": "SELECT Name FROM store ORDER BY Date_Opened ;"}, {"question_id": 945, "answer_sql": "SELECT s.Name, s.Parking FROM store s JOIN stock st ON s.Store_ID = st.Store_ID WHERE s.Neighborhood = 'Tarzana' GROUP BY s.Store_ID, s.Name, s.Parking;"}, {"question_id": 946, "answer_sql": "SELECT s.Name, s.Parking FROM store s JOIN stock st ON s.Store_ID = st.Store_ID JOIN headphone h ON h.Headphone_ID = st.Headphone_ID WHERE h.Class = 'Class_A' AND s.Neighborhood = 'Tarzana'"}, {"question_id": 947, "answer_sql": "SELECT DISTINCT Neighborhood FROM store ;"}, {"question_id": 948, "answer_sql": "SELECT DISTINCT Neighborhood FROM store;"}, {"question_id": 949, "answer_sql": "SELECT s.Neighborhood, COUNT(s.Store_ID) as Number_of_Stores FROM store s JOIN stock st ON s.Store_ID = st.Store_ID GROUP BY s.Neighborhood;"}, {"question_id": 950, "answer_sql": "SELECT s.Neighborhood, COUNT(DISTINCT h.Headphone_ID) as Number_of_Headphones FROM store s JOIN stock st ON s.Store_ID = st.Store_ID JOIN headphone h ON st.Headphone_ID = h.Headphone_ID GROUP BY s.Neighborhood;"}, {"question_id": 951, "answer_sql": "SELECT s.Name, COUNT(h.Headphone_ID) as Number_of_Headphones FROM store s JOIN stock st ON s.Store_ID = st.Store_ID JOIN headphone h ON st.Headphone_ID = h.Headphone_ID GROUP BY s.Name ORDER BY Number_of_Headphones DESC LIMIT 1;"}, {"question_id": 952, "answer_sql": "SELECT s.Name, SUM(st.Quantity) as Total_Quantity FROM store s JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IN (SELECT Headphone_ID FROM headphone WHERE Driver-matched_dB > 0) GROUP BY s.Store_ID, s.Name;"}, {"question_id": 953, "answer_sql": "SELECT s.Name FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL;"}, {"question_id": 954, "answer_sql": "SELECT s.Name FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL;"}, {"question_id": 955, "answer_sql": "SELECT h.Model FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE s.Store_ID IS NULL;"}, {"question_id": 956, "answer_sql": "SELECT h.Model FROM headphone h LEFT JOIN stock s ON h.Headphone_ID = s.Headphone_ID WHERE s.Store_ID IS NULL;"}, {"question_id": 957, "answer_sql": "SELECT h.Model, s.Store_ID, st.Neighborhood, st.Name FROM headphone h JOIN stock st ON h.Headphone_ID = st.Headphone_ID JOIN store s ON st.Store_ID = s.Store_ID WHERE h.Model = (SELECT MAX(h2.Driver-matched_dB) FROM headphone h2) GROUP BY s.Store_ID, h.Model, st.Neighborhood, s.Name ORDER BY s.Store_ID;"}, {"question_id": 958, "answer_sql": "SELECT h.Model, SUM(s.Quantity) as Total_Quantity FROM headphone h JOIN stock s ON h.Headphone_ID = s.Headphone_ID GROUP BY h.Model ORDER BY Total_Quantity DESC LIMIT 1;"}, {"question_id": 959, "answer_sql": "SELECT COUNT(*) FROM `stock` WHERE `Store_ID` = (SELECT `Store_ID` FROM `store` WHERE `Name` = 'Woodman') AND `Headphone_ID` = (SELECT `Headphone_ID` FROM `headphone` WHERE `Class` = 'Headphones');"}, {"question_id": 960, "answer_sql": "SELECT SUM(stock.Quantity) as Total_Quantity FROM stock JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = 'Woodman';"}, {"question_id": 961, "answer_sql": "SELECT s.Neighborhood FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL GROUP BY s.Neighborhood HAVING COUNT(s.Store_ID) = 0"}, {"question_id": 962, "answer_sql": "SELECT s.Neighborhood FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL GROUP BY s.Neighborhood HAVING COUNT(s.Store_ID) = (SELECT COUNT(*) FROM store);"}, {"question_id": 963, "answer_sql": "SELECT COUNT(*) FROM Author;"}, {"question_id": 964, "answer_sql": "SELECT COUNT(*) FROM Author;"}, {"question_id": 965, "answer_sql": "SELECT COUNT(*) FROM Paper;"}, {"question_id": 966, "answer_sql": "SELECT COUNT(*) FROM Paper;"}, {"question_id": 967, "answer_sql": "SELECT COUNT(*) FROM Affiliation;"}, {"question_id": 968, "answer_sql": "SELECT COUNT(*) FROM Affiliation;"}, {"question_id": 969, "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000';"}, {"question_id": 970, "answer_sql": "SELECT COUNT(*) FROM `Paper` WHERE `venue` = 'NAACL 2000';"}, {"question_id": 971, "answer_sql": "SELECT COUNT(*) FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Paper.year = 2009 AND Affiliation.name = 'Columbia University';"}, {"question_id": 972, "answer_sql": "SELECT COUNT(*) FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Paper.year = 2009 AND Affiliation.name = 'Columbia University';"}, {"question_id": 973, "answer_sql": "SELECT A.name, A.address FROM Affiliation A;"}, {"question_id": 974, "answer_sql": "SELECT name, address FROM Affiliation;"}, {"question_id": 975, "answer_sql": "SELECT P.venue, P.year FROM Paper P ORDER BY P.year;"}, {"question_id": 976, "answer_sql": "SELECT DISTINCT `venue`, `year` FROM `Paper` ORDER BY `year`;"}, {"question_id": 977, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name = 'Harvard University';"}, {"question_id": 978, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Affiliation A ON AL.affiliation_id = A.affiliation_id WHERE A.name = 'Harvard University';"}, {"question_id": 979, "answer_sql": "SELECT P.paper_id, P.title FROM Paper P JOIN Author A ON P.paper_id = A.author_id WHERE A.name = 'Mckeown';"}, {"question_id": 980, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name = 'Mckeown';"}, {"question_id": 981, "answer_sql": "SELECT P.paper_id, P.title, A.name AS author_name, A.email AS author_email, A.affiliation_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id JOIN Affiliation AFF ON AL.affiliation_id = AFF.affiliation_id WHERE AFF.name IN ('Stanford University', 'Columbia University') ORDER BY P.year DESC;"}, {"question_id": 982, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Affiliation A ON A.affiliation_id = AL.affiliation_id WHERE A.name IN ('Stanford University', 'Columbia University');"}, {"question_id": 983, "answer_sql": "SELECT P.paper_id, P.title FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('Mckeown', 'Kathleen', 'Rambow') GROUP BY P.paper_id, P.title HAVING COUNT(DISTINCT A.name) = 3;"}, {"question_id": 984, "answer_sql": "SELECT P.title, A.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('Mckeown', 'Kathleen', 'Rambow') GROUP BY P.title, A.paper_id ORDER BY P.title;"}, {"question_id": 985, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id WHERE AL.author_id IN ( SELECT author_id FROM Author WHERE name IN ('Mckeown', 'Rambow') ) AND AL.author_id NOT IN ( SELECT author_id FROM Author WHERE name = 'Rambow' )"}, {"question_id": 986, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id WHERE AL.author_id IN ( SELECT author_id FROM Author WHERE name = 'Mckeown' ) AND AL.author_id NOT IN ( SELECT author_id FROM Author WHERE name = 'Rambow' )"}, {"question_id": 987, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('Kathleen', 'Owen', 'Mckeown');"}, {"question_id": 988, "answer_sql": "SELECT P.title, P.paper_id FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id JOIN Author A ON AL.author_id = A.author_id WHERE A.name IN ('Kathleen', 'Owen', 'Mckeown')"}, {"question_id": 989, "answer_sql": "SELECT A.name, COUNT(AL.author_id) as num_papers FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id GROUP BY A.name ORDER BY num_papers DESC;"}, {"question_id": 990, "answer_sql": "SELECT A.author_id, A.name, COUNT(B.paper_id) as num_papers FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id LEFT JOIN Paper P ON AL.paper_id = P.paper_id GROUP BY A.author_id, A.name ORDER BY num_papers DESC;"}, {"question_id": 991, "answer_sql": "SELECT A.name, COUNT(B.paper_id) as Number_of_Papers FROM Affiliation A JOIN Author_list B ON A.affiliation_id = B.affiliation_id GROUP BY A.name ORDER BY Number_of_Papers ASC;"}, {"question_id": 992, "answer_sql": "SELECT a.name, COUNT(bl.paper_id) as num_papers FROM Affiliation a JOIN Author_list bl ON a.affiliation_id = bl.affiliation_id GROUP BY a.name ORDER BY num_papers DESC;"}, {"question_id": 993, "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON P.paper_id = AL.paper_id WHERE COUNT(P.paper_id) > 50 GROUP BY A.author_id;"}, {"question_id": 994, "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON P.paper_id = AL.paper_id WHERE COUNT(P.paper_id) > 50 GROUP BY A.author_id;"}, {"question_id": 995, "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id WHERE AL.paper_id NOT IN ( SELECT paper_id FROM Author_list GROUP BY author_id HAVING COUNT(author_id) > 1 ) AND A.author_id NOT IN ( SELECT author_id FROM Citation ) ;"}, {"question_id": 996, "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id GROUP BY A.author_id HAVING COUNT(AL.paper_id) = 1;"}, {"question_id": 997, "answer_sql": "SELECT P.venue, P.year FROM Paper P WHERE P.paper_id IN ( SELECT C.cited_paper_id FROM Citation C GROUP BY C.cited_paper_id ORDER BY COUNT(*) DESC LIMIT 1 )"}, {"question_id": 998, "answer_sql": "SELECT P.venue, P.year FROM Paper P WHERE P.paper_id IN ( SELECT A.paper_id FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id GROUP BY A.paper_id ORDER BY COUNT(AL.author_id) DESC LIMIT 1 )"}, {"question_id": 999, "answer_sql": "SELECT `venue`, COUNT(`paper_id`) as `number_of_publications` FROM `Paper` GROUP BY `venue` ORDER BY `number_of_publications` ASC LIMIT 1;"}, {"question_id": 1000, "answer_sql": "SELECT `venue`, COUNT(`paper_id`) as `publications` FROM `Paper` GROUP BY `venue` ORDER BY `publications` ASC LIMIT 1;"}, {"question_id": 1001, "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'A00-1002';"}, {"question_id": 1002, "answer_sql": "SELECT COUNT(*) FROM Paper JOIN Citation ON Paper.paper_id = Citation.cited_paper_id WHERE Citation.paper_id = 'A00-1002';"}, {"question_id": 1003, "answer_sql": "SELECT COUNT(DISTINCT Citation.cited_paper_id) as reference_papers FROM Citation JOIN Paper ON Citation.cited_paper_id = Paper.paper_id WHERE Paper.paper_id = 'D12-1027';"}, {"question_id": 1004, "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'D12-1027';"}, {"question_id": 1005, "answer_sql": "SELECT MAX(Paper.paper_id) AS most_cited_paper_id, COUNT(Citation.cited_paper_id) AS number_of_citations FROM Paper LEFT JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.paper_id ORDER BY number_of_citations DESC LIMIT 1;"}, {"question_id": 1006, "answer_sql": "SELECT P.paper_id, COUNT(C.cited_paper_id) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id ORDER BY citation_count DESC LIMIT 1;"}, {"question_id": 1007, "answer_sql": "SELECT P.title FROM Paper P WHERE P.paper_id IN ( SELECT C.cited_paper_id FROM Citation C GROUP BY C.cited_paper_id ORDER BY COUNT(*) DESC LIMIT 1 )"}, {"question_id": 1008, "answer_sql": "SELECT P.title FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.title ORDER BY COUNT(C.cited_paper_id) DESC LIMIT 1;"}, {"question_id": 1009, "answer_sql": "SELECT P.paper_id, P.title, COUNT(C.cited_paper_id) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id, P.title ORDER BY citation_count DESC LIMIT 10;"}, {"question_id": 1010, "answer_sql": "SELECT P.paper_id, P.title, COUNT(C.cited_paper_id) as citation_count FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id, P.title ORDER BY citation_count DESC LIMIT 10;"}, {"question_id": 1011, "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'paper_id_of_Mckeown_Kathleen' AND cited_paper_id = 'paper_id_of_Mckeown_Kathleen';"}, {"question_id": 1012, "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'Mckeown' AND cited_paper_id = 'Kathleen';"}, {"question_id": 1013, "answer_sql": "SELECT COUNT(*) FROM Citation WHERE Citation.cited_paper_id = 'paper_id_of_Mckeown_Kathleen' AND Citation.paper_id = 'paper_id_of_Mckeown_Kathleen';"}, {"question_id": 1014, "answer_sql": "SELECT COUNT(*) FROM Citation WHERE paper_id IN (SELECT paper_id FROM Paper WHERE title = 'Mckeown, Kathleen');"}, {"question_id": 1015, "answer_sql": "SELECT a.name, COUNT(c.paper_id) as num_citations FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Citation c ON al.paper_id = c.paper_id GROUP BY a.author_id ORDER BY num_citations DESC LIMIT 1;"}, {"question_id": 1016, "answer_sql": "SELECT A.name AS author_name, COUNT(C.paper_id) AS total_citations FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Citation C ON AL.paper_id = C.paper_id GROUP BY A.author_id ORDER BY total_citations DESC LIMIT 1;"}, {"question_id": 1017, "answer_sql": "SELECT P.venue, P.year FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id WHERE AL.author_id = ( SELECT author_id FROM Author WHERE name = 'Mckeown' AND email = 'kathleen@example.com' )"}, {"question_id": 1018, "answer_sql": "SELECT P.venue, P.year FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id WHERE AL.author_id = ( SELECT author_id FROM Author WHERE name = 'Mckeown' AND email = 'kathleen@example.com' ) GROUP BY P.venue, P.year"}, {"question_id": 1019, "answer_sql": "SELECT Paper.venue, Paper.year FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = 'Columbia University' GROUP BY Paper.venue, Paper.year"}, {"question_id": 1020, "answer_sql": "SELECT `Paper`.`venue`, `Paper`.`year` FROM `Paper` WHERE `Paper`.`venue` LIKE 'Columbia University' ORDER BY `Paper`.`year`;"}, {"question_id": 1021, "answer_sql": "SELECT A.author_id, A.name, COUNT(P.paper_id) as num_papers FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.year = 2009 GROUP BY A.author_id, A.name ORDER BY num_papers DESC LIMIT 1;"}, {"question_id": 1022, "answer_sql": "SELECT a.name FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Paper p ON al.paper_id = p.paper_id WHERE p.year = 2009 GROUP BY a.name ORDER BY COUNT(p.paper_id) DESC LIMIT 1;"}, {"question_id": 1023, "answer_sql": "SELECT A.name AS Affiliation_Name FROM Affiliation A JOIN ( SELECT affiliation_id FROM Author_list WHERE author_id IN ( SELECT author_id FROM Author WHERE email LIKE '%@2009%' ) GROUP BY affiliation_id ORDER BY COUNT(*) DESC LIMIT 3 ) B ON A.affiliation_id = B.affiliation_id;"}, {"question_id": 1024, "answer_sql": "SELECT A.name AS Affiliation, COUNT(P.paper_id) AS PaperCount FROM Author_list AS AL JOIN Author AS A ON AL.author_id = A.author_id JOIN Affiliation AS AF ON AL.affiliation_id = AF.affiliation_id JOIN Paper AS P ON AL.paper_id = P.paper_id WHERE P.year = 2009 GROUP BY A.name ORDER BY PaperCount DESC LIMIT 3;"}, {"question_id": 1025, "answer_sql": "SELECT P.title, P.year FROM Paper P JOIN Author A ON P.paper_id IN ( SELECT C.cited_paper_id FROM Citation C WHERE C.paper_id = 'paper_id_from_question' ) JOIN Author_list AL ON AL.author_id = A.author_id JOIN Affiliation A1 ON A1.affiliation_id = AL.affiliation_id WHERE A1.name = 'Columbia University' AND P.year <= 2009;"}, {"question_id": 1026, "answer_sql": "SELECT COUNT(*) FROM Paper WHERE year <= 2009 AND venue = 'Columbia University';"}, {"question_id": 1027, "answer_sql": "SELECT COUNT(*) FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = 'Stanford University' AND Paper.year BETWEEN 2000 AND 2009;"}, {"question_id": 1028, "answer_sql": "SELECT COUNT(*) FROM Paper WHERE venue = 'Stanford University' AND year BETWEEN 2000 AND 2009;"}, {"question_id": 1029, "answer_sql": "SELECT P.title FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id GROUP BY P.title ORDER BY COUNT(AL.author_id) DESC LIMIT 1;"}, {"question_id": 1030, "answer_sql": "SELECT P.title FROM Paper P JOIN Author_list AL ON P.paper_id = AL.paper_id GROUP BY P.title ORDER BY COUNT(AL.author_id) DESC LIMIT 1;"}, {"question_id": 1031, "answer_sql": "SELECT COUNT(DISTINCT author_id) FROM Author_list WHERE paper_id IN ( SELECT paper_id FROM Paper WHERE title = 'Mckeown, Kathleen' );"}, {"question_id": 1032, "answer_sql": "SELECT COUNT(DISTINCT author_id) as collaborators FROM Author_list JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = 'Mckeown, Kathleen';"}, {"question_id": 1033, "answer_sql": "SELECT A.author_id, A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.title = 'McKown, Kathleen' GROUP BY A.author_id, A.name ORDER BY COUNT(P.paper_id) DESC LIMIT 1;"}, {"question_id": 1034, "answer_sql": "SELECT a.name FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Paper p ON al.paper_id = p.paper_id WHERE p.title = 'The most co-authored papers' GROUP BY a.author_id ORDER BY COUNT(al.paper_id) DESC LIMIT 1;"}, {"question_id": 1035, "answer_sql": "SELECT Paper.paper_id FROM Paper JOIN Paper_list ON Paper.paper_id = Paper_list.paper_id WHERE Paper.title LIKE '%translation%'"}, {"question_id": 1036, "answer_sql": "SELECT Paper.paper_id FROM Paper JOIN Paper_list ON Paper.paper_id = Paper_list.paper_id JOIN Author_list ON Paper_list.author_id = Author_list.author_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Paper.title LIKE '%translation%'"}, {"question_id": 1037, "answer_sql": "SELECT Paper.paper_id, Paper.title FROM Paper LEFT JOIN Citation ON Paper.paper_id = Citation.paper_id WHERE Citation.cited_paper_id IS NULL;"}, {"question_id": 1038, "answer_sql": "SELECT `paper_id`, `title` FROM `Paper` WHERE `paper_id` NOT IN (SELECT `cited_paper_id` FROM `Citation`) AND `paper_id` NOT IN (SELECT `paper_id` FROM `Citation`);"}, {"question_id": 1039, "answer_sql": "SELECT A.name AS Affiliation_Name FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.author_id = P.author_id WHERE P.venue = 'China' GROUP BY A.name ORDER BY COUNT(P.paper_id) DESC LIMIT 1;"}, {"question_id": 1040, "answer_sql": "SELECT A.name AS Affiliation_Name FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.author_id = P.author_id WHERE P.title LIKE '%China%' GROUP BY A.name ORDER BY COUNT(P.paper_id) DESC LIMIT 1;"}, {"question_id": 1041, "answer_sql": "SELECT P.year, P.title, V.venue FROM Paper P JOIN Citation C ON P.paper_id = C.cited_paper_id JOIN Venue V ON P.venue = V.venue GROUP BY P.year, P.title, V.venue ORDER BY P.year;"}, {"question_id": 1042, "answer_sql": "SELECT Paper.venue, Paper.year, COUNT(Paper.paper_id) as num_papers FROM Paper GROUP BY Paper.venue, Paper.year;"}, {"question_id": 1043, "answer_sql": "SELECT A.name AS Affiliation, COUNT(P.paper_id) AS Total_Papers FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.paper_id = P.paper_id GROUP BY A.name;"}, {"question_id": 1044, "answer_sql": "SELECT A.name AS Affiliation, COUNT(P.paper_id) AS Number_of_Papers FROM Affiliation A JOIN Author_list AL ON A.affiliation_id = AL.affiliation_id JOIN Paper P ON AL.paper_id = P.paper_id GROUP BY A.name;"}, {"question_id": 1045, "answer_sql": "SELECT P.title FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.title HAVING COUNT(C.cited_paper_id) > 50;"}, {"question_id": 1046, "answer_sql": "SELECT title FROM Paper WHERE paper_id IN (SELECT paper_id FROM Paper GROUP BY paper_id HAVING COUNT(paper_id) > 50);"}, {"question_id": 1047, "answer_sql": "SELECT COUNT(author_id) FROM Author WHERE author_id NOT IN ( SELECT author_id FROM Paper WHERE paper_id IN ( SELECT cited_paper_id FROM Citation GROUP BY paper_id HAVING COUNT(paper_id) > 50 ) )"}, {"question_id": 1048, "answer_sql": "SELECT A.author_id, COUNT(P.paper_id) as num_papers FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id LEFT JOIN Citation C ON AL.paper_id = C.paper_id LEFT JOIN Paper P ON C.cited_paper_id = P.paper_id WHERE P.paper_id IS NULL GROUP BY A.author_id HAVING COUNT(P.paper_id) <= 50"}, {"question_id": 1049, "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009;"}, {"question_id": 1050, "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('NAACL', 'ACL') AND P.year = 2009;"}, {"question_id": 1051, "answer_sql": "SELECT A.name FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id LEFT JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue <> 'ACL' AND P.paper_id IS NULL;"}, {"question_id": 1052, "answer_sql": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue != 'ACL' GROUP BY A.author_id;"}, {"question_id": 1053, "answer_sql": "SELECT COUNT(*) FROM conference;"}, {"question_id": 1054, "answer_sql": "SELECT COUNT(*) FROM conference;"}, {"question_id": 1055, "answer_sql": "SELECT DISTINCT Conference_Name FROM conference ;"}, {"question_id": 1056, "answer_sql": "SELECT Conference_Name FROM conference;"}, {"question_id": 1057, "answer_sql": "SELECT Conference_Name , Year , Location FROM conference ;"}, {"question_id": 1058, "answer_sql": "SELECT Conference_Name , Year , Location FROM conference ;"}, {"question_id": 1059, "answer_sql": "SELECT Conference_Name, COUNT(*) FROM conference_participation GROUP BY Conference_Name;"}, {"question_id": 1060, "answer_sql": "SELECT Conference_Name, COUNT(*) FROM conference_participation GROUP BY Conference_Name;"}, {"question_id": 1061, "answer_sql": "SELECT Year, COUNT(*) as Number_of_Conferences FROM conference GROUP BY Year;"}, {"question_id": 1062, "answer_sql": "SELECT YEAR, COUNT(*) as Number_of_Conferences FROM conference GROUP BY YEAR ORDER BY YEAR;"}, {"question_id": 1063, "answer_sql": "SELECT MIN(Year) as Min_Year FROM conference;"}, {"question_id": 1064, "answer_sql": "SELECT MIN(Year) as Fewest_Conferences_Year FROM conference;"}, {"question_id": 1065, "answer_sql": "SELECT Location FROM conference GROUP BY Location HAVING COUNT(*) >= 2;"}, {"question_id": 1066, "answer_sql": "SELECT DISTINCT Location FROM institution JOIN conference_participation ON institution.Institution_ID = conference_participation.Institution_ID GROUP BY Location HAVING COUNT(Conference_ID) >= 2;"}, {"question_id": 1067, "answer_sql": "SELECT Institution_Name , Location , Founded FROM institution;"}, {"question_id": 1068, "answer_sql": "SELECT institution.Institution_Name, institution.Location, institution.Founded FROM institution ```"}, {"question_id": 1069, "answer_sql": "SELECT COUNT(DISTINCT institution.Institution_ID) FROM institution WHERE institution.Founded BETWEEN 1850 AND 1900;"}, {"question_id": 1070, "answer_sql": "SELECT COUNT(DISTINCT institution.Institution_ID) FROM institution JOIN conference_participation ON institution.Institution_ID = conference_participation.Institution_ID WHERE institution.Founded BETWEEN 1850 AND 1900;"}, {"question_id": 1071, "answer_sql": "SELECT Institution_Name, Location FROM institution WHERE Founded = (SELECT MAX(Founded) FROM institution);"}, {"question_id": 1072, "answer_sql": "SELECT Institution_Name, Location FROM institution WHERE Founded = (SELECT MAX(Founded) FROM institution);"}, {"question_id": 1073, "answer_sql": "SELECT institution.Institution_Name, COUNT(staff.staff_ID) as Number_of_Staff FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_Name ORDER BY Number_of_Staff DESC;"}, {"question_id": 1074, "answer_sql": "SELECT institution.Institution_Name, COUNT(staff.staff_ID) FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE staff. Founded > 1800 GROUP BY institution.Institution_Name;"}, {"question_id": 1075, "answer_sql": "SELECT institution.Institution_Name FROM institution LEFT JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE staff.staff_ID IS NULL;"}, {"question_id": 1076, "answer_sql": "SELECT Institution_Name FROM institution WHERE Institution_ID NOT IN (SELECT Institution_ID FROM staff);"}, {"question_id": 1077, "answer_sql": "SELECT name FROM staff WHERE Age > (SELECT AVG(Age) FROM staff) ```"}, {"question_id": 1078, "answer_sql": "SELECT name FROM staff WHERE Age > (SELECT AVG(Age) FROM staff);"}, {"question_id": 1079, "answer_sql": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM staff WHERE Nationality = 'United States';"}, {"question_id": 1080, "answer_sql": "SELECT MIN(Age) as Min_Age, MAX(Age) as Max_Age FROM staff;"}, {"question_id": 1081, "answer_sql": "SELECT c.Conference_Name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE s.Nationality = 'Canada';"}, {"question_id": 1082, "answer_sql": "SELECT c.Conference_Name FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.Nationality = 'Canada' GROUP BY c.Conference_Name;"}, {"question_id": 1083, "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE cp.role IN ('Speaker', 'Sponsor') GROUP BY s.staff_ID, c.Conference_ID HAVING COUNT(DISTINCT cp.role) = 2;"}, {"question_id": 1084, "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE cp.role IN ('Speaker', 'Sponsor') GROUP BY s.name HAVING COUNT(DISTINCT cp.role) = 2;"}, {"question_id": 1085, "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp1 ON s.staff_ID = cp1.staff_ID JOIN conference c1 ON cp1.Conference_ID = c1.Conference_ID JOIN conference_participation cp2 ON s.staff_ID = cp2.staff_ID JOIN conference c2 ON cp2.Conference_ID = c2.Conference_ID WHERE c1.Conference_Name = 'ACL' AND c2.Conference_Name = 'NACL' GROUP BY s.name HAVING COUNT(DISTINCT c1.Conference_ID) = 2 AND COUNT(DISTINCT c2.Conference_ID) = 2;"}, {"question_id": 1086, "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c1 ON cp.Conference_ID = c1.Conference_ID JOIN conference c2 ON cp.Conference_ID = c2.Conference_ID WHERE c1.Conference_Name = 'ACL' AND c2.Conference_Name = 'NACCL' GROUP BY s.name;"}, {"question_id": 1087, "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Year IN (2003, 2004);"}, {"question_id": 1088, "answer_sql": "SELECT s.name FROM staff s JOIN conference_participation cp ON s.staff_ID = cp.staff_ID JOIN conference c ON cp.Conference_ID = c.Conference_ID WHERE c.Year BETWEEN 2003 AND 2004;"}, {"question_id": 1089, "answer_sql": "SELECT c.Conference_Name, c.Year, COUNT(cp.staff_ID) as Number_of_Participants FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name, c.Year;"}, {"question_id": 1090, "answer_sql": "SELECT c.Conference_Name, c.Year, COUNT(cp.staff_ID) as Number_of_Participants FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_ID, c.Conference_Name, c.Year;"}, {"question_id": 1091, "answer_sql": "SELECT c.Conference_Name, COUNT(cp.staff_ID) as Attendance FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name ORDER BY Attendance DESC LIMIT 2;"}, {"question_id": 1092, "answer_sql": "SELECT c.Conference_Name, COUNT(cp.staff_ID) as Attendees FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID GROUP BY c.Conference_Name ORDER BY Attendees DESC LIMIT 2;"}, {"question_id": 1093, "answer_sql": "SELECT s.name, s.nationality FROM staff s LEFT JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IS NULL;"}, {"question_id": 1094, "answer_sql": "SELECT s.name, s.nationality FROM staff s LEFT JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IS NULL;"}, {"question_id": 1095, "answer_sql": "SELECT institution.Institution_Name, institution.Location FROM institution LEFT JOIN conference_participation ON institution.Institution_ID = conference_participation.Institution_ID WHERE conference_participation.Conference_ID IS NULL AND conference.Year != 2004;"}, {"question_id": 1096, "answer_sql": "SELECT Institution.Institution_Name, Institution.Location FROM Institution LEFT JOIN staff ON Institution.Institution_ID = staff.Institution_ID LEFT JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID WHERE conference_participation.Conference_ID IS NULL AND staff.Age = 2004 AND conference_participation.role IS NULL;"}, {"question_id": 1097, "answer_sql": "SELECT p.pilot_name, h.location FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age = (SELECT MIN(age) FROM PilotSkills)"}, {"question_id": 1098, "answer_sql": "SELECT p.pilot_name, h.location FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE p.age = (SELECT MIN(age) FROM PilotSkills)"}, {"question_id": 1099, "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age;"}, {"question_id": 1100, "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age ASC;"}, {"question_id": 1101, "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"}, {"question_id": 1102, "answer_sql": "SELECT * FROM PilotSkills WHERE age < 30;"}, {"question_id": 1103, "answer_sql": "SELECT pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.plane_name = 'Piper Cub' AND PilotSkills.age < 35;"}, {"question_id": 1104, "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE age < 35 AND plane_name = 'Piper Cub';"}, {"question_id": 1105, "answer_sql": "SELECT Hangar.location FROM Hangar WHERE Hangar.plane_name = 'F-14';"}, {"question_id": 1106, "answer_sql": "SELECT Hangar.location FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.pilot_name = 'F-14'"}, {"question_id": 1107, "answer_sql": "SELECT Hangar.location FROM Hangar GROUP BY Hangar.location;"}, {"question_id": 1108, "answer_sql": "SELECT COUNT(DISTINCT location) FROM pilot_1.Hangar;"}, {"question_id": 1109, "answer_sql": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Jones' AND PilotSkills.age = 32;"}, {"question_id": 1110, "answer_sql": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32;"}, {"question_id": 1111, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"}, {"question_id": 1112, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"}, {"question_id": 1113, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age < 35;"}, {"question_id": 1114, "answer_sql": "SELECT COUNT(*) FROM PilotSkills PS JOIN Hangar H ON PS.plane_name = H.plane_name WHERE PS.age < 35 AND PS.plane_name = 'B-52';"}, {"question_id": 1115, "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age ASC LIMIT 1;"}, {"question_id": 1116, "answer_sql": "SELECT p.pilot_name FROM PilotSkills p JOIN Hangar h ON p.plane_name = h.plane_name WHERE h.location = 'Piper Cub' ORDER BY p.age DESC LIMIT 1;"}, {"question_id": 1117, "answer_sql": "SELECT plane_name FROM Hangar WHERE plane_name IN (SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1);"}, {"question_id": 1118, "answer_sql": "SELECT plane_name FROM Hangar GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1119, "answer_sql": "SELECT plane_name FROM Hangar WHERE plane_name IN ( SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) ASC LIMIT 1 );"}, {"question_id": 1120, "answer_sql": "SELECT plane_name FROM Hangar WHERE plane_name IN (SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) ASC LIMIT 1);"}, {"question_id": 1121, "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Chicago';"}, {"question_id": 1122, "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Chicago';"}, {"question_id": 1123, "answer_sql": "SELECT Hangar.plane_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.pilot_name = 'Smith' AND PilotSkills.age = 41;"}, {"question_id": 1124, "answer_sql": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Smith' AND PilotSkills.age = 41;"}, {"question_id": 1125, "answer_sql": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills;"}, {"question_id": 1126, "answer_sql": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills;"}, {"question_id": 1127, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = 'Smith';"}, {"question_id": 1128, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name = 'Smith';"}, {"question_id": 1129, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40;"}, {"question_id": 1130, "answer_sql": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age > 40;"}, {"question_id": 1131, "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"}, {"question_id": 1132, "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;"}, {"question_id": 1133, "answer_sql": "SELECT P.pilot_name, P.age FROM PilotSkills P ORDER BY P.age DESC;"}, {"question_id": 1134, "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills ORDER BY age DESC;"}, {"question_id": 1135, "answer_sql": "SELECT Hangar.location FROM Hangar ORDER BY Hangar.plane_name;"}, {"question_id": 1136, "answer_sql": "SELECT Hangar.location FROM Hangar ORDER BY Hangar.plane_name;"}, {"question_id": 1137, "answer_sql": "SELECT DISTINCT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name ORDER BY Hangar.plane_name;"}, {"question_id": 1138, "answer_sql": "SELECT DISTINCT plane_name FROM PilotSkills ORDER BY plane_name;"}, {"question_id": 1139, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age BETWEEN 30 AND 40;"}, {"question_id": 1140, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;"}, {"question_id": 1141, "answer_sql": "SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30);"}, {"question_id": 1142, "answer_sql": "SELECT P.pilot_name, P.age FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE (P.pilot_name, P.plane_name) IN ( SELECT pilot_name, plane_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age > 35 ) OR (P.pilot_name, P.plane_name) IN ( SELECT pilot_name, plane_name FROM PilotSkills WHERE plane_name = 'F-14 Fighter' AND age < 30 );"}, {"question_id": 1143, "answer_sql": "SELECT pilot_name, plane_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND pilot_name NOT IN (SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber');"}, {"question_id": 1144, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND plane_name NOT IN (SELECT plane_name FROM Hangar WHERE plane_name = 'B-52 Bomber');"}, {"question_id": 1145, "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.plane_name IN ('Piper Cub', 'B-52 Bomber');"}, {"question_id": 1146, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND Hangar.plane_name = 'B-52 Bomber';"}, {"question_id": 1147, "answer_sql": "SELECT AVG(age) as average_age, MIN(age) as smallest_age FROM PilotSkills;"}, {"question_id": 1148, "answer_sql": "SELECT AVG(age) as average_age, MIN(age) as minimum_age FROM PilotSkills;"}, {"question_id": 1149, "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.location = 'Austin' OR H.location = 'Boston';"}, {"question_id": 1150, "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.location = 'Austin' OR H.location = 'Boston';"}, {"question_id": 1151, "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.plane_name IN ('Piper Cub', 'F-14 Fighter');"}, {"question_id": 1152, "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.plane_name IN ('Piper Cub', 'F-14 Fighter');"}, {"question_id": 1153, "answer_sql": "SELECT Hangar.plane_name, AVG(PilotSkills.age) as average_age FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name;"}, {"question_id": 1154, "answer_sql": "SELECT Hangar.plane_name, AVG(PilotSkills.age) as average_age FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name;"}, {"question_id": 1155, "answer_sql": "SELECT Hangar.plane_name, COUNT(*) as plane_count FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name;"}, {"question_id": 1156, "answer_sql": "SELECT plane_name, COUNT(*) as 'Number of entries' FROM PilotSkills GROUP BY plane_name;"}, {"question_id": 1157, "answer_sql": "SELECT P.pilot_name, H.location FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age = (SELECT MIN(age) FROM PilotSkills) ORDER BY H.plane_name;"}, {"question_id": 1158, "answer_sql": "SELECT DISTINCT Hangar.plane_name, PilotSkills.pilot_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE (PilotSkills.age IS NULL OR PilotSkills.age = ( SELECT MIN(age) FROM PilotSkills WHERE plane_name = Hangar.plane_name )) ORDER BY Hangar.plane_name;"}, {"question_id": 1159, "answer_sql": "SELECT P.pilot_name, H.plane_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age = ( SELECT MIN(age) FROM PilotSkills WHERE P.plane_name = P.plane_name ) GROUP BY H.plane_name;"}, {"question_id": 1160, "answer_sql": "SELECT P.pilot_name, H.plane_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age = ( SELECT MIN(age) FROM PilotSkills WHERE pilot_name = P.pilot_name ) GROUP BY H.plane_name ORDER BY H.plane_name;"}, {"question_id": 1161, "answer_sql": "SELECT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name;"}, {"question_id": 1162, "answer_sql": "SELECT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name;"}, {"question_id": 1163, "answer_sql": "SELECT Hangar.location, COUNT(PilotSkills.pilot_name) as pilot_count, AVG(PilotSkills.age) as average_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.location;"}, {"question_id": 1164, "answer_sql": "SELECT Hangar.location, COUNT(PilotSkills.pilot_name) as pilot_count, AVG(PilotSkills.age) as average_age FROM Hangar LEFT JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.location;"}, {"question_id": 1165, "answer_sql": "SELECT P.pilot_name, H.plane_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age < 35 GROUP BY P.pilot_name, H.plane_name;"}, {"question_id": 1166, "answer_sql": "SELECT Hangar.plane_name, COUNT(PilotSkills.pilot_name) as pilot_count FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35 GROUP BY Hangar.plane_name;"}, {"question_id": 1167, "answer_sql": "SELECT Hangar.location FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age = (SELECT MIN(age) FROM PilotSkills)"}, {"question_id": 1168, "answer_sql": "SELECT Hangar.location FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age = (SELECT MIN(age) FROM PilotSkills)"}, {"question_id": 1169, "answer_sql": "SELECT pilot_name, age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin';"}, {"question_id": 1170, "answer_sql": "SELECT pilot_name, age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location = 'Austin';"}, {"question_id": 1171, "answer_sql": "SELECT P.pilot_name FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE P.age > ( SELECT H.age FROM Hangar H WHERE H.plane_name = 'Piper Cub' ) ORDER BY P.pilot_name;"}, {"question_id": 1172, "answer_sql": "SELECT pilot_name FROM PilotSkills WHERE age > ALL (SELECT age FROM PilotSkills WHERE plane_name = 'Piper Cub') ORDER BY pilot_name;"}, {"question_id": 1173, "answer_sql": "SELECT COUNT(*) FROM PilotSkills PS JOIN Hangar H ON PS.plane_name = H.plane_name WHERE PS.age < ALL ( SELECT age FROM PilotSkills PS2 JOIN Hangar H2 ON PS2.plane_name = H2.plane_name WHERE H2.plane_name = 'F-14 Fighter' );"}, {"question_id": 1174, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age < ALL (SELECT age FROM PilotSkills WHERE plane_name = 'F-14')"}, {"question_id": 1175, "answer_sql": "SELECT DISTINCT Hangar.plane_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE Hangar.plane_name LIKE '%Bomber%';"}, {"question_id": 1176, "answer_sql": "SELECT plane_name FROM Hangar WHERE plane_name LIKE '%Bomber%';"}, {"question_id": 1177, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE age > (SELECT age FROM PilotSkills WHERE pilot_name = 'some pilot' AND plane_name = 'Piper Cub');"}, {"question_id": 1178, "answer_sql": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name IN (SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age > (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'Piper Cub'));"}, {"question_id": 1179, "answer_sql": "SELECT d.Name FROM district d WHERE d.Area_km = ( SELECT MAX(d2.Area_km) FROM district d2 );"}, {"question_id": 1180, "answer_sql": "SELECT Name, Government_website, Population FROM district WHERE Population = (SELECT MIN(Population) FROM district)"}, {"question_id": 1181, "answer_sql": "SELECT D.Name, D.Population FROM district D WHERE D.Area_km > (SELECT AVG(D2.Area_km) FROM district D2)"}, {"question_id": 1182, "answer_sql": "SELECT MAX(Area_km) AS Biggest_Area, AVG(Area_km) AS Average_Area FROM district;"}, {"question_id": 1183, "answer_sql": "SELECT SUM(Population) FROM district JOIN spokesman_district SD ON district.District_ID = SD.District_ID JOIN spokesman Sp ON SD.Spokesman_ID = Sp.Spokesman_ID WHERE Sp.Speach_title = 'Top Districts' AND Sp.Rank_position <= 3;"}, {"question_id": 1184, "answer_sql": "SELECT D.District_ID, D.Name, D.Government_website FROM district D JOIN spokesman_district SD ON D.District_ID = SD.District_ID JOIN spokesman S ON SD.Spokesman_ID = S.Spokesman_ID WHERE S.Speach_title = 'President' ORDER BY D.Population DESC;"}, {"question_id": 1185, "answer_sql": "SELECT D.Name FROM district D JOIN spokesman_district SD ON D.District_ID = SD.District_ID JOIN spokesman S ON SD.Spokesman_ID = S.Spokesman_ID WHERE S.Government_website LIKE '%gov%';"}, {"question_id": 1186, "answer_sql": "SELECT D.District_ID, D.Name FROM district D JOIN spokesman_district SD ON D.District_ID = SD.District_ID WHERE D.Population > 4000 OR D.Area_km > 3000;"}, {"question_id": 1187, "answer_sql": "SELECT s.Name, sd.Start_year, st.Speach_title FROM spokesman s JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID JOIN speech_title st ON s.Speach_title = st.Speach_title_ID ```sql This query will return all the names and speech titles of all the speakers. It uses a JOIN clause to combine rows from two or more tables, based on a related column between them. The speaker's name and the year they started their career are selected from the spokesman and spokesman_district tables, and the title of their speech are selected from the speech_title table."}, {"question_id": 1188, "answer_sql": "SELECT AVG(spokesman.Points) AS Average_Points, AVG(spokesman.Age) AS Average_Age FROM spokesman WHERE spokesman.Rank_position = 1;"}, {"question_id": 1189, "answer_sql": "SELECT s.Name, s.Points FROM spokesman s JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE s.Age < 40 AND sd.Start_year = '2022';"}, {"question_id": 1190, "answer_sql": "SELECT sm.Name, sm.Age FROM spokesman sm JOIN spokesman_district sd ON sm.Spokesman_ID = sd.Spokesman_ID JOIN district d ON sd.District_ID = d.District_ID WHERE d.Name = 'California' ORDER BY sm.Age DESC LIMIT 1;"}, {"question_id": 1191, "answer_sql": "SELECT sm.Name, sm.Points FROM spokesman sm WHERE sm.Points < (SELECT AVG(sm2.Points) FROM spokesman sm2)"}, {"question_id": 1192, "answer_sql": "SELECT d.Name, COUNT(s.Spokesman_ID) as Number_of_Spokesmen FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID JOIN spokesman s ON sd.Spokesman_ID = s.Spokesman_ID GROUP BY d.Name ORDER BY Number_of_Spokesmen DESC LIMIT 1;"}, {"question_id": 1193, "answer_sql": "SELECT s.Name FROM spokesman AS s JOIN spokesman_district AS sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE sd.Start_year < 2004;"}, {"question_id": 1194, "answer_sql": "SELECT d.Name, COUNT(s.Spokesman_ID) as Number_of_Spokesmen FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID JOIN spokesman s ON sd.Spokesman_ID = s.Spokesman_ID GROUP BY d.Name ORDER BY Number_of_Spokesmen DESC;"}, {"question_id": 1195, "answer_sql": "SELECT D.Name FROM district D JOIN spokesman_district SD ON D.District_ID = SD.District_ID JOIN spokesman S1 ON SD.Spokesman_ID = S1.Spokesman_ID AND S1.Rank_position = 1 JOIN spokesman S2 ON SD.Spokesman_ID = S2.Spokesman_ID AND S2.Rank_position = 2 WHERE S1.Name IS NOT NULL AND S2.Name IS NOT NULL;"}, {"question_id": 1196, "answer_sql": "SELECT D.Name FROM district D JOIN spokesman_district SD ON D.District_ID = SD.District_ID GROUP BY D.Name HAVING COUNT(SD.Spokesman_ID) > 1;"}, {"question_id": 1197, "answer_sql": "SELECT COUNT(*) FROM district WHERE District_ID NOT IN (SELECT District_ID FROM spokesman_district);"}, {"question_id": 1198, "answer_sql": "SELECT s.Name FROM spokesman s LEFT JOIN spokesman_district sd ON s.Spokesman_ID = sd.Spokesman_ID WHERE sd.District_ID IS NULL;"}, {"question_id": 1199, "answer_sql": "SELECT SUM(d.Population) AS Total_Population, AVG(d.Population) AS Average_Population FROM district d JOIN spokesman_district sd ON d.District_ID = sd.District_ID GROUP BY d.District_ID;"}, {"question_id": 1200, "answer_sql": "SELECT s.title FROM Sculptures s WHERE s.year = (SELECT MAX(year) FROM Sculptures);"}, {"question_id": 1201, "answer_sql": "SELECT Artists.fname, Artists.lname, Sculptures.title FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.year = (SELECT MAX(year) FROM Sculptures);"}, {"question_id": 1202, "answer_sql": "SELECT title, location FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings);"}, {"question_id": 1203, "answer_sql": "SELECT P.title, P.location FROM Paintings P WHERE P.year = (SELECT MIN(year) FROM Paintings)"}, {"question_id": 1204, "answer_sql": "SELECT Artists.fname, Artists.lname FROM Sculptures JOIN Artists ON Sculptures.sculptorID = Artists.artistID WHERE Sculptures.location = 'gallery 226';"}, {"question_id": 1205, "answer_sql": "SELECT Artists.fname, Artists.lname, Sculptures.title FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.location = 'gallery 226';"}, {"question_id": 1206, "answer_sql": "SELECT title, location FROM Paintings;"}, {"question_id": 1207, "answer_sql": "SELECT P.title, P.location FROM Paintings P;"}, {"question_id": 1208, "answer_sql": "SELECT title, location FROM Sculptures;"}, {"question_id": 1209, "answer_sql": "SELECT Artists.fname, Artists.lname, Sculptures.title, Sculptures.location FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID;"}, {"question_id": 1210, "answer_sql": "SELECT medium FROM Paintings WHERE paintingID = 80;"}, {"question_id": 1211, "answer_sql": "SELECT P.medium FROM Paintings P WHERE P.paintingID = 80;"}, {"question_id": 1212, "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear > 1850;"}, {"question_id": 1213, "answer_sql": "SELECT fname || ' ' || lname AS FullName FROM Artists WHERE birthYear > 1850;"}, {"question_id": 1214, "answer_sql": "SELECT Artists.fname, Artists.lname, Sculptures.year FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.location != 'Gallery 226';"}, {"question_id": 1215, "answer_sql": "SELECT Artists.fname, Artists.lname, Sculptures.year FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.location != 'gallery 226'"}, {"question_id": 1216, "answer_sql": "SELECT A.fname, A.lname FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID WHERE A.birthYear < 1900 GROUP BY A.artistID, A.fname, A.lname;"}, {"question_id": 1217, "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Artists.birthYear < 1900 ORDER BY Artists.fname, Artists.lname;"}, {"question_id": 1218, "answer_sql": "SELECT DISTINCT Artists.birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Artists.birthYear > 1920;"}, {"question_id": 1219, "answer_sql": "SELECT Artists.birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Artists.birthYear > 1920 GROUP BY Artists.artistID;"}, {"question_id": 1220, "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear = (SELECT MIN(birthYear) FROM Artists) AND deathYear = (SELECT MAX(deathYear) FROM Artists);"}, {"question_id": 1221, "answer_sql": "SELECT fname, lname FROM Artists WHERE birthYear = (SELECT MIN(birthYear) FROM Artists) AND deathYear = (SELECT MAX(deathYear) FROM Artists);"}, {"question_id": 1222, "answer_sql": "SELECT lname, fname, birthYear, deathYear FROM Artists WHERE (deathYear IS NULL OR deathYear > 1900) ORDER BY deathYear ASC LIMIT 1;"}, {"question_id": 1223, "answer_sql": "SELECT fname, lname, birthYear, deathYear FROM Artists WHERE (deathYear IS NULL OR deathYear = (SELECT MIN(deathYear) FROM Artists)) ORDER BY birthYear DESC;"}, {"question_id": 1224, "answer_sql": "SELECT fname, birthYear, deathYear FROM Artists WHERE (deathYear - birthYear) = (SELECT MAX(deathYear - birthYear) FROM Artists);"}, {"question_id": 1225, "answer_sql": "SELECT fname, birthYear - deathYear as Age FROM Artists ORDER BY birthYear DESC LIMIT 1;"}, {"question_id": 1226, "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE location = 'gallery 240';"}, {"question_id": 1227, "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE location = 'Gallery 240';"}, {"question_id": 1228, "answer_sql": "SELECT COUNT(*) FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Artists.deathYear IS NOT NULL;"}, {"question_id": 1229, "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists ORDER BY deathYear DESC LIMIT 1);"}, {"question_id": 1230, "answer_sql": "SELECT Artists.fname, Artists.birthYear, Artists.deathYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Artists.fname = 'Mary'"}, {"question_id": 1231, "answer_sql": "SELECT title, year FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Mary';"}, {"question_id": 1232, "answer_sql": "SELECT width_mm FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE birthYear < 1850)"}, {"question_id": 1233, "answer_sql": "SELECT width_mm FROM Paintings WHERE painterID IN (SELECT artistID FROM Artists WHERE birthYear < 1850)"}, {"question_id": 1234, "answer_sql": "SELECT location, medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo';"}, {"question_id": 1235, "answer_sql": "SELECT location, medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo'"}, {"question_id": 1236, "answer_sql": "SELECT fname, lname FROM Artists WHERE artistID IN ( SELECT DISTINCT painterID FROM Paintings UNION SELECT DISTINCT sculptorID FROM Sculptures );"}, {"question_id": 1237, "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY Artists.artistID;"}, {"question_id": 1238, "answer_sql": "SELECT fname, lname FROM Artists WHERE artistID IN ( SELECT painterID FROM Paintings WHERE medium = 'oil' AND mediumOn = 'lithographic' );"}, {"question_id": 1239, "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Paintings.medium = 'Oil' AND Paintings.medium = 'Lithographic' OR Sculptures.medium = 'Oil' AND Sculptures.medium = 'Lithographic';"}, {"question_id": 1240, "answer_sql": "SELECT birthYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year = 1884 AND Paintings.mediumOn = 'canvas';"}, {"question_id": 1241, "answer_sql": "SELECT birthYear FROM Artists WHERE Artists.artistID IN (SELECT painterID FROM Paintings WHERE Paintings.year = 1884);"}, {"question_id": 1242, "answer_sql": "SELECT DISTINCT fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE medium = 'Oil' AND location = 'gallery 241';"}, {"question_id": 1243, "answer_sql": "SELECT fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.location = 'gallery 241' AND Paintings.medium = 'Oil';"}, {"question_id": 1244, "answer_sql": "SELECT medium, COUNT(*) FROM Paintings GROUP BY medium;"}, {"question_id": 1245, "answer_sql": "SELECT medium, COUNT(*) as 'Number of Works' FROM Paintings JOIN Artists ON Artists.artistID = Paintings.painterID GROUP BY medium;"}, {"question_id": 1246, "answer_sql": "SELECT medium, AVG(height_mm) as average_height FROM Paintings GROUP BY medium;"}, {"question_id": 1247, "answer_sql": "SELECT medium, AVG(height_mm) as average_height FROM Paintings GROUP BY medium;"}, {"question_id": 1248, "answer_sql": "SELECT paintingID, title, year, location, COUNT(*) as 'Number of Paintings' FROM Paintings WHERE year < 1900 GROUP BY location ORDER BY Number of Paintings DESC;"}, {"question_id": 1249, "answer_sql": "SELECT COUNT(*) FROM Paintings WHERE year < 1900 AND location NOT LIKE 'Unknown%';"}, {"question_id": 1250, "answer_sql": "SELECT title FROM Paintings WHERE year > 1910 AND medium = 'Oil';"}, {"question_id": 1251, "answer_sql": "SELECT P.title FROM Paintings P WHERE P.year > 1910;"}, {"question_id": 1252, "answer_sql": "SELECT DISTINCT painterID FROM Paintings WHERE medium = 'Oil' AND location = 'Gallery 240';"}, {"question_id": 1253, "answer_sql": "SELECT painterID FROM Paintings WHERE medium = 'Oil' AND location = 'Gallery 240';"}, {"question_id": 1254, "answer_sql": "SELECT P.title FROM Paintings P WHERE P.height_mm > ( SELECT MAX(height_mm) FROM Paintings WHERE medium = 'canvas' )"}, {"question_id": 1255, "answer_sql": "SELECT P.title FROM Paintings P WHERE P.height_mm > ( SELECT MAX(P2.height_mm) FROM Paintings P2 WHERE P2.medium = 'canvas' )"}, {"question_id": 1256, "answer_sql": "SELECT DISTINCT paintingID FROM Paintings WHERE year < ( SELECT year FROM Paintings WHERE location = 'gallery 240' )"}, {"question_id": 1257, "answer_sql": "SELECT DISTINCT paintingID FROM Paintings WHERE year < (SELECT year FROM Paintings WHERE paintingID = 240);"}, {"question_id": 1258, "answer_sql": "SELECT paintingID FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings);"}, {"question_id": 1259, "answer_sql": "SELECT paintingID FROM Paintings WHERE year = (SELECT MIN(year) FROM Paintings);"}, {"question_id": 1260, "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID JOIN Paintings ON Sculptures.sculptureID = Paintings.painterID WHERE Paintings.title LIKE '%female%' ORDER BY Artists.fname, Artists.lname;"}, {"question_id": 1261, "answer_sql": "SELECT Artists.fname, Artists.lname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE Sculptures.title LIKE '%female%'"}, {"question_id": 1262, "answer_sql": "SELECT title FROM Paintings ORDER BY title ASC;"}, {"question_id": 1263, "answer_sql": "SELECT title FROM Paintings ORDER BY title ASC;"}, {"question_id": 1264, "answer_sql": "SELECT P.title, P.year, P.height_mm, P.width_mm FROM Paintings P ORDER BY P.height_mm DESC;"}, {"question_id": 1265, "answer_sql": "SELECT P.title FROM Paintings P ORDER BY P.height_mm ASC;"}, {"question_id": 1266, "answer_sql": "SELECT title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE year BETWEEN 1900 AND 1950;"}, {"question_id": 1267, "answer_sql": "SELECT P.title, S.title FROM Paintings P JOIN Sculptures S ON P.painterID = S.sculptorID WHERE P.year BETWEEN 1900 AND 1950 OR S.year BETWEEN 1900 AND 1950;"}, {"question_id": 1268, "answer_sql": "SELECT P.title, S.title FROM Artists A JOIN Paintings P ON A.artistID = P.painterID JOIN Sculptures S ON A.artistID = S.sculptorID WHERE A.artistID = 222;"}, {"question_id": 1269, "answer_sql": "SELECT title FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Artists.artistID = 222;"}, {"question_id": 1270, "answer_sql": "SELECT Artists.artistID FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year < 1900 GROUP BY Artists.artistID ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1271, "answer_sql": "SELECT Artists.artistID FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year < 1900 GROUP BY Artists.artistID ORDER BY COUNT(Paintings.paintingID) DESC LIMIT 1;"}, {"question_id": 1272, "answer_sql": "SELECT fname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY Artists.artistID ORDER BY COUNT(Sculptures.sculptureID) DESC LIMIT 1;"}, {"question_id": 1273, "answer_sql": "SELECT fname FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY fname ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1274, "answer_sql": "SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800;"}, {"question_id": 1275, "answer_sql": "SELECT title FROM Paintings WHERE width_mm < 600 OR height_mm > 800;"}, {"question_id": 1276, "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 OR year > 1930;"}, {"question_id": 1277, "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 OR year > 1930;"}, {"question_id": 1278, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;"}, {"question_id": 1279, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm BETWEEN 500 AND 2000;"}, {"question_id": 1280, "answer_sql": "SELECT location FROM Paintings WHERE medium = 'on panel' OR medium = 'on canvas';"}, {"question_id": 1281, "answer_sql": "SELECT location FROM Paintings WHERE medium = 'on panels' OR medium = 'on canvas';"}, {"question_id": 1282, "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 AND year > 1930;"}, {"question_id": 1283, "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 AND year > 1930;"}, {"question_id": 1284, "answer_sql": "SELECT AVG(height_mm), AVG(width_mm) FROM Paintings WHERE medium = 'Oil' AND location = 'Gallery 241';"}, {"question_id": 1285, "answer_sql": "SELECT AVG(height_mm), AVG(width_mm) FROM Paintings WHERE medium = 'Oil' AND location = 'Gallery 241';"}, {"question_id": 1286, "answer_sql": "SELECT MAX(height_mm), paintingID FROM Paintings WHERE year < 1900;"}, {"question_id": 1287, "answer_sql": "SELECT height_mm, paintingID FROM Paintings WHERE year < 1900 ORDER BY height_mm DESC LIMIT 1;"}, {"question_id": 1288, "answer_sql": "SELECT year, MAX(height_mm) as max_height, MAX(width_mm) as max_width FROM Paintings GROUP BY year;"}, {"question_id": 1289, "answer_sql": "SELECT year, MAX(height_mm) AS max_height, MAX(width_mm) AS max_width FROM Paintings GROUP BY year"}, {"question_id": 1290, "answer_sql": "SELECT painters.fname, painters.lname, AVG(paintings.height_mm) AS avg_height, AVG(paintings.width_mm) AS avg_width FROM painters JOIN paintings ON painters.artistID = paintings.painterID GROUP BY painters.fname, painters.lname ORDER BY painters.fname, painters.lname;"}, {"question_id": 1291, "answer_sql": "SELECT painters.fname, painters.lname, AVG(paintings.height_mm) AS avg_height, AVG(paintings.width_mm) AS avg_width FROM Artists AS painters JOIN Paintings ON painters.artistID = paintings.painterID GROUP BY painters.fname, painters.lname ORDER BY painters.fname, painters.lname;"}, {"question_id": 1292, "answer_sql": "SELECT fname, COUNT(paintingID) as 'Number of Works' FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID GROUP BY fname HAVING COUNT(paintingID) >= 2;"}, {"question_id": 1293, "answer_sql": "SELECT a.fname, COUNT(p.paintingID) as PaintingCount FROM Artists a JOIN Paintings p ON a.artistID = p.painterID GROUP BY a.fname HAVING COUNT(p.paintingID) >= 2;"}, {"question_id": 1294, "answer_sql": "SELECT lname, fname, birthYear, deathYear FROM Artists WHERE artistID IN ( SELECT DISTINCT painterID FROM Paintings GROUP BY painterID HAVING COUNT(paintingID) <= 3 ) AND deathYear IS NOT NULL;"}, {"question_id": 1295, "answer_sql": "SELECT A.lname, A.fname, A.birthYear, A.deathYear FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.artistID, A.lname, A.fname, A.birthYear, A.deathYear HAVING COUNT(P.paintingID) < 4;"}, {"question_id": 1296, "answer_sql": "SELECT Artists.deathYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY Artists.deathYear ORDER BY COUNT(Sculptures.sculptureID) ASC LIMIT 1;"}, {"question_id": 1297, "answer_sql": "SELECT Artists.fname, Artists.lname, Artists.deathYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID GROUP BY Artists.artistID ORDER BY COUNT(Sculptures.sculptureID) ASC LIMIT 1;"}, {"question_id": 1298, "answer_sql": "SELECT paintingID, width_mm FROM Paintings WHERE location = 'Gallery 240' ORDER BY width_mm DESC LIMIT 1;"}, {"question_id": 1299, "answer_sql": "SELECT height_mm, paintingID FROM Paintings WHERE location = 'Gallery 240' ORDER BY width_mm DESC LIMIT 1;"}, {"question_id": 1300, "answer_sql": "SELECT paintingID FROM Paintings WHERE year < (SELECT MAX(year) FROM Paintings WHERE location = 'Gallery 240');"}, {"question_id": 1301, "answer_sql": "SELECT paintingID FROM Paintings WHERE year < (SELECT MIN(year) FROM Paintings WHERE location = 'Gallery 240')"}, {"question_id": 1302, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > ( SELECT MAX(height_mm) FROM Paintings WHERE year > 1900 );"}, {"question_id": 1303, "answer_sql": "SELECT paintingID FROM Paintings WHERE height_mm > ( SELECT MAX(height_mm) FROM Paintings WHERE year > 1900 )"}, {"question_id": 1304, "answer_sql": "SELECT Artists.fname, Artists.lname, COUNT(Paintings.paintingID) as num_paintings FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.medium = 'Oil' GROUP BY Artists.artistID, Artists.lname, Artists.fname ORDER BY num_paintings DESC LIMIT 3;"}, {"question_id": 1305, "answer_sql": "SELECT Artists.lname, Artists.fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.medium = 'Oil' GROUP BY Artists.artistID, Artists.lname, Artists.fname ORDER BY COUNT(Paintings.paintingID) DESC;"}, {"question_id": 1306, "answer_sql": "SELECT paintingID, location, title FROM Paintings WHERE medium = 'Oil' ORDER BY year;"}, {"question_id": 1307, "answer_sql": "SELECT paintingID, location, title FROM Paintings ORDER BY year"}, {"question_id": 1308, "answer_sql": "SELECT P.year, P.location, P.title FROM Paintings P WHERE P.height_mm > 1000 ORDER BY P.title;"}, {"question_id": 1309, "answer_sql": "SELECT P.year, P.location, P.title FROM Paintings P WHERE P.height_mm > 1000 ORDER BY P.title ASC;"}, {"question_id": 1310, "answer_sql": "SELECT fname, lname FROM Artists WHERE artistID IN ( SELECT DISTINCT painterID FROM Paintings WHERE paintingID NOT IN ( SELECT DISTINCT paintingID FROM Sculptures ) )"}, {"question_id": 1311, "answer_sql": "SELECT fname, lname FROM Artists WHERE artistID NOT IN (SELECT DISTINCT painterID FROM Sculptures) AND artistID IN (SELECT artistID FROM Paintings);"}, {"question_id": 1312, "answer_sql": "SELECT location FROM Paintings WHERE year < 1885 AND medium NOT LIKE '%canvas%';"}, {"question_id": 1313, "answer_sql": "SELECT Artists.fname, Artists.lname, Paintings.title FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year < 1885 AND Paintings.mediumOn != 'canvas'"}, {"question_id": 1314, "answer_sql": "SELECT COUNT(*) FROM race;"}, {"question_id": 1315, "answer_sql": "SELECT COUNT(*) FROM race;"}, {"question_id": 1316, "answer_sql": "SELECT r. Winning_driver , r. Winning_team FROM race as r ORDER BY r. Winning_team ASC;"}, {"question_id": 1317, "answer_sql": "SELECT Winning_driver , Winning_team FROM race ORDER BY Winning_team ASC;"}, {"question_id": 1318, "answer_sql": "SELECT D. Driver_Name FROM race R JOIN driver D ON R. Driver_ID = D. Driver_ID WHERE R. Pole_Position != 'Junior Strous' AND R. Winning_driver IS NOT NULL AND D. Entrant = 'Winning' AND D. Chassis = 'Junior Strous' AND D. Engine = 'Junior Strous' AND D. Age > 15;"}, {"question_id": 1319, "answer_sql": "SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous' AND Winning_driver IS NOT NULL;"}, {"question_id": 1320, "answer_sql": "SELECT Constructor FROM driver ORDER BY Age ASC;"}, {"question_id": 1321, "answer_sql": "SELECT D. Constructor , COUNT(D. Driver_ID ) as Number of Drivers FROM driver as D WHERE D. Entrant = 'Yes' GROUP BY D. Constructor ORDER BY Number of Drivers ASC;"}, {"question_id": 1322, "answer_sql": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;"}, {"question_id": 1323, "answer_sql": "SELECT D.Driver_Name, D.Entrant, D.Constructor FROM driver D JOIN race R ON D.Driver_ID = R.Driver_ID WHERE D.Age >= 20 AND R.Race_Name = '2022 World Championship';"}, {"question_id": 1324, "answer_sql": "SELECT MIN(Age) as Min_Age, MAX(Age) as Max_Age FROM driver;"}, {"question_id": 1325, "answer_sql": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM driver;"}, {"question_id": 1326, "answer_sql": "SELECT COUNT(DISTINCT Engine) FROM driver WHERE Age > 30 AND Age < 20;"}, {"question_id": 1327, "answer_sql": "SELECT COUNT(DISTINCT `Engine`) FROM `driver` WHERE `Age` > 30 AND `Age` < 20;"}, {"question_id": 1328, "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;"}, {"question_id": 1329, "answer_sql": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC;"}, {"question_id": 1330, "answer_sql": "SELECT driver . Driver_Name , race . Race_Name FROM driver JOIN race ON driver . Driver_ID = race . Driver_ID ;"}, {"question_id": 1331, "answer_sql": "SELECT D.Driver_Name, R.Race_Name FROM driver D JOIN race R ON D.Driver_ID = R.Driver_ID;"}, {"question_id": 1332, "answer_sql": "SELECT Driver_Name , COUNT( Race . Road ) as Number_of_Races FROM driver JOIN race ON race . Driver_ID = driver . Driver_ID GROUP BY Driver_Name ;"}, {"question_id": 1333, "answer_sql": "SELECT d.Driver_Name, COUNT(r.Road) as Total_Races FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_Name;"}, {"question_id": 1334, "answer_sql": "SELECT d. Driver_Name , d. Age FROM driver d JOIN race r ON d. Driver_ID = r. Driver_ID GROUP BY d. Driver_Name , d. Age ORDER BY COUNT(r. Race_Name ) DESC LIMIT 1;"}, {"question_id": 1335, "answer_sql": "SELECT MAX(Age) FROM driver WHERE `Entrant` = 'Yes';"}, {"question_id": 1336, "answer_sql": "SELECT D.Driver_Name, D.Age FROM driver D JOIN race R ON D.Driver_ID = R.Driver_ID GROUP BY D.Driver_Name, D.Age HAVING COUNT(R.Road) >= 2;"}, {"question_id": 1337, "answer_sql": "SELECT d.Driver_Name, d.Age FROM driver d JOIN race r ON d.Driver_ID = r.Driver_ID GROUP BY d.Driver_Name, d.Age HAVING COUNT(r.Road) >= 2;"}, {"question_id": 1338, "answer_sql": "SELECT r.Race_Name FROM race r JOIN driver d ON r.Driver_ID = d.Driver_ID WHERE d.Age >= 26;"}, {"question_id": 1339, "answer_sql": "SELECT Race_Name FROM race WHERE Driver_ID IN (SELECT Driver_ID FROM driver WHERE Age >= 26);"}, {"question_id": 1340, "answer_sql": "SELECT Driver_Name FROM driver WHERE Constructor != 'Bugatti';"}, {"question_id": 1341, "answer_sql": "SELECT Driver_Name FROM driver WHERE Constructor != 'Bugatti';"}, {"question_id": 1342, "answer_sql": "SELECT Constructor, COUNT(*) as Number_of_Drivers FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY Constructor;"}, {"question_id": 1343, "answer_sql": "SELECT c. Constructor , COUNT(DISTINCT d. Driver_ID ) as Number of Drivers FROM race as r JOIN driver as d ON r. Driver_ID = d. Driver_ID JOIN (SELECT Constructor FROM race GROUP BY Constructor HAVING COUNT( Road ) > 1) as c ON d. Constructor = c. Constructor GROUP BY c. Constructor ORDER BY Number of Drivers DESC;"}, {"question_id": 1344, "answer_sql": "SELECT Engine, COUNT(*) as Frequency FROM race GROUP BY Engine ORDER BY Frequency DESC LIMIT 1;"}, {"question_id": 1345, "answer_sql": "SELECT Engine, COUNT(*) as Frequency FROM race GROUP BY Engine ORDER BY Frequency DESC LIMIT 1;"}, {"question_id": 1346, "answer_sql": "SELECT Engine FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY Engine HAVING COUNT(*) >= 2;"}, {"question_id": 1347, "answer_sql": "SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(Driver_ID) > 1;"}, {"question_id": 1348, "answer_sql": "SELECT D.Driver_Name FROM driver D LEFT JOIN race R ON D.Driver_ID = R.Driver_ID WHERE R.Driver_ID IS NULL;"}, {"question_id": 1349, "answer_sql": "SELECT D.Driver_Name FROM driver D LEFT JOIN race R ON D.Driver_ID = R.Driver_ID WHERE R.Race_Name IS NULL;"}, {"question_id": 1350, "answer_sql": "SELECT DISTINCT Constructor FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE Age < 20 AND Age > 30;"}, {"question_id": 1351, "answer_sql": "SELECT DISTINCT Constructor FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID WHERE driver.Age < 20 AND driver.Age > 30;"}, {"question_id": 1352, "answer_sql": "SELECT DISTINCT `Winning_team` FROM `race` WHERE `Winning_team` IS NOT NULL GROUP BY `Winning_team` HAVING COUNT(`Winning_team`) > 1;"}, {"question_id": 1353, "answer_sql": "SELECT t1. Winning_team , COUNT(*) as Number_of_Races FROM race as t1 WHERE t1. Winning_driver IS NOT NULL GROUP BY t1. Winning_team HAVING COUNT(*) > 1 ORDER BY Number_of_Races DESC;"}, {"question_id": 1354, "answer_sql": "SELECT D1.Driver_Name, D2.Driver_Name FROM driver D1 JOIN race R1 ON D1.Driver_ID = R1.Driver_ID JOIN race R2 ON D1.Driver_ID = R2.Driver_ID WHERE R1.Pole_Position = 'James Hinchcliffe' AND R2.Pole_Position = 'Carl Skerlong' AND R1.Road < R2.Road;"}, {"question_id": 1355, "answer_sql": "SELECT D.Driver_Name FROM driver D JOIN race R ON D.Driver_ID = R.Driver_ID WHERE R.Pole_Position = 'James Hinchcliffe' AND R.Fastest_Lap = 'Carl Skerlong'"}, {"question_id": 1356, "answer_sql": "SELECT D.Driver_Name FROM driver D JOIN race R ON D.Driver_ID = R.Driver_ID WHERE R.Pole_Position = 'James Hinchcliffe' AND R.Fastest_Lap NOT IN ( SELECT Fastest_Lap FROM race R2 WHERE R2.Pole_Position < 'James Hinchcliffe' )"}, {"question_id": 1357, "answer_sql": "SELECT D.Driver_Name FROM driver D WHERE D.Driver_ID NOT IN ( SELECT R.Driver_ID FROM race R WHERE R.Pole_Position = 'James Hinchcliffe' )"}, {"question_id": 1358, "answer_sql": "SELECT COUNT(*) FROM languages;"}, {"question_id": 1359, "answer_sql": "SELECT COUNT(*) FROM languages;"}, {"question_id": 1360, "answer_sql": "SELECT l.name FROM languages l ORDER BY l.name ASC;"}, {"question_id": 1361, "answer_sql": "SELECT name FROM languages ORDER BY name;"}, {"question_id": 1362, "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id WHERE l.name LIKE '%ish%'"}, {"question_id": 1363, "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id WHERE l.name LIKE '%ish%'"}, {"question_id": 1364, "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.overall_score DESC;"}, {"question_id": 1365, "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.overall_score DESC;"}, {"question_id": 1366, "answer_sql": "SELECT AVG(c. justice_score ) as average_justice_score FROM countries as c JOIN official_languages as ol ON c. id = ol. country_id ;"}, {"question_id": 1367, "answer_sql": "SELECT AVG( justice_score ) FROM countries ;"}, {"question_id": 1368, "answer_sql": "SELECT MIN(health_score) as min_health_score, MAX(health_score) as max_health_score FROM countries WHERE name != 'Norway';"}, {"question_id": 1369, "answer_sql": "SELECT MAX(countries.health_score) AS max_health_score, MIN(countries.health_score) AS min_health_score FROM countries WHERE countries.name != 'Norway'"}, {"question_id": 1370, "answer_sql": "SELECT COUNT(DISTINCT language_id) FROM official_languages;"}, {"question_id": 1371, "answer_sql": "SELECT COUNT(DISTINCT language_id) FROM official_languages;"}, {"question_id": 1372, "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.education_score DESC;"}, {"question_id": 1373, "answer_sql": "SELECT c.name FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id WHERE l.name = 'English' ORDER BY c.education_score DESC;"}, {"question_id": 1374, "answer_sql": "SELECT c.name FROM countries c JOIN ( SELECT country_id FROM official_languages GROUP BY country_id ORDER BY SUM(o.justice_score) DESC LIMIT 1 ) o ON c.id = o.country_id"}, {"question_id": 1375, "answer_sql": "SELECT c.name FROM countries c JOIN ( SELECT country_id FROM official_languages GROUP BY country_id ORDER BY SUM( politics_score ) DESC LIMIT 1 ) o ON c.id = o.country_id"}, {"question_id": 1376, "answer_sql": "SELECT c.name AS Country, l.name AS Language FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id;"}, {"question_id": 1377, "answer_sql": "SELECT c.name AS Country, l.name AS Language FROM countries c JOIN official_languages ol ON c.id = ol.country_id JOIN languages l ON ol.language_id = l.id;"}, {"question_id": 1378, "answer_sql": "SELECT l.name AS Language, COUNT(ol.country_id) AS NumberOfCountries FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name;"}, {"question_id": 1379, "answer_sql": "SELECT l.name, COUNT(DISTINCT c.id) as 'Number of Countries' FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name;"}, {"question_id": 1380, "answer_sql": "SELECT l.name AS language, c.name AS country FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name, c.name ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1381, "answer_sql": "SELECT l.name AS language, COUNT(ol.country_id) AS count FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.id, l.name ORDER BY count DESC LIMIT 1;"}, {"question_id": 1382, "answer_sql": "SELECT l.name AS language, c.name AS country FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name, c.name HAVING COUNT(*) >= 2;"}, {"question_id": 1383, "answer_sql": "SELECT l.name AS Language, c.name AS Country FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name, c.name HAVING COUNT(DISTINCT c.id) > 1;"}, {"question_id": 1384, "answer_sql": "SELECT AVG(c. overall_score ) FROM countries c JOIN official_languages ol ON c. id = ol. country_id JOIN languages l ON ol. language_id = l. id WHERE l. name = 'English';"}, {"question_id": 1385, "answer_sql": "SELECT AVG(c. overall_score ) FROM countries c JOIN official_languages ol ON c. id = ol. country_id JOIN languages l ON l. id = ol. language_id WHERE l. name = 'English';"}, {"question_id": 1386, "answer_sql": "SELECT l.name AS Language, c.name AS Country, COUNT(ol.language_id) AS Spoken_Count FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name, c.name ORDER BY Spoken_Count DESC LIMIT 3;"}, {"question_id": 1387, "answer_sql": "SELECT l.name AS Language, c.name AS Country FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name, c.name ORDER BY COUNT(*) DESC LIMIT 3;"}, {"question_id": 1388, "answer_sql": "SELECT l.name, AVG(c.overall_score) as average_overall_score FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name ORDER BY average_overall_score DESC;"}, {"question_id": 1389, "answer_sql": "SELECT l.name, AVG(c.overall_score) as average_overall_score FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id GROUP BY l.name ORDER BY average_overall_score DESC;"}, {"question_id": 1390, "answer_sql": "SELECT c.name FROM countries AS c JOIN official_languages AS ol ON c.id = ol.country_id GROUP BY c.name ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1391, "answer_sql": "SELECT c.name AS country, COUNT(l.name) AS num_languages FROM countries AS c JOIN official_languages AS ol ON c.id = ol.country_id JOIN languages AS l ON ol.language_id = l.id GROUP BY c.name ORDER BY num_languages DESC LIMIT 1;"}, {"question_id": 1392, "answer_sql": "SELECT l.name FROM languages l LEFT JOIN official_languages ol ON l.id = ol.language_id WHERE ol.country_id IS NULL;"}, {"question_id": 1393, "answer_sql": "SELECT l.name FROM languages l LEFT JOIN official_languages ol ON l.id = ol.language_id WHERE ol.country_id IS NULL;"}, {"question_id": 1394, "answer_sql": "SELECT c.name FROM countries c LEFT JOIN official_languages ol ON c.id = ol.country_id WHERE ol.language_id IS NULL;"}, {"question_id": 1395, "answer_sql": "SELECT c.name FROM countries c LEFT JOIN official_languages ol ON c.id = ol.country_id WHERE ol.language_id IS NULL;"}, {"question_id": 1396, "answer_sql": "SELECT l.name AS language_name, c.name AS country_name FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id WHERE c.overall_score > 95 AND c.overall_score < 90;"}, {"question_id": 1397, "answer_sql": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id JOIN countries c ON c.id = ol.country_id WHERE c.overall_score > 95 AND c.overall_score < 90"}, {"question_id": 1398, "answer_sql": "SELECT country, town_city FROM Addresses;"}, {"question_id": 1399, "answer_sql": "SELECT `country`, `town_city` FROM `Addresses`"}, {"question_id": 1400, "answer_sql": "SELECT county_state_province FROM Properties;"}, {"question_id": 1401, "answer_sql": "SELECT `county_state_province` FROM `Properties` WHERE `property_id` = ?;"}, {"question_id": 1402, "answer_sql": "SELECT `feature_name`, `feature_value` FROM `Property_Features` WHERE `feature_id` = ( SELECT `feature_id` FROM `Features` WHERE `feature_name` = 'rooftop' )"}, {"question_id": 1403, "answer_sql": "SELECT `feature_description` FROM `Features` WHERE `feature_name` = 'rooftop';"}, {"question_id": 1404, "answer_sql": "SELECT feature_name, feature_description FROM ( SELECT feature_name, feature_description, COUNT(*) as frequency FROM Property_Features GROUP BY feature_name, feature_description ORDER BY frequency DESC LIMIT 1 ) as most_common_features"}, {"question_id": 1405, "answer_sql": "SELECT `feature_name`, `feature_description` FROM `Property_Features` WHERE `feature_id` IN ( SELECT `feature_id` FROM `Property_Features` GROUP BY `feature_id` ORDER BY COUNT(*) DESC LIMIT 1 );"}, {"question_id": 1406, "answer_sql": "SELECT MIN(`room_count`) FROM `Properties`;"}, {"question_id": 1407, "answer_sql": "SELECT MIN(room_count) FROM Properties;"}, {"question_id": 1408, "answer_sql": "SELECT COUNT(*) FROM Properties WHERE garage_yn = 'Y' OR parking_lots = 'Y';"}, {"question_id": 1409, "answer_sql": "SELECT COUNT(*) FROM Properties WHERE garage_yn = 'Y' OR parking_lots = 'Y';"}, {"question_id": 1410, "answer_sql": "SELECT `Ref_Age_Categories`.`age_category_code` FROM `Users` JOIN `Ref_Age_Categories` ON `Users`.`age_category_code` = `Ref_Age_Categories`.`age_category_code` WHERE `Users`.`first_name` LIKE '%Mother%'"}, {"question_id": 1411, "answer_sql": "SELECT `age_category_code` FROM `Users` WHERE `other_user_details` LIKE '%Mother%';"}, {"question_id": 1412, "answer_sql": "SELECT first_name FROM Users WHERE user_id = (SELECT user_id FROM Properties GROUP BY owner_user_id ORDER BY COUNT(*) DESC LIMIT 1);"}, {"question_id": 1413, "answer_sql": "SELECT first_name FROM Users WHERE user_id = (SELECT user_id FROM Properties ORDER BY property_id DESC LIMIT 1);"}, {"question_id": 1414, "answer_sql": "SELECT AVG(room_count) FROM Properties WHERE garage_yn = 'Y';"}, {"question_id": 1415, "answer_sql": "SELECT AVG(room_count) FROM Properties WHERE garage_yn = 'Y';"}, {"question_id": 1416, "answer_sql": "SELECT town_city FROM Properties WHERE `garage_yn` = 'Y' AND `property_type_code` = 'SWIM';"}, {"question_id": 1417, "answer_sql": "SELECT DISTINCT town_city FROM Properties WHERE garage_yn = 'Y';"}, {"question_id": 1418, "answer_sql": "SELECT `Properties`.`property_id`, `Properties`.`vendor_requested_price` FROM `Properties` WHERE `Properties`.`vendor_requested_price` = ( SELECT MIN(`Properties`.`vendor_requested_price`) FROM `Properties` ) ;"}, {"question_id": 1419, "answer_sql": "SELECT p.property_id, p.vendor_requested_price FROM Properties p WHERE p.vendor_requested_price = (SELECT MIN(vendor_requested_price) FROM Properties);"}, {"question_id": 1420, "answer_sql": "SELECT AVG(room_count) as average_rooms FROM Properties;"}, {"question_id": 1421, "answer_sql": "SELECT AVG(room_count) FROM Properties;"}, {"question_id": 1422, "answer_sql": "SELECT COUNT(DISTINCT `room_size`) FROM `Rooms`;"}, {"question_id": 1423, "answer_sql": "SELECT room_type_code, COUNT(room_size) as room_size_count FROM Rooms GROUP BY room_type_code;"}, {"question_id": 1424, "answer_sql": "SELECT Users.user_id, Users.login_name, Users.first_name, Users.last_name, Users.other_user_details, User_Searches.search_string FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id GROUP BY Users.user_id, Users.login_name, Users.first_name, Users.last_name, Users.other_user_details, User_Searches.search_string HAVING COUNT(User_Searches.search_string) >= 2;"}, {"question_id": 1425, "answer_sql": "SELECT u.user_id, u.login_name, u.first_name, u.last_name, COUNT(DISTINCT us.search_seq) as num_searches FROM Users u JOIN User_Searches us ON u.user_id = us.user_id GROUP BY u.user_id, u.login_name, u.first_name, u.last_name HAVING num_searches >= 2;"}, {"question_id": 1426, "answer_sql": "SELECT MAX(search_datetime) as latest_search_time FROM User_Searches;"}, {"question_id": 1427, "answer_sql": "SELECT MAX(`search_datetime`) as `Most Recent Search` FROM `User_Searches`;"}, {"question_id": 1428, "answer_sql": "SELECT `User_Searches`.`user_id`, `User_Searches`.`search_seq`, `User_Searches`.`search_datetime`, `User_Searches`.`search_string`, `Users`.`first_name`, `Users`.`last_name`, `Users`.`login_name` FROM `User_Searches` JOIN `Users` ON `User_Searches`.`user_id` = `Users`.`user_id` ORDER BY `User_Searches`.`search_string` DESC;"}, {"question_id": 1429, "answer_sql": "SELECT `search_string`, `search_datetime` FROM `User_Searches` ORDER BY `search_string` DESC;"}, {"question_id": 1430, "answer_sql": "SELECT `Addresses`.`zip_postcode` FROM `Addresses` LEFT JOIN (SELECT `Users`.`user_id`, COUNT(`Properties`.`property_id`) AS `property_count` FROM `Users` LEFT JOIN `Properties` ON `Users`.`user_id` = `Properties`.`owner_user_id` GROUP BY `Users`.`user_id` HAVING `property_count` > 2 ) AS `user_properties` ON `Addresses`.`address_id` = `user_properties`.`user_id` WHERE `user_properties`.`user_id` IS NULL"}, {"question_id": 1431, "answer_sql": "SELECT DISTINCT `Properties`.`property_id`, `Addresses`.`zip_postcode` FROM `Properties` JOIN `Addresses` ON `Properties`.`property_address_id` = `Addresses`.`address_id` JOIN `Users` ON `Properties`.`owner_user_id` = `Users`.`user_id` WHERE `Users`.`is_buyer` = 'N' GROUP BY `Addresses`.`zip_postcode` HAVING COUNT(`Properties`.`property_id`) <= 2;"}, {"question_id": 1432, "answer_sql": "SELECT `user_id`, `user_category_code` FROM `Users` WHERE `is_buyer` = 'Y' AND `is_seller` = 'N' AND `user_id` IN ( SELECT `user_id` FROM `User_Searches` WHERE `search_string` = 'What are the users making only one search' );"}, {"question_id": 1433, "answer_sql": "SELECT u.user_id, u.user_category_code FROM Users u WHERE EXISTS ( SELECT 1 FROM User_Searches us WHERE us.user_id = u.user_id GROUP BY us.user_id HAVING COUNT(us.user_id) = 1 ) AND u.is_buyer = 'Y' AND u.is_seller = 'Y';"}, {"question_id": 1434, "answer_sql": "SELECT `age_category_code` FROM `Users` WHERE `user_id` IN (SELECT `user_id` FROM `User_Searches` ORDER BY `search_datetime` ASC LIMIT 1)"}, {"question_id": 1435, "answer_sql": "SELECT `Ref_Age_Categories`.`age_category_description` FROM `Users` JOIN `User_Searches` ON `Users`.`user_id` = `User_Searches`.`user_id` JOIN `User_Property_History` ON `Users`.`user_id` = `User_Property_History`.`user_id` JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` JOIN `Ref_Age_Categories` ON `Users`.`age_category_code` = `Ref_Age_Categories`.`age_category_code` WHERE `User_Searches`.`search_datetime` = (SELECT MIN(`search_datetime`) FROM `User_Searches`)"}, {"question_id": 1436, "answer_sql": "SELECT `login_name` FROM `Users` WHERE `age_category_code` = 'Senior' ORDER BY `first_name`;"}, {"question_id": 1437, "answer_sql": "SELECT login_name FROM Users WHERE age_category_code = 'Senior' ORDER BY first_name;"}, {"question_id": 1438, "answer_sql": "SELECT COUNT(*) FROM Users WHERE is_buyer = 'Y';"}, {"question_id": 1439, "answer_sql": "SELECT COUNT(*) FROM Users WHERE is_buyer = 'Y';"}, {"question_id": 1440, "answer_sql": "SELECT date_registered FROM Users WHERE login_name = 'ratione';"}, {"question_id": 1441, "answer_sql": "SELECT `date_registered` FROM `Users` WHERE `login_name` = 'ratione';"}, {"question_id": 1442, "answer_sql": "SELECT `first_name`, `middle_name`, `last_name`, `login_name` FROM `Users` WHERE `is_seller` = '1' AND `user_category_code` = 'Seller';"}, {"question_id": 1443, "answer_sql": "SELECT first_name, middle_name, last_name, login_name FROM Users WHERE is_seller = 'S' AND is_buyer = 'N';"}, {"question_id": 1444, "answer_sql": "SELECT line_1_number_building, line_2_number_street, line_3_area_locality, town_city FROM Addresses WHERE line_3_area_locality = 'Senior Citizens'"}, {"question_id": 1445, "answer_sql": "SELECT `line_1_number_building`, `line_2_number_street`, `line_3_area_locality`, `town_city` FROM `Addresses` JOIN `Users` ON `Users`.`user_address_id` = `Addresses`.`address_id` JOIN `Ref_Age_Categories` ON `Ref_Age_Categories`.`age_category_code` = `Users`.`age_category_code` WHERE `Ref_Age_Categories`.`age_category_code` = 'Senior'"}, {"question_id": 1446, "answer_sql": "SELECT COUNT(*) FROM Properties WHERE property_id IN (SELECT property_id FROM Property_Features GROUP BY property_id HAVING COUNT(feature_id) >= 2);"}, {"question_id": 1447, "answer_sql": "SELECT COUNT(*) FROM Properties WHERE property_id IN ( SELECT property_id FROM Property_Features GROUP BY property_id HAVING COUNT(feature_id) >= 2 );"}, {"question_id": 1448, "answer_sql": "SELECT Properties.property_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Properties LEFT JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Properties.property_id;"}, {"question_id": 1449, "answer_sql": "SELECT Properties.property_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Properties LEFT JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Properties.property_id;"}, {"question_id": 1450, "answer_sql": "SELECT Users.user_id, COUNT(Property_Photos.photo_seq) as photo_count FROM Users LEFT JOIN Property_Photos ON Users.user_id = Property_Photos.property_id GROUP BY Users.user_id;"}, {"question_id": 1451, "answer_sql": "SELECT Users.user_id, COUNT(Property_Photos.property_id) as photo_count FROM Users JOIN Property_Photos ON Users.user_id = Property_Photos.property_id GROUP BY Users.user_id;"}, {"question_id": 1452, "answer_sql": "SELECT MAX(price_max) as Total_Max_Price FROM ( SELECT p.property_id, p.price_max FROM Properties p JOIN Users u ON p.owner_user_id = u.user_id WHERE u.is_buyer = 'Y' AND u.is_seller = 'N' AND u.age_category_code IN ('S', 'M') ) as SubQuery;"}, {"question_id": 1453, "answer_sql": "SELECT MAX(price_max) as Total_Max_Price FROM ( SELECT p.property_id, MAX(p.price_max) as price_max FROM Properties p JOIN Users u ON p.owner_user_id = u.user_id WHERE u.is_buyer = 'Y' AND u.is_seller = 'N' AND u.age_category_code IN ('SC', 'SM') GROUP BY p.property_id ) as subquery;"}, {"question_id": 1454, "answer_sql": "SELECT `User_Property_History`.`datestamp`, `Properties`.`property_name` FROM `User_Property_History` INNER JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` ORDER BY `User_Property_History`.`datestamp`;"}, {"question_id": 1455, "answer_sql": "SELECT `User_Property_History`.`datestamp`, `Properties`.`property_name` FROM `User_Property_History` JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` ORDER BY `User_Property_History`.`datestamp`;"}, {"question_id": 1456, "answer_sql": "SELECT `property_type_description` FROM `Ref_Property_Types` WHERE `property_type_code` = (SELECT `property_type_code` FROM `Properties` GROUP BY `property_type_code` ORDER BY COUNT(*) DESC LIMIT 1);"}, {"question_id": 1457, "answer_sql": "SELECT property_type_description FROM Properties INNER JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code GROUP BY property_type_description ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1458, "answer_sql": "SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60';"}, {"question_id": 1459, "answer_sql": "SELECT `age_category_description` FROM `Ref_Age_Categories` WHERE `age_category_code` = 'Over 60';"}, {"question_id": 1460, "answer_sql": "SELECT Rooms.room_size, COUNT(*) as room_count FROM Rooms INNER JOIN Properties ON Rooms.property_id = Properties.property_id WHERE Properties.property_type_code = 'House' GROUP BY Rooms.room_size ORDER BY room_size;"}, {"question_id": 1461, "answer_sql": "SELECT R.room_size, COUNT(*) as room_count FROM Rooms R GROUP BY R.room_size ORDER BY room_size;"}, {"question_id": 1462, "answer_sql": "SELECT country FROM Users WHERE first_name = 'Robbie';"}, {"question_id": 1463, "answer_sql": "SELECT country FROM Users WHERE first_name = 'Robbie';"}, {"question_id": 1464, "answer_sql": "SELECT `first_name`, `middle_name`, `last_name` FROM `Users` WHERE `user_id` IN ( SELECT `owner_user_id` FROM `Properties` WHERE `property_address_id` IN ( SELECT `address_id` FROM `Addresses` WHERE `line_3_area_locality` = 'Your locality' ) )"}, {"question_id": 1465, "answer_sql": "SELECT `first_name`, `last_name` FROM `Users` INNER JOIN `User_Property_History` ON `Users`.`user_id` = `User_Property_History`.`user_id` INNER JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` WHERE `Users`.`login_name` = 'username' AND `Users`.`password` = 'password'"}, {"question_id": 1466, "answer_sql": "SELECT u.login_name, u.first_name, u.last_name FROM Users u LEFT JOIN User_Property_History uph ON u.user_id = uph.user_id WHERE uph.property_id IS NULL;"}, {"question_id": 1467, "answer_sql": "SELECT u.login_name, u.first_name, u.last_name FROM Users u LEFT JOIN User_Property_History uph ON u.user_id = uph.user_id LEFT JOIN Properties p ON uph.property_id = p.property_id WHERE p.property_id IS NULL AND u.is_buyer = 'N' AND u.is_seller = 'Y'"}, {"question_id": 1468, "answer_sql": "SELECT Users.last_name, Users.user_id FROM Users JOIN User_Property_History ON Users.user_id = User_Property_History.user_id GROUP BY Users.user_id, Users.last_name HAVING COUNT(Properties.property_id) >= 2 AND COUNT(User_Searches.search_seq) <= 2;"}, {"question_id": 1469, "answer_sql": "SELECT Users.last_name, Users.user_id FROM Users JOIN (SELECT user_id, COUNT(*) as search_count FROM User_Searches GROUP BY user_id) as User_Searches_Count ON Users.user_id = User_Searches_Count.user_id JOIN (SELECT owner_user_id, COUNT(*) as property_count FROM Properties GROUP BY owner_user_id HAVING property_count >= 2) as User_Properties_Count ON Users.user_id = User_Properties_Count.owner_user_id WHERE User_Searches_Count.search_count <= 2;"}, {"question_id": 1470, "answer_sql": "SELECT COUNT(*) FROM `bike` WHERE `weight` > 780;"}, {"question_id": 1471, "answer_sql": "SELECT product_name , weight FROM bike ORDER BY price ASC;"}, {"question_id": 1472, "answer_sql": "SELECT cyclist . heat , cyclist . name , cyclist . nation FROM cyclist JOIN cyclists_own_bikes ON cyclist . id = cyclists_own_bikes . cyclist_id JOIN bike ON cyclists_own_bikes . bike_id = bike . id ;"}, {"question_id": 1473, "answer_sql": "SELECT MAX(weight) as max_weight, MIN(weight) as min_weight FROM bike;"}, {"question_id": 1474, "answer_sql": "SELECT AVG(price) FROM bike WHERE material = 'Carbon CC';"}, {"question_id": 1475, "answer_sql": "SELECT c.name, c.result FROM cyclist c WHERE c.nation != 'Russia';"}, {"question_id": 1476, "answer_sql": "SELECT DISTINCT b.id, b.product_name FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id WHERE c.purchase_year > 2015;"}, {"question_id": 1477, "answer_sql": "SELECT b.id, b.product_name FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id GROUP BY b.id, b.product_name HAVING COUNT(c.cyclist_id) >= 4;"}, {"question_id": 1478, "answer_sql": "SELECT c. id , c. name FROM cyclist c JOIN cyclists_own_bikes cb ON c. id = cb. cyclist_id GROUP BY c. id , c. name ORDER BY COUNT(cb. bike_id ) DESC LIMIT 1;"}, {"question_id": 1479, "answer_sql": "SELECT DISTINCT `product_name` FROM `cyclists_own_bikes` JOIN `cyclist` ON `cyclists_own_bikes`.`cyclist_id` = `cyclist`.`id` WHERE `cyclist`.`nation` IN ('Russia', 'Great Britain');"}, {"question_id": 1480, "answer_sql": "SELECT DISTINCT `cyclist`.`heat` FROM `cyclist`;"}, {"question_id": 1481, "answer_sql": "SELECT COUNT(*) FROM `cyclist` WHERE `id` NOT IN (SELECT `cyclist_id` FROM `cyclists_own_bikes` WHERE `purchase_year` < 2016);"}, {"question_id": 1482, "answer_sql": "SELECT b.product_name FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id JOIN cyclist cy ON c.id = cy.id WHERE cy.result > 4.21558 GROUP BY b.product_name ORDER BY b.product_name;"}, {"question_id": 1483, "answer_sql": "SELECT b.product_name, b.price FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id WHERE c.cyclist_id IN (SELECT id FROM cyclist WHERE name IN ('Bradley Wiggins', 'Antonio Tauler'));"}, {"question_id": 1484, "answer_sql": "SELECT `cyclist`.`name`, `cyclist`.`nation`, `cyclist`.`result` FROM `cyclist` LEFT JOIN `cyclists_own_bikes` ON `cyclist`.`id` = `cyclists_own_bikes`.`cyclist_id` WHERE `cyclists_own_bikes`.`bike_id` IS NULL;"}, {"question_id": 1485, "answer_sql": "SELECT b.product_name FROM bike b JOIN cyclists_own_bikes c ON b.id = c.bike_id WHERE b.material LIKE '%fiber%'"}, {"question_id": 1486, "answer_sql": "SELECT c. name , COUNT(b. id ) as Number of Bikes FROM `cyclist` as c JOIN `cyclists_own_bikes` as cob ON c. id = cob. cyclist_id JOIN `bike` as b ON cob. bike_id = b. id GROUP BY c. id , c. name ORDER BY c. id ;"}, {"question_id": 1487, "answer_sql": "SELECT g.Flavor, g.Price FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Price = ( SELECT MAX(g1.Price) FROM goods AS g1 JOIN items AS i1 ON g1.Id = i1.Item JOIN receipts AS r1 ON r1.ReceiptNumber = i1.Receipt )"}, {"question_id": 1488, "answer_sql": "SELECT g.Id, g.Flavor FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' ORDER BY g.Price DESC LIMIT 1;"}, {"question_id": 1489, "answer_sql": "SELECT g.Flavor, g.Price FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Food = 'Cookie' ORDER BY g.Price ASC LIMIT 1;"}, {"question_id": 1490, "answer_sql": "SELECT g.Id, g.Flavor FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cookie' AND g.Price = ( SELECT MIN(Price) FROM goods WHERE Food = 'Cookie' );"}, {"question_id": 1491, "answer_sql": "SELECT goods.Id FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Flavor = 'apple';"}, {"question_id": 1492, "answer_sql": "SELECT g.Id FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'apple'"}, {"question_id": 1493, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price < 3;"}, {"question_id": 1494, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price < 3;"}, {"question_id": 1495, "answer_sql": "SELECT DISTINCT customers.Id FROM customers JOIN items ON customers.Id = items.Customer JOIN goods ON goods.Id = items.Item WHERE goods.Flavor = 'lemon' AND goods.Food = 'cake';"}, {"question_id": 1496, "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'lemon' AND g.Food = 'cake';"}, {"question_id": 1497, "answer_sql": "SELECT g.Flavor, COUNT(DISTINCT r.CustomerId) as NumberOfCustomers FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON i.Receipt = r.ReceiptNumber GROUP BY g.Flavor;"}, {"question_id": 1498, "answer_sql": "SELECT g.Flavor, COUNT(DISTINCT i.Receipt) as NumberOfCustomers FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"}, {"question_id": 1499, "answer_sql": "SELECT customers.Id FROM customers JOIN items ON customers.Id = items.CustomerId JOIN receipts ON items.Receipt = receipts.ReceiptNumber GROUP BY customers.Id HAVING COUNT(DISTINCT goods.Id) >= 15;"}, {"question_id": 1500, "answer_sql": "SELECT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id HAVING COUNT(receipts.ReceiptNumber) >= 15;"}, {"question_id": 1501, "answer_sql": "SELECT c.LastName FROM customers c JOIN items i ON c.Id = i.CustomerId JOIN receipts r ON i.Receipt = r.ReceiptNumber GROUP BY c.Id HAVING COUNT(i.Receipt) > 10;"}, {"question_id": 1502, "answer_sql": "SELECT c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId GROUP BY c.Id HAVING COUNT(r.ReceiptNumber) > 10;"}, {"question_id": 1503, "answer_sql": "SELECT COUNT(DISTINCT Flavor) FROM items INNER JOIN goods ON items.Item = goods.Id;"}, {"question_id": 1504, "answer_sql": "SELECT COUNT(DISTINCT Flavor) FROM items INNER JOIN goods ON items.Item = goods.Id;"}, {"question_id": 1505, "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Flavor LIKE 'Croissant%';"}, {"question_id": 1506, "answer_sql": "SELECT g.Flavor FROM goods AS g WHERE g.Food = 'Croissant';"}, {"question_id": 1507, "answer_sql": "SELECT DISTINCT items.Item FROM items JOIN goods ON items.Item = goods.Id JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE receipts.CustomerId = 15;"}, {"question_id": 1508, "answer_sql": "SELECT items.Item FROM items JOIN goods ON items.Item = goods.Id JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE receipts.CustomerId = 15 GROUP BY items.Item;"}, {"question_id": 1509, "answer_sql": "SELECT g.Flavor, AVG(i.Price) AS AveragePrice, MAX(i.Price) AS MaximumPrice, MIN(i.Price) AS MinimumPrice FROM goods AS g JOIN items AS i ON g.Id = i.Item GROUP BY g.Flavor;"}, {"question_id": 1510, "answer_sql": "SELECT g.Flavor, AVG(g.Price) AS AveragePrice, MIN(g.Price) AS MinimumPrice, MAX(g.Price) AS MaximumPrice FROM goods AS g JOIN items AS i ON g.Id = i.Item GROUP BY g.Flavor;"}, {"question_id": 1511, "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g1 ON i.Item = g1.Id JOIN goods g2 ON i.Item = g2.Id WHERE g1.Flavor = 'Cake' AND g2.Flavor = 'Cookie';"}, {"question_id": 1512, "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i1 ON r.ReceiptNumber = i1.Receipt JOIN goods g1 ON i1.Item = g1.Id JOIN items i2 ON r.ReceiptNumber = i2.Receipt JOIN goods g2 ON i2.Item = g2.Id WHERE g1.Flavor = 'cake' AND g2.Food = 'cookie'"}, {"question_id": 1513, "answer_sql": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'Croissant' AND g.Food = 'Croissant' AND r.CustomerId IN ( SELECT Id FROM customers WHERE LastName = 'LOGAN' );"}, {"question_id": 1514, "answer_sql": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'Croissant' AND g.Food = 'Croissant' AND r.CustomerId IN ( SELECT Id FROM customers WHERE LastName = 'Logan' );"}, {"question_id": 1515, "answer_sql": "SELECT r.ReceiptNumber, r.Date FROM receipts r JOIN ( SELECT i.Receipt, i.Ordinal, g.Id, g.Price FROM items i JOIN goods g ON i.Item = g.Id ORDER BY g.Price DESC LIMIT 1 ) max_price ON r.Receipt = max_price.Receipt"}, {"question_id": 1516, "answer_sql": "SELECT r.ReceiptNumber, r.Date FROM receipts AS r JOIN ( SELECT i.Receipt, i.Ordinal, g.Id, g.Flavor, g.Food, g.Price FROM items AS i JOIN goods AS g ON i.Item = g.Id ORDER BY g.Price DESC LIMIT 1 ) AS most_expensive_item ON r.Receipt = most_expensive_item.Receipt"}, {"question_id": 1517, "answer_sql": "SELECT items.Item FROM items JOIN goods ON items.Item = goods.Id GROUP BY goods.Id ORDER BY COUNT(*) ASC LIMIT 1;"}, {"question_id": 1518, "answer_sql": "SELECT items.Item FROM items JOIN goods ON items.Item = goods.Id GROUP BY goods.Id ORDER BY COUNT(*) ASC LIMIT 1;"}, {"question_id": 1519, "answer_sql": "SELECT g.Flavor, COUNT(i.Item) as AvailableCount FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"}, {"question_id": 1520, "answer_sql": "SELECT g.Flavor, COUNT(i.Item) as NumberOfGoods FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"}, {"question_id": 1521, "answer_sql": "SELECT g.Flavor, AVG(i.Price) as AveragePrice FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"}, {"question_id": 1522, "answer_sql": "SELECT g.Flavor, AVG(i.Price) as AveragePrice FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor;"}, {"question_id": 1523, "answer_sql": "SELECT g.Id FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'Apricot' AND g.Price < 5 GROUP BY g.Id;"}, {"question_id": 1524, "answer_sql": "SELECT g.Id FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'Apricot' AND g.Price < 5 GROUP BY g.Id"}, {"question_id": 1525, "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' AND g.Price > 10"}, {"question_id": 1526, "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' AND g.Price > 10 GROUP BY g.Flavor;"}, {"question_id": 1527, "answer_sql": "SELECT g.Id, g.Price FROM goods g WHERE g.Price < ( SELECT AVG(g2.Price) FROM goods g2 );"}, {"question_id": 1528, "answer_sql": "SELECT g.Id, g.Price FROM goods g WHERE g.Price < ( SELECT AVG(g1.Price) FROM goods g1 );"}, {"question_id": 1529, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price < ( SELECT MIN(g2.Price) FROM goods g2 WHERE g2.Flavor = 'Tart' );"}, {"question_id": 1530, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price < ( SELECT MIN(g2.Price) FROM goods g2 WHERE g2.Flavor = 'Tart' );"}, {"question_id": 1531, "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13;"}, {"question_id": 1532, "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13;"}, {"question_id": 1533, "answer_sql": "SELECT r.Date FROM receipts AS r JOIN items AS i ON r.ReceiptNumber = i.Receipt JOIN goods AS g ON i.Item = g.Id WHERE g.Price > 15.0 ORDER BY r.Date DESC LIMIT 1;"}, {"question_id": 1534, "answer_sql": "SELECT r.Date FROM receipts AS r JOIN items AS i ON r.ReceiptNumber = i.Receipt JOIN goods AS g ON i.Item = g.Id WHERE g.Price > 15.0 ORDER BY r.Date DESC;"}, {"question_id": 1535, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Id LIKE 'APP%';"}, {"question_id": 1536, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Id LIKE '%APP%'"}, {"question_id": 1537, "answer_sql": "SELECT g.Flavor, g.Price FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE r.Date = '2022-01-01' AND g.Id LIKE '%70%' LIMIT 1;"}, {"question_id": 1538, "answer_sql": "SELECT Id, Price FROM goods WHERE Id = '70';"}, {"question_id": 1539, "answer_sql": "SELECT LastName FROM customers ORDER BY LastName;"}, {"question_id": 1540, "answer_sql": "SELECT LastName FROM customers ORDER BY LastName;"}, {"question_id": 1541, "answer_sql": "SELECT g.Id FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt ORDER BY g.Id;"}, {"question_id": 1542, "answer_sql": "SELECT g.Id FROM goods AS g ORDER BY g.Id;"}, {"question_id": 1543, "answer_sql": "SELECT r.ReceiptNumber, c.FirstName, c.LastName FROM receipts r JOIN customers c ON r.CustomerId = c.Id WHERE (g.Flavor = 'apple' AND g.Food = 'pie') OR r.ReceiptNumber = 12"}, {"question_id": 1544, "answer_sql": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'apple' OR r.CustomerId = 12;"}, {"question_id": 1545, "answer_sql": "SELECT r.ReceiptNumber, r.Date FROM receipts r WHERE r.Date = (SELECT MAX(r2.Date) FROM receipts r2 WHERE r.CustomerId = r2.CustomerId)"}, {"question_id": 1546, "answer_sql": "SELECT MAX(receipts.ReceiptNumber) as LatestReceipt, receipts.Date as LatestDate FROM receipts"}, {"question_id": 1547, "answer_sql": "SELECT r.ReceiptNumber, g.Flavor, g.Price FROM receipts r JOIN goods g ON r.CustomerId = g.Id WHERE g.Price > 10 ORDER BY r.Date ASC;"}, {"question_id": 1548, "answer_sql": "SELECT DISTINCT r.ReceiptNumber FROM receipts r WHERE ( SELECT COUNT(*) FROM goods g WHERE g.Price > 10 AND g.Id IN ( SELECT i.Item FROM items i WHERE i.Receipt = r.ReceiptNumber ) ) > 0 OR ( SELECT MIN(r2.Date) FROM receipts r2 WHERE r2.ReceiptNumber = r.ReceiptNumber ) = ( SELECT MIN(r3.Date) FROM receipts r3 )"}, {"question_id": 1549, "answer_sql": "SELECT g.Id, g.Flavor, g.Food FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor IN ('Cookie', 'Cake') AND g.Price BETWEEN 3 AND 7 AND r.Date BETWEEN '2022-01-01' AND '2022-12-31';"}, {"question_id": 1550, "answer_sql": "SELECT g.Id FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor IN ('Cookies', 'Cakes') AND g.Price BETWEEN 3 AND 7 AND r.Date BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY g.Id"}, {"question_id": 1551, "answer_sql": "SELECT c.FirstName, c.LastName FROM customers c JOIN receipts r ON c.Id = r.CustomerId WHERE r.Date = (SELECT MIN(Date) FROM receipts)"}, {"question_id": 1552, "answer_sql": "SELECT c.FirstName, c.LastName, r.Date FROM receipts AS r JOIN customers AS c ON r.CustomerId = c.Id WHERE r.Date = (SELECT MIN(Date) FROM receipts)"}, {"question_id": 1553, "answer_sql": "SELECT AVG(goods.Price) FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE goods.Flavor IN ('blackberry', 'blueberry')"}, {"question_id": 1554, "answer_sql": "SELECT AVG(g.Price) FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor IN ('blackberry', 'blueberry');"}, {"question_id": 1555, "answer_sql": "SELECT g.Flavor, g.Price FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Flavor = 'cheese' ORDER BY g.Price ASC LIMIT 1;"}, {"question_id": 1556, "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'Cheese' ORDER BY g.Price ASC LIMIT 1;"}, {"question_id": 1557, "answer_sql": "SELECT g.Flavor, MAX(g.Price) AS HighestPrice, MIN(g.Price) AS LowestPrice, AVG(g.Price) AS AveragePrice FROM goods AS g GROUP BY g.Flavor ORDER BY AveragePrice DESC;"}, {"question_id": 1558, "answer_sql": "SELECT g.Flavor, MAX(g.Price) as MaxPrice, MIN(g.Price) as MinPrice, AVG(g.Price) as AvgPrice FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor ORDER BY AvgPrice DESC;"}, {"question_id": 1559, "answer_sql": "SELECT g.Flavor, MIN(g.Price) AS LowestPrice, MAX(g.Price) AS HighestPrice FROM goods AS g GROUP BY g.Food ORDER BY g.Food;"}, {"question_id": 1560, "answer_sql": "SELECT g.Flavor, MIN(g.Price) AS MinPrice, MAX(g.Price) AS MaxPrice FROM goods AS g JOIN items AS i ON g.Id = i.Item GROUP BY g.Flavor ORDER BY g.Flavor;"}, {"question_id": 1561, "answer_sql": "SELECT Date, COUNT(ReceiptNumber) as NumberOfReceipts FROM receipts GROUP BY Date ORDER BY NumberOfReceipts DESC LIMIT 3;"}, {"question_id": 1562, "answer_sql": "SELECT DISTINCT Date FROM receipts ORDER BY COUNT(ReceiptNumber) DESC LIMIT 3;"}, {"question_id": 1563, "answer_sql": "SELECT c.FirstName, c.LastName, COUNT(i.Receipt) as TotalOrders FROM customers c JOIN items i ON c.Id = i.CustomerId GROUP BY c.Id, c.FirstName, c.LastName ORDER BY TotalOrders DESC LIMIT 1;"}, {"question_id": 1564, "answer_sql": "SELECT c.Id, COUNT(i.Item) as PurchaseCount FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt GROUP BY c.Id ORDER BY PurchaseCount DESC LIMIT 1;"}, {"question_id": 1565, "answer_sql": "SELECT r.Date, COUNT(DISTINCT c.Id) as 'Number of distinct customers' FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date;"}, {"question_id": 1566, "answer_sql": "SELECT r.Date, COUNT(DISTINCT c.Id) as VisitedCustomers FROM receipts r JOIN customers c ON r.CustomerId = c.Id GROUP BY r.Date;"}, {"question_id": 1567, "answer_sql": "SELECT customers.FirstName, customers.LastName FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON goods.Id = items.Item WHERE goods.Flavor = 'apple' AND goods.Flavor = 'Tart'"}, {"question_id": 1568, "answer_sql": "SELECT customers.FirstName, customers.LastName FROM customers JOIN items ON customers.Id = receipts.CustomerId JOIN goods ON goods.Id = items.Item WHERE goods.Flavor = 'apple' AND goods.Food = 'Tarts';"}, {"question_id": 1569, "answer_sql": "SELECT g.Id FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'Cookies' AND g.Food = 'Croissant' AND r.Date NOT IN ( SELECT Date FROM receipts WHERE CustomerId IN ( SELECT Id FROM customers WHERE LastName = 'Cookies' ) ) GROUP BY g.Id ORDER BY g.Id;"}, {"question_id": 1570, "answer_sql": "SELECT customers.Id FROM customers JOIN items ON customers.Id = items.CustomerId JOIN goods ON goods.Id = items.Item WHERE goods.Flavor = 'croissant' AND goods.Price < ( SELECT MIN(Price) FROM goods WHERE Flavor = 'croissant' );"}, {"question_id": 1571, "answer_sql": "SELECT g.Id FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'Cake' AND g.Price >= ( SELECT AVG(g1.Price) FROM goods AS g1 JOIN items AS i1 ON g1.Id = i1.Item WHERE g1.Flavor = 'Tart' ) GROUP BY g.Id"}, {"question_id": 1572, "answer_sql": "SELECT g.Id FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'Cake' AND g.Food = 'Tart' GROUP BY g.Id HAVING AVG(g.Price) < AVG(r.Date)"}, {"question_id": 1573, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price > 2 * ( SELECT AVG(g2.Price) FROM goods g2 );"}, {"question_id": 1574, "answer_sql": "SELECT g.Id FROM goods g WHERE g.Price > ( SELECT AVG(g1.Price) FROM goods g1 );"}, {"question_id": 1575, "answer_sql": "SELECT g.Id, g.Flavor, g.Food FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON i.Receipt = r.ReceiptNumber WHERE r.Date > '2022-01-01' ORDER BY g.Price;"}, {"question_id": 1576, "answer_sql": "SELECT g.Id, g.Flavor, g.Food FROM goods g ORDER BY g.Price;"}, {"question_id": 1577, "answer_sql": "SELECT g.Id, g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON r.ReceiptNumber = i.Receipt WHERE g.Food = 'Cake' ORDER BY g.Flavor;"}, {"question_id": 1578, "answer_sql": "SELECT g.Id, g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Food = 'Cake' ORDER BY g.Flavor;"}, {"question_id": 1579, "answer_sql": "SELECT g.Flavor FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt WHERE g.Flavor = 'Chocolate' GROUP BY g.Id HAVING COUNT(i.Receipt) <= 10;"}, {"question_id": 1580, "answer_sql": "SELECT items.Item FROM items JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'Chocolate' GROUP BY items.Item HAVING COUNT(items.Item) <= 10;"}, {"question_id": 1581, "answer_sql": "SELECT g.Flavor FROM goods AS g JOIN items AS i ON g.Id = i.Item WHERE g.Flavor NOT IN ( SELECT g1.Flavor FROM goods AS g1 JOIN items AS i1 ON g1.Id = i1.Item WHERE g1.Flavor = 'Cake' ) AND g.Flavor = 'Cake' AND g.Food = 'Cake';"}, {"question_id": 1582, "answer_sql": "SELECT g.Flavor FROM goods AS g WHERE g.Food = 'Cake' AND g.Flavor NOT IN ( SELECT DISTINCT g2.Flavor FROM goods AS g2 WHERE g2.Food = 'Tart' )"}, {"question_id": 1583, "answer_sql": "SELECT g.Flavor, g.Food, COUNT(i.Item) as Count FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor, g.Food ORDER BY Count DESC LIMIT 3;"}, {"question_id": 1584, "answer_sql": "SELECT g.Flavor, g.Food, SUM(i.Ordinal) as TotalOrders FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Flavor, g.Food ORDER BY TotalOrders DESC LIMIT 3;"}, {"question_id": 1585, "answer_sql": "SELECT customers.Id FROM customers JOIN items ON customers.Id = items.CustomerId JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE receipts.Date >= '2022-01-01' GROUP BY customers.Id HAVING SUM(goods.Price * items.Ordinal) > 150;"}, {"question_id": 1586, "answer_sql": "SELECT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON goods.Id = items.Item WHERE goods.Price > 150 GROUP BY customers.Id HAVING COUNT(DISTINCT goods.Id) = ( SELECT COUNT(*) FROM goods WHERE Price > 150 );"}, {"question_id": 1587, "answer_sql": "SELECT g.Id, AVG(i.Price) as AveragePrice FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Id HAVING AVG(i.Price) > 5;"}, {"question_id": 1588, "answer_sql": "SELECT c.Id FROM customers c JOIN ( SELECT g.Id, AVG(i.Price) as avg_price FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Id HAVING AVG(i.Price) > 5 ) as gp ON c.Id = gp.Id"}, {"question_id": 1589, "answer_sql": "SELECT r.Date, r.ReceiptNumber FROM receipts r JOIN ( SELECT i.Receipt, i.Ordinal, g.Flavor, g.Food, g.Price FROM items i JOIN goods g ON i.Item = g.Id GROUP BY i.Receipt, i.Ordinal, g.Flavor, g.Food HAVING COUNT(g.Id) > 100 ) tmp ON r.ReceiptNumber = tmp.Receipt GROUP BY r.Date, r.ReceiptNumber ORDER BY r.Date DESC, r.ReceiptNumber DESC;"}, {"question_id": 1590, "answer_sql": "SELECT r.Date, g.Flavor, SUM(i.Ordinal) as TotalOrders FROM receipts r JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date, g.Flavor HAVING SUM(i.Ordinal) > 100 ORDER BY r.Date DESC;"}, {"question_id": 1591, "answer_sql": "SELECT COUNT(*) FROM `driver`;"}, {"question_id": 1592, "answer_sql": "SELECT COUNT(*) FROM driver;"}, {"question_id": 1593, "answer_sql": "SELECT td.Make, COUNT(d.Driver_ID) as Num_Drivers FROM team_driver AS td JOIN driver AS d ON td.Driver_ID = d.Driver_ID WHERE d.Points > 150 GROUP BY td.Make;"}, {"question_id": 1594, "answer_sql": "SELECT Make, COUNT(*) FROM driver WHERE Make IN (SELECT Make FROM team WHERE Manager = 'John Doe') AND Points > 150 GROUP BY Make;"}, {"question_id": 1595, "answer_sql": "SELECT t.Make, AVG(d.Age) as Average_Age FROM team_driver td JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make;"}, {"question_id": 1596, "answer_sql": "SELECT d. Make , AVG(d. Age ) as Average_Age FROM driver d JOIN team_driver td ON d. Driver_ID = td. Driver_ID JOIN team t ON td. Team_ID = t. Team_ID WHERE t. Make = 'make_name' GROUP BY d. Make ;"}, {"question_id": 1597, "answer_sql": "SELECT AVG(`Laps`) FROM `driver` WHERE `Age` < 20;"}, {"question_id": 1598, "answer_sql": "SELECT AVG(`Laps`) FROM `driver` WHERE `Age` < 20;"}, {"question_id": 1599, "answer_sql": "SELECT Manager , Sponsor FROM team JOIN team_driver ON team . Team_ID = team_driver . Team_ID GROUP BY Manager , Sponsor ORDER BY Car_Owner ;"}, {"question_id": 1600, "answer_sql": "SELECT t. Manager , t. Sponsor , d. Car_# , d. Make FROM team t JOIN team_driver td ON t. Team_ID = td. Team_ID JOIN driver d ON td. Driver_ID = d. Driver_ID ORDER BY d. Car_# ;"}, {"question_id": 1601, "answer_sql": "SELECT Make, COUNT(Team_ID) as Team_Count FROM team JOIN team_driver ON team.Team_ID = team_driver.Team_ID GROUP BY Make HAVING Team_Count > 1;"}, {"question_id": 1602, "answer_sql": "SELECT `Make` FROM `team` GROUP BY `Make` HAVING COUNT(`Team_ID`) > 1;"}, {"question_id": 1603, "answer_sql": "SELECT `Make` FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` WHERE `team`.`Car_Owner` = 'Buddy Arrington';"}, {"question_id": 1604, "answer_sql": "SELECT `Make` FROM `team` WHERE `Car_Owner` = 'Buddy Arrington';"}, {"question_id": 1605, "answer_sql": "SELECT MAX( Points ) as Maximum Points , MIN( Points ) as Minimum Points FROM `driver`;"}, {"question_id": 1606, "answer_sql": "SELECT d.Driver, d.Points, MAX(d.Points) as Highest_Points, MIN(d.Points) as Lowest_Points FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID WHERE t.Team = 'Mercedes' GROUP BY d.Driver, d.Points ORDER BY d.Points DESC;"}, {"question_id": 1607, "answer_sql": "SELECT COUNT(*) FROM `driver` WHERE `Points` < 150;"}, {"question_id": 1608, "answer_sql": "SELECT COUNT(*) FROM `driver` WHERE `Points` < '150';"}, {"question_id": 1609, "answer_sql": "SELECT Driver FROM `driver` ORDER BY Age ASC;"}, {"question_id": 1610, "answer_sql": "SELECT Driver FROM driver ORDER BY Age ASC;"}, {"question_id": 1611, "answer_sql": "SELECT Driver FROM driver ORDER BY Points DESC;"}, {"question_id": 1612, "answer_sql": "SELECT D.Driver, D.Points FROM driver D ORDER BY D.Points DESC;"}, {"question_id": 1613, "answer_sql": "SELECT `driver`.`Driver`, `country`.`Country` FROM `driver` JOIN `country` ON `driver`.`Country` = `country`.`Country_Id`;"}, {"question_id": 1614, "answer_sql": "SELECT Driver , Country FROM driver JOIN country ON driver . Country = country . Country_Id ;"}, {"question_id": 1615, "answer_sql": "SELECT MAX( Points ) FROM `driver` WHERE `Country` = (SELECT `Country_Id` FROM `country` WHERE `Capital` = 'Dublin');"}, {"question_id": 1616, "answer_sql": "SELECT MAX( Points ) as Maximum Points FROM driver JOIN country ON driver . Country = country . Country_Id WHERE country . Country = 'Dublin';"}, {"question_id": 1617, "answer_sql": "SELECT AVG(d.Age) FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID WHERE t.Make = 'Mercedes' AND d.Car_# > 5;"}, {"question_id": 1618, "answer_sql": "SELECT AVG(d.Age) as Average_Age FROM driver d JOIN team_driver td ON d.Driver_ID = td.Driver_ID JOIN team t ON td.Team_ID = t.Team_ID JOIN country c ON d.Country = c.Country_Id WHERE c.Official_native_language = 'English';"}, {"question_id": 1619, "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d ON c.Country_Id = d.Country WHERE d.Points > 150;"}, {"question_id": 1620, "answer_sql": "SELECT DISTINCT `country`.`Country` FROM `country` JOIN `driver` ON `country`.`Country_Id` = `driver`.`Country` WHERE `driver`.`Points` > 150;"}, {"question_id": 1621, "answer_sql": "SELECT `country`.`Country`, `country`.`Capital` FROM `country` JOIN `driver` ON `country`.`Country_Id` = `driver`.`Country` WHERE `driver`.`Points` = ( SELECT MAX(`Points`) FROM `driver` )"}, {"question_id": 1622, "answer_sql": "SELECT c.Country, c.Capital FROM driver d JOIN country c ON d.Country = c.Country_Id WHERE d.Points = (SELECT MAX(Points) FROM driver)"}, {"question_id": 1623, "answer_sql": "SELECT t.Make, COUNT(d.Driver) as Number_of_Drivers FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make;"}, {"question_id": 1624, "answer_sql": "SELECT `Make`, COUNT(`Driver_ID`) as `Count` FROM `driver` GROUP BY `Make`;"}, {"question_id": 1625, "answer_sql": "SELECT t.Make, COUNT(d.Driver) as Total_Drivers FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Make ORDER BY Total_Drivers DESC LIMIT 1;"}, {"question_id": 1626, "answer_sql": "SELECT `Make` FROM `driver` GROUP BY `Make` ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1627, "answer_sql": "SELECT `Make` FROM `driver` WHERE `Driver_ID` IN ( SELECT `Driver_ID` FROM `team_driver` GROUP BY `Driver_ID` HAVING COUNT(*) >= 3 ) AND `Make` IS NOT NULL;"}, {"question_id": 1628, "answer_sql": "SELECT `Make` FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` JOIN `driver` ON `team_driver`.`Driver_ID` = `driver`.`Driver_ID` GROUP BY `Make` HAVING COUNT(*) >= 3;"}, {"question_id": 1629, "answer_sql": "SELECT t.Team FROM team t LEFT JOIN team_driver td ON t.Team_ID = td.Team_ID WHERE td.Driver_ID IS NULL;"}, {"question_id": 1630, "answer_sql": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver );"}, {"question_id": 1631, "answer_sql": "SELECT c.Country, COUNT(d.Driver_ID) as Num_Drivers FROM country c JOIN driver d ON c.Country_Id = d.Country WHERE d.Make IN ('Dodge', 'Chevrolet') GROUP BY c.Country HAVING COUNT(d.Driver_ID) = 2;"}, {"question_id": 1632, "answer_sql": "SELECT DISTINCT c.Country FROM country c JOIN driver d1 ON c.Country_Id = d1.Country JOIN team_driver td1 ON d1.Driver_ID = td1.Driver_ID JOIN driver d2 ON c.Country_Id = d2.Country JOIN team_driver td2 ON d2.Driver_ID = td2.Driver_ID WHERE d1.Make = 'Dodge' AND d2.Make = 'Chevrolet' AND td1.Team_ID = td2.Team_ID;"}, {"question_id": 1633, "answer_sql": "SELECT t.Team, COUNT(td.Driver_ID) as Total_Drivers, AVG(d.Points) as Average_Points FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID JOIN driver d ON td.Driver_ID = d.Driver_ID GROUP BY t.Team;"}, {"question_id": 1634, "answer_sql": "SELECT d.Driver, SUM(d.Points) AS Total_Points, AVG(d.Points) AS Average_Points FROM driver d GROUP BY d.Driver;"}, {"question_id": 1635, "answer_sql": "SELECT c.Country, c.Country_Id FROM country c LEFT JOIN driver d ON c.Country_Id = d.Country WHERE d.Driver_ID IS NULL;"}, {"question_id": 1636, "answer_sql": "SELECT c.Country, c.Country_Id FROM country c LEFT JOIN driver d ON c.Country_Id = d.Country WHERE d.Driver_ID IS NULL;"}, {"question_id": 1637, "answer_sql": "SELECT Manager , Sponsor FROM team WHERE Team_ID IN ( SELECT Team_ID FROM team_driver GROUP BY Team_ID ORDER BY COUNT(*) DESC LIMIT 1 )"}, {"question_id": 1638, "answer_sql": "SELECT t.Manager, t.Sponsor FROM team t JOIN team_driver td ON t.Team_ID = td.Team_ID GROUP BY t.Manager, t.Sponsor ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1639, "answer_sql": "SELECT `Manager`, `Car_Owner` FROM `team` WHERE `Team_ID` IN ( SELECT `Team_ID` FROM `team_driver` GROUP BY `Team_ID` HAVING COUNT(`Driver_ID`) >= 2 )"}, {"question_id": 1640, "answer_sql": "SELECT `team`.`Manager`, `team`.`Car_Owner` FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` GROUP BY `team`.`Team_ID` HAVING COUNT(`team_driver`.`Driver_ID`) >= 2;"}, {"question_id": 1641, "answer_sql": "SELECT COUNT(*) FROM institution;"}, {"question_id": 1642, "answer_sql": "SELECT COUNT(*) FROM institution;"}, {"question_id": 1643, "answer_sql": "SELECT Name FROM institution ORDER BY Name ASC;"}, {"question_id": 1644, "answer_sql": "SELECT Name FROM institution ORDER BY Name ;"}, {"question_id": 1645, "answer_sql": "SELECT Name FROM institution ORDER BY Founded ASC;"}, {"question_id": 1646, "answer_sql": "SELECT Institution.Name, Institution.Founded FROM Institution ORDER BY Institution.Founded;"}, {"question_id": 1647, "answer_sql": "SELECT City , Province FROM institution;"}, {"question_id": 1648, "answer_sql": "SELECT institution.City, institution.Province FROM institution JOIN championship ON institution.Institution_ID = championship.Institution_ID;"}, {"question_id": 1649, "answer_sql": "SELECT MAX( Enrollment ) as Maximum_Enrollment, MIN( Enrollment ) as Minimum_Enrollment FROM institution;"}, {"question_id": 1650, "answer_sql": "SELECT MAX(Enrollment) as Maximum_Enrollment, MIN(Enrollment) as Minimum_Enrollment FROM institution;"}, {"question_id": 1651, "answer_sql": "SELECT `Affiliation` FROM `institution` WHERE `City` != 'Vancouver';"}, {"question_id": 1652, "answer_sql": "SELECT `Affiliation` FROM `institution` WHERE `City` != 'Vancouver';"}, {"question_id": 1653, "answer_sql": "SELECT Stadium FROM institution ORDER BY Capacity DESC;"}, {"question_id": 1654, "answer_sql": "SELECT Stadium FROM institution ORDER BY Capacity DESC;"}, {"question_id": 1655, "answer_sql": "SELECT Stadium FROM institution WHERE Enrollment = (SELECT MAX(Enrollment) FROM institution);"}, {"question_id": 1656, "answer_sql": "SELECT Stadium FROM institution WHERE Enrollment = (SELECT MAX(Enrollment) FROM institution);"}, {"question_id": 1657, "answer_sql": "SELECT institution . Name , Championship . Nickname FROM institution JOIN Championship ON institution . Institution_ID = Championship . Institution_ID ;"}, {"question_id": 1658, "answer_sql": "SELECT institution.Name, Championship.Nickname FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID;"}, {"question_id": 1659, "answer_sql": "SELECT Nickname FROM Championship WHERE Joined = (SELECT MIN( Enrollment ) FROM institution ) AND Institution_ID = (SELECT Institution_ID FROM institution WHERE Enrollment = (SELECT MIN( Enrollment ) FROM institution ));"}, {"question_id": 1660, "answer_sql": "SELECT Nickname FROM Institution WHERE Enrollment = (SELECT MIN(Enrollment) FROM Institution)"}, {"question_id": 1661, "answer_sql": "SELECT institution.Name, COUNT(championship.Institution_ID) as Number_of_Championships FROM institution JOIN championship ON institution.Institution_ID = championship.Institution_ID GROUP BY institution.Name ORDER BY Number_of_Championships DESC;"}, {"question_id": 1662, "answer_sql": "SELECT Institution.Name, COUNT(Championship.Institution_ID) as Number_of_Championships FROM Institution JOIN Championship ON Institution.Institution_ID = Championship.Institution_ID GROUP BY Institution.Name ORDER BY Number_of_Championships DESC;"}, {"question_id": 1663, "answer_sql": "SELECT institution . Name FROM institution JOIN Championship ON institution . Institution_ID = Championship . Institution_ID GROUP BY institution . Name HAVING COUNT( Championship . Institution_ID ) >= 1;"}, {"question_id": 1664, "answer_sql": "SELECT institution . Name FROM institution JOIN Championship ON institution . Institution_ID = Championship . Institution_ID GROUP BY institution . Name HAVING COUNT( Championship . Institution_ID ) >= 1;"}, {"question_id": 1665, "answer_sql": "SELECT COUNT(*) FROM institution INNER JOIN Championship ON institution.Institution_ID = Championship.Institution_ID WHERE institution.Affiliation = 'Public';"}, {"question_id": 1666, "answer_sql": "SELECT COUNT(*) FROM institution INNER JOIN Championship ON institution.Institution_ID = Championship.Institution_ID WHERE institution.Affiliation = 'Public';"}, {"question_id": 1667, "answer_sql": "SELECT Affiliation, COUNT(*) as Number_of_Institutions FROM institution GROUP BY Affiliation;"}, {"question_id": 1668, "answer_sql": "SELECT Affiliation , COUNT( Institution_ID ) FROM institution GROUP BY Affiliation ;"}, {"question_id": 1669, "answer_sql": "SELECT Affiliation, COUNT(*) as Number_of_Institutions FROM institution GROUP BY Affiliation ORDER BY Number_of_Institutions DESC LIMIT 1;"}, {"question_id": 1670, "answer_sql": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1671, "answer_sql": "SELECT i.Name, i.Founded FROM institution i JOIN Championship c ON i.Institution_ID = c.Institution_ID WHERE c.Joined > 1 GROUP BY i.Founded ORDER BY COUNT(c.Institution_ID) DESC;"}, {"question_id": 1672, "answer_sql": "SELECT YEAR(MIN(`Founded`)) AS Start_Year, COUNT(*) AS Number_of_Institutions FROM `institution` GROUP BY YEAR(`Founded`) HAVING COUNT(*) > 1"}, {"question_id": 1673, "answer_sql": "SELECT Nickname FROM Championship JOIN institution ON Championship . Institution_ID = institution . Institution_ID ORDER BY institution . Capacity DESC;"}, {"question_id": 1674, "answer_sql": "SELECT Institution.Name, Championship.Nickname, Institution.Capacity FROM Institution JOIN Championship ON Institution.Institution_ID = Championship.Institution_ID ORDER BY Institution.Capacity DESC;"}, {"question_id": 1675, "answer_sql": "SELECT SUM(Enrollment) FROM institution WHERE City IN ('Vancouver', 'Calgary');"}, {"question_id": 1676, "answer_sql": "SELECT institution.Enrollment FROM institution WHERE institution.City IN ('Vancouver', 'Calgary');"}, {"question_id": 1677, "answer_sql": "SELECT DISTINCT institution.Province FROM institution JOIN championship ON institution.Institution_ID = championship.Institution_ID WHERE institution.Founded < 1920 AND championship.Joined < 1920 AND institution.Founded > 1950 AND championship.Joined > 1950;"}, {"question_id": 1678, "answer_sql": "SELECT DISTINCT institution.Province FROM institution JOIN championship ON institution.Institution_ID = championship.Institution_ID WHERE (institution.Founded < 1920 AND championship.Joined < 1920) OR (institution.Founded > 1950 AND championship.Joined > 1950);"}, {"question_id": 1679, "answer_sql": "SELECT DISTINCT Province FROM institution;"}, {"question_id": 1680, "answer_sql": "SELECT COUNT(DISTINCT `Province`) FROM `institution`;"}, {"question_id": 1681, "answer_sql": "SELECT * FROM Warehouses;"}, {"question_id": 1682, "answer_sql": "SELECT * FROM Warehouses;"}, {"question_id": 1683, "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York';"}, {"question_id": 1684, "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York';"}, {"question_id": 1685, "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > 150;"}, {"question_id": 1686, "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > 150;"}, {"question_id": 1687, "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"}, {"question_id": 1688, "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"}, {"question_id": 1689, "answer_sql": "SELECT AVG(Value) as Average_Value, SUM(Value) as Total_Value FROM Boxes;"}, {"question_id": 1690, "answer_sql": "SELECT AVG(Value) as Average_Value, SUM(Value) as Total_Value FROM Boxes;"}, {"question_id": 1691, "answer_sql": "SELECT AVG(Capacity), SUM(Capacity) FROM Warehouses;"}, {"question_id": 1692, "answer_sql": "SELECT AVG(Capacity) as Average_Capacity, SUM(Capacity) as Total_Capacity FROM Warehouses;"}, {"question_id": 1693, "answer_sql": "SELECT Contents, AVG(Value) as Average_Value, MAX(Value) as Maximum_Value FROM Boxes GROUP BY Contents;"}, {"question_id": 1694, "answer_sql": "SELECT Boxes.Contents, AVG(Boxes.Value) AS Average_Value, MAX(Boxes.Value) AS Maximum_Value FROM Boxes GROUP BY Boxes.Contents;"}, {"question_id": 1695, "answer_sql": "SELECT Boxes.Contents FROM Boxes GROUP BY Boxes.Contents ORDER BY SUM(Boxes.Value) DESC LIMIT 1;"}, {"question_id": 1696, "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value = (SELECT MAX(Value) FROM Boxes);"}, {"question_id": 1697, "answer_sql": "SELECT AVG(Value) FROM Boxes;"}, {"question_id": 1698, "answer_sql": "SELECT AVG(Value) FROM Boxes;"}, {"question_id": 1699, "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes;"}, {"question_id": 1700, "answer_sql": "SELECT Boxes.Contents FROM Boxes;"}, {"question_id": 1701, "answer_sql": "SELECT DISTINCT Contents FROM Boxes;"}, {"question_id": 1702, "answer_sql": "SELECT COUNT(DISTINCT Contents) FROM Boxes;"}, {"question_id": 1703, "answer_sql": "SELECT DISTINCT Location FROM Warehouses;"}, {"question_id": 1704, "answer_sql": "SELECT Location FROM Warehouses;"}, {"question_id": 1705, "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"}, {"question_id": 1706, "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"}, {"question_id": 1707, "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"}, {"question_id": 1708, "answer_sql": "SELECT SUM(Value) AS TotalValue FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location IN ('Chicago', 'New York'));"}, {"question_id": 1709, "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"}, {"question_id": 1710, "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location IN ('Chicago', 'New York');"}, {"question_id": 1711, "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location <> 'New York';"}, {"question_id": 1712, "answer_sql": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'New York' AND Boxes.Contents IS NOT NULL;"}, {"question_id": 1713, "answer_sql": "SELECT Warehouses.Location FROM Warehouses WHERE Warehouses.Code IN ( SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents = 'Rocks' ) AND Warehouses.Code NOT IN ( SELECT Boxes.Warehouse FROM Boxes WHERE Boxes.Contents = 'Scissors' )"}, {"question_id": 1714, "answer_sql": "SELECT W.Location FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents = 'Rocks' AND B.Contents != 'Scissors'"}, {"question_id": 1715, "answer_sql": "SELECT Warehouses.Code, Warehouses.Location, Warehouses.Capacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors') GROUP BY Warehouses.Code;"}, {"question_id": 1716, "answer_sql": "SELECT DISTINCT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors')"}, {"question_id": 1717, "answer_sql": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' OR Boxes.Contents = 'Scissors'"}, {"question_id": 1718, "answer_sql": "SELECT Location FROM Warehouses WHERE Code IN ( SELECT Warehouse FROM Boxes WHERE Contents IN ('Rocks', 'Scissors') );"}, {"question_id": 1719, "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes ORDER BY Boxes.Value;"}, {"question_id": 1720, "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes ORDER BY Boxes.Value;"}, {"question_id": 1721, "answer_sql": "SELECT Code, Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes);"}, {"question_id": 1722, "answer_sql": "SELECT Code, Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes);"}, {"question_id": 1723, "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > ( SELECT AVG(Boxes.Value) FROM Boxes );"}, {"question_id": 1724, "answer_sql": "SELECT Boxes.Contents FROM Boxes WHERE Boxes.Value > (SELECT AVG(Boxes.Value) FROM Boxes)"}, {"question_id": 1725, "answer_sql": "SELECT DISTINCT Boxes.Contents FROM Boxes ORDER BY Boxes.Contents;"}, {"question_id": 1726, "answer_sql": "SELECT Contents FROM Boxes ORDER BY Contents;"}, {"question_id": 1727, "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Contents = 'Rocks' AND Boxes.Value > ( SELECT MAX(Value) FROM Boxes WHERE Contents != 'Rocks' );"}, {"question_id": 1728, "answer_sql": "SELECT Boxes.Code FROM Boxes WHERE Boxes.Contents = 'Rocks' AND Boxes.Value > ( SELECT MAX(Boxes2.Value) FROM Boxes Boxes2 WHERE Boxes2.Contents = 'Rocks' );"}, {"question_id": 1729, "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value > ( SELECT MAX(Boxes2.Value) FROM Boxes AS Boxes2 WHERE Boxes2.Contents = 'Scissors' );"}, {"question_id": 1730, "answer_sql": "SELECT Boxes.Code, Boxes.Contents FROM Boxes WHERE Boxes.Value > ( SELECT MAX(Boxes.Value) FROM Boxes )"}, {"question_id": 1731, "answer_sql": "SELECT SUM(Value) as TotalValue FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Capacity = (SELECT MAX(Capacity) FROM Warehouses);"}, {"question_id": 1732, "answer_sql": "SELECT SUM(Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Capacity = (SELECT MAX(Capacity) FROM Warehouses);"}, {"question_id": 1733, "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150;"}, {"question_id": 1734, "answer_sql": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150;"}, {"question_id": 1735, "answer_sql": "SELECT Contents, SUM(Value) AS Total_Value, COUNT(Code) AS Number_of_Boxes FROM Boxes GROUP BY Contents;"}, {"question_id": 1736, "answer_sql": "SELECT Boxes.Contents, SUM(Boxes.Value) AS Total_Value, COUNT(Boxes.Code) AS Number_of_Boxes FROM Boxes GROUP BY Boxes.Contents;"}, {"question_id": 1737, "answer_sql": "SELECT Warehouses.Location, SUM(Boxes.Value) AS Total_Capacity, AVG(Boxes.Value) AS Average_Capacity, MAX(Boxes.Value) AS Maximum_Capacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;"}, {"question_id": 1738, "answer_sql": "SELECT Location, SUM(Capacity) AS Total_Capacity, AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Maximum_Capacity FROM Warehouses GROUP BY Location;"}, {"question_id": 1739, "answer_sql": "SELECT SUM(Capacity) FROM Warehouses;"}, {"question_id": 1740, "answer_sql": "SELECT SUM(Capacity) FROM Warehouses;"}, {"question_id": 1741, "answer_sql": "SELECT b.Warehouse, w.Location, b.Value FROM Boxes b JOIN Warehouses w ON b.Warehouse = w.Code WHERE b.Value = ( SELECT MAX(Value) FROM Boxes WHERE Warehouse = b.Warehouse );"}, {"question_id": 1742, "answer_sql": "SELECT b.Contents, b.Value FROM Warehouses w JOIN Boxes b ON b.Warehouse = w.Code WHERE w.Location = 'Your_Warehouse_Location' ORDER BY b.Value DESC LIMIT 1;"}, {"question_id": 1743, "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"}, {"question_id": 1744, "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"}, {"question_id": 1745, "answer_sql": "SELECT COUNT(DISTINCT Location) FROM Boxes WHERE Contents = 'Rocks';"}, {"question_id": 1746, "answer_sql": "SELECT COUNT(DISTINCT Warehouses.Code) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Boxes.Contents = 'Rocks';"}, {"question_id": 1747, "answer_sql": "SELECT Boxes.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"}, {"question_id": 1748, "answer_sql": "SELECT Boxes.Code, Warehouses.Code, Warehouses.Location FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code;"}, {"question_id": 1749, "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'Chicago';"}, {"question_id": 1750, "answer_sql": "SELECT Boxes.Code FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location = 'Chicago';"}, {"question_id": 1751, "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"}, {"question_id": 1752, "answer_sql": "SELECT Warehouses.Code, COUNT(Boxes.Code) as BoxCount FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"}, {"question_id": 1753, "answer_sql": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) as 'Number of distinct types of contents' FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code;"}, {"question_id": 1754, "answer_sql": "SELECT b.Warehouse, COUNT(DISTINCT b.Contents) as 'Number of different types of contents' FROM Boxes b GROUP BY b.Warehouse;"}, {"question_id": 1755, "answer_sql": "SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Capacity > Boxes.Value"}, {"question_id": 1756, "answer_sql": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING COUNT(Boxes.Code) > Warehouses.Capacity;"}, {"question_id": 1757, "answer_sql": "SELECT SUM(Boxes.Value) FROM Boxes JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Warehouses.Location <> 'Chicago';"}, {"question_id": 1758, "answer_sql": "SELECT SUM(Value) FROM Boxes WHERE Location != 'Chicago'"}, {"question_id": 1759, "answer_sql": "SELECT University_Name , City , State FROM university ORDER BY University_Name ;"}, {"question_id": 1760, "answer_sql": "SELECT University_Name , City , State FROM university ORDER BY University_Name ;"}, {"question_id": 1761, "answer_sql": "SELECT COUNT(*) FROM university WHERE State IN ('Illinois', 'Ohio');"}, {"question_id": 1762, "answer_sql": "SELECT COUNT(*) FROM university WHERE State IN ('Illinois', 'Ohio');"}, {"question_id": 1763, "answer_sql": "SELECT MAX(Enrollment) as Maximum_Enrollment, AVG(Enrollment) as Average_Enrollment, MIN(Enrollment) as Minimum_Enrollment FROM university;"}, {"question_id": 1764, "answer_sql": "SELECT MAX( Enrollment ) as Maximum Enrollment , AVG( Enrollment ) as Average Enrollment , MIN( Enrollment ) as Minimum Enrollment FROM university ;"}, {"question_id": 1765, "answer_sql": "SELECT University.University_Name, Major.Major_Name FROM University JOIN major_ranking ON University.University_ID = major_ranking.University_ID JOIN Major ON major_ranking.Major_ID = Major.Major_ID WHERE University.Enrollment > ( SELECT AVG(Enrollment) FROM University ) GROUP BY University.University_Name, Major.Major_Name;"}, {"question_id": 1766, "answer_sql": "SELECT University_Name, Team_Name FROM university u JOIN major_ranking m ON u.University_ID = m.University_ID WHERE m.Rank < (SELECT AVG(Enrollment) FROM university) AND u.Team_Name IS NOT NULL;"}, {"question_id": 1767, "answer_sql": "SELECT Home_Conference FROM university;"}, {"question_id": 1768, "answer_sql": "SELECT DISTINCT `Home_Conference` FROM `university`;"}, {"question_id": 1769, "answer_sql": "SELECT Home_Conference, COUNT(*) FROM university GROUP BY Home_Conference;"}, {"question_id": 1770, "answer_sql": "SELECT h.Home_Conference, COUNT(u.University_ID) FROM university u JOIN major_ranking m ON u.University_ID = m.University_ID JOIN major ma ON m.Major_ID = ma.Major_ID WHERE ma.Major_ID = 1 -- assuming we are looking at the Computer Science major GROUP BY h.Home_Conference;"}, {"question_id": 1771, "answer_sql": "SELECT State FROM university GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1772, "answer_sql": "SELECT State FROM university GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1773, "answer_sql": "SELECT Home_Conference FROM university WHERE Enrollment > 2000 GROUP BY Home_Conference HAVING COUNT( University_ID ) > 1;"}, {"question_id": 1774, "answer_sql": "SELECT U.Team_Name FROM university U JOIN overall_ranking OR ON U.University_ID = OR.University_ID WHERE U.Enrollment > 2000 GROUP BY U.Team_Name HAVING COUNT(U.University_ID) = ( SELECT COUNT(U1.University_ID) FROM university U1 WHERE U1.Enrollment > 2000 );"}, {"question_id": 1775, "answer_sql": "SELECT Home_Conference FROM overall_ranking GROUP BY Home_Conference ORDER BY SUM(Reputation_point + Research_point + Citation_point + Total) ASC LIMIT 1;"}, {"question_id": 1776, "answer_sql": "SELECT Home_Conference FROM university WHERE Enrollment = ( SELECT MIN( Enrollment ) FROM university ) This query will return the home conference with the fewest number of people enrolled from the university table."}, {"question_id": 1777, "answer_sql": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;"}, {"question_id": 1778, "answer_sql": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code;"}, {"question_id": 1779, "answer_sql": "SELECT m.Major_Name, mr.Rank FROM major m JOIN major_ranking mr ON m.Major_ID = mr.Major_ID WHERE mr.University_ID IN (SELECT University_ID FROM university WHERE University_Name = 'Augustana College') ORDER BY mr.Rank;"}, {"question_id": 1780, "answer_sql": "SELECT o.Rank, m.Major_Name FROM major AS m JOIN major_ranking AS r ON m.Major_ID = r.Major_ID JOIN overall_ranking AS o ON r.University_ID = o.University_ID WHERE o.University_ID = (SELECT University_ID FROM university WHERE University_Name = 'Augustana College') ORDER BY o.Rank, m.Major_Name;"}, {"question_id": 1781, "answer_sql": "SELECT University_Name , City , State FROM university WHERE University_ID IN (SELECT University_ID FROM major_ranking WHERE Major_ID IN (SELECT Major_ID FROM major WHERE Major_Name = 'Accounting'));"}, {"question_id": 1782, "answer_sql": "SELECT University_Name , City , State FROM university WHERE University_ID = 1;"}, {"question_id": 1783, "answer_sql": "SELECT u.University_Name FROM university u JOIN major_ranking mr ON u.University_ID = mr.University_ID WHERE mr.Rank = 1 ORDER BY COUNT(DISTINCT m.Major_ID) DESC LIMIT 1;"}, {"question_id": 1784, "answer_sql": "SELECT university . University_Name FROM university JOIN major_ranking ON university . University_ID = major_ranking . University_ID WHERE major_ranking . Rank = 1 ORDER BY university . University_Name ASC LIMIT 1;"}, {"question_id": 1785, "answer_sql": "SELECT University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Major_ID IS NULL AND Rank = 1)"}, {"question_id": 1786, "answer_sql": "SELECT University_Name FROM university WHERE University_ID NOT IN (SELECT University_ID FROM major_ranking WHERE Major_ID IS NULL AND Rank = 1)"}, {"question_id": 1787, "answer_sql": "SELECT University_Name FROM university WHERE University_ID IN ( SELECT University_ID FROM major_ranking WHERE Major_ID IN ( SELECT Major_ID FROM major WHERE Major_Name IN ('Accounting', 'Urban Education') ) );"}, {"question_id": 1788, "answer_sql": "SELECT DISTINCT university . University_Name FROM university JOIN major_ranking ON university . University_ID = major_ranking . University_ID JOIN major ON major_ranking . Major_ID = major . Major_ID WHERE major . Major_Name = 'Accounting' AND major . Major_Name = 'Urban Education'"}, {"question_id": 1789, "answer_sql": "SELECT u.University_Name, or.Rank, FROM university u JOIN overall_ranking or ON u.University_ID = or.University_ID WHERE u.State = 'Wisconsin' ORDER BY or.Rank ASC;"}, {"question_id": 1790, "answer_sql": "SELECT university.University_Name, overall_ranking.Rank FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE university.State = 'Wisconsin';"}, {"question_id": 1791, "answer_sql": "SELECT University_Name FROM university WHERE Home_Conference = 'Northeast' ORDER BY Research_point DESC LIMIT 1;"}, {"question_id": 1792, "answer_sql": "SELECT university . University_Name FROM university JOIN overall_ranking ON university . University_ID = overall_ranking . University_ID WHERE overall_ranking . Research_point = ( SELECT MAX( Research_point ) FROM overall_ranking ) ;"}, {"question_id": 1793, "answer_sql": "SELECT University_Name FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID ORDER BY Reputation_point ASC;"}, {"question_id": 1794, "answer_sql": "SELECT University_Name FROM university ORDER BY Reputation_point ASC;"}, {"question_id": 1795, "answer_sql": "SELECT u.University_Name FROM university u JOIN major m ON u.University_ID = m.Major_ID JOIN major_ranking mr ON u.University_ID = mr.University_ID AND m.Major_ID = mr.Major_ID WHERE mr.Rank <= 3 GROUP BY u.University_Name HAVING COUNT(DISTINCT m.Major_ID) = 1;"}, {"question_id": 1796, "answer_sql": "SELECT DISTINCT university . University_Name FROM university JOIN major_ranking ON university . University_ID = major_ranking . University_ID JOIN major ON major_ranking . Major_ID = major . Major_ID WHERE major_ranking . Rank <= 3 AND major . Major_Name = 'Accounting';"}, {"question_id": 1797, "answer_sql": "SELECT SUM(university.Enrollment) as Total_Enrollment FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Rank <= 5;"}, {"question_id": 1798, "answer_sql": "SELECT SUM(university.Enrollment) FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Rank <= 5;"}, {"question_id": 1799, "answer_sql": "SELECT University_Name , Citation_point FROM university JOIN overall_ranking ON university . University_ID = overall_ranking . University_ID WHERE Reputation_point > 3 ORDER BY Citation_point DESC;"}, {"question_id": 1800, "answer_sql": "SELECT University_Name, Citation_point FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Reputation_point = (SELECT MAX(Reputation_point) FROM overall_ranking) ORDER BY Citation_point DESC;"}, {"question_id": 1801, "answer_sql": "SELECT State FROM university WHERE University_ID IN ( SELECT University_ID FROM university WHERE Enrollment < 3000 ) GROUP BY State HAVING COUNT(DISTINCT University_ID) > 2;"}, {"question_id": 1802, "answer_sql": "SELECT DISTINCT State FROM university WHERE Enrollment < 3000 GROUP BY State HAVING COUNT(University_ID) > 2;"}, {"question_id": 1803, "answer_sql": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters);"}, {"question_id": 1804, "answer_sql": "SELECT Movies.Title FROM Movies WHERE Movies.Rating IS NULL;"}, {"question_id": 1805, "answer_sql": "SELECT Movies.Title FROM Movies WHERE Movies.Rating = 'G';"}, {"question_id": 1806, "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Rating = 'G';"}, {"question_id": 1807, "answer_sql": "SELECT Movies.Title FROM MovieTheaters WHERE MovieTheaters.Name = 'Odeon';"}, {"question_id": 1808, "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon theater';"}, {"question_id": 1809, "answer_sql": "SELECT M.Title, MT.Name FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie;"}, {"question_id": 1810, "answer_sql": "SELECT M.Title, MT.Name FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie;"}, {"question_id": 1811, "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"}, {"question_id": 1812, "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G';"}, {"question_id": 1813, "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"}, {"question_id": 1814, "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"}, {"question_id": 1815, "answer_sql": "SELECT COUNT(DISTINCT Movies.Code) FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code;"}, {"question_id": 1816, "answer_sql": "SELECT COUNT(DISTINCT Movies.Code) FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie;"}, {"question_id": 1817, "answer_sql": "SELECT COUNT(DISTINCT MovieTheaters.Code) FROM MovieTheaters;"}, {"question_id": 1818, "answer_sql": "SELECT COUNT(*) FROM MovieTheaters;"}, {"question_id": 1819, "answer_sql": "SELECT Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE Movies.Title LIKE '%Citizen%';"}, {"question_id": 1820, "answer_sql": "SELECT Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name LIKE '%Citizen%';"}, {"question_id": 1821, "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating IN ('G', 'PG');"}, {"question_id": 1822, "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating IN ('G', 'PG');"}, {"question_id": 1823, "answer_sql": "SELECT M.Title FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie WHERE MT.Name IN ('Odeon', 'Imperial');"}, {"question_id": 1824, "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon' OR MovieTheaters.Name = 'Imperial';"}, {"question_id": 1825, "answer_sql": "SELECT M.Title FROM Movies M JOIN MovieTheaters MT1 ON M.Code = MT1.Movie JOIN MovieTheaters MT2 ON M.Code = MT2.Movie WHERE MT1.Name = 'Odeon' AND MT2.Name = 'Imperial'"}, {"question_id": 1826, "answer_sql": "SELECT M.Title FROM Movies M JOIN MovieTheaters MT1 ON M.Code = MT1.Movie JOIN MovieTheaters MT2 ON M.Code = MT2.Movie WHERE MT1.Name = 'Odeon' AND MT2.Name = 'Imperial';"}, {"question_id": 1827, "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon'"}, {"question_id": 1828, "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon'"}, {"question_id": 1829, "answer_sql": "SELECT Title FROM Movies ORDER BY Title;"}, {"question_id": 1830, "answer_sql": "SELECT Title FROM Movies ORDER BY Title;"}, {"question_id": 1831, "answer_sql": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Rating;"}, {"question_id": 1832, "answer_sql": "SELECT Movies.Title, Movies.Rating FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie ORDER BY Movies.Rating;"}, {"question_id": 1833, "answer_sql": "SELECT MovieTheaters.Name, COUNT(Movies.Code) as MovieCount FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code GROUP BY MovieTheaters.Name ORDER BY MovieCount DESC LIMIT 1;"}, {"question_id": 1834, "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters INNER JOIN ( SELECT Movie, COUNT(*) as MovieCount FROM MovieTheaters GROUP BY Movie ORDER BY MovieCount DESC LIMIT 1 ) AS MostMovies ON MovieTheaters.Movie = MostMovies.Movie"}, {"question_id": 1835, "answer_sql": "SELECT M.Title, COUNT(MT.Code) as NumberOfTheaters FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie GROUP BY M.Title ORDER BY NumberOfTheaters DESC LIMIT 1;"}, {"question_id": 1836, "answer_sql": "SELECT M.Title, COUNT(MT.Code) as NumberOfTheaters FROM Movies M JOIN MovieTheaters MT ON M.Code = MT.Movie GROUP BY M.Title ORDER BY NumberOfTheaters DESC LIMIT 1;"}, {"question_id": 1837, "answer_sql": "SELECT Movies.Rating, COUNT(Movies.Code) as NumberOfMovies FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Rating;"}, {"question_id": 1838, "answer_sql": "SELECT Movies.Rating, COUNT(Movies.Code) as NumberOfMovies FROM Movies GROUP BY Movies.Rating;"}, {"question_id": 1839, "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"}, {"question_id": 1840, "answer_sql": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL;"}, {"question_id": 1841, "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters WHERE MovieTheaters.Movie IN (SELECT Movies.Code FROM Movies);"}, {"question_id": 1842, "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters WHERE MovieTheaters.Movie IN (SELECT Movies.Code FROM Movies);"}, {"question_id": 1843, "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating IS NULL)"}, {"question_id": 1844, "answer_sql": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL;"}, {"question_id": 1845, "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G';"}, {"question_id": 1846, "answer_sql": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G';"}, {"question_id": 1847, "answer_sql": "SELECT Title FROM Movies;"}, {"question_id": 1848, "answer_sql": "SELECT Title FROM Movies;"}, {"question_id": 1849, "answer_sql": "SELECT DISTINCT Rating FROM Movies;"}, {"question_id": 1850, "answer_sql": "SELECT DISTINCT Rating FROM Movies;"}, {"question_id": 1851, "answer_sql": "SELECT * FROM Movies WHERE Rating IS NULL;"}, {"question_id": 1852, "answer_sql": "SELECT * FROM Movies WHERE Rating IS NULL;"}, {"question_id": 1853, "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Code IS NULL;"}, {"question_id": 1854, "answer_sql": "SELECT Movies.Title FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Code IS NULL;"}, {"question_id": 1855, "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient WHERE Package.Weight = ( SELECT MAX(Package.Weight) FROM Package );"}, {"question_id": 1856, "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Client.Name ORDER BY SUM(Package.Weight) DESC LIMIT 1;"}, {"question_id": 1857, "answer_sql": "SELECT SUM(Weight) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"}, {"question_id": 1858, "answer_sql": "SELECT SUM(Weight) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"}, {"question_id": 1859, "answer_sql": "SELECT Position FROM Employee WHERE Name = 'Amy Wong';"}, {"question_id": 1860, "answer_sql": "SELECT Position FROM Employee WHERE Name = 'Amy Wong';"}, {"question_id": 1861, "answer_sql": "SELECT Name, Position, Salary FROM Employee WHERE Name = 'Turanga Leela';"}, {"question_id": 1862, "answer_sql": "SELECT Salary, Position FROM Employee WHERE Name = 'Turanga Leela';"}, {"question_id": 1863, "answer_sql": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern';"}, {"question_id": 1864, "answer_sql": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern';"}, {"question_id": 1865, "answer_sql": "SELECT Has_Clearance.Level FROM Has_Clearance JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID WHERE Employee.Name = 'Physician';"}, {"question_id": 1866, "answer_sql": "SELECT Has_Clearance.Level FROM Has_Clearance JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID WHERE Employee.Position = 'Physician';"}, {"question_id": 1867, "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'Leo Wong';"}, {"question_id": 1868, "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT ClientID FROM Client WHERE Name = 'Leo Wong');"}, {"question_id": 1869, "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"}, {"question_id": 1870, "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"}, {"question_id": 1871, "answer_sql": "SELECT Package.PackageNumber, Package.Contents, Client.Name as Sender, Client.Name as Recipient FROM Package JOIN Client ON Package.Sender = Client.AccountNumber JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Leo Wong'"}, {"question_id": 1872, "answer_sql": "SELECT DISTINCT Package.PackageNumber FROM Package JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'Leo Wong';"}, {"question_id": 1873, "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"}, {"question_id": 1874, "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');"}, {"question_id": 1875, "answer_sql": "SELECT Package.Contents FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Shipment.Sender = Client.AccountNumber WHERE Client.Name = 'John Zoidfarb' AND Package.Weight > 10;"}, {"question_id": 1876, "answer_sql": "SELECT Package.Contents FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'John Zoidfarb';"}, {"question_id": 1877, "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package JOIN Client ON Package.Sender = Client.AccountNumber JOIN Employee ON Client.AccountNumber = Employee.EmployeeID WHERE Employee.Name = 'John';"}, {"question_id": 1878, "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name LIKE 'John%' ORDER BY Package.Weight DESC LIMIT 1;"}, {"question_id": 1879, "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID JOIN Has_Clearance ON Shipment.Manager = Has_Clearance.Employee WHERE Has_Clearance.Level = ( SELECT MAX(Level) FROM Has_Clearance WHERE Employee = 1 ) ORDER BY Package.Weight ASC LIMIT 3;"}, {"question_id": 1880, "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Package.Sender = Client.AccountNumber JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'Lightweight Client' ORDER BY Package.Weight ASC LIMIT 3;"}, {"question_id": 1881, "answer_sql": "SELECT Client.Name, COUNT(Package.Shipment) as Number_of_Packages FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Package.Recipient ORDER BY Number_of_Packages DESC LIMIT 1;"}, {"question_id": 1882, "answer_sql": "SELECT Client.Name, COUNT(Package.Shipment) as Number_of_Packages FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name ORDER BY Number_of_Packages DESC LIMIT 1;"}, {"question_id": 1883, "answer_sql": "SELECT Client.Name, COUNT(Package.Shipment) as Number_of_Packages FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Package.Recipient ORDER BY COUNT(Package.Shipment) ASC LIMIT 1;"}, {"question_id": 1884, "answer_sql": "SELECT COUNT(DISTINCT PackageNumber) as Number_of_Packages, Name as Employee_Name FROM Package JOIN Client ON Package.Recipient = Client.AccountNumber GROUP BY Employee;"}, {"question_id": 1885, "answer_sql": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Sender GROUP BY Client.Name HAVING COUNT(Package.Shipment) > 1;"}, {"question_id": 1886, "answer_sql": "SELECT Name FROM Client WHERE AccountNumber IN ( SELECT Sender FROM Package GROUP BY Sender HAVING COUNT(*) > 1 );"}, {"question_id": 1887, "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';"}, {"question_id": 1888, "answer_sql": "SELECT Coordinates FROM Planet WHERE Name = 'Mars';"}, {"question_id": 1889, "answer_sql": "SELECT Name, Coordinates FROM Planet ORDER BY Name;"}, {"question_id": 1890, "answer_sql": "SELECT Name, Coordinates FROM Planet ORDER BY Name;"}, {"question_id": 1891, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Phillip J. Fry');"}, {"question_id": 1892, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Phillip J Fry');"}, {"question_id": 1893, "answer_sql": "SELECT Date FROM Shipment;"}, {"question_id": 1894, "answer_sql": "SELECT Date FROM Shipment;"}, {"question_id": 1895, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = 'Mars';"}, {"question_id": 1896, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = 'Mars';"}, {"question_id": 1897, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = ( SELECT PlanetID FROM Planet WHERE Name = 'Mars' ) AND Manager = ( SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela' );"}, {"question_id": 1898, "answer_sql": "SELECT Shipment.ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'Turanga Leela' AND Shipment.Planet = 3;"}, {"question_id": 1899, "answer_sql": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela');"}, {"question_id": 1900, "answer_sql": "SELECT Shipment.ShipmentID FROM Shipment JOIN Has_Clearance ON Shipment.ShipmentID = Has_Clearance.Planet JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID WHERE Employee.Name = 'Turanga Leela' AND Shipment.Planet = 3;"}, {"question_id": 1901, "answer_sql": "SELECT P.Name, COUNT(S.ShipmentID) as Total_Shipments FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.PlanetID, P.Name;"}, {"question_id": 1902, "answer_sql": "SELECT Planet.Name, COUNT(Shipment.ShipmentID) as Total_Shipments FROM Planet JOIN Shipment ON Shipment.Planet = Planet.PlanetID GROUP BY Planet.Name;"}, {"question_id": 1903, "answer_sql": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.Name ORDER BY COUNT(S.ShipmentID) DESC LIMIT 1;"}, {"question_id": 1904, "answer_sql": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.Name ORDER BY COUNT(S.ShipmentID) DESC LIMIT 1;"}, {"question_id": 1905, "answer_sql": "SELECT E.Name, COUNT(S.ShipmentID) AS Number_of_Shipments FROM Employee E JOIN Shipment S ON E.EmployeeID = S.Manager GROUP BY E.EmployeeID, E.Name HAVING E.Name = 'Manager Name';"}, {"question_id": 1906, "answer_sql": "SELECT Manager, COUNT(*) as Number_of_Shipments FROM Shipment GROUP BY Manager;"}, {"question_id": 1907, "answer_sql": "SELECT SUM(Weight) FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';"}, {"question_id": 1908, "answer_sql": "SELECT SUM(Weight) as TotalWeight FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars';"}, {"question_id": 1909, "answer_sql": "SELECT P.Name, SUM(P.Weight) as TotalWeight FROM Package P JOIN Shipment S ON P.Shipment = S.ShipmentID JOIN Planet P2 ON S.Planet = P2.PlanetID GROUP BY P2.Name;"}, {"question_id": 1910, "answer_sql": "SELECT P.Name, SUM(P.Weight) as TotalWeight FROM Package P JOIN Shipment S ON P.Shipment = S.ShipmentID JOIN Planet P2 ON S.Planet = P2.PlanetID GROUP BY P2.Name;"}, {"question_id": 1911, "answer_sql": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet WHERE SUM(P.Coordinates) > 30;"}, {"question_id": 1912, "answer_sql": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet JOIN Package Pkg ON S.ShipmentID = Pkg.Shipment WHERE SUM(Pkg.Weight) > 30 GROUP BY P.PlanetID, P.Name;"}, {"question_id": 1913, "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Omicron Persei 8' AND Employee.Name = 'Zapp Brannigan';"}, {"question_id": 1914, "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan') AND Shipment = (SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan'));"}, {"question_id": 1915, "answer_sql": "SELECT Package.PackageNumber FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Omicron Persei 8' OR Package.Sender = (SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan');"}, {"question_id": 1916, "answer_sql": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan') OR Shipment = (SELECT ShipmentID FROM Shipment WHERE Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Zapp Brannigan'));"}, {"question_id": 1917, "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID WHERE Package.Weight BETWEEN 10 AND 30;"}, {"question_id": 1918, "answer_sql": "SELECT Package.PackageNumber, Package.Weight FROM Package WHERE Package.Weight BETWEEN 10 AND 30;"}, {"question_id": 1919, "answer_sql": "SELECT E.Name FROM Employee E JOIN Has_Clearance HC ON E.EmployeeID = HC.Employee WHERE HC.Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND E.EmployeeID NOT IN (SELECT DISTINCT Manager FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars'));"}, {"question_id": 1920, "answer_sql": "SELECT E.Name FROM Employee E JOIN Has_Clearance HC ON E.EmployeeID = HC.Employee WHERE HC.Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars')"}, {"question_id": 1921, "answer_sql": "SELECT E.Name FROM Employee E JOIN Has_Clearance HC ON E.EmployeeID = HC.Employee JOIN Planet P ON HC.Planet = P.PlanetID WHERE P.Name = 'Omega III';"}, {"question_id": 1922, "answer_sql": "SELECT e.Name FROM Employee e JOIN Has_Clearance hc ON e.EmployeeID = hc.Employee JOIN Planet p ON hc.Planet = p.PlanetID WHERE p.Name = 'Omega III';"}, {"question_id": 1923, "answer_sql": "SELECT P.Name FROM Planet P JOIN Has_Clearance H ON P.PlanetID = H.Planet GROUP BY P.Name HAVING COUNT(H.Employee) = 1;"}, {"question_id": 1924, "answer_sql": "SELECT P.Name FROM Planet P JOIN Employee E ON E.Planet = P.PlanetID JOIN Has_Clearance H ON H.Employee = E.EmployeeID WHERE H.Level = ( SELECT MAX(Level) FROM Has_Clearance WHERE Planet = P.PlanetID ) GROUP BY P.PlanetID HAVING COUNT(EmployeeID) = 1;"}, {"question_id": 1925, "answer_sql": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000;"}, {"question_id": 1926, "answer_sql": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000;"}, {"question_id": 1927, "answer_sql": "SELECT Name FROM Employee WHERE Salary > (SELECT AVG(Salary) FROM Employee) OR Salary > 5000;"}, {"question_id": 1928, "answer_sql": "SELECT Name FROM Employee WHERE Salary > (SELECT AVG(Salary) FROM Employee) OR Salary > 5000;"}, {"question_id": 1929, "answer_sql": "SELECT COUNT(*) FROM Has_Clearance WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars');"}, {"question_id": 1930, "answer_sql": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = ( SELECT PlanetID FROM Planet WHERE Name = 'Mars' ) );"}, {"question_id": 1931, "answer_sql": "SELECT COUNT(*) FROM game;"}, {"question_id": 1932, "answer_sql": "SELECT COUNT(*) FROM game;"}, {"question_id": 1933, "answer_sql": "SELECT game.Title, game.Developers FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID WHERE game_player.If_active = True ORDER BY game.Units_sold_Millions DESC;"}, {"question_id": 1934, "answer_sql": "SELECT game.Title, game.Developers FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID WHERE game_player.If_active = True ORDER BY game.Units_sold_Millions DESC;"}, {"question_id": 1935, "answer_sql": "SELECT AVG(Units_sold_Millions) FROM game WHERE Developers != 'Nintendo';"}, {"question_id": 1936, "answer_sql": "SELECT AVG( Units_sold_Millions ) FROM game WHERE Developers != 'Nintendo' This SQL query will return the average number of units sold in millions for games not developed by Nintendo. The query is efficient as it only selects the relevant columns and filters the data based on the condition."}, {"question_id": 1937, "answer_sql": "SELECT p.Platform_name, p.Market_district FROM platform p ```"}, {"question_id": 1938, "answer_sql": "SELECT p.Platform_name, m.Market_district FROM platform p JOIN game g ON p.Platform_ID = g.Platform_ID JOIN player ply ON g.Game_ID = ply.Game_ID WHERE ply.If_active = True;"}, {"question_id": 1939, "answer_sql": "SELECT Platform_name, Platform_ID FROM platform WHERE Download_rank = 1;"}, {"question_id": 1940, "answer_sql": "SELECT Platform_name, Platform_ID FROM platform WHERE Download_rank = 1;"}, {"question_id": 1941, "answer_sql": "SELECT MIN(Rank_of_the_year) as Min_Rank, MAX(Rank_of_the_year) as Max_Rank FROM player;"}, {"question_id": 1942, "answer_sql": "SELECT MAX(Rank_of_the_year) as Max_Rank, MIN(Rank_of_the_year) as Min_Rank FROM player;"}, {"question_id": 1943, "answer_sql": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year < 3;"}, {"question_id": 1944, "answer_sql": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year <= 3;"}, {"question_id": 1945, "answer_sql": "SELECT player.Player_name FROM player ORDER BY player.Player_name ASC;"}, {"question_id": 1946, "answer_sql": "SELECT player.Player_name FROM player ORDER BY Player_name ASC;"}, {"question_id": 1947, "answer_sql": "SELECT player.Player_name, player.College FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Franchise = 'Call of Duty' ORDER BY player.Rank_of_the_year DESC;"}, {"question_id": 1948, "answer_sql": "SELECT p.Player_name, p.College FROM player p JOIN game_player gp ON p.Player_ID = gp.Player_ID WHERE gp.If_active = True ORDER BY p.Rank_of_the_year DESC;"}, {"question_id": 1949, "answer_sql": "SELECT p.Player_name, p.Rank_of_the_year FROM player p JOIN game_player gp ON p.Player_ID = gp.Player_ID JOIN game g ON gp.Game_ID = g.Game_ID WHERE g.Title = 'Super Mario World';"}, {"question_id": 1950, "answer_sql": "SELECT p.Player_name, p.Rank_of_the_year FROM player p JOIN game_player gp ON p.Player_ID = gp.Player_ID JOIN game g ON gp.Game_ID = g.Game_ID WHERE g.Title = 'Super Mario World';"}, {"question_id": 1951, "answer_sql": "SELECT DISTINCT game.Developers FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = 'Auburn' AND game_player.If_active = True;"}, {"question_id": 1952, "answer_sql": "SELECT game.Developers FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = 'Auburn' AND game_player.If_active = True;"}, {"question_id": 1953, "answer_sql": "SELECT AVG(gp.Units_sold_Millions) as Average_Units_Sold FROM game_player as gp JOIN player as p ON gp.Player_ID = p.Player_ID WHERE p.Position = 'Guard';"}, {"question_id": 1954, "answer_sql": "SELECT AVG(gp.Units_sold_Millions) FROM game_player gp JOIN game g ON gp.Game_ID = g.Game_ID JOIN player p ON gp.Player_ID = p.Player_ID WHERE p.Position = 'Guard';"}, {"question_id": 1955, "answer_sql": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID;"}, {"question_id": 1956, "answer_sql": "SELECT Title, Platform_name FROM game, platform WHERE game.Platform_ID = platform.Platform_ID;"}, {"question_id": 1957, "answer_sql": "SELECT game.Title FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID WHERE platform.Market_district IN ('Asia', 'USA') ;"}, {"question_id": 1958, "answer_sql": "SELECT Title FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID WHERE platform.Market_district IN ('Asia', 'USA')"}, {"question_id": 1959, "answer_sql": "SELECT game.Franchise, COUNT(game.Game_ID) as Number_of_Games FROM game GROUP BY game.Franchise;"}, {"question_id": 1960, "answer_sql": "SELECT Franchise, COUNT(Game_ID) as Number_of_Games FROM game GROUP BY Franchise;"}, {"question_id": 1961, "answer_sql": "SELECT game.Franchise FROM game GROUP BY game.Franchise ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1962, "answer_sql": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1;"}, {"question_id": 1963, "answer_sql": "SELECT g.Franchise FROM game g GROUP BY g.Franchise HAVING COUNT(g.Game_ID) >= 2;"}, {"question_id": 1964, "answer_sql": "SELECT g.Franchise FROM game g GROUP BY g.Franchise HAVING COUNT(g.Game_ID) >= 2;"}, {"question_id": 1965, "answer_sql": "SELECT player.Player_name FROM player LEFT JOIN game_player ON player.Player_ID = game_player.Player_ID WHERE game_player.Game_ID IS NULL;"}, {"question_id": 1966, "answer_sql": "SELECT player.Player_name FROM player LEFT JOIN game_player ON player.Player_ID = game_player.Player_ID WHERE game_player.Game_ID IS NULL;"}, {"question_id": 1967, "answer_sql": "SELECT game.Title FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College IN ('Oklahoma', 'Auburn') AND game_player.If_active = TRUE;"}, {"question_id": 1968, "answer_sql": "SELECT game.Title FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College IN ('Oklahoma', 'Auburn') AND game_player.If_active = True;"}, {"question_id": 1969, "answer_sql": "SELECT DISTINCT Franchise FROM game;"}, {"question_id": 1970, "answer_sql": "SELECT DISTINCT Franchise FROM game;"}, {"question_id": 1971, "answer_sql": "SELECT game.Title FROM game LEFT JOIN game_player ON game.Game_ID = game_player.Game_ID WHERE game_player.If_active = FALSE AND player.Position = 'Guard' GROUP BY game.Title HAVING COUNT(DISTINCT player.Player_ID) = 0;"}, {"question_id": 1972, "answer_sql": "SELECT g.Title FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID WHERE gp.If_active = FALSE AND g.Platform_ID IN ( SELECT p.Platform_ID FROM player p WHERE p.Position = 'Guard' ) GROUP BY g.Title;"}, {"question_id": 1973, "answer_sql": "SELECT p.Name FROM press p JOIN book b ON p.Press_ID = b.Press_ID WHERE b.Sale_Amount = (SELECT MAX(Sale_Amount) FROM book) ORDER BY p.Year_Profits_billion DESC;"}, {"question_id": 1974, "answer_sql": "SELECT Press_ID , Name FROM press ORDER BY Year_Profits_billion DESC;"}, {"question_id": 1975, "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion > 15 OR p.Year_Profits_billion > 1;"}, {"question_id": 1976, "answer_sql": "SELECT press . Name FROM press WHERE press . Year_Profits_billion > 15 OR press . Month_Profits_billion > 1 ;"}, {"question_id": 1977, "answer_sql": "SELECT Year_Profits_billion as 'Year', AVG(Year_Profits_billion) as 'Average Profit', MAX(Year_Profits_billion) as 'Maximum Profit' FROM press;"}, {"question_id": 1978, "answer_sql": "SELECT p.Name AS Press, AVG(b.Year_Profits_billion) AS Average_Yearly_Profit, MAX(b.Year_Profits_billion) AS Maximum_Yearly_Profit FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Press_ID, p.Name ```"}, {"question_id": 1979, "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(p2.Month_Profits_billion) FROM press p2 );"}, {"question_id": 1980, "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(p2.Month_Profits_billion) FROM press p2 );"}, {"question_id": 1981, "answer_sql": "SELECT p.Name FROM press p WHERE p.Month_Profits_billion = ( SELECT MAX(p2.Month_Profits_billion) FROM press p2 ) OR p.Month_Profits_billion = ( SELECT MIN(p3.Month_Profits_billion) FROM press p3 )"}, {"question_id": 1982, "answer_sql": "SELECT CASE WHEN MIN(Month_Profits_billion) = MAX(Month_Profits_billion) THEN 'The press that makes the highest monthly profit' ELSE 'The press that makes the lowest monthly profit' END AS Result, press.Name FROM press JOIN (SELECT Press_ID, MAX(Month_Profits_billion) AS Max_Profits, MIN(Month_Profits_billion) AS Min_Profits FROM press GROUP BY Press_ID) AS Press_Profits ON press.Press_ID = Press_Profits.Press_ID WHERE press.Month_Profits_billion IN (Max_Profits, Min_Profits)"}, {"question_id": 1983, "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"}, {"question_id": 1984, "answer_sql": "SELECT COUNT(*) FROM author WHERE Age < 30;"}, {"question_id": 1985, "answer_sql": "SELECT Gender, AVG(Age) as Average_Age FROM author GROUP BY Gender;"}, {"question_id": 1986, "answer_sql": "SELECT Gender, AVG(Age) as Average_Age FROM author GROUP BY Gender;"}, {"question_id": 1987, "answer_sql": "SELECT Gender, COUNT(*) as Number_of_Authors FROM author WHERE Age > 30 GROUP BY Gender"}, {"question_id": 1988, "answer_sql": "SELECT a.Gender, COUNT(*) FROM author a WHERE a.Age > 30 GROUP BY a.Gender;"}, {"question_id": 1989, "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"}, {"question_id": 1990, "answer_sql": "SELECT Title FROM book ORDER BY Release_date DESC;"}, {"question_id": 1991, "answer_sql": "SELECT b.Book_Series, COUNT(b.Book_ID) as Number_of_Books FROM book b GROUP BY b.Book_Series;"}, {"question_id": 1992, "answer_sql": "SELECT b.Book_Series, COUNT(b.Book_ID) as 'Number of Books' FROM book b GROUP BY b.Book_Series;"}, {"question_id": 1993, "answer_sql": "SELECT Title, Release_date FROM book ORDER BY Sale_Amount DESC LIMIT 5;"}, {"question_id": 1994, "answer_sql": "SELECT Title, Release_date FROM book ORDER BY Sale_Amount DESC LIMIT 5;"}, {"question_id": 1995, "answer_sql": "SELECT b.Book_Series FROM book b WHERE b.Book_ID IN ( SELECT b1.Book_ID FROM book b1 WHERE b1.Sale_Amount > 1000 ) AND b.Book_ID IN ( SELECT b2.Book_ID FROM book b2 WHERE b2.Sale_Amount < 500 )"}, {"question_id": 1996, "answer_sql": "SELECT b.Book_Series FROM book b WHERE b.Sale_Amount > 1000 AND b.Sale_Amount < 500;"}, {"question_id": 1997, "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_Series IN ('MM', 'LT') GROUP BY a.Name HAVING COUNT(DISTINCT b.Book_Series) = 2;"}, {"question_id": 1998, "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_Series IN ('MM', 'LT') GROUP BY a.Name HAVING COUNT(DISTINCT b.Book_Series) = 2;"}, {"question_id": 1999, "answer_sql": "SELECT a.Name, a.Age FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_ID IS NULL;"}, {"question_id": 2000, "answer_sql": "SELECT a.Name FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_ID IS NULL;"}, {"question_id": 2001, "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Name HAVING COUNT(b.Book_ID) > 1;"}, {"question_id": 2002, "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Name HAVING COUNT(b.Book_ID) > 1;"}, {"question_id": 2003, "answer_sql": "SELECT b.Title, a.Name, p.Name FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3;"}, {"question_id": 2004, "answer_sql": "SELECT b.Title, a.Name, p.Name FROM book b JOIN author a ON b.Author_ID = a.Author_ID JOIN press p ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount = ( SELECT MAX(Sale_Amount) FROM book ) ORDER BY b.Sale_Amount DESC;"}, {"question_id": 2005, "answer_sql": "[SQL query]"}, {"question_id": 2006, "answer_sql": "SELECT p.Name, SUM(b.Sale_Amount) as Total_Sale_Amount FROM press p JOIN book b ON p.Press_ID = b.Press_ID GROUP BY p.Press_ID, p.Name;"}, {"question_id": 2007, "answer_sql": "SELECT p.Name, COUNT(b.Book_ID) as Number_of_Sold_Books FROM book b JOIN press p ON b.Press_ID = p.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Name;"}, {"question_id": 2008, "answer_sql": "SELECT p.Name, COUNT(b.Book_ID) as Number_of_Books FROM press p JOIN book b ON p.Press_ID = b.Press_ID WHERE b.Sale_Amount > 1000 GROUP BY p.Press_ID ORDER BY Number_of_Books DESC;"}, {"question_id": 2009, "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Sale_Amount = (SELECT MAX(Sale_Amount) FROM book)"}, {"question_id": 2010, "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Sale_Amount = (SELECT MAX(Sale_Amount) FROM book) LIMIT 1;"}, {"question_id": 2011, "answer_sql": "SELECT a.Name, a.Gender FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Author_ID ORDER BY COUNT(b.Book_ID) DESC LIMIT 1;"}, {"question_id": 2012, "answer_sql": "SELECT a.Name, a.Gender FROM author a JOIN book b ON a.Author_ID = b.Author_ID GROUP BY a.Author_ID, a.Gender ORDER BY COUNT(b.Book_ID) DESC LIMIT 1;"}, {"question_id": 2013, "answer_sql": "SELECT a.Name FROM author a LEFT JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Press_ID IS NULL;"}, {"question_id": 2014, "answer_sql": "SELECT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Press_ID NOT IN ( SELECT p.Press_ID FROM press p WHERE p.Name = 'Accor' ) ```"}, {"question_id": 2015, "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p JOIN (SELECT Press_ID FROM book GROUP BY Press_ID HAVING COUNT(Book_ID) > 2) b ON p.Press_ID = b.Press_ID ```sql This query first creates a subquery that selects the Press_ID of the presses that have more than two books. Then it joins this subquery with the press table to get the name and yearly profit for the presses that satisfy the condition."}, {"question_id": 2016, "answer_sql": "SELECT p.Name, p.Year_Profits_billion FROM press p JOIN ( SELECT b.Press_ID FROM book b GROUP BY b.Press_ID HAVING COUNT(b.Book_ID) > 2 ) b ON p.Press_ID = b.Press_ID ORDER BY p.Year_Profits_billion DESC;"}, {"question_id": 2017, "answer_sql": "SELECT COUNT(*) FROM Authors;"}, {"question_id": 2018, "answer_sql": "SELECT author_name FROM Authors;"}, {"question_id": 2019, "answer_sql": "SELECT author_name, other_details FROM Authors;"}, {"question_id": 2020, "answer_sql": "SELECT other_details FROM Authors WHERE author_name = 'Addison Denesik';"}, {"question_id": 2021, "answer_sql": "SELECT COUNT(*) FROM Documents;"}, {"question_id": 2022, "answer_sql": "SELECT Authors.author_name FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE Documents.document_id = 4;"}, {"question_id": 2023, "answer_sql": "SELECT Authors.author_name FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE Documents.document_name = 'Travel to Brazil';"}, {"question_id": 2024, "answer_sql": "SELECT COUNT(*) FROM Documents WHERE author_name = 'Era Kerluke';"}, {"question_id": 2025, "answer_sql": "SELECT document_name, document_description FROM Documents;"}, {"question_id": 2026, "answer_sql": "SELECT document_id, document_name FROM Documents WHERE author_name = 'Bianka Cummings';"}, {"question_id": 2027, "answer_sql": "SELECT Documents.document_name, Documents.document_description, Authors.author_name, Authors.other_details FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE Documents.document_name = 'Travel to China';"}, {"question_id": 2028, "answer_sql": "SELECT Authors.author_name, COUNT(Documents.document_id) as document_count FROM Authors LEFT JOIN Documents_Processes ON Authors.author_name = Documents_Processes.document_id GROUP BY Authors.author_name;"}, {"question_id": 2029, "answer_sql": "SELECT a.author_name, COUNT(d.document_id) as document_count FROM Authors a JOIN Documents d ON a.author_name = d.author_name GROUP BY a.author_name ORDER BY document_count DESC LIMIT 1;"}, {"question_id": 2030, "answer_sql": "SELECT author_name FROM Authors INNER JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY author_name HAVING COUNT(document_id) >= 2;"}, {"question_id": 2031, "answer_sql": "SELECT COUNT(*) FROM Business_Processes;"}, {"question_id": 2032, "answer_sql": "SELECT next_process_id, process_name, process_description FROM Business_Processes WHERE process_id = 9;"}, {"question_id": 2033, "answer_sql": "SELECT B.process_name FROM Business_Processes B JOIN Documents_Processes DP ON B.process_id = DP.process_id WHERE DP.process_id = 9;"}, {"question_id": 2034, "answer_sql": "SELECT process_outcome_code, COUNT(*) as Number_of_Process_Outcomes FROM Process_Outcomes GROUP BY process_outcome_code;"}, {"question_id": 2035, "answer_sql": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes;"}, {"question_id": 2036, "answer_sql": "SELECT D.document_name, P.process_description, O.process_outcome_description FROM Documents D JOIN Documents_Processes DP ON D.document_id = DP.document_id JOIN Business_Processes B ON DP.process_id = B.process_id JOIN Process_Outcomes O ON DP.process_outcome_code = O.process_outcome_code WHERE DP.process_status_code = 'Working' ORDER BY D.document_name;"}, {"question_id": 2037, "answer_sql": "SELECT process_status_code, COUNT(*) as Number_of_Process_Status FROM Process_Status GROUP BY process_status_code;"}, {"question_id": 2038, "answer_sql": "SELECT process_status_code, process_status_description FROM Process_Status;"}, {"question_id": 2039, "answer_sql": "SELECT process_status_description FROM Process_Status WHERE process_status_code = 'ct';"}, {"question_id": 2040, "answer_sql": "SELECT COUNT(*) FROM Staff;"}, {"question_id": 2041, "answer_sql": "SELECT * FROM Staff;"}, {"question_id": 2042, "answer_sql": "SELECT staff_details FROM Staff WHERE staff_id = 100;"}, {"question_id": 2043, "answer_sql": "SELECT COUNT(*) FROM Ref_Staff_Roles;"}, {"question_id": 2044, "answer_sql": "SELECT staff_role_code, staff_role_description FROM Ref_Staff_Roles;"}, {"question_id": 2045, "answer_sql": "SELECT staff_role_description FROM Ref_Staff_Roles WHERE staff_role_code = 'HR';"}, {"question_id": 2046, "answer_sql": "SELECT COUNT(*) FROM Business_Processes;"}, {"question_id": 2047, "answer_sql": "SELECT DISTINCT process_id FROM Documents_Processes;"}, {"question_id": 2048, "answer_sql": "SELECT DISTINCT document_id FROM Documents WHERE document_id NOT IN (SELECT document_id FROM Documents_Processes);"}, {"question_id": 2049, "answer_sql": "SELECT process_id FROM Business_Processes WHERE process_id NOT IN (SELECT process_id FROM Documents);"}, {"question_id": 2050, "answer_sql": "SELECT Process_Outcomes.process_outcome_description, Process_Status.process_status_description FROM Documents_Processes JOIN Process_Outcomes ON Documents_Processes.process_outcome_code = Process_Outcomes.process_outcome_code JOIN Process_Status ON Documents_Processes.process_status_code = Process_Status.process_status_code WHERE Documents.document_id = 0;"}, {"question_id": 2051, "answer_sql": "SELECT Process_Outcomes.process_outcome_description FROM Documents_Processes JOIN Business_Processes ON Documents_Processes.process_id = Business_Processes.process_id JOIN Process_Outcomes ON Documents_Processes.process_outcome_code = Process_Outcomes.process_outcome_code WHERE Documents.document_name = 'Travel to Brazil' AND Documents_Processes.document_id = (SELECT document_id FROM Documents WHERE document_name = 'Travel to Brazil') AND Business_Processes.process_id = (SELECT process_id FROM Staff_in_Processes WHERE document_id = (SELECT document_id FROM Documents WHERE document_name = 'Travel to Brazil') AND staff_id = (SELECT staff_id FROM Staff WHERE staff_details = 'John Doe'));"}, {"question_id": 2052, "answer_sql": "SELECT Business_Processes.process_id, COUNT(Documents.document_id) as document_count FROM Business_Processes LEFT JOIN Documents_Processes ON Business_Processes.process_id = Documents_Processes.process_id LEFT JOIN Documents ON Documents_Processes.document_id = Documents.document_id GROUP BY Business_Processes.process_id ORDER BY document_count DESC;"}, {"question_id": 2053, "answer_sql": "SELECT COUNT(*) FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9;"}, {"question_id": 2054, "answer_sql": "SELECT Staff.staff_id, COUNT(Documents_Processes.process_id) as 'Number of Processes' FROM Staff JOIN Staff_in_Processes ON Staff.staff_id = Staff_in_Processes.staff_id JOIN Documents_Processes ON Staff_in_Processes.document_id = Documents_Processes.document_id AND Staff_in_Processes.process_id = Documents_Processes.process_id GROUP BY Staff.staff_id;"}, {"question_id": 2055, "answer_sql": "SELECT sr.staff_role_code, COUNT(dp.process_id) as 'Number of Processes' FROM Staff_in_Processes sip JOIN Ref_Staff_Roles sr ON sip.staff_role_code = sr.staff_role_code JOIN Documents_Processes dp ON sip.document_id = dp.document_id AND sip.process_id = dp.process_id GROUP BY sr.staff_role_code;"}, {"question_id": 2056, "answer_sql": "SELECT COUNT(DISTINCT staff_role_code) FROM Staff_in_Processes WHERE staff_id = 3;"}, {"question_id": 2057, "answer_sql": "SELECT COUNT(*) FROM `Agencies`;"}, {"question_id": 2058, "answer_sql": "SELECT COUNT(*) FROM Agencies;"}, {"question_id": 2059, "answer_sql": "SELECT `agency_id`, `agency_details` FROM `Agencies`;"}, {"question_id": 2060, "answer_sql": "SELECT `agency_id`, `agency_details` FROM `Agencies`;"}, {"question_id": 2061, "answer_sql": "SELECT COUNT(*) FROM Clients;"}, {"question_id": 2062, "answer_sql": "SELECT COUNT(*) FROM Clients;"}, {"question_id": 2063, "answer_sql": "SELECT `Clients`.`client_id`, `Clients`.`client_details` FROM `Clients` JOIN `Agencies` ON `Clients`.`agency_id` = `Agencies`.`agency_id` ```"}, {"question_id": 2064, "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients"}, {"question_id": 2065, "answer_sql": "SELECT A.agency_id, COUNT(C.client_id) as client_count FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id;"}, {"question_id": 2066, "answer_sql": "SELECT `Agencies`.`agency_id`, COUNT(`Clients`.`client_id`) as `Number_of_Clients` FROM `Agencies` JOIN `Staff` ON `Agencies`.`agency_id` = `Staff`.`agency_id` JOIN `Staff_in_Meetings` ON `Staff`.`staff_id` = `Staff_in_Meetings`.`staff_id` JOIN `Clients` ON `Staff`.`agency_id` = `Clients`.`agency_id` GROUP BY `Agencies`.`agency_id`"}, {"question_id": 2067, "answer_sql": "SELECT a.agency_id, a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id GROUP BY a.agency_id, a.agency_details ORDER BY COUNT(c.client_id) DESC LIMIT 1;"}, {"question_id": 2068, "answer_sql": "SELECT `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM `Agencies` JOIN `Clients` ON `Agencies`.`agency_id` = `Clients`.`agency_id` GROUP BY `Agencies`.`agency_id` ORDER BY COUNT(`Clients`.`client_id`) DESC LIMIT 1;"}, {"question_id": 2069, "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id, A.agency_details HAVING COUNT(C.client_id) >= 2;"}, {"question_id": 2070, "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id GROUP BY A.agency_id, A.agency_details HAVING COUNT(C.client_id) >= 2;"}, {"question_id": 2071, "answer_sql": "SELECT `Agencies`.`agency_details` FROM `Clients` JOIN `Agencies` ON `Clients`.`agency_id` = `Agencies`.`agency_id` WHERE `Clients`.`client_details` = 'Mac';"}, {"question_id": 2072, "answer_sql": "SELECT `agency_details` FROM `Clients` WHERE `client_details` = 'Mac';"}, {"question_id": 2073, "answer_sql": "SELECT Clients.client_id, Clients.client_details, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"}, {"question_id": 2074, "answer_sql": "SELECT Clients.client_id, Clients.client_details, Agencies.agency_id, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id;"}, {"question_id": 2075, "answer_sql": "SELECT `sic_code`, COUNT(`client_id`) as `Number of Clients` FROM `Clients` GROUP BY `sic_code`;"}, {"question_id": 2076, "answer_sql": "SELECT `sic_code`, COUNT(`client_id`) as `Number of Clients` FROM `Clients` GROUP BY `sic_code`;"}, {"question_id": 2077, "answer_sql": "SELECT Clients.client_id, Clients.client_details, Clients.sic_code FROM Clients JOIN Staff ON Clients.agency_id = Staff.agency_id JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id WHERE Clients.sic_code = 'Bad'"}, {"question_id": 2078, "answer_sql": "SELECT `client_details`, `sic_code` FROM `Clients` WHERE `sic_code` = 'Bad';"}, {"question_id": 2079, "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Clients C ON A.agency_id = C.agency_id"}, {"question_id": 2080, "answer_sql": "SELECT `agency_id`, `agency_details` FROM `Agencies` WHERE `Agencies`.`agency_id` IN ( SELECT `agency_id` FROM `Clients` );"}, {"question_id": 2081, "answer_sql": "SELECT DISTINCT a.agency_id FROM Agencies a LEFT JOIN Clients c ON a.agency_id = c.agency_id WHERE c.client_id IS NULL;"}, {"question_id": 2082, "answer_sql": "SELECT `agency_id` FROM `Agencies` WHERE `agency_id` NOT IN (SELECT `agency_id` FROM `Clients`);"}, {"question_id": 2083, "answer_sql": "SELECT COUNT(*) FROM Invoices;"}, {"question_id": 2084, "answer_sql": "SELECT COUNT(*) FROM Invoices;"}, {"question_id": 2085, "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id"}, {"question_id": 2086, "answer_sql": "SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices`;"}, {"question_id": 2087, "answer_sql": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) as Number_of_Invoices FROM Clients LEFT JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.client_id LEFT JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id LEFT JOIN Invoices ON Meetings.meeting_id = Invoices.client_id GROUP BY Clients.client_id;"}, {"question_id": 2088, "answer_sql": "SELECT COUNT(*) as total_invoices, client_id FROM Invoices GROUP BY client_id;"}, {"question_id": 2089, "answer_sql": "SELECT Clients.client_id, Clients.client_details, COUNT(Invoices.invoice_id) as Number_of_Invoices FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.client_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Invoices ON Meetings.meeting_id = Invoices.meeting_id GROUP BY Clients.client_id, Clients.client_details ORDER BY Number_of_Invoices DESC;"}, {"question_id": 2090, "answer_sql": "SELECT client_id, client_details FROM Clients WHERE client_id IN ( SELECT client_id FROM Invoices GROUP BY client_id ORDER BY COUNT(*) DESC LIMIT 1 );"}, {"question_id": 2091, "answer_sql": "SELECT Clients.client_id FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.client_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Invoices ON Meetings.meeting_id = Invoices.meeting_id GROUP BY Clients.client_id HAVING COUNT(Invoices.invoice_id) >= 2;"}, {"question_id": 2092, "answer_sql": "SELECT DISTINCT Clients.client_id FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.client_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Invoices ON Meetings.meeting_id = Invoices.meeting_id GROUP BY Clients.client_id HAVING COUNT(Invoices.invoice_id) >= 2;"}, {"question_id": 2093, "answer_sql": "SELECT invoice_status, COUNT(*) as number_of_invoices FROM Invoices GROUP BY invoice_status;"}, {"question_id": 2094, "answer_sql": "SELECT invoice_status, COUNT(*) as total_invoices FROM Invoices GROUP BY invoice_status;"}, {"question_id": 2095, "answer_sql": "SELECT invoice_status, COUNT(*) as number_of_invoices FROM Invoices GROUP BY invoice_status ORDER BY number_of_invoices DESC LIMIT 1;"}, {"question_id": 2096, "answer_sql": "SELECT invoice_status, COUNT(*) as total_invoices FROM Invoices GROUP BY invoice_status ORDER BY total_invoices DESC LIMIT 1;"}, {"question_id": 2097, "answer_sql": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details, Clients.client_id, Clients.client_details, Clients.agency_id, Clients.agency_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id"}, {"question_id": 2098, "answer_sql": "SELECT Invoices.invoice_status, Invoices.invoice_details, Clients.client_id, Clients.client_details, Agencies.agency_id, Agencies.agency_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id JOIN Agencies ON Clients.agency_id = Agencies.agency_id"}, {"question_id": 2099, "answer_sql": "SELECT `meeting_type`, `meeting_details` FROM `Meetings` ```sql"}, {"question_id": 2100, "answer_sql": "SELECT `meeting_type`, `other_details` FROM `Meetings`;"}, {"question_id": 2101, "answer_sql": "SELECT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`;"}, {"question_id": 2102, "answer_sql": "SELECT `meeting_outcome`, `meeting_type`, `purpose_of_meeting` FROM `Meetings` JOIN `Staff_in_Meetings` ON `Meetings`.`meeting_id` = `Staff_in_Meetings`.`meeting_id` JOIN `Staff` ON `Staff_in_Meetings`.`staff_id` = `Staff`.`staff_id`;"}, {"question_id": 2103, "answer_sql": "SELECT `payment_id`, `payment_details` FROM `Invoices` WHERE `invoice_status` = 'Working'"}, {"question_id": 2104, "answer_sql": "SELECT P.payment_id, P.payment_details FROM Invoices I JOIN Payments P ON I.invoice_id = P.invoice_id WHERE I.invoice_status = 'Working'"}, {"question_id": 2105, "answer_sql": "SELECT `Invoices`.`invoice_id`, `Invoices`.`invoice_status` FROM `Invoices` LEFT JOIN `Payments` ON `Invoices`.`invoice_id` = `Payments`.`invoice_id` WHERE `Payments`.`invoice_id` IS NULL;"}, {"question_id": 2106, "answer_sql": "SELECT invoice_id, invoice_status FROM Invoices WHERE invoice_id NOT IN ( SELECT invoice_id FROM Payments )"}, {"question_id": 2107, "answer_sql": "SELECT COUNT(*) FROM Payments;"}, {"question_id": 2108, "answer_sql": "SELECT COUNT(*) FROM Payments;"}, {"question_id": 2109, "answer_sql": "SELECT `Payments`.`payment_id`, `Invoices`.`invoice_id`, `Invoices`.`invoice_details` FROM `Payments` JOIN `Invoices` ON `Payments`.`invoice_id` = `Invoices`.`invoice_id`;"}, {"question_id": 2110, "answer_sql": "SELECT payment_id, invoice_id, payment_details FROM Payments;"}, {"question_id": 2111, "answer_sql": "SELECT invoice_id, invoice_status FROM Payments"}, {"question_id": 2112, "answer_sql": "SELECT DISTINCT invoice_id, invoice_status FROM Payments;"}, {"question_id": 2113, "answer_sql": "SELECT Invoices.invoice_id, COUNT(Payments.payment_id) as payment_count FROM Invoices LEFT JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id;"}, {"question_id": 2114, "answer_sql": "SELECT Invoices.invoice_id, COUNT(Payments.payment_id) as total_payments FROM Invoices LEFT JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id;"}, {"question_id": 2115, "answer_sql": "SELECT invoice_id, invoice_status, invoice_details FROM Invoices WHERE invoice_id IN ( SELECT invoice_id FROM Payments GROUP BY invoice_id ORDER BY COUNT(*) DESC LIMIT 1 )"}, {"question_id": 2116, "answer_sql": "SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices` WHERE `invoice_id` IN ( SELECT `invoice_id` FROM `Payments` GROUP BY `invoice_id` HAVING COUNT(`invoice_id`) = ( SELECT COUNT(`invoice_id`) FROM `Payments` ) );"}, {"question_id": 2117, "answer_sql": "SELECT COUNT(*) FROM Staff;"}, {"question_id": 2118, "answer_sql": "SELECT COUNT(*) FROM Staff;"}, {"question_id": 2119, "answer_sql": "SELECT A.agency_id, COUNT(S.staff_id) as Number_of_Staff FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id GROUP BY A.agency_id;"}, {"question_id": 2120, "answer_sql": "SELECT A.agency_id, COUNT(S.staff_id) as number_of_staff FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id GROUP BY A.agency_id;"}, {"question_id": 2121, "answer_sql": "SELECT `agency_id`, `agency_details` FROM `Staff` JOIN `Agencies` ON `Staff`.`agency_id` = `Agencies`.`agency_id` GROUP BY `agency_id` ORDER BY COUNT(`Staff`.`staff_id`) DESC LIMIT 1;"}, {"question_id": 2122, "answer_sql": "SELECT A.agency_id, A.agency_details FROM Agencies AS A JOIN Staff AS S ON A.agency_id = S.agency_id WHERE S.staff_id = ( SELECT MAX(staff_id) FROM Staff WHERE agency_id = ( SELECT agency_id FROM ( SELECT agency_id, COUNT(*) as staff_count FROM Staff GROUP BY agency_id ) as staff_counts WHERE staff_count = ( SELECT MAX(staff_count) FROM ( SELECT agency_id, COUNT(*) as staff_count FROM Staff GROUP BY agency_id ) as staff_counts ) ) );"}, {"question_id": 2123, "answer_sql": "SELECT `meeting_outcome`, COUNT(*) as `number_of_meetings` FROM `Meetings` GROUP BY `meeting_outcome`;"}, {"question_id": 2124, "answer_sql": "SELECT `meeting_outcome`, COUNT(*) as `count` FROM `Meetings` GROUP BY `meeting_outcome`;"}, {"question_id": 2125, "answer_sql": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) as total_meetings FROM Clients LEFT JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.client_id LEFT JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id GROUP BY Clients.client_id;"}, {"question_id": 2126, "answer_sql": "SELECT COUNT(*) FROM Meetings WHERE client_id = [client_id_hint];"}, {"question_id": 2127, "answer_sql": "SELECT Meetings.meeting_type, COUNT(Meetings.meeting_id) as meeting_count FROM Meetings JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id JOIN Clients ON Staff.agency_id = Clients.agency_id WHERE Clients.client_id = ? GROUP BY Meetings.meeting_type;"}, {"question_id": 2128, "answer_sql": "SELECT `meeting_type`, COUNT(`meeting_id`) as `Number of Meetings` FROM `Meetings` GROUP BY `meeting_type`;"}, {"question_id": 2129, "answer_sql": "SELECT M.meeting_id, M.meeting_outcome, M.meeting_type, C.client_details FROM Meetings M JOIN Clients C ON M.client_id = C.client_id;"}, {"question_id": 2130, "answer_sql": "SELECT Meetings.meeting_id, Meetings.meeting_outcome, Meetings.meeting_type, Clients.client_details FROM Meetings JOIN Clients ON Meetings.client_id = Clients.client_id;"}, {"question_id": 2131, "answer_sql": "SELECT M.meeting_id, COUNT(S.staff_id) as number_of_staff FROM Meetings M JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id JOIN Staff S ON SM.staff_id = S.staff_id GROUP BY M.meeting_id;"}, {"question_id": 2132, "answer_sql": "SELECT m.meeting_id, COUNT(DISTINCT s.staff_id) as number_of_staff FROM Meetings m JOIN Staff_in_Meetings sm ON m.meeting_id = sm.meeting_id JOIN Staff s ON sm.staff_id = s.staff_id GROUP BY m.meeting_id;"}, {"question_id": 2133, "answer_sql": "SELECT Staff.staff_id, COUNT(Staff_in_Meetings.meeting_id) as meeting_count FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id GROUP BY Staff.staff_id ORDER BY meeting_count ASC LIMIT 1;"}, {"question_id": 2134, "answer_sql": "SELECT Staff.staff_id FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id WHERE Staff_in_Meetings.meeting_id IN ( SELECT MIN(meeting_id) FROM Meetings GROUP BY client_id ) AND Staff_in_Meetings.meeting_id IN ( SELECT meeting_id FROM Meetings WHERE start_date_time IS NOT NULL )"}, {"question_id": 2135, "answer_sql": "SELECT COUNT(DISTINCT Staff.staff_id) FROM Meetings INNER JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id INNER JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id;"}, {"question_id": 2136, "answer_sql": "SELECT COUNT(DISTINCT `staff_id`) FROM `Staff_in_Meetings` WHERE `meeting_id` IN (SELECT `meeting_id` FROM `Meetings` WHERE `start_date_time` <= '2022-01-01 00:00:00' AND `end_date_time` >= '2022-01-01 00:00:00');"}, {"question_id": 2137, "answer_sql": "SELECT COUNT(*) FROM Staff WHERE staff_id NOT IN (SELECT staff_id FROM Staff_in_Meetings);"}, {"question_id": 2138, "answer_sql": "SELECT COUNT(*) FROM Staff WHERE staff_id NOT IN (SELECT staff_id FROM Staff_in_Meetings);"}, {"question_id": 2139, "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.client_id GROUP BY Clients.client_id, Clients.client_details;"}, {"question_id": 2140, "answer_sql": "SELECT Clients.client_id, Clients.client_details FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.client_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id WHERE Meetings.meeting_id IN (SELECT meeting_id FROM Meetings WHERE start_date_time > '2022-01-01 00:00:00' OR end_date_time < '2022-12-31 23:59:59') OR Clients.client_id IN (SELECT client_id FROM Invoices WHERE invoice_status = 'Paid');"}, {"question_id": 2141, "answer_sql": "SELECT Staff.staff_id, Staff.staff_details FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id WHERE Meetings.start_date_time IS NOT NULL GROUP BY Staff.staff_id, Staff.staff_details HAVING COUNT(DISTINCT Meetings.meeting_id) >= 1;"}, {"question_id": 2142, "answer_sql": "SELECT Staff.staff_id, Staff.staff_details FROM Staff JOIN Staff_in_Meetings ON Staff.staff_id = Staff_in_Meetings.staff_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id WHERE LOWER(Staff.staff_details) LIKE '%s%' GROUP BY Staff.staff_id, Staff.staff_details HAVING COUNT(DISTINCT Meetings.meeting_id) >= 1;"}, {"question_id": 2143, "answer_sql": "SELECT Clients.client_id, Clients.sic_code, Clients.agency_id FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.meeting_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Invoices ON Clients.client_id = Invoices.client_id WHERE Meetings.start_date_time IS NOT NULL AND Invoices.invoice_status = 'Paid' GROUP BY Clients.client_id, Clients.sic_code, Clients.agency_id;"}, {"question_id": 2144, "answer_sql": "SELECT Clients.client_id, Clients.sic_code, Clients.agency_id FROM Clients JOIN Staff_in_Meetings ON Clients.client_id = Staff_in_Meetings.meeting_id JOIN Meetings ON Staff_in_Meetings.meeting_id = Meetings.meeting_id JOIN Invoices ON Meetings.meeting_id = Invoices.client_id GROUP BY Clients.client_id, Clients.sic_code, Clients.agency_id HAVING COUNT(DISTINCT Meetings.meeting_id) = 1 AND COUNT(DISTINCT Invoices.invoice_id) = 1;"}, {"question_id": 2145, "answer_sql": "SELECT M.start_date_time, M.end_date_time, C.client_details, S.staff_details FROM Meetings M JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id JOIN Staff S ON SM.staff_id = S.staff_id JOIN Clients C ON M.client_id = C.client_id"}, {"question_id": 2146, "answer_sql": "SELECT M.meeting_id, M.start_date_time, M.end_date_time, M.purpose_of_meeting, M.other_details, C.client_id, C.client_details, S.staff_id, S.staff_details FROM Meetings M JOIN Staff_in_Meetings SM ON M.meeting_id = SM.meeting_id JOIN Staff S ON SM.staff_id = S.staff_id JOIN Clients C ON M.client_id = C.client_id;"}]