[
  [
    "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
    "SELECT SUM(frpm.`Free Meal Count (K-12)`) / SUM(frpm.`Enrollment (K-12)`) FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE `Charter School (Y/N)` = 1 AND schools.`County` = 'Alameda'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.",
    "SELECT T1.`sname`, T1.`dname`, T1.`cname`, T1.`Enrollment (Ages 5-17)`, T1.`Free Meal Count (Ages 5-17)`, T1.`Percent (%) Eligible FRPM (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`District Type` = 'County Office of Education (COE)' AND T1.`School Type` = 'Intermediate/Middle Schools (Public)' AND T1.`Educational Option Type` = 'Continuation School' AND T1.`Charter School (Y/N)` = 1 ORDER BY T1.`Percent (%) Eligible FRPM (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the zip code of all the charter schools in Fresno County Office of Education.",
    "SELECT SUM(frpm.`FRPM Count (K-12)`) FROM frpm JOIN ( SELECT `cname`, `GServed` FROM frpm WHERE `Charter School (Y/N)` = 1 ORDER BY `FRPM Count (K-12)` DESC LIMIT 1 ) AS t ON frpm.`CDSCode` = t.`CDSCode` AND frpm.`GServed` = t.`GServed`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?",
    "SELECT T1.`Street`, T1.`StreetAbr`, T1.`City`, T1.`Zip`, T1.`State` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`School Type` = 'K-12 Schools (Public)' AND T1.`FRPM Count (K-12)` > ( SELECT SUM(frpm.`FRPM Count (K-12)`) FROM frpm )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools with an average score in Math under 400 in the SAT test are exclusively virtual?",
    "SELECT T2.`sname` FROM satscores AS T1 INNER JOIN schools AS T2 ON T2.`CDSCode` = T1.`CDSCode` WHERE T1.`cname` IS NOT NULL AND T1.`dname` IS NOT NULL AND T1.`sname` IS NOT NULL AND T1.`AvgScrMath` < 400 AND T2.`Virtual` != 'F'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.",
    "-- Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program. SELECT T1.`sname`, T1.`dname`, T1.`cname` FROM satscores AS T1 JOIN frpm AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T1.`NumTstTakr` > 500 AND (T2.`Charter` = 1 OR T2.`Educational Option Type` = 'Magnet')\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
    "SELECT T1.`School` FROM ( SELECT sname, dname, School FROM satscores WHERE AvgScrMath >= 1500 ) AS T1 ORDER BY ( SELECT COUNT(*) FROM satscores AS T2 WHERE T1.`sname` = T2.`sname` ) DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?",
    "SELECT T2.`sname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`School Type` = 'K-12 Schools (Public)' AND T1.`FRPM Count (K-12)` > ( SELECT MAX(T4.`FRPM Count (K-12)`) FROM frpm AS T4 INNER JOIN satscores AS T5 ON T4.`CDSCode` = T5.`cds` WHERE T4.`School Type` = 'K-12 Schools (Public)' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?",
    "SELECT COUNT(*) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Charter School (Y/N)` = 1 AND T2.`AvgScrMath` > ( SELECT AVG(CAST(T4.`AvgScrMath` AS REAL)) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T3.`Charter School (Y/N)` = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?",
    "SELECT FRPM Count (Ages 5-17) FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode WHERE satscores.rtype = 'S' AND satscores.AvgScrRead = ( SELECT MAX(satscores.AvgScrRead) FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode WHERE satscores.rtype = 'S' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the codes of the schools with a total enrollment of over 500.",
    "SELECT schools.`School` FROM schools INNER JOIN (SELECT `CDSCode`, SUM(`Enrollment (K-12)`) AS TotalEnrollment FROM frpm GROUP BY `CDSCode`) AS T1 ON schools.`CDSCode` = T1.`CDSCode` WHERE T1.TotalEnrollment > 500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?",
    "SELECT T2.`Free Meal Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` > ( SELECT AVG(CAST(T4.`NumGE1500` AS REAL) / T4.`NumTstTakr`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T4.`sname` IS NOT NULL )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the schools with the top 3 SAT excellence rate.",
    "SELECT T2.`Phone` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND T1.`Charter School (Y/N)` = 1 AND CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` > ( SELECT AVG(CAST(T4.`NumGE1500` AS REAL) / T4.`NumTstTakr`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T3.`Charter School (Y/N)` = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.",
    "SELECT sname, NCESSchool, `NCESDist` FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE satscores.sname IS NOT NULL ORDER BY `enroll12` DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which active district has the highest average score in Reading?",
    "SELECT T1.`dname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`StatusType` = 'Active' ORDER BY T2.`NumTstTakr` ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in merged Alameda have number of test takers less than 100?",
    "SELECT SUM(T2.`NumTstTakr`) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Alameda' AND T1.`District` = 'Merged' AND T2.`NumTstTakr` IS NOT NULL AND T2.`NumTstTakr` != 'None'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the charter number of the school that the average score in Writing is 499?",
    "SELECT T1.`CharterNum` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND T2.`AvgScrMath` = 499\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Contra Costa (directly funded) have number of test takers not more than 250?",
    "SELECT AVG(T2.`AvgScrMath`) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Contra Costa' AND T1.`FundingType` = 'Directly funded' AND T2.`NumTstTakr` = ( SELECT MAX(T3.`NumTstTakr`) FROM schools AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T3.`County` = 'Contra Costa' AND T3.`FundingType` = 'Directly funded' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest average score in Math?",
    "SELECT T2.`Phone` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`Phone` IS NOT NULL GROUP BY T2.`cds` ORDER BY AVG(T2.`AvgScrMath`) DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'California'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Los Angeles' AND T1.Enrollment > 500 AND T1.Enrollment < 700\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which school in Contra Costa has the highest number of test takers?",
    "SELECT T1.`sname` FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T2.`County` = 'Contra Costa' ORDER BY `NumTstTakr` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
    "SELECT T1.`CDSCode`, T1.`School Name`, T1.`Street`, T1.`StreetAbr` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > 30 AND T2.`Street` IS NOT NULL AND T2.`Street` != 'None'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?",
    "SELECT T1.`School Name` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Charter School (Y/N)` = 1 AND T2.`NumTstTakr` > 0 AND T2.`NumGE1500` > 0 AND T2.`AvgScrRead` >= 1500 AND T2.`AvgScrMath` >= 1500 AND T2.`AvgScrWrite` >= 1500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?",
    "-- Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools? SELECT T2.`School`, T2.`CharterFundingType` FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T2.`cname` = 'Riverside' AND T1.`AvgScrMath` > ( SELECT AVG(T3.`AvgScrMath`) FROM satscores AS T3 INNER JOIN schools AS T4 ON T3.`cds` = T4.`CDSCode` WHERE T4.`cname` = 'Riverside' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?",
    "SELECT T1.Street, T1.City, T1.State, T1.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.School = 'Monterey High' AND T1.School Type = 'High Schools (Public)' AND T1.Charter School (Y/N) = 0 AND T1.Eligible FRPM (Ages 5-17) > ( SELECT T4.Eligible FRPM (Ages 5-17) FROM frpm AS T4 WHERE T4.School = 'Monterey High' AND T4.School Type = 'High Schools (Public)' AND T4.Charter School (Y/N) = 0 ) AND T1.Eligible FRPM (Ages 5-17) > 0\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.",
    "SELECT T2.`sname`, T2.`dname`, T2.`cname`, T2.`CharterNum` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND T1.`Charter School (Y/N)` = 1 AND CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` > ( SELECT AVG(CAST(T4.`NumGE1500` AS REAL) / T4.`NumTstTakr`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T3.`Charter School (Y/N)` = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "When did the first-through-twelfth-grade school with the largest enrollment open?",
    "SELECT `Enrollment (K-12)` FROM schools JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` JOIN satscores ON schools.`CDSCode` = satscores.`cds` WHERE `LastUpdate` = CURRENT_DATE ORDER BY `Enrollment (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?",
    "SELECT T1.`County` FROM schools AS T1 JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T2.`County Name` = 'Los Angeles' AND T3.`NumGE1500` IS NOT NULL AND T3.`NumGE1500` > 0 GROUP BY T1.`County` ORDER BY SUM(T3.`NumGE1500`) DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?",
    "SELECT T1.`School Name`, T1.`District Name`, T1.`County Name`, T1.`Enrollment (K-12)`, T1.`FRPM Count (K-12)`, T1.`Percent (%) Eligible FRPM (K-12)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` INNER JOIN schools AS T3 ON T1.`CDSCode` = T3.`CDSCode` WHERE T1.`Charter School (Y/N)` = 1 AND T1.`Charter School Number` = '00D6' AND T1.`County Code` = '66' AND T1.`Low Grade` = 'K' AND T1.`High Grade` = '12' AND T1.`Enrollment (K-12)` IS NOT NULL AND T1.`Free Meal Count (K-12)` IS NOT NULL AND T1.`Percent (%) Eligible FRPM (K-12)` IS NOT NULL ORDER BY T1.`FRPM Count (K-12)` DESC, T1.`Enrollment (K-12)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.",
    "SELECT T1.`School Name`, T1.`Website` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Charter School (Y/N)` = 1 AND T1.`Free Meal Count (Ages 5-17)` >= 1900 AND T1.`Free Meal Count (Ages 5-17)` <= 2000\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12?",
    "SELECT T1.`AdmEmail1` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Charter School (Y/N)` = 1 AND T2.`Enrollment (K-12)` = ( SELECT MIN(`Enrollment (K-12)`) FROM frpm WHERE `Charter School (Y/N)` = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name.",
    "SELECT T1.`School` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` >= 1500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?",
    "SELECT T1.`Website` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`cname` = 'Los Angeles' AND T2.`NumTstTakr` BETWEEN 2000 AND 3000\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?",
    "SELECT AVG(T2.NumTstTakr) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.OpenDate >= '1980-01-01' AND T2.OpenDate <= '1980-12-31'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the telephone number for the school with the lowest average score in reading in Fresno Unified?",
    "SELECT T1.`Phone` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`dname` = 'Fresno Unified' AND T2.`School` = 'Fresno Unified' ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which exclusively virtual schools have the top 5 highest average reading scores?",
    "SELECT sname, dname, cname, cds, AVG(AvgScrMath) as AvgReadingScore FROM satscores INNER JOIN schools ON satscores.`cds` = schools.`CDSCode` WHERE rtype = 'S' GROUP BY sname, dname, cname, cds ORDER BY AvgReadingScore DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the type of education offered in the school who scored the highest average in Math?",
    "SELECT T1.`EdOpsName` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND T1.`Charter School (Y/N)` = 1 AND CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` = ( SELECT AVG(CAST(T4.`NumGE1500` AS REAL) / T4.`NumTstTakr`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T3.`Charter School (Y/N)` = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?",
    "SELECT T1.`cname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND T2.`AvgScrMath` = ( SELECT AvgScrMath FROM ( SELECT AvgScrMath FROM satscores WHERE sname IS NOT NULL ORDER BY AvgScrMath ASC LIMIT 1 ) AS T3 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores.",
    "SELECT AVG(T2.`AvgScrWrite`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`CDSCode` = ( SELECT `CDSCode` FROM frpm WHERE `Charter School Number` = '00D2' AND `Charter School (Y/N)` = 1 AND `Charter School (Y/N)` IS NOT NULL )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "SELECT T1.`cname`, T1.`enroll12` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`DOC` = 31 AND T1.`Low Grade` <= '12' AND T1.`High Grade` >= '1' ORDER BY T1.`enroll12` DESC\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?",
    "SELECT AVG(T1.`Count`) FROM ( SELECT COUNT(*) AS `Count` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`DOC` = 52 AND T2.`DOCType` = 'Elementary School District' AND T2.`OpenDate` = '1980-01-01' ) AS T1 LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?",
    "SELECT (SELECT COUNT(*) FROM schools WHERE DOCType = 'Unified School District' AND DOC = '54') / (SELECT COUNT(*) FROM schools WHERE DOCType = 'Elementary School District' AND DOC = '52')\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.",
    "SELECT SchoolName, ClosedDate FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE StatusType = 'Closed'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the postal street address for the school with the 6th highest Math average? Indicate the school's name.",
    "SELECT T2.`sname` FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T1.`rtype` = 'S' AND T1.`AvgScrMath` = ( SELECT MAX(AvgScrMath) FROM satscores WHERE rtype = 'S' ORDER BY AvgScrMath DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.",
    "SELECT T1.`sname` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T1.`AvgScrRead` = ( SELECT MIN(AvgScrRead) FROM satscores INNER JOIN frpm ON satscores.`cds` = frpm.`CDSCode` WHERE frpm.`Charter School (Y/N)` = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.sname IS NOT NULL AND T2.AvgScrMath + T2.AvgScrRead + T2.AvgScrWrite >= 1500 AND T1.City = 'Lakeport'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many test takers are there at the school/s whose mailing city address is in Fresno?",
    "SELECT `cname` FROM satscores JOIN frpm ON satscores.`cds` = frpm.`CDSCode` WHERE `MailCity` = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.",
    "SELECT s.`cname`, s.`sname` FROM schools s JOIN ( SELECT `cname`, MAX(`Eligible FRPM (K-12)`) as max_frpm FROM schools GROUP BY `cname` ) frpm_max ON s.`cname` = frpm_max.`cname` JOIN ( SELECT `cname`, `sname` FROM satscores WHERE `rtype` = 'S' ORDER BY `NumGE1500` DESC LIMIT 1 ) top_sat ON top_sat.`cname` = frpm_max.`cname`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?",
    "SELECT (T1.`Count`) / (T2.`Count`) FROM ( SELECT COUNT(*) AS `Count` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Colusa' AND T1.`County` = T2.`cname` ) AS T1 INNER JOIN ( SELECT COUNT(*) AS `Count` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Humboldt' AND T1.`County` = T2.`cname` ) AS T2\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of all the schools with a mailing state address in California, how many are active in San Joaquin?",
    "SELECT COUNT(*) FROM schools WHERE County = 'San Joaquin' AND MailState = 'CA'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school that had the 333rd highest average writing score?",
    "SELECT T2.`Phone`, T2.`Ext` FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`CDSCode` IN ( SELECT T3.`CDSCode` FROM satscores AS T3 ORDER BY `AvgScrWri` DESC LIMIT 1 OFFSET 327 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
    "SELECT satscores.sname, schools.Phone, schools.Ext FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores ON T2.CDSCode = satscores.cds WHERE T2.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?",
    "SELECT `AdmEmail3` FROM schools WHERE `AdmFName1` = 'Mike' AND `AdmLName1` = 'Larson' OR `AdmFName1` = 'Dante' AND `AdmLName1` = 'Alvarez'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
    "SELECT AVG(T3.`AvgScrMath`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T1.`County` = 'Hickman' AND T2.`DOC` = 52 AND T2.`DOCType` = 'Unified School District' AND T1.`Charter` = 1 ORDER BY T3.`NumTstTakr` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
    "SELECT T2.`sname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Charter School (Y/N)` = 0 AND T2.`rtype` = 'S' AND T2.`sname` IS NOT NULL AND T1.`County` = 'Los Angeles' AND T1.`County Code` = '19' AND T1.`Low Grade` = '1' AND T1.`High Grade` = '12' AND T1.`Enrollment (K-12)` > 0 AND T1.`Free Meal Count (K-12)` > 0 AND T1.`Percent (%) Eligible FRPM (K-12)` < 0.18\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs",
    "SELECT T1.`AdmFName1`, T1.`AdmLName1`, T1.`City` FROM schools AS T1 WHERE T1.`Charter` = 1 AND T1.`CharterNum` = '00D2'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN ( SELECT COUNT(*) FROM schools WHERE `MailCity` = 'Hickman' ) AS T2 INNER JOIN ( SELECT COUNT(*) FROM schools WHERE `MailCity` = 'Hickman' ) AS T3 ON 1 = 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?",
    "SELECT ( SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Charter School (Y/N)` = 1 AND T2.`Charter Funding Type` = 'Locally funded' ) / ( SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Charter School (Y/N)` = 1 ) * 100\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total amount of Community College District closure in 1989 in the city of San Francisco?",
    "SELECT SUM(CASE WHEN `Charter` = 1 AND `GSoffered` = 'K-12' AND `Virtual` = 'N' THEN 1 ELSE 0 END) AS total_closed_charter_schools FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE `cname` = 'San Francisco'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
    "SELECT T1.`sname` FROM schools AS T1 INNER JOIN ( SELECT `sname`, `cname`, `County`, `County Code` FROM schools WHERE `StatusType` = 'Closed' AND `OpenDate` BETWEEN '1980-01-01' AND '1980-12-31' AND `SOC` = 11 ) AS T2 ON T1.`CDSCode` = T2.`CDSCode` ORDER BY T2.`FRPM Count (K-12)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
    "SELECT schools.`NCESSchool` FROM schools WHERE schools.`SOC` = 31\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many active and closed District Community Day Schools are there in the county of Alpine?",
    "SELECT AVG(enroll12) FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE satscores.rtype = 'S' AND (schools.SOCType = 'District Community Day Schools' OR schools.EdOpsName = 'District Community Day Schools' OR schools.EdOpsCode = 'COMMDAY' OR schools.SOC = '6' OR schools.DOC = '54' OR schools.StatusType IN ('Active', 'Closed') OR schools.DOCType = 'Regional Occupation Center/Program (ROC/P)' OR schools.EILCode = 'ELEM' OR schools.EILName = 'Elementary' OR schools.GSoffered = 'K-12' OR schools.GServed = 'K-12' OR schools.Virtual = 'N' OR schools.Magnet = 0 OR schools.LastUpdate IS NOT NULL)\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the district code for the School that does not offer a magnet program in the city of Fresno?",
    "SELECT DISTINCT `District Code` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE `Magnet` = 0 AND `City` = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year?",
    "SELECT SUM(T1.`Enrollment (K-12)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`rtype` = 'S' AND T2.`sname` = 'State Special School' AND T1.`Academic Year` = '2014-2015' AND T1.`County Code` = '08' AND T1.`District Code` = '01' AND T1.`School Code` = '0000000' AND T1.`Low Grade` BETWEEN '5' AND '17'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?",
    "SELECT COUNT(*) FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode JOIN satscores ON schools.CDSCode = satscores.cds WHERE `StreetAbr` = 'PO Box 1040' AND `dname` = 'Youth Authority School'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360?",
    "SELECT MIN(Low Grade) FROM frpm INNER JOIN satscores ON frpm.CDSCode = satscores.cds WHERE frpm.NCESSchool = 613360 AND frpm.EdOpsCode = 'SPECON'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.",
    "SELECT `EILName` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE `County Code` = 37 ORDER BY `EILName` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?",
    "-- What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced? SELECT T1.`City` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T1.`EILCode` = 'HS' AND T1.`SOCType` = 'High Schools (Public)' AND T1.`EdOpsName` = 'Lunch Provision 2' AND T1.`County` = 'Merced' AND T1.`LowGrade` = '9' AND T1.`HighGrade` = '12' AND T2.`NSLP Provision Status` = 'Lunch Provision 2' AND T3.`AvgScrRead` >= 80 AND T3.`AvgScrMath` >= 80 AND T3.`AvgScrWrite` >= 80\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?",
    "SELECT CAST(T1.`Free Meal Count (Ages 5-17)` AS REAL) / T1.`Enrollment (Ages 5-17)` * 100 FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND T1.`CDSCode` = ( SELECT `CDSCode` FROM satscores WHERE `sname` IS NOT NULL ORDER BY `NumGE1500` DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the most common type of grade span served in the city of Adelanto?",
    "SELECT `School Type` FROM schools JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` JOIN satscores ON schools.`CDSCode` = satscores.`cds` WHERE `cname` = 'Los Angeles' GROUP BY `School Type` ORDER BY COUNT(`School Type`) DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.",
    "SELECT SUM(Virtual = 'F') FROM schools WHERE `cname` = ( SELECT `cname` FROM schools WHERE Virtual = 'F' ORDER BY `LastUpdate` DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
    "SELECT T1.`SOCType`, T1.`School`, T1.`Latitude` FROM schools AS T1 WHERE Latitude = ( SELECT MAX(Latitude) FROM schools )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
    "SELECT schools.School FROM schools WHERE state = 'CA' AND CAST(schools.Latitude AS REAL) = ( SELECT MIN(CAST(schools.Latitude AS REAL)) AS LowestLatitude FROM schools WHERE state = 'CA' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the grade span offered in the school with the highest longitude?",
    "SELECT AVG(T1.`AvgScrMath`) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.`cds` = T2.`CDSCode` ORDER BY T2.`Longitude` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
    "SELECT `CDSCode` FROM schools WHERE `Magnet` = 1 AND `GSoffered` = 'K-8'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the two most common first names among the school administrators? Indicate the district to which they administer.",
    "SELECT AVG(AdmFName1) FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.CDSCode IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.",
    "SELECT T1.`Percent (%) Eligible Free (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' AND T2.`County` = 'Los Angeles' AND T2.`District` = 'Los Angeles Unified' AND T1.`Academic Year` = '2014-2015' AND T1.`County Code` = '19' AND T1.`District Code` = '0622710'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.",
    "SELECT T1.`County Name`, T1.`District Code`, T1.`School Code`, T2.`sname`, T2.`dname`, T2.`cname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`rtype` = 'S' AND T1.`County Code` = '40' AND T1.`District Code` = '40' AND T1.`County Name` = 'Los Angeles'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools?",
    "SELECT schools.`SOCType` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE frpm.`District Code` = '36' AND frpm.`District Type` = 'Unified School District' AND frpm.`OpenDate` BETWEEN '2009-01-01' AND '2010-12-31' AND frpm.`SOC` = '62' AND schools.`SOCType` = 'Intermediate/Middle Schools (Public)'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.",
    "SELECT T1.`AdmEmail1` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IS NOT NULL AND T2.`NumTstTakr` >= 1500 ORDER BY T2.`NumTstTakr` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
    "SELECT COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN disp AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN client AS T4 ON T3.`client_id` = T4.`client_id` INNER JOIN district AS T5 ON T4.`district_id` = T5.`district_id` WHERE T5.`A3` = 'East Bohemia' AND T3.`type` = 'OWNER' AND T1.`date` > '1995-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts who have region in Prague are eligible for loans?",
    "SELECT COUNT(T1.`order_id`) FROM order AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`district_id` = T3.`district_id` INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` INNER JOIN district AS T5 ON T4.`A3` = T5.`A3` WHERE T5.`A2` = 'Prague' AND T5.`A3` IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
    "SELECT T1.`A12` AS `1995`, T1.`A13` AS `1996` FROM district AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`A12` IS NOT NULL AND T1.`A13` IS NOT NULL ORDER BY (T1.`A13` - T1.`A12`) / T1.`A12` * 100 DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
    "SELECT AVG(`A11`) FROM district WHERE `A10` = '1' AND `A11` IS NOT NULL ORDER BY `A11` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who are living in North Bohemia have average salary greater than 8000?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` = ( SELECT MIN(`A11`) FROM district ) AND T1.`gender` = 'M' AND T1.`birth_date` = ( SELECT MIN(`birth_date`) FROM client WHERE `gender` = 'M' )\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
    "SELECT ( SELECT MAX(`A11`) FROM district ) - ( SELECT MIN(`A11`) FROM district )\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of clients who are youngest and have highest average salary?",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "How many customers who choose statement of weekly issuance are Owner?",
    "SELECT COUNT(T2.`client_id`) FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN account AS T3 ON T2.`account_id` = T3.`account_id` WHERE T3.`frequency` = 'POPLATEK TYDNE' AND T2.`type` = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "List out the clients who choose statement of issuance after transaction are Disponent?",
    "SELECT T2.`issued` FROM district AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`frequency` LIKE '%POPLATEK PO OBRATU%' AND T2.`issued` IS NOT NULL AND T2.`type` = 'DISPONENT' AND T2.`issued` > T1.`date` AND T2.`issued` > T3.`issued` AND T2.`issued` > T4.`issued` AND T2.`issued` > T5.`issued` AND T2.`issued` > T6.`issued` AND T2.`issued` > T7.`issued` AND T2.`issued` > T8.`issued` AND T2.`issued` > T9.`issued` AND T2.`issued` > T10.`issued` AND T2.`issued` > T11.`issued` AND T2.`issued` > T12.`issued` AND T2.`issued` > T13.`issued` AND T2.`issued` > T14.`issued` AND T2.`issued` > T15.`issued` AND T2.`issued` > T16.`issued` ORDER BY T2.`issued` DESC\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
    "SELECT T1.`bank_to` FROM order AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN loan AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN account AS T4 ON T3.`account_id` = T4.`account_id` INNER JOIN district AS T5 ON T2.`district_id` = T5.`district_id` WHERE T4.`account_id` = ( SELECT T6.`account_id` FROM loan AS T6 INNER JOIN account AS T7 ON T6.`account_id` = T7.`account_id` WHERE T6.`status` = 'C' AND T7.`date` >= '1997-01-01' AND T7.`date` <= '1997-12-31' GROUP BY T7.`account_id` ORDER BY SUM(T6.`amount`) ASC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
    "SELECT T1.`account_id` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`duration` > 12 AND T2.`date` = '1993-02-08' ORDER BY T1.`amount` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T1.`birth_date` < '1950-01-01' AND T2.`A2` = 'Slokolov'\t----- bird -----\tfinancial"
  ],
  [
    "List out the accounts who have the earliest trading date in 1995 ?",
    "SELECT * FROM account WHERE `date` = ( SELECT MIN(`date`) FROM account WHERE `date` >= '1995-01-01' )\t----- bird -----\tfinancial"
  ],
  [
    "State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "Which client issued his/her card in 1994/3/3, give his/her client id.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
    "SELECT T1.`date` FROM account AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`amount` = 840\t----- bird -----\tfinancial"
  ],
  [
    "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
    "SELECT T2.`district_id` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` = '1994-08-25'\t----- bird -----\tfinancial"
  ],
  [
    "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
    "SELECT client.`district_id` FROM trans AS trans INNER JOIN card AS card ON trans.`account_id` = card.`card_id` INNER JOIN disp AS disp ON card.`disp_id` = disp.`disp_id` INNER JOIN client AS client ON disp.`client_id` = client.`client_id` WHERE card.`issued` = '1996-10-21'\t----- bird -----\tfinancial"
  ],
  [
    "What is the gender of the oldest client who opened his/her account in the highest average salary branch?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` DESC, T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
    "SELECT T1.`amount` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` ORDER BY T1.`amount` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many clients opened their accounts in Jesenik branch were women?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Znojmo' AND T1.`gender` = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?",
    "SELECT T1.`order_id` FROM order AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`client_id` = T3.`client_id` INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T1.`date` = '1998-09-02' AND T3.`gender` = 'M' AND T4.`A2` = 'Znojmo'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts were opened in Litomerice in 1996?",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` = ( SELECT MIN(`A11`) FROM district WHERE `A2` = 'Litomerice' ) AND T1.`birth_date` = ( SELECT MIN(`birth_date`) FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Litomerice' ) )\t----- bird -----\tfinancial"
  ],
  [
    "For the female client who was born in 1976/1/29, which district did she opened her account?",
    "SELECT T2.`A2` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T1.`birth_date` = '1976-01-29'\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?",
    "SELECT `amount` FROM loan WHERE `amount` = 98832 AND `date` = '1996-01-03'\t----- bird -----\tfinancial"
  ],
  [
    "For the first client who opened his/her account in Prague, what is his/her account ID?",
    "SELECT account.account_id FROM client JOIN district ON client.district_id = district.district_id JOIN account ON account.district_id = district.district_id WHERE district.A2 = 'Prague' ORDER BY account.account_id ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
    "SELECT T1.A4, T2.gender, T3.client_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.client_id = T3.client_id WHERE T2.A3 = 'south Bohemia' AND T2.district_id = ( SELECT district_id FROM district ORDER BY A4 DESC LIMIT 1 ) AND T1.gender = 'M' GROUP BY T3.client_id ORDER BY COUNT(T3.client_id) DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "What is the percentage of loan amount that has been fully paid with no issue.",
    "SELECT (SUM(loan.`amount`) / (SELECT SUM(loan.`amount`) FROM loan WHERE loan.`status` = 'A' AND loan.`date` >= CURDATE() - INTERVAL 1 YEAR AND loan.`disp_id` IN (SELECT card.`disp_id` FROM card WHERE card.`type` = 'classic'))) * 100\t----- bird -----\tfinancial"
  ],
  [
    "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` = ( SELECT MIN(T3.`A11`) FROM district AS T3 )\t----- bird -----\tfinancial"
  ],
  [
    "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
    "SELECT `frequency` FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' ) UNION SELECT `frequency` FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "List account ID and account opening date for accounts from 'Prachatice'.",
    "SELECT account.`account_id`, account.`date` FROM account INNER JOIN district ON account.`district_id` = district.`district_id` WHERE district.`A2` = 'Prachatice'\t----- bird -----\tfinancial"
  ],
  [
    "State the district and region for loan ID '4990'.",
    "SELECT T1.`bank` FROM trans AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`loan_id` = '4990'\t----- bird -----\tfinancial"
  ],
  [
    "Provide the account ID, district and region for loan amount greater than USD300,000.",
    "SELECT `gender` FROM client ORDER BY `birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "List the loan ID, district and average salary for loan with duration of 60 months.",
    "SELECT T1.`gender` FROM loan AS T1 INNER JOIN client AS T2 ON T1.`client_id` = T2.`client_id` WHERE T1.`duration` = 60\t----- bird -----\tfinancial"
  ],
  [
    "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
    "SELECT T2.`district_id`, (T3.`A13` - T3.`A12`) / T3.`A12` * 100 AS `Unemployment_Increment` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN district AS T3 ON T2.`district_id` = T3.`district_id` WHERE T1.`status` = 'D' AND T3.`A12` IS NOT NULL AND T3.`A13` IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.",
    "SELECT ( SELECT COUNT(*) FROM account INNER JOIN card ON account.account_id = card.account_id INNER JOIN client ON account.district_id = client.district_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN district ON district.district_id = client.district_id WHERE district.A2 = 'Decin' AND account.date = '1993-02-08' AND card.type = 'classic' AND client.gender = 'M' ) / ( SELECT COUNT(*) FROM account INNER JOIN card ON account.account_id = card.account_id INNER JOIN client ON account.district_id = client.district_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN district ON district.district_id = client.district_id WHERE district.A2 = 'Decin' AND account.date = '1993-02-08' AND card.type = 'classic' AND client.gender = 'M' ) * 100\t----- bird -----\tfinancial"
  ],
  [
    "List the account IDs with monthly issuance of statements.",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders.",
    "SELECT T1.`district_id`, AVG(T1.`A5`) FROM district AS T1 INNER JOIN disp AS T2 ON T1.`district_id` = T2.`district_id` GROUP BY T1.`district_id`\t----- bird -----\tfinancial"
  ],
  [
    "Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996?",
    "SELECT T1.`district_id`, T1.`A11`, T2.`birth_date`, T2.`gender` FROM district AS T1 INNER JOIN client AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T1.`A11` ASC, T2.`birth_date` DESC LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "How many of the account holders in South Bohemia still do not own credit cards?",
    "SELECT `gender` FROM client INNER JOIN district ON client.`district_id` = district.`district_id` ORDER BY `A11` ASC, `birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Which district has highest active loan?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the average loan amount by male borrowers?",
    "-- What is the average loan amount by male borrowers? SELECT AVG(loan.amount) AS average_loan_amount FROM loan AS loan INNER JOIN client AS client ON loan.account_id = client.account_id WHERE client.gender = 'M' AND loan.amount IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "In 1996, which districts have the highest unemployment rate? List their branch location and district name.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` = ( SELECT MAX(`A11`) FROM district )\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?",
    "SELECT `A12` FROM district ORDER BY `A16` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?",
    "SELECT `payments` FROM loan JOIN ( SELECT `account_id` FROM loan WHERE `status` = 'C' ORDER BY `frequency` DESC, `issued` DESC, `amount` DESC LIMIT 1 ) AS temp ON loan.`account_id` = temp.`account_id`\t----- bird -----\tfinancial"
  ],
  [
    "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?",
    "SELECT T1.`account_id`, COUNT(*) FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` > '1995-01-01' AND T1.`date` < '1997-12-31' AND T1.`amount` >= 250000 AND T2.`frequency` = 'POPLATEK MESICNE' GROUP BY T1.`account_id`\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have running contracts in Branch location 1?",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there?",
    "SELECT COUNT(*) FROM client INNER JOIN district ON client.`district_id` = district.`district_id` WHERE district.`A15` = ( SELECT `A15` FROM district ORDER BY `A15` DESC LIMIT 1 ) AND client.`gender` = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "How many high-level credit cards have \"disponent\" type of disposition?",
    "-- How many high-level credit cards have \"disponent\" type of disposition? SELECT COUNT(*) FROM card JOIN disp ON card.disp_id = disp.disp_id WHERE disp.type = 'disponent' AND card.type = 'high-level'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts are there in the district of \"Pisek\"?",
    "SELECT COUNT(account.account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN client ON account.client_id = client.client_id INNER JOIN district ON client.district_id = district.district_id WHERE district.A2 = 'Pisek' AND loan.status = 'C'\t----- bird -----\tfinancial"
  ],
  [
    "Which districts have transactions greater than USS$10,000 in 1997?",
    "SELECT T1.`A2` FROM district AS T1 INNER JOIN trans AS T2 ON T1.`district_id` = T2.`account_id` WHERE T2.`date` = '1997-01-01' AND T2.`amount` > 10000 AND T1.`district_id` != ( SELECT `district_id` FROM district ORDER BY `A11` ASC LIMIT 1 ) AND T1.`district_id` != ( SELECT `district_id` FROM district WHERE `A5` = '0' ORDER BY `A11` ASC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "Which accounts placed orders for household payment in Pisek?",
    "SELECT T1.`account_id` FROM order AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN client AS T3 ON T2.`district_id` = T3.`district_id` INNER JOIN card AS T4 ON T3.`client_id` = T4.`client_id` INNER JOIN disp AS T5 ON T4.`card_id` = T5.`card_id` INNER JOIN account AS T6 ON T5.`account_id` = T6.`account_id` INNER JOIN loan AS T7 ON T6.`account_id` = T7.`account_id` WHERE T2.`A2` = 'Pisek' AND T1.`k_symbol` = 'SIPO' AND T7.`status` = 'C'\t----- bird -----\tfinancial"
  ],
  [
    "What are the accounts that have both gold and junior credit cards?",
    "SELECT AVG(`amount`) FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`client_id` = T3.`client_id` INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T4.`district_id` = ( SELECT T5.`district_id` FROM district AS T5 WHERE T5.`A11` ASC LIMIT 1 OFFSET 0 )\t----- bird -----\tfinancial"
  ],
  [
    "How much is the average amount in credit card made by account holders in a month, in year 2021?",
    "SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN card AS T2 ON T1.card_id = T2.card_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.date = '2021-01-01' AND T1.operation = 'VYBER KARTOU' AND T2.type = 'classic' AND T3.type = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` < ( SELECT AVG(`A11`) FROM district ) ORDER BY T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Who are the female account holders who own credit cards and also have loans?",
    "-- Who are the female account holders who own credit cards and also have loans? SELECT T1.`client_id`, T1.`gender`, T1.`birth_date` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN card AS T3 ON T1.`district_id` = T3.`district_id` INNER JOIN disp AS T4 ON T1.`district_id` = T4.`district_id` INNER JOIN loan AS T5 ON T1.`district_id` = T5.`district_id` WHERE T1.`gender` = 'F' AND T3.`type` IN ('classic', 'junior', 'gold') AND T5.`status` IN ('C', 'A') ORDER BY T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many female clients' accounts are in the region of South Bohemia?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T2.`A3` = 'south Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "Please list the accounts whose district is Tabor that are eligible for loans.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
    "SELECT T2.`A11` FROM district AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`account_id` IS NOT NULL AND T2.`type` = 'OWNER' AND T2.`A11` > 8000 AND T2.`A11` <= 9000\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in North Bohemia has made a transaction with the partner's bank being AB?",
    "SELECT COUNT(distinct trans.`account_id`) FROM trans INNER JOIN account ON trans.`account_id` = account.`account_id` INNER JOIN client ON account.`client_id` = client.`client_id` INNER JOIN district ON client.`district_id` = district.`district_id` INNER JOIN card ON client.`client_id` = card.`client_id` WHERE `bank` = 'AB' AND `k_symbol` = 'POJISTNE'\t----- bird -----\tfinancial"
  ],
  [
    "Please list the name of the districts with accounts that made withdrawal transactions.",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Znojmo' AND T1.`birth_date` = ( SELECT MIN(T3.`birth_date`) FROM client AS T3 INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T4.`A2` = 'Znojmo' )\t----- bird -----\tfinancial"
  ],
  [
    "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?",
    "SELECT AVG(`A15`) FROM district WHERE `A5` = 0 AND `A6` = 0 AND `A7` = 0 AND `A8` = 0 AND `A9` IS NULL AND `A10` IS NOT NULL AND `A15` IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "How many 'classic' cards are eligible for loan?",
    "SELECT COUNT(*) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE account.district_id = (SELECT district_id FROM district WHERE A2 = 'Znojmo') AND loan.status = 'C' AND loan.date > '1998-07-12'\t----- bird -----\tfinancial"
  ],
  [
    "How many male clients in 'Hl.m. Praha' district?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many percent of 'Gold' cards were issued prior to 1998?",
    "SELECT `gender` FROM client INNER JOIN district ON client.`district_id` = district.`district_id` ORDER BY `A11` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Who is the owner of the account with the largest loan amount?",
    "SELECT T1.client_id FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id WHERE T2.account_id IN ( SELECT loan.account_id FROM loan JOIN ( SELECT account_id, MAX(amount) as max_amount FROM loan GROUP BY account_id ) AS T3 ON T3.account_id = loan.account_id AND T3.max_amount = loan.amount )\t----- bird -----\tfinancial"
  ],
  [
    "What is the number of committed crimes in 1995 in the district of the account with the id 532?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`account_id` = 532\t----- bird -----\tfinancial"
  ],
  [
    "What is the district Id of the account that placed the order with the id 33333?",
    "SELECT T1.`account_id` FROM order AS T1 INNER JOIN client AS T2 ON T1.`client_id` = T2.`client_id` WHERE T2.`client_id` = 33333\t----- bird -----\tfinancial"
  ],
  [
    "List all the withdrawals in cash transactions that the client with the id 3356 makes.",
    "SELECT T1.`trans_id`, T1.`amount`, T1.`balance`, T1.`date`, T1.`k_symbol`, T1.`bank`, T1.`account` FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`client_id` = T3.`client_id` WHERE T2.`account_id` = 3356 AND T3.`client_id` = 3356 AND T1.`operation` = 'VYBER' AND T1.`k_symbol` = 'SIPO'\t----- bird -----\tfinancial"
  ],
  [
    "Among the weekly issuance accounts, how many have a loan of under 200000?",
    "SELECT AVG(T3.amount) FROM client AS T1 JOIN account AS T2 ON T1.client_id = T2.client_id JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T3.amount < 200000 AND T3.status = 'C' GROUP BY T3.amount ORDER BY T3.amount DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What type of credit card does the client with the id 13539 own?",
    "SELECT T1.`bank_to` FROM order AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`client_id` = 13539\t----- bird -----\tfinancial"
  ],
  [
    "What is the region of the client with the id 3541 from?",
    "SELECT T2.`A3` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`client_id` = 3541\t----- bird -----\tfinancial"
  ],
  [
    "Which district has the most accounts with loan contracts finished with no problems?",
    "SELECT district.district_id, district.A4 FROM account JOIN loan ON account.account_id = loan.account_id JOIN client ON account.account_id = client.account_id JOIN district ON account.district_id = district.district_id JOIN disp ON client.client_id = disp.client_id WHERE loan.status = 'A' AND loan.date IS NOT NULL AND client.birth_date IS NOT NULL AND client.district_id = district.district_id GROUP BY district.district_id ORDER BY COUNT(DISTINCT loan.account_id) DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Who placed the order with the id 32423?",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN order AS T2 ON T1.`client_id` = T2.`client_id` WHERE T2.`order_id` = 32423\t----- bird -----\tfinancial"
  ],
  [
    "Please list all the transactions made by accounts from district 5.",
    "SELECT AVG(`amount`) FROM trans INNER JOIN account ON trans.`account_id` = account.`account_id` INNER JOIN client ON account.`client_id` = client.`client_id` INNER JOIN district ON client.`district_id` = district.`district_id` WHERE district.`district_id` = 5 AND trans.`type` = 'PRIJEM'\t----- bird -----\tfinancial"
  ],
  [
    "How many of the accounts are from Jesenik district?",
    "SELECT `A10` FROM district ORDER BY `A11` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "List all the clients' IDs whose junior credit cards were issued after 1996.",
    "SELECT T1.`account_id` FROM order AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`client_id` = T3.`client_id` INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T2.`issued` > '1996-01-01' AND T4.`A2` NOT LIKE '%Znojmo%' AND T4.`A2` NOT LIKE '%Zlin%' AND T4.`A2` NOT LIKE '%Zdar nad Sazavou%' AND T4.`A2` NOT LIKE '%Vyskov%' AND T4.`A2` NOT LIKE '%Vsetin%' AND T4.`A2` NOT LIKE '%Usti nad Orlici%'\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "How many credit card withdrawals were recorded after 1995?",
    "SELECT AVG(`balance`) FROM trans WHERE `operation` = 'VYBER KARTOU' AND `balance` > 1000\t----- bird -----\tfinancial"
  ],
  [
    "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
    "SELECT T1.`A16` - T2.`A16` FROM district AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`A3` = 'east Bohemia' AND T2.`A3` = 'north Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "How many owner and disponent dispositions are there from account number 1 to account number 10?",
    "SELECT AVG(`A11`) FROM district WHERE `district_id` IN ( SELECT `district_id` FROM district ORDER BY `A11` ASC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
    "SELECT T1.`k_symbol` FROM order AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`client_id` = T3.`client_id` INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T2.`account_id` = 3539\t----- bird -----\tfinancial"
  ],
  [
    "What year was account owner number 130 born?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have an owner disposition and request for a statement to be generated upon a transaction?",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the amount of debt that client number 992 has, and how is this client doing with payments?",
    "SELECT account.`amount`, account.`frequency` FROM `account` JOIN `client` ON account.`client_id` = client.`client_id` WHERE client.`client_id` = 992\t----- bird -----\tfinancial"
  ],
  [
    "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?",
    "SELECT SUM(trans.`amount`), T1.`gender` FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`client_id` = T3.`client_id` WHERE T1.`trans_id` = 851 AND T2.`client_id` = 4 AND T3.`gender` IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "Which kind of credit card does client number 9 possess?",
    "SELECT T1.`amount` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`client_id` = 9\t----- bird -----\tfinancial"
  ],
  [
    "How much, in total, did client number 617 pay for all of the transactions in 1998?",
    "SELECT SUM(trans.`amount`) FROM trans INNER JOIN account ON trans.`account_id` = account.`account_id` INNER JOIN client ON account.`client_id` = client.`client_id` INNER JOIN district ON client.`district_id` = district.`district_id` WHERE client.`client_id` = 617 AND EXTRACT(YEAR FROM `date`) = 1998\t----- bird -----\tfinancial"
  ],
  [
    "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.",
    "SELECT T1.`client_id`, T1.`gender`, T1.`birth_date` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN disp AS T3 ON T1.`client_id` = T3.`client_id` INNER JOIN account AS T4 ON T3.`account_id` = T4.`account_id` WHERE T2.`A3` = 'east Bohemia' AND T1.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND T4.`account_id` IN ( SELECT `account_id` FROM card WHERE `type` NOT IN ('classic', 'junior', 'gold') AND `disp_id` IN ( SELECT `disp_id` FROM disp WHERE `client_id` = T1.`client_id` AND `account_id` = T4.`account_id` ) )\t----- bird -----\tfinancial"
  ],
  [
    "Please provide the IDs of the 3 female clients with the largest loans.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN loan AS T2 ON T1.`client_id` = T2.`account_id` WHERE T1.`gender` = 'F' ORDER BY T2.`amount` DESC LIMIT 3\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000?",
    "SELECT COUNT(*) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.client_id = T3.client_id JOIN account AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'M' AND T1.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND T4.frequency = 'POPLATEK PO OBRATU' AND T4.date BETWEEN '1993-02-08' AND '1998-06-30' AND T4.k_symbol = 'SIPO' AND T4.status = 'C' AND T4.type = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in Beroun were opened after 1996?",
    "SELECT T1.`district_id`, COUNT(*) FROM account AS T1 INNER JOIN client AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN district AS T3 ON T1.`district_id` = T3.`district_id` WHERE T1.`date` > '1996-01-01' AND T2.`gender` IS NOT NULL AND T3.`A2` = 'Beroun' GROUP BY T1.`district_id`\t----- bird -----\tfinancial"
  ],
  [
    "How many female customers have a junior credit card?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN card AS T3 ON T1.`client_id` = T3.`disp_id` WHERE T1.`gender` = 'F' AND T3.`type` = 'junior'\t----- bird -----\tfinancial"
  ],
  [
    "What proportion of customers who have accounts at the Prague branch are female?",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of male clients request for weekly statements to be issued?",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who choose statement of weekly issuance are User?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` = ( SELECT MIN(T3.`A11`) FROM district AS T3 ) AND T1.`birth_date` = ( SELECT MIN(T4.`birth_date`) FROM client AS T4 INNER JOIN district AS T5 ON T4.`district_id` = T5.`district_id` WHERE T5.`A11` = ( SELECT MIN(T6.`A11`) FROM district AS T6 ) )\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A10` > 0.5 ORDER BY T2.`A10` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Name the account numbers of female clients who are oldest and have lowest average salary?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` ASC, T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who were born in 1920 stay in east Bohemia?",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement.",
    "SELECT AVG(T2.`A11`) FROM client AS T1 INNER JOIN account AS T2 ON T1.`client_id` = T2.`client_id` WHERE T2.`A5` = 1 GROUP BY T2.`A11` ORDER BY AVG(T2.`A11`) DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the average amount of loan which are still on running contract with statement issuance after each transaction?",
    "SELECT AVG(loan.`amount`) FROM loan AS loan INNER JOIN trans AS trans ON loan.`account_id` = trans.`account_id` WHERE loan.`status` = 'C' AND trans.`operation` = 'VYBER' AND trans.`k_symbol` IS NOT NULL AND loan.`amount` > 1000 AND loan.`duration` = 24\t----- bird -----\tfinancial"
  ],
  [
    "List all ID and district for clients that can only have the right to issue permanent orders or apply for loans.",
    "SELECT T1.client_id, T3.district_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T2.type IN ('OWNER', 'DISPONENT') AND T3.district_id IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "Provide the IDs and age of the client with high level credit card, which is eligible for loans.",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "What is the most common bond type?",
    "SELECT T1.`label`, COUNT(T2.`element`) AS `count` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` GROUP BY T1.`label` ORDER BY `count` DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "In the non-carcinogenic molecules, how many contain chlorine atoms?",
    "SELECT COUNT(*) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T2.`bond_id` = T3.`bond_id` INNER JOIN molecule AS T4 ON T1.`molecule_id` = T4.`molecule_id` WHERE T3.`atom_id2` = T1.`atom_id` AND T1.`element` = 'cl' AND T4.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the average number of oxygen atoms in single-bonded molecules.",
    "SELECT AVG(atom.atom_id) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id INNER JOIN connected ON connected.bond_id = bond.bond_id INNER JOIN atom ON atom.atom_id = connected.atom_id2 WHERE bond.bond_type = '-' AND atom.element = 'o' AND atom.atom_id IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "On average how many carcinogenic molecules are single bonded?",
    "SELECT DIVIDE(SUM(bond.bond_type = '-'), COUNT(atom.atom_id)) FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element NOT IN ('None', None) AND bond.bond_type NOT IN ('None', None)\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule containing sodium atoms, how many are non-carcinogenic?",
    "SELECT COUNT(*) FROM atom INNER JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE `label` = '-' AND `element` != 'na'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the triple-bonded molecules which are carcinogenic.",
    "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T2.bond_type = '#' AND T1.element = 'c' AND T4.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carbon in double-bond molecules?",
    "SELECT DIVIDE(SUM(atom.`element` = 'c' AND bond.`bond_type` IS NULL), COUNT(atom.`atom_id`)) * 100 AS percentage FROM atom INNER JOIN bond ON atom.`molecule_id` = bond.`molecule_id` INNER JOIN molecule ON bond.`molecule_id` = molecule.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "How many triple type bonds are there?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` IS NOT NULL LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "In how many atoms is there no bromine?",
    "SELECT atom.atom_id, molecule.molecule_id, atom.element, COUNT(*) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id INNER JOIN connected ON atom.atom_id = connected.atom_id GROUP BY atom.atom_id, molecule.molecule_id, atom.element\t----- bird -----\ttoxicology"
  ],
  [
    "Of the first 100 molecules in number order, how many are carcinogenic?",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` = '+' ORDER BY `molecule_id` ASC LIMIT 100 )\t----- bird -----\ttoxicology"
  ],
  [
    "Identify by their ID the molecules in which there is silicon.",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id2` WHERE T1.`element` = 'si'\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in the TR004_8_9 bond atoms?",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id` WHERE T2.`bond_id` = 'TR004_8_9' AND T3.`bond_id` = 'TR004_8_9' AND T1.`element` IS NOT NULL AND T2.`bond_type` IS NOT NULL AND T3.`bond_id` IS NOT NULL AND T1.`element` != 'None' AND T2.`bond_type` != 'None' AND T3.`bond_id` != 'None' AND T1.`element` != 'none' AND T2.`bond_type` != 'none' AND T3.`bond_id` != 'none' ORDER BY T1.`element` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in a double type bond?",
    "SELECT DISTINCT T2.`bond_type` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Which type of label is the most numerous in atoms with hydrogen?",
    "SELECT COUNT(*) FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `molecule_id` IN ( SELECT `molecule_id` FROM atom WHERE `element` = 'h' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "Tellurium is in what type of bond?",
    "SELECT T1.`label` FROM molecule AS T1 JOIN bond ON T1.`molecule_id` = bond.`molecule_id` JOIN atom ON atom.`atom_id` = connected.`atom_id` WHERE T1.`element` = 'te' AND bond.`bond_type` IS NOT NULL AND connected.`atom_id2` = atom.`atom_id` GROUP BY T1.`label` ORDER BY T1.`label` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms are connected in single type bonds?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate which atoms are connected in non-carcinogenic type molecules.",
    "SELECT molecule.molecule_id FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id2 INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE connected.bond_id IS NOT NULL AND bond.bond_id = '-' AND molecule.label != '-' ORDER BY molecule.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "Which element is the least numerous in non-carcinogenic molecules?",
    "SELECT T1.atom_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T4 ON T2.molecule_id = T4.molecule_id WHERE T4.label = '-' AND T3.atom_id2 = ( SELECT atom_id FROM atom WHERE element = 'cl' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'c' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'h' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'o' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 's' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'n' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'p' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'na' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'br' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'f' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'i' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'sn' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'pb' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'te' ) AND T1.atom_id = ( SELECT atom_id FROM atom WHERE element = 'ca' ) ORDER BY COUNT(DISTINCT T3.atom_id2) ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What type of bond is there between the atoms TR004_8 and TR004_20?",
    "SELECT atom.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 'TR004_8' AND T2.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What type of label is not on molecules with atoms with tin?",
    "SELECT T3.`element` FROM atom AS T2 INNER JOIN connected AS T3 ON T2.`atom_id` = T3.`atom_id2` INNER JOIN bond AS T4 ON T2.`molecule_id` = T4.`molecule_id` WHERE T2.`element` = 'sn' AND T3.`bond_id` IS NOT NULL AND T4.`bond_type` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms with iodine and sulfur type elements are there in single bond molecules?",
    "SELECT COUNT(*) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T1.`atom_id` = 'i' AND T2.`element` = 's' AND T3.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all connected atoms with a triple bond.",
    "SELECT T1.label, T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all the atoms that are connected to the atoms of the TR181 molecule.",
    "SELECT DISTINCT atom.atom_id FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#' AND atom.molecule_id = 'TR181' AND atom.element NOT IN ('None', None) ORDER BY atom.atom_id ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of carcinogenic-type molecules does not contain fluorine?",
    "SELECT (SUM(atom.`element` = 'f' AND molecule.`label` = '+') / COUNT(molecule.`molecule_id`)) * 100 FROM atom INNER JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carcinogenic molecules in triple type bonds?",
    "SELECT (SUM(bond.bond_type = '#') / COUNT(bond.bond_id)) * 100 AS percent FROM ( SELECT atom.atom_id, atom.molecule_id FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id ) AS T1 INNER JOIN bond ON T1.molecule_id = bond.molecule_id INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE bond.bond_type = '#' AND atom.element IN ('h', 'c', 'o', 'n', 'cl', 's') AND atom.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
    "SELECT DISTINCT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' ORDER BY atom.element ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_id` = 'TR001_2_6'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the difference between the number of molecules that are carcinogenic and those that are not?",
    "SELECT SUM(molecule.label = '+') - SUM(molecule.label = '-') FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atom IDs of the bond TR_000_2_5?",
    "SELECT DISTINCT atom.atom_id FROM connected JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'TR_000_2_5'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond IDs that have the same atom ID 2 of TR000_2?",
    "SELECT atom.`molecule_id` FROM atom INNER JOIN connected ON atom.`atom_id` = connected.`atom_id2` WHERE connected.`atom_id2` = 'TR000_2'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top five molecules that have double bonds in alphabetical order.",
    "SELECT T1.`molecule_id`, COUNT(T1.`bond_id`) AS `Bonds` FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN atom AS T3 ON T2.`atom_id` = T3.`atom_id` WHERE T3.`element` = ' = ' AND T3.`bond_type` IS NOT NULL GROUP BY T1.`molecule_id` ORDER BY `Bonds` DESC LIMIT 5\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of double bonds in the molecule TR008?",
    "SELECT T1.`element` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T1.`atom_id` = ( SELECT `atom_id` FROM atom WHERE `element` = 'h' ORDER BY `atom_id` ASC LIMIT 1 ) AND T2.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = '-' ORDER BY `molecule_id` ASC LIMIT 1 )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of molecules that are carcinogenic?",
    "SELECT T2.`bond_type`, COUNT(T2.`bond_id`) as total_bonds, (COUNT(T2.`bond_id`) / COUNT(DISTINCT T1.`molecule_id`) * 100) as percentage FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+' GROUP BY T2.`bond_type`\t----- bird -----\ttoxicology"
  ],
  [
    "How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage.",
    "SELECT (SUM(atom.element = 'h') / COUNT(atom.atom_id)) * 100 FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of bond that molecule TR000 has when involved in any bonds?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`molecule_id` = 'TR000' AND T3.`bond_type` IS NOT NULL GROUP BY T1.`element` ORDER BY COUNT(DISTINCT T1.`atom_id`) DESC\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the toxicology and label of molecule TR060?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` = 'TR060'\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic?",
    "SELECT T1.bond_type, T3.label FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.molecule_id = 'TR018' AND T3.label IS NOT NULL GROUP BY T1.bond_type, T3.label ORDER BY COUNT(T1.bond_type) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
    "SELECT atom.molecule_id FROM atom INNER JOIN ( SELECT atom.molecule_id FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '-' AND atom.element NOT IN ('c', 'n', 's') ORDER BY atom.molecule_id ASC LIMIT 1 ) AS T4 ON atom.molecule_id = T4.molecule_id ORDER BY atom.molecule_id ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top two bonds that happened with the molecule TR006 in alphabetical order.",
    "SELECT T2.`element` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` INNER JOIN molecule AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`molecule_id` = 'TR006' ORDER BY T2.`element` ASC LIMIT 2\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds which involved atom 12 does molecule TR009 have?",
    "SELECT COUNT(*) FROM connected WHERE `atom_id` = 'TR009_12' OR `atom_id2` = 'TR009_12'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules are carcinogenic and have the bromine element?",
    "SELECT SUM(T1.count) FROM ( SELECT COUNT(T2.atom_id) AS count FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id2 WHERE T1.label = '+' AND T2.element = 'br' AND T2.atom_id IS NOT NULL GROUP BY T2.atom_id )\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type and the atoms of the bond ID of TR001_6_9?",
    "SELECT T2.`bond_type`, T1.`atom_id`, T1.`atom_id2` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`molecule_id` = ( SELECT molecule_id FROM atom WHERE element = 's' ) AND T2.`bond_type` = ' = ' AND T1.`atom_id` IS NOT NULL AND T1.`atom_id2` IS NOT NULL AND T2.`bond_type` IS NOT NULL GROUP BY T1.`atom_id`, T1.`atom_id2` ORDER BY T2.`bond_type` DESC\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`atom_id` = 'TR001_10'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a triple bond type?",
    "SELECT T1.`bond_id`, COUNT(T2.`bond_id`) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` GROUP BY T1.`bond_id`\t----- bird -----\ttoxicology"
  ],
  [
    "How many connections does the atom 19 have?",
    "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '-' AND connected.atom_id2 LIKE 'TR%_19' AND atom.element IS NOT NULL GROUP BY atom.element ORDER BY atom.element DESC;\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of the toxicology of the molecule \"TR004\".",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id2` WHERE T2.`bond_type` IS NOT NULL AND T1.`molecule_id` = 'TR004'\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are not carcinogenic?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`atom_id` = ( SELECT T3.`atom_id` FROM atom AS T3 INNER JOIN connected AS T4 ON T3.`atom_id` = T4.`atom_id2` ORDER BY T4.`atom_id` ASC LIMIT 1 )\t----- bird -----\ttoxicology"
  ],
  [
    "Among all the atoms from 21 to 25, list all the molecules that are carcinogenic.",
    "SELECT atom.* FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON atom.molecule_id = bond.molecule_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE SUBSTRING(atom.atom_id, 7, 2) BETWEEN 21 AND 25 AND molecule.label = '+' ORDER BY atom.atom_id;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bonds that have phosphorus and nitrogen as their atom elements?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` IN ('p', 'n')\t----- bird -----\ttoxicology"
  ],
  [
    "Is the molecule with the most double bonds carcinogenic?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN atom AS T3 ON T2.`atom_id` = T3.`atom_id` WHERE T2.`bond_type` = ' = ' AND T3.`element` = 'c' GROUP BY T1.`molecule_id` ORDER BY COUNT(T3.`atom_id`) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What is the average number of bonds the atoms with the element iodine have?",
    "SELECT DIVIDE(COUNT(atom.atom_id), COUNT(bond.bond_id)) AS average_number_of_bonds FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'i' AND bond.bond_type IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "List the bond type and the bond ID of the atom 45.",
    "SELECT T2.bond_id, T2.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T1.atom_id = 45\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of atoms that can not bond with any other atoms.",
    "SELECT COUNT(atom.`atom_id`) FROM atom AS atom INNER JOIN bond AS bond ON atom.`molecule_id` = bond.`molecule_id` INNER JOIN molecule AS molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE atom.`element` = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms of the triple bond with the molecule \"TR447\"?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '#' AND T1.`molecule_id` = 'TR447'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the atoms of TR144_8_19?",
    "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T2.bond_id = 'TR144_8_19' AND T1.element IS NOT NULL AND T2.bond_id IS NOT NULL AND T1.element != 'None' AND T2.bond_id != 'None' GROUP BY T1.element ORDER BY T1.element ASC\t----- bird -----\ttoxicology"
  ],
  [
    "Of all the carcinogenic molecules, which one has the most double bonds?",
    "SELECT atom.`element` FROM atom JOIN bond ON atom.`molecule_id` = bond.`molecule_id` JOIN molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE molecule.`label` = '+' AND bond.`bond_type` = '=' GROUP BY atom.`element` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What is the least common element of all carcinogenic molecules?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id2` INNER JOIN molecule AS T4 ON T2.`molecule_id` = T4.`molecule_id` WHERE T4.`label` = '+' GROUP BY T1.`element` ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that can bond with the atom that has the element lead?",
    "SELECT DISTINCT T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "List the elements of all the triple bonds.",
    "SELECT T1.element FROM connected AS T1 INNER JOIN ( SELECT atom_id, COUNT(*) AS atom_count FROM atom GROUP BY atom_id ORDER BY atom_count ASC LIMIT 1 ) AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.atom_id = T2.atom_id\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of bonds have the most common combination of atoms' elements?",
    "SELECT T1.`element`, T2.`percentage` FROM atom AS T1 INNER JOIN ( SELECT `molecule_id`, `element`, COUNT(`atom_id`) / COUNT(DISTINCT `atom_id`) AS percentage FROM connected INNER JOIN atom ON connected.`atom_id` = atom.`atom_id` WHERE atom.`element` IS NOT NULL GROUP BY `molecule_id`, `element` ORDER BY percentage DESC ) AS T2 ON T1.`molecule_id` = T2.`molecule_id` AND T1.`element` = T2.`element`\t----- bird -----\ttoxicology"
  ],
  [
    "What proportion of single bonds are carcinogenic?",
    "SELECT DIVIDE(SUM(T4.atom_id = '+'), COUNT(T4.atom_id)) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id INNER JOIN bond AS T4 ON T1.bond_id = T4.bond_id WHERE T1.bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '-' ) AND T4.atom_id IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms consisting of the element carbon and hydrogen.",
    "SELECT COUNT(*) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element IN ('c', 'h')\t----- bird -----\ttoxicology"
  ],
  [
    "List down atom id2 for atoms with element sulfur.",
    "SELECT atom.atom_id AS atom_id2 FROM atom JOIN connected ON atom.atom_id = connected.atom_id2 JOIN bond ON bond.bond_id = connected.bond_id WHERE atom.element = 's' AND bond.bond_type IS NOT NULL GROUP BY atom.atom_id ORDER BY COUNT(connected.atom_id2) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type for atoms with element Tin?",
    "SELECT T1.bond_type FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.element = 'sn' AND T1.bond_type IN (' = ', '-', '#') ORDER BY T1.bond_type DESC;\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are there for single bond molecules?",
    "SELECT atom.`element`, COUNT(DISTINCT bond.`bond_id`) FROM atom JOIN bond ON atom.`molecule_id` = bond.`molecule_id` WHERE bond.`bond_type` = '-' GROUP BY atom.`element`\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine.",
    "SELECT COUNT(*) FROM ( SELECT T3.`atom_id` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id2` WHERE T2.`bond_type` = '#' AND T1.`element` = 'p' OR T1.`element` = 'br' ) AS T4\t----- bird -----\ttoxicology"
  ],
  [
    "Write down bond id for molecules that are carcinogenic.",
    "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the single bond molecule id, which molecules are not carcinogenic?",
    "SELECT T1.`molecule_id` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '-' AND T1.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the composition of element chlorine in percentage among the single bond molecules?",
    "error: No SQL found in the input string\t----- bird -----\ttoxicology"
  ],
  [
    "What are the labels for TR000, TR001 and TR002?",
    "SELECT T1.`label` FROM molecule AS T1 WHERE T1.`molecule_id` IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology"
  ],
  [
    "List down the molecule id for non carcinogenic molecules.",
    "SELECT atom.`element` FROM atom INNER JOIN bond ON atom.`molecule_id` = bond.`molecule_id` INNER JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE bond.`bond_type` IS NOT NULL AND molecule.`label` = '-' ORDER BY atom.`element` LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
    "SELECT COUNT(*) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN molecule AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`label` = '+' AND T1.`atom_id` = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "List down the bond type for molecules from molecule id TR000 to TR050.",
    "SELECT T2.`element` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T2.`molecule_id` = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements for bond id TR001_10_11?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T2.`atom_id` = T3.`atom_id` WHERE T3.`bond_id` = 'TR001_10_11'\t----- bird -----\ttoxicology"
  ],
  [
    "How many bond id have element iodine?",
    "SELECT `label` FROM molecule WHERE `molecule_id` = ( SELECT molecule_id FROM atom WHERE `element` = 'i' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?",
    "SELECT molecule.`molecule_id`, COUNT(*) FROM atom INNER JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE atom.`element` = 'ca' AND atom.`label` != 'None' GROUP BY atom.`molecule_id` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Does bond id TR001_1_8 have both element of chlorine and carbon?",
    "SELECT T1.`bond_type` FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`atom_id` = ( SELECT `atom_id` FROM atom WHERE `element` = 'cl' ) AND T2.`atom_id2` = ( SELECT `atom_id` FROM atom WHERE `element` = 'c' )\t----- bird -----\ttoxicology"
  ],
  [
    "List down two molecule id of triple bond non carcinogenic molecules with element carbon.",
    "SELECT DISTINCT T1.bond_type FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T1.atom_id = 1 AND T3.element = 'c' AND T3.bond_type = '#' AND T2.label = '-' ORDER BY T1.bond_type DESC\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of element chlorine in carcinogenic molecules?",
    "SELECT (SUM(T3.`element` = 'cl') * 100.0) / COUNT(T3.`molecule_id`) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN atom AS T3 ON T1.`molecule_id` = T3.`molecule_id` INNER JOIN bond AS T4 ON T3.`atom_id` = T4.`bond_id` WHERE T2.`bond_type` IS NOT NULL AND T4.`bond_id` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "List the toxicology elements associated with molecule TR001.",
    "SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON bond.bond_id = connected.bond_id JOIN molecule ON molecule.molecule_id = bond.molecule_id WHERE molecule.label = '-' ORDER BY atom.element ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Give me the molecule ID of the double bond type.",
    "SELECT atom.molecule_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id2 JOIN bond ON atom.molecule_id = bond.molecule_id WHERE connected.atom_id NOT IN ( SELECT connected.atom_id2 FROM connected WHERE connected.atom_id = atom.atom_id ) AND bond.bond_type = ' = ' ORDER BY connected.atom_id ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Write down the atom IDs of the first and second atoms of triple bond type molecules.",
    "SELECT atom.atom_id, atom.atom_id2 FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id JOIN connected ON connected.bond_id = bond.bond_id JOIN atom ON atom.atom_id = connected.atom_id WHERE bond.bond_type = '#' AND atom.element IS NOT NULL ORDER BY atom.atom_id ASC LIMIT 2\t----- bird -----\ttoxicology"
  ],
  [
    "What are the toxicology elements associated with bond ID TR005_16_26?",
    "SELECT T1.`bond_type` FROM bond AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` = 's'\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the single bond type molecules are non-carcinogenic?",
    "SELECT T2.`element` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T2.`element` = 'o'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the label for bond ID TR001_10_11?",
    "SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.atom_id2 JOIN atom ON atom.atom_id = connected.atom_id WHERE atom.atom_id = 11\t----- bird -----\ttoxicology"
  ],
  [
    "Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not.",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
    "SELECT atom.`element`, COUNT(*) FROM atom AS atom INNER JOIN molecule AS molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE molecule.`label` = '+' GROUP BY atom.`element` ORDER BY COUNT(*) DESC, atom.`element`\t----- bird -----\ttoxicology"
  ],
  [
    "What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label.",
    "SELECT DIVIDE(SUM(atom.element = 'h'), COUNT(*)) AS 'ratio', molecule.label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR006' GROUP BY molecule.label\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the chemical compound that contains Calcium is carcinogenic.",
    "SELECT `label` FROM molecule WHERE `molecule_id` = ( SELECT `molecule_id` FROM atom WHERE `element` = 'ca' )\t----- bird -----\ttoxicology"
  ],
  [
    "Determine the bond type that is formed in the chemical compound containing element Tellurium.",
    "SELECT molecule.label FROM molecule INNER JOIN connected ON molecule.molecule_id = connected.molecule_id INNER JOIN atom ON atom.atom_id = connected.atom_id INNER JOIN bond ON bond.bond_id = connected.bond_id WHERE atom.element = 'te'\t----- bird -----\ttoxicology"
  ],
  [
    "Name chemical elements that form a bond TR001_10_11.",
    "SELECT DISTINCT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element IN ('cl', 'c', 'h', 'o', 'n', 's', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND atom.element IS NOT NULL ORDER BY atom.element ASC\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.",
    "SELECT COUNT(*) / COUNT(DISTINCT atom.molecule_id) * 100 AS percentage FROM connected JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` = 'TR047' AND `atom_id` NOT IN ( SELECT `atom_id2` FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `molecule_id` = 'TR047' AND `bond_type` = ' = ' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the molecule that contains atom TR001_1 is carcinogenic.",
    "SELECT T1.label FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.atom_id = 'TR001_1'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR151 carcinogenic?",
    "SELECT T2.`molecule_id` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T2.`molecule_id` = 151 AND T2.`element` IN ('c', 'n', 's') AND T1.`bond_id` IS NOT NULL AND T1.`atom_id` = 1 ORDER BY T2.`label` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "Which toxic element can be found in the molecule TR151?",
    "SELECT DISTINCT molecule.`molecule_id` FROM connected JOIN atom ON connected.`atom_id` = atom.`atom_id` JOIN bond ON atom.`molecule_id` = bond.`molecule_id` JOIN molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE bond.`bond_type` = '-' ORDER BY molecule.`label` ASC\t----- bird -----\ttoxicology"
  ],
  [
    "How many chemical compounds in the database are identified as carcinogenic.",
    "SELECT COUNT(*) FROM connected JOIN atom ON connected.atom_id2 = atom.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.",
    "SELECT T1.atom_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T1.element = 'c' AND T4.molecule_id BETWEEN 'TR010' AND 'TR050' AND T1.molecule_id NOT LIKE '%None%' AND T1.molecule_id NOT LIKE '%none%' ORDER BY T1.atom_id ASC\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule labeled with carcinogenic compounds?",
    "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond ids are double-bond with carcinogenic compound?",
    "SELECT T1.atom_id, T3.atom_id FROM connected AS T1 INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND T1.bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '=' AND molecule_id = T2.molecule_id AND label = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?",
    "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'h' AND T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` IS NOT NULL AND T1.`label` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "Among the atoms that contain element carbon, which one does not contain compound carcinogenic?",
    "SELECT T1.molecule_id, T1.label FROM molecule AS T1 WHERE T1.element = 'c' AND NOT EXISTS ( SELECT 1 FROM connected AS T2 INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T2.atom_id = T1.atom_id AND T3.bond_type IS NOT NULL ) AND T1.label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
    "SELECT ( SELECT COUNT(*) FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type IS NOT NULL AND T1.element = 'h' ) / ( SELECT COUNT(*) FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND T2.bond_type IS NOT NULL ) * 100.0\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR124 carcinogenic?",
    "SELECT T1.`element` FROM atom AS T1 JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` JOIN atom AS T3 ON T2.`atom_id2` = T3.`atom_id` WHERE T3.`element` = 'c' AND T2.`bond_id` IN ( SELECT bond_id FROM bond AS T4 JOIN molecule AS T5 ON T4.`molecule_id` = T5.`molecule_id` WHERE T5.`label` = '+' AND T5.`molecule_id` IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms comprise TR186?",
    "SELECT DISTINCT T1.element FROM connected AS T1 JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.element = 'tr186' AND T3.bond_type IS NOT NULL AND T1.bond_id = 2 AND T2.molecule_id IN ( SELECT molecule_id FROM atom WHERE element IN ('h', 'c', 'o', 'n', 'cl', 's') ) ORDER BY T1.element ASC\t----- bird -----\ttoxicology"
  ],
  [
    "What is the bond type of TR007_4_19?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id2` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`label` = 'TR007_4_19' AND T3.`bond_type` = ' = '\t----- bird -----\ttoxicology"
  ],
  [
    "Name the elements that comprise the atoms of bond TR001_2_4.",
    "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' AND T1.element IN ('h', 'c', 'o', 'n', 'cl', 's') AND T1.atom_id IN (SELECT atom_id FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-'))\t----- bird -----\ttoxicology"
  ],
  [
    "How many double bonds does TR006 have and is it carcinogenic?",
    "SELECT T1.`bond_type` FROM bond AS T1 WHERE T1.`molecule_id` = 'TR006'\t----- bird -----\ttoxicology"
  ],
  [
    "List all carcinogenic molecules and their elements.",
    "SELECT atom.element FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Name all bonds with single bond types and what atoms are connected to the molecules.",
    "SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id2 WHERE atom.element IS NOT NULL AND connected.bond_id IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecules have triple bonds and list all the elements they contain.",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Name the atoms' elements that form bond TR000_2_3.",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`bond_id` = 'TR000_2_3'\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds are created by bonding atoms with chlorine element?",
    "SELECT COUNT(*) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` INNER JOIN bond AS T3 ON T1.`bond_id` = T3.`bond_id` INNER JOIN molecule AS T4 ON T2.`molecule_id` = T4.`molecule_id` WHERE T3.`bond_type` = '-' AND T4.`label` IS NOT NULL AND T2.`element` = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?",
    "SELECT COUNT(DISTINCT bond.`bond_type`) FROM bond AS bond INNER JOIN molecule AS molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE molecule.`label` = 'TR346'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
    "SELECT COUNT(*) FROM molecule INNER JOIN bond ON molecule.`molecule_id` = bond.`molecule_id` WHERE bond.`bond_type` = '=' AND molecule.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules without sulphur element is not having double bond?",
    "SELECT T1.molecule_id, T2.atom_id, T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element != 's' AND T2.bond_type != '=' AND T1.label IS NOT NULL ORDER BY T1.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the carcinogenic label for bond TR001_2_4?",
    "SELECT `label` FROM molecule WHERE `molecule_id` = ( SELECT `molecule_id` FROM bond WHERE `bond_id` = 'TR001_2_4' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to molecule id TR005?",
    "SELECT atom.element FROM connected INNER JOIN atom ON connected.atom_id2 = atom.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.atom_id = 'TR005' AND bond.bond_type = '#' AND atom.atom_id2 IN ( SELECT atom_id2 FROM connected WHERE atom_id2 IS NOT NULL GROUP BY atom_id2 ORDER BY COUNT(*) DESC LIMIT 1 )\t----- bird -----\ttoxicology"
  ],
  [
    "How many single bonds are there in the list?",
    "SELECT COUNT(*) FROM bond INNER JOIN molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"cl\" element, which of them are carcinogenic?",
    "SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'cl' AND T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"c\" element, which of them are not carcinogenic?",
    "SELECT T2.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'c' AND T2.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules which contain the Chlorine element.",
    "SELECT ( SELECT COUNT(*) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` INNER JOIN connected AS T4 ON T3.`bond_id` = T4.`bond_id` INNER JOIN atom AS T5 ON T4.`atom_id2` = T5.`atom_id` WHERE T1.`label` = '+' AND T2.`element` = 'cl' ) / ( SELECT COUNT(*) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` INNER JOIN connected AS T4 ON T3.`bond_id` = T4.`bond_id` INNER JOIN atom AS T5 ON T4.`atom_id2` = T5.`atom_id` WHERE T1.`label` = '+' ) * 100 AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule id of bond id TR001_1_7?",
    "SELECT `molecule_id` FROM bond WHERE `bond_id` = 'TR001_1_7'\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are contained in bond_id TR001_3_4?",
    "SELECT COUNT(DISTINCT atom.`element`) FROM atom INNER JOIN connected ON atom.`atom_id` = connected.`atom_id` WHERE connected.`atom_id` = 1\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2?",
    "SELECT T1.`bond_type` FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`atom_id` = 'TR000_1' AND T2.`atom_id2` = 'TR000_2'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?",
    "SELECT T1.`label` FROM molecule AS T1 JOIN atom ON T1.`molecule_id` = atom.`molecule_id` WHERE atom.`atom_id` IN ('TR000_2', 'TR000_4')\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element of toxicology for the atom with the ID of TR000_1?",
    "SELECT `element` FROM atom WHERE `atom_id` = 'TR000_1'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR000 is carcinogenic or not?",
    "SELECT T1.label, T3.element FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.atom_id JOIN atom AS T3 ON T2.atom_id2 = T3.atom_id WHERE T1.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the percentage of atoms with single bond.",
    "SELECT ( SELECT COUNT(connected.atom_id2) FROM connected INNER JOIN atom ON connected.atom_id = atom.atom_id INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = '-' ) / ( SELECT COUNT(atom.atom_id) FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id ) * 100 as percentage\t----- bird -----\ttoxicology"
  ],
  [
    "How many carcinogenic molecules that consisted of Nitrogen?",
    "SELECT T1.`label` FROM atom AS T2 INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` INNER JOIN molecule AS T1 ON T2.`molecule_id` = T1.`molecule_id` WHERE T2.`element` = 'n' LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule consisted of Sulphur atom with double bond?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN atom AS T3 ON T2.`atom_id` = T3.`atom_id` INNER JOIN bond AS T4 ON T3.`atom_id` = T4.`atom_id` WHERE T3.`element` = 's' AND T4.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Which non-carcinogenic molecules consisted more than 5 atoms?",
    "SELECT T1.`molecule_id` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` GROUP BY T1.`molecule_id` HAVING COUNT(T2.`atom_id`) > 5 AND T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements with double bond, consisted in molecule TR024.",
    "SELECT COUNT(atom.`atom_id`) FROM atom AS atom INNER JOIN bond AS bond ON atom.`molecule_id` = bond.`molecule_id` WHERE bond.`bond_type` = '=' AND atom.`molecule_id` = ( SELECT molecule_id FROM molecule WHERE label = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "Which carcinogenic molecule have the highest number of atoms consisted in it?",
    "SELECT COUNT(T2.`atom_id`) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' GROUP BY T1.`molecule_id` ORDER BY COUNT(T2.`atom_id`) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
    "SELECT (SUM(molecule.`label` = '+') / (SELECT SUM(atom.`element` = 'h') FROM atom INNER JOIN bond ON atom.`molecule_id` = bond.`molecule_id` WHERE bond.`bond_type` = '#' GROUP BY atom.`molecule_id` )) * 100.0 FROM molecule INNER JOIN atom ON atom.`molecule_id` = bond.`molecule_id` WHERE atom.`element` = 'h' AND bond.`bond_type` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are carcinogenic?",
    "SELECT T1.`element`, COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+' GROUP BY T1.`element` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules between TR004 to TR010, how many of them has single bonds?",
    "SELECT COUNT(*) FROM bond WHERE `bond_type` = '-' AND `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `molecule_id` BETWEEN 'TR004' AND 'TR010' )\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule TR008, how many carbons are present?",
    "SELECT T2.`bond_type` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`atom_id` = 1 AND T1.`atom_id2` = 2 AND T2.`element` = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
    "SELECT `bond_type` FROM bond WHERE `molecule_id` = ( SELECT `molecule_id` FROM atom WHERE `atom_id` = 'TR004_7' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the total number of molecules with double bonded oxygen?",
    "SELECT SUM(T1.`atom_id`) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN atom AS T3 ON T1.`atom_id2` = T3.`atom_id` INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T2.`bond_type` = '=' AND T3.`element` = 'o' AND T4.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "in molecules with triple bonds, how many of them are not carcinogenic?",
    "SELECT COUNT(*) FROM bond INNER JOIN molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE bond_type = '#' AND label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "List the element and bond type included in the molecule with molecule ID of TR016.",
    "SELECT T1.`bond_type` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`bond_id` = T3.`bond_id` INNER JOIN atom AS T4 ON T3.`atom_id` = T4.`atom_id` WHERE T2.`molecule_id` = 'TR016' AND T4.`element` IN ('cl', 'c', 'h', 'o', 'n', 's', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND T1.`bond_type` IS NOT NULL ORDER BY T1.`bond_type` DESC\t----- bird -----\ttoxicology"
  ],
  [
    "What is the atom ID of double bonded carbon in TR012 molecule?",
    "SELECT T1.atom_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T1.element = 'c' AND T4.label = '-' AND T4.molecule_id = 'TR012' AND T3.bond_type = ' = '\t----- bird -----\ttoxicology"
  ],
  [
    "List the atom ID of the carcinogenic molecule that contains oxygen?",
    "SELECT T1.`bond_type` FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`molecule_id` = T2.`bond_id` INNER JOIN atom AS T3 ON T2.`atom_id` = T3.`atom_id` WHERE T3.`element` = 'o'\t----- bird -----\ttoxicology"
  ],
  [
    "Which are the cards that have incredibly powerful foils.",
    "SELECT * FROM cards WHERE cardKingdomId is not null AND cardKingdomId is not null\t----- bird -----\tcard_games"
  ],
  [
    "What are the borderless cards available without powerful foils?",
    "SELECT T1.`cardKingdomId` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`borderColor` = 'borderless' AND T1.`cardKingdomId` IS NOT NULL AND T1.`cardKingdomFoilId` IS NOT NULL AND T1.`cardKingdomId` != T1.`cardKingdomFoilId` AND T2.`isFoilOnly` = 0 AND T2.`isNonFoilOnly` = 0\t----- bird -----\tcard_games"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "Name all cards with 2015 frame style ranking below 100 on EDHRec.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T1.`setCode` = T3.`setCode` INNER JOIN sets AS T4 ON T3.`setCode` = T4.`code` INNER JOIN legalities AS T5 ON T1.`uuid` = T5.`uuid` WHERE T2.`language` = 'English' AND T1.`frameVersion` = 2015 AND T1.`edhrecRank` < 100 AND T4.`type` = 'core' AND T5.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "List all the mythic rarity print cards banned in gladiator format.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format.",
    "SELECT T2.`format`, T2.`status` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`side` IS NULL AND T2.`language` = 'Vintage' AND T2.`format` NOT IN ('vintage', 'Vintage')\t----- bird -----\tcard_games"
  ],
  [
    "List all the card id and artist with unknown power which are legal for commander play format.",
    "SELECT T1.`id`, T1.`artist` FROM cards AS T1 LEFT JOIN sets AS T2 ON T1.`mcmId` = T2.`id` LEFT JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` WHERE T1.`power` = '*' OR T1.`power` IS NULL AND T2.`type` = 'core' AND T2.`format` = 'commander' AND T2.`status` = 'Legal' AND T3.`language` = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.",
    "SELECT T1.`hasContentWarning`, T1.`hasFoil`, T1.`hasNonFoil` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T1.`setCode` = T3.`setCode` WHERE T2.`language` = 'Japanese' AND T1.`asciiName` = 'Stephen Daniele' AND T3.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.",
    "SELECT T1.`date`, T1.`text` FROM rulings AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`name` = 'Sublime Epiphany' AND T2.`number` = '74s'\t----- bird -----\tcard_games"
  ],
  [
    "Name the card and artist with the most ruling information. Also state if the card is a promotional printing.",
    "SELECT T1.`isPromo` FROM cards AS T1 INNER JOIN foreign_data ON T1.`uuid` = foreign_data.`uuid` INNER JOIN legalities ON T1.`uuid` = legalities.`uuid` INNER JOIN sets ON T1.`mcmId` = sets.`id` INNER JOIN set_translations ON sets.`code` = set_translations.`setCode` INNER JOIN rulings ON T1.`uuid` = rulings.`uuid` WHERE T1.`isPromo` = 1 LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "State the alternative languages available for card named Annul numbered 29.",
    "SELECT T1.`id` FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`language` = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Name all the cards which have alternative language in Japanese.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of the cards availabe in Chinese Simplified.",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM foreign_data WHERE `language` = 'Chinese Simplified')) * 100 FROM foreign_data\t----- bird -----\tcard_games"
  ],
  [
    "List all the sets available in Italian translation. State the total number of cards per set.",
    "SELECT T1.`code`, T1.`totalSetSize` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`language` = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "How many types of cards does the artist Aaron Boyd illustrated about card art?",
    "SELECT COUNT(DISTINCT cards.`type`) FROM cards WHERE cards.`artist` = 'Aaron Boyd' AND cards.`type` = 'Card Art'\t----- bird -----\tcard_games"
  ],
  [
    "What is the keyword found on card 'Angel of Mercy'?",
    "SELECT `text` FROM cards WHERE `id` = 123456\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have infinite power?",
    "SELECT COUNT(*) FROM cards WHERE side IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "What type of promotion is of card 'Duress'?",
    "SELECT T1.`promoTypes` FROM cards AS T1 WHERE T1.`name` = 'Duress' AND T1.`name` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What is the border color of card \"Ancestor's Chosen\"?",
    "SELECT `name` FROM cards JOIN foreign_data ON foreign_data.`uuid` = cards.`uuid` JOIN set_translations ON set_translations.`setCode` = sets.`code` JOIN legalities ON legalities.`uuid` = cards.`uuid` WHERE `mcmId` = ( SELECT `id` FROM cards WHERE `name` = 'Ancestor\\'s Chosen' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of the card \"Ancestor's Chosen\" as originally printed?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted have text boxes?",
    "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` WHERE legalities.`status` = 'restricted' AND cards.`text` IS NOT NULL AND cards.`isTextless` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What is the description about the ruling of card \"Condemn\"?",
    "SELECT T2.`text` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`name` = 'Condemn'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted are found in a starter deck?",
    "SELECT T1.`loyalty` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T1.`setCode` = T3.`code` INNER JOIN set_translations AS T4 ON T3.`code` = T4.`setCode` INNER JOIN foreign_data AS T5 ON T1.`name` = T5.`name` WHERE T2.`status` = 'restricted' AND T1.`isStarter` = 1 AND T4.`language` = 'English' AND T5.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "What is the status of card \"Cloudchaser Eagle\"?",
    "SELECT T1.`type` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`id` INNER JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` INNER JOIN foreign_data AS T4 ON T1.`uuid` = T4.`uuid` WHERE T3.`translation` = 'Cloudchaser Eagle'\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of card \"Benalish Knight\"?",
    "SELECT T2.`translation` FROM set_translations AS T1 INNER JOIN set_translations AS T2 ON T1.`id` = T2.`id` WHERE T1.`setCode` = 'ZNR' AND T2.`language` = 'Korean'\t----- bird -----\tcard_games"
  ],
  [
    "What is the rule of playing card \"Benalish Knight\"?",
    "SELECT T1.text FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Benalish Knight' AND T2.language = 'English'\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the names of the artists who illustrated the card art in Phyrexian.",
    "-- Please provide the names of the artists who illustrated the card art in Phyrexian. SELECT T1.`artist` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = foreign_data.`uuid` INNER JOIN set_translations AS T3 ON T1.`setCode` = set_translations.`setCode` WHERE foreign_data.`language` = 'Phyrexian' AND set_translations.`translation` = 'Phyrexian'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of borderless cards?",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless')) * 100 FROM cards\t----- bird -----\tcard_games"
  ],
  [
    "How many cards that illusrtated in German have been reprinted?",
    "SELECT COUNT(*) FROM cards WHERE `setCode` IN ( SELECT `setCode` FROM set_translations WHERE `language` = 'German' AND `setCode` IN ( SELECT `setCode` FROM sets ORDER BY `releaseDate` DESC LIMIT 1 ) ) AND `isReprint` = 1\t----- bird -----\tcard_games"
  ],
  [
    "How many borderless cards are illustrated in Russian?",
    "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN set_translations ON cards.uuid = set_translations.uuid INNER JOIN sets ON set_translations.setCode = sets.code WHERE foreign_data.language = 'Russian' AND cards.borderColor = 'borderless' AND sets.type = 'promo' AND legalities.status = 'Legal' AND set_translations.language = 'Russian'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of cards whose language is French among the Story Spotlight cards?",
    "-- What is the percentage of cards whose language is French among the Story Spotlight cards? SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND type = 'card' AND isStorySpotlight = 1) / (SELECT COUNT(*) FROM foreign_data WHERE type = 'card' AND isStorySpotlight = 1) * 100\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there with toughness of 99?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Name the cards that were illustrated by Aaron Boyd.",
    "SELECT cards.id FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN set_translations ON foreign_data.setCode = set_translations.setCode INNER JOIN sets ON set_translations.setCode = sets.code WHERE foreign_data.language = 'Japanese' AND foreign_data.name = 'Aaron Boyd' AND set_translations.translation = 'Venser vs. Koth' AND sets.name = 'Venser vs. Koth'\t----- bird -----\tcard_games"
  ],
  [
    "How many black border cards are only available on mtgo?",
    "-- How many black border cards are only available on mtgo? SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo';\t----- bird -----\tcard_games"
  ],
  [
    "List down all the card IDs with converted mana cost of 0.",
    "SELECT * FROM cards WHERE name = 'Zendikar Rising'\t----- bird -----\tcard_games"
  ],
  [
    "What are the card layout of cards with keyword of flying?",
    "SELECT DISTINCT T1.`name` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`keywords` LIKE '%flying%' AND T1.`layout` = 'artifact'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
    "-- How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"? SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`originalType` = 'Summon - Angel' AND T1.`subtypes` NOT LIKE '%Angel%'\t----- bird -----\tcard_games"
  ],
  [
    "What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards belong to duel deck a? List the ID.",
    "SELECT `id` FROM cards WHERE `id` = 'a'\t----- bird -----\tcard_games"
  ],
  [
    "List the edhrecRank for cards with frame version 2015.",
    "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of artists for cards in Chinese Simplified.",
    "SELECT AVG(cards.toughness) FROM cards INNER JOIN sets ON cards.uuid = sets.uuid INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'English' AND sets.type = 'core' AND sets.totalSetSize = ( SELECT MAX(totalSetSize) FROM sets WHERE sets.type = 'core' )\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards that only available in paper and Japanese language?",
    "-- What are the cards that only available in paper and Japanese language? SELECT T1.* FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`availability` = 'paper' AND T2.`language` = 'Japanese' AND T2.`text` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many of the banned cards are white border?",
    "-- How many of the banned cards are white border? SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN set_translations ON cards.uuid = set_translations.uuid JOIN sets ON set_translations.setCode = sets.code WHERE legalities.status = 'Banned' AND foreign_data.borderColor = 'white' AND sets.type = 'core'\t----- bird -----\tcard_games"
  ],
  [
    "List down the uuid for legacy cards and the foreign language of these cards.",
    "SELECT T1.`language` FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`type` = 'Legacy' AND T2.`format` = 'legacy'\t----- bird -----\tcard_games"
  ],
  [
    "Write down the ruling of Beacon of Immortality.",
    "SELECT T1.`mcmIdExtras` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Zendikar'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are having future frame version and what are the legality status of these cards?",
    "SELECT status FROM legalities INNER JOIN cards ON legalities.`uuid` = cards.`uuid` WHERE frameVersion = 'future'\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards for set OGW? State the colour for these cards.",
    "SELECT T1.`colors` FROM cards AS T1 WHERE T1.`setCode` = 'OGW' AND T1.`colors` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
    "SELECT T1.`language` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`type` = 'core' AND T2.`setCode` = '10E'\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of cards with original types of Creature - Elf and the date of rulings for these cards.",
    "SELECT T1.name, T3.releaseDate FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN sets AS T3 ON T2.setCode = T3.code WHERE T1.originalType = 'Creature - Elf' AND T2.translation IS NOT NULL AND T3.releaseDate IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the colors of cards from ID 1-20? What are the format of these cards?",
    "SELECT DISTINCT `format` FROM legalities INNER JOIN cards ON legalities.`uuid` = cards.`uuid` WHERE `id` BETWEEN 1 AND 20\t----- bird -----\tcard_games"
  ],
  [
    "Among the Artifact cards, which are black color and comes with foreign languague translation?",
    "SELECT T1.`uuid` FROM cards AS T1 INNER JOIN types AS T2 ON T1.`type` = T2.`type` INNER JOIN set_translations AS T3 ON T1.`setCode` = T3.`setCode` INNER JOIN foreign_data AS T4 ON T3.`id` = T4.`id` INNER JOIN legalities AS T5 ON T1.`uuid` = T5.`uuid` WHERE T2.`type` = 'Artifact' AND T1.`colors` = 'B' AND T4.`language` IS NOT NULL AND T5.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` INNER JOIN rulings AS T3 ON T1.`uuid` = T3.`uuid` WHERE T1.`rarity` = 'uncommon' ORDER BY T3.`date` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "On how many cards designed by John Avon is its foil non-powerful?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND cardKingdomId = cardKingdomFoilId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many white bordered cards are powerful?",
    "SELECT COUNT(*) FROM cards WHERE cardKingdomId = 1 AND borderColor = 'white' AND cardKingdomFoilId IS NULL AND name LIKE '%Fire%'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`id` WHERE T1.`toughness` IS NOT NULL AND T2.`type` = 'core' ORDER BY T1.`toughness` ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with a 1993 frame version and available on paper have a sensitive content warning?",
    "SELECT COUNT(*) FROM cards INNER JOIN set_translations ON cards.`setCode` = set_translations.`setCode` INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE cards.frameVersion = '1993' AND cards.availability = 'paper' AND set_translations.`translation` = 'Watermark' AND legalities.status = 'Legal' AND foreign_data.`language` = 'Japanese' AND cards.hasContentWarning = 1 AND cards.isPromo = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
    "SELECT c.name FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN set_translations st ON c.setCode = st.setCode JOIN sets s ON c.setCode = s.code JOIN legalities l ON c.uuid = l.uuid WHERE c.layout = 'normal' AND c.borderColor = 'black' AND c.frameVersion = 2003 AND c.availability = 'paper,mtgo' AND st.language = 'Spanish' AND s.isFoilOnly = 0 AND s.isForeignOnly = 0 AND s.isNonFoilOnly = 0 AND s.isOnlineOnly = 0 AND s.isPartialPreview = 0 AND l.status = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "How much unconverted mana do all the cards created by Rob Alexander cost in total?",
    "SELECT SUM(T1.`number`) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`id` WHERE T2.`mcmName` = 'Planechase Anthology' AND T1.`artist` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards available in arena.",
    "SELECT T1.`name` FROM cards AS T1 WHERE T1.`id` = 123456\t----- bird -----\tcard_games"
  ],
  [
    "Lists the set code of all cards translated into Spanish.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3?",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary') * 100) FROM cards WHERE frameEffects = 'legendary' AND hand = '+3'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of Story Spotlight cards that also have a text box? List them by their ID.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of cards in Spanish. List them by name.",
    "SELECT T1.name FROM foreign_data AS T1 JOIN sets AS T2 ON T1.uuid = T2.uuid JOIN legalities AS T3 ON T2.uuid = T3.uuid JOIN set_translations AS T4 ON T2.uuid = T4.setCode WHERE T3.status = 'Legal' AND T2.type = 'core' AND T4.language = 'Spanish' ORDER BY T1.name\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the name of all the languages into which the set whose number of cards is 309 is translated.",
    "SELECT T1.`translation` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`baseSetSize` = 309\t----- bird -----\tcard_games"
  ],
  [
    "How many Brazilian Portuguese translated sets are inside the Commander block?",
    "SELECT COUNT(*) FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN legalities ON sets.uuid = legalities.uuid JOIN foreign_data ON sets.code = foreign_data.setCode WHERE sets.type = 'expansion' AND set_translations.translation LIKE '%Commander%' AND set_translations.language = 'Portuguese (Brazil)' AND sets.code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' AND translation LIKE '%Brazil%' )\t----- bird -----\tcard_games"
  ],
  [
    "Lists by ID all Creature-type cards with legal status.",
    "SELECT * FROM cards INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` INNER JOIN set_translations ON cards.`setCode` = set_translations.`setCode` WHERE legalities.`status` = 'Legal' AND foreign_data.`language` = 'Japanese' AND cards.`types` LIKE '%Creature%' AND cards.`types` LIKE '%Goblin%' AND set_translations.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards in German.",
    "SELECT DISTINCT `type`, `subtypes`, `supertypes` FROM cards INNER JOIN set_translations ON cards.`setCode` = set_translations.`setCode` WHERE `language` = 'German' AND `type` IS NOT NULL AND `subtypes` IS NOT NULL AND `supertypes` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many null power cards contain info about the triggered ability",
    "SELECT COUNT(*) FROM cards WHERE power IS NULL AND ( SELECT COUNT(*) FROM cards AS T2 WHERE T2.`uuid` = cards.`otherFaceIds` AND T2.`text` LIKE '%Triggered ability%' AND T2.`power` IS NOT NULL ) > 0\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces.",
    "SELECT COUNT(*) FROM cards INNER JOIN set_translations ON cards.`setCode` = set_translations.`setCode` INNER JOIN rulings ON cards.`uuid` = rulings.`uuid` WHERE type = 'Premodern' AND rulings.`text` = 'This is a triggered mana ability' AND set_translations.`translation` = 'This is a triggered mana ability' AND variations IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.",
    "SELECT T1.`uuid` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T2.`setCode` = T3.`code` INNER JOIN foreign_data AS T4 ON T1.`name` = T4.`name` WHERE T1.`artist` = 'Erica Yang' AND T3.`type` = 'pauper' AND T1.`availability` = 'paper' AND T4.`language` = 'English'\t----- bird -----\tcard_games"
  ],
  [
    "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
    "SELECT `borderColor` FROM cards JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` JOIN set_translations ON cards.`setCode` = set_translations.`setCode` JOIN sets ON set_translations.`setCode` = sets.`code` WHERE `artist` = 'Matthew D. Wilson' AND foreign_data.`language` = 'French' AND set_translations.`language` = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with print rarity have ruling text printed on 10/01/2009?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` INNER JOIN foreign_data AS T3 ON T1.`uuid` = T3.`uuid` INNER JOIN legalities AS T4 ON T1.`uuid` = T4.`uuid` INNER JOIN rulings AS T5 ON T1.`uuid` = T5.`uuid` WHERE T2.`translation` LIKE '%10/01/2009%' AND T3.`language` = 'French' AND T4.`status` = 'Legal' AND T5.`date` = '2004-10-04' ORDER BY T1.`name` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What language is the set of 180 cards that belongs to the Ravnica block translated into?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards with format commander and legal status do not have a content warning?",
    "SELECT DIVIDE(COUNT(cards.id),COUNT(cards.id))*100 FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN sets ON cards.mcmId = sets.id INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE legalities.status = 'legal' AND legalities.format = 'commander' AND cards.hasContentWarning = 0 AND sets.type = 'core' AND sets.isFoilOnly = 0 AND sets.isForeignOnly = 0 AND sets.isNonFoilOnly = 0 AND sets.isOnlineOnly = 0 AND sets.isPartialPreview = 0\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards without power are in French?",
    "SELECT COUNT(cards.`uuid`) / COUNT(*) * 100 FROM cards INNER JOIN set_translations ON cards.`mcmId` = set_translations.`id` WHERE set_translations.`language` = 'French' AND (power IS NULL OR power = '*')\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of Japanese translated sets are expansion sets?",
    "SELECT COUNT(*) FROM cards WHERE uuid IN (SELECT uuid FROM sets WHERE mcmId IS NOT NULL)\t----- bird -----\tcard_games"
  ],
  [
    "What kind of printing is on the card that Daren Bader created?",
    "SELECT T1.`availability` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Daren Bader'\t----- bird -----\tcard_games"
  ],
  [
    "How many color cards with no borders have been ranked higher than 12000 on EDHRec?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T1.`setCode` = T3.`setCode` INNER JOIN sets AS T4 ON T1.`setCode` = T4.`code` INNER JOIN legalities AS T5 ON T1.`uuid` = T5.`uuid` WHERE T1.`borderColor` = 'borderless' AND T2.`language` = 'English' AND T2.`multiverseid` IS NOT NULL AND T3.`translation` IS NOT NULL AND T1.`edhrecRank` > 12000 AND T4.`type` = 'expansion' AND T5.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are oversized, reprinted, and printed for promotions?",
    "SELECT COUNT(*) FROM cards WHERE isPromo = 1\t----- bird -----\tcard_games"
  ],
  [
    "Please list top three unknown power cards that have promotional types for arena league in alphabetical order.",
    "SELECT T1.`power` FROM cards AS T1 INNER JOIN ( SELECT `uuid` FROM cards WHERE `power` IS NOT NULL AND `power` != '*' AND `promoTypes` LIKE '%arenaleague%' ORDER BY `number` ASC LIMIT 1 ) AS T2 ON T1.`uuid` = T2.`uuid`\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card with the multiverse number 149934?",
    "SELECT T1.`name` FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`multiverseId` = 149934\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order.",
    "SELECT `name` FROM cards WHERE `cardKingdomId` IS NOT NULL GROUP BY `name` ORDER BY COUNT(*) DESC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What proportion of cards do not have a text box with a normal layout?",
    "SELECT COUNT(CASE WHEN cards.isTextless = 1 AND cards.layout = 'normal' THEN 1 END) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN sets ON cards.mcmId = sets.id INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE sets.type = 'core'\t----- bird -----\tcard_games"
  ],
  [
    "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?",
    "SELECT DISTINCT cards.`number` FROM cards INNER JOIN set_translations ON cards.`setCode` = set_translations.`setCode` INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` LEFT JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE cards.`otherFaceIds` IS NULL AND set_translations.`language` = 'English' AND set_translations.`translation` LIKE '%Angel%' AND set_translations.`translation` LIKE '%Wizard%' AND cards.`type` = 'Instant' AND legalities.`status` = 'Legal' AND foreign_data.`flavorText` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.",
    "SELECT T1.`setCode`, T1.`name` FROM sets AS T1 WHERE T1.`mtgoFoilId` IS NULL OR T1.`mtgoFoilId` = '' ORDER BY T1.`name` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What languages are available in the set known as Archenemy on the magic card market and having the code ARC?",
    "SELECT T1.`totalSetSize` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`mcmId` = 'Archenemy'\t----- bird -----\tcard_games"
  ],
  [
    "What is the name of set number 5 and its translation?",
    "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode WHERE T1.id = 5\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and expansion type of set number 206?",
    "SELECT `type` FROM sets WHERE `id` = 206\t----- bird -----\tcard_games"
  ],
  [
    "Please list top two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block in alphabetical order.",
    "SELECT T1.setCode, T1.mcmId FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.setCode INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid WHERE T2.language = 'Italian' AND T1.block = 'Shadowmoor' AND T3.language = 'French' ORDER BY T1.name ASC LIMIT 2\t----- bird -----\tcard_games"
  ],
  [
    "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
    "SELECT sets.`id` FROM sets\t----- bird -----\tcard_games"
  ],
  [
    "Which Russian set of cards contains the most cards overall?",
    "SELECT sets.`name` FROM sets JOIN foreign_data ON sets.`uuid` = foreign_data.`uuid` JOIN legalities ON sets.`mcmId` = legalities.`uuid` JOIN set_translations ON sets.`code` = set_translations.`setCode` WHERE sets.`type` = 'core' AND sets.`name` NOT LIKE '% %' AND sets.`name` NOT LIKE '%-%' AND sets.`name` NOT LIKE '% %-%' AND foreign_data.`language` = 'Russian' AND legalities.`status` = 'Legal' AND set_translations.`language` = 'Russian' GROUP BY sets.`name` ORDER BY COUNT(cards.`name`) DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games?",
    "SELECT COUNT(cards.id) FROM cards INNER JOIN sets ON cards.mcmId = sets.mcmId INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.mcmId IS NOT NULL AND sets.isOnlineOnly = 1 AND sets.type = 'core' AND set_translations.language = 'Chinese Simplified'\t----- bird -----\tcard_games"
  ],
  [
    "How many sets are available just in Japanese and not in Magic: The Gathering Online?",
    "SELECT COUNT(*) FROM sets JOIN foreign_data ON sets.uuid = foreign_data.uuid JOIN legalities ON sets.uuid = legalities.uuid JOIN set_translations ON sets.code = set_translations.setCode WHERE foreign_data.language != 'Japanese' AND legalities.status != 'Banned' AND sets.mtgoCode IS NOT NULL AND sets.mtgoCode != '' AND set_translations.language = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "How many card border with black color ? List out the card id.",
    "SELECT cards.id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have frame effect as extendedart? List out the id of those cards.",
    "SELECT cards.id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games"
  ],
  [
    "Among black card borders, which card has full artwork?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`id` INNER JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` INNER JOIN foreign_data AS T4 ON T1.`uuid` = T4.`uuid` WHERE T1.`borderColor` = 'black' AND T2.`type` = 'memorabilia' AND T1.`isFullArt` = 1 AND T3.`language` = 'English' AND T4.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Point out the language of set id \"174\"?",
    "SELECT sets.`parentCode` FROM sets WHERE sets.`code` = 'ZNR'\t----- bird -----\tcard_games"
  ],
  [
    "List out the set name of the set code \"ALL\".",
    "SELECT AVG(`loyalty`) FROM cards WHERE `setCode` IN ( SELECT `setCode` FROM sets WHERE `name` LIKE '%Zendikar%' )\t----- bird -----\tcard_games"
  ],
  [
    "Which foreign language used by \"A Pedra Fellwar\"?",
    "SELECT T1.`name` FROM sets AS T1 WHERE T1.`isNonFoilOnly` = 1 ORDER BY T1.`baseSetSize` ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "State the set code of the set with release date of 07/13/2007?",
    "SELECT cards.id FROM cards JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.translation = 'Zendikar Rising'\t----- bird -----\tcard_games"
  ],
  [
    "Mention the base set size and set code of the set that was in block named \"Masques\" and \"Mirage\".",
    "SELECT `code` FROM sets WHERE `block` = 'Mirage'\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion type of 'expansion'?",
    "SELECT sets.`code` FROM sets WHERE sets.`type` = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has boros watermark? List out the type of this card.",
    "SELECT T1.`type` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'Japanese' AND T1.`watermark` = 'boros'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.",
    "SELECT type FROM set_translations WHERE setCode IN (SELECT code FROM sets WHERE name LIKE '%colorpie%')\t----- bird -----\tcard_games"
  ],
  [
    "What is percentage of the cards with a converted Mana Cost of 10 in set of Abyssal Horror?",
    "SELECT DIVIDE(COUNT(cards.convertedManaCost = 10),COUNT(cards.convertedManaCost))*100 AS percentage FROM cards INNER JOIN sets ON cards.mcmId = sets.id INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN set_translations ON sets.code = set_translations.setCode INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE sets.name = 'Abyssal Horror' AND sets.setCode = ( SELECT setCode FROM sets WHERE type = 'promo' ORDER BY totalSetSize ASC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion commander type?",
    "SELECT sets.`releaseDate` FROM sets WHERE sets.`type` = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has abzan watermark? List out the type of this card.",
    "SELECT T1.`type` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T1.`setCode` = T3.`setCode` INNER JOIN legalities AS T4 ON T1.`uuid` = T4.`uuid` WHERE T2.`language` = 'Japanese' AND T2.`name` = 'Abzan Watermark' AND T3.`language` = 'Japanese' AND T4.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card that has azorius watermark? List out the type of this card.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Aaron Miller' AND T1.`cardKingdomId` IS NOT NULL AND T1.`cardKingdomFoilId` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards available in paper have a positive starting maximum hand size?",
    "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand = '+'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards that have a text box.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`id` WHERE T1.`text` IS NOT NULL AND T1.`name` IS NOT NULL AND T1.`name` LIKE '%English%' AND T1.`name` LIKE '%French%' AND T2.`type` = 'core'\t----- bird -----\tcard_games"
  ],
  [
    "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?",
    "SELECT `name` FROM cards INNER JOIN sets ON cards.`mcmId` = sets.`id` INNER JOIN set_translations ON sets.`code` = set_translations.`setCode` INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE sets.`name` = 'M19' AND `isNonFoil` = 1 AND set_translations.`language` = 'English' AND foreign_data.`language` = 'Japanese' ORDER BY `loyalty` ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with a white border color, how many of them have unknown power?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`id` WHERE T1.`borderColor` = 'white' AND T1.`loyalty` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?",
    "SELECT T1.`type` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`name` = T2.`translation` WHERE T2.`setCode` = 'M15' AND T1.`name` = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".",
    "SELECT `purchaseUrls` FROM sets JOIN set_translations ON sets.`code` = set_translations.`setCode` JOIN foreign_data ON sets.`uuid` = foreign_data.`uuid` JOIN cards ON foreign_data.`uuid` = cards.`uuid` WHERE `type` = 'bundle' AND `setCode` = 'ZNR' AND `language` = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "How many artists have designed a card with a black border color and is available in both \"arena\" and \"mtgo\" printing type?",
    "SELECT COUNT(DISTINCT T1.`artist`) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`borderColor` = 'black' AND T1.`availability` LIKE '%arena,mtgo%'\t----- bird -----\tcard_games"
  ],
  [
    "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?",
    "SELECT T1.`name`, T1.`convertedManaCost`, T2.`name`, T2.`convertedManaCost` FROM cards AS T1 INNER JOIN cards AS T2 ON T1.`convertedManaCost` > T2.`convertedManaCost` WHERE T1.`name` = 'Serra Angel' AND T2.`name` = 'Shrine Keeper'\t----- bird -----\tcard_games"
  ],
  [
    "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style.",
    "SELECT T1.name, T1.convertedManaCost FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'English' AND T1.frameVersion = '2003' ORDER BY T1.convertedManaCost DESC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?",
    "-- What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in? SELECT set_translations.`translation` FROM cards INNER JOIN set_translations ON cards.`name` = set_translations.`setCode` WHERE set_translations.`language` = 'Italian' AND cards.`name` = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "How many translations are there for the set of cards with \"Angel of Mercy\" in it?",
    "SELECT `name` FROM sets ORDER BY `code` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards in the set \"Hauptset Zehnte Edition\".",
    "SELECT cards.`name` FROM cards WHERE cards.`convertedManaCost` = ( SELECT MIN(cards.`convertedManaCost`) FROM cards WHERE cards.`convertedManaCost` IS NOT NULL )\t----- bird -----\tcard_games"
  ],
  [
    "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?",
    "SELECT set_translations.`translation` FROM set_translations WHERE set_translations.`setCode` = ( SELECT sets.`code` FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE foreign_data.`name` = 'Ancestor''s Chosen' ) AND set_translations.`language` = 'Korean'\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex?",
    "SELECT SUM(T1.`isOnlineOnly`) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T2.`translation` = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the base set of \"Hauptset Zehnte Edition\"?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?",
    "SELECT IFNULL(language, 'Unknown') FROM cards INNER JOIN set_translations ON cards.`name` = set_translations.`translation` WHERE set_translations.`setCode` = 'Angel of Mercy'\t----- bird -----\tcard_games"
  ],
  [
    "When was the set of cards with \"Ancestor's Chosen\" released?",
    "SELECT MIN(cards.`mcmId`) AS `setCode` FROM cards WHERE cards.`loyalty` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the expansion type of the set \"Hauptset Zehnte Edition\"?",
    "SELECT cards.`uuid` FROM cards JOIN set_translations ON cards.`setCode` = set_translations.`setCode` WHERE set_translations.`translation` = 'Speed vs. Cunning'\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets in the block \"Ice Age\", how many of them have an Italian translation?",
    "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`block` = 'Ice Age' AND T1.`language` = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
    "SELECT T1.totalSetSize FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.name = T2.setCode WHERE T1.name = 'Adarkar Valkyrie' AND T1.isForeignOnly = 1 AND T2.language = 'English'\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10?",
    "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`language` = 'Italian' AND T2.`baseSetSize` < 10 AND T2.`booster` = 0 AND T2.`isOnlineOnly` = 0\t----- bird -----\tcard_games"
  ],
  [
    "How many cards in the set Coldsnap have a black border color?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`mcmId` INNER JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` INNER JOIN foreign_data AS T4 ON T1.`uuid` = T4.`uuid` WHERE T3.`language` = 'English' AND T2.`code` = 'Coldsnap' AND T3.`translation` IS NOT NULL AND T4.`language` = 'English' ORDER BY T1.`convertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Please list the name of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`id` WHERE T2.`code` = 'Coldsnap' AND T1.`loyalty` = ( SELECT MIN(T3.`loyalty`) FROM cards AS T3 INNER JOIN sets AS T4 ON T3.`mcmId` = T4.`id` WHERE T4.`code` = 'Coldsnap' )\t----- bird -----\tcard_games"
  ],
  [
    "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
    "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN set_translations ON set_translations.setCode = cards.setCode INNER JOIN legalities ON legalities.uuid = cards.uuid WHERE (foreign_data.artist IN ('Jeremy Jarvis', 'Chippy') AND cards.setCode = 'Coldsnap') AND set_translations.language = 'English' AND legalities.status = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "What is card number 4 in the set Coldsnap?",
    "SELECT `loyalty` FROM cards INNER JOIN sets ON cards.`mcmId` = sets.`id` WHERE sets.`name` = 'Coldsnap' AND cards.`number` = 4\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
    "SELECT COUNT(*) FROM cards WHERE `setCode` = 'CMR' AND `convertedManaCost` > 5 AND `power` IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the Italian flavor text of the card \"Ancestor's Chosen\"?",
    "SELECT sets.mtgoFoilId FROM cards INNER JOIN set_translations ON cards.name = set_translations.translation WHERE set_translations.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text.",
    "SELECT DISTINCT T1.`language` FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`name` = 'Ancestor''s Chosen' AND T1.`flavorText` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What's the German type of the card \"Ancestor's Chosen\"?",
    "SELECT T1.`text` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T2.`language` = 'German' AND T1.`name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian text ruling of all the cards in the set Coldsnap.",
    "SELECT `flavorText` FROM cards JOIN set_translations ON cards.`setCode` = set_translations.`setCode` JOIN sets ON set_translations.`setCode` = sets.`code` JOIN legalities ON cards.`uuid` = legalities.`uuid` JOIN foreign_data ON legalities.`uuid` = foreign_data.`uuid` WHERE `name` LIKE '%Coldsnap%' AND `language` = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost.",
    "-- Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost. SELECT set_translations.translation AS Italian_name FROM set_translations INNER JOIN sets ON set_translations.setCode = sets.code INNER JOIN cards ON sets.mcmId = cards.mcmId INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE sets.type = 'core' AND sets.code = 'CS' AND set_translations.language = 'Italian' AND cards.convertedManaCost = ( SELECT MAX(cards2.convertedManaCost) FROM cards as cards2 WHERE cards2.mcmId = sets.mcmId ) ORDER BY set_translations.translation ASC;\t----- bird -----\tcard_games"
  ],
  [
    "When was the ruling for the card 'Reminisce' created?",
    "SELECT `date` FROM rulings WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Reminisce' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost = 7) * 100) AS percentage FROM cards WHERE setCode = 'Coldsnap' AND convertedManaCost IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of incredibly powerful cards in the set Coldsnap?",
    "SELECT T1.name FROM cards AS T1 WHERE T1.cardKingdomFoilId is not null AND T1.cardKingdomId is not null\t----- bird -----\tcard_games"
  ],
  [
    "What's the code for the set which was released on 2017/7/14?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2017-07-14'\t----- bird -----\tcard_games"
  ],
  [
    "List the keyrune code for the set whose code is 'PKHC'.",
    "SELECT `name` FROM sets WHERE `code` = 'THS'\t----- bird -----\tcard_games"
  ],
  [
    "For the set which had 'SS2' as the code, what is its magic card market id?",
    "SELECT cards.uuid FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN foreign_data ON set_translations.id = foreign_data.setId JOIN legalities ON sets.id = legalities.uuid WHERE sets.code = 'ZNR' AND set_translations.language = 'Spanish' AND foreign_data.language = 'Japanese' AND legalities.format = 'vintage'\t----- bird -----\tcard_games"
  ],
  [
    "What's the magic card market name for the set which was released on 2017/6/9?",
    "SELECT `name` FROM sets WHERE `parentCode` = 'THS'\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"From the Vault: Lore\", what is its expansion type?",
    "SELECT `name` FROM cards ORDER BY `power` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"Commander 2014 Oversized\" , give its parent code.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
    "SELECT T1.`uuid`, T1.`name`, T1.`artist` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN foreign_data AS T3 ON T1.`uuid` = T3.`uuid` INNER JOIN legalities AS T4 ON T1.`uuid` = T4.`uuid` WHERE T1.`artist` = 'Jim Pavelec' AND T1.`hasContentWarning` = 1 AND T2.`translation` = 'English' AND T3.`name` = 'English' AND T4.`status` = 'Legal' AND T2.`language` = 'English' AND T3.`language` = 'English' AND T4.`format` = 'vintage'\t----- bird -----\tcard_games"
  ],
  [
    "What was the release date for the set which card \"Evacuation\" in it?",
    "SELECT sets.`releaseDate` FROM cards INNER JOIN set_translations ON cards.`name` = set_translations.`translation` INNER JOIN sets ON sets.`code` = set_translations.`setCode` WHERE set_translations.`setCode` = 'Evacuation'\t----- bird -----\tcard_games"
  ],
  [
    "What is the number of cards are there in the set of \"Rinascita di Alara\"?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`mcmId` = T2.`setCode` INNER JOIN sets AS T3 ON T2.`setCode` = T3.`code` WHERE T3.`type` = 'expansion' AND T2.`translation` = 'Rinascita di Alara'\t----- bird -----\tcard_games"
  ],
  [
    "List the expansion type of the set \"Huitième édition\".",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
    "SELECT sets.`name` FROM cards INNER JOIN set_translations ON cards.`uuid` = set_translations.`uuid` INNER JOIN sets ON set_translations.`setCode` = sets.`code` WHERE set_translations.`translation` = 'Tendo Ice Bridge' AND set_translations.`language` = 'Spanish' AND sets.`type` = 'promo'\t----- bird -----\tcard_games"
  ],
  [
    "How many translations of the name of the set \"Salvat 2011\"?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Tell the Japanese name of the set which card \"Fellwar Stone\" is in it.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.",
    "SELECT T1.`convertedManaCost` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`mcmId` = T2.`id` WHERE T2.`name` = 'Journey into Nyx Hero''s Path' AND T1.`convertedManaCost` = ( SELECT MAX(cards.`convertedManaCost`) FROM cards INNER JOIN sets ON cards.`mcmId` = sets.`id` WHERE sets.`name` = 'Journey into Nyx Hero''s Path' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the release date for the set \"Ola de frío\"?",
    "SELECT MAX(cards.`loyalty`) AS `max_loyalty` FROM cards WHERE cards.`loyalty` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What was the expansion type for the set which card \"Samite Pilgrim\" in it?",
    "SELECT sets.`type` FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` INNER JOIN sets ON foreign_data.`setCode` = sets.`code` WHERE foreign_data.`name` = 'Samite Pilgrim'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.",
    "SELECT cards.`name` FROM cards INNER JOIN foreign_data ON foreign_data.`uuid` = cards.`uuid` WHERE cards.`convertedManaCost` = 3 AND foreign_data.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
    "SELECT DIVIDE(SUM(CASE WHEN language = 'Japanese' AND isNonFoilOnly = 1 THEN 1 ELSE 0 END), SUM(CASE WHEN language = 'Japanese' THEN 1 ELSE 0 END)) * 100 FROM foreign_data INNER JOIN cards ON foreign_data.`uuid` = cards.`uuid` WHERE cards.`name` LIKE '%日本語%'\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
    "SELECT DIVIDE(SUM(isOnlineOnly = 1), SUM(language = 'Portuguese (Brazil)')) * 100 FROM cards INNER JOIN set_translations ON cards.setCode = set_translations.setCode WHERE set_translations.translation IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
    "SELECT T1.name FROM sets AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.code = '10000000000000'\t----- bird -----\tcard_games"
  ],
  [
    "What is the unique id of the set that has the highest number of cards?",
    "SELECT sets.`name` FROM sets WHERE sets.`id` = ( SELECT sets.`id` FROM sets ORDER BY sets.`baseSetSize` DESC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?",
    "SELECT T1.`artist` FROM cards AS T1 WHERE T1.`faceConvertedManaCost` IS NOT NULL ORDER BY T1.`faceConvertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the most common visual frame effects among the incredibly powerful foils?",
    "SELECT MAX(colors) AS most_common_color FROM cards WHERE cardKingdomFoilId IS NOT NULL AND colorIdentity = ( SELECT MAX(colorIdentity) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND frameEffects = ( SELECT MAX(frameEffects) FROM cards WHERE cardKingdomFoilId IS NOT NULL ) )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with unknown power that can't be found in foil is in duel deck A?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`power` IS NULL AND T1.`hasFoil` = 0 AND T2.`language` = 'English' AND T2.`translation` = 'Mtgjson'\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
    "SELECT sets.`id` FROM sets JOIN legalities ON sets.`uuid` = legalities.`uuid` JOIN cards ON legalities.`uuid` = cards.`uuid` JOIN set_translations ON sets.`code` = set_translations.`setCode` WHERE sets.`type` = 'commander' AND sets.`totalSetSize` = ( SELECT MAX(`totalSetSize`) FROM sets WHERE sets.`type` = 'commander' )\t----- bird -----\tcard_games"
  ],
  [
    "In duels, what are the top 10 cards with the highest uncoverted mana cost?",
    "SELECT T1.`name`, T1.`manaCost` FROM cards AS T1 INNER JOIN set AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`manaCost` = ( SELECT MAX(T3.`manaCost`) FROM cards AS T3 WHERE T3.`manaCost` IS NOT NULL ) AND T2.`type` = 'duel_deck' ORDER BY T1.`manaCost` DESC LIMIT 10\t----- bird -----\tcard_games"
  ],
  [
    "When was the oldest mythic card released and what are its legal play formats?",
    "-- When was the oldest mythic card released and what are its legal play formats? SELECT T1.`format` FROM sets AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`originalReleaseDate` = ( SELECT MIN(`originalReleaseDate`) FROM sets WHERE `rarity` = 'mythic' ) AND T1.`rarity` = 'mythic'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards did Volkan BaÇµa illustrated whose foreign language is in French?",
    "SELECT * FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN set_translations ON cards.setCode = set_translations.setCode JOIN legalities ON cards.uuid = legalities.uuid WHERE `artist` = 'Volkan Baga' AND foreign_data.language = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many rare enchantment Abundance cards are there whose play format status are all legal?",
    "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN set_translations ON sets.code = set_translations.setCode JOIN rulings ON cards.uuid = rulings.uuid WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND status = 'Legal' AND foreign_data.language = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card.",
    "SELECT T1.`format`, T2.`name` FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`status` = 'banned' AND T1.`format` IS NOT NULL AND T2.`name` IS NOT NULL GROUP BY T1.`format` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the \"Battlebond\" set?",
    "SELECT sets.`name`, sets.`type`, sets.`releaseDate`, sets.`mcmId`, sets.`mtgoCode` FROM sets INNER JOIN set_translations ON sets.`code` = set_translations.`setCode` INNER JOIN foreign_data ON foreign_data.`uuid` = sets.`uuid` INNER JOIN legalities ON legalities.`uuid` = sets.`uuid` WHERE set_translations.`translation` = 'Battlebond' AND foreign_data.`language` = 'English' AND legalities.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated.",
    "SELECT T1.`format` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T1.`setCode` = T3.`setCode` INNER JOIN sets AS T4 ON T1.`setCode` = T4.`code` INNER JOIN legalities AS T5 ON T1.`uuid` = T5.`uuid` WHERE T1.`asciiName` IS NOT NULL AND T3.`language` = 'English' GROUP BY T1.`artist` ORDER BY COUNT(T1.`asciiName`) ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
    "SELECT T1.status FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode INNER JOIN foreign_data AS T3 ON T1.uuid = T3.uuid INNER JOIN legalities AS T4 ON T1.uuid = T4.uuid WHERE T2.translation = 'D. Alexander Gregory' AND T1.frameVersion = '1997' AND T1.hasContentWarning = 1 AND T1.format = 'legacy' AND T4.status = 'Legal' AND T3.language = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format.",
    "SELECT T1.name, T1.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned'\t----- bird -----\tcard_games"
  ],
  [
    "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
    "-- What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common language of the card. -- First, we need to join the tables on the foreign keys SELECT sets.name AS set_name, COUNT(DISTINCT cards.id) AS number_of_cards, MAX(cards.type) AS type, MAX(cards.rarity) AS rarity, MAX(sets.name) AS common_language FROM cards JOIN sets ON cards.mcmId = sets.id JOIN foreign_data ON cards.id = foreign_data.multiverseid JOIN legalities ON cards.uuid = legalities.uuid JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' AND sets.type = 'expansion' AND sets.status = 'Legal' GROUP BY sets.name ORDER BY number_of_cards DESC;\t----- bird -----\tcard_games"
  ],
  [
    "List the artists who illustrated cards with black borders which are available only in arena.",
    "SELECT DISTINCT `artist` FROM cards WHERE `borderColor` = 'black' AND `availability` = 'arena'\t----- bird -----\tcard_games"
  ],
  [
    "Find the uuid of cards in which the old school format is restricted or banned.",
    "SELECT DISTINCT cards.`uuid` FROM cards INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` WHERE legalities.`status` = 'Banned' OR legalities.`status` = 'Restricted' AND legalities.`format` = 'oldschool'\t----- bird -----\tcard_games"
  ],
  [
    "Among the card designed by Matthew D. Wilson, how many are available only in the paper?",
    "SELECT date FROM rulings WHERE uuid = '123456'\t----- bird -----\tcard_games"
  ],
  [
    "What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates.",
    "SELECT T1.`text` FROM cards AS T1 INNER JOIN set_translations ON T1.`name` = set_translations.`translation` INNER JOIN sets ON set_translations.`setCode` = sets.`code` INNER JOIN foreign_data ON T1.`uuid` = foreign_data.`uuid` WHERE sets.`name` = 'Kev Walker' AND foreign_data.`language` = 'French' ORDER BY foreign_data.`language` ASC\t----- bird -----\tcard_games"
  ],
  [
    "List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.",
    "SELECT T1.`format` FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T2.`setCode` = T3.`code` INNER JOIN set_translations AS T4 ON T3.`code` = T4.`setCode` WHERE T3.`name` = 'Hour of Devastation' AND T1.`status` = 'Legal' AND T4.`language` = 'English' AND T3.`type` = 'promo'\t----- bird -----\tcard_games"
  ],
  [
    "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
    "SELECT DISTINCT sets.`code`, sets.`name` FROM sets LEFT JOIN set_translations AS T1 ON sets.`code` = T1.`setCode` WHERE T1.`language` = 'Portuguese (Brazil)' AND T1.`translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any.",
    "SELECT DISTINCT T1.frameVersion, T2.uuid, T2.name, T2.manaCost, T2.type, T2.rarity FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN set_translations AS T3 ON T1.uuid = T3.uuid INNER JOIN sets AS T4 ON T3.setCode = T4.code INNER JOIN legalities AS T5 ON T1.uuid = T5.uuid WHERE T1.artist = 'Allen Williams' AND T5.status = 'banned' AND T4.type = 'promo' AND T2.text LIKE '%Fire%' AND T2.text LIKE '%Lightning%'\t----- bird -----\tcard_games"
  ],
  [
    "Which user has a higher reputation, Harlan or Jarrod Dixon?",
    "SELECT users.`DisplayName` FROM users WHERE users.`Reputation` > ( SELECT users.`Reputation` FROM users WHERE users.`DisplayName` = 'Jarrod Dixon' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users whose accounts were created in the year 2014.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE YEAR(T2.`Date`) = 2014\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users last accessed the website after 2014/9/1?",
    "SELECT T1.`CreationDate` FROM users AS T1 WHERE T1.`CreationDate` > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has the most number of views?",
    "SELECT posts.OwnerDisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.OwnerDisplayName IS NOT NULL ORDER BY users.Views DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
    "SELECT COUNT(*) FROM votes WHERE VoteTypeId = -1 AND BountyAmount > 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users with more than 10 views created their account after the year 2013?",
    "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts does the user csgillespie own?",
    "SELECT COUNT(*) FROM tags WHERE WikiPostId = ( SELECT Id FROM posts WHERE OwnerDisplayName = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the titles of the posts owned by the user csgillespie?",
    "SELECT `BountyAmount` FROM votes WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' AND `BountyAmount` IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the owner of the post \"Eliciting priors from experts\"?",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Title` = 'Eliciting priors from experts' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post that is owned by csgillespie and has the highest popularity?",
    "SELECT T1.`Title` FROM posts AS T1 WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' ) AND `ViewCount` = ( SELECT MAX(T2.`ViewCount`) FROM posts AS T2 WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who is the owner of the most valuable post?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` INNER JOIN votes AS T3 ON T2.`Id` = T3.`PostId` WHERE T3.`BountyAmount` IS NOT NULL ORDER BY T3.`BountyAmount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total number of comments of all the posts owned by csgillespie?",
    "SELECT COUNT(*) FROM postLinks WHERE postLinks.`PostId` = ( SELECT posts.`Id` FROM posts WHERE posts.`OwnerUserId` = ( SELECT users.`Id` FROM users WHERE users.`DisplayName` = 'csgillespie' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post that got the most number of answers owned by csgillespie, how many answers did it get?",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Id` = ( SELECT posts.`OwnerUserId` FROM posts ORDER BY posts.`ViewCount` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?",
    "SELECT T1.`Reputation` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`Id` = ( SELECT `PostId` FROM postHistory WHERE `PostHistoryTypeId` = 2 ORDER BY `CreationDate` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by csgillespie, how many of them are root posts?",
    "SELECT COUNT(*) FROM posts WHERE `ParentId` IS NULL AND `OwnerDisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users who owns a post that is well-finished.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN ( SELECT `UserId` FROM votes WHERE `VoteTypeId` = 1 AND `BountyAmount` IS NOT NULL GROUP BY `UserId` ORDER BY SUM(`BountyAmount`) DESC LIMIT 1 ) AS T2 ON T1.`Id` = T2.`UserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by an elder user, how many of them have a score of over 19?",
    "SELECT T1.`Score` FROM posts AS T1 INNER JOIN ( SELECT `PostId` FROM votes GROUP BY `PostId` ORDER BY SUM(`BountyAmount`) DESC LIMIT 1 ) AS T2 ON T1.`Id` = T2.`PostId`\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the location of the owner of the post \"Eliciting priors from experts\"?",
    "SELECT T1.`district_id` FROM users AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Title` = 'Eliciting priors from experts' )\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the tag \"bayesian\" excerpted from? Please give the body of the post.",
    "SELECT T1.Body FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T2.Text = 'bayesian' AND T2.PostHistoryTypeId = 1 AND T3.DisplayName IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the most popular tag excerpted from? Please give the body of the post.",
    "SELECT T1.`Body` FROM posts AS T1 WHERE T1.`Id` = ( SELECT T2.`PostId` FROM postHistory AS T2 WHERE T2.`Text` = ( SELECT MAX(T3.`Text`) FROM postHistory AS T3 ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many badges has the user csgillespie obtained?",
    "SELECT SUM(`Reputation`) FROM users WHERE `DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the names of the badges obtained by csgillespie.",
    "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?",
    "SELECT COUNT(*) FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'csgillespie' AND badges.Name = 'Badge' AND badges.Date BETWEEN '2011-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has obtained the most number of badges?",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Id` IN ( SELECT T2.`UserId` FROM badges AS T2 GROUP BY T2.`UserId` ORDER BY COUNT(T2.`Id`) DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of the posts owned by the user csgillespie?",
    "SELECT users.`Age` FROM users WHERE users.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of badges obtained by a user with over 200 views?",
    "-- What is the average number of badges obtained by a user with over 200 views? SELECT AVG(T1.Count) AS AvgBadges FROM ( SELECT users.Id AS UserId, COUNT(badges.Id) AS Count FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN badges ON users.Id = badges.UserId WHERE posts.ViewCount > 200 GROUP BY users.Id ) AS T1\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with a score of over 20, what is the percentage of them being owned by an elder user?",
    "SELECT ( SELECT COUNT(*) FROM posts WHERE LastEditorUserId IS NOT NULL AND LastEditorUserId IN ( SELECT Id FROM users WHERE Age > 65 )) / ( SELECT COUNT(*) FROM posts WHERE LastEditorUserId IS NOT NULL ) * 100\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes did the user No.58 take on 2010/7/19?",
    "SELECT users.DisplayName FROM users JOIN badges ON users.Id = badges.UserId JOIN posts ON badges.PostId = posts.Id JOIN votes ON posts.Id = votes.PostId WHERE badges.Name = 'Supporter' AND badges.Date = '2010-07-19' AND posts.CreationDate = '2010-07-19' AND users.Reputation >= 1000 AND users.UpVotes = ( SELECT MAX(votes.UpVotes) FROM votes WHERE votes.UserId = users.Id ) AND users.DownVotes = ( SELECT MIN(votes.DownVotes) FROM votes WHERE votes.UserId = users.Id ) AND users.DisplayName IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Indicate the creation date of the maximum number of votes.",
    "-- Indicate the creation date of the maximum number of votes. SELECT posts.`CreationDate` FROM posts INNER JOIN votes ON posts.`Id` = votes.`PostId` WHERE votes.`BountyAmount` is NOT NULL GROUP BY posts.`CreationDate` ORDER BY COUNT(votes.`Id`) DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of \"Revival\" badges.",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM postHistory AS T1 INNER JOIN badges AS T2 ON T1.`UserId` = T2.`UserId` WHERE T2.`Name` = 'Revival'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title for the post which got the highest score comment?",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post which got 1910 view counts, how many comments does it get?",
    "SELECT T1.`Reputation` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`Id` = ( SELECT `Id` FROM posts ORDER BY `ViewCount` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get?",
    "SELECT MAX(posts.`Score`) FROM posts JOIN postLinks ON posts.`Id` = postLinks.`PostId` JOIN comments ON postLinks.`RelatedPostId` = comments.`PostId` JOIN users ON comments.`UserId` = users.`Id` WHERE comments.`UserId` = '3025' AND comments.`CreationDate` = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the only one comment text of the post with parent id 107829.",
    "SELECT T1.`Text` FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`ParentId` = 107829\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.23853 gave a comment to a post at 9:08:18 on 2013/7/12, was that post well-finished?",
    "SELECT T1.Id FROM postLinks AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Text LIKE '%User No.23853%'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the owner user of post No. 65041, what is his/her reputation points?",
    "SELECT T1.`Id` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` GROUP BY T1.`Id` ORDER BY COUNT(T2.`Id`) DESC, T1.`Reputation` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?",
    "SELECT users.`ProfileImageUrl` FROM users JOIN badges ON users.`Id` = badges.`UserId` WHERE badges.`Name` = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the display name of the user who made the vote No.6347.",
    "SELECT T1.`VoteTypeId` FROM votes AS T1 WHERE T1.`Id` = 6347\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of votes for the post about data visualization.",
    "SELECT MAX(votes.`BountyAmount`) FROM votes AS votes INNER JOIN posts AS posts ON votes.`PostId` = posts.`Id` WHERE posts.`Title` LIKE '%data visualization%' AND votes.`BountyAmount` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user whose display name is \"DatEpicCoderGuyWhoPrograms\", what is his/her badge's name?",
    "SELECT T2.`Name` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T1.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user No.24, how many times is the number of his/her posts compared to his/her votes?",
    "SELECT COUNT(posts.`Id`) / COUNT(votes.`Id`) FROM posts INNER JOIN votes ON posts.`OwnerUserId` = votes.`UserId` WHERE posts.`OwnerUserId` = 24\t----- bird -----\tcodebase_community"
  ],
  [
    "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
    "SELECT posts.`ViewCount` FROM posts JOIN users ON posts.`OwnerUserId` = users.`Id` WHERE users.`DisplayName` = 'user28'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write the contents of comments with a score of 17.",
    "SELECT `Text` FROM comments WHERE `Score` = 17\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user has the website URL listed at 'http://stackoverflow.com'",
    "SELECT `DisplayName` FROM users WHERE `WebsiteUrl` = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the badge name that user 'SilentGhost' obtained?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'SilentGhost'\t----- bird -----\tcodebase_community"
  ],
  [
    "Name the user that commented 'thank you user93!'",
    "SELECT T1.`UserId` FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T1.`Text` = 'thank you user93!'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made by user 'A Lion.'",
    "-- Write all comments made by user 'A Lion.' SELECT T1.`ProfileImageUrl` FROM users AS T1 WHERE T1.`DisplayName` = 'A Lion'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user?",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made on the post titled 'How does gentle boosting differ from AdaBoost?'",
    "SELECT `WikiPostId` FROM tags WHERE `TagName` = 'z-test'\t----- bird -----\tcodebase_community"
  ],
  [
    "Name 10 users with the badge name 'Necromancer.'",
    "SELECT T1.`ProfileImageUrl` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Name` = 'Necromancer' AND T1.`ProfileImageUrl` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
    "SELECT T1.`LastEditorUserId` FROM posts AS T1 WHERE T1.`Id` = ( SELECT `PostId` FROM postHistory WHERE `PostHistoryTypeId` = 2 AND `UserId` IS NOT NULL ORDER BY `CreationDate` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "List the title of posts which were edited by Vebjorn Ljosa.",
    "SELECT T1.`Title` FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Vebjorn Ljosa' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total score of the posts edited by Yevgeny and include the user's website URL.",
    "SELECT SUM(comments.Score) FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Yevgeny' AND users.WebsiteUrl IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all the comments left by users who edited the post titled 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "SELECT DISTINCT T1.`UserId` FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' AND T1.`BountyAmount` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "Which user added a bounty amount of 50 to the post title mentioning variance?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`BountyAmount` = 50 AND T2.`PostId` IN ( SELECT T3.`Id` FROM posts AS T3 INNER JOIN postHistory AS T4 ON T3.`Id` = T4.`PostId` WHERE T4.`PostHistoryTypeId` = 'variance' AND T3.`Id` IN ( SELECT T5.`PostId` FROM comments AS T5 INNER JOIN postHistory AS T6 ON T5.`PostId` = T6.`PostId` WHERE T6.`PostHistoryTypeId` = 'variance' AND T5.`Text` LIKE '%variance%' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the average view count of posts tagged as 'humor' and write the title and the comments of the posts alongside their scores if applicable.",
    "SELECT posts.`Title`, posts.`Body`, posts.`Score` FROM posts INNER JOIN postLinks ON posts.`Id` = postLinks.`PostId` INNER JOIN badges ON posts.`OwnerUserId` = badges.`UserId` INNER JOIN users ON badges.`UserId` = users.`Id` WHERE badges.`Name` = 'Student' AND users.`DisplayName` IN ('Chris', 'John', 'Alex', 'Tom', 'Michael', 'James') AND tags.`TagName` = 'humor'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the total number of comments posted by user ID 13.",
    "SELECT COUNT(*) FROM posts JOIN users ON posts.`OwnerUserId` = users.`Id` WHERE posts.`CreationDate` > '2014-01-01' AND users.`Id` = 13\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the highest reputation?",
    "SELECT users.`Id` FROM users ORDER BY users.`Reputation` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the lowest view?",
    "SELECT users.Id FROM votes JOIN users ON votes.UserId = users.Id WHERE votes.BountyAmount IS NOT NULL ORDER BY votes.BountyAmount ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with supporter badge during year 2011?",
    "SELECT `Name`, AVG(users.`Reputation`) FROM users INNER JOIN badges ON users.`Id` = badges.`UserId` WHERE badges.`Date` >= '2011-01-01' AND badges.`Date` < '2012-01-01' AND badges.`Name` = ( SELECT `Name` FROM badges WHERE badges.`Date` >= '2011-01-01' AND badges.`Date` < '2012-01-01' ORDER BY `Count` DESC LIMIT 1 ) GROUP BY `Name`\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with more than 5 badges?",
    "-- How many users are awarded with more than 5 badges? SELECT T1.Id AS UserId, T1.Reputation FROM users AS T1 INNER JOIN ( SELECT badges.UserId, badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name IS NOT NULL GROUP BY badges.UserId HAVING COUNT(badges.Name) > 5 ) AS T2 ON T1.Id = T2.UserId\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from New York have a teacher and supporter badge?",
    "SELECT COUNT(DISTINCT T1.UserId) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.Name IN ('Teacher', 'Supporter') AND T1.Location = 'New York'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user created post ID 1 and what is the reputation of this user?",
    "SELECT T1.`Reputation` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`PostId` = 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user have only one post history per post and having at least 1000 views?",
    "SELECT T1.`Id` FROM postHistory AS T1 WHERE T1.`PostId` IN ( SELECT T2.`PostId` FROM postHistory AS T2 GROUP BY T2.`PostId` HAVING COUNT(T2.`PostId`) = 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have posted the most comments. List out the user's badge?",
    "SELECT T1.UserId, T1.DisplayName, T1.BadgeId FROM users AS T1 INNER JOIN ( SELECT UserId, COUNT(Id) AS CommentCount FROM comments WHERE UserId is NOT NULL AND PostId is NOT NULL GROUP BY UserId ORDER BY CommentCount DESC LIMIT 1 ) AS T2 ON T1.Id = T2.UserId\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from India have the teacher badges?",
    "-- How many users from India have the teacher badges? SELECT COUNT(DISTINCT badges.UserId) FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Teacher' AND users.Location = 'India'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage difference of student badges given during 2010 and 2011?",
    "SELECT ( SELECT SUM(badges.Count) FROM badges JOIN users ON badges.UserId = users.Id WHERE badges.UserId IN ( SELECT users.Id FROM users WHERE users.DisplayName = 'Chris' ) AND badges.Date IN ('2010-01-01', '2011-01-01') ) - ( SELECT SUM(comments.Count) FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON comments.UserId = users.Id WHERE comments.UserId IS NOT NULL AND posts.ParentId IS NULL AND users.DisplayName = 'Chris' AND comments.Date IN ('2010-01-01', '2011-01-01') ) / ( SELECT SUM(comments.Count) FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON comments.UserId = users.Id WHERE comments.UserId IS NOT NULL AND posts.ParentId IS NULL AND users.DisplayName = 'Chris' AND comments.Date IN ('2010-01-01', '2011-01-01') ) * 100\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post that are related to post ID 61217 and what is the popularity of this post?",
    "SELECT T1.`ViewCount` FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`RelatedPostId` = 61217\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score and the link type ID for post ID 395?",
    "SELECT T1.`LinkTypeId` FROM postLinks AS T1 WHERE T1.`PostId` = 395\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post ID with score more than 60 and list out all the user ID that created these post.",
    "SELECT DISTINCT `OwnerUserId` FROM posts WHERE `Score` > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the sum of favourite count gained by user ID 686 in 2011?",
    "SELECT users.`DisplayName`, users.`LastAccessDate`, users.`Reputation` FROM votes AS T1 JOIN users ON T1.`UserId` = users.`Id` WHERE T1.`PostId` IN ( SELECT posts.`Id` FROM posts WHERE posts.`ParentId` IS NULL ) ORDER BY users.`Reputation` DESC, users.`LastAccessDate` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average of the up votes and the average user age for users creating more than 10 posts?",
    "SELECT AVG(users.Age) FROM users INNER JOIN ( SELECT UserId FROM posts GROUP BY UserId HAVING COUNT(posts.Id) > 10 ) AS T2 ON users.Id = T2.UserId\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users obtained the \"Announcer\" badge?",
    "SELECT COUNT(T1.`Id`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Announcer'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN votes AS T3 ON T1.`Id` = T3.`UserId` INNER JOIN posts AS T4 ON T3.`PostId` = T4.`Id` WHERE T2.`Name` = 'Supporter' AND T4.`CreationDate` = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many positive comments are there on the list?",
    "SELECT T1.`UserDisplayName` FROM comments AS T1 WHERE `Score` > 60 ORDER BY `Score` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
    "SELECT `UserDisplayName` FROM comments JOIN users ON comments.`UserId` = users.`Id` WHERE `CreationDate` = '2010-07-19 19:16:14.0' AND `UserDisplayName` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score of 10 on the list?",
    "SELECT T1.`Id`, T1.`Score` FROM badges AS T1 INNER JOIN ( SELECT PostId, MAX(Score) AS MaxScore FROM comments WHERE Score = 10 GROUP BY PostId ) AS T2 ON T1.`Id` = T2.`PostId`\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the names of badges that users who have the highest reputation obtained?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Reputation` = ( SELECT MAX(`Reputation`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the reputation of users who had obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT T2.`Reputation` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Teacher' AND T1.`Date` = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of badge that the user whose display name is \"Pierre\" obtained?",
    "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the dates that users who are located in Rochester, NY obtained their badges?",
    "SELECT `DownVotes` FROM users WHERE `Location` = 'Rochester, NY'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Teacher\" badge, calculate their percentage of users",
    "SELECT ( SELECT COUNT(*) FROM badges WHERE Name = 'Teacher' ) / ( SELECT COUNT(*) FROM users ) * 100\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
    "SELECT ( SELECT COUNT(*) FROM users WHERE Age BETWEEN 13 AND 18 ) / ( SELECT COUNT(*) FROM badges WHERE Name = 'Organizer' ) * 100\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN posts AS T3 ON T2.`PostId` = T3.`Id` INNER JOIN badges AS T4 ON T1.`Id` = T4.`UserId` WHERE T3.`CreationDate` = '2010-07-19 19:19:56.0' AND T4.`Date` = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?",
    "SELECT T1.Reputation FROM users AS T1 WHERE T1.Id = ( SELECT T2.UserId FROM comments AS T2 WHERE T2.CreationDate = '2010-07-19 19:37:33.0' )\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the age of users who located in Vienna, Austria obtained the badge?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Name` = 'Supporter' ORDER BY T1.`Age` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many adults who obtained the badge Supporter?",
    "SELECT COUNT(DISTINCT users.`Id`) FROM users INNER JOIN badges ON users.`Id` = badges.`UserId` WHERE badges.`Name` = 'Supporter' AND users.`Reputation` > 50 AND users.`Reputation` BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "State the number of views of users who obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT SUM(BountyAmount) FROM votes WHERE UserId = ( SELECT Id FROM users WHERE LastAccessDate = '2010-07-19 19:39:08.0' AND BountyAmount IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the name of badges that users who have the lowest reputation obtained?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Reputation` = ( SELECT MIN(`Reputation`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "State the name of badge that the user whose display name is \"Sharpie\" obtained.",
    "SELECT T1.`Name` FROM badges AS T1 WHERE T1.`UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Sharpie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many elders obtained the \"Supporter\" badge?",
    "SELECT AVG(T2.`Age`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Supporter' AND T2.`Age` > 65\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of user with the ID of 30?",
    "SELECT `WikiPostId` FROM tags WHERE `Id` = 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were from New York?",
    "-- How many users were from New York? SELECT COUNT(DISTINCT T1.`Id`) FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN posts AS T3 ON T2.`PostId` = T3.`Id` INNER JOIN postLinks AS T4 ON T3.`Id` = T4.`PostId` WHERE T2.`TagName` = 'New York' AND T4.`LinkTypeId` = 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made in 2010?",
    "-- How many votes were made in 2010? SELECT COUNT(*) FROM votes INNER JOIN users ON votes.UserId = users.Id WHERE DATE_PART('year', votes.CreationDate) = 2010 AND votes.BountyAmount IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were adult?",
    "-- How many users were adult? SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have the highest number of views?",
    "SELECT users.DisplayName, COUNT(DISTINCT badges.Name) AS Tags FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Name IS NOT NULL GROUP BY users.DisplayName ORDER BY Tags DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the ratio of votes in 2010 and 2011.",
    "SELECT users.`LastAccessDate` FROM users WHERE users.`Id` = ( SELECT T1.`UserId` FROM votes AS T1 ORDER BY T1.`BountyAmount` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of tags used by John Stauffer's?",
    "-- What is the name of tags used by John Stauffer's? SELECT T1.TagName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created by Daniel Vassallo?",
    "-- How many posts were created by Daniel Vassallo? SELECT COUNT(DISTINCT posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Daniel Vassallo';\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made by Harlan?",
    "SELECT users.DisplayName FROM users JOIN badges ON users.Id = badges.UserId WHERE badges.Score = ( SELECT MAX(badges.Score) FROM badges WHERE badges.UserId = users.Id )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by slashnick has the most answers count? State the post ID.",
    "SELECT posts.`Id` FROM posts JOIN users ON posts.`OwnerUserId` = users.`Id` JOIN badges ON users.`Id` = badges.`UserId` WHERE posts.`Body` LIKE '%slashnick%' AND users.`DisplayName` = 'slashnick' AND badges.`Name` = 'slashnick'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
    "SELECT MAX(SUM(votes.BountyAmount)) FROM votes AS votes INNER JOIN posts AS posts ON votes.PostId = posts.Id INNER JOIN users AS users ON posts.OwnerUserId = users.Id WHERE users.DisplayName IN ('Harvey Motulsky', 'Noah Snyder')\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts by Matt Parker have more than 4 votes?",
    "SELECT SUM(T1.`BountyAmount`) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Matt Parker' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments did Neil McGuigan get in his posts?",
    "-- How many negative comments did Neil McGuigan get in his posts? SELECT SUM(Score) FROM comments JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Neil McGuigan' AND Score < 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State all the tags used by Mark Meckes in his posts that doesn't have comments.",
    "SELECT DISTINCT T1.`TagName` FROM tags AS T1 INNER JOIN posts AS T2 ON T1.`ExcerptPostId` = T2.`Id` INNER JOIN badges AS T3 ON T2.`OwnerUserId` = T3.`UserId` INNER JOIN comments AS T4 ON T2.`Id` = T4.`PostId` INNER JOIN users AS T5 ON T4.`UserId` = T5.`Id` WHERE T3.`Name` = 'Mark Meckes' AND T1.`TagName` NOT IN ( SELECT T6.`TagName` FROM postHistory AS T6 INNER JOIN posts AS T7 ON T6.`PostId` = T7.`Id` INNER JOIN badges AS T8 ON T7.`OwnerUserId` = T8.`UserId` WHERE T8.`Name` = 'Mark Meckes' AND T6.`UserDisplayName` IS NOT NULL ) AND T5.`DisplayName` = 'Mark Meckes'\t----- bird -----\tcodebase_community"
  ],
  [
    "List all the name of users that obtained the Organizer Badges.",
    "SELECT T2.`DisplayName` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Organizer' AND T2.`Reputation` > 1000\t----- bird -----\tcodebase_community"
  ],
  [
    "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
    "SELECT COUNT(Id) FROM posts WHERE Tags LIKE '%R%'\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the difference in view count from post posted by mornington and view count from posts posted by Amos.",
    "SELECT T1.OwnerDisplayName, T2.OwnerDisplayName, T1.Views - T2.Views FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Mornington' AND T1.OwnerDisplayName = 'Amos'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users received commentator badges in 2014?",
    "SELECT badges.Name FROM badges JOIN users ON badges.UserId = users.Id JOIN posts ON badges.PostId = posts.Id JOIN comments ON posts.Id = comments.PostId JOIN postHistory ON comments.PostId = postHistory.PostId JOIN postLinks ON postHistory.PostId = postLinks.PostId JOIN posts ON postLinks.PostId = posts.Id JOIN tags ON posts.Id = tags.ExcerptPostId WHERE EXTRACT(YEAR FROM STRPTIME(DATE, '%Y-%m-%d %H:%M:%f')) = 2014 AND users.Reputation > 5000 AND comments.UserDisplayName IS NOT NULL AND tags.TagName NOT IN ('zipf', 'zero-inflation', 'zero-inflated', 'z-test', 'z-statistic', 'yates-correction') ORDER BY badges.Name ASC\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created on 21st July, 2010?",
    "SELECT COUNT(DISTINCT T1.`AccountId`) FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Date` BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the display names and ages of user who got the highest in views?",
    "SELECT T1.`DisplayName`, T1.`Age` FROM users AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`UserId` ORDER BY T2.`Id` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
    "SELECT SUM(T1.Count) FROM tags AS T1 WHERE T1.TagName = 'Chris' AND T1.TagName IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments were given by user ID 13?",
    "SELECT creationDate FROM votes WHERE UserId = 13\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post title which got positive comments and display names of the users who posted those comments.",
    "SELECT T1.`Title`, T2.`UserDisplayName` FROM posts AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`Score` > 60 AND T2.`UserDisplayName` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the badge names received in 2011 for the user whose location is in the North Pole.",
    "SELECT badges.`Name` FROM badges INNER JOIN users ON badges.`UserId` = users.`Id` WHERE users.`Id` = ( SELECT posts.`OwnerUserId` FROM posts ORDER BY posts.`ViewCount` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the users' display names and available website URLs of the post with favorite count of more than 150.",
    "SELECT T1.OwnerDisplayName, T1.WebsiteUrl FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.FavoriteCount > 150 AND T1.WebsiteUrl IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post history counts and last edit date of the post title \"What is the best introductory Bayesian statistics textbook?\"",
    "SELECT COUNT(*) FROM postLinks WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'What is the best introductory Bayesian statistics textbook?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the last accessed date and location of the users who received the outliers badge.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the related post title of \"How to tell if something happened in a data set which monitors a value over time\".",
    "SELECT users.Id, users.DisplayName, users.LastAccessDate FROM votes JOIN users ON votes.UserId = users.Id WHERE votes.BountyAmount IS NOT NULL ORDER BY users.LastAccessDate DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "List the post IDs and badge names of the user Samuel in 2013.",
    "SELECT T1.`PostId`, T2.`Name` FROM badges AS T2 INNER JOIN votes AS T1 ON T2.`UserId` = T1.`UserId` WHERE T2.`Name` IS NOT NULL AND T1.`PostId` = ( SELECT `Id` FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Samuel' AND YEAR(CreationDate) = 2013 ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner's display name of the most popular post?",
    "SELECT posts.OwnerDisplayName FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE posts.OwnerDisplayName IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the display name and location of the user who owned the excerpt post with hypothesis-testing tag.",
    "SELECT users.`DisplayName`, users.`Location` FROM users INNER JOIN badges ON users.`Id` = badges.`UserId` INNER JOIN postHistory ON badges.`PostId` = postHistory.`PostId` INNER JOIN posts ON postHistory.`PostId` = posts.`Id` INNER JOIN postLinks ON posts.`Id` = postLinks.`PostId` INNER JOIN tags ON postLinks.`PostId` = tags.`ExcerptPostId` WHERE tags.`TagName` = 'hypothesis-testing'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write down the related posts titles and link type IDs of the post \"What are principal component scores?\".",
    "SELECT T1.`Body`, T2.`LinkTypeId` FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`Title` = 'What are principal component scores?'\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the display name of the parent ID for child post with the highest score.",
    "SELECT T1.`OwnerDisplayName` FROM posts AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`Score` = ( SELECT MAX(comments.`Score`) FROM comments INNER JOIN posts ON comments.`PostId` = posts.`Id` )\t----- bird -----\tcodebase_community"
  ],
  [
    "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
    "SELECT T1.`DisplayName`, T1.`WebsiteUrl` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`VoteTypeId` = 8 AND T2.`BountyAmount` = ( SELECT MAX(BountyAmount) FROM votes WHERE VoteTypeId = 8 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the titles of the top 5 posts with the highest popularity?",
    "-- What are the titles of the top 5 posts with the highest popularity? SELECT T1.Title FROM posts AS T1 INNER JOIN ( SELECT T2.PostId FROM postHistory AS T2 INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T3.AccountId = 1 AND T2.PostHistoryTypeId = 2 ORDER BY T2.CreationDate DESC LIMIT 5 ) AS T4 ON T1.Id = T4.PostId ORDER BY T1.Views DESC\t----- bird -----\tcodebase_community"
  ],
  [
    "How many tags have post count between 5,000 to 7,000?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN posts AS T3 ON T2.`PostId` = T3.`Id` INNER JOIN badges AS T4 ON T1.`Id` = T4.`UserId` WHERE T3.`Score` BETWEEN T4.`Count` AND (T4.`Count` + 7000) AND T4.`Name` NOT IN ('Student', 'Popular Question') ORDER BY T3.`Score` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner user id of the most valuable post?",
    "SELECT posts.`OwnerUserId` FROM posts WHERE posts.`FavoriteCount` = ( SELECT MAX(FavoriteCount) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "How old is the most influential user?",
    "SELECT users.`DisplayName`, users.`Reputation` FROM users JOIN badges ON users.`Id` = badges.`UserId` WHERE badges.`Name` = 'Influential' AND users.`Reputation` = ( SELECT MAX(users.`Reputation`) FROM users JOIN badges ON users.`Id` = badges.`UserId` WHERE badges.`Name` = 'Influential' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts with votes that were created in 2011 have a bounty of 50?",
    "-- How many posts with votes that were created in 2011 have a bounty of 50? SELECT COUNT(DISTINCT T1.`UserId`) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` INNER JOIN users AS T3 ON T1.`UserId` = T3.`Id` WHERE T2.`CreationDate` >= '2011-01-01' AND T2.`CreationDate` < '2012-01-01' AND T1.`BountyAmount` = 50 GROUP BY T1.`UserId` HAVING COUNT(T1.`Id`) > 0\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the id of the youngest user?",
    "SELECT users.DisplayName FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE votes.VoteTypeId = 1 ORDER BY votes.UpVotes ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score of the post with the most popular tag?",
    "SELECT T1.`Score` FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T2.`TagName` = ( SELECT T3.`TagName` FROM tags AS T3 INNER JOIN posts AS T4 ON T3.`ExcerptPostId` = T4.`Id` WHERE T4.`ViewCount` = ( SELECT MAX(T5.`ViewCount`) FROM posts AS T5 INNER JOIN tags AS T6 ON T5.`Id` = T6.`ExcerptPostId` ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average monthly number of links created in 2010 for posts that have no more than 2 answers?",
    "-- What is the average monthly number of links created in 2010 for posts that have no more than 2 answers? SELECT AVG(DATEDIFF(MONTH, CreationDate, NOW()) / 12) FROM postLinks JOIN posts ON postLinks.PostId = posts.Id WHERE posts.ParentId IS NULL AND YEAR(posts.CreationDate) = 2010 AND posts.AnswerCount <= 2\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts that were voted by user 1465, what is the id of the most valuable post?",
    "SELECT T3.`Id` FROM posts AS T3 INNER JOIN votes AS T4 ON T3.`Id` = T4.`PostId` INNER JOIN badges AS T5 ON T3.`OwnerUserId` = T5.`UserId` WHERE T3.`OwnerUserId` = 1465 AND T5.`Name` IN ('Student', 'Supporter', 'Editor', 'Scholar', 'Teacher', 'Popular Question') AND T4.`BountyAmount` IS NOT NULL GROUP BY T3.`Id` ORDER BY COUNT(T4.`Id`) DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post with the oldest post link?",
    "SELECT posts.`Title` FROM posts INNER JOIN postLinks ON posts.`Id` = postLinks.`PostId` WHERE postLinks.`CreationDate` = ( SELECT MIN(postLinks.`CreationDate`) FROM posts INNER JOIN postLinks ON posts.`Id` = postLinks.`PostId` )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the highest amount of badges?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` GROUP BY T1.`DisplayName` ORDER BY COUNT(T2.`Name`) DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "When did \"chl\" cast its first vote in a post?",
    "SELECT MIN(T1.`CreationDate`) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`OwnerUserId` = ( SELECT T3.`Id` FROM users AS T3 WHERE T3.`DisplayName` = 'chl' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the date when the youngest user made his or her first post?",
    "SELECT MIN(users.`Id`) FROM users WHERE users.`LastAccessDate` = (SELECT MIN(LastAccessDate) FROM users)\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the first Autobiographer badge?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Name` = 'Autobiographer' AND T2.`Date` = ( SELECT MIN(Date) FROM badges WHERE Name = 'Autobiographer' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?",
    "SELECT COUNT(*) FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.`Location` = 'United Kingdom' AND T1.`Age` > 25 AND T2.`FavoriteCount` >= 4\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of posts voted by the oldest users?",
    "SELECT AVG(votes.`BountyAmount`) FROM votes JOIN posts ON votes.`PostId` = posts.`Id` JOIN users ON votes.`UserId` = users.`Id` WHERE posts.`Id` IN ( SELECT posts.`Id` FROM posts JOIN users ON posts.`OwnerUserId` = users.`Id` WHERE users.`Age` = ( SELECT MIN(users2.`Age`) FROM users AS users2 WHERE users2.`Age` IS NOT NULL ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Who has the highest reputation? Please give the display name.",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Reputation` = ( SELECT MAX(T2.`Reputation`) FROM users AS T2 )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users whose reputations are higher than 2000 and the number of views is higher than 1000?",
    "SELECT COUNT(*) FROM users JOIN badges ON users.Id = badges.UserId JOIN posts ON users.Id = posts.OwnerUserId WHERE badges.Reputation > 2000 AND posts.ViewCount > 1000\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all display names of users who are adults.",
    "-- Please list all display names of users who are adults. SELECT DISTINCT badges.Name FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.Age BETWEEN 19 AND 65 AND users.DisplayName IS NOT NULL ORDER BY badges.Name ASC\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts did Jay Stevens have in 2010?",
    "SELECT COUNT(*) FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE YEAR(posts.CreationDate) = 2010 AND users.DisplayName = 'Jay Stevens'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by Harvey Motulsky has the most views? Please give the id and title of this post.",
    "SELECT posts.`Id`, posts.`Title` FROM posts JOIN users ON posts.`OwnerUserId` = users.`Id` JOIN badges ON users.`Id` = badges.`UserId` WHERE users.`DisplayName` = 'Harvey Motulsky' AND badges.`Name` = 'Supporter' AND posts.`ViewCount` = ( SELECT MAX(posts2.`ViewCount`) FROM posts AS posts2 JOIN users ON posts2.`OwnerUserId` = users.`Id` JOIN badges ON posts2.`OwnerUserId` = badges.`UserId` WHERE users.`DisplayName` = 'Harvey Motulsky' AND badges.`Name` = 'Supporter' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post has the highest score? Please give its id and title's name.",
    "SELECT posts.`Title` FROM posts WHERE posts.`Score` = ( SELECT MAX(Score) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of Stephen Turner's posts?",
    "SELECT AVG(Score) FROM comments JOIN users ON comments.`UserId` = users.`Id` WHERE users.`DisplayName` = 'Stephen Turner';\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the users' display names whose posts had over 20000 views in 2011.",
    "-- Please list the users' display names whose posts had over 20000 views in 2011. SELECT DISTINCT T1.DisplayName FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN badges AS T3 ON T1.Id = T3.UserId WHERE T2.CreationDate >= '2011-01-01' AND T2.CreationDate < '2012-01-01' AND T2.ViewCount > 20000 AND T3.Name = 'Supporter'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which is the most valuable post in 2010? Please give its id and the owner's display name.",
    "SELECT posts.`OwnerDisplayName` FROM posts JOIN badges ON posts.`OwnerUserId` = badges.`UserId` JOIN users ON badges.`UserId` = users.`Id` WHERE YEAR(posts.`LastEditDate`) = 2010 AND posts.`FavoriteCount` = ( SELECT MAX(T2.`FavoriteCount`) FROM posts AS T2 JOIN badges ON T2.`OwnerUserId` = badges.`UserId` JOIN users ON badges.`UserId` = users.`Id` WHERE YEAR(T2.`LastEditDate`) = 2010 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage of posts whose owners had a reputation of over 1000 in 2011?",
    "SELECT DIVIDE(COUNT(posts.Id), COUNT(posts.Id)) * 100 as percentage FROM posts INNER JOIN users ON posts.`OwnerUserId` = users.`Id` WHERE users.`Reputation` > 1000 AND YEAR(posts.`CreationDate`) = 2011\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the percentage of teenage users.",
    "SELECT FLOOR(COUNT(Id) / (SELECT COUNT(*) FROM users WHERE Reputation > 4000)) as percentage FROM users\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.",
    "SELECT SUM(votes.Views), MAX(posts.LastEditorDisplayName) FROM votes AS votes INNER JOIN posts AS posts ON votes.PostId = posts.Id WHERE posts.Body = 'Computer Game Datasets'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total number of posts with views above average.",
    "SELECT COUNT(*) FROM posts WHERE posts.`ViewCount` > ( SELECT AVG(posts.`ViewCount`) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments were added to the post with the highest score?",
    "SELECT COUNT(*) FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE Score = ( SELECT MAX(Score) FROM posts ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
    "SELECT COUNT(*) FROM posts AS T1 INNER JOIN ( SELECT `PostId` FROM votes WHERE `VoteTypeId` = 2 GROUP BY `PostId` HAVING COUNT(*) > 0 ) AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`ViewCount` > 35000 AND T1.`Id` IN ( SELECT `PostId` FROM votes WHERE `VoteTypeId` = 2 GROUP BY `PostId` HAVING COUNT(*) = 0 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the display name and location of the user, who was the last to edit the post with ID 183.",
    "SELECT T2.`DisplayName`, T2.`Location` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T1.`Id` = 183\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the latest badge awarded to the user with the display name Emmett.",
    "SELECT T1.`Name` FROM badges AS T1 JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'Emmett' ORDER BY T1.`Date` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of adult users who have cast over 5000 upvotes.",
    "SELECT COUNT(*) FROM votes AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`VoteTypeId` = 2 AND T2.`Age` NOT BETWEEN 19 AND 65 AND T1.`BountyAmount` > 5000\t----- bird -----\tcodebase_community"
  ],
  [
    "How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created.",
    "SELECT users.`Views` FROM users JOIN badges ON users.`Id` = badges.`UserId` WHERE users.`DisplayName` = 'Zolomon'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts and comments left by the user, who has the latest created user account.",
    "SELECT COUNT(posts.`Id`), COUNT(comments.`Id`) FROM posts INNER JOIN users ON posts.`OwnerUserId` = users.`Id` INNER JOIN comments ON comments.`UserId` = users.`Id` WHERE users.`CreationDate` = ( SELECT MAX(users.`CreationDate`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the text of the latest comment to the post with the title 'Analysing wind data with R' and the display name of the user who left it.",
    "SELECT T1.Text, T3.DisplayName FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T2.Title = 'Analysing wind data with R' AND T1.CreationDate = ( SELECT MAX(T4.CreationDate) FROM comments AS T4 WHERE T4.PostId = ( SELECT T5.Id FROM posts AS T5 WHERE T5.Title = 'Analysing wind data with R' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were awarded with 'Citizen Patrol' badge?",
    "SELECT MAX(Reputation) FROM users WHERE Id IN ( SELECT UserId FROM badges WHERE Name = 'Citizen Patrol' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Count the number of posts with a tag specified as 'careers'.",
    "-- Count the number of posts with a tag specified as 'careers'. SELECT COUNT(*) FROM posts AS T1 JOIN postLinks AS T2 ON T1.`Id` = T2.`PostId` JOIN tags AS T3 ON T2.`PostId` = T3.`ExcerptPostId` WHERE T3.`TagName` = 'careers'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
    "SELECT COUNT(DISTINCT T1.`UserId`), COUNT(DISTINCT T2.`Id`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` INNER JOIN posts AS T3 ON T2.`Id` = T3.`OwnerUserId` INNER JOIN postLinks AS T4 ON T3.`Id` = T4.`PostId` WHERE T4.`LinkTypeId` = 2\t----- bird -----\tcodebase_community"
  ],
  [
    "When did the user known as 'IrishStat' create his or her account?",
    "SELECT `CreationDate` FROM users WHERE `DisplayName` = 'IrishStat'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that offer a bounty amount over 30.",
    "SELECT COUNT(DISTINCT votes.`UserId`) FROM votes WHERE BountyAmount >= 30 AND votes.`UserId` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
    "SELECT T1.`Id` FROM users AS T1 INNER JOIN ( SELECT `PostId` FROM votes WHERE `VoteTypeId` = 1 AND `UserId` IN ( SELECT `Id` FROM users WHERE `Reputation` >= ( SELECT MAX(`Reputation`) FROM users ) ) ) AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`Id` IN ( SELECT `OwnerUserId` FROM posts WHERE `Score` >= ( SELECT MAX(`Score`) FROM posts ) ) AND T1.`Id` IN ( SELECT `UserId` FROM postHistory WHERE `CreationDate` >= ( SELECT MAX(`CreationDate`) FROM postHistory ) ) AND T1.`Id` IN ( SELECT `UserId` FROM comments WHERE `CreationDate` >= ( SELECT MAX(`CreationDate`) FROM comments ) ) AND T1.`Id` IN ( SELECT `UserId` FROM badges WHERE `Date` >= ( SELECT MAX(`Date`) FROM badges ) ) AND T1.`Id` IN ( SELECT `UserId` FROM postLinks WHERE `CreationDate` >= ( SELECT MAX(`CreationDate`) FROM postLinks ) ) AND T1.`Id` IN ( SELECT `UserId` FROM tags WHERE `Count` >= ( SELECT MAX(`Count`) FROM tags ) ) AND T1.`Id` IN ( SELECT `UserId` FROM votes WHERE `BountyAmount` >= ( SELECT MAX(`BountyAmount`) FROM votes ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "Among the tags with tag ID below 15, how many of them have 20 count of posts and below?",
    "SELECT COUNT(*) FROM tags WHERE `Id` < 15 AND `Count` <= 20\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the excerpt post ID and wiki post ID of the tag named sample?",
    "SELECT T1.`ExcerptPostId`, T1.`WikiPostId` FROM tags AS T1 WHERE T1.`TagName` = 'sample'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".",
    "SELECT T1.`UpVotes` FROM users AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Text` = 'fine, you win :)'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the texts commented on the post about linear regression.",
    "SELECT COUNT(DISTINCT T2.`PostId`) FROM badges AS T1 INNER JOIN comments AS T2 ON T1.`UserId` = T2.`UserId` WHERE T2.`Text` = 'How can I adapt ANOVA for binary data?'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
    "SELECT T1.`Text` FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`ViewCount` BETWEEN 100 AND 150 AND T1.`Score` = ( SELECT MAX(T3.`Score`) FROM comments AS T3 INNER JOIN posts AS T4 ON T3.`PostId` = T4.`Id` WHERE T4.`ViewCount` BETWEEN 100 AND 150 )\t----- bird -----\tcodebase_community"
  ],
  [
    "List the creation date and age of the user that commented with webiste.",
    "SELECT users.`DisplayName`, users.`Reputation`, MAX(posts.`CreationDate`) - MIN(posts.`CreationDate`) AS `Age` FROM users INNER JOIN badges ON users.`Id` = badges.`UserId` INNER JOIN comments ON users.`Id` = comments.`UserId` INNER JOIN posts ON comments.`PostId` = posts.`Id` INNER JOIN postHistory ON posts.`Id` = postHistory.`PostId` INNER JOIN postLinks ON posts.`Id` = postLinks.`PostId` INNER JOIN votes ON users.`Id` = votes.`UserId` WHERE badges.`Name` = 'Commenter' AND comments.`Text` LIKE '%http://%' AND votes.`BountyAmount` IS NOT NULL GROUP BY users.`Id` ORDER BY `Age` DESC;\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with 0 score, how many of the posts have view count lower than 5?",
    "SELECT COUNT(*) FROM comments INNER JOIN posts ON comments.`PostId` = posts.`Id` WHERE comments.Score < 5 AND posts.ViewCount < 5\t----- bird -----\tcodebase_community"
  ],
  [
    "In posts with 1 comment, how many of the comments have 0 score?",
    "SELECT COUNT(*) FROM comments WHERE Score = 0 AND PostId IN ( SELECT Id FROM posts WHERE CommentCount = 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among products comments with 0 score, what is the total number of users ages 40 years old?",
    "SELECT T2.`Age` FROM votes AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`BountyAmount` IS NOT NULL ORDER BY T2.`Age` ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?",
    "SELECT T1.`Id`, T2.`Comment` FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`Title` = 'Group differences on a five point Likert item'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the up vote number of the user that commented \"R is also lazy evaluated.\"?",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Id` = ( SELECT `UserId` FROM comments WHERE `Text` = 'R is also lazy evaluated.' )\t----- bird -----\tcodebase_community"
  ],
  [
    "List the comments commented by the user with a username of Harvey Motulsky.",
    "SELECT T1.`CreationDate` FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'Harvey Motulsky'\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN comments AS T3 ON T2.`PostId` = T3.`Id` WHERE T2.`DownVotes` = 0 AND T3.`Score` BETWEEN 1 AND 5 AND T3.`UserDisplayName` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
    "SELECT ( SELECT COUNT(DISTINCT UserId) FROM votes WHERE VoteTypeId = 1 AND PostId IN ( SELECT Id FROM posts WHERE Score BETWEEN 5 and 10 ) ) / ( SELECT COUNT(*) FROM posts WHERE Score BETWEEN 5 and 10 ) * 100 as percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all the superpowers of 3-D Man.",
    "SELECT T3.`power_name` FROM hero_power AS T3 INNER JOIN hero_attribute AS T2 ON T3.`hero_id` = T2.`hero_id` INNER JOIN superpower AS T1 ON T3.`power_id` = T1.`id` WHERE T2.`attribute_value` = '3-D Man'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have the super power of \"Super Strength\"?",
    "-- How many superheroes have the super power of \"Super Strength\"? SELECT COUNT(DISTINCT hero_id) FROM hero_power WHERE power_id IN ( SELECT id FROM superpower WHERE power_name = 'Super Strength' );\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
    "-- Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm? SELECT COUNT(DISTINCT hero.id) FROM hero JOIN hero_power ON hero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND hero.height_cm > 200 AND hero.height_cm IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the full names of all the superheroes with over 15 super powers.",
    "-- Please list the full names of all the superheroes with over 15 super powers. SELECT full_name FROM superhero WHERE id IN ( SELECT hero_id FROM hero_power GROUP BY hero_id HAVING COUNT(power_id) > 15 )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have blue eyes?",
    "-- How many superheroes have blue eyes? SELECT COUNT(*) FROM superhero AS T1 JOIN alignment ON T1.alignment_id = alignment.id JOIN attribute ON hero_attribute.hero_id = attribute.id JOIN colour ON T1.eye_colour_id = colour.id JOIN gender ON T1.gender_id = gender.id JOIN publisher ON T1.publisher_id = publisher.id JOIN race ON T1.race_id = race.id WHERE colour.colour = 'Blue' AND attribute.attribute_name = 'Blue eyes'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the colour of Apocalypse's skin?",
    "SELECT T1.`gender` FROM superhero AS T1 JOIN gender AS T2 ON T1.`gender_id` = T2.`id` WHERE T1.`superhero_name` = 'Apocalypse'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?",
    "SELECT COUNT(*) FROM hero_power JOIN superpower ON hero_power.`power_id` = superpower.`id` JOIN hero_attribute ON hero_attribute.`hero_id` = hero_power.`hero_id` JOIN superhero ON superhero.`id` = hero_attribute.`hero_id` WHERE superpower.`power_name` = 'Agility' AND hero_attribute.`attribute_value` = 'Agility' AND hero_attribute.`attribute_id` = 3 AND hero_power.`hero_id` = 1 AND superhero.`eye_colour_id` = 2 AND superhero.`race_id` = 5 AND superhero.`skin_colour_id` = 1 AND superhero.`gender_id` = 2 AND superhero.`alignment_id` = 1 AND (superhero.`height_cm` IS NOT NULL AND superhero.`weight_kg` IS NOT NULL)\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes are published by Marvel Comics?",
    "SELECT hero_id, COUNT(DISTINCT power_id) FROM hero_power GROUP BY hero_id\t----- bird -----\tsuperhero"
  ],
  [
    "Please give the full name of the tallest hero published by Marvel Comics.",
    "SELECT full_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Marvel Comics' AND publisher.id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND height_cm = (SELECT MAX(height_cm) FROM superhero WHERE publisher_name = 'Marvel Comics')\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the publisher of Sauron?",
    "SELECT T1.`publisher_name` FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.`id` = T2.`publisher_id` WHERE T2.`superhero_name` = 'Sauron'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, how many of them have blue eyes?",
    "-- Among the superheroes from Marvel Comics, how many of them have blue eyes? SELECT COUNT(*) FROM publisher INNER JOIN superhero ON publisher.id = superhero.publisher_id INNER JOIN hero_attribute ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON attribute.id = hero_attribute.attribute_id INNER JOIN colour ON colour.id = hero_attribute.attribute_id WHERE publisher.publisher_name = 'Marvel Comics' AND colour.colour = 'Blue' AND attribute.attribute_name = 'Eyes'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of the superheroes from Marvel Comics?",
    "SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Marvel Comics' AND height_cm IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of \"Super Strength\"?",
    "SELECT MULTIPLY(DIVIDE(SUM(superpower.power_name = 'Super Strength'), COUNT(superhero.id)), 100) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN superpower ON superhero.id = hero_power.hero_id JOIN hero_power ON hero_power.power_id = superpower.id WHERE publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes did DC Comics publish?",
    "-- How many DC Comics superpowers are there? SELECT COUNT(DISTINCT superpower.id) FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN hero_attribute ON hero_power.hero_id = hero_attribute.hero_id JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') AND alignment_id IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher published the slowest superhero?",
    "SELECT publisher.publisher_name FROM publisher INNER JOIN ( SELECT hero_id, MIN(hero_attribute.attribute_value) AS min_attribute_value FROM hero_attribute GROUP BY hero_attribute.hero_id ) AS T2 ON publisher.id = T2.hero_id WHERE T2.min_attribute_value = ( SELECT MIN(hero_attribute.attribute_value) FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE hero_attribute.attribute_name = 'Speed' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many gold-eyed superheroes did Marvel Comics publish?",
    "-- How many gold-eyed superheroes did Marvel Comics publish? SELECT COUNT(DISTINCT hero_id) FROM hero_attribute INNER JOIN publisher ON hero_attribute.hero_id = publisher.id WHERE publisher_name = 'Marvel Comics' AND eye_colour_id = colour.id AND colour.colour = 'Gold'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher's name of Blue Beetle II?",
    "SELECT publisher.publisher_name FROM publisher JOIN hero ON publisher.id = hero.publisher_id JOIN alignment ON hero.alignment_id = alignment.id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON hero.eye_colour_id = colour.id JOIN gender ON hero.gender_id = gender.id JOIN race ON hero.race_id = race.id JOIN publisher ON hero.publisher_id = publisher.id WHERE hero.superhero_name = 'Blue Beetle II' AND alignment.alignment = 'Bad' AND attribute.attribute_name = 'Power' AND colour.colour = 'Yellow/Red' AND gender.gender = 'Male' AND race.race = 'Zombie' ORDER BY publisher.publisher_name;\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes with blonde hair are there?",
    "SELECT AVG(hero_attribute.attribute_value) FROM hero_power INNER JOIN hero_attribute ON hero_power.hero_id = hero_attribute.hero_id WHERE hero_attribute.attribute_id = 1\t----- bird -----\tsuperhero"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "What is Copycat's race?",
    "SELECT race.race FROM race JOIN hero_power ON race.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Copycat'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have durability of less than 50?",
    "SELECT AVG(superhero.`weight_kg`) FROM superhero INNER JOIN hero_power ON superhero.`id` = hero_power.`hero_id` INNER JOIN superpower ON hero_power.`power_id` = superpower.`id` WHERE superpower.`power_name` LIKE 'Wind%'\t----- bird -----\tsuperhero"
  ],
  [
    "What are the names of the superheroes with the power of death touch?",
    "-- What are the names of the superheroes with the power of death touch? SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Death Touch'\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes have a strength value of 100?",
    "SELECT AVG(T1.`power_id`) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Captain Marvel' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the name of the superhero that has the most powers?",
    "SELECT hero_name FROM ( SELECT hero_id, COUNT(power_id) AS power_count FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id GROUP BY hero_id ORDER BY power_count DESC LIMIT 1 ) AS T2 INNER JOIN superhero AS T1 ON T1.id = T2.hero_id\t----- bird -----\tsuperhero"
  ],
  [
    "How many vampire superheroes are there?",
    "SELECT T1.`power_name`, COUNT(DISTINCT T1.`gender_id`) AS `gender_count` FROM superpower AS T1 JOIN hero_power AS T2 ON T1.`id` = T2.`power_id` WHERE T1.`gender_id` IS NOT NULL AND T1.`power_name` != 'None' GROUP BY T1.`power_name` ORDER BY `gender_count` DESC, `gender_count` ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
    "SELECT DIVIDE(SUM(CASE WHEN alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END), COUNT(superhero.id)) AS percentage, SUM(CASE WHEN alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS count FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE alignment.alignment IN ('Bad', 'Neutral') GROUP BY alignment.alignment\t----- bird -----\tsuperhero"
  ],
  [
    "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
    "SELECT publisher.publisher_name, COUNT(superhero.id) FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY COUNT(superhero.id) DESC\t----- bird -----\tsuperhero"
  ],
  [
    "Give the publisher ID of Star Trek.",
    "SELECT publisher.publisher_name FROM publisher JOIN hero_power ON publisher.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Star Trek'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all superheroes.",
    "-- Calculate the average attribute value of all superheroes. SELECT AVG(T3.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id INNER JOIN alignment AS T4 ON T3.alignment_id = T4.id WHERE T3.alignment_id != 1 AND T3.alignment NOT IN ('Good', 'N/A')\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes without full name?",
    "SELECT AVG(height_cm) FROM superhero WHERE full_name IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye colour of superhero with superhero ID 75?",
    "SELECT T1.`full_name` FROM superhero AS T1 WHERE T1.`id` = 75\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the superpowers of the superhero called Deathlok.",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT T3.`id` FROM superhero AS T3 WHERE T3.`superhero_name` = 'Deathlok' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average weight of all female superheroes?",
    "SELECT AVG(superhero.weight_kg) FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Yautja'\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five superpowers of male superheroes.",
    "-- List down at least five superpowers of male superheroes. SELECT DISTINCT T3.power_name FROM hero_attribute AS T1 INNER JOIN hero_power AS T2 ON T1.hero_id = T2.hero_id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.gender = 'Male' AND T1.attribute_value = 'Web Creation' AND T1.attribute_id IN ( SELECT attribute.id FROM attribute WHERE attribute.attribute_name = 'Power' ) AND T2.power_id IN ( SELECT superpower.id FROM superpower WHERE superpower.power_name IS NOT NULL ) ORDER BY T3.superhero_name ASC LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "Give the name of the alien superheroes.",
    "SELECT T1.`superhero_name`, T1.`full_name` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 WHERE T1.`eye_colour_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpower of hero ID 56?",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 56\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full name of Demi-God superheroes.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN ( SELECT race_id FROM hero_power GROUP BY race_id HAVING COUNT(*) >= 5 ) AS T2 ON T1.`race_id` = T2.`race_id` WHERE T1.`race` = 'Demi-God' ORDER BY T1.`full_name` ASC LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "How many bad superheroes are there?",
    "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment_id = 'Bad' GROUP BY hero_attribute.attribute_value ORDER BY COUNT(hero_attribute.attribute_value) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the race of the superhero who weighed 169 kg.",
    "SELECT hero_power.`power_id` FROM hero_attribute INNER JOIN hero_power ON hero_attribute.`hero_id` = hero_power.`hero_id` INNER JOIN superhero ON hero_power.`power_id` = superhero.`id` WHERE superhero.`full_name` = 'Richard John Grayson'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hair colour of the human superhero who is 185 cm tall.",
    "SELECT T1.`full_name` FROM superhero AS T1 JOIN race ON T1.`race_id` = race.`id` JOIN attribute ON hero_attribute.`attribute_id` = attribute.`id` JOIN superpower ON hero_power.`power_id` = superpower.`id` JOIN colour ON T1.`hair_colour_id` = colour.`id` JOIN gender ON T1.`gender_id` = gender.`id` JOIN publisher ON T1.`publisher_id` = publisher.`id` JOIN alignment ON T1.`alignment_id` = alignment.`id` WHERE race.`race` = 'human' AND T1.`height_cm` = 185 AND attribute.`attribute_name` = 'Height' AND superpower.`power_name` = 'Tall' AND T1.`hair_colour_id` IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye clolour of the heaviest superhero?",
    "-- What is the eye colour of the heaviest superhero? SELECT T1.`eye_colour` FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T1.`weight_kg` = ( SELECT MAX(T3.`weight_kg`) FROM superhero AS T3 INNER JOIN alignment AS T4 ON T3.`alignment_id` = T4.`id` )\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",
    "SELECT ( SELECT MULTIPLY(DIVIDE(SUM(publisher_id = 13), COUNT(publisher_id)), 100, 1) FROM publisher INNER JOIN hero_power ON hero_power.power_id = superpower.id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = 13 AND publisher.id = publisher_id )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes.",
    "-- Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes. SELECT full_name FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN race ON superhero.race_id = race.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE gender.value = 'Male' AND race.value NOT LIKE '%Zombie%' AND publisher.value NOT LIKE '%SyFy%' AND alignment.value NOT LIKE '%Bad%' AND weight_kg > (SELECT AVG(weight_kg) * 0.79 FROM superhero) ORDER BY weight_kg DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Which power do superheroes have the most of?",
    "SELECT T1.superhero_name, T1.power_name, T2.alignment FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id JOIN alignment ON T1.alignment_id = alignment.id GROUP BY T1.superhero_name, T1.power_name, alignment ORDER BY COUNT(T1.power_id) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Indicate the attribute value of superhero Abomination.",
    "SELECT T4.`superhero_name` FROM hero_power AS T3 INNER JOIN superhero AS T4 ON T3.`hero_id` = T4.`id` WHERE T3.`power_id` = ( SELECT `id` FROM hero_attribute AS T5 INNER JOIN attribute AS T6 ON T5.`attribute_id` = T6.`id` WHERE T5.`hero_id` = ( SELECT `id` FROM hero_power AS T7 INNER JOIN superhero AS T8 ON T7.`hero_id` = T8.`id` ORDER BY `id` DESC LIMIT 1 ) )\t----- bird -----\tsuperhero"
  ],
  [
    "What are the superpowers of heroes with ID 1?",
    "SELECT DISTINCT T1.superhero_name, T1.full_name, T1.height_cm, T1.weight_kg, T2.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id JOIN hero_attribute AS T3 ON T1.hero_id = T3.hero_id JOIN superhero AS T4 ON T3.hero_id = T4.id WHERE T4.id = 1 ORDER BY T1.height_cm DESC, T1.weight_kg DESC\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have stealth power?",
    "SELECT AVG(T3.attribute_value) FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id JOIN superpower AS T3 ON T1.power_id = T3.id WHERE T3.power_name = 'Weather Control' AND T2.attribute_name = 'Speed'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the hero's full name with the highest attribute in strength?",
    "SELECT T1.superhero_name, T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'strength' AND T2.attribute_value IS NOT NULL GROUP BY T1.superhero_name, T1.full_name ORDER BY MAX(T2.attribute_value) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average of superheroes with no skin colour?",
    "SELECT AVG(hero_attribute.attribute_id) FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE hero_attribute.hero_id IN ( SELECT id FROM superhero WHERE skin_colour_id = 1 AND race_id IS NOT NULL ) GROUP BY hero_attribute.attribute_id\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes were published by Dark Horse Comics?",
    "-- How many superheroes were published by Dark Horse Comics? SELECT COUNT(*) FROM publisher INNER JOIN superpower ON publisher.id = superpower.id WHERE publisher.publisher_name = 'Dark Horse Comics';\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the most durability published by Dark Horse Comics?",
    "SELECT T2.superhero_name FROM hero_power AS T1 INNER JOIN hero AS T2 ON T1.hero_id = T2.id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN colour AS T4 ON T2.skin_colour_id = T4.id INNER JOIN gender AS T5 ON T2.gender_id = T5.id INNER JOIN publisher AS T6 ON T2.publisher_id = T6.id INNER JOIN race AS T7 ON T2.race_id = T7.id INNER JOIN alignment AS T8 ON T2.alignment_id = T8.id WHERE T1.power_name = 'Weapon-based Powers' AND T3.attribute_name = 'Durability' AND T4.colour NOT IN ('None', 'None') AND T5.gender NOT IN ('N/A', 'None') AND T6.publisher_name = 'Dark Horse Comics' AND T7.race NOT IN ('Zombie', 'None') AND T8.alignment NOT IN ('Neutral', 'N/A') GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eyes colour of Abraham Sapien?",
    "SELECT alignment.alignment FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id JOIN alignment ON T2.alignment_id = alignment.id WHERE T2.superhero_name = 'Abraham Sapien' AND T2.full_name = 'Richard John Grayson'\t----- bird -----\tsuperhero"
  ],
  [
    "List the name of superheroes with flight power.",
    "-- List the name of superheroes with the highest flight power. SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = ( SELECT MAX(T4.`power_name`) FROM hero_power AS T4 INNER JOIN superpower AS T5 ON T4.`power_id` = T5.`id` WHERE T5.`power_name` = 'Flight' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
    "-- List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics. SELECT T1.`eye_colour_id`, T1.`hair_colour_id`, T1.`skin_colour_id`, T2.`superhero_name`, T2.`full_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`gender_id` = 2 AND T2.`publisher_name` = 'Dark Horse Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
    "SELECT T1.`publisher_name` FROM hero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN hero_attribute AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN attribute AS T4 ON T3.`attribute_id` = T4.`id` WHERE T4.`attribute_name` = 'Eyes' AND T3.`attribute_value` = ( SELECT attribute_value FROM attribute WHERE attribute_name = 'Eyes' ) AND T3.`attribute_id` = ( SELECT attribute_id FROM attribute WHERE attribute_name = 'Eyes' ) GROUP BY T1.`publisher_name` HAVING COUNT(T1.`id`) = ( SELECT COUNT(T5.`id`) FROM hero AS T5 INNER JOIN publisher AS T6 ON T5.`publisher_id` = T6.`id` WHERE T5.`hair_colour_id` = T6.`id` AND T5.`skin_colour_id` = T6.`id` )\t----- bird -----\tsuperhero"
  ],
  [
    "Which group does superhero A-Bomb belong to?",
    "SELECT T1.`id` FROM superpower AS T1 JOIN hero_power AS T2 ON T1.`id` = T2.`power_id` JOIN hero AS T3 ON T2.`hero_id` = T3.`id` JOIN alignment AS T4 ON T3.`alignment_id` = T4.`id` WHERE T3.`superhero_name` = 'A-Bomb' AND T4.`superhero_name` = 'A-Bomb'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of blue female superheroes among all female superheroes?",
    "SELECT T1.`superhero_name`, T2.`attribute_value`, T3.`attribute_name` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` INNER JOIN superpower AS T3 ON T1.`power_id` = T3.`id` WHERE T2.`attribute_name` = 'Strength' AND T1.`hero_id` IN ( SELECT `id` FROM hero WHERE `gender_id` = 2 AND `superhero_name` IS NOT NULL )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hero name and race of Charles Chandler.",
    "SELECT T1.`power_id` FROM hero_power AS T1 WHERE T1.`hero_id` = ( SELECT T3.`id` FROM superhero AS T3 WHERE T3.`full_name` = 'Charles Chandler' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the gender of Agent 13 hero?",
    "SELECT T3.`power_name` FROM superpower AS T3 INNER JOIN hero_power AS T2 ON T3.`id` = T2.`power_id` INNER JOIN superhero AS T1 ON T2.`hero_id` = T1.`id` WHERE T1.`superhero_name` = 'Agent 13' AND T1.`skin_colour_id` IS NOT NULL AND T1.`race_id` IS NOT NULL AND T1.`publisher_id` IS NOT NULL AND T1.`gender_id` IS NOT NULL AND T1.`eye_colour_id` IS NOT NULL AND T1.`hair_colour_id` IS NOT NULL AND T1.`skin_colour_id` IS NOT NULL AND T1.`height_cm` IS NOT NULL AND T1.`weight_kg` IS NOT NULL GROUP BY T3.`power_name` ORDER BY T3.`power_name` ASC\t----- bird -----\tsuperhero"
  ],
  [
    "Provide superheroes' names who have the adaptation power.",
    "SELECT DISTINCT T1.`superhero_name` FROM superhero AS T1 JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Adaptation' AND T1.`race_id` IS NOT NULL AND T1.`gender_id` IS NOT NULL AND T1.`alignment_id` IS NOT NULL AND T1.`superhero_name` IS NOT NULL ORDER BY COUNT(T2.`power_id`) DESC, T1.`superhero_name` ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many powers does Amazo hero have?",
    "SELECT full_name FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Wind Control'\t----- bird -----\tsuperhero"
  ],
  [
    "List the powers of Hunter Zolomon.",
    "SELECT T3.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` INNER JOIN hero AS T3 ON T3.`id` = ( SELECT T4.`id` FROM hero AS T4 INNER JOIN publisher AS T5 ON T4.`publisher_id` = T5.`id` WHERE T4.`superhero_name` = 'Hunter Zolomon' AND T5.`publisher_name` = 'Wildstorm' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the heights of the heroes whose eye colours are amber.",
    "SELECT T1.power_name FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN hero_attribute AS T4 ON T2.hero_id = T4.hero_id INNER JOIN attribute AS T5 ON T4.attribute_id = T5.id INNER JOIN superhero AS T1 ON T1.id = T2.hero_id WHERE T1.eye_colour_id IS NOT NULL GROUP BY T1.power_name ORDER BY MAX(T2.attribute_value) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "List the heroes' names whose eyes and hair colours are both black.",
    "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.id = ( SELECT publisher_id FROM superhero GROUP BY publisher_id ORDER BY COUNT(*) DESC LIMIT 1 ) AND T1.eye_colour_id = ( SELECT eye_colour_id FROM superhero GROUP BY eye_colour_id ORDER BY COUNT(*) DESC LIMIT 1 )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colours of the heroes whose skin colours are gold.",
    "SELECT T1.`alignment_id` FROM hero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Gold'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full names of vampire heroes.",
    "-- Provide the full names of vampire heroes. SELECT hero.full_name FROM hero JOIN race ON hero.race_id = race.id JOIN publisher ON hero.publisher_id = publisher.id WHERE race.race = 'Vampire' AND publisher.publisher_name = 'SyFy';\t----- bird -----\tsuperhero"
  ],
  [
    "Describe the names of neutral alignment superheroes.",
    "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral'\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have the highest attribute value in strength?",
    "SELECT COUNT(*) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` INNER JOIN hero_attribute AS T3 ON T1.`hero_id` = T3.`hero_id` INNER JOIN attribute AS T4 ON T3.`attribute_id` = T4.`id` WHERE T4.`attribute_name` = 'Strength' AND T2.`power_name` = 'Highest power value'\t----- bird -----\tsuperhero"
  ],
  [
    "What are the race and alignment of Cameron Hicks?",
    "SELECT T3.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Cameron Hicks'\t----- bird -----\tsuperhero"
  ],
  [
    "How many percent of female heroes were published by Marvel Comics?",
    "SELECT ( SELECT COUNT(DISTINCT hero_id) FROM hero_attribute INNER JOIN gender ON hero_attribute.`gender_id` = gender.`id` WHERE publisher_id = ( SELECT publisher_id FROM publisher WHERE publisher_name = 'Marvel Comics' ) AND gender.`gender` = 'Female' ) / ( SELECT COUNT(DISTINCT publisher_id) FROM publisher WHERE publisher_name = 'Marvel Comics' ) * 100\t----- bird -----\tsuperhero"
  ],
  [
    "Find the average weight of the heroes who are aliens.",
    "-- Find the average weight of the heroes who are aliens. SELECT AVG(weight_kg) FROM superhero JOIN race ON superhero.race_id = race.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE race.race = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.",
    "SELECT ABS(SUM(weight_kg WHERE full_name = 'Emil Blonsky') - SUM(weight_kg WHERE full_name = 'Charles Chandler')) FROM hero_attribute INNER JOIN hero_power ON hero_attribute.hero_id = hero_power.hero_id\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height for each superhero.",
    "SELECT hero_attribute.`attribute_value`, AVG(superhero.`height_cm`) FROM hero_attribute INNER JOIN superhero ON hero_attribute.`hero_id` = superhero.`id` WHERE hero_attribute.`attribute_value` IS NOT NULL GROUP BY hero_attribute.`attribute_value` ORDER BY AVG(superhero.`height_cm`) DESC;\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's superpower?",
    "SELECT T2.power_name FROM hero_power AS T2 JOIN ( SELECT T3.id FROM superhero AS T3 WHERE T3.superhero_name = 'Abomination' AND T3.full_name IS NOT NULL ) AS T1 ON T2.hero_id = T1.id\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the race of god/eternal, how many of them are male",
    "SELECT T1.`power_name`, COUNT(T1.`id`) FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`power_id` GROUP BY T1.`power_name` ORDER BY COUNT(T1.`id`) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Which hero was the fastest?",
    "-- Which hero was the fastest? SELECT T2.`superhero_name` FROM publisher AS T1 INNER JOIN hero AS T2 ON T1.`id` = T2.`publisher_id` INNER JOIN hero_attribute AS T3 ON T2.`id` = T3.`hero_id` INNER JOIN attribute AS T4 ON T3.`attribute_id` = T4.`id` INNER JOIN ( SELECT hero_id, MAX(attribute_value) as max_speed FROM hero_attribute WHERE attribute_name = 'Speed' GROUP BY hero_id ) AS T5 ON T2.`id` = T5.`hero_id` WHERE T2.`superhero_name` IS NOT NULL AND T2.`full_name` IS NOT NULL AND T2.`height_cm` IS NOT NULL AND T2.`weight_kg` IS NOT NULL AND T4.`attribute_name` = 'Speed' AND T3.`attribute_value` = T5.`max_speed`\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have a neutral alignment?",
    "SELECT AVG(T1.weight_kg) FROM hero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Weapon-based Powers'\t----- bird -----\tsuperhero"
  ],
  [
    "State all of 3-D Man's attributes along with their values.",
    "SELECT T1.`publisher_id` FROM superhero AS T1 WHERE T1.`superhero_name` = '3-D Man'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superheroes have blue eyes with brown hair?",
    "-- Which superheroes have blue eyes with brown hair? SELECT T1.superhero_name, T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Brown' ORDER BY T1.superhero_name ASC\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher for Hawkman, Karate Kid and Speedy?",
    "SELECT T1.`attribute_id` FROM hero_attribute AS T1 INNER JOIN hero AS T2 ON T1.`hero_id` = T2.`id` WHERE T2.`id` IN ( SELECT T3.`id` FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.`publisher_id` = T4.`id` WHERE T4.`publisher_name` IN ('Wildstorm', 'Universal Studios', 'Titan Books', 'Team Epic TV', 'SyFy', 'Star Trek') AND T3.`superhero_name` IN ('Hawkman', 'Karate Kid', 'Speedy') )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes didn't have any publisher?",
    "SELECT AVG(hero_attribute.`attribute_value`) FROM hero_attribute INNER JOIN attribute ON hero_attribute.`attribute_id` = attribute.`id` WHERE attribute.`attribute_name` = 'Intelligence' AND publisher.id = 1\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the percentage of superheroes with blue eyes.",
    "SELECT MULTIPLY(DIVIDE(SUM(superhero_name), COUNT(superhero_name)), 100.0) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE eye_colour_id = 7\t----- bird -----\tsuperhero"
  ],
  [
    "Find the ratio between male superheroes and female superheroes.",
    "SELECT ROUND(SUM(gender_id = 1) / SUM(gender_id = 2), 2) * 100 AS ratio FROM superhero\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the tallest superhero?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 WHERE T1.`height_cm` = ( SELECT MAX(superhero.`height_cm`) FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the power ID of cryokinesis?",
    "SELECT `id` FROM alignment ORDER BY `id` DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the name of superhero with superhero ID 294.",
    "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' AND T1.id = 294\t----- bird -----\tsuperhero"
  ],
  [
    "List the full names of superheroes with missing weight.",
    "-- List the full names of superheroes with missing weight. SELECT T1.`full_name` FROM superhero AS T1 WHERE T1.`weight_kg` IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name.",
    "SELECT T2.attribute_name, T2.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T1.hero_id IN ( SELECT T3.id FROM superhero AS T3 WHERE T3.superhero_name = 'Atlas' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpowers of the superhero has Helen Parr as their full name?",
    "SELECT superpower.`power_name` FROM hero_power INNER JOIN superpower ON hero_power.`power_id` = superpower.`id` WHERE hero_power.`hero_id` = ( SELECT `id` FROM superhero WHERE `full_name` = 'Helen Parr' )\t----- bird -----\tsuperhero"
  ],
  [
    "Find the race of the superhero who weighs 108kg and is 188cm tall.",
    "-- Find the race of the superhero who weighs 108kg and is 188cm tall. SELECT race.race FROM race JOIN superhero ON race.id = superhero.race_id WHERE weight_kg = 108 AND height_cm = 188;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher name of the superhero ID 38?",
    "SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Captain Marvel'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the race of the superhero with maximum attribute value?",
    "-- What is the race of the superhero with maximum attribute value? SELECT T1.race FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T1.attribute_value = ( SELECT MAX(T3.attribute_value) FROM hero_attribute AS T3 INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id )\t----- bird -----\tsuperhero"
  ],
  [
    "Give the alignment and superpowers of the superhero named Atom IV.",
    "SELECT T2.power_name FROM hero_power AS T2 INNER JOIN ( SELECT T3.id FROM superhero AS T3 WHERE T3.superhero_name = 'Atom IV' AND T3.full_name IS NOT NULL ) AS T1 ON T2.hero_id = T1.id\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full names of superheroes with blue eyes.",
    "-- List down at least five full names of superheroes with blue eyes. SELECT T2.`superhero_name`, T3.`full_name` FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` INNER JOIN attribute AS T3 ON T3.`id` = T1.`attribute_id` WHERE T3.`attribute_name` = 'eye_colour' AND T2.`eye_colour_id` = ( SELECT colour.id FROM colour WHERE colour.colour = 'Blue' ) AND T2.`superhero_name` NOT LIKE '%-%' GROUP BY T2.`superhero_name`, T3.`full_name` ORDER BY T2.`superhero_name` ASC LIMIT 5;\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all neutral superheroes.",
    "-- Calculate the average attribute value of all neutral superheroes. SELECT AVG(T4.height_cm) AS average FROM hero_attribute AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN hero_power AS T3 ON T1.hero_id = T3.hero_id INNER JOIN superhero AS T4 ON T3.hero_id = T4.id INNER JOIN alignment AS T5 ON T4.alignment_id = T5.id WHERE T4.alignment_id = 3 AND T1.attribute_value IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "List the skin colour of the superheroes with 100 attribute value.",
    "SELECT T1.`gender_id` FROM hero_attribute AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`attribute_value` = 100\t----- bird -----\tsuperhero"
  ],
  [
    "Count the good female superheroes.",
    "SELECT AVG(T3.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superpower AS T3 ON T1.hero_id = T3.id GROUP BY T3.id ORDER BY COUNT(T3.id) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the names of superheroes with attribute value between 75 to 80.",
    "-- Provide the names of superheroes with attribute value between 75 to 80. SELECT T1.`superhero_name`, T2.`power_name` FROM hero_power AS T1 INNER JOIN hero_attribute AS T3 ON T1.`hero_id` = T3.`hero_id` INNER JOIN superhero AS T4 ON T4.`id` = T1.`hero_id` WHERE T3.`attribute_value` BETWEEN 75 AND 80\t----- bird -----\tsuperhero"
  ],
  [
    "Give the race of the blue-haired male superhero.",
    "SELECT T1.`gender` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T1.`attribute_value` = ( SELECT `id` FROM colour WHERE `colour` = 'blue' ) AND T2.`attribute_name` = 'Hair colour' AND T1.`hero_id` = ( SELECT `id` FROM superhero WHERE `gender` = 'male' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the bad superheroes, what is the percentage of female superheroes?",
    "SELECT T1.`percentage` FROM ( SELECT T2.`publisher_id`, T2.`alignment_id`, T2.`superhero_name`, T2.`gender_id`, T2.`eye_colour_id`, T2.`hair_colour_id`, T2.`skin_colour_id`, T2.`race_id`, T2.`publisher_id`, T2.`height_cm`, T2.`weight_kg` FROM ( SELECT `id`, `superhero_name`, `gender_id`, `eye_colour_id`, `hair_colour_id`, `skin_colour_id`, `race_id`, `publisher_id`, `height_cm`, `weight_kg` FROM `superhero` WHERE `alignment_id` = 2 ) AS T2 ) AS T1 JOIN ( SELECT `publisher_id`, COUNT(`id`) AS `count` FROM `superhero` WHERE `alignment_id` = 2 GROUP BY `publisher_id` ) AS T3 ON T1.`publisher_id` = T3.`publisher_id` DIVIDE(T1.`count`, T3.`count`) * 100\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
    "-- In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color. -- First, find the number of superheroes with blue eyes SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`skin_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue' -- Then, find the number of superheroes with no eye color SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'None' -- Finally, subtract the two counts to get the difference SELECT ABS(SUM(T1.`id` IN ( SELECT T3.`id` FROM hero_attribute AS T3 INNER JOIN attribute AS T4 ON T3.`attribute_id` = T4.`id` WHERE T4.`attribute_name` = 'Eye Color' AND T3.`attribute_value` = 'Blue' )) - SUM(T1.`id` IN ( SELECT T3.`id` FROM hero_attribute AS T3 INNER JOIN attribute AS T4 ON T3.`attribute_id` = T4.`id` WHERE T4.`attribute_name` = 'Eye Color' AND T3.`attribute_value` = 'None' ))\t----- bird -----\tsuperhero"
  ],
  [
    "How strong is the Hulk?",
    "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND superhero.superhero_name = 'Hulk'\t----- bird -----\tsuperhero"
  ],
  [
    "List down Ajax's superpowers.",
    "SELECT T1.full_name FROM superhero AS T1 JOIN attribute ON T1.attribute_id = attribute.id JOIN hero_attribute ON T1.id = hero_attribute.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN colour ON T1.eye_colour_id = colour.id JOIN gender ON T1.gender_id = gender.id JOIN race ON T1.race_id = race.id JOIN publisher ON T1.publisher_id = publisher.id JOIN alignment ON T1.alignment_id = alignment.id WHERE T1.superhero_name = 'Ajax' AND T1.full_name IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "How many green-skinned villains are there in the superhero universe?",
    "-- How many green-skinned villains are there in the superhero universe? SELECT COUNT(T3.id) FROM hero AS T3 INNER JOIN publisher AS T5 ON T3.`publisher_id` = T5.`id` INNER JOIN alignment AS T6 ON T3.`alignment_id` = T6.`id` INNER JOIN race AS T7 ON T3.`race_id` = T7.`id` INNER JOIN colour AS T8 ON T3.`skin_colour_id` = T8.`id` WHERE T8.`colour` = 'Green' AND T7.`race` = 'Vampire' AND T6.`alignment` = 'Bad';\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes are in Marvel Comics?",
    "SELECT AVG(weight_kg) FROM superhero WHERE id NOT IN ( SELECT hero_id FROM hero_power WHERE power_id IN ( SELECT id FROM superpower WHERE power_name = 'Web Creation' ) AND hero_id = ( SELECT id FROM superpower WHERE power_name = 'Web Creation' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "Identify superheroes who can control wind and list their names in alphabetical order.",
    "-- Identify superheroes who can control wind and list their names in alphabetical order. SELECT T1.superhero_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN ( SELECT id FROM hero_power WHERE power_name = 'Wind Control' ) AS T3 ON T1.hero_id = T3.id ORDER BY T1.superhero_name ASC;\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the gender of the superhero who has the ability of Phoenix Force.",
    "-- Identify the gender of the superhero who has the ability of Phoenix Force. SELECT gender.gender FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Phoenix Force' AND T1.gender_id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the heaviest superhero in DC Comics.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'DC Comics' AND T1.`weight_kg` = ( SELECT MAX(T3.`weight_kg`) FROM superhero AS T3 INNER JOIN publisher AS T4 ON T3.`publisher_id` = T4.`id` WHERE T4.`publisher_name` = 'DC Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of a non-human superhero in Dark Horse Comics?",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1 WHERE T1.`race_id` <> 'Human' AND T1.`publisher_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "Count the fastest superheroes.",
    "SELECT T2.superhero_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_value = 100 AND T2.superhero_name IS NOT NULL GROUP BY T2.superhero_name ORDER BY MAX(T1.attribute_value) DESC\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
    "SELECT T1.difference FROM ( SELECT SUM(T2.id) AS DC_heroes FROM superpower AS T2 WHERE T2.power_name IS NOT NULL AND T2.publisher_id IN ( SELECT T3.id FROM publisher AS T3 WHERE T3.publisher_name = 'DC Comics' ) ) AS T1 JOIN ( SELECT SUM(T4.id) AS Marvel_heroes FROM superpower AS T4 WHERE T4.power_name IS NOT NULL AND T4.publisher_id IN ( SELECT T5.id FROM publisher AS T5 WHERE T5.publisher_name = 'Marvel Comics' ) ) AS T2 ON T1.DC_heroes = T2.DC_heroes\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the weakest attribute of the Black Panther.",
    "SELECT attribute.attribute_name FROM attribute JOIN hero_attribute ON attribute.id = hero_attribute.attribute_id JOIN hero_power ON hero_attribute.hero_id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = 'Black Panther' AND hero_attribute.attribute_value = ( SELECT MIN(hero_attribute.attribute_value) FROM hero_attribute JOIN hero_power ON hero_attribute.hero_id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superpower.power_name = 'Weapons Master' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's eye colour?",
    "SELECT T1.`alignment` FROM alignment AS T1 WHERE T1.`id` = ( SELECT `alignment_id` FROM superhero WHERE `superhero_name` = 'Abomination' )\t----- bird -----\tsuperhero"
  ],
  [
    "Name the tallest superhero.",
    "-- Name the tallest superhero. SELECT T1.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`height_cm` = ( SELECT MAX(height_cm) FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Name the superhero, otherwise known as Charles Chandler.",
    "-- Name the superhero, otherwise known as Charles Chandler. SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.full_name = 'Charles Chandler'\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
    "SELECT ( SELECT COUNT(*) FROM hero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN gender AS T3 ON T1.`gender_id` = T3.`id` INNER JOIN alignment AS T4 ON T1.`alignment_id` = T4.`id` WHERE T2.`publisher_name` = 'George Lucas' AND T3.`gender` = 'Female' AND T1.`gender` IS NOT NULL AND T4.`alignment` = 'Good' ) / ( SELECT COUNT(*) FROM hero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN gender AS T3 ON T1.`gender_id` = T3.`id` INNER JOIN alignment AS T4 ON T1.`alignment_id` = T4.`id` WHERE T2.`publisher_name` = 'George Lucas' AND T3.`gender` = 'Female' AND T1.`gender` IS NOT NULL AND T4.`alignment` = 'Good' ) * 100\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
    "-- Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes. SELECT SUM(alignment_id = 3) * 100.0 / COUNT(*) AS percentage FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes that have John as their first name?",
    "SELECT AVG(T1.`power_id`) FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` IN ( SELECT `id` FROM superhero WHERE `full_name` LIKE 'John%' )\t----- bird -----\tsuperhero"
  ],
  [
    "Give the hero ID of superhero with the lowest attribute value.",
    "SELECT T1.`attribute_value` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` ORDER BY T1.`attribute_value` ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full name of the superhero named Alien.",
    "SELECT T1.`full_name` FROM superhero AS T1 WHERE T1.`id` = ( SELECT `id` FROM hero_power WHERE `hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Atlas' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "List the attribute value of the superhero named Aquababy.",
    "SELECT T2.`attribute_value` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T1.`hero_id` = ( SELECT `id` FROM hero WHERE `superhero_name` = 'Aquababy' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the weight and race of the superhero with superhero ID 40.",
    "SELECT hero.weight_kg FROM superhero AS hero WHERE hero.id = 40\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height of all neutral superheroes.",
    "SELECT AVG(superhero.height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE alignment.alignment = 'Neutral' AND superpower.power_name = 'Web Creation'\t----- bird -----\tsuperhero"
  ],
  [
    "List the hero ID of superheroes have intellegence as their power.",
    "SELECT T1.superhero_name FROM hero_attribute AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Intelligence'\t----- bird -----\tsuperhero"
  ],
  [
    "Give the eye colour of Blackwulf.",
    "SELECT T1.`superhero_name`, T1.`full_name`, T1.`height_cm`, T1.`weight_kg` FROM superhero AS T1 JOIN gender AS T2 ON T1.`gender_id` = T2.`id` WHERE T1.`superhero_name` = 'Blackwulf' ORDER BY T1.`superpower_id` DESC, T1.`height_cm` ASC, T1.`weight_kg` DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "List the power of superheroes with height greater than 80% of the average height of all superheroes.",
    "-- List the power of superheroes with height greater than 80% of the average height of all superheroes. SELECT T1.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` IN ( SELECT T3.`id` FROM superhero AS T3 WHERE T3.`height_cm` > ( SELECT AVG(T4.`height_cm`) FROM superhero AS T4 ) * 0.8 )\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the reference names of the drivers who are eliminated in the first period in race number 18.",
    "SELECT AVG(qualifying.`q1`) FROM qualifying WHERE qualifying.`raceId` = 18 AND qualifying.`q1` IS NOT NULL AND qualifying.`position` = 1 AND qualifying.`number` = 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the surname of the driver with the best lap time in race number 19 in the second period?",
    "SELECT T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`time` = ( SELECT MIN(T4.`time`) FROM lapTimes AS T4 WHERE T4.`raceId` = ( SELECT `raceId` FROM qualifying WHERE `q2` IS NOT NULL ORDER BY `q2` ASC LIMIT 1 ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the year during which the race is held on circuits in Shanghai.",
    "SELECT DISTINCT `points` FROM constructorStandings INNER JOIN races ON constructorStandings.`raceId` = races.`raceId`\t----- bird -----\tformula_1"
  ],
  [
    "Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found?",
    "SELECT T2.`fastestLapTime` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`fastestLapTime` = ( SELECT MIN(`fastestLapTime`) FROM lapTimes WHERE `raceId` IN ( SELECT `raceId` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE circuits.`circuitRef` = 'zeltweg' ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the name of the race held on the circuits in Germany.",
    "SELECT T1.`name` FROM circuits AS T1 INNER JOIN countries AS T2 ON T1.`country` = T2.`country` WHERE T2.`country` = 'Germany'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the positions of the circuits built by the constructor Renault.",
    "SELECT MAX(T1.fastestLapSpeed) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId INNER JOIN drivers AS T4 ON T1.driverId = T4.driverId INNER JOIN constructors AS T5 ON T4.constructorId = T5.constructorId WHERE T5.name = 'Renault'\t----- bird -----\tformula_1"
  ],
  [
    "How many races in the year 2010 are held on grand prixs outside Asia and Europe?",
    "SELECT AVG(T1.fastestLapTime) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2010 AND T1.fastestLap IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Please give the names of the races held on the circuits in Spain.",
    "SELECT T1.`fastestLapTime` FROM drivers AS T1 INNER JOIN ( SELECT T2.`driverId`, T2.`fastestLapTime` FROM drivers AS T2 INNER JOIN ( SELECT `driverId`, MIN(`fastestLapTime`) AS `fastestLapTime` FROM lapTimes WHERE `country` = 'Spain' GROUP BY `driverId` ) AS T3 ON T2.`driverId` = T3.`driverId` WHERE T3.`fastestLapTime` = ( SELECT MIN(`fastestLapTime`) FROM lapTimes WHERE `country` = 'Spain' ) ORDER BY T2.`fastestLapTime` ASC ) AS T4 ON T1.`driverId` = T4.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "What is the location coordinates of the circuits for Australian grand prix?",
    "SELECT T1.`fastestLapTime` FROM results AS T1 INNER JOIN circuits AS T2 ON T1.`raceId` = T2.`circuitId` WHERE T2.`circuitId` = ( SELECT `circuitId` FROM circuits ORDER BY `lng` ASC LIMIT 1 ) AND T1.`fastestLap` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Where can I find the information about the races held on Sepang International Circuit?",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.position <= 3 AND T2.raceId = ( SELECT T3.raceId FROM races AS T3 INNER JOIN lapTimes AS T4 ON T3.raceId = T4.raceId WHERE T3.circuitId = ( SELECT T1.circuitId FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.fastestLapTime = ( SELECT MIN(T5.fastestLapTime) FROM races AS T5 INNER JOIN lapTimes AS T6 ON T5.raceId = T6.raceId WHERE T5.circuitId = T1.circuitId ) GROUP BY T2.raceId ORDER BY MAX(T6.time) ASC LIMIT 1 ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time of the races held on Sepang International Circuit.",
    "SELECT T1.`time` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`name` = 'Sepang International Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "Give the coordinate position for Abu Dhabi Grand Prix.",
    "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN ( SELECT driverId, MIN(fastestLapTime) as fastestLapTime FROM lapTimes GROUP BY driverId ) lapTimes ON drivers.driverId = lapTimes.driverId WHERE lapTimes.fastestLapTime IN ( SELECT MIN(fastestLapTime) FROM lapTimes ) AND lapTimes.raceId IN ( SELECT races.raceId FROM circuits ORDER BY COUNT(DISTINCT races.raceId) ASC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the constructor which got 1 point in the race No. 24 from?",
    "SELECT T1.country FROM constructorStandings AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.raceId = 24 AND T1.points = 1\t----- bird -----\tformula_1"
  ],
  [
    "What's Bruno Senna's Q1 result in the qualifying race No. 354?",
    "SELECT T1.positionText FROM results AS T1 INNER JOIN qualifying AS T2 ON T1.qualifyId = T2.qualifyId WHERE T2.raceId = 354 AND T1.driverId = (SELECT driverId FROM drivers WHERE driverRef = 'zunino')\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?",
    "SELECT T1.`fastestLapSpeed` FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`q2` = '01:40:00'\t----- bird -----\tformula_1"
  ],
  [
    "What is his number of the driver who finished 0:01:54 in the Q3 of qualifying race No.903?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "For the Bahrain Grand Prix in 2007, how many drivers not finished the game?",
    "SELECT drivers.`forename`, drivers.`surname`, lapTimes.`time` FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE races.`name` = 'Bahrain Grand Prix' AND races.`year` = 2007 AND lapTimes.`time` = ( SELECT MIN(lapTimes.`time`) FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE races.`name` = 'Bahrain Grand Prix' AND races.`year` = 2007 )\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT * FROM lapTimes WHERE `raceId` = 901 AND `milliseconds` = ( SELECT MIN(`milliseconds`) FROM lapTimes WHERE `raceId` = 901 )\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened on 2015/11/29, how many drivers finished the game?",
    "SELECT drivers.`forename`, drivers.`surname`, lapTimes.`time` FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE races.`year` = 2015 AND lapTimes.`time` = ( SELECT MIN(lapTimes.`time`) FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE races.`year` = 2015 )\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 592, who is the oldest?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.",
    "SELECT T1.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 161 AND T1.time = '01:27:00'\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed in race No.933, where does he come from?",
    "SELECT T1.`nationality` FROM drivers AS T1 INNER JOIN ( SELECT `driverId` FROM lapTimes WHERE lapTimes.`raceId` = 933 AND lapTimes.`milliseconds` = ( SELECT MIN(lapTimes2.`milliseconds`) FROM lapTimes AS lapTimes2 WHERE lapTimes2.`raceId` = 933 ) ) AS T2 ON T1.`driverId` = T2.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "Where is Malaysian Grand Prix held? Give the location coordinates.",
    "SELECT circuits.`country` FROM circuits WHERE circuits.`circuitRef` = 'zolder'\t----- bird -----\tformula_1"
  ],
  [
    "For the constructor which got the highest point in the race No. 9 , what is its introduction website?",
    "SELECT T1.url FROM constructorStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN seasons AS T3 ON T2.year = T3.year WHERE T2.raceId = 9 AND T1.points = ( SELECT MAX(T4.points) FROM constructorStandings AS T4 INNER JOIN races AS T5 ON T4.raceId = T5.raceId INNER JOIN seasons AS T6 ON T5.year = T6.year WHERE T5.raceId = 9 )\t----- bird -----\tformula_1"
  ],
  [
    "What's Lucas di Grassi's Q1 result in the race No. 345?",
    "SELECT qualifying.`q1` FROM qualifying INNER JOIN drivers ON qualifying.`driverId` = drivers.`driverId` INNER JOIN races ON qualifying.`raceId` = races.`raceId` INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE drivers.`driverRef` = 'zunino' AND races.`year` = 2017 AND races.`round` = 3 AND circuits.`name` = 'Zolder' ORDER BY races.`date` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?",
    "SELECT T1.`location` FROM drivers AS T1 INNER JOIN ( SELECT driverId, MIN(time) as min_time FROM lapTimes WHERE raceId = 347 GROUP BY driverId ) AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`min_time` = ( SELECT time FROM lapTimes WHERE raceId = 347 AND driverId = T1.`driverId` ORDER BY time ASC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What is the actual finish time for Bruce McLaren in the race No.743?",
    "SELECT MAX(lapTimes.`milliseconds`) FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` WHERE drivers.`forename` = 'Bruce' AND drivers.`surname` = 'McLaren' AND lapTimes.`raceId` = ( SELECT races.`raceId` FROM races WHERE races.`name` = 'Italian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Who finished second in the San Marino Grand Prix in 2006?",
    "SELECT MIN(lapTimes.`time`) FROM lapTimes INNER JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE races.`year` = 2006 AND races.`circuitId` = ( SELECT circuits.`circuitId` FROM circuits WHERE circuits.`name` = 'San Marino Grand Prix' ) AND lapTimes.`time` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT T1.`fastestLapTime`, T2.`fastestLapSpeed` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`raceId` = 901\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened in 2015/11/29, how many drivers finished the game?",
    "SELECT SUM(driverStandings.`points`) FROM driverStandings INNER JOIN drivers ON driverStandings.`driverId` = drivers.`driverId` INNER JOIN races ON driverStandings.`raceId` = races.`raceId` INNER JOIN seasons ON races.`year` = seasons.`year` WHERE seasons.`year` = 2015 AND races.`date` = '2015-11-29'\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 872, who is the youngest?",
    "SELECT drivers.`surname`, drivers.`forename` FROM drivers WHERE drivers.`driverId` = ( SELECT lapTimes.`driverId` FROM lapTimes WHERE lapTimes.`time` = ( SELECT MIN(lapTimes.`time`) FROM lapTimes ) )\t----- bird -----\tformula_1"
  ],
  [
    "Who was the driver that got the best lap time in the race No. 348? Give his full name.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`raceId` = 348 AND T2.`time` = ( SELECT MIN(lapTimes.`time`) FROM lapTimes WHERE lapTimes.`raceId` = 348 )\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed, what is his nationality?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "For the drivers who took part in the race in 1983/7/16, what's their race completion rate?",
    "SELECT DIVIDE(COUNT(driverId), (COUNT(driverId where date = '1983-07-16')), 0) * 100 as percentage\t----- bird -----\tformula_1"
  ],
  [
    "Which year was the first Singapore Grand Prix?",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`wins` = ( SELECT MIN(`wins`) FROM driverStandings )\t----- bird -----\tformula_1"
  ],
  [
    "How many races were there in 2005? Name all the races in descending order.",
    "SELECT T1.`name` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`year` = 2005 ORDER BY T1.`name` DESC\t----- bird -----\tformula_1"
  ],
  [
    "Name the first race recorded. What are the other races that happened within the same month and year of that race.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "State the name and date of the last round of race in year 1999.",
    "SELECT MAX(races.`date`) FROM races WHERE races.`year` = 1999\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the most number of races?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Name the races in year 2017 that are not hosted in year 2000.",
    "SELECT T1.`time` FROM lapTimes AS T1 WHERE T1.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2017 ) AND T1.`milliseconds` = ( SELECT MIN(`milliseconds`) FROM lapTimes WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2017 ) )\t----- bird -----\tformula_1"
  ],
  [
    "In which country was the first European Grand Prix hosted? Name the circuit and location.",
    "SELECT T1.`fastestLapTime` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = ( SELECT MIN(`year`) FROM seasons )\t----- bird -----\tformula_1"
  ],
  [
    "When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many seasons has Silverstone Circuit hosted the United Kindom grand prix?",
    "SELECT `races.url` FROM races JOIN circuits ON races.`circuitId` = circuits.`circuitId` JOIN seasons ON races.`year` = seasons.`year` WHERE `circuits.name` = 'Silverstone Circuit' AND `seasons.name` LIKE '%British%'\t----- bird -----\tformula_1"
  ],
  [
    "Name all drivers in the 2010 Singapore Grand Prix order by their position stands.",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.raceId WHERE T2.year = 2010 ORDER BY CAST(T2.position AS INTEGER)\t----- bird -----\tformula_1"
  ],
  [
    "State the driver with the most points scored. Find his full name with that points.",
    "SELECT DISTINCT T1.forename, T1.surname FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.points = ( SELECT MAX(T3.points) FROM driverStandings AS T3 INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId ) AND T2.code IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.",
    "SELECT DISTINCT T1.forename, T1.surname, T2.points FROM driverStandings AS T1 INNER JOIN ( SELECT driverId, SUM(points) AS points FROM constructorStandings WHERE raceId = ( SELECT raceId FROM races WHERE year = 2017 AND name = 'Chinese Grand Prix' ) GROUP BY driverId ORDER BY points DESC LIMIT 3 ) AS T2 ON T1.driverId = T2.driverId\t----- bird -----\tformula_1"
  ],
  [
    "What is the best lap time recorded? List the driver and race with such recorded lap time.",
    "SELECT T1.forename, T1.surname, T2.name, T2.year FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time = ( SELECT MIN(time) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix?",
    "SELECT T1.`driverId`, T1.`time` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2009\t----- bird -----\tformula_1"
  ],
  [
    "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
    "SELECT ( SELECT COUNT(*) FROM results INNER JOIN drivers ON results.`driverId` = drivers.`driverId` INNER JOIN races ON results.`raceId` = races.`raceId` WHERE drivers.`surname` = 'Hamilton' AND races.`circuitId` = ( SELECT circuitId FROM circuits WHERE name = 'F1 Circuit' ) AND results.`position` > 1 AND races.`year` >= 2010 ) / ( SELECT COUNT(*) FROM races WHERE year >= 2010 ) * 100\t----- bird -----\tformula_1"
  ],
  [
    "Name the driver with the most winning. Mention his nationality and what is his average point scores.",
    "SELECT AVG(T1.`points`) FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`wins` = ( SELECT MAX(T3.`wins`) FROM driverStandings AS T3 INNER JOIN drivers AS T4 ON T3.`driverId` = T4.`driverId` )\t----- bird -----\tformula_1"
  ],
  [
    "How old is the youngest Japanese driver? What is his name?",
    "SELECT AVG(CAST(T2.`milliseconds` AS REAL)) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`milliseconds` = ( SELECT MIN(milliseconds) FROM lapTimes )\t----- bird -----\tformula_1"
  ],
  [
    "List circuits which host 4 f1 races from year 1990 to 2000.",
    "SELECT T1.`circuitRef` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`circuitId` IN ( SELECT circuits.`circuitId` FROM circuits WHERE circuits.`country` = 'France' ) GROUP BY T1.`circuitRef` HAVING COUNT(T2.`raceId`) = 4\t----- bird -----\tformula_1"
  ],
  [
    "List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.",
    "SELECT circuits.`name`, circuits.`location`, races.`name` FROM circuits INNER JOIN races ON circuits.`circuitId` = races.`circuitId` INNER JOIN seasons ON races.`year` = seasons.`year` WHERE circuits.`country` = 'USA' AND races.`year` = 2006\t----- bird -----\tformula_1"
  ],
  [
    "Name the races along with its circuit name and location for f1 races hosted in September 2005.",
    "SELECT T1.`number`, T1.`code`, T2.`forename`, T2.`surname` FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` WHERE T3.`year` = 2005 AND T3.`name` LIKE '%F1%'\t----- bird -----\tformula_1"
  ],
  [
    "Which race was Alex Yoong in when he was in track number less than 10?",
    "SELECT T1.`year`, T1.`name` FROM seasons AS T1 INNER JOIN races AS T2 ON T1.`year` = T2.`year` WHERE T2.`raceId` IN ( SELECT T3.`raceId` FROM races AS T3 WHERE T3.`name` LIKE '%Alex Yoong%' AND T3.`number` < 10 )\t----- bird -----\tformula_1"
  ],
  [
    "How many times did Michael Schumacher won from races hosted in Sepang International Circuit?",
    "SELECT AVG(results.`laps`) FROM results INNER JOIN drivers ON results.`driverId` = drivers.`driverId` WHERE drivers.`forename` = 'Michael' AND drivers.`surname` = 'Schumacher'\t----- bird -----\tformula_1"
  ],
  [
    "State the race and year of race in which Michael Schumacher had his fastest lap.",
    "SELECT MIN(lapTimes.`milliseconds`), seasons.`year` FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` INNER JOIN seasons ON races.`year` = seasons.`year` WHERE drivers.`forename` = 'Michael' AND drivers.`surname` = 'Schumacher'\t----- bird -----\tformula_1"
  ],
  [
    "What is Eddie Irvine's average points scored in year 2000?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Which was Lewis Hamilton first race? What was his points recorded for his first race event?",
    "SELECT T1.`points` FROM driverStandings AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`raceId` = ( SELECT MIN(`raceId`) FROM races ) AND T1.`driverId` = ( SELECT drivers.`driverId` FROM drivers WHERE drivers.`forename` = 'Lewis' AND drivers.`surname` = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "List all races in 2017 and the hosting country order by date of the event.",
    "SELECT AVG(T1.`milliseconds`) FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`position` = ( SELECT MIN(T3.`position`) FROM results AS T3 WHERE T3.`raceId` = T2.`raceId` )\t----- bird -----\tformula_1"
  ],
  [
    "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.",
    "SELECT T2.name, AVG(T3.laps) AS `avg_laps`, COUNT(T3.raceId) AS `num_races` FROM circuits AS T2 INNER JOIN ( SELECT T1.circuitId FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId GROUP BY T1.circuitId ) AS T1 ON T2.circuitId = T1.circuitId INNER JOIN lapTimes AS T3 ON T1.raceId = T3.raceId GROUP BY T2.circuitId ORDER BY `avg_laps` DESC\t----- bird -----\tformula_1"
  ],
  [
    "Among all European Grand Prix races, what is the percentage of the races were hosted in Germany?",
    "SELECT ( SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany' ) / ( SELECT COUNT(*) FROM races JOIN circuits ON races.circuitId = circuits.circuitId ) * 100\t----- bird -----\tformula_1"
  ],
  [
    "What's the location coordinates of Silverstone Circuit?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What's the reference name of Marina Bay Street Circuit?",
    "SELECT T1.`circuitRef` FROM circuits AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`circuitRef` = 'zolder' ORDER BY T2.`circuitRef` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In which country can I find the circuit with the highest altitude?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers don't have a code?",
    "SELECT AVG(CAST(lapTimes.`milliseconds` AS REAL)) FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` INNER JOIN driverStandings ON lapTimes.`driverId` = driverStandings.`driverId` WHERE drivers.`code` IS NULL AND driverStandings.`wins` > 0\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the oldest driver from?",
    "SELECT T1.country FROM drivers AS T1 INNER JOIN status AS T2 ON T1.dob IS NOT NULL WHERE T1.dob = ( SELECT MIN(T3.dob) FROM drivers AS T3 INNER JOIN status AS T4 ON T3.dob IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the surnames of all the Italian drivers.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Which website should I go to if I want to know more about Anthony Davidson?",
    "SELECT `url` FROM races JOIN circuits ON races.`circuitId` = circuits.`circuitId` JOIN seasons ON races.`year` = seasons.`year` JOIN drivers ON races.`driverId` = drivers.`driverId` WHERE drivers.`forename` = 'Anthony' AND drivers.`surname` = 'Davidson'\t----- bird -----\tformula_1"
  ],
  [
    "What's Lewis Hamilton's reference name?",
    "SELECT T1.`position` FROM ( SELECT `driverId` FROM races GROUP BY `driverId` ORDER BY COUNT(*) ASC LIMIT 1 ) AS T2 INNER JOIN drivers AS T1 ON T1.`driverId` = T2.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "Which circuit did the 2009 Spanish Grand Prix use?",
    "SELECT circuits.`circuitRef` FROM circuits INNER JOIN races ON circuits.`circuitId` = races.`circuitId` INNER JOIN seasons ON races.`year` = seasons.`year` WHERE seasons.`year` = 2009 AND circuits.`name` = ( SELECT MAX(circuits.`name`) FROM circuits WHERE circuits.`circuitId` = ( SELECT races.`circuitId` FROM races WHERE races.`year` = 2009 ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please list all the years that Silverstone Circuit was used in a Formula_1 race.",
    "SELECT T1.`year` FROM seasons AS T1 INNER JOIN races AS T2 ON T1.`year` = T2.`year` INNER JOIN circuits AS T3 ON T2.`circuitId` = T3.`circuitId` WHERE T3.`circuitRef` = 'silverstone'\t----- bird -----\tformula_1"
  ],
  [
    "Please give more information about the Formula_1 races that used the Silverstone Circuit.",
    "SELECT SUM(T2.`points`) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`position` <= 5 AND T2.`raceId` = ( SELECT `raceId` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `circuitRef` = 'silverstone' ) )\t----- bird -----\tformula_1"
  ],
  [
    "What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?",
    "SELECT MIN(`milliseconds`) FROM lapTimes JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE `name` = 'Yas_Marina' AND `milliseconds` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "How many Formula_1 races took place on the circuits in Italy?",
    "SELECT AVG(CAST(lapTimes.milliseconds AS REAL)) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId INNER JOIN seasons ON circuits.circuitId = seasons.circuitRef INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE circuits.country = 'Italy' AND seasons.year = (SELECT MAX(year) FROM seasons WHERE country = 'Italy') AND drivers.dob IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.",
    "SELECT `url` FROM circuits JOIN seasons ON circuits.`circuitId` = seasons.`circuitId` JOIN races ON circuits.`circuitId` = races.`circuitId` JOIN results ON races.`raceId` = results.`raceId` WHERE circuits.`country` = 'Spain' AND circuits.`circuitRef` = 'spanish_grand_prix' AND seasons.`year` = 2009 AND races.`year` = 2009 AND results.`qualifying` = 'Yes'\t----- bird -----\tformula_1"
  ],
  [
    "What's the fastest lap time ever in a race for Lewis Hamilton?",
    "SELECT MIN(lapTimes.`time`) AS fastest_lap_time FROM lapTimes INNER JOIN races ON lapTimes.`raceId` = races.`raceId` INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` WHERE drivers.`forename` = 'Lewis' AND drivers.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Which driver ranked the first in the Australian Grand Prix in 2008? Please give his reference name.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Please list the Formula_1 races that Lewis Hamilton participated.",
    "SELECT DISTINCT T1.forename, T1.surname, T1.dob, T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN driverStandings AS T3 ON T1.driverId = T3.driverId WHERE T2.fastestLapTime < '01:00:00' AND T1.nationality = 'British' AND T3.position = 1\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race did Lewis Hamilton rank the highest?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
    "SELECT DISTINCT drivers.`forename`, drivers.`surname`, MAX(lapTimes.`milliseconds`) FROM driverStandings AS T1 INNER JOIN drivers ON T1.`driverId` = drivers.`driverId` INNER JOIN races ON T1.`raceId` = races.`raceId` INNER JOIN lapTimes ON T1.`driverId` = lapTimes.`driverId` WHERE races.`year` = 2009 GROUP BY lapTimes.`milliseconds` ORDER BY lapTimes.`milliseconds` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In which years did Lewis Hamilton participate in a Formula_1 race?",
    "SELECT T1.year, MIN(T1.fastestLapTime) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' GROUP BY T1.year\t----- bird -----\tformula_1"
  ],
  [
    "What was Lewis Hamilton's final rank in the 2008 Australian Grand Prix?",
    "SELECT MAX(lapTimes.`time`) FROM lapTimes INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` INNER JOIN races ON lapTimes.`raceId` = races.`raceId` INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE drivers.`code` = 'HAM' AND races.`year` = 2008 AND circuits.`name` = 'Australian Grand Prix' AND lapTimes.`time` IS NOT NULL ORDER BY lapTimes.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Which driver was in the no. 4 grid formation when starting the race in 2008's Australian Grand Prix? Please give his forename and surname.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
    "SELECT AVG(results.time) FROM results JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year JOIN circuits ON races.circuitId = circuits.circuitId WHERE seasons.year = 2008 AND circuits.name = 'Australian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What's the finish time for the driver who ranked second in 2008's Australian Grand Prix?",
    "SELECT T2.time FROM results AS T2 INNER JOIN races AS T3 ON T2.raceId = T3.raceId INNER JOIN circuits AS T4 ON T3.circuitId = T4.circuitId INNER JOIN seasons AS T5 ON T3.year = T5.year INNER JOIN constructorStandings AS T6 ON T2.raceId = T6.raceId INNER JOIN drivers AS T7 ON T6.driverId = T7.driverId WHERE T3.year = 2008 AND T2.position = 2 AND T2.statusId = 'D' AND T4.name = 'Australian Grand Prix' AND T5.year = 2008 AND T6.position = 2 AND T7.forename = 'Mike' AND T7.surname = 'Taylor'\t----- bird -----\tformula_1"
  ],
  [
    "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?",
    "SELECT `url` FROM races JOIN circuits ON races.`circuitId` = circuits.`circuitId` JOIN seasons ON races.`year` = seasons.`year` WHERE races.`year` = 2008 AND circuits.`name` = 'Australian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers from the USA participated in the 2008 Australian Grand Prix?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers that finished the race in the 2008 Australian Grand Prix, how many of them have participated in Formula_1 races?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
    "SELECT AVG(CAST(T1.`fastestLapTime` AS REAL)) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`forename` = 'Lewis' AND T2.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the rate of drivers completing all the laps in the 2008 Australian Grand Prix?",
    "SELECT CAST(T1.`laps` AS REAL) / CAST(T2.`laps` AS REAL) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2008\t----- bird -----\tformula_1"
  ],
  [
    "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many circuits are there in Melbourne, Australia?",
    "SELECT AVG(CAST(lapTimes.milliseconds AS REAL)) FROM lapTimes INNER JOIN circuits ON lapTimes.circuitId = circuits.circuitId INNER JOIN seasons ON circuits.circuitId = seasons.circuitId INNER JOIN races ON circuits.circuitId = races.circuitId INNER JOIN results ON results.raceId = races.raceId INNER JOIN constructorStandings ON constructorStandings.raceId = races.raceId WHERE circuits.country = 'Australia' AND circuits.location = 'Melbourne' AND seasons.year = (SELECT MAX(year) FROM seasons WHERE country = 'Australia') AND constructorStandings.points IS NOT NULL AND constructorStandings.position = 1 AND results.points IS NOT NULL AND results.laps > 0 AND constructorStandings.wins > 0 AND lapTimes.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the US circuits.",
    "SELECT * FROM pitStops\t----- bird -----\tformula_1"
  ],
  [
    "How many British drivers were born after 1980?",
    "SELECT AVG(time) FROM ( SELECT `time` FROM lapTimes JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` WHERE drivers.`dob` > '1980-01-01' AND drivers.`nationality` = 'British' ORDER BY lapTimes.`laps` DESC LIMIT 1 ) AS T1\t----- bird -----\tformula_1"
  ],
  [
    "What are the average points of British constructors?",
    "SELECT T2.`forename`, T2.`surname`, T1.`points` FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`nationality` = 'British'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor has the highest point?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Please list the constructor names with 0 points at race 291.",
    "SELECT T1.`fastestLapTime` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`driverId` = ( SELECT `driverId` FROM lapTimes WHERE `raceId` = ( SELECT `raceId` FROM lapTimes ORDER BY CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(`time`, '.', 1), ':', -1) AS UNSIGNED) ASC LIMIT 1 ) ORDER BY CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(`time`, '.', 1), ':', -1) AS UNSIGNED) ASC LIMIT 1 ) AND T2.`raceId` = ( SELECT `raceId` FROM lapTimes ORDER BY CAST(SUBSTRING_INDEX(SUBSTRING_INDEX(`time`, '.', 1), ':', -1) AS UNSIGNED) ASC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "How many Japanese constructors have 0 points in 2 races?",
    "SELECT COUNT(*) FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`points` = 0 AND T2.`nationality` = 'Japanese' AND T1.`wins` = 2\t----- bird -----\tformula_1"
  ],
  [
    "Which constructors have been ranked 1?",
    "SELECT status.`status` FROM status INNER JOIN results ON results.`statusId` = status.`statusId` WHERE results.`rank` = 1\t----- bird -----\tformula_1"
  ],
  [
    "How many French constructors have a lap number of over 50?",
    "SELECT T1.forename, T1.surname, T2.number, T3.fastestLapTime FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId WHERE T1.nationality = 'French' AND T2.number > 50 AND T3.fastestLapTime < '01:00:00'\t----- bird -----\tformula_1"
  ],
  [
    "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What is the average time in seconds of champion for each year?",
    "SELECT R.year, AVG(L.milliseconds) / 1000 AS 'Fastest Time' FROM races AS R INNER JOIN lapTimes AS L ON R.raceId = L.raceId WHERE L.fastestLap IS NOT NULL GROUP BY R.year ORDER BY AVG(L.milliseconds) / 1000 ASC\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many Italian drivers haven't finished the race?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Which driver has the fastest lap time? Please give their forenames and surnames.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What is the fastest lap number of the champion in 2009?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What is the average of fastest lap speed in the 2009 Spanish Grand Prix race?",
    "SELECT AVG(fastestLapSpeed) FROM races JOIN circuits ON races.circuitId = circuits.circuitId JOIN seasons ON races.year = seasons.year WHERE name = 'Spanish Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Which race has the shortest actual finishing time? Please give the name and year.",
    "SELECT T1.name, T1.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`dob` < '1985-01-01' AND T2.`laps` > 50\t----- bird -----\tformula_1"
  ],
  [
    "How many French drivers who obtain the laptime less than 02:00.00?",
    "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'French' AND T2.`fastestLapTime` = ( SELECT MIN(T3.`fastestLapTime`) FROM results AS T3 WHERE T3.`driverId` = T1.`driverId` )\t----- bird -----\tformula_1"
  ],
  [
    "List out the code for drivers who have nationality in America.",
    "-- List out the code for drivers who have nationality in America. SELECT DISTINCT drivers.`driverId`, drivers.`number`, drivers.`forename`, drivers.`surname`, drivers.`dob` FROM drivers JOIN status ON drivers.`statusId` = status.`statusId` JOIN nationality ON drivers.`nationality` = nationality.`nationality` WHERE drivers.`nationality` = 'America' AND status.`status` != 'Withdrew' ORDER BY drivers.`driverId` ASC;\t----- bird -----\tformula_1"
  ],
  [
    "List out the Id number of races which were hold in 2009.",
    "SELECT DISTINCT T2.`surname`, T2.`forename` FROM drivers AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`code` IS NOT NULL AND T2.`surname` IS NOT NULL AND T2.`forename` IS NOT NULL AND T1.`Charter School (Yes/No)` = 'Yes' AND CAST(T2.`number` AS INTEGER) > 0 AND T2.`forename` != 'Mike' AND T2.`surname` != 'Taylor' ORDER BY T2.`surname` ASC, T2.`forename` ASC\t----- bird -----\tformula_1"
  ],
  [
    "How many driver participated in race ID number 18?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?",
    "SELECT COUNT(*) FROM drivers AS T1 INNER JOIN ( SELECT `driverId`, MAX(`dob`) AS `max_dob` FROM drivers GROUP BY `driverId` ORDER BY `max_dob` ASC LIMIT 3 ) AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`country` = 'Netherlands'\t----- bird -----\tformula_1"
  ],
  [
    "What is reference name of Robert Kubica?",
    "SELECT T1.`nationality` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`forename` = 'Robert' AND T1.`surname` = 'Kubica'\t----- bird -----\tformula_1"
  ],
  [
    "How many Australian drivers who were born in 1980?",
    "SELECT SUM(d.wins) FROM drivers d JOIN driverStandings ds ON d.driverId = ds.driverId JOIN races r ON ds.raceId = r.raceId WHERE r.year = 1980\t----- bird -----\tformula_1"
  ],
  [
    "List out top 3 German drivers who were born from 1980-1990 and have the earliest lap time.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Please state the reference name of the oldest German driver.",
    "SELECT T1.`circuitRef`, T1.`name` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`time` = ( SELECT MIN(T3.`time`) FROM lapTimes AS T3 WHERE T3.`raceId` = T2.`raceId` ) GROUP BY T1.`circuitId` ORDER BY AVG(T2.`laps`) ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "List out top 10 Spanish drivers who were born before 1982 and have the latest lap time.",
    "SELECT DISTINCT T1.forename, T1.surname, T1.number FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId INNER JOIN constructorStandings AS T4 ON T1.raceId = T4.raceId AND T1.driverId = T4.driverId WHERE T1.time = ( SELECT MAX(time) FROM lapTimes AS T1 INNER JOIN races AS T3 ON T1.raceId = T3.raceId ) AND T1.time != 'None' AND T1.time != 'None' ORDER BY T4.position ASC LIMIT 10\t----- bird -----\tformula_1"
  ],
  [
    "State the racing year which has the fastest lap time?",
    "SELECT T1.year FROM lapTimes AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.time = ( SELECT MIN(MIN(MIN(MIN(MIN(lapTimes.time))))) FROM lapTimes )\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the lowest speed of lap time?",
    "SELECT T1.year FROM seasons AS T1 INNER JOIN ( SELECT T2.raceId, T2.fastestLapTime, T2.fastestLapSpeed FROM races AS T2 INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId INNER JOIN ( SELECT T4.raceId, MIN(T4.milliseconds) AS fastestLapTime, AVG(T4.milliseconds) AS fastestLapSpeed FROM lapTimes AS T4 GROUP BY T4.raceId ) AS T5 ON T2.raceId = T5.raceId ORDER BY T5.fastestLapTime ASC, T5.fastestLapSpeed ASC LIMIT 1 ) AS T6 ON T1.year = T6.raceId\t----- bird -----\tformula_1"
  ],
  [
    "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
    "SELECT T1.`driverId` FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T1.`time` = ( SELECT MIN(lapTimes.`time`) FROM lapTimes INNER JOIN races ON lapTimes.`raceId` = races.`raceId` ) ORDER BY T3.`year` DESC, T3.`round` DESC, T3.`circuitId` DESC, T3.`name` DESC, T2.`forename` DESC, T2.`surname` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "From race no. 50 to 100, how many finishers have been disqualified?",
    "SELECT COUNT(*) FROM races WHERE `raceId` BETWEEN 50 AND 100 AND `time` BETWEEN '3:00:00' AND '4:00:00'\t----- bird -----\tformula_1"
  ],
  [
    "How many times the circuits were held in Austria? Please give their location and coordinates.",
    "SELECT MIN(T2.milliseconds) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T3.country = 'Austria'\t----- bird -----\tformula_1"
  ],
  [
    "What race number has the most finishers?",
    "SELECT MIN(`fastestLapSpeed`) FROM results WHERE `time` IS NOT NULL GROUP BY `raceId` ORDER BY COUNT(`resultId`) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "On what year did the youngest driver had his first qualifying race? State the name, date and time of the race.",
    "SELECT T2.name, T2.date, T2.time FROM races AS T2 JOIN drivers AS T3 ON T2.driverId = T3.driverId JOIN ( SELECT driverId, MIN(dob) as min_dob FROM drivers WHERE dob IS NOT NULL GROUP BY driverId ) AS T4 ON T3.driverId = T4.driverId WHERE T4.min_dob = T3.dob\t----- bird -----\tformula_1"
  ],
  [
    "How many American drivers have been disqualified from the race.",
    "SELECT AVG(laps) FROM ( SELECT laps FROM lapTimes WHERE milliseconds = ( SELECT MIN(milliseconds) FROM lapTimes WHERE status NOT IN ('Cancelled due to weather', 'Abandoned', 'Technical issue') ) AND status NOT IN ('Cancelled due to weather', 'Abandoned', 'Technical issue') JOIN circuits ON lapTimes.raceId = circuits.circuitId JOIN races ON circuits.circuitId = races.circuitId JOIN seasons ON races.year = seasons.year ) AS T1\t----- bird -----\tformula_1"
  ],
  [
    "Which of the Italian constructor got the highest point to date? Give its introduction website?",
    "SELECT T1.`name`, T1.`url` FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`nationality` = 'Italian' ORDER BY T2.`points` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the website of the constructor who tallied the most total wins.",
    "SELECT T1.`url` FROM drivers AS T1 INNER JOIN ( SELECT `driverId`, COUNT(*) AS `total_races` FROM lapTimes GROUP BY `driverId` ORDER BY `total_races` DESC LIMIT 1 ) AS T2 ON T1.`driverId` = T2.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers who participated in the French Grand Prix, who has the slowest time in the 3rd lap.",
    "SELECT T1.`driverId`, T1.`fastestLapTime` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN circuits AS T3 ON T2.`circuitId` = T3.`circuitId` WHERE T3.`name` = 'French Grand Prix' AND T1.`lap` = 3 AND T1.`fastestLapTime` IS NOT NULL ORDER BY T1.`fastestLapTime` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In which race did the fastest 1st lap time was recorded? Please indicate the time in milliseconds.",
    "SELECT T1.`time` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`position` = 1 ORDER BY T1.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
    "SELECT T1.`dob` FROM (SELECT * FROM results WHERE `raceId` IN ( SELECT `raceId` FROM races WHERE `year` = 2006 AND `circuitId` IN ( SELECT `circuitId` FROM circuits WHERE `country` = 'USA' ) ) ORDER BY `rank` ASC LIMIT 10 ) AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "List down top 5 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
    "SELECT T2.`forename`, T2.`surname`, T1.`duration` FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`nationality` = 'German' AND T2.`dob` BETWEEN '1980-01-01' AND '1985-12-31' ORDER BY T1.`duration` ASC LIMIT 5\t----- bird -----\tformula_1"
  ],
  [
    "Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.",
    "SELECT T2.`time` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`year` = 2008 AND T2.`name` = 'Canadian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
    "SELECT T1.`url` FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T2.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2009 ) AND T2.`position` = 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the full name and date of birth of Austrian drivers born between 1981 and 1991?",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN status AS T2 ON T1.statusId = T2.statusId WHERE T1.dob BETWEEN '1981-01-01' AND '1991-12-31' AND T2.status = 'Austrian'\t----- bird -----\tformula_1"
  ],
  [
    "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.",
    "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 INNER JOIN status AS T2 ON T1.url = T2.url WHERE T1.dob BETWEEN '1971-01-01' AND '1985-12-31' AND T1.nationality = 'German' AND T2.status = 'Withdrew' ORDER BY T1.dob DESC\t----- bird -----\tformula_1"
  ],
  [
    "In which location does the Hungaroring circuit located? Also, find the country and coordinates of this circuit?",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitRef` = 'hungaroring'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
    "SELECT AVG(T1.points) FROM constructorStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = ( SELECT MIN(year) FROM seasons WHERE year BETWEEN 1980 AND 2010 ) AND T2.name = 'Monaco Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What is the average score of Lewis Hamilton among all the Turkish Grand Prix?",
    "SELECT AVG(T1.points) FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Turkish Grand Prix' AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the annual average number of races held during the first 10 years of the 21st century?",
    "SELECT AVG(DATEDIFF(year, '2000-01-01', '2010-12-31') / COUNT(DISTINCT races.`circuitId`)) FROM races JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE DATE(races.`date`) BETWEEN '2000-01-01' AND '2010-12-31'\t----- bird -----\tformula_1"
  ],
  [
    "Which citizenship do the vast majority of the drivers hold?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
    "SELECT T2.`surname`, T2.`forename` FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`position` = 91\t----- bird -----\tformula_1"
  ],
  [
    "In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?",
    "SELECT T1.`time` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`time` = ( SELECT MIN(lapTimes.`time`) FROM lapTimes INNER JOIN races ON lapTimes.`raceId` = races.`raceId` )\t----- bird -----\tformula_1"
  ],
  [
    "Which racetrack hosted the most recent race? Indicate the full location.",
    "SELECT circuits.`name`, circuits.`location`, circuits.`country` FROM circuits INNER JOIN races ON races.`circuitId` = circuits.`circuitId` WHERE races.`year` = ( SELECT MAX(`year`) FROM races )\t----- bird -----\tformula_1"
  ],
  [
    "What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many accidents did the driver who had the highest number accidents in the Canadian Grand Prix have?",
    "SELECT T1.`nationality` FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`status` = 'Withdrew' ORDER BY T2.`stop` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many wins was achieved by the oldest racer? Indicate his/her full name.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time a driver had ever spent at a pit stop?",
    "SELECT T1.`date` FROM races AS T1 INNER JOIN ( SELECT `raceId`, MAX(pitStops.`duration`) AS `max_duration` FROM pitStops GROUP BY `raceId` ) AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`max_duration` = ( SELECT MAX(pitStops.`duration`) FROM pitStops )\t----- bird -----\tformula_1"
  ],
  [
    "Among all the lap records set on various circuits, what is the time for the fastest one?",
    "SELECT MAX(lapTimes.time) as fastest_lap_time FROM races INNER JOIN lapTimes ON races.raceId = lapTimes.raceId INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN driverStandings ON drivers.driverId = driverStandings.driverId INNER JOIN results ON driverStandings.raceId = results.raceId WHERE results.points IS NOT NULL ORDER BY results.points DESC, driverStandings.position ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time that Lewis Hamilton had spent at a pit stop?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?",
    "SELECT T1.`fastestLapTime` FROM races AS T1 JOIN seasons ON T1.`year` = seasons.`year` WHERE seasons.`year` = 2011 AND T1.`fastestLapTime` = ( SELECT MIN(T2.`fastestLapTime`) FROM races AS T2 JOIN seasons ON T2.`year` = seasons.`year` WHERE seasons.`year` = 2011 )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time each driver spent at the pit stop during the 2011 Australian Grand Prix.",
    "SELECT T1.`driverId`, T1.`time` FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2011\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
    "SELECT fastestLapTime FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND lapTimes.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the shortest lap time ever record in a Formula_1 race? Please give his full name.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` INNER JOIN seasons AS T4 ON T3.`year` = T4.`year` WHERE T2.`time` = ( SELECT MIN(T5.`time`) FROM lapTimes AS T5 INNER JOIN races AS T6 ON T5.`raceId` = T6.`raceId` INNER JOIN seasons AS T7 ON T6.`year` = T7.`year` WHERE T7.`year` = ( SELECT MAX(`year`) FROM seasons ) )\t----- bird -----\tformula_1"
  ],
  [
    "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?",
    "SELECT T1.`position` FROM lapTimes AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`time` = ( SELECT MIN(lapTimes.`time`) FROM lapTimes INNER JOIN circuits ON lapTimes.`circuitId` = circuits.`circuitId` WHERE T2.`name` = 'Monaco Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record for the Austrian Grand Prix Circuit?",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes ON T1.driverId = lapTimes.driverId INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix' AND lapTimes.time = ( SELECT MIN(lapTimes.time) FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the lap records for the circuits in Italy.",
    "SELECT T1.`circuitRef`, T1.`name`, T2.`time` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`country` = 'Italy' AND T2.`time` IS NOT NULL ORDER BY T2.`time` ASC\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?",
    "SELECT T1.`name` FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T2.`position` = ( SELECT MIN(T3.`position`) FROM constructorStandings AS T3 )\t----- bird -----\tformula_1"
  ],
  [
    "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
    "SELECT T1.`fastestLapTime` FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`raceId` IN ( SELECT T3.`raceId` FROM races AS T3 INNER JOIN circuits AS T4 ON T3.`circuitId` = T4.`circuitId` WHERE T4.`name` = 'Austrian Grand Prix' AND T3.`year` = 2005 ) ORDER BY T1.`fastestLapTime` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the circuits whose lap record is 1:29.488.",
    "SELECT T1.time FROM circuits AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.circuitRef = ( SELECT MIN(circuitRef) FROM circuits )\t----- bird -----\tformula_1"
  ],
  [
    "What was the average time in milliseconds Lewis Hamilton spent at a pit stop during Formula_1 races?",
    "SELECT AVG(lapTimes.milliseconds) FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN (SELECT * FROM status WHERE status = 'Pit Stop') as status ON results.statusId = status.statusId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?",
    "SELECT AVG(milliseconds) FROM lapTimes INNER JOIN drivers ON lapTimes.driverId = drivers.driverId INNER JOIN races ON lapTimes.raceId = races.raceId WHERE races.year = ( SELECT MAX(seasons.year) FROM seasons ) AND drivers.gender IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which player has the highest overall rating? Indicate the player's api id.",
    "SELECT Player.`player_api_id` FROM Player\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the height of the tallest player? Indicate his name.",
    "SELECT Player.`player_name` FROM Player JOIN Player_Attributes ON Player.`player_api_id` = Player_Attributes.`player_api_id` JOIN Team ON Player_Attributes.`team_api_id` = Team.`team_api_id` JOIN Team_Attributes ON Team.`team_api_id` = Team_Attributes.`team_api_id` WHERE Player_Attributes.`height` = ( SELECT MAX(Player_Attributes.`height`) FROM Player_Attributes WHERE Player_Attributes.`player_api_id` = Player.`player_api_id` ) AND Team_Attributes.`buildUpPlaySpeed` = ( SELECT MAX(Team_Attributes.`buildUpPlaySpeed`) FROM Team_Attributes WHERE Team_Attributes.`team_api_id` = Team.`team_api_id` )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the player with the lowest potential?",
    "SELECT T2.`sname` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` ORDER BY T1.`NumTstTakr` ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
    "SELECT COUNT(*) FROM Player_Attributes WHERE Player_Attributes.`overall_rating` BETWEEN 60 AND 65 AND Player_Attributes.`defensive_work_rate` = 'low'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most goals in the 2016 season?",
    "SELECT P1.player_name FROM Match AS T1 INNER JOIN Player AS T2 ON T1.away_player_11 = T2.player_api_id INNER JOIN Player_Attributes AS T3 ON T2.player_api_id = T3.player_api_id WHERE T3.season = '2016' GROUP BY T1.away_player_11 ORDER BY SUM(T1.home_team_goal + T1.away_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which home team had lost the fewest matches in the 2016 season?",
    "SELECT T1.`team_short_name` FROM Team AS T1 INNER JOIN Match AS T2 ON T1.`team_api_id` = T2.`away_team_api_id` WHERE T2.`season` = '2016/2017' AND T2.`away_team_goal` = ( SELECT MAX(away_team_goal) FROM Match WHERE season = '2016/2017' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Indicate the full names of the top 10 players with the highest number of penalties.",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN ( SELECT `player_api_id`, MAX(`penalties`) AS max_penalties FROM Player GROUP BY `player_api_id` ORDER BY `max_penalties` DESC LIMIT 10 ) AS T2 ON T1.`player_api_id` = T2.`player_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "In Scotland Premier League, which away team won the most during the 2010 season?",
    "SELECT team_short_name FROM Team WHERE team_api_id = ( SELECT MAX(away_team_api_id) FROM Match WHERE season = '2010/2011' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed?",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`buildUpPlayPositioningClass` = 'Free Form' ORDER BY T2.`buildUpPlayPositioning` DESC LIMIT 4\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which League had the most matches end as draw in the 2016 season?",
    "SELECT T1.away_team_api_id, T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.season = '2016' GROUP BY T1.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
    "SELECT T1.`id`, T1.`player_name`, T1.`birthday` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` INNER JOIN Match AS T3 ON T1.`player_api_id` = T3.`away_player_1` WHERE T2.`sprint_speed` >= 97 AND T3.`date` >= '2013-01-01 00:00:00' AND T3.`date` < '2016-12-31 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the name of the league with the highest matches of all time and how many matches were played in the said league.",
    "SELECT COUNT(DISTINCT Team.`team_api_id`) FROM Team INNER JOIN Team_Attributes ON Team.`team_api_id` = Team_Attributes.`team_api_id` WHERE Team_Attributes.`date` IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average height of players born between 1990 and 1995?",
    "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the players' api id who had the highest above average overall ratings in 2010.",
    "SELECT MAX(overall_rating) FROM Player_Attributes WHERE substr(date,1,4) = '2010'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.",
    "SELECT MIN(T1.`buildUpPlaySpeed`) FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlaySpeed` BETWEEN 51 AND 59\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the long name of teams with above-average build-up play passing in 2012.",
    "-- List the long name of teams with above-average build-up play passing in 2012. SELECT T1.`team_long_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`season` = '2012' AND T1.`buildUpPlayPassing` is not NULL AND T1.`buildUpPlayPassing` != 'None'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",
    "-- Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992. SELECT AVG(T1.`preferred_foot`) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`preferred_foot` = 'left' AND T2.`birthday` BETWEEN '1987-01-01 00:00:00'AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 5 leagues in ascending order of the number of goals made in all seasons combined.",
    "SELECT T1.`league_id`, SUM(T1.`home_team_goal` + T1.`away_team_goal`) AS `Total Goals` FROM Match AS T1 INNER JOIN League AS T2 ON T1.`league_id` = T2.`id` GROUP BY T1.`league_id` ORDER BY `Total Goals` DESC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "Find the average number of long-shot done by Ahmed Samir Farag.",
    "SELECT SUM(long_shots) FROM Player INNER JOIN Player_Attributes ON Player.`player_api_id` = Player_Attributes.`player_api_id` WHERE player_name = 'Ahmed Samir Farag'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
    "-- List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy. SELECT player_name, AVG(SUM(heading_accuracy) / COUNT(player_fifa_api_id)) as average_heading_accuracy FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE height > 180 GROUP BY player_name ORDER BY average_heading_accuracy DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
    "SELECT T1.`name` FROM League AS T1 INNER JOIN Match AS T2 ON T1.`country_id` = T2.`country_id` WHERE T2.`season` = '2009/2010' AND T2.`home_team_goal` > T2.`away_team_goal`\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the short name of the football team Queens Park Rangers?",
    "SELECT SUM(CASE WHEN Match.`away_player_1` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_2` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_3` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_4` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_5` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_6` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_7` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_8` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_9` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_10` IS NOT NULL THEN 1 ELSE 0 END) + SUM(CASE WHEN Match.`away_player_11` IS NOT NULL THEN 1 ELSE 0 END) FROM Player INNER JOIN Match ON Player.`player_api_id` = Match.`away_player_1` WHERE Match.`away_team_api_id` = ( SELECT team_api_id FROM Team WHERE team_short_name = 'Queens Park Rangers' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football players with a birthyear of 1970 and a birthmonth of October.",
    "SELECT T1.`player_name` FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`date` >= '2007-02-22 00:00:00' AND T1.`birthyear` = 1970 AND T1.`birthmonth` = 'October'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the attacking work rate of the football playerr Franco Zennaro?",
    "SELECT T1.`attacking_work_rate` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Franco Zennaro'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch?",
    "-- What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch? SELECT T1.`buildUpPlayPositioningClass`, T1.`buildUpPlaySpeedClass`, T1.`buildUpPlayDribblingClass` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_long_name` = 'ADO Den Haag' AND T2.`buildUpPlayPositioningClass` = 'Free Form' AND T2.`buildUpPlaySpeedClass` = 'Medium' AND T2.`buildUpPlayDribblingClass` = 'Normal'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
    "SELECT T1.`heading_accuracy` FROM Match AS T1 JOIN Player AS T2 ON T1.`away_player_11` = T2.`player_api_id` JOIN Player_Attributes AS T3 ON T2.`player_api_id` = T3.`player_api_id` JOIN Player AS T4 ON T1.`home_player_11` = T4.`player_api_id` JOIN Player_Attributes AS T5 ON T4.`player_api_id` = T5.`player_api_id` WHERE T3.`player_name` = 'Francois Affolter' AND T1.`date` = '2014-09-18 00:00:00' AND T5.`player_name` = 'Francois Affolter' AND T1.`date` = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the overall rating of the football player Gabriel Tamas in year 2011?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
    "SELECT COUNT(*) FROM Team\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the youngest football player?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest potential score.",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`potential` = ( SELECT MAX(T4.`potential`) FROM Player AS T3 INNER JOIN Player_Attributes AS T4 ON T3.`player_api_id` = T4.`player_api_id` WHERE T4.`potential` IS NOT NULL )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among all the players whose weight is under 130, how many of them preferred foot in attacking is left?",
    "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE weight < 130 AND Player_Attributes.preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football teams that has a chance creation passing class of Risky. Inidcate its short name only.",
    "SELECT T1.`team_short_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`chanceCreationPassingClass` = 'Mixed'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the defensive work rate of the football player David Wilson\n?",
    "SELECT T1.`defensive_work_rate` FROM Player_Attributes AS T1 INNER JOIN Player ON T1.`player_api_id` = Player.`player_api_id` WHERE Player.`player_name` = 'David Wilson'\t----- bird -----\teuropean_football_2"
  ],
  [
    "When is the birthday of the football player who has the highest overall rating?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of the football league in the country of Netherlands?",
    "SELECT League.name FROM League JOIN Country ON League.country_id = Country.id\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
    "SELECT AVG(home_team_goal) FROM Match WHERE season = '2010/2011' AND country_id = (SELECT id FROM Country WHERE name = 'Poland')\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who has the highest average finishing rate between the highest and shortest football player?",
    "-- Who has the highest average finishing rate between the highest and shortest football player? SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing IS NOT NULL GROUP BY Player.player_api_id ORDER BY AVG(Player_Attributes.finishing) DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list player names which are higher than 180.",
    "SELECT Player.`player_name` FROM Player WHERE Player.`height` > 180\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players were born after 1990?",
    "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players whose first names are Adam and weigh more than 170?",
    "SELECT AVG(T1.`potential`) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`potential` > 80\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which players had an overall rating of over 80 from 2008 to 2010? Please list player names.",
    "SELECT Player.`player_name` FROM Player_Attributes INNER JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE Player_Attributes.`overall_rating` = 80 AND strftime('%Y', date) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Doran's potential score?",
    "SELECT T1.potential AS 'Aaron_Doran_potential_score', AVG(T2.potential) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Doran'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List out of players whose preferred foot is left.",
    "SELECT `player_name` FROM Player INNER JOIN Player_Attributes ON Player.`player_api_id` = Player_Attributes.`player_api_id` WHERE `preferred_foot` = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list all team names which the speed class is fast.",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`buildUpPlaySpeedClass` = 'Fast'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the passing class of CLB team?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which teams have build up play passing more than 70? Please list their short names.",
    "SELECT T2.`team_api_id` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlayPassing` > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "From 2010 to 2015, what was the average overall rating of players who are higher than 170?",
    "SELECT AVG(Player_Attributes.`overall_rating`) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE Player.`height` > 170 AND strftime('%Y', date) BETWEEN '2010' AND '2015'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which football player has the shortest height?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the league Italy Serie A from?",
    "SELECT T1.`name` FROM Country AS T1 INNER JOIN League AS T2 ON T1.`id` = T2.`country_id` WHERE T2.`name` = 'Italy Serie A'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`buildUpPlayDribbling` = 53 AND T2.`buildUpPlayPassing` = 32\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the football player Aaron Doran?",
    "SELECT AVG(overall_rating) FROM Player_Attributes WHERE <column> is NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?",
    "-- How many matches were held in the league Germany 1. Bundesliga -- from August to October 2008? SELECT COUNT(*) FROM Match WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Germany 1. Bundesliga' ) AND strftime('%Y-%m', date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the short name of the football team that had a home team goal of 10?",
    "SELECT T1.`team_short_name` FROM Team AS T1 INNER JOIN Match AS T2 ON T1.`team_api_id` = T2.`away_team_api_id` WHERE T2.`home_team_goal` = 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest balance score and potential score of 61.",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`balance` = ( SELECT MAX(T4.`balance`) FROM Player AS T3 INNER JOIN Player_Attributes AS T4 ON T3.`player_api_id` = T4.`player_api_id` WHERE T4.`balance` > 0 ) AND T2.`potential` = 61\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
    "SELECT (SUBTRACT(AVG(ball_control WHERE player_name = 'Abdou Diallo'), AVG(ball_control WHERE player_name = 'Aaron Appindangoye')) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name IN ('Abdou Diallo', 'Aaron Appindangoye'))\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the long name for the team GEN?",
    "-- What's the long name for the team GEN? SELECT team_long_name FROM Team WHERE team_short_name = 'GEN';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is older, Aaron Lennon or Abdelaziz Barrada?",
    "SELECT CASE WHEN (YEAR(CURRENT_DATE) - YEAR(T1.birthday) - (RIGHT(CURRENT_DATE, 5) - RIGHT(T1.birthday, 5))) > (YEAR(CURRENT_DATE) - YEAR(T2.birthday) - (RIGHT(CURRENT_DATE, 5) - RIGHT(T2.birthday, 5))) THEN 'Aaron Lennon' ELSE 'Abdelaziz Barrada' END\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is the tallest?",
    "SELECT MAX(Player_Attributes.height) AS \"TallestPlayer\" FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name IS NOT NULL AND Player.player_name != 'None'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
    "SELECT COUNT(T1.`player_api_id`) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`attacking_work_rate` = 'low' AND T1.`preferred_foot` = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the Belgium Jupiler League from?",
    "SELECT Player.`player_api_id` FROM Player JOIN Player_Attributes ON Player.`player_api_id` = Player_Attributes.`player_api_id` WHERE Player_Attributes.`attacking_work_rate` = 'None' ORDER BY Player.`player_api_id` ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the leagues from Germany.",
    "SELECT name FROM League WHERE country_id = ( SELECT id FROM Country WHERE name = 'Germany' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player has the strongest overall strength?",
    "SELECT P.`player_name`, MAX(PA.`shot_power`) AS `max_shot_power` FROM Player AS P JOIN Player_Attributes AS PA ON P.`player_api_id` = PA.`player_api_id` GROUP BY P.`player_name` ORDER BY `max_shot_power` DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",
    "SELECT SUM(COUNT(Player_Attributes.player_api_id) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE strftime('%Y', Player.birthday) < '1986' AND Player_Attributes.defensive_work_rate = 'high'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone?",
    "SELECT T2.`player_name` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') AND T1.`overall_rating` IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the heading accuracy of Ariel Borysiuk?",
    "SELECT Player.`player_api_id` FROM Player_Attributes INNER JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE Player.`player_name` = 'Ariel Borysiuk'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose height is over 180, how many of them have a volley score of over 70?",
    "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Team ON Player_Attributes.team_api_id = Team.team_api_id JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Player.height > 180 AND Team_Attributes.volley_score > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the names of the players whose volley score and dribbling score are over 70.",
    "SELECT COUNT(*) FROM Player_Attributes AS T1 INNER JOIN Player ON T1.player_api_id = Player.player_api_id WHERE T1.volleys > 70 AND T1.dribbling > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2008/2009 season were held in Belgium?",
    "SELECT COUNT(*) FROM Team_Attributes WHERE `date` = '2008/2009' AND Country.name = 'Belgium'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the long passing score of the oldest player?",
    "SELECT T1.long_passing FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = ( SELECT MAX(T3.birthday) FROM Player AS T3 WHERE T3.birthday < T1.birthday )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the Belgium Jupiler League in April, 2009?",
    "-- How many matches were held in the Belgium Jupiler League in April, 2009? SELECT COUNT(*) FROM Match JOIN Team ON Match.`away_team_api_id` = Team.`team_api_id` JOIN Team AS home_team ON Match.`home_team_api_id` = home_team.`team_api_id` JOIN Player ON Match.`away_player_11` = Player.`player_api_id` JOIN Player AS home_player ON Match.`home_player_11` = home_player.`player_api_id` WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Belgium Jupiler League' ) AND strftime('%Y', date) = '2009' AND strftime('%m', date) = '04\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most matches in the 2008/2009 season?",
    "-- Which league had the most matches in the 2008/2009 season? SELECT L.`name` FROM League AS L INNER JOIN Match ON L.`id` = Match.`league_id` WHERE Match.`season` = '2008/2009' GROUP BY L.`name` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the players born before the year 1986?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much is the average build up play speed of the Heart of Midlothian team?",
    "SELECT Team.`team_long_name` FROM Team_Attributes INNER JOIN Team ON Team_Attributes.`team_api_id` = Team.`team_api_id` WHERE Team_Attributes.`buildUpPlaySpeedClass` = 'Fast' ORDER BY AVG(Team_Attributes.`buildUpPlaySpeed`) ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average overall rating of Pietro Marino.",
    "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Pietro Marino'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Lennox's total crossing score?",
    "SELECT T2.total_score FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Ajax's highest chance creation passing score and what is it classified as?",
    "SELECT T2.`chanceCreationPassingClass` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'Ajax'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which foot is preferred by Abdou Diallo?",
    "SELECT player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Player_Attributes ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id WHERE Player.player_api_id = ( SELECT Player_Attributes.player_api_id FROM Player_Attributes WHERE Player_Attributes.player_fifa_api_id = ( SELECT Player.player_fifa_api_id FROM Player WHERE Player.player_api_id = 1 ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the highest overall rating received by Dorlan Pabon?",
    "SELECT T1.overall_rating FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average number of goals made by Parma as the away team while playing in Italy?",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` IS NOT NULL AND T2.`away_team_goal` > 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
    "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = 77 AND Player_Attributes.date = '2016-06-23'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the overall rating for Aaron Mooy on 2016/2/4?",
    "SELECT `team_api_id` FROM Team WHERE `date` = '2016-02-04 00:00:00' AND `team_api_id` IN ( SELECT `team_api_id` FROM Team_Attributes WHERE `date` = '2016-02-04 00:00:00' ) ORDER BY `team_api_id` ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the potiential for Francesco Parravicini on 2010/8/30?",
    "SELECT `potential` FROM Player_Attributes JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE `player_name` = 'Francesco Parravicini' AND `date` = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was Francesco Migliore's attacking work rate on 2015/5/1?",
    "SELECT T1.`potential` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Francesco Migliore' AND T1.`date` = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the defensive work rate for Kevin Berigaud on 2013/2/22.",
    "SELECT T1.`defensive_work_rate` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_long_name` = 'Kevin Berigaud' AND T1.`date` = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the build up play speed class for \"Willem II\" on 2011/2/22?",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2011-02-22 00:00:00' AND T2.player_name = 'Willem II'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
    "SELECT T1.`buildUpPlaySpeedClass` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_short_name` = 'LEI' AND T1.`date` = '2015-09-10'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.",
    "-- Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22. SELECT buildUpPlayPassingClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id JOIN Player ON Team.team_api_id = Player.team_api_id WHERE Player.player_name = 'FC Lorient' AND Team_Attributes.date = '2010-02-22'\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
    "SELECT T1.`chance_creation_passing_class` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_long_name` = 'PEC Zwolle' AND T1.`date` = '2013-09-20 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
    "SELECT `chance_creation_crossing` FROM Team_Attributes JOIN Team ON Team_Attributes.`team_api_id` = Team.`team_api_id` JOIN Player ON Team.`team_api_id` = Player.`team_api_id` WHERE `date` = '2010-02-22 00:00:00' AND `team_long_name` = 'Hull City'\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
    "SELECT T1.`buildUpPlaySpeedClass` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_long_name` = 'Hannover 96' AND T1.`date` = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
    "SELECT AVG(potential) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE player_name = 'Marko Arnatovic' AND date BETWEEN '2007-02-22 00:00:00' and '2016-04-21 00:00:00' AND potential IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
    "SELECT DIVIDE(SUBTRACT(Player_Attributes.overall_rating, (SELECT Player_Attributes.overall_rating FROM Player_Attributes WHERE Player.player_api_id = Player_Attributes.player_api_id AND Player.player_name = 'Landon Donovan')), (SELECT Player_Attributes.overall_rating FROM Player_Attributes WHERE Player.player_api_id = Player_Attributes.player_api_id AND Player.player_name = 'Jordan Bowery'))*100 FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Landon Donovan' AND Player_Attributes.date = '2013-07-12 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down 5 tallest players' name.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the player api id of 10 heaviest players?",
    "SELECT T1.`player_api_id` FROM Player AS T1 ORDER BY `weight` DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the name of players who are 35 years old and above.",
    "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Player_Attributes_temp ON Player_Attributes.player_fifa_api_id = Player_Attributes_temp.player_fifa_api_id WHERE DATE_PART('year', AGE(CURRENT_TIMESTAMP, Player.birthday)) > 34\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many home team goal have been scored by Aaron Lennon?",
    "SELECT AVG(T1.`away_team_api_id`) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.`away_player_1` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Lennon' AND T2.`player_name` IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "Sum up the away team goal scored by both Daan Smith and Filipe Ferreira.",
    "SELECT T1.`away_team_goal` FROM Match AS T1 INNER JOIN Player AS T2 ON T1.`away_player_1` = T2.`player_api_id` INNER JOIN Player_Attributes AS T3 ON T2.`player_api_id` = T3.`player_api_id` INNER JOIN Team AS T4 ON T1.`away_team_api_id` = T4.`team_api_id` WHERE T1.`away_team_api_id` = '10000000' AND T2.`player_name` = 'Filipe Ferreira' AND T3.`overall_rating` IS NOT NULL AND T4.`team_long_name` = 'Filipe Ferreira\\'s Team'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the total home team goal scored by players whose age are 30 years old and below.",
    "SELECT SUM(IFNULL(EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM birthday), 31)) FROM Player WHERE EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM birthday) <= 30\t----- bird -----\teuropean_football_2"
  ],
  [
    "State 10 names of the strongest players.",
    "SELECT T2.`overall_rating` FROM Player_Attributes AS T2 WHERE T2.`player_api_id` = ( SELECT MAX(T1.`player_api_id`) FROM Match AS T1 JOIN Team AS T3 ON T1.`away_team_api_id` = T3.`team_api_id` JOIN Team_Attributes AS T4 ON T3.`team_api_id` = T4.`team_api_id` WHERE T1.`home_player_11` = T2.`player_api_id` AND T4.`buildUpPlaySpeedClass` = 'Fast' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of players with the highest potential?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
    "SELECT Player.player_name FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player_Attributes.attacking_work_rate = 'high'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with finishing rate of 1, pick the eldest player and state the player's name.",
    "SELECT T1.`player_name` FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`finishing` = 1 ORDER BY T1.`birthday` DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the name of players who came from Belgium.",
    "SELECT AVG(P1.age) FROM Player AS P1 INNER JOIN Player_Attributes AS P2 ON P1.player_api_id = P2.player_api_id INNER JOIN Country AS C1 ON P1.country_id = C1.id WHERE C1.name = 'Belgium'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Locate players with vision scores of 90 and above, state the country of these players.",
    "SELECT T2.`vision` FROM player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`vision` > 89\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country's players have the heaviest average weights?",
    "SELECT L1.name AS League, P.player_name, AVG(PA.weight) AS Average_Weight FROM Player AS P INNER JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id INNER JOIN League AS L1 ON L1.country_id = PA.country_id INNER JOIN Team AS T ON T.team_api_id = PA.team_api_id INNER JOIN Team_Attributes AS TA ON TA.team_api_id = T.team_api_id WHERE PA.weight IS NOT NULL AND P.player_name != 'None' GROUP BY P.player_name, L1.name ORDER BY Average_Weight DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the long name for slow speed class team.",
    "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the short name of team who played safe while creating chance of passing?",
    "SELECT AVG(T1.`team_short_name`) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`chanceCreationShootingClass` = 'Safe' AND T2.`chanceCreationShooting` IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average heights of Italy players?",
    "SELECT AVG(T4.`overall_rating`) FROM Player AS T4 INNER JOIN Player_Attributes AS T5 ON T4.`player_api_id` = T5.`player_api_id` INNER JOIN Team AS T6 ON T5.`team_api_id` = T6.`team_api_id` INNER JOIN Country AS T7 ON T6.`country_id` = T7.`id` WHERE T7.`name` = 'Italy'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the names of top three football players who are over 180 cm tall in alphabetical order.",
    "SELECT AVG(T2.height) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.height > 180\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many football players born after the 1990s have the first name \"Aaron\"?",
    "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Team ON Player_Attributes.team_api_id = Team.team_api_id WHERE player_name LIKE 'Aaron%' AND EXTRACT(YEAR FROM birthday) > 1990\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference between players 6 and 23's jumping scores?",
    "SELECT (T1.jumping + T2.jumping) FROM Player AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.id = 6 AND T2.id = 23\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide top three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
    "-- Please provide top three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking. SELECT id FROM Player WHERE `preferred_foot` = 'right' AND `potential` <= ( SELECT potential FROM Player WHERE `preferred_foot` = 'right' ORDER BY `potential` ASC LIMIT 1 ) ORDER BY `potential` ASC LIMIT 3\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`shooting` = ( SELECT MAX(T8.`shooting`) FROM Player_Attributes AS T8 INNER JOIN Player AS T9 ON T8.`player_api_id` = T9.`player_api_id` WHERE T9.`preferred_foot` = 'left' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage of players have a strength and stamina score of more than 80?",
    "SELECT ( SELECT AVG(T3.`strength` + T3.`stamina`) FROM Player_Attributes AS T3 INNER JOIN Player AS T4 ON T3.`player_api_id` = T4.`player_api_id` WHERE T3.`strength` > 80 AND T3.`stamina` > 80 ) / ( SELECT AVG(T5.`strength` + T5.`stamina`) FROM Player_Attributes AS T5 INNER JOIN Player AS T6 ON T5.`player_api_id` = T6.`player_api_id` WHERE T5.`strength` > 80 AND T5.`stamina` > 80 ) * 100\t----- bird -----\teuropean_football_2"
  ],
  [
    "In what country did the Poland Ekstraklasa take place?",
    "SELECT `name` FROM Country WHERE `id` = ( SELECT `team_api_id` FROM Team_Attributes WHERE `defenceDefenderLineClass` = 'Cover' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
    "SELECT T1.`home_team_goal`, T1.`away_team_goal` FROM Match AS T1 INNER JOIN Team AS T2 ON T1.`away_team_api_id` = T2.`team_api_id` INNER JOIN Team_Attributes AS T3 ON T2.`team_api_id` = T3.`team_api_id` WHERE T1.`date` = '2008-09-24' AND T3.`buildUpPlaySpeedClass` = 'Normal' AND T3.`chanceCreationShootingClass` = 'Normal' AND T3.`defenceDefenderLineClass` = 'Cover' AND T3.`defencePressureClass` = 'Deep' AND T3.`defenceAggressionClass` = 'Double' AND T3.`defenceTeamWidthClass` = 'Wide' AND T3.`buildUpPlayDribblingClass` = 'Normal' AND T3.`buildUpPlaySpeedClass` = 'Normal' AND T3.`chanceCreationPassingClass` = 'Normal' AND T3.`chanceCreationCrossingClass` = 'Normal' AND T3.`chanceCreationShootingClass` = 'Normal' AND T3.`defenceTeamWidthClass` = 'Wide' AND T3.`defenceTeamWidthClass` = 'Wide' AND T3.`defenceDefenderLineClass` = 'Cover' AND T3.`defenceAggressionClass` = 'Double' AND T3.`defencePressureClass` = 'Deep'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
    "SELECT `acceleration` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Alexis Blin' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Does the KSV Cercle Brugge team have a slow, balanced or fast speed class?",
    "SELECT T1.team_long_name FROM Team_Attributes AS T1 WHERE T1.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2"
  ],
  [
    "In the 2015–2016 season, how many games were played in the Italian Serie A league?",
    "SELECT COUNT(DISTINCT T1.`player_api_id`) FROM Match AS T1 INNER JOIN Player AS T2 ON T1.`away_player_11` = T2.`player_api_id` WHERE T2.`player_name` IS NOT NULL AND T1.`league_id` IN ( SELECT id FROM League WHERE name = 'Italian Serie A' ) AND T1.`season` = '2015/2016'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the highest score of the home team in the Netherlands Eredivisie league?",
    "SELECT T1.`player_name` FROM Match AS T1 INNER JOIN Team AS T2 ON T1.`away_team_api_id` = T2.`team_api_id` INNER JOIN Player AS T3 ON T2.`team_api_id` = T3.`player_api_id` WHERE T1.`away_team_goal` = ( SELECT MAX(away_team_goal) FROM Match WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Netherlands Eredivisie' ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please state the finishing rate and curve score of the player who has the heaviest weight.",
    "SELECT finishing_rate, curve_score FROM Player_Attributes WHERE player_api_id = ( SELECT MAX(player_api_id) FROM Player WHERE finishing_rate IS NOT NULL )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most games in the 2015–2016 season?",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`date` = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the full name of the away team that scored the most goals.",
    "SELECT T2.`team_long_name` FROM Match AS T1 INNER JOIN Team AS T2 ON T1.`away_team_api_id` = T2.`team_api_id` WHERE T1.`away_team_goal` = ( SELECT MAX(away_team_goal) FROM Match WHERE away_team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Away Team Name' ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please name one player whose overall strength is the greatest.",
    "SELECT Player.`player_name` FROM Player_Attributes INNER JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE Player_Attributes.`overall_rating` = ( SELECT MAX(Player_Attributes.`overall_rating`) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
    "-- What is the percentage of players that are under 180 cm who have an overall strength of more than 70? SELECT (CAST(COUNT(id) AS REAL) / COUNT(id)) * 100 FROM Player_Attributes WHERE height < 180 AND overall_rating > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
    "SELECT (SUBTRACT(COUNT(Patient.ID) WHERE Patient.SEX = 'M' AND Patient.Admission = '+', COUNT(Patient.ID) WHERE Patient.SEX = 'M' AND Patient.Admission = '-')) / (COUNT(Patient.ID) WHERE Patient.SEX = 'M') * 100 as percentage_deviation FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient were born after 1930?",
    "SELECT ( SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'F' AND EXTRACT(YEAR FROM Birthday) > 1930 ) / ( SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'F' ) * 100\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between Year 1930 to 1940, how many percent of them were inpatient?",
    "-- For patient born between Year 1930 to 1940, how many percent of them were inpatient? -- Select the total number of patients born between 1930 and 1940 SELECT COUNT(*) AS Total FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31' -- Select the number of positive patients born between 1930 and 1940 SELECT COUNT(*) AS Positive FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND ANA IS NOT NULL AND ANA != 'None' AND ANA != 'None' AND ANA != 'None' AND ANA != 'None' AND ANA != 'None' -- Calculate the percentage of positive patients SELECT (Positive * 100.0) / Total FROM ( SELECT COUNT(*) AS Positive FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31' AND ANA IS NOT NULL ) AS T2 INNER JOIN ( SELECT COUNT(*) AS Total FROM Patient WHERE Birthday BETWEEN '1930-01-01' AND '1940-12-31' ) AS T3 ON 1 = 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?",
    "SELECT T1.`Admission`, T1.`Diagnosis` FROM Patient AS T1 WHERE T1.`Diagnosis` = 'SLE' GROUP BY T1.`Admission` ORDER BY T1.`Admission` LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.",
    "SELECT T1.`Date` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ID` = 30609\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had.",
    "SELECT `Symptoms` FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE Patient.`ID` = 163109\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday of patient with LDH beyond normal range.",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the ID and age of patient with positive degree of coagulation.",
    "SELECT P.ID, P.Age FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID WHERE E.KCT = '+' AND E.RVVT = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with severe degree of thrombosis, list their ID, sex and dieseas the patient is diagnosed with.",
    "SELECT T1.`ID`, T1.`SEX`, T3.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`Thrombosis` = 2 AND T3.`CRP` IS NOT NULL GROUP BY T1.`ID`, T1.`SEX`, T3.`Diagnosis`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were born in 1937 whose total cholesterol was beyond the normal range.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`Birthday` = '1937' AND T2.`aCL IgG` = '-' AND T2.`aCL IgM` = '-' AND T3.`GOT` >= '250' AND T3.`GPT` >= '250' AND T3.`LDH` >= '250' AND T3.`ALP` >= '250' AND T1.`ID` IN ( SELECT ID FROM Examination WHERE `aCL IgG` = '-' AND `aCL IgM` = '-' AND `GOT` >= '250' AND `GPT` >= '250' AND `LDH` >= '250' AND `ALP` >= '250' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient with albumin level lower than 3.5, list their ID, sex and diagnosis.",
    "-- For patient with albumin level lower than 3.5, list their ID, sex and diagnosis. SELECT Patient.ID, Patient.SEX, Patient.Diagnosis FROM Patient JOIN ( SELECT `ID`, `ALB` FROM Patient WHERE `ALB` < 3.5 ORDER BY `ALB` ASC LIMIT 1 ) AS min_alb ON Patient.`ID` = min_alb.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient had total protein not within the normal range?",
    "SELECT (SELECT COUNT(`ID`) FROM Patient WHERE `SEX` = 'F' AND (`TP` < '6.0' OR `TP` > '8.5') AND `Diagnosis` = 'SLE') / (SELECT COUNT(`ID`) FROM Patient WHERE `SEX` = 'F' AND `Diagnosis` = 'SLE') * 100\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",
    "SELECT AVG(L1.`LDH`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS L1 ON T1.`ID` = L1.`ID` WHERE T2.`Diagnosis` IS NOT NULL AND T1.`Admission` = '+' AND T1.`Diagnosis` IN ('SLE', 'SJS', 'RA', 'BEHCET', 'PSS', 'SLE, SJS')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?",
    "SELECT COUNT(*) FROM Patient WHERE `Admission` = '-' AND `Description` = '1997' AND `SEX` = 'F'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the age of the youngest patient when they initially arrived at the hospital?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN ( SELECT `ID` FROM Patient ORDER BY `First Date` ASC LIMIT 1 ) AS T2 ON T1.`ID` = T2.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many of the patients with the most serious thrombosis cases examined in 1997 are women?",
    "SELECT P.`ID` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`Thrombosis` = ( SELECT MAX(E2.`Thrombosis`) FROM Examination AS E2 WHERE E2.`Examination Date` = '1997-01-01' ) AND P.`SEX` = 'F' AND P.`ID` IN ( SELECT P2.`ID` FROM Patient AS P2 WHERE P2.`SEX` = 'F' ) AND E.`Thrombosis` != 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the age gap between the youngest and oldest patient with a normal triglyceride recorded?",
    "SELECT T1.`ID`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`tg` >= 200 ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.",
    "SELECT T1.`Description`, T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = ( SELECT MIN(T3.`Birthday`) FROM Patient AS T3 INNER JOIN Examination AS T4 ON T3.`ID` = T4.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
    "SELECT COUNT(ID), EXTRACT(MONTH FROM Date) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'M' AND Date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY EXTRACT(MONTH FROM Date)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
    "SELECT MAX(`Examination Date`), ( SELECT MAX(year(`First Date`)) FROM Patient WHERE `Diagnosis` = 'SJS' ) - ( SELECT MAX(year(Birthday)) FROM Patient WHERE `Diagnosis` = 'SJS' ) FROM Examination JOIN Patient ON Examination.`ID` = Patient.`ID` WHERE `GOT` IS NOT NULL AND `GPT` IS NOT NULL AND `LDH` IS NOT NULL AND `ALP` IS NOT NULL AND `ANA` IS NOT NULL AND `ANA Pattern` IS NOT NULL AND `Diagnosis` = 'SJS'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
    "SELECT T2.`UA`, COUNT(*) as `Total` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`UA` <= 8.0 AND T1.`SEX` = 'M' OR T2.`UA` <= 6.5 AND T1.`SEX` = 'F' GROUP BY T2.`UA`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients hadn't undergone a medical examination until at least a year following their initial hospital visit?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` IN ('SLE', 'SjS') AND T2.`Thrombosis` IN (1, 2, 3)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many underage patients were examined during the course of the three-year period from 1990 to 1993?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` < '1990-01-01' AND T2.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have elevated total bilirubin count?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 INNER JOIN Laboratory AS T3 ON T1.`ID` = T2.`ID` AND T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'M' AND T2.`T-CHO` IS NOT NULL AND T2.`T-CHO` > 200 AND T3.`CRE` IS NOT NULL AND T3.`CRE` > 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
    "SELECT Diagnosis, COUNT(*) as Diagnosis_Count FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.Examination_Date BETWEEN '1985-01-01' AND '1995-12-31' AND Patient.Description IS NOT NULL AND Diagnosis NOT LIKE '%None%' GROUP BY Diagnosis ORDER BY Diagnosis_Count DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of patients examined in the laboratory for the October of the year 1991?",
    "SELECT AVG(Laboratory.`ANTA`) FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Examination.`Date` BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis?",
    "SELECT Diagnosis, HGB FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE HGB = ( SELECT MAX(HGB) FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE HGB IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the anti-nucleus antibody concentration level for the patient id 3605340 on 1996/12/2?",
    "SELECT T1.`ALP` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ID` = ( SELECT T3.`ID` FROM Patient AS T3 INNER JOIN Laboratory AS T4 ON T3.`ID` = T4.`ID` WHERE T3.`ID` = 3605340 AND T3.`Birthday` = '1996-12-02' ) AND T1.`ALP` = ( SELECT MAX(T5.`ALP`) FROM Patient AS T5 INNER JOIN Laboratory AS T6 ON T5.`ID` = T6.`ID` WHERE T5.`ID` = 3605340 AND T5.`Birthday` = '1996-12-02' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?",
    "SELECT Examination.ID FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 2927464 AND Patient.T-CHO IS NOT NULL AND Patient.T-CHO < 250 ORDER BY Patient.T-CHO ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the gender of the first AORTITIS diagnosed patient?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`aCL IgG` = 'AORTITIS' AND T1.`First Date` IS NOT NULL AND T3.`LDH` IS NOT NULL ORDER BY T1.`First Date` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12?",
    "SELECT `aCL IgM` FROM Examination JOIN Patient ON Examination.`ID` = Patient.`ID` JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE `Diagnosis` = 'SLE' AND `Description` = '1994-02-19' AND `Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
    "SELECT DISTINCT Patient.`SEX`, Patient.`Birthday`, Patient.`Description`, Patient.`First Date`, Patient.`Admission`, Patient.`Diagnosis` FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Examination.`GPT` = '9' AND Examination.`Examination Date` = '1992-06-12' AND Patient.`SEX` IN ('M', 'F') AND Patient.`Birthday` IS NOT NULL AND Patient.`Description` IS NOT NULL AND Patient.`First Date` IS NOT NULL AND Patient.`Admission` IN ('-', '+') AND Patient.`Diagnosis` IN ('SLE', 'SjS', 'RA', 'BEHCET', 'PSS', 'SLE, SjS') AND Laboratory.`GOT` IS NOT NULL AND Laboratory.`GPT` IS NOT NULL AND Laboratory.`LDH` IS NOT NULL AND Laboratory.`ALP` IS NOT NULL ORDER BY Patient.`SEX` ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995?",
    "-- For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995? SELECT COUNT(T2.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.First_Date = '1991-06-13' AND T1.Diagnosis = 'SJS' AND T2.Date = '1995-09-04'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Examination Date` = '1997-01-27' AND T1.`First Date` = '1997-01-27' AND T2.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient whose birthday was 1959/3/1, what symptoms did he/she have during the examination on 1993/9/27?",
    "SELECT T1.Symptoms FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-03-01' AND T2.Examination Date = '1993-09-27'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
    "SELECT (SUBSTR(SUM(L1.`Date` like '1981-11-%' AND L1.`GOT` IS NOT NULL THEN L1.`GOT` - `T-CHO`), 1, 1000) - SUM(L1.`Date` like '1981-12-%' AND L1.`GOT` IS NOT NULL THEN L1.`GOT` - `T-CHO`)) / SUM(L1.`Date` like '1981-12-%' AND L1.`GOT` IS NOT NULL THEN `GOT` - `T-CHO`) * 100 AS 'Decrease Rate' FROM Laboratory AS L1 INNER JOIN Patient AS P1 ON L1.`ID` = P1.`ID` WHERE P1.`Birthday` = '1959-02-18' AND P1.`SEX` != 'F'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Lists all patients by ID who were diagnosed with Behcet's and had their exams between 01/01/197 and 12/31/1997.",
    "SELECT T2.ID FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Description IS NOT NULL AND T2.Examination_Date IS NOT NULL AND T3.GOT IS NOT NULL AND T3.GPT IS NOT NULL AND T3.LDH IS NOT NULL AND T3.ALP IS NOT NULL AND T2.Examination_Date >= '1970-01-01' AND T2.Examination_Date <= '1997-12-31' AND T1.Diagnosis LIKE '%Behcet%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients born in 1964 were admitted to the hospital? List them by ID.",
    "-- How many female patients born in 1964 were admitted to the hospital? List them by ID. SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`Admission` = '+' AND T1.`Birthday` = '1964-01-01' AND T2.`ANA` is NOT NULL AND T2.`ANA Pattern` is NOT NULL AND T2.`Diagnosis` is NOT NULL AND T2.`Symptoms` is NOT NULL AND T2.`Thrombosis` is NOT NULL GROUP BY T1.`ID` ORDER BY T1.`ID` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
    "SELECT COUNT(*) FROM Patient AS T1 JOIN Examination AS T2 ON T1.`ID` = T2.`ID` JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Thrombosis` = 2 AND T2.`ANA` = 'S' AND T3.`aCL IgM` > ( SELECT AVG(`aCL IgM`) FROM Laboratory WHERE `aCL IgM` IS NOT NULL ) * 0.8\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?",
    "SELECT CAST(COUNT(*) AS REAL) / COUNT(T1.`ID`) * 100 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`UA` < 6.5 AND T2.`U-PRO` > 0 AND T2.`U-PRO` < 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
    "SELECT MULTIPLY(SUM(DIAGNOSIS = 'BEHCET'), 100, DIVIDE(SUM(DIAGNOSIS = 'BEHCET'), MULTIPLY(COUNT(DISTINCT Examination.ID), COUNT(DISTINCT Laboratory.ID)), 100)) AS `Percentage` FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE SEX = 'M' AND YEAR(`FIRST DATE`) = '1981'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
    "SELECT AVG(`SM`) FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE `Admission` = '-' AND Examination.`Date` LIKE '1991-10%' AND `SM` != '0' AND `SM` != 'negative'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989?",
    "SELECT `SEX` FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE `First Date` IS NOT NULL AND `ANA Pattern` != 'p' AND `Birthday` BETWEEN '1980-01-01' AND '1989-12-31' AND `SEX` = 'F' ORDER BY `Birthday` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'PSS'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
    "SELECT AVG(ALB) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE SEX = 'F' AND Diagnosis = 'SLE' AND ( SELECT MAX(`Date`) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Diagnosis = 'SLE' ) = Laboratory.`Date`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common sign of patients with SLE disease?",
    "SELECT T1.Sign FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.Sign != 'None' GROUP BY T1.Sign ORDER BY COUNT(T1.Sign) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When was the medical information on patient number 48473 first documented, and what disease did she have?",
    "SELECT `Diagnosis` FROM Patient WHERE `ID` = 48473\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients were given an APS diagnosis?",
    "SELECT COUNT(*) FROM Patient WHERE `Diagnosis` IN ('SLE', 'SJS', 'BEHCET', 'PSS', 'APS') AND `Diagnosis` = 'APS'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who underwent testing in 1997 had protein levels outside the normal range?",
    "SELECT AVG(Laboratory.`TP`) FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` INNER JOIN Laboratory ON Examination.`ID` = Laboratory.`ID` WHERE YEAR(Laboratory.`Date`) = 1997 AND Laboratory.`TP` > 6 AND Laboratory.`TP` < 8.5 AND Laboratory.`TP` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What proportion of patients who had signs of thrombocytopenia had SLE diagnosed?",
    "SELECT DIVIDE(SUM(THROMBOSIS = 1 AND DIAGNOSIS LIKE '%SLE%' AND (IGG > 0 OR IGM > 0) AND (IGG > 0 OR IGM > 0)), SUM(THROMBOSIS = 1 AND DIAGNOSIS LIKE '%SLE%' AND (IGG > 0 OR IGM > 0))) * 100 FROM Patient\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
    "SELECT (DIVIDE((SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Diagnosis = 'RA' AND YEAR(BIRTHDAY) = '1980'), (SELECT COUNT(*) FROM Patient WHERE Diagnosis = 'RA' AND YEAR(BIRTHDAY) = '1980')) * 100) as percentage FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with BEHCET disease did not stay in the hospital for treatment?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Examination Date` BETWEEN '1995-01-01' AND '1995-12-31' AND T1.`SEX` = 'M' AND T1.`Diagnosis` LIKE '%BEHCET%' AND T1.`Admission` = '-' AND T3.`Date` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were female got white blood cells that were below 3.5?",
    "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE `SEX` = 'F' AND `WBC` < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
    "SELECT T2.`Examination Date` - T1.`First Date` FROM Patient AS T1 JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ID` = 821298\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient with the number 57266's uric acid within a normal range?",
    "SELECT `ID` FROM Laboratory ORDER BY `RA` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the laboratory examination of patient '48473' where his/her AST glutamic oxaloacetic transaminase (GOT) index is above the normal range.",
    "SELECT P.`ID`, P.`SEX`, P.`Birthday`, P.`Description`, P.`First Date`, P.`Admission`, P.`Diagnosis` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`GOT` >= 60 AND E.`Examination Date` IS NOT NULL ORDER BY P.`ID` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients with their sex and date of birthday, whose AST glutamic oxaloacetic transaminase (GOT) index is within normal range for loboratory examination in 1994.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GOT` < 60 AND T1.`SEX` IS NOT NULL AND T1.`Birthday` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.",
    "SELECT MIN(Laboratory.`ID`) FROM Laboratory INNER JOIN Patient ON Laboratory.`ID` = Patient.`ID` WHERE Patient.`SEX` = 'M' AND Patient.`First Date` IS NOT NULL AND Patient.`First Date` < '1996-12-03' AND Patient.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth.",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
    "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
    "SELECT P.`ID`, P.`Birthday` FROM Patient AS P INNER JOIN ( SELECT `ID`, MAX(`LDH`) AS `MaxLDH` FROM Laboratory WHERE `LDH` BETWEEN 600 AND 800 GROUP BY `ID` ) AS L ON P.`ID` = L.`ID` WHERE P.`LDH` = L.`MaxLDH`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient?",
    "SELECT T2.ALP FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '+' AND T2.ALP < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID of the patient who is born on the April 1st, 1982. Is his/her alkaliphophatase (ALP) within normal range?",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = '1982-04-01' AND T2.`ALP` < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List ID, sex and date of birth of patient whose total protein (TP) below the lower range of the normal index.",
    "SELECT Patient.`SEX` FROM Laboratory INNER JOIN Patient ON Laboratory.`ID` = Patient.`ID` WHERE Laboratory.`TP` = ( SELECT MIN(Laboratory.`TP`) FROM Laboratory INNER JOIN Patient ON Laboratory.`ID` = Patient.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal.",
    "SELECT (TP - 8.5) AS TP_Deviation FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'F' AND TP > 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Sort in descending order all patients by birthday for male patient with albumin not within range.",
    "SELECT * FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Examination.aCL_IgG is NOT NULL AND Examination.aCL_IgM is NOT NULL AND Examination.ANA is NOT NULL AND Examination.ANA Pattern is NOT NULL AND Patient.Birthday is NOT NULL AND Laboratory.LDH is NOT NULL AND Laboratory.ALP is NOT NULL AND (Examination.aCL_IgG BETWEEN 3.5 AND 5.5) AND (Examination.aCL_IgM BETWEEN 3.5 AND 5.5) AND (Examination.ANA BETWEEN 0 AND 16) AND (Examination.ANA Pattern IN ('S', 'P', 'S,P', 'P,S', 'S,D')) AND (Laboratory.LDH BETWEEN 20 AND 30) AND (Laboratory.ALP BETWEEN 30 AND 1000) ORDER BY Laboratory.LDH DESC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patient born in 1982, state if their albumin is within normal range.",
    "SELECT T1.`ALB` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = '1982-01-01' AND T1.`ALB` BETWEEN 3.5 AND 5.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of the female patient whose uric acid (UA) beyond the normal range?",
    "SELECT (T1.SEX = 'F' AND (T2.GOT > 8.0 AND T2.GOT < 6.5) AND T2.LDH > 30) * 100 FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with normal uric acid (UA), what is the average UA index based on their latest laboratory examination result?",
    "SELECT AVG(T1.UA) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.UA < 8.0 AND T2.U_PRO IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?",
    "-- Provide all ID, sex and birthday of patients whose UN just within the borderline of passing? SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`UN` = 29 ORDER BY T2.`UN` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID, sex, birthday of all patients diagnosed with 'RA' that are within the UN normal index.",
    "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.aCL_IgM = 'RA' AND T2.ANA < 30 AND T3.LDH > 50\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients are are with creatinine index out of the normal range?",
    "SELECT AVG(T1.`CRE`) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`CRE` IS NOT NULL AND T2.`SEX` = 'F' AND T1.`CRE` >= 1.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Are there more male patients with creatinine not within the normal range than female? True or False?",
    "SELECT ( SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRE >= 1.5 AND Patient.SEX = 'M' ) > ( SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.CRE >= 1.5 AND Patient.SEX = 'F' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-BIL` = ( SELECT MAX(T4.`T-BIL`) FROM Laboratory AS T4 WHERE T4.`ID` = T2.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range.",
    "SELECT T1.`T-BIL` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T1.`Birthday` IS NOT NULL AND T1.`First Date` IS NOT NULL AND T1.`Admission` IS NOT NULL AND T1.`Diagnosis` IS NOT NULL AND T2.`T-BIL` >= 2.0 ORDER BY T1.`T-BIL` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index.",
    "-- Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index. SELECT T1.ID, T2.GOT + T2.GPT + T2.LDH + T2.ALP AS T-CHO FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Description IS NOT NULL AND T2.GOT IS NOT NULL AND T2.GPT IS NOT NULL AND T2.LDH IS NOT NULL AND T2.ALP IS NOT NULL ORDER BY T1.Birthday, T2.GOT + T2.GPT + T2.LDH + T2.ALP DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of the male patient with high cholesterol?",
    "SELECT AVG(Laboratory.`GOT`) FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Examination.`T-CHO` >= 250 AND Laboratory.`GOT` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?",
    "SELECT T1.`ID`, T1.`Diagnosis`, T1.`TG` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T1.`TG` > 300 AND T2.`Thrombosis` >= 2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids.",
    "-- List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids. SELECT DISTINCT Patient.`ID` FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE Patient.`Admission` = '-' AND Examination.`CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",
    "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory AS T1 ON Patient.`ID` = T1.`ID` INNER JOIN Examination AS T2 ON Patient.`ID` = T2.`ID` WHERE T1.`GOT` >= 10000 AND T2.`KCT` >= 250 AND T2.`RVVT` >= 250 AND T2.`LAC` >= 250 AND Patient.`SEX` = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GLU` >= 180 AND T2.`T-CHO` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991.",
    "-- List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991. SELECT T1.`ID`, T1.`GLU` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Description` = ( SELECT MIN(T3.`Description`) FROM Patient AS T3 WHERE EXTRACT(YEAR FROM T3.`Description`) >= 1991 ) AND T2.`GLU` < 180\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday who has abnormal white blood cell count. Group them by sex and list the patient by age in ascending order.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`WBC` <= 3.5 OR T2.`WBC` >= 9.0 AND T2.`WBC` IS NOT NULL GROUP BY T1.`SEX` ORDER BY T1.`Birthday` ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.",
    "SELECT Patient.ID, Patient.Age FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.RBC < 3.5 AND Patient.Diagnosis LIKE '%SLE%' AND Patient.Age = (SUBSTR(CURRENT_TIMESTAMP, 1, 4) - SUBSTR(Patient.Birthday, 1, 4))\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
    "SELECT T1.`Admission` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T1.`Birthday` IS NOT NULL AND T1.`Birthday` <= CURRENT_DATE AND (T2.`RBC` < 3.5 OR T2.`RBC` >= 6.0)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex.",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`HGB` < 10 AND T1.`Admission` = '-' ORDER BY T2.`HGB` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.",
    "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Diagnosis = 'SLE' AND BIRTHDAY = ( SELECT MIN(BIRTHDAY) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Diagnosis = 'SLE' ) AND HGB BETWEEN 10 AND 17 AND U-PRO IS NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.",
    "SELECT T1.`ID`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`HCT` >= 52\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "From laboratory examinations in 1991, what is the average hematoclit level that is lower than the normal range.",
    "SELECT T1.`HCT` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Date` LIKE '1991%' AND T1.`HCT` < ( SELECT AVG(T3.`HCT`) FROM Patient AS T3 INNER JOIN Laboratory AS T4 ON T3.`ID` = T4.`ID` WHERE T4.`Date` LIKE '1991%' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
    "SELECT `SUBTRACT`(SUM(Laboratory.PLT > 400), SUM(Laboratory.PLT < 100)) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
    "SELECT AVG(PT) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SUBSTR(Admission, 1, 1) = '+' AND SEX = 'F' AND PT >= 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.",
    "-- List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal. SELECT T1.`Description` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`First Date` > '1992-01-01' AND T2.`PT` < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time?",
    "SELECT stddev(Laboratory.`DNA`) FROM Examination INNER JOIN Patient ON Examination.`ID` = Patient.`ID` INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`DNA` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal activated partial prothrom bin time, how many of them have a mild thrombosis?",
    "SELECT AVG(T1.GOT), AVG(T1.GPT), AVG(T1.LDH), AVG(T1.ALP) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.APTT > 45 AND T2.Thrombosis = 3 AND T2.Diagnosis NOT LIKE '%MCTD%' AND T2.Diagnosis NOT LIKE '%PSS%' AND T2.Symptoms NOT LIKE '%PH%' AND T2.Symptoms NOT LIKE '%AMI%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
    "SELECT AVG(T2.FG) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.WBC BETWEEN 3.5 AND 9.0 AND T2.FG < 150 AND T2.FG > 450 AND T1.ID NOT IN ( SELECT Patient.ID FROM Patient WHERE Patient.Description IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients born after 1980/1/1 have an abnormal fibrinogen level?",
    "-- How many patients born after 1980/1/1 have an abnormal fibrinogen level? SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday > '1980-01-01' AND Examination.FG BETWEEN 150 AND 450 AND Patient.ID IN ( SELECT Patient.ID FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.FG IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the disease names of the patients that have a proteinuria level higher than normal.",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`U-PRO` >= 30 AND T1.`Diagnosis` IS NOT NULL AND T3.`CRP` IS NOT NULL GROUP BY T1.`Diagnosis` ORDER BY T3.`CRP` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID.",
    "SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`Admission` = '+' AND T1.`Diagnosis` = 'SLE' AND 30 > ( SELECT `U-PRO` FROM Laboratory WHERE Laboratory.`ID` = T1.`ID` ) AND 0 < ( SELECT `U-PRO` FROM Laboratory WHERE Laboratory.`ID` = T1.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with an Ig G lower than normal has the symptom of abortion?",
    "SELECT AVG(T3.LDH) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.aCL_IgG < 900 AND T1.SEX = 'F' AND T1.Symptoms = 'abortion'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal Ig G level, how many of them have symptoms?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` BETWEEN 900 AND 2000 AND T1.`Symptoms` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who has the highest Ig A within the normal range, what is his or her diagnosis?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`IGA` = ( SELECT MAX(T3.`IGA`) FROM Laboratory AS T3 WHERE T3.`IGA` BETWEEN 80 AND 500 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?",
    "SELECT Diagnosis FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.aCL_IgM NOT BETWEEN 40 AND 400 AND Patient.Diagnosis IS NOT NULL AND Laboratory.CRP NOT LIKE '<0.3' AND Laboratory.CRP NOT LIKE '<0.2' AND Laboratory.CRP NOT LIKE '+' AND Laboratory.CRP NOT LIKE '2+' AND Laboratory.CRP NOT LIKE '<0.002' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal C-reactive protein don't have their data recorded?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Description` IS NULL AND T2.`CRP` IS NOT NULL AND T2.`CRP` LIKE '%' OR T2.`CRP` LIKE '-' OR T2.`CRP` < 1.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose C-reactive protein level is abnormal, how many of them aren't 18 yet?",
    "SELECT COUNT(DISTINCT Patient.`ID`) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`CRP` IS NOT NULL AND Laboratory.`CRP` NOT IN('+-', '-') AND Laboratory.`CRP` >= 1.0 AND (YEAR(CURDATE()) - YEAR(Birthday)) < 18\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diseases of the patients born after 1995-1-1 and have a normal Rhuematoid Factor.",
    "SELECT DISTINCT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` > '1995-01-01' AND T2.`RF` IN ('-', '+-') AND T2.`RA` IN ('-', '+-', '7-') AND T2.`Diagnosis` IS NOT NULL AND T2.`RA` NOT IN ('None', 'None-', 'None+') AND T2.`RA` NOT IN ('-', '+-', '7-') AND T2.`RA` NOT IN ('None', 'None-', 'None+')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the ID of the patient whose RF is normal and who is older than 60.",
    "SELECT T1.ID FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T2.aCL_IgG < 20 AND T3.LDH IS NOT NULL AND T1.SEX = 'F' AND T1.Birthday IS NOT NULL AND T1.First_Date IS NOT NULL AND T1.Admission = '+' AND T1.Diagnosis = 'SLE' GROUP BY T1.ID ORDER BY T3.GPT DESC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal RF don't have thrombosis?",
    "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RF < 20 AND Patient.Thrombosis = '0'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal level of complement 3 have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(DISTINCT T2.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T3.`C3` > 35 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose level of Hematoclit isn't normal, which patient has the highest anti-Cardiolipin antibody concentration? Please list his or her ID.",
    "SELECT `ID`, `SEX`, `Birthday`, `Description`, `First Date`, `Admission`, `Diagnosis` FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE `HCT` < 52 AND `HCT` > 29 AND `aCL IgA` = ( SELECT MAX(`aCL IgA`) FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE `HCT` < 52 AND `HCT` > 29 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SSB` = '0' AND T1.`Thrombosis` = 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
    "-- How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital? SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.RNP = '0' AND Patient.Admission = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth.",
    "SELECT P.Birthday FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID JOIN Laboratory AS L ON P.ID = L.ID WHERE E.Value examples NOT IN ('-', '+-') AND L.GOT NOT IN ('-', '+-') AND L.GPT NOT IN ('-', '+-') AND L.LDH NOT IN ('-', '+-') AND L.ALP NOT IN ('-', '+-') AND P.SEX = 'F' AND P.Birthday IS NOT NULL AND P.First Date = '1998-05-25' AND P.Admission = '-' AND P.Diagnosis = 'SLE' AND P.ANA NOT IN (0, 16, 64, 4, 256, 1024) AND P.ANA Pattern NOT IN ('S', 'P', 'P,S', 'S,P', 'p', 'S,D') ORDER BY P.Birthday DESC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with normal anti-SM, how many of them have the most severe degree of thrombosis?",
    "SELECT AVG(T2.`CRP`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SM` IN ('-', '+-') AND T2.`SM` = 'negative' AND T2.`CRP` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.",
    "SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`SEX` = 'M' AND T1.`Birthday` = ( SELECT MAX(T2.`Birthday`) FROM Patient AS T2 WHERE T2.`SEX` = 'M' AND T2.`Description` IS NOT NULL AND T2.`First Date` IS NOT NULL AND T2.`Admission` IN ('+', '+(') AND T2.`Diagnosis` IN ('SLE', 'SJS', 'RA', 'BEHCET', 'PSS', 'SLE, SJS') AND T2.`SM` NOT IN ('-', 'negative', '+-') ) AND T1.`SM` NOT IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients who had the examination done after 1997/1/1 and had a normal anti-scl70.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Examination Date` >= '1997-01-01' AND T2.`SC170` IN ('-', '+')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal anti-scl70, how many of them are male and have the symptom of vertigo?",
    "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE `SC170` IN ('-', '+-') AND `symptoms` = 'vertigo' AND `SEX` = 'M' AND `ANA` is NOT NULL AND `ANA Pattern` is NOT NULL AND `Diagnosis` IN ('SLE', 'SjS', 'RA', 'PSS') AND `Thrombosis` IN ('0', '1', '2', '3')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal anti-SSA came to the hospital before 1990?",
    "SELECT `DNA`, COUNT(`ID`) FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE `First Date` < '1990-01-01' AND `SSA` IN ('-', '+-') AND `DNA` IN ('-', '+-') AND `DNA` IS NOT NULL GROUP BY `DNA` ORDER BY COUNT(`ID`) DESC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID.",
    "SELECT `Diagnosis` FROM Patient WHERE `First Date` IS NOT NULL AND `Admission` NOT IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-SSB and are diagnosed with SLE in the examination?",
    "SELECT MIN(CAST(T2.`DNA` AS REAL)) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`DNA` IS NOT NULL AND T1.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose anti-SSB are normal, how many of them have other symptoms observed in their examination?",
    "SELECT AVG(Laboratory.`C4`) FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`C4` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CENTROMEA` IN ('-', '+-') AND T2.`SSB` IN ('-', '+-') AND T1.`SEX` = 'M' AND T2.`U-PRO` IS NOT NULL AND T2.`CENTROMEA` IS NOT NULL AND T2.`SSB` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.",
    "SELECT DISTINCT `Diagnosis` FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE `DNA` >= 8 AND `Diagnosis` IS NOT NULL ORDER BY `Diagnosis` ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-DNA level, yet their data are not recorded.",
    "SELECT AVG(T2.`DNA`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`DNA` IS NOT NULL AND T2.`DNA` < 8 AND T1.`Description` IS NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Of the patients with an abnormal level of anti-DNA-II, how many of them admitted to the hospital?",
    "SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG < 8 AND Examination.aCL IgM < 8 AND Examination.ANA IS NOT NULL AND Examination.ANA < 8 AND Examination.ANA Pattern IS NOT NULL AND Examination.ANA Pattern NOT LIKE '%None%' AND Patient.ID IN ( SELECT Patient.ID FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.aCL IgG < 8 AND Examination.aCL IgM < 8 AND Examination.ANA IS NOT NULL AND Examination.ANA < 8 AND Examination.ANA Pattern IS NOT NULL AND Examination.ANA Pattern NOT LIKE '%None%' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of patient who has a abnormal level of glutamic oxaloacetic transaminase level, yet he or she is diagnosed with SLE?",
    "SELECT MULTIPLY(DIVIDE(COUNT(ID), COUNT(ID) WHERE GOT > 60 AND Diagnosis = 'SLE'), 1.0) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE GOT > 60 AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have their glutamic oxaloacetic transaminase in the normal range?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`GOT` < 60 AND T1.`Description` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?",
    "SELECT P.Birthday FROM Patient AS P INNER JOIN Examination AS E ON P.ID = E.ID INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE E.GOT >= 60 AND P.Description IS NOT NULL ORDER BY P.Birthday ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the top three patients' birthdays with the highest glutamic pylvic transaminase in the normal range.",
    "-- Please list the top three patients' birthdays with the highest GPT in the normal range. SELECT P.`Birthday` FROM Patient AS P JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`GPT` < 60 AND L.`GPT` IS NOT NULL GROUP BY P.`Birthday` ORDER BY L.`GPT` DESC LIMIT 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with the normal glutamic pylvic transaminase level, how many of them are male?",
    "SELECT AVG(Laboratory.`LDH`) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`LDH` < 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with the highest lactate dehydrogenase in the normal range, when was his or her data first recorded?",
    "SELECT MIN(Patient.First Date) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH = ( SELECT MAX(Laboratory.LDH) FROM Laboratory WHERE Laboratory.LDH < 500 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.",
    "SELECT MAX(`Date`) FROM Laboratory WHERE `LDH` >= 500\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with an abnormal alkaliphophatase level, how many of them are admitted to the hospital?",
    "SELECT COUNT(`Admission`) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE `ALP` >= 300 AND `Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients followed at the outpatient clinic, how many of them have a normal level of alkaliphophatase?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-' AND T2.`ALP` < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diagnosis of the patients whose total protein is lower than normal.",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TP` < 6.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who are diagnosed with SJS, how many of them have a normal level of total protein?",
    "-- For the patients who are diagnosed with SJS, how many of them have a normal level of total protein? SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Diagnosis` = 'SJS' AND T3.`TP` > 6.0 AND T3.`TP` < 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the examination date of the patient whose albumin is the highest in the normal range?",
    "SELECT P1.`SEX` FROM Patient AS P1 INNER JOIN Laboratory AS L1 ON P1.`ID` = L1.`ID` INNER JOIN Examination AS E1 ON P1.`ID` = E1.`ID` WHERE L1.`ALB` = ( SELECT MAX(L2.`ALB`) FROM Laboratory AS L2 WHERE L2.`ALB` BETWEEN 3.5 AND 5.5 ) AND E1.`ANA` is NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have a normal level of both albumin and total protein?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ALB` > 3.5 AND T2.`ALB` < 5.5 AND T2.`TP` BETWEEN 6.0 AND 8.5 AND T1.`SEX` = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
    "SELECT T1.`aCL IgG` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`Sex` = 'F' AND T1.`ID` IN ( SELECT T4.`ID` FROM Patient AS T4 WHERE T4.`Sex` = 'F' AND T4.`UA` > ( SELECT MAX(T5.`UA`) FROM Patient AS T5 WHERE T5.`Sex` = 'F' ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level?",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`CRE` < 1.5 AND T2.`UN` IS NOT NULL AND T2.`CRP` IS NOT NULL AND T2.`RNP` IS NOT NULL AND T2.`SM` IS NOT NULL AND T2.`SC170` IS NOT NULL AND T2.`SSA` IS NOT NULL AND T2.`SSB` IS NOT NULL AND T2.`CENTROMEA` IS NOT NULL AND T2.`DNA` IS NOT NULL AND T2.`DNA-II` IS NOT NULL AND T2.`U-PRO` IS NOT NULL AND T2.`IGG` IS NOT NULL AND T2.`IGA` IS NOT NULL AND T2.`IGM` IS NOT NULL AND T2.`RA` IS NOT NULL AND T2.`RF` IS NOT NULL AND T2.`C3` IS NOT NULL AND T2.`C4` IS NOT NULL AND T2.`RNP` IS NOT NULL AND T2.`SM` IS NOT NULL AND T2.`SC170` IS NOT NULL AND T2.`SSA` IS NOT NULL AND T2.`SSB` IS NOT NULL AND T2.`CENTROMEA` IS NOT NULL AND T2.`DNA` IS NOT NULL AND T2.`DNA-II` IS NOT NULL ORDER BY T1.`ANA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID whose creatinine level is normal and whose anti Cardiolipin antibody concentration level is the highest.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgA` = ( SELECT MAX(T4.`aCL IgA`) FROM Patient AS T3 INNER JOIN Examination AS T4 ON T3.`ID` = T4.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.T-BIL >= 2.0 AND Examination.T-BIL IS NOT NULL AND Laboratory.ANA LIKE '%P%' AND Laboratory.T-BIL IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti-nucleus antibody concentration of the patient whose total bilirubin is the highest in the normal range?",
    "SELECT T2.`T-BIL` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ANA` IS NOT NULL AND T2.`ANA` < 256 AND T2.`ANA` > 0 AND T2.`T-BIL` IS NOT NULL AND T2.`T-BIL` < 2.0 AND T2.`T-BIL` > 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
    "SELECT AVG(T2.`KCT`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-CHO` >= 250 AND T2.`KCT` != '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total cholesterol is within the normal range, how many of them have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`T-CHO` < 250 AND T2.`ANA` IS NOT NULL AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
    "SELECT AVG(Laboratory.TG) FROM Patient AS T1 INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG < 200 AND Patient.Symptoms IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease name of the patient who has the highest level of triglyceride within the normal range?",
    "SELECT T1.`Admission` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TG` < 200\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients with no thrombosis and an abnormal level of creatinine phosphokinase.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CPK` < 250 AND T2.`CPK` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",
    "SELECT AVG(Laboratory.`CRE`) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`CRE` < 250 AND (Laboratory.`KCT` = '+' OR Laboratory.`RVVT` = '+' OR Laboratory.`LAC` = '+') AND Laboratory.`CRE` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the birthday of the oldest patient whose blood glucose is abnormal?",
    "-- When is the birthday of the oldest patient whose blood glucose is abnormal? SELECT T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GLU` > 180 AND T1.`Birthday` IS NOT NULL ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal blood glucose, how many of them don't have thrombosis?",
    "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Examination.`GLU` < 180 AND Patient.`Thrombosis` = 0 AND Patient.`Thrombosis` != 2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients accepted to the hospital have a normal level of white blood cells?",
    "SELECT DISTINCT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` LEFT JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`ANA` IS NOT NULL AND T3.`GOT` IS NOT NULL AND T3.`GPT` IS NOT NULL AND T3.`LDH` IS NOT NULL AND T3.`ALP` IS NOT NULL AND T2.`ANA` BETWEEN 3.5 AND 9.0 AND T2.`ANA Pattern` IS NULL AND T1.`Admission` = '+' AND T1.`Diagnosis` NOT LIKE '%SLE%' AND T1.`Diagnosis` NOT LIKE '%RA%' AND T1.`Diagnosis` NOT LIKE '%BEHCET%' AND T1.`Diagnosis` NOT LIKE '%PSS%' AND T1.`Diagnosis` NOT LIKE '%SLE,%' AND T1.`Diagnosis` NOT LIKE '%RA,%' AND T1.`Diagnosis` NOT LIKE '%BEHCET,%' AND T1.`Diagnosis` NOT LIKE '%PSS,%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients diagnosed with SLE have a normal white blood cell level?",
    "SELECT AVG(L1.`WBC`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS L1 ON T1.`ID` = L1.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T1.`WBC` BETWEEN 3.5 AND 9.0 AND L1.`WBC` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.",
    "SELECT T1.ID FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Laboratory AS T3 ON T1.ID = T3.ID WHERE T1.Admission = '-' AND T2.RBC < 6.0 AND T2.RBC > 3.5 AND T3.GOT < 100 AND T3.GPT < 100 AND T3.LDH < 50 AND T3.ALP < 50\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
    "-- Among the patients who have a normal platelet level, how many of them have other symptoms observed? SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`PLT` > 100 AND T1.`PLT` < 400 AND T2.`SM` IS NOT NULL AND T3.`Diagnosis` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.",
    "SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`GOT` > 100 AND T1.`GOT` < 400 AND T1.`GPT` > 100 AND T1.`GPT` < 400 AND T1.`LDH` > 100 AND T1.`LDH` < 400 AND T1.`ALP` > 100 AND T1.`ALP` < 400\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the male patients that have a normal prothrombin time, what is their average prothrombin time?",
    "SELECT AVG(PT) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'M' AND ADMISSION = '-' AND Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with severe thrombosis have a normal prothrombin time?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ANA` = 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What's Angela Sanders's major?",
    "SELECT SUM(income.`amount`) FROM income INNER JOIN member ON income.`link_to_member` = member.`member_id` INNER JOIN expense ON member.`member_id` = expense.`link_to_member` GROUP BY income.`link_to_member` ORDER BY SUM(expense.`cost`) ASC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many students in the Student_Club are from the College of Engineering?",
    "SELECT SUM(expense.cost) FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE major.college = 'College of Engineering' AND expense.approved IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the full names of the students in the Student_Club that come from the Art and Design Department.",
    "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.type = 'Meeting' ORDER BY T3.event_date DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
    "SELECT SUM(`cost`) FROM expense WHERE `expense_description` = 'Pizza' AND `link_to_member` = ( SELECT `member_id` FROM member WHERE `position` = 'Member' AND `link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Student Club' ) AND `zip` IS NOT NULL )\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
    "SELECT T2.phone FROM attendance AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Member' AND T1.link_to_event IN ( SELECT event_id FROM event WHERE event_name = 'Women''s Soccer' )\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students from the Student_Club who attended the event \"Women's Soccer\", how many of them want a T-shirt that's in medium size?",
    "SELECT T1.* FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the event that has the highest attendance of the students from the Student_Club?",
    "SELECT event.`event_name`, MAX(COUNT(attendance.`link_to_event`)) as attendance_count FROM event INNER JOIN attendance ON event.`event_id` = attendance.`link_to_event` INNER JOIN member ON attendance.`link_to_member` = member.`member_id` INNER JOIN major ON member.`link_to_major` = major.`major_id` INNER JOIN zip_code ON member.`zip` = zip_code.`zip_code` WHERE event.`type` = 'Student Club' AND member.`position` = 'Member' AND member.`t_shirt_size` != 'None' AND member.`t_shirt_size` IS NOT NULL AND event.`status` != 'Closed' AND event.`status` IS NOT NULL GROUP BY event.`event_name` ORDER BY attendance_count DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Which college is the vice president of the Student_Club from?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the event names of all the events attended by Maya Mclean.",
    "SELECT T1.`event_name` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`link_to_member` = ( SELECT `member_id` FROM member WHERE `t_shirt_size` = 'Large' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many events of the Student_Club did Sacha Harrison attend in 2019?",
    "SELECT COUNT(*) FROM attendance AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id JOIN member AS T3 ON T1.link_to_member = T3.member_id JOIN major AS T4 ON T3.link_to_major = T4.major_id JOIN zip_code AS T5 ON T3.zip = T5.zip_code WHERE T2.event_name = 'Student_Club' AND T3.first_name = 'Sacha' AND T3.last_name = 'Harrison' AND T3.email = 'sacha.harrison@example.com' AND T4.major_name = 'Student Club' AND T5.city = 'Washington' AND T5.state = 'Texas' AND T5.short_state = 'TX' AND T2.event_date >= '2019-01-01' AND T2.event_date <= '2019-12-31'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the events attended by more than 10 members of the Student_Club, how many of them are meetings?",
    "SELECT MAX(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.type = 'Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the names of all the events of the Student_Club that had an attendance of over 20 students.",
    "SELECT SUM(expense.cost) FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN event ON expense.link_to_event = event.event_id INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE expense.approved = 'true' AND member.position = 'Member' AND event.event_name = 'Student_Club' AND event.status = 'Open' AND attendance.COUNT(attendance.attendance_id) > 20 AND zip_code.type = 'Standard'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average attendance of meetings in 2020?",
    "-- What is the average attendance of meetings in 2020? SELECT AVG(T1.`count`) FROM (SELECT COUNT(DISTINCT event.event_id) AS `count` FROM event JOIN major ON event.`link_to_major` = major.`major_id` JOIN attendance ON event.event_id = attendance.`link_to_event` WHERE event.type = 'Meeting' AND YEAR(event.event_date) = 2020 AND attendance.`link_to_member` IS NOT NULL) AS T1\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most expensive item that was spent in support of club events?",
    "SELECT MAX(expense.`cost`) FROM expense INNER JOIN member ON expense.`link_to_member` = member.`member_id` INNER JOIN income ON income.`link_to_member` = member.`member_id` WHERE expense.`approved` = 'true' AND income.`source` = 'Dues' AND member.`position` = 'Member' AND member.`t_shirt_size` = ( SELECT `t_shirt_size` FROM member ORDER BY `t_shirt_size` ASC LIMIT 1 ) AND member.`t_shirt_size` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have majored Environmental Engineering?\n",
    "SELECT T1.`first_name` || ' ' || T1.`last_name` AS `Name` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Environmental Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of all the members of the Student_Club who attended the \"Laugh Out Loud\" event.",
    "SELECT first_name, last_name FROM member INNER JOIN attendance ON member.`member_id` = attendance.`link_to_member` INNER JOIN event ON attendance.`link_to_event` = event.`event_id` WHERE event.`event_name` = 'Laugh Out Loud'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of all the students who majored Law and Constitutional Studies. \n",
    "SELECT T1.`last_name` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club"
  ],
  [
    "What county did Sherri Ramsey grew up?",
    "SELECT SUM(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'Sherri Ramsey' GROUP BY T3.event_name ORDER BY SUM(T2.cost) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What college offers the major that Tyler Hewitt took?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "What is the amount of the funds that the Vice President received?",
    "SELECT MAX(`amount`) FROM budget INNER JOIN event ON budget.`link_to_event` = event.`event_id` WHERE event.`type` = 'Vice President' AND `amount` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on food in September Meeting?",
    "SELECT SUM(T1.`cost`) FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`expense_date` = '2019-11-19' AND T1.`approved` = 'true' AND T1.`expense_description` = 'Food' AND T2.`position` = 'Member' AND T1.`expense_description` = 'Food' AND T1.`expense_description` = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "What city and state did the President of the Student_Club grow up?",
    "SELECT M1.first_name, M1.last_name, M1.email, M1.position, M1.t_shirt_size, M1.phone, Z1.city, Z1.state FROM member AS M1 JOIN major AS M2 ON M1.link_to_major = M2.major_id JOIN zip_code AS Z1 ON M1.zip = Z1.zip_code WHERE M1.position = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the Student_Club members that grew up in Illinois state.",
    "SELECT SUM(T1.`amount`) FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_date` >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND T1.`approved` = 'true'\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on advertisement in September Meeting?",
    "SELECT SUM(`amount`) FROM expense JOIN member ON expense.`link_to_member` = member.`member_id` WHERE `expense_description` = 'Advertisement' AND `expense_date` = '2019-09-25'\t----- bird -----\tstudent_club"
  ],
  [
    "What department offers the major that Pierce and Guidi took?",
    "SELECT `email` FROM member WHERE `member_id` IN ( SELECT `link_to_member` FROM expense GROUP BY `link_to_member` ORDER BY SUM(`cost`) DESC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total budgeted amount for all category in \"October Speaker\" event?",
    "SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Speaker' AND budget.category = 'Women’s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "Was each expense in October Meeting on October 8, 2019 approved?",
    "SELECT T1.`approved` FROM expense AS T1 INNER JOIN event AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`expense_date` = '2019-10-08' AND T2.`event_id` = ( SELECT `event_id` FROM event WHERE `event_name` = 'October Meeting' ) AND T1.`approved` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
    "SELECT AVG(expense.cost) FROM expense AS expense INNER JOIN member AS member ON expense.link_to_member = member.member_id INNER JOIN attendance AS attendance ON member.member_id = attendance.link_to_member INNER JOIN event AS event ON attendance.link_to_event = event.event_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND event.event_name IN ('Laugh Out Loud', 'Football game') AND MONTH(expense.expense_date) IN (9, 10)\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.",
    "SELECT SUM(T1.`spent`) - SUM(T2.`spent`) FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`type` = 'Student_Club' AND T1.`category` = 'Food' AND T1.`event_status` = 'Open' AND T1.`approved` = 'true' AND T1.`event_date` IS NOT NULL AND YEAR(T1.`date`) = 2019\t----- bird -----\tstudent_club"
  ],
  [
    "Give the location for \"Spring Budget Review\".",
    "SELECT budget.`remaining` - SUM(expense.`cost`) FROM budget JOIN expense ON budget.`link_to_budget` = expense.`expense_id` WHERE budget.`event_status` = 'Open' GROUP BY budget.`link_to_event` HAVING SUM(expense.`cost`) <= budget.`remaining`\t----- bird -----\tstudent_club"
  ],
  [
    "What was the cost for the \"Posters\" on 2019/9/4?",
    "SELECT e.`cost` FROM expense e JOIN event ee ON e.`link_to_event` = ee.`event_id` WHERE ee.`event_date` = '2019-09-04' AND e.`expense_description` = 'Poster';\t----- bird -----\tstudent_club"
  ],
  [
    "With the biggest budget for the \"Food\", what was the remaining of it?",
    "SELECT budget.remaining FROM budget WHERE budget.category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "What was the notes of the fundraising on 2019/9/14?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "How many majors are there in \"College of Humanities and Social Sciences\"?",
    "SELECT T1.`t_shirt_size` FROM member AS T1 INNER JOIN ( SELECT `link_to_member`, MAX(`amount`) AS `max_amount` FROM income GROUP BY `link_to_member` ) AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`max_amount` = T1.`amount`\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the phone number of \"Carlo Jacobs\".",
    "SELECT `zip` FROM member WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the hometown county for \"Adela O'Gallagher\".",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "For all the budgets for \"November Meeting\", how many of them had exceeded the budget?",
    "SELECT AVG(budget.remaining) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Meeting' AND budget.remaining > 0\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the total number of the budget amount for \"September Speaker\" event.",
    "SELECT COUNT(*) FROM income WHERE income.`source` = 'September Speaker'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?",
    "SELECT member.`member_id` FROM event INNER JOIN attendance ON attendance.`link_to_event` = event.`event_id` INNER JOIN member ON member.`member_id` = attendance.`link_to_member` WHERE event.`status` = 'Closed'\t----- bird -----\tstudent_club"
  ],
  [
    "What was Brent Thomason's major?",
    "SELECT major.major_name FROM major INNER JOIN member ON major.major_id = member.link_to_major WHERE member.position = 'Treasurer'\t----- bird -----\tstudent_club"
  ],
  [
    "For all the club members from \"Human Development and Family Studies\" major, how many of them wear large size t-shirt?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "What's Christof Nielson's zip code type?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "State the major name for the Vice President of the club.",
    "SELECT event.`event_name` FROM attendance INNER JOIN member ON attendance.`link_to_member` = member.`member_id` INNER JOIN event ON attendance.`link_to_event` = event.`event_id` WHERE member.`position` = 'Vice President' GROUP BY event.`event_id` ORDER BY COUNT(event.`event_id`) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown state for \"Sacha Harrison\"?",
    "SELECT T1.state FROM member AS T1 INNER JOIN ( SELECT `link_to_member` FROM expense GROUP BY `link_to_member` ORDER BY COUNT(*) DESC LIMIT 1 ) AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison'\t----- bird -----\tstudent_club"
  ],
  [
    "Which department was the President of the club in?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "State the date Connor Hilton paid his/her dues.",
    "SELECT SUM(T1.`remaining`) FROM budget AS T1 INNER JOIN member AS T2 ON T1.`link_to_event` = T2.`member_id` WHERE T2.`first_name` = 'Connor' AND T2.`last_name` = 'Hilton' AND T1.`remaining` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Who was the first one paid his/her dues? Tell the full name.",
    "SELECT T1.`first_name`, T1.`last_name`, T2.`date_received` FROM member AS T1 INNER JOIN income AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`date_received` = ( SELECT MIN(date_received) FROM income WHERE source = 'Dues' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
    "SELECT SUM(T1.`amount`) FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'October Meeting' AND T1.`category` = 'Advertisement'\t----- bird -----\tstudent_club"
  ],
  [
    "What percentage was the budget for Parking to the total budget for the \"November Speaker\"?",
    "SELECT (SUM(amount where category = 'Parking' and event_name = 'November Speaker') / (SELECT SUM(amount) FROM budget WHERE category = 'Parking' and event_name = 'November Speaker')) * 100\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total cost of the pizzas for all the events?",
    "SELECT SUM(expense.`cost`) FROM expense INNER JOIN member ON expense.`link_to_member` = member.`member_id` INNER JOIN zip_code ON member.`zip` = zip_code.`zip_code` WHERE expense.`expense_description` = 'Parking'\t----- bird -----\tstudent_club"
  ],
  [
    "How many cities are there in Orange County, Virginia?",
    "SELECT COUNT(*) FROM member WHERE position = 'Vice President'\t----- bird -----\tstudent_club"
  ],
  [
    "List all of the College of Humanities and Social Sciences' departments.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Where is Amy Firth's hometown?",
    "SELECT T1.`zip` FROM member AS T1 INNER JOIN ( SELECT `link_to_member` FROM expense GROUP BY `link_to_member` ORDER BY COUNT(*) DESC LIMIT 1 ) AS T2 ON T1.`member_id` = T2.`link_to_member`\t----- bird -----\tstudent_club"
  ],
  [
    "What are the expenses of the budget with the lowest remaining?",
    "SELECT T1.`cost` FROM expense AS T1 INNER JOIN budget AS T2 ON T1.`link_to_budget` = T2.`budget_id` WHERE T2.`approved` IS NOT NULL AND T1.`approved` IS NOT NULL AND T1.`remaining` = ( SELECT MIN(`remaining`) FROM expense AS T3 INNER JOIN budget AS T4 ON T3.`link_to_budget` = T4.`budget_id` WHERE T4.`approved` IS NOT NULL )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members who attended the event \"October Meeting\".",
    "SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, zip_code.zip_code, major.major_name FROM member INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position != 'Inactive' AND member.position != 'Vice President' AND member.position != 'Treasurer' AND member.position != 'Secretary' AND member.position != 'President' ORDER BY member.t_shirt_size ASC, member.phone DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Which college do most of the members go to?",
    "SELECT major.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE major.college IS NOT NULL GROUP BY major.college ORDER BY COUNT(major.college) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What does the person with the phone number \"809-555-3360\" major in?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the highest budget amount?",
    "SELECT e.event_name, MAX(b.amount) as highest_budget_amount FROM event e JOIN budget b ON e.event_id = b.link_to_event WHERE e.status = 'Open' GROUP BY e.event_name ORDER BY highest_budget_amount DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "List all the expenses incurred by the vice president.",
    "SELECT T1.`expense_description`, T1.`cost` FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`position` = 'Vice President' AND T1.`cost` > ( SELECT AVG(T4.`cost`) FROM expense AS T4 INNER JOIN member AS T5 ON T4.`link_to_member` = T5.`member_id` WHERE T5.`position` = 'Vice President' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many members attended the \"Women's Soccer\" event?",
    "SELECT COUNT(expense.`expense_id`) FROM expense INNER JOIN event ON expense.`link_to_event` = event.`event_id` INNER JOIN member ON expense.`link_to_member` = member.`member_id` WHERE event.`event_name` = 'Women\\'s Soccer' AND member.`position` = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "When did the member, Casey Mason, received the income?",
    "SELECT MAX(income.date_received) FROM income INNER JOIN member ON income.`link_to_member` = member.`member_id` WHERE member.`first_name` = 'Casey' AND member.`last_name` = 'Mason'\t----- bird -----\tstudent_club"
  ],
  [
    "How many of the members' hometowns are from Maryland state?",
    "SELECT AVG(income.amount) FROM income INNER JOIN member ON income.`link_to_member` = member.`member_id` INNER JOIN zip_code ON member.`zip` = zip_code.`zip_code` WHERE zip_code.`state` = 'Maryland' AND income.`source` != 'Dues' AND income.amount IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "How many events did the member with the phone number \"954-555-6240\" attend?",
    "SELECT AVG(member.`t_shirt_size`) FROM member WHERE member.`phone` = '954-555-6240'\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members of the \"School of Applied Sciences, Technology and Education\" department.",
    "SELECT SUM(T8.`amount`) FROM income AS T8 INNER JOIN member AS T9 ON T8.`link_to_member` = T9.`member_id` INNER JOIN major AS T10 ON T9.`link_to_major` = T10.`major_id` WHERE T10.`college` = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "Among all the closed events, which event has the highest spend-to-budget ratio?",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN ( SELECT T2.event_id, MAX(DIVIDE(T2.spent, T2.amount)) AS spend_to_budget_ratio FROM budget AS T2 WHERE T2.event_status = 'Closed' GROUP BY T2.event_id ) AS T3 ON T1.event_id = T3.event_id ORDER BY T3.spend_to_budget_ratio DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many student have the position of president?",
    "SELECT SUM(T1.`amount`) FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_id` = ( SELECT T3.`event_id` FROM event AS T3 WHERE `event_status` = 'Open' ORDER BY `attendance` DESC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the highest amount of budget spend for an event?",
    "SELECT T1.`event_name` FROM event AS T1 JOIN ( SELECT MAX(T2.`amount`) AS max_amount FROM income AS T2 WHERE T2.`approved` IS NOT NULL GROUP BY T2.`link_to_member` ) AS T3 ON T1.`event_id` = T3.`max_amount`\t----- bird -----\tstudent_club"
  ],
  [
    "How many meeting events were held in 2020?",
    "SELECT SUM(amount) FROM budget JOIN expense ON budget.link_to_expense = expense.expense_id WHERE category = 'Food' AND category != 'Parking' AND category != 'Travel Mug' AND category != 'Posters' AND YEAR(expense_date) = 2020\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total amount of money spent for food?",
    "SELECT SUM(T1.`amount`) FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`source` = 'Sponsorship' AND T1.`amount` IS NOT NULL AND T2.`first_name` IS NOT NULL AND T2.`last_name` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of students that have attended more than 7 events.",
    "SELECT T1.member_id, COUNT(T1.event_id) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_id IS NOT NULL GROUP BY T1.member_id HAVING COUNT(T3.event_id) > 7\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students majored in interior design, who have attended the Community Theater event?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of students from Georgetown, South Carolina.",
    "SELECT member.first_name, member.last_name, income.amount FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.approved = 'true' ORDER BY income.amount DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many income generated by Grant Gilmour?",
    "SELECT MIN(`amount`) FROM income WHERE `source` = 'Grant Gilmour' AND `amount` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Which student was able to generate income more than $40?",
    "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.income > 40\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total expense for the Yearly Kickoff?",
    "SELECT SUM(expense.cost) FROM expense INNER JOIN member ON expense.link_to_member = member.member_id INNER JOIN event ON expense.link_to_event = event.event_id INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN major ON member.link_to_major = major.major_id WHERE event.event_name = 'Yearly Kickoff' AND member.position = 'Member' AND attendance.status = 'Closed' AND major.department = 'Education & Human Services'\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has been entrusted to manage the budget for the Yearly Kickoff?",
    "SELECT T1.first_name, T1.last_name, COUNT(T1.income_id) FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN zip_code AS T3 ON T2.zip = T3.zip_code WHERE T2.position = 'Treasurer' GROUP BY T1.first_name, T1.last_name ORDER BY COUNT(T1.income_id) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Which students manage to generate the highest income. State his/her full name along with the income source.",
    "SELECT T1.first_name, T1.last_name, T1.position, T2.source, T2.amount FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.source IS NOT NULL ORDER BY T2.amount DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the lowest cost?",
    "SELECT event.event_name FROM event JOIN ( SELECT event_id, MIN(cost) as min_cost FROM event GROUP BY event_id ) as min_event ON event.event_id = min_event.event_id\t----- bird -----\tstudent_club"
  ],
  [
    "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?",
    "SELECT ( SELECT SUM(cost) FROM expense WHERE link_to_member IN ( SELECT member_id FROM member WHERE position = 'Treasurer' ) ) / ( SELECT SUM(cost) FROM expense ) * 100\t----- bird -----\tstudent_club"
  ],
  [
    "What is the ratio between students majored in finance and physics?",
    "SELECT (SUM(CASE WHEN major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN major_name = 'Economics' THEN 1 ELSE 0 END)) AS ratio FROM major\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the top source of funds received in September 2019 based on their amount.",
    "SELECT T1.`source`, T1.`amount` FROM income AS T1 WHERE T1.`date_received` BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY T1.`amount` DESC\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the full name and email address of the Student_Club's Secretary.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have major in 'Physics Teaching'?",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Physics Teaching'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members did attend the event 'Community Theater' in 2019?",
    "SELECT SUM(T1.`amount`) FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`event_name` = 'Community Theater' AND T3.`event_date` >= '2019-01-01' AND T3.`event_date` <= '2019-12-31'\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the number of events attended by Luisa Guidi. What is her major?",
    "SELECT T1.`major_name` FROM member AS T1 WHERE T1.`member_id` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Luisa' AND `last_name` = 'Guidi' )\t----- bird -----\tstudent_club"
  ],
  [
    "On average, how much did the Student_Club spend on food for the typical event in the past?",
    "SELECT AVG(spent) FROM budget WHERE category = 'Food' AND event_status = 'Closed' ORDER BY spent ASC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Name the event with the highest amount spent on advertisement.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Did Maya Mclean attend the 'Women's Soccer' event?",
    "SELECT SUM(income.amount) FROM income INNER JOIN member ON income.link_to_member = member.member_id INNER JOIN event ON income.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service'",
    "SELECT DIVIDE(SUM(type = 'Community Service'), COUNT(event_id)) * 100 FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id JOIN major ON member.link_to_major = major.major_id WHERE event_date BETWEEN' 2019-01-01' and '2019-12-31' AND member.position = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the cost of posters for 'September Speaker' event.",
    "SELECT e.`expense_description`, e.`cost` FROM expense e JOIN member m ON e.`link_to_member` = m.`member_id` JOIN event ev ON e.`link_to_event` = ev.`event_id` JOIN attendance a ON ev.`event_id` = a.`link_to_event` JOIN major ma ON m.`link_to_major` = ma.`major_id` WHERE e.`expense_description` = 'Posters' AND m.`first_name` = 'September' AND ev.`event_name` = 'September Speaker' AND a.`link_to_member` = m.`member_id` AND ma.`major_id` = m.`link_to_major`\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most popular size of t-shirt ordered by the club members?",
    "SELECT SUM(expense.cost) as total_parking_spent FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE expense.expense_description LIKE '%parking%'\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the name of the closed event whose cost has exceeded the budget the most.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Identify the type of expenses and their total value approved for 'October Meeting' event.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Food, which one has the highest budgeted amount?",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`cost` = ( SELECT MAX(`cost`) FROM expense )\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Advertising, list out top three which have the most budgeted amount?",
    "SELECT SUM(T1.`amount`) as `total_amount` FROM budget AS T1 WHERE T1.`event_status` = 'Open' AND T1.`category` = 'Parking'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total cost spent for Parking in the list.",
    "SELECT SUM(budget.`amount`) FROM budget INNER JOIN event ON budget.`link_to_event` = event.`event_id` WHERE budget.`category` = 'Parking'\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the total expense used on 8/20/2019.",
    "SELECT SUM(expense.`cost`) FROM expense WHERE expense.`expense_date` = '2019-08-20'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?",
    "SELECT SUM(expense.`cost`) FROM expense AS expense INNER JOIN member AS member ON expense.`link_to_member` = member.`member_id` ORDER BY SUM(expense.`cost`) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "State what kind of expenses that Sacha Harrison incurred?",
    "SELECT SUM(budget.amount) FROM budget AS budget INNER JOIN event AS event ON budget.link_to_event = event.event_id INNER JOIN member AS member ON member.member_id = attendance.link_to_member WHERE budget.category = 'Advertisement' AND member.last_name = 'Smith' AND attendance.link_to_member IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "What kind of expenses incurred by members who have X-Large in size of tee shirt?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the zip code of member who incurred less than 50USD.",
    "SELECT T1.phone FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN major AS T4 ON T1.link_to_major = T4.major_id INNER JOIN zip_code AS T5 ON T1.zip = T5.zip_code WHERE T1.position = 'Member' AND T4.department = 'Economics' AND T4.college = 'College of Education & Human Services' AND T3.event_date > '2020-01-01' AND T3.event_date < '2020-12-31' AND T5.county IS NOT NULL AND T5.cost < 50\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Phillip Cullen has joined.",
    "SELECT T1.`event_name` FROM event AS T1 INNER JOIN ( SELECT `link_to_event` FROM member ORDER BY `member_count` ASC LIMIT 1 ) AS T2 ON T1.`event_id` = T2.`link_to_event`\t----- bird -----\tstudent_club"
  ],
  [
    "List out the position of members who joined major of Business.",
    "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Business'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of Business have the Medium size of tee shirt?",
    "SELECT SUM(T2.`remaining`) FROM member AS T1 INNER JOIN budget AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`category` = 'Business'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the type of events which have remaining budget more than 30 USD.",
    "SELECT T1.`type`, T2.`major_name`, T3.`city`, SUM(T1.`remaining`) FROM budget AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` INNER JOIN zip_code AS T3 ON T1.`link_to_major` = T3.`zip_code` WHERE T1.`event_status` = 'Open' GROUP BY T1.`type`, T2.`major_name`, T3.`city`\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the category of events which were held at MU 215.",
    "SELECT T1.`category` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` INNER JOIN attendance AS T3 ON T2.`event_id` = T3.`link_to_event` WHERE T2.`location` = 'MU 215' AND T1.`event_status` = 'Open'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the category of event which was taken place in 2020-03-24T12:00:00?",
    "SELECT event.event_name FROM event WHERE event.event_date = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Vice President has joined.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of members who are major Mathematics in the list?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "State the category of events were held at MU 215.",
    "SELECT T1.`category` FROM event AS T1 JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` JOIN member AS T3 ON T2.`link_to_member` = T3.`member_id` WHERE T3.`position` = 'Member' AND T1.`location` = 'MU 215'\t----- bird -----\tstudent_club"
  ],
  [
    "How many income are received with an amount of 50?",
    "SELECT e.event_status FROM event e JOIN ( SELECT link_to_event, MAX(amount) as max_amount FROM income WHERE amount IS NOT NULL GROUP BY link_to_event ) i ON e.event_id = i.link_to_event\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members, how many of them have an extra large t-shirt size?",
    "SELECT SUM(`amount`) FROM budget WHERE `category` = 'Club T-Shirts' AND `event_status` = 'Open' AND `link_to_event` IN ( SELECT `event_id` FROM event WHERE `type` = 'Social' ) AND `link_to_member` IN ( SELECT `member_id` FROM member WHERE `t_shirt_size` = 'X-Large' AND `position` = 'Member' )\t----- bird -----\tstudent_club"
  ],
  [
    "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
    "SELECT COUNT(`major_id`) FROM major INNER JOIN ( SELECT `major_id` FROM major WHERE `department` = 'School of Applied Sciences, Technology and Education' ) AS T2 ON T1.`major_id` = T2.`major_id` WHERE T1.`department` = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of members with a major in environmental engineering and include its department and college name.",
    "-- List the last name of members with a major in environmental engineering and include its department and college name. SELECT m.last_name, m.first_name, m.email, j.department, j.college FROM member AS m JOIN major AS j ON m.link_to_major = j.major_id WHERE j.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "List the city and state of members enrolled under electrical and computer engineering department.",
    "SELECT T1.city, T1.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Electrical and Computer Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "What is the last name and position of the student that bought pizza on 09/10/2019?",
    "SELECT T1.`last_name` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`expense_description` = 'Pizza' AND T2.`expense_date` = '2019-09-10' ORDER BY T2.`cost` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of the members of the club that attended the women's soccer event.",
    "SELECT SUM(budget.amount) FROM budget JOIN attendance ON budget.link_to_event = attendance.link_to_event JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND budget.category = 'Food' AND budget.event_status = 'Open' AND budget.amount IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Which countries have zip codes with post office boxes?",
    "SELECT T1.`t_shirt_size` FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`type` = 'PO Box' AND T3.`event_date` = ( SELECT MAX(T4.`event_date`) FROM event AS T4 INNER JOIN attendance AS T5 ON T4.`event_id` = T5.`link_to_event` WHERE T5.`link_to_member` = ( SELECT T6.`member_id` FROM member AS T6 INNER JOIN budget AS T7 ON T6.`member_id` = T7.`link_to_member` WHERE T7.`amount` = ( SELECT MAX(T8.`amount`) FROM budget AS T8 INNER JOIN member AS T9 ON T8.`link_to_member` = T9.`member_id` ) ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What are the zip codes that have post office boxes in the country of the country of San Juan Municipio whose state is Puerto Rico?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
    "SELECT event.event_name FROM event JOIN ( SELECT event_id FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20' GROUP BY event_id ORDER BY COUNT(*) DESC LIMIT 1 ) AS T2 ON event.event_id = T2.event_id\t----- bird -----\tstudent_club"
  ],
  [
    "Please provide links to events for members who have paid more than 50 dollar.",
    "SELECT DISTINCT event.`event_id` FROM event INNER JOIN attendance ON event.`event_id` = attendance.`link_to_event` INNER JOIN member ON attendance.`link_to_member` = member.`member_id` INNER JOIN income ON member.`member_id` = income.`link_to_member` INNER JOIN zip_code ON member.`zip` = zip_code.`zip_code` WHERE income.`amount` > 50 AND zip_code.`type` != 'PO Box'\t----- bird -----\tstudent_club"
  ],
  [
    "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
    "SELECT T3.member_id, T4.event_id FROM event AS T4 INNER JOIN attendance AS T5 ON T4.event_id = T5.link_to_event INNER JOIN member AS T3 ON T5.link_to_member = T3.member_id INNER JOIN zip_code AS T6 ON T3.zip = T6.zip_code WHERE T5.approved = 'true' AND T5.expense_date BETWEEN '2019-01-10' AND '2019-11-19' AND T3.position IN ('Member', 'Vice President', 'Treasurer', 'Secretary', 'President') AND T6.state IN ('Texas', 'California', 'Pennsylvania', 'New York', 'Illinois', 'Florida')\t----- bird -----\tstudent_club"
  ],
  [
    "Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".",
    "SELECT T1.`link_to_major` FROM member AS T1 WHERE T1.`first_name` = 'Katy'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the members who majored in business at the College of Agriculture and Applied Sciences.",
    "SELECT member.`member_id`, member.`first_name`, member.`last_name`, member.`email` FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE major.`college` = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019.",
    "SELECT SUM(budget.amount) FROM budget WHERE budget.category = 'Water' AND budget.approved IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "How many members have education major in the College of Education & Human Services?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the events that went over budget?",
    "SELECT AVG(income.`amount`) FROM income\t----- bird -----\tstudent_club"
  ],
  [
    "Give the event ID, location, and status of events conducted from November 2019 to March 2020.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "List the expenses that spend more than fifty dollars on average.",
    "SELECT T1.`expense_description`, T2.`avg_cost` FROM expense AS T1 INNER JOIN ( SELECT AVG(cost) AS avg_cost FROM expense ) AS T2 ON 1 = 1 WHERE T1.`cost` > T2.`avg_cost`\t----- bird -----\tstudent_club"
  ],
  [
    "Find the full name of members whose t-shirt size is extra large.",
    "SELECT CONCAT(T1.`first_name`, ' ', T1.`last_name`) FROM member AS T1 WHERE T1.`t_shirt_size` = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of zip codes that are PO boxes.",
    "SELECT ( SELECT SUM(type = 'PO Box') FROM event ) / ( SELECT COUNT(zip_code) FROM zip_code ) * 100\t----- bird -----\tstudent_club"
  ],
  [
    "List the name and location of events that underspend its budget.",
    "SELECT T2.`event_name`, T2.`location` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T1.`remaining` > 0\t----- bird -----\tstudent_club"
  ],
  [
    "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
    "SELECT T1.`event_name`, T1.`event_date` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` INNER JOIN major AS T3 ON T2.`link_to_member` = T3.`major_id` INNER JOIN zip_code AS T4 ON T3.`zip` = T4.`zip_code` INNER JOIN income AS T5 ON T4.`zip_code` = T5.`link_to_member` WHERE T5.`source` = 'Dues' AND T5.`amount` > 0 AND T5.`date_received` > '2019-01-01' AND T1.`event_name` LIKE '%Pizza%' AND T1.`event_date` > '2020-01-01' GROUP BY T1.`event_id` ORDER BY T1.`event_date` ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name and major of members who had to spend more than a hundred dollars on an expense?",
    "SELECT T1.`first_name`, T1.`last_name`, T2.`major_name` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`member_id` IN ( SELECT T3.`link_to_member` FROM expense AS T3 WHERE T3.`cost` > 100 )\t----- bird -----\tstudent_club"
  ],
  [
    "In the events with more than forty incomes, list the city and country in which the event is happening.",
    "SELECT T1.city, T1.state, T1.short_state FROM event AS T1 INNER JOIN zip_code AS T2 ON T1.location = T2.zip_code WHERE T2.type = 'Standard' AND T1.event_id IN ( SELECT link_to_event FROM attendance WHERE link_to_member IN ( SELECT member_id FROM member WHERE zip IN ( SELECT zip_code FROM zip_code WHERE type = 'Standard' ) ) ) AND T1.event_id IN ( SELECT link_to_event FROM budget WHERE event_status = 'Open' )\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members who incurred expenses in more than one event, who paid the most amount?",
    "SELECT T2.`first_name`, T2.`last_name` FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN attendance AS T3 ON T2.`member_id` = T3.`link_to_member` INNER JOIN event AS T4 ON T3.`link_to_event` = T4.`event_id` WHERE T1.`cost` > 0 AND COUNT(DISTINCT T4.`event_id`) > 1 GROUP BY T2.`member_id` ORDER BY MAX(T1.`cost`) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average amount paid by students in a position other than a member?",
    "SELECT SUM(income.`amount`) FROM income\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of events with less than average parking cost.",
    "-- List the name of events with less than average parking cost. SELECT event.event_name FROM event INNER JOIN ( SELECT link_to_event, AVG(amount) as avg_cost FROM budget WHERE category = 'Parking' GROUP BY link_to_event ) as b ON event.event_id = b.link_to_event WHERE event.type = 'Parking' AND event.cost < b.avg_cost\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the cost for the game events?",
    "SELECT AVG(cost) FROM expense\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget allowed the most money for water, chips, and cookies?",
    "SELECT T1.`member_id` FROM member AS T1 INNER JOIN ( SELECT `link_to_member` FROM income WHERE `source` = 'Board Appropration' GROUP BY `link_to_member` ORDER BY COUNT(*) DESC LIMIT 1 ) AS T2 ON T1.`member_id` = T2.`link_to_member`\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the top five members who spend the most money in the descending order of spending.",
    "SELECT m.first_name, m.last_name, MAX(e.cost) as `Spent` FROM expense AS e INNER JOIN member AS m ON e.`link_to_member` = m.`member_id` WHERE e.`cost` IS NOT NULL GROUP BY m.`member_id` ORDER BY `Spent` DESC LIMIT 5\t----- bird -----\tstudent_club"
  ],
  [
    "Give the full name and contact number of members who had to spend more than average on each expense.",
    "SELECT T1.first_name, T1.last_name, T1.phone FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost > ( SELECT AVG(T3.cost) FROM expense AS T3 INNER JOIN member AS T4 ON T3.link_to_member = T4.member_id )\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference in the percentage of members in Maine and Vermont.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "What is the major of Garrett Gerke and which department does it belong to?",
    "SELECT T2.`major_name`, T2.`department` FROM major AS T1 INNER JOIN major AS T2 ON T1.`major_id` = T2.`major_id` WHERE T1.`major_name` = ( SELECT `major_name` FROM member WHERE `first_name` = 'Garrett' AND `last_name` = 'Gerke' )\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
    "SELECT T2.`expense_description`, T2.`cost` FROM expense AS T2 INNER JOIN member AS T1 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`expense_description` = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last names of students under the Elementary Education major and include their phone numbers.",
    "SELECT T1.`email` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Elementary Education'\t----- bird -----\tstudent_club"
  ],
  [
    "What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category?",
    "SELECT T1.`amount` FROM budget AS T1 JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'January Speaker'\t----- bird -----\tstudent_club"
  ],
  [
    "List the event names which were budgeted for the food.",
    "-- List the event names which were budgeted for the food. SELECT event.event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
    "SELECT T1.first_name, T1.last_name, T4.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member INNER JOIN (SELECT member_id, MAX(amount) AS amount FROM income WHERE approved = True GROUP BY member_id) AS T4 ON T1.member_id = T4.member_id WHERE T2.approved IS NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget category does the expense 'Posters' fall to?",
    "SELECT T1.`member_id` FROM member AS T1 INNER JOIN income AS T2 ON T1.`member_id` = T2.`link_to_member` ORDER BY T2.`income_id` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to.",
    "SELECT CONCAT(first_name, ' ', last_name) AS full_name, major.college FROM member JOIN (SELECT DISTINCT college FROM member WHERE position = 'Secretary') AS T2 ON member.college = T2.college JOIN major ON member.link_to_major = major.major_id\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total amount spent on speaker gifts and list the name of the event they were spent on.",
    "SELECT T1.`event_name` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`link_to_member` IN ( SELECT member_id FROM member WHERE position IN ('Vice President', 'Treasurer', 'Secretary', 'President') )\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown of Garrett Girke?",
    "SELECT `city` FROM zip_code INNER JOIN member ON member.`zip` = zip_code.`zip_code` WHERE member.`first_name` = 'Garrett' AND member.`last_name` = 'Girke'\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has the hometown of Lincolnton, North Carolina with the zip code of 28092? List their full name and position.",
    "SELECT T1.`position` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`city` = 'Lincolnton' AND T2.`state` = 'North Carolina' AND T2.`zip_code` = 28092\t----- bird -----\tstudent_club"
  ],
  [
    "How many gas stations in CZE has Premium gas?",
    "SELECT AVG(`Price`) FROM transactions_1k INNER JOIN customers ON transactions_1k.`CustomerID` = customers.`CustomerID` INNER JOIN gasstations ON transactions_1k.`GasStationID` = gasstations.`GasStationID` INNER JOIN products ON transactions_1k.`ProductID` = products.`ProductID` INNER JOIN yearmonth ON yearmonth.`CustomerID` = customers.`CustomerID` WHERE customers.`Segment` = 'SME' AND gasstations.`Country` = 'CZE' AND gasstations.`Segment` = 'Premium' AND products.`Description` = 'Servisní poplatek' AND yearmonth.`Consumption` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the ratio of costumers who pay in EUR against customers who pay in CZK?",
    "SELECT ( SELECT COUNT(*) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR' ) / ( SELECT COUNT(*) FROM transactions_1k JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE customers.Currency = 'CZK' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In 2012, who had the least consumption in LAM?",
    "SELECT T1.`CustomerID` FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'LAM' AND T1.`Date` BETWEEN '2012-01-01' AND '2012-12-31' AND T1.`Consumption` = ( SELECT MIN(T3.`Consumption`) FROM yearmonth AS T3 INNER JOIN customers AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T4.`Segment` = 'LAM' AND T3.`Date` BETWEEN '2012-01-01' AND '2012-12-31' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the average monthly consumption of customers in SME for the year 2013?",
    "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN ( SELECT CustomerID FROM customers WHERE Segment = 'LAM' AND Currency = 'CZK' GROUP BY CustomerID ) AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '2013-01-01' AND '2013-12-31'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customers, paying in CZK, consumed the most gas in 2011?",
    "SELECT T1.`CustomerID` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN yearmonth AS T3 ON T1.`CustomerID` = T3.`CustomerID` WHERE T2.`Segment` = 'SME' AND T2.`Currency` = 'CZK' AND T1.`Date` BETWEEN '2011-01-01' AND '2011-12-31' AND T1.`ProductID` = 'Servisní poplatek' AND T3.`Consumption` IS NOT NULL GROUP BY T1.`CustomerID` ORDER BY SUM(T1.`Amount`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many customers in KAM had a consumption of less than 30,000 for the year 2012?",
    "SELECT T1.`CustomerID`, COUNT(*) as `Number of Customers` FROM yearmonth AS T1 JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` JOIN gasstations AS T3 ON T2.`GasStationID` = T3.`GasStationID` WHERE T1.`Date` BETWEEN '2012-01-01' AND '2012-12-31' AND T2.`Segment` = 'KAM' AND T3.`Segment` = 'Premium' AND T1.`Consumption` < 30000 GROUP BY T1.`CustomerID` HAVING COUNT(*) > 0\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "SELECT T1.Consumption - T3.Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN transactions_1k AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-01-01' AND T2.Currency = 'CZK'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most gas use paid in EUR?",
    "SELECT T1.`CustomerID` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN gasstations AS T3 ON T1.`GasStationID` = T3.`GasStationID` INNER JOIN yearmonth AS T4 ON T2.`CustomerID` = T4.`CustomerID` WHERE T2.`Segment` = 'SME' AND T1.`Currency` = 'EUR' AND T4.`Consumption` IS NOT NULL GROUP BY T1.`CustomerID` ORDER BY SUM(T1.`Amount`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which segment had the least consumption?",
    "SELECT T1.`ProductID` FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` GROUP BY T1.`ProductID` ORDER BY SUM(T2.`Amount`) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most consumption of gas paid in CZK?",
    "SELECT T1.`ProductID` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Price` IS NOT NULL AND T2.`Currency` = 'CZK' AND T1.`GasStationID` = ( SELECT T3.`GasStationID` FROM transactions_1k AS T3 INNER JOIN customers AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T3.`Price` IS NOT NULL AND T4.`Currency` = 'CZK' GROUP BY T3.`GasStationID` ORDER BY SUM(T3.`Amount`) DESC LIMIT 1 ) GROUP BY T1.`ProductID` ORDER BY SUM(T1.`Amount`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the gas consumption peak month for SME customers in 2013?",
    "SELECT MAX(yearmonth.`Date`) AS `PeakMonth` FROM yearmonth INNER JOIN ( SELECT `CustomerID`, `Date` FROM yearmonth WHERE `Date` >= '2013-01-01' AND `Date` <= '2013-12-31' GROUP BY `CustomerID` HAVING COUNT(DISTINCT `Date`) = 12 ) AS T1 ON yearmonth.`CustomerID` = T1.`CustomerID` WHERE T1.`Date` = ( SELECT MAX(`Date`) FROM yearmonth WHERE `Date` >= '2013-01-01' AND `Date` <= '2013-12-31' GROUP BY `CustomerID` HAVING COUNT(DISTINCT `Date`) = 12 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "SELECT T1.`Date`, T1.`Consumption` FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'KAM' AND T1.`Date` LIKE '2013%' ORDER BY T1.`Consumption` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "SELECT T1.`Date`, T1.`Consumption`, T2.`Consumption` FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` BETWEEN '2012-01-01' AND '2013-12-31' AND T1.`Consumption` < T2.`Consumption` ORDER BY ABS((T1.`Consumption` - T2.`Consumption`) / T2.`Consumption`) ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did customer 6 consume in total between August and November 2013?",
    "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN ( SELECT CustomerID FROM customers WHERE CustomerID is NOT NULL GROUP BY CustomerID ) AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '2013-08-01' AND '2013-11-30' AND T1.Consumption is NOT NULL AND T1.Consumption > 0\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "-- How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia? -- First, we need to join the tables on the foreign keys SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID INNER JOIN products AS T4 ON T1.ProductID = T4.ProductID WHERE T1.ProductID = 'Servisní poplatek' AND T2.Segment = 'Discount' AND T3.Country = 'CZE' AND T4.Description = 'Ostatni zbozi' -- Then, we subtract the number of Slovakia gas stations from the number of Czech Republic gas stations SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID INNER JOIN products AS T4 ON T1.ProductID = T4.ProductID WHERE T1.ProductID = 'Servisní poplatek' AND T2.Segment = 'Discount' AND T3.Country = 'SVK' AND T4.Description = 'Ostatni zbozi'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much more was customer 7 consuming in April 2013 than customer 5?",
    "SELECT SUM(T1.`Consumption`) + SUM(T2.`Consumption`) FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` AND T1.`Date` = '201304'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "SELECT T1.`Segment`, T1.`Currency`, T2.`TotalCZK`, T3.`TotalEUR` FROM customers AS T1 INNER JOIN ( SELECT `CustomerID`, SUM(`Amount`) AS `TotalCZK` FROM transactions_1k WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Segment` = 'SME' AND `Currency` = 'CZK' ) GROUP BY `CustomerID` ) AS T2 INNER JOIN ( SELECT `CustomerID`, SUM(`Amount`) AS `TotalEUR` FROM transactions_1k WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Segment` = 'SME' AND `Currency` = 'EUR' ) GROUP BY `CustomerID` ) AS T3 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`TotalCZK` > T3.`TotalEUR`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?",
    "-- Which LAM customer used the Euro as their currency and had the highest consumption in October 2013? SELECT T1.`CustomerID` FROM yearmonth AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN customers AS T3 ON T1.`CustomerID` = T3.`CustomerID` WHERE T1.`Date` = '201310' AND T2.`Segment` = 'LAM' AND T3.`Currency` = 'EUR' AND T1.`Consumption` IS NOT NULL ORDER BY T1.`Consumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who among KAM's customers consumed the most? How much did it consume?",
    "SELECT T1.`CustomerID`, SUM(T2.`Consumption`) AS `TotalConsumption` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'KAM' GROUP BY T1.`CustomerID` ORDER BY `TotalConsumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did the KAM customers consume in total in May 2013?",
    "SELECT SUM(T1.`Consumption`) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'KAM' AND T1.`Date` = '201305'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many percent of LAM customer consumed more than 46.73?",
    "SELECT ( SELECT COUNT(*) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Consumption` > 46.73 AND T2.`Segment` = 'LAM' ) / ( SELECT COUNT(*) FROM customers AS T2 WHERE T2.`Segment` = 'LAM' ) * 100\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country has more \"value for money\" gas stations? Please give a total number of \"value for money\" gas stations in each country.",
    "SELECT T1.Country, COUNT(*) FROM gasstations AS T1 INNER JOIN products AS T2 ON T1.GasStationID = T2.ProductID WHERE T2.Description = 'Value for money' GROUP BY T1.Country ORDER BY COUNT(*) DESC\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of KAM customers pay in euros?",
    "SELECT ( SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'KAM' AND T1.`Currency` = 'EUR' ) / ( SELECT COUNT(*) FROM customers AS T3 WHERE T3.`Segment` = 'KAM' ) * 100\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In February 2012, what percentage of customers consumed more than 528.3?",
    "SELECT (SUM(T1.`Amount`) - 528.3 * (SELECT SUM(T4.`Amount`) FROM transactions_1k AS T4 WHERE T4.`CustomerID` = T1.`CustomerID` AND strftime('%Y%m', T4.`Date`) = '201202') / 100) / 528.3 * 100 FROM transactions_1k AS T1 WHERE T1.`CustomerID` = (SELECT `CustomerID` FROM yearmonth WHERE strftime('%Y%m', `Date`) = '201202') AND T1.`Amount` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of Slovakian gas stations are premium?",
    "SELECT ( SELECT COUNT(*) FROM gasstations WHERE `Segment` = 'Premium' AND `Country` = 'SVK' ) / ( SELECT COUNT(*) FROM gasstations WHERE `Country` = 'SVK' ) * 100\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client ID consumed the most in September 2013?",
    "SELECT T1.`ProductID`, COUNT(T1.`TransactionID`) AS `Number of Transactions` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN yearmonth AS T3 ON T1.`CustomerID` = T3.`CustomerID` AND T3.`Date` = '201309' GROUP BY T1.`ProductID` ORDER BY `Number of Transactions` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client segment consumed the least in September 2013?",
    "SELECT T1.`Segment` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '201309' ORDER BY T2.`Consumption` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which SME customer consumed the least in June 2012?",
    "-- Which SME customer consumed the least in June 2012? SELECT customers.CustomerID, SUM(transactions_1k.Amount) as TotalConsumed FROM transactions_1k JOIN yearmonth ON transactions_1k.TransactionID = yearmonth.CustomerID JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE yearmonth.Date = '201206' AND customers.Segment = 'SME' GROUP BY customers.CustomerID ORDER BY TotalConsumed ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the highest monthly consumption in the year 2012?",
    "SELECT yearmonth.CustomerID, MAX(yearmonth.Consumption) FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE EXTRACT(YEAR FROM yearmonth.Date) = 2012 GROUP BY yearmonth.CustomerID\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the biggest monthly consumption of the customers who use euro as their currency?",
    "-- What is the biggest monthly consumption of the customers who use euro as their currency? SELECT T1.`CustomerID`, T1.`Date`, T1.`Consumption` FROM yearmonth AS T1 JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` JOIN gasstations AS T3 ON T1.`GasStationID` = T3.`GasStationID` WHERE T2.`Currency` = 'EUR' AND T3.`Segment` = 'Premium' AND T1.`Consumption` IS NOT NULL ORDER BY T1.`Consumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products consumed in September, 2013.",
    "SELECT T1.`Description` FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` INNER JOIN yearmonth AS T3 ON T2.`CustomerID` = T3.`CustomerID` WHERE T2.`Date` LIKE '201309%' AND T3.`Consumption` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "-- Please list the countries of the gas stations with transactions taken place in June, 2013. SELECT DISTINCT T1.`Country` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN customers AS T3 ON T1.`CustomerID` = T3.`CustomerID` WHERE T1.`Date` = '201306' AND T3.`Segment` = 'client segment' AND T2.`Country` IS NOT NULL AND T1.`Amount` IS NOT NULL ORDER BY T2.`Country`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the chains of the gas stations with transactions in euro.",
    "-- Please list the chains of the gas stations with transactions in euro. SELECT T1.`GasStationID` FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN customers AS T3 ON T2.`CustomerID` = T3.`CustomerID` WHERE T2.`Currency` = 'EUR' AND T3.`Segment` != 'None' GROUP BY T1.`GasStationID` ORDER BY COUNT(DISTINCT T2.`ProductID`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products bought in transactions in euro.",
    "SELECT T1.`Country`, AVG(T2.`Price`) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.`GasStationID` = T2.`GasStationID` GROUP BY T1.`Country`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in January, 2012?",
    "SELECT AVG(T1.Price) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-01' AND T1.Price = ( SELECT MAX(T3.Price) FROM transactions_1k AS T3 INNER JOIN customers AS T4 ON T3.CustomerID = T4.CustomerID WHERE T3.Date = '2012-01' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "SELECT AVG(T3.Amount) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN transactions_1k AS T3 ON T2.CustomerID = T3.CustomerID WHERE T1.Date BETWEEN '2012-01-01' AND '2012-12-31' AND T2.Currency = 'EUR' AND T3.Amount > 0\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "SELECT P.`Description` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN products AS P ON T1.`ProductID` = P.`ProductID` WHERE T2.`Country` = 'CZE' ORDER BY P.`Description` ASC\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
    "SELECT AVG(`Price`) FROM products AS T1 JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` JOIN ( SELECT `GasStationID`, MAX(`Consumption`) AS `MaxConsumption` FROM transactions_1k WHERE `GasStationID` IN ( SELECT `GasStationID` FROM gasstations WHERE `ChainID` = 11 ) GROUP BY `GasStationID` ORDER BY `MaxConsumption` DESC LIMIT 1 ) AS T3 ON T2.`GasStationID` = T3.`GasStationID` WHERE `GasStationID` IN ( SELECT `GasStationID` FROM gasstations WHERE `ChainID` = 11 ) AND `Price` IS NOT NULL ORDER BY T2.`Consumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?",
    "SELECT COUNT(*) FROM transactions_1k JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID JOIN customers ON transactions_1k.CustomerID = customers.CustomerID WHERE gasstations.Country = 'CZE' AND gasstations.Segment = 'Other' AND transactions_1k.Price > 1000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Country = 'CZE' AND T1.Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in gas stations in the Czech Republic?",
    "SELECT T1.`Amount` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customers who paid in the euro, what is their average total price of the transactions?",
    "SELECT T2.`Segment` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'LAM' AND T2.`Currency` = 'EUR' ORDER BY (T1.`Price` * T1.`Amount`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customer paid the most in 2012/8/25?",
    "SELECT T1.`ProductID` FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '2012-08-25' AND T1.`Amount` IS NOT NULL GROUP BY T1.`ProductID` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country's gas station had the first paid cusomer in 2012/8/25?",
    "SELECT T2.`Country` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN customers AS T3 ON T1.`CustomerID` = T3.`CustomerID` WHERE T1.`Date` = '2012-08-25' AND T3.`Segment` IS NOT NULL ORDER BY T1.`TransactionID` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
    "SELECT `Currency` FROM customers WHERE `CustomerID` = ( SELECT `CustomerID` FROM transactions_1k WHERE `Time` = '16:25:00' AND `Date` = '2012-08-24' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What segment did the customer have at 2012/8/23 21:20:00?",
    "SELECT T1.`Price` FROM transactions_1k AS T1 JOIN ( SELECT `CustomerID` FROM transactions_1k WHERE `Date` = '2012-08-23' AND `Time` = '21:20:00' ) AS T2 ON T1.`CustomerID` = T2.`CustomerID` JOIN ( SELECT `ProductID` FROM products WHERE `Description` = 'Servisní poplatek' ) AS T3 ON T1.`ProductID` = T3.`ProductID`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions were paid in EUR in the morning of 2012/8/26?",
    "SELECT T1.`GasStationID` FROM transactions_1k AS T1 INNER JOIN ( SELECT `GasStationID`, COUNT(*) AS `Count` FROM transactions_1k WHERE `Date` = '2012-08-26' AND `Time` < '13:00:00' AND `Currency` = 'EUR' GROUP BY `GasStationID` ORDER BY `Count` DESC LIMIT 1 ) AS T2 ON T1.`GasStationID` = T2.`GasStationID`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the earliest customer, what segment did he/she have?",
    "SELECT T2.`Segment` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` = ( SELECT MIN(T3.`Date`) FROM transactions_1k AS T3 INNER JOIN customers AS T4 ON T3.`CustomerID` = T4.`CustomerID` )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the deal happened at 2012/8/24 12:42:00, which country was it?",
    "SELECT T1.`Country` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` INNER JOIN yearmonth AS T3 ON T1.`CustomerID` = T3.`CustomerID` WHERE T2.`Country` = 'CZE' AND T1.`Date` = '2012-08-24' AND T1.`Time` = '12:42:00' AND T3.`Date` = '2012-08-24'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the product id of the transaction happened at 2012/8/23 21:20:00?",
    "SELECT T1.`ProductID` FROM transactions_1k AS T1 WHERE T1.`Time` = '21:20:00'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",
    "SELECT T1.`Date`, T1.`Consumption` FROM yearmonth AS T1 JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` JOIN transactions_1k AS T3 ON T2.`CustomerID` = T3.`CustomerID` WHERE T1.`Date` = '2012-08-24' AND T3.`Amount` = 124.05\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",
    "SELECT AVG(T1.Consumption) FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-26' AND T1.Time = '09:00:00' AND T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",
    "SELECT T1.`ProductID` FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '201306' ORDER BY T1.`Amount` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country was the card owner of No.667467 in?",
    "SELECT T1.`Time` FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.`ProductID` = T2.`ProductID` WHERE T1.`CardID` = 667467\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What's the nationality of the customer who spent 548.4 in 2012/8/24?",
    "SELECT transactions_1k.ProductID FROM transactions_1k INNER JOIN customers ON transactions_1k.CustomerID = customers.CustomerID INNER JOIN yearmonth ON yearmonth.CustomerID = transactions_1k.CustomerID WHERE transactions_1k.Date = '2012-08-24' AND transactions_1k.Amount = 548.4 AND yearmonth.Consumption = 548.4\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of the customers who used EUR in 2012/8/25?",
    "SELECT T1.Segment, (T2.TotalConsumption / T3.TotalConsumption) * 100 AS UsagePercentage FROM yearmonth AS T1 INNER JOIN ( SELECT SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth WHERE yearmonth.Date = '2012-08-25' ) AS T2 INNER JOIN ( SELECT SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth WHERE yearmonth.Date = '2012-08-25' ) AS T3 WHERE T1.CustomerID = T2.CustomerID AND T1.CustomerID = T3.CustomerID AND yearmonth.Date = '2012-08-25'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
    "SELECT (SUM(yearmonth.`Consumption`) - SUM(yearmonth.`Consumption` WHERE `Date` = '2013-08-25')) / SUM(yearmonth.`Consumption` WHERE `Date` = '2012-08-25') FROM yearmonth JOIN customers ON yearmonth.`CustomerID` = customers.`CustomerID` WHERE `Date` = '2012-08-25'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which gas station has the highest amount of revenue?",
    "SELECT T4.`GasStationID` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN yearmonth AS T3 ON T1.`CustomerID` = T3.`CustomerID` INNER JOIN gasstations AS T4 ON T1.`GasStationID` = T4.`GasStationID` WHERE T3.`Date` = '2012-08-24' AND T4.`Segment` = 'Premium' GROUP BY T1.`GasStationID` ORDER BY SUM(T1.`Amount`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of \"premium\" against the overall segment in \"SVK\"?",
    "SELECT T1.`Segment`, T2.`Segment` AS 'Value for money Segment', (T2.`Segment` / NULLIF(T1.`Segment`, 'None')) * 100 AS 'Percentage' FROM gasstations AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T1.`Country` = 'SVK' AND T2.`Segment` = 'Value for money'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "SELECT SUM(T1.`Amount`) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` = '201201' AND T1.`Amount` IS NOT NULL AND T1.`CustomerID` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which are the top five best selling products? Please state the full name of them.",
    "SELECT T1.`Description` FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` GROUP BY T1.`Description` ORDER BY COUNT(T2.`TransactionID`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "SELECT T1.CustomerID, T1.Currency, AVG(T1.Price / T1.Amount) as average_price FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price is NOT NULL AND T1.Amount is NOT NULL AND T2.Currency is NOT NULL GROUP BY T1.CustomerID, T1.Currency ORDER BY average_price DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country had the gas station that sold the most expensive product id No.2 for one unit?",
    "SELECT T1.`GasStationID` FROM gasstations AS T1 INNER JOIN products AS T2 ON T1.`ProductID` = T2.`ProductID` WHERE T2.`Description` = 'Product ID No.2' AND T1.`Country` = 'Country' AND T1.`Price` = ( SELECT MAX(`Price`) FROM transactions_1k WHERE `ProductID` = T2.`ProductID` AND `Price` IS NOT NULL ) AND T1.`GasStationID` = ( SELECT gasstations.GasStationID FROM gasstations INNER JOIN ( SELECT `GasStationID`, `Price` FROM transactions_1k WHERE `ProductID` = T2.`ProductID` AND `Price` IS NOT NULL GROUP BY `GasStationID` ORDER BY `Price` DESC LIMIT 1 ) AS T3 ON T3.`GasStationID` = gasstations.GasStationID ) ORDER BY T1.`Price` DESC\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "SELECT T1.`Consumption` FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` LIKE '201208%' AND T2.`ProductID` = 5 AND T2.`Price` / T2.`Amount` > 29.00\t----- bird -----\tdebit_card_specializing"
  ]
]