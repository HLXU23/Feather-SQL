[
  [
    "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
    "SELECT MAX(Eligible_Free_Rate) FROM ( SELECT (T1.`Free Meal Count (K-12)` / T1.`Enrollment (K-12)`) AS Eligible_Free_Rate FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'Alameda' ) AS T3\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.",
    "SELECT CAST(T2.`Free Meal Count (Ages 5-17)` AS REAL) / T2.`Enrollment (Ages 5-17)` AS `Eligible Free Rate` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`School Type` = 'Continuation Schools' ORDER BY CAST(T2.`Free Meal Count (Ages 5-17)` AS REAL) / T2.`Enrollment (Ages 5-17)` ASC LIMIT 3\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the zip code of all the charter schools in Fresno County Office of Education.",
    "SELECT T2.Zip FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter School (Y/N)` = 1 AND T2.County = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?",
    "SELECT T2.Street, T2.City, T2.Zip, T2.State FROM schools AS T2 WHERE T2.CDSCode = ( SELECT T1.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools with an average score in Math under 400 in the SAT test are exclusively virtual?",
    "SELECT COUNT(*) FROM ( SELECT T1.`cds` FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T1.`AvgScrMath` < 400 ) AS T3 GROUP BY T3.`cds` HAVING SUM(T2.`Virtual` = 'F') = COUNT(*)\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.",
    "SELECT T1.`School` AS sname FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumTstTakr` > 500 AND T1.`Magnet` = 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
    "SELECT T3.`Phone` FROM schools AS T3 INNER JOIN ( SELECT T2.`sname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` IS NOT NULL AND T2.`NumGE1500` > 0 ORDER BY T2.`NumGE1500` DESC LIMIT 1 ) AS T4 ON T3.`sname` = T4.`sname`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?",
    "SELECT T1.`NumTstTakr` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T2.`FRPM Count (K-12)` = ( SELECT MAX(T3.`FRPM Count (K-12)`) FROM frpm AS T3 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?",
    "SELECT COUNT(T1.`CDSCode`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` INNER JOIN schools AS T3 ON T1.`CDSCode` = T3.`CDSCode` WHERE T2.`AvgScrMath` > 560 AND T3.`FundingType` = 'Directly funded'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?",
    "SELECT T1.`FRPM Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` = ( SELECT T3.`sname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`AvgScrRead` = ( SELECT MAX(T4.`AvgScrRead`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the codes of the schools with a total enrollment of over 500.",
    "SELECT T1.CDSCode FROM ( SELECT T1.CDSCode, T1.`Enrollment (Ages 5-17)` + T1.`Enrollment (K-12)` AS TotalEnrollment FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ) AS T3 WHERE T3.TotalEnrollment > 500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?",
    "SELECT MAX(T1.`Free Meal Count (Ages 5-17)` / T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` IS NOT NULL AND T2.`NumTstTakr` > 0 AND CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` > 0.3\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the schools with the top 3 SAT excellence rate.",
    "SELECT schools.`Phone` FROM schools INNER JOIN satscores ON schools.`CDSCode` = satscores.`cds` ORDER BY CAST(satscores.`NumGE1500` AS REAL) / satscores.`NumTstTakr` DESC LIMIT 3\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.",
    "SELECT schools.NCESSchool, frpm.Enrollment (Ages 5-17) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode ORDER BY frpm.Enrollment (Ages 5-17) DESC LIMIT 5;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which active district has the highest average score in Reading?",
    "SELECT T2.`dname` FROM ( SELECT T2.`dname`, AVG(T2.`AvgScrRead`) AS avg_score FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` GROUP BY T2.`dname` ) AS T3 ORDER BY avg_score DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in merged Alameda have number of test takers less than 100?",
    "SELECT COUNT(T2.NumTstTakr) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Alameda' AND T2.NumTstTakr < 100\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the charter number of the school that the average score in Writing is 499?",
    "SELECT T2.`sname`, T1.`CharterNum` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` IN ( SELECT T2.`sname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` GROUP BY T2.`sname` HAVING AVG(T2.`AvgScrWrite`) = 499 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Contra Costa (directly funded) have number of test takers not more than 250?",
    "SELECT COUNT(DISTINCT T1.`CDSCode`) FROM schools AS T1 INNER JOIN satscores AS T4 ON T1.`CDSCode` = T4.`cds` WHERE T1.`County` = 'Contra Costa' AND T1.`FundingType` = 'Directly funded' AND T4.`NumTstTakr` <= 250\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest average score in Math?",
    "SELECT T3.Phone FROM schools AS T3 INNER JOIN frpm AS T1 ON T1.`CDSCode` = T3.`CDSCode` INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`AvgScrMath` IS NOT NULL AND T2.`sname` = ( SELECT T2.sname FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`AvgScrMath` IS NOT NULL ORDER BY T2.`AvgScrMath` DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?",
    "SELECT COUNT(*) FROM schools AS s JOIN frpm ON s.CDSCode = frpm.CDSCode WHERE s.County = 'Amador' AND frpm.`Low Grade` = 9 AND frpm.`High Grade` = 12\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
    "SELECT COUNT(*) FROM schools WHERE County = 'Los Angeles' AND (FRPM Count (Ages 5-17) > 500 AND FRPM Count (Ages 5-17) < 700)\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which school in Contra Costa has the highest number of test takers?",
    "SELECT s.`School` FROM schools AS s INNER JOIN satscores AS ss ON s.`CDSCode` = ss.`cds` WHERE s.`County` = 'Contra Costa' ORDER BY ss.`NumTstTakr` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
    "SELECT T2.`Street`, T2.`City`, T2.`State`, T2.`Zip` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?",
    "SELECT DISTINCT T1.`School` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T3.`NumGE1500` > 0;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?",
    "SELECT T1.`FundingType` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Riverside' AND T2.`AvgScrMath` IS NOT NULL AND T2.`AvgScrMath` > 400\t----- bird -----\tcalifornia_schools"
  ],
  [
    "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?",
    "SELECT T2.`School`, T2.`Street`, T2.`City`, T2.`Zip`, T2.`State` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'Monterey' AND T1.`School Type` = 'High Schools (Public)' AND T1.`FRPM Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
    "SELECT T2.`School`, T2.`DOCType` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > ( SELECT AVG((T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) AS diff FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.`CDSCode` = T4.`CDSCode` WHERE T4.`FundingType` = 'Locally funded' ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "When did the first-through-twelfth-grade school with the largest enrollment open?",
    "SELECT OpenDate FROM schools WHERE `CDSCode` = (SELECT `cds` FROM satscores WHERE enroll12 = (SELECT MAX(enroll12) FROM satscores WHERE enroll12 IS NOT NULL)) AND OpenDate IS NOT NULL AND StatusType = 'Active'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?",
    "SELECT s.County, t.enroll12 FROM schools AS s INNER JOIN satscores AS t ON s.CDSCode = t.cds WHERE t.enroll12 IS NOT NULL ORDER BY t.enroll12 ASC LIMIT 5;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
    "SELECT T1.`School`, T2.`Free Meal Count (K-12)` / T2.`Enrollment (K-12)` AS `Eligible Free Rate` FROM ( SELECT `School`, RANK() OVER (ORDER BY `Enrollment (K-12)` DESC) AS rn FROM frpm WHERE `Low Grade` = 'K' AND `High Grade` = '12' ) AS T1 INNER JOIN frpm AS T2 ON T1.`School` = T2.`School` WHERE T1.rn <= 11 LIMIT 2;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?",
    "SELECT schools.CDSCode, schools.FRPM Count (K-12), schools.Enrollment (K-12), CAST(schools.FRPM Count (K-12) AS REAL) / schools.Enrollment (K-12) AS Eligible_Free_Reduced_Price_Meal_Rate FROM schools WHERE schools.SOC = 66 AND schools.EILCode IN ('ELEM', 'HS', 'UG', 'INTMIDJR', 'ELEMHIGH', 'A') ORDER BY schools.FRPM Count (K-12) DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.",
    "SELECT T2.`Website` FROM schools AS T2 INNER JOIN frpm AS T1 ON T2.`CDSCode` = T1.`CDSCode` WHERE T1.`Free Meal Count (Ages 5-17)` IS NOT NULL AND T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson?",
    "SELECT (T2.`Free Meal Count (Ages 5-17)`) / T2.`Enrollment (Ages 5-17)` AS `Free Rate` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`School` = 'Kacey Gibson'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12?",
    "SELECT T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`CDSCode` = ( SELECT T1.`CDSCode` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter School (Y/N)` = 1 ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name.",
    "SELECT T1.AdmFName1, T1.AdmLName1, T1.AdmFName2, T1.AdmLName2, T1.AdmFName3, T1.AdmLName3 FROM schools AS T1 WHERE T1.`CDSCode` = ( SELECT T2.`CDSCode` FROM frpm AS T2 INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T3.`NumGE1500` = ( SELECT MAX(T4.`NumGE1500`) FROM frpm AS T5 INNER JOIN satscores AS T6 ON T5.`CDSCode` = T6.`cds` WHERE T6.`NumGE1500` IS NOT NULL ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
    "SELECT T2.`Street`, T2.`City`, T2.`State`, T2.`Zip` FROM schools AS T2 WHERE T2.`CDSCode` = ( SELECT T1.`CDSCode` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Charter School (Y/N)` = 1 ORDER BY CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` ASC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?",
    "SELECT T1.School, T2.NumTstTakr FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.NumTstTakr BETWEEN 2000 AND 3000 AND T1.County = 'Los Angeles'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?",
    "SELECT AVG(T2.NumTstTakr) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds INNER JOIN schools AS S ON T1.CDSCode = S.CDSCode WHERE S.County = 'Fresno' AND S.OpenDate <= '1980-12-31' AND S.ClosedDate >= '1980-01-01' AND S.OpenDate IS NOT NULL AND S.ClosedDate IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the telephone number for the school with the lowest average score in reading in Fresno Unified?",
    "SELECT T2.Phone FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Fresno Unified' AND T1.CDSCode = ( SELECT T1.CDSCode FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.`AvgScrMath` = ( SELECT MIN(T4.`AvgScrMath`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.CDSCode = T4.cds WHERE T3.CDSCode = ( SELECT T1.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Fresno Unified' ) ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which exclusively virtual schools have the top 5 highest average reading scores?",
    "SELECT T2.`sname` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T2.`Virtual` = 'F' ORDER BY T3.`AvgScrRead` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the type of education offered in the school who scored the highest average in Math?",
    "SELECT T1.`EdOpsName` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`CDSCode` = ( SELECT T3.`CDSCode` FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T4.`AvgScrMath` = ( SELECT MAX(T5.`AvgScrMath`) FROM frpm AS T6 INNER JOIN satscores AS T5 ON T6.`CDSCode` = T5.`cds` ) )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?",
    "SELECT T1.`AvgScrMath` FROM satscores AS T1 INNER JOIN schools AS s ON T1.`cds` = s.`CDSCode` WHERE (T1.`AvgScrMath` + T1.`AvgScrRead` + T1.`AvgScrWrite`) = ( SELECT MIN((T2.`AvgScrMath` + T2.`AvgScrRead` + T2.`AvgScrWrite`) ) FROM satscores AS T2 INNER JOIN schools AS s2 ON T2.`cds` = s2.`CDSCode` )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.",
    "SELECT AVG(T2.`AvgScrWrite`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` INNER JOIN schools AS T3 ON T1.`CDSCode` = T3.`CDSCode` WHERE T2.`NumGE1500` = ( SELECT MAX(T4.`NumGE1500`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores.",
    "SELECT s.`School`, AVG(ss.`AvgScrWrite`) AS `Average Writing Score` FROM schools AS s INNER JOIN ( SELECT `cds`, `AvgScrWrite` FROM satscores ) AS ss ON s.`CDSCode` = ss.`cds` INNER JOIN ( SELECT `CDSCode` FROM schools WHERE `AdmFName1` = 'Ricci' AND `AdmLName1` = 'Ulrich' ) AS T1 ON s.`CDSCode` = T1.`CDSCode` GROUP BY s.`School`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "SELECT schools.`CDSCode`, SUM(enroll12) AS TotalEnrollment FROM schools INNER JOIN satscores ON schools.`CDSCode` = satscores.`cds` GROUP BY schools.`CDSCode` HAVING SUM(enroll12) = ( SELECT MAX(TotalEnrollment) FROM ( SELECT schools.`CDSCode`, SUM(enroll12) AS TotalEnrollment FROM schools INNER JOIN satscores ON schools.`CDSCode` = satscores.`cds` GROUP BY schools.`CDSCode` ) AS T )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?",
    "SELECT COUNT(schools.CDSCode) / 12 AS Monthly_Average FROM schools WHERE schools.OpenDate BETWEEN '1980-01-01' AND '1980-12-31' AND schools.County = 'Alameda' AND schools.DOCType = 'Elementary School District'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?",
    "SELECT CAST(T1 AS REAL) / T2 AS Ratio FROM ( SELECT COUNT(*) AS T1 FROM schools WHERE DOC = 54 AND County = 'Orange' ) AS T1, ( SELECT COUNT(*) AS T2 FROM schools WHERE DOC = 52 AND County = 'Orange' ) AS T2\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.",
    "SELECT T1.`County`, T1.`School`, T1.`ClosedDate` FROM ( SELECT T2.`County`, T2.`School`, T2.`ClosedDate`, RANK() OVER (ORDER BY COUNT(*) DESC) AS rnk FROM schools AS T1 INNER JOIN ( SELECT `CDSCode` FROM schools WHERE `StatusType` = 'Closed' ) AS T2 ON T1.`CDSCode` = T2.`CDSCode` GROUP BY T2.`County`, T2.`School`, T2.`ClosedDate` ) AS T3 WHERE T3.rnk = 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the postal street address for the school with the 6th highest Math average? Indicate the school's name.",
    "SELECT s.Street, s.City, s.Zip, s.State FROM schools AS s INNER JOIN satscores AS t ON s.CDSCode = t.cds WHERE t.AvgScrMath = ( SELECT MAX(AvgScrMath) FROM satscores WHERE AvgScrMath < ( SELECT MAX(AvgScrMath) FROM satscores ) ORDER BY AvgScrMath DESC LIMIT 1 OFFSET 5 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.",
    "SELECT T1.`MailStreet`, T1.`MailCity`, T1.`MailState` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T3.`AvgScrRead` = ( SELECT MIN(T4.`AvgScrRead`) FROM frpm AS T4 INNER JOIN satscores AS T5 ON T4.`CDSCode` = T5.`cds` )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?",
    "SELECT COUNT(T1.`CDSCode`) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`City` = 'Lakeport' AND T2.`NumGE1500` >= 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many test takers are there at the school/s whose mailing city address is in Fresno?",
    "SELECT COUNT(T2.`NumTstTakr`) FROM schools AS s INNER JOIN satscores AS T2 ON s.`CDSCode` = T2.`cds` WHERE s.`City` = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.",
    "SELECT DISTINCT s.CDSCode, s.MailZip FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores ss ON s.CDSCode = ss.cds WHERE (s.AdmFName1 LIKE '%Atoian%' OR s.AdmLName1 LIKE '%Atoian%') AND ss.cname = 'Los Angeles'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?",
    "SELECT (SELECT COUNT(*) FROM schools WHERE County = 'Colusa') / (SELECT COUNT(*) FROM schools WHERE County = 'Humboldt')\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of all the schools with a mailing state address in California, how many are active in San Joaquin?",
    "SELECT COUNT(*) FROM schools WHERE State = 'CA' AND StatusType = 'Active' AND County = 'San Joaquin'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school that had the 333rd highest average writing score?",
    "SELECT T1.`Phone`, T1.`Ext` FROM schools AS T1 INNER JOIN ( SELECT `cds`, AVG(`avg_writing_score`) AS `avg_writing_score` FROM satscores GROUP BY `cds` ) AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`avg_writing_score` = ( SELECT AVG(T3.`avg_writing_score`) FROM ( SELECT `cds`, AVG(`avg_writing_score`) AS `avg_writing_score` FROM satscores GROUP BY `cds` ) AS T3 ORDER BY T3.`avg_writing_score` DESC LIMIT 1 OFFSET 332 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
    "SELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Zip = '95203-3704'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
    "SELECT COUNT(T1.CDSCode) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County Code = 'Hickman' AND T1.Charter = 1 AND T1.DOC = 52;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
    "SELECT COUNT(*) FROM schools WHERE County = 'Los Angeles' AND (Free Meal Count (K-12) * 100 / Enrollment (K-12)) < 0.18 AND Charter = 0\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs",
    "SELECT T1.`AdmFName1`, T1.`AdmLName1`, T1.`AdmFName2`, T1.`AdmLName2`, T1.`AdmFName3`, T1.`AdmLName3` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T2.`Charter School (Y/N)` = 1 AND T2.`CDSCode` = '00D2' AND T1.`AdmFName1` IS NOT NULL AND T1.`AdmLName1` IS NOT NULL AND T1.`AdmFName2` IS NOT NULL AND T1.`AdmLName2` IS NOT NULL AND T1.`AdmFName3` IS NOT NULL AND T1.`AdmLName3` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?",
    "SELECT COUNT(*) FROM schools WHERE `MailCity` = 'Hickman' AND `CharterNum` = '00D4'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?",
    "SELECT ( (SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara' AND FundingType = 'Locally funded' ) / (SELECT COUNT(*) FROM schools WHERE County = 'Santa Clara' ) ) * 100 AS Ratio\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?",
    "SELECT COUNT(*) FROM schools WHERE OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly Funded' AND County = 'Stanislaus'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total amount of Community College District closure in 1989 in the city of San Francisco?",
    "SELECT COUNT(*) FROM schools WHERE `StatusType` = 'Closed' AND `ClosedDate` = '1989-01-01' AND `City` = 'San Francisco' AND `SOC` = '66' AND `SOCType` = 'Community College'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
    "SELECT T2.cname FROM ( SELECT T2.cname, COUNT(*) AS ClosureCount FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.SOC = 11 AND YEAR(T1.Academic Year) BETWEEN 1980 AND 1989 GROUP BY T2.cname ) AS T3 ORDER BY T3.ClosureCount DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
    "SELECT schools.CDSCode FROM schools WHERE schools.SOC = 31\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many active and closed District Community Day Schools are there in the county of Alpine?",
    "SELECT COUNT(*) FROM schools WHERE County = 'Alpine' AND (StatusType = 'Active' OR StatusType = 'Closed') AND SOCType = 'District Community Day Schools'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the district code for the School that does not offer a magnet program in the city of Fresno?",
    "SELECT T1.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Fresno' AND T2.`Charter School (Y/N)` = 0;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year?",
    "SELECT T1.`Enrollment (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T1.`Academic Year` = '2014-2015' AND T2.EdOpsCode = 'SSS' AND T2.County = 'Fremont' AND T3.`rtype` = 'S'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?",
    "SELECT T1.`Free Meal Count (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`MailStreet` = 'PO Box 1040'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360?",
    "SELECT MIN(frpm.Low_Grade) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.NCESDist = 613360 AND schools.SOCType = 'District Community Day Schools' AND schools.EdOpsCode = 'SPECON';\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.",
    "SELECT schools.School, schools.EILName FROM schools INNER JOIN frpm ON schools.CDSCode = frpm.CDSCode WHERE frpm.NSLPProvisionStatus = 'Breakfast Provision 2' AND schools.County = 'San Diego'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?",
    "SELECT s.`City` FROM schools AS s WHERE s.`CDSCode` IN ( SELECT DISTINCT s.`CDSCode` FROM frpm AS f JOIN schools AS s ON f.`CDSCode` = s.`CDSCode` WHERE f.`NSLP Provision Status` = 'Lunch Provision 2' ) AND s.`CDSCode` IN ( SELECT DISTINCT s.`CDSCode` FROM frpm AS f JOIN schools AS s ON f.`CDSCode` = s.`CDSCode` WHERE f.`Low Grade` = '9' AND f.`High Grade` = '12' ) AND s.`CDSCode` IN ( SELECT DISTINCT s.`CDSCode` FROM schools AS s WHERE s.`County` = 'Merced' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?",
    "SELECT T1.`School`, (T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)`) * 100 AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Los Angeles' AND T1.`GSoffered` = 'K-9' AND T2.`Low Grade` = 'K' AND T2.`High Grade` = '9'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the most common type of grade span served in the city of Adelanto?",
    "SELECT T1.`GSserved`, COUNT(*) AS Frequency FROM schools AS T1 WHERE T1.`CDSCode` IN ( SELECT T2.`CDSCode` FROM schools AS T2 WHERE T2.`City` = 'Adelanto' ) GROUP BY T1.`GSserved` ORDER BY Frequency DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.",
    "SELECT County, COUNT(*) AS Count FROM schools WHERE County IN ('San Diego', 'Santa Barbara') AND Virtual = 'F' GROUP BY County ORDER BY Count DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
    "SELECT T1.`School Type`, T1.`School`, T1.`Latitude` FROM schools AS T1 WHERE T1.`Latitude` = ( SELECT MAX(`Latitude`) FROM schools )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
    "SELECT T1.`School Name` FROM schools AS T1 JOIN frpm ON T1.`CDSCode` = frpm.`CDSCode` JOIN satscores ON frpm.`CDSCode` = satscores.`cds` WHERE T1.`State` = 'CA' ORDER BY T1.`Latitude` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the grade span offered in the school with the highest longitude?",
    "SELECT `GSoffered` FROM schools WHERE `CDSCode` = ( SELECT `CDSCode` FROM schools ORDER BY `Longitude` DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
    "SELECT COUNT(*) AS city_count, schools.City FROM schools WHERE Magnet = 1 AND GSoffered = 'K-8' GROUP BY schools.City\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the two most common first names among the school administrators? Indicate the district to which they administer.",
    "SELECT AdmFName1, COUNT(*) AS Frequency, District FROM schools WHERE AdmFName1 IS NOT NULL GROUP BY AdmFName1, District ORDER BY Frequency DESC LIMIT 2 UNION ALL SELECT AdmFName2, COUNT(*) AS Frequency, District FROM schools WHERE AdmFName2 IS NOT NULL GROUP BY AdmFName2, District ORDER BY Frequency DESC LIMIT 2 UNION ALL SELECT AdmFName3, COUNT(*) AS Frequency, District FROM schools WHERE AdmFName3 IS NOT NULL GROUP BY AdmFName3, District ORDER BY Frequency DESC LIMIT 2\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.",
    "SELECT `CDSCode` FROM schools WHERE `AdmFName1` = 'Alusine'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.",
    "SELECT T2.District, T2.County, T3.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds WHERE T1.CharterNum = '40'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools?",
    "SELECT schools.AdmEmail1 FROM schools WHERE schools.`CDSCode` = ( SELECT schools.`CDSCode` FROM schools WHERE schools.`County` = 'San Bernardino' AND schools.`District` = 'San Bernardino City Unified' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.",
    "SELECT T1.AdmEmail1 FROM schools AS T1 INNER JOIN ( SELECT T2.`sname`, T2.`cds` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` = ( SELECT MAX(T4.`NumGE1500`) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` ) ) AS T2 ON T1.`CDSCode` = T2.`cds`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
    "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND district.A3 = 'east Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts who have region in Prague are eligible for loans?",
    "SELECT COUNT(DISTINCT a.account_id) FROM account a INNER JOIN loan l ON a.account_id = l.account_id WHERE a.district_id IN ( SELECT `district_id` FROM district WHERE `A3` = 'Prague' )\t----- bird -----\tfinancial"
  ],
  [
    "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
    "SELECT CASE WHEN AVG(T2.A12) > AVG(T2.A13) THEN '1995' WHEN AVG(T2.A12) < AVG(T2.A13) THEN '1996' ELSE 'equal' END AS Higher_Year FROM district AS T2\t----- bird -----\tfinancial"
  ],
  [
    "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
    "SELECT COUNT(*) FROM ( SELECT T2.`A11` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' ) AS T3 WHERE T3.`A11` > 6000 AND T3.`A11` < 10000\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who are living in North Bohemia have average salary greater than 8000?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A3` = 'north Bohemia' AND T1.`gender` = 'M' AND T2.`A11` > 8000\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
    "SELECT T2.`A11` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' ORDER BY T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of clients who are youngest and have highest average salary?",
    "SELECT T1.`account_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`birth_date` = ( SELECT MIN(T3.`birth_date`) FROM client AS T3 INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` ) AND T2.`A11` = ( SELECT MAX(T5.`A11`) FROM client AS T5 INNER JOIN district AS T6 ON T5.`district_id` = T6.`district_id` )\t----- bird -----\tfinancial"
  ],
  [
    "How many customers who choose statement of weekly issuance are Owner?",
    "SELECT COUNT(*) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "List out the clients who choose statement of issuance after transaction are Disponent?",
    "SELECT T5.`client_id` FROM account AS T1 INNER JOIN card AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN disp AS T3 ON T2.`disp_id` = T3.`disp_id` INNER JOIN client AS T5 ON T3.`client_id` = T5.`client_id` WHERE T3.`type` = 'DISPONENT' AND T2.`type` = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
    "SELECT T2.`account_id` FROM ( SELECT `account_id` FROM account WHERE `frequency` = 'POPLATEK TYDNE' ) AS T2 INNER JOIN ( SELECT T1.`account_id`, MIN(`amount`) AS min_amount FROM loan INNER JOIN account ON loan.`account_id` = account.`account_id` WHERE loan.`date` = '1997-01-01' GROUP BY `account_id` ) AS T3 ON T2.`account_id` = T3.`account_id`\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
    "SELECT T3.account_id FROM ( SELECT DISTINCT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 ) AS T3 INNER JOIN ( SELECT T1.account_id, MAX(T1.amount) AS max_amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.duration > 12 GROUP BY T1.account_id ) AS T4 ON T3.account_id = T4.account_id INNER JOIN ( SELECT T2.account_id FROM account AS T2 WHERE T2.date LIKE '1993%' ) AS T5 ON T3.account_id = T5.account_id\t----- bird -----\tfinancial"
  ],
  [
    "Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov?",
    "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date < '1950-01-01' AND T2.A2 = 'Slokolov'\t----- bird -----\tfinancial"
  ],
  [
    "List out the accounts who have the earliest trading date in 1995 ?",
    "SELECT DISTINCT T1.`account_id` FROM trans AS T1 WHERE T1.`date` = '1995-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD",
    "SELECT DISTINCT T1.account_id FROM account AS T1 JOIN card AS T3 ON T1.account_id = T3.account_id JOIN disp AS T5 ON T1.account_id = T5.account_id JOIN client AS T6 ON T5.client_id = T6.client_id JOIN loan AS T7 ON T1.account_id = T7.account_id WHERE T7.amount > 3000 AND T1.date < '1997-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "Which client issued his/her card in 1994/3/3, give his/her client id.",
    "SELECT DISTINCT c.client_id FROM card cr JOIN disp d ON cr.disp_id = d.disp_id JOIN client c ON d.client_id = c.client_id WHERE cr.issued = '1994-03-03'\t----- bird -----\tfinancial"
  ],
  [
    "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
    "SELECT T1.`date` FROM account AS T1 WHERE T1.`account_id` = ( SELECT T2.`account_id` FROM trans AS T2 WHERE T2.`date` = '1998-10-14' AND T2.`amount` = 840 )\t----- bird -----\tfinancial"
  ],
  [
    "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
    "SELECT T1.`district_id` FROM account AS T1 WHERE T1.`account_id` = ( SELECT T2.`account_id` FROM loan AS T2 WHERE T2.`date` = '1994-08-25' )\t----- bird -----\tfinancial"
  ],
  [
    "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
    "SELECT MAX(T3.`amount`) FROM trans AS T3 INNER JOIN account AS T1 ON T3.`account_id` = T1.`account_id` INNER JOIN card AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN disp AS T4 ON T2.`disp_id` = T4.`disp_id` INNER JOIN client AS T5 ON T4.`client_id` = T5.`client_id` WHERE T2.`issued` = '1996-10-21'\t----- bird -----\tfinancial"
  ],
  [
    "What is the gender of the oldest client who opened his/her account in the highest average salary branch?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` DESC, T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
    "SELECT T1.amount FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN loan AS T4 ON T3.client_id = T4.client_id WHERE T3.client_id = ( SELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.client_id ORDER BY T2.amount DESC LIMIT 1 ) AND T1.date > ( SELECT T5.date FROM account AS T5 INNER JOIN client AS T6 ON T5.client_id = T6.client_id INNER JOIN loan AS T7 ON T6.client_id = T7.client_id WHERE T6.client_id = ( SELECT T1.client_id FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.client_id ORDER BY T2.amount DESC LIMIT 1 ) )\t----- bird -----\tfinancial"
  ],
  [
    "How many clients opened their accounts in Jesenik branch were women?",
    "SELECT COUNT(*) FROM client WHERE district_id IN ( SELECT district_id FROM district WHERE A2 LIKE '%Jesenik%' ) AND gender = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?",
    "SELECT T1.disp_id FROM disp AS T1 INNER JOIN client AS T2 ON T1.client_id = T2.client_id WHERE T2.client_id = ( SELECT T3.client_id FROM trans AS T3 INNER JOIN account AS T4 ON T3.account_id = T4.account_id WHERE T3.amount = 5100 AND T3.date = '1998-09-02' )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts were opened in Litomerice in 1996?",
    "SELECT COUNT(account_id) FROM account WHERE `date` LIKE '1996-%' AND `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Litomerice' )\t----- bird -----\tfinancial"
  ],
  [
    "For the female client who was born in 1976/1/29, which district did she opened her account?",
    "SELECT T1.`A2` FROM district AS T1 WHERE T1.`district_id` = ( SELECT T2.`district_id` FROM account AS T2 INNER JOIN client AS T3 ON T2.`account_id` = T3.`client_id` WHERE T3.`client_id` = ( SELECT T4.`client_id` FROM client AS T4 WHERE T4.`gender` = 'F' AND T4.`birth_date` = '1976-01-29' ) )\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?",
    "SELECT T1.`birth_date` FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN loan AS T3 ON T2.`account_id` = T3.`account_id` WHERE T3.`amount` = 98832 AND T3.`date` = '1996-01-03'\t----- bird -----\tfinancial"
  ],
  [
    "For the first client who opened his/her account in Prague, what is his/her account ID?",
    "SELECT `account_id` FROM account INNER JOIN client ON account.`district_id` = client.`district_id` WHERE client.`birth_date` = ( SELECT MIN(`birth_date`) FROM client WHERE client.`district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'Prague' ) )\t----- bird -----\tfinancial"
  ],
  [
    "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
    "SELECT (male_clients / total_clients) * 100 AS percentage_male_clients FROM ( SELECT COUNT(*) AS total_clients, SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) AS male_clients FROM client WHERE client.district_id = (SELECT `district_id` FROM district WHERE A3 = 'south Bohemia' AND A4 = (SELECT MAX(A4) FROM district WHERE A3 = 'south Bohemia')) ) AS subquery\t----- bird -----\tfinancial"
  ],
  [
    "For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
    "SELECT T1.`amount` FROM trans AS T1 WHERE T1.`account_id` = ( SELECT T2.`account_id` FROM loan AS T2 WHERE T2.`date` = '1993-07-05' ORDER BY T2.`date` ASC LIMIT 1 ) AND T1.`date` = '1998-12-27'\t----- bird -----\tfinancial"
  ],
  [
    "What is the percentage of loan amount that has been fully paid with no issue.",
    "SELECT (SUM(loan.amount) - SUM(loan.amount) * (SELECT COUNT(*) FROM loan WHERE loan.status != 'A') / COUNT(*)) / SUM(loan.amount) * 100 AS percentage FROM loan\t----- bird -----\tfinancial"
  ],
  [
    "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
    "SELECT (SUM(CASE WHEN status = 'C' THEN 1 ELSE 0 END) * 100) / SUM(amount) FROM loan WHERE amount < 100000\t----- bird -----\tfinancial"
  ],
  [
    "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
    "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date > '1993-01-01' AND T1.date < '1994-01-01' AND T1.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial"
  ],
  [
    "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
    "SELECT T1.`account_id`, T1.`frequency` FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A3` = 'east Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "List account ID and account opening date for accounts from 'Prachatice'.",
    "SELECT T1.`account_id`, T1.`date` FROM account AS T1 WHERE T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Prachatice' )\t----- bird -----\tfinancial"
  ],
  [
    "State the district and region for loan ID '4990'.",
    "SELECT T2.A3 FROM district AS T2 WHERE T2.district_id = ( SELECT T1.district_id FROM loan AS T1 INNER JOIN account AS T3 ON T1.account_id = T3.account_id WHERE T1.loan_id = 4990 )\t----- bird -----\tfinancial"
  ],
  [
    "Provide the account ID, district and region for loan amount greater than USD300,000.",
    "SELECT T1.account_id, T2.A2, T2.A3 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 300000\t----- bird -----\tfinancial"
  ],
  [
    "List the loan ID, district and average salary for loan with duration of 60 months.",
    "SELECT T1.loan_id, T2.A3, T2.A11 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.duration = 60\t----- bird -----\tfinancial"
  ],
  [
    "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
    "SELECT (T2.A13 - T2.A12) / T2.A12 * 100 AS increment_rate FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`district_id` = T3.`district_id` INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T1.`status` = 'D'\t----- bird -----\tfinancial"
  ],
  [
    "Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.",
    "SELECT ( (SELECT COUNT(*) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Decin' ) ) / ( SELECT COUNT(*) FROM account WHERE date LIKE '1993-%' ) ) * 100 AS percentage\t----- bird -----\tfinancial"
  ],
  [
    "List the account IDs with monthly issuance of statements.",
    "SELECT DISTINCT T1.`account_id` FROM account AS T1 INNER JOIN card AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'classic' AND T1.`frequency` = 'POPLATEK MESICNE'\t----- bird -----\tfinancial"
  ],
  [
    "List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders.",
    "SELECT DISTINCT T2.A2, COUNT(T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.client_id = T3.client_id INNER JOIN card AS T4 ON T3.account_id = T4.account_id WHERE T1.gender = 'F' GROUP BY T2.district_id ORDER BY COUNT(T1.client_id) DESC LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996?",
    "SELECT T4.A2, SUM(T1.amount) AS total_withdrawal FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id INNER JOIN district AS T4 ON T2.district_id = T4.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' GROUP BY T4.A2 ORDER BY total_withdrawal DESC LIMIT 10;\t----- bird -----\tfinancial"
  ],
  [
    "How many of the account holders in South Bohemia still do not own credit cards?",
    "SELECT COUNT(*) - ( SELECT COUNT(*) FROM client LEFT JOIN disp ON client.client_id = disp.client_id WHERE disp.disp_id IS NOT NULL ) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A3 LIKE '%South Bohemia%'\t----- bird -----\tfinancial"
  ],
  [
    "Which district has highest active loan?",
    "SELECT T2.A3 FROM ( SELECT T1.A3, COUNT(*) AS loan_count FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'C' GROUP BY T1.A3 ) AS T2 ORDER BY loan_count DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the average loan amount by male borrowers?",
    "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "In 1996, which districts have the highest unemployment rate? List their branch location and district name.",
    "SELECT T2.A2, T2.A13 FROM district AS T2 WHERE T2.A13 = ( SELECT MAX(A13) FROM district )\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?",
    "SELECT COUNT(DISTINCT `account_id`) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district ORDER BY `A16` DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?",
    "SELECT T1.account_id FROM ( SELECT trans.account_id FROM trans WHERE trans.type = 'VYBER KARTOU' ) AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.balance < 0;\t----- bird -----\tfinancial"
  ],
  [
    "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.account_id FROM account AS T1 WHERE T1.frequency = 'POPLATEK MESICNE' ) AS T3 INNER JOIN loan AS T1 ON T3.account_id = T1.account_id WHERE T1.amount >= 250000 AND T1.date BETWEEN '1995-01-01' AND '1997-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have running contracts in Branch location 1?",
    "SELECT COUNT(*) FROM account WHERE district_id = 1 AND EXISTS ( SELECT 1 FROM loan WHERE loan.account_id = account.account_id AND (loan.status = 'C' OR loan.status = 'D') )\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there?",
    "SELECT COUNT(*) FROM client WHERE `gender` = 'M' AND `district_id` = ( SELECT `district_id` FROM district ORDER BY `A15` DESC LIMIT 1 OFFSET 1 )\t----- bird -----\tfinancial"
  ],
  [
    "How many high-level credit cards have \"disponent\" type of disposition?",
    "SELECT COUNT(*) FROM card WHERE type = 'gold' AND disp_id IN ( SELECT disp_id FROM disp WHERE type = 'disponent' )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts are there in the district of \"Pisek\"?",
    "SELECT COUNT(account_id) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Pisek' )\t----- bird -----\tfinancial"
  ],
  [
    "Which districts have transactions greater than USS$10,000 in 1997?",
    "SELECT T2.`A2` AS district_name FROM ( SELECT T1.`district_id`, SUM(T1.`amount`) AS total_amount FROM trans AS T1 WHERE T1.`date` LIKE '1997%' AND T1.`amount` > 10000 GROUP BY T1.`district_id` ) AS subquery INNER JOIN district AS T2 ON subquery.`district_id` = T2.`district_id` WHERE subquery.total_amount > 10000\t----- bird -----\tfinancial"
  ],
  [
    "Which accounts placed orders for household payment in Pisek?",
    "SELECT T1.`account_id` FROM order AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`k_symbol` = 'SIPO' AND T2.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Pisek' )\t----- bird -----\tfinancial"
  ],
  [
    "What are the accounts that have both gold and junior credit cards?",
    "SELECT T2.`account_id` FROM ( SELECT DISTINCT T1.`account_id` FROM card AS T1 WHERE T1.`type` = 'gold' ) AS T2 INNER JOIN ( SELECT DISTINCT T1.`account_id` FROM card AS T1 WHERE T1.`type` = 'junior' ) AS T3 ON T2.`account_id` = T3.`account_id`;\t----- bird -----\tfinancial"
  ],
  [
    "How much is the average amount in credit card made by account holders in a month, in year 2021?",
    "SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.date >= '2021-01-01' AND T1.date <= '2021-12-31' AND T1.type = 'VYBER KARTOU'\t----- bird -----\tfinancial"
  ],
  [
    "Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998?",
    "SELECT T2.account_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN card AS T3 ON T1.account_id = T3.account_id WHERE T1.date >= '1998-01-01' AND T1.date <= '1998-12-31' AND T1.type = 'VYBER KARTOU' AND T1.amount < ( SELECT AVG(T4.amount) FROM trans AS T4 INNER JOIN account AS T5 ON T4.account_id = T5.account_id INNER JOIN card AS T6 ON T4.account_id = T6.account_id WHERE T4.date >= '1998-01-01' AND T4.date <= '1998-12-31' AND T4.type = 'VYBER KARTOU' )\t----- bird -----\tfinancial"
  ],
  [
    "Who are the female account holders who own credit cards and also have loans?",
    "SELECT T1.account_id FROM client AS T1 INNER JOIN card AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T1.client_id = T3.account_id WHERE T1.gender = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "How many female clients' accounts are in the region of South Bohemia?",
    "SELECT COUNT(*) FROM client c JOIN district d ON c.district_id = d.district_id WHERE c.gender = 'F' AND d.A3 = 'south Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "Please list the accounts whose district is Tabor that are eligible for loans.",
    "SELECT DISTINCT a.account_id FROM account a JOIN client c ON a.district_id = c.district_id JOIN disp d ON d.account_id = a.account_id WHERE c.district_id IN ( SELECT district_id FROM district WHERE A2 = 'Tabor' ) AND d.type = 'OWNER';\t----- bird -----\tfinancial"
  ],
  [
    "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
    "SELECT T1.`type` FROM account AS T1 LEFT JOIN card AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` != 'OWNER' AND ( SELECT AVG(T3.A11) FROM account AS T3 INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T3.`account_id` = T1.`account_id` ) BETWEEN 8000 AND 9000\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in North Bohemia has made a transaction with the partner's bank being AB?",
    "SELECT COUNT(DISTINCT T1.`account_id`) FROM account AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN order AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN district AS T4 ON T1.`district_id` = T4.`district_id` WHERE T4.`A3` = 'North Bohemia' AND T3.`bank_to` = 'AB'\t----- bird -----\tfinancial"
  ],
  [
    "Please list the name of the districts with accounts that made withdrawal transactions.",
    "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN client AS T3 ON T2.`district_id` = T3.`district_id` INNER JOIN district AS T4 ON T3.`district_id` = T4.`district_id` WHERE T1.`type` = 'VYDAJ'\t----- bird -----\tfinancial"
  ],
  [
    "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?",
    "SELECT AVG(`A15`) FROM district AS T1 INNER JOIN ( SELECT `A3`, `A15` FROM district WHERE `A15` > 4000 ) AS T2 ON T1.A3 = T2.A3 WHERE EXISTS ( SELECT 1 FROM account WHERE `account_id` = T1.`account_id` AND `date` < '1997-01-01' )\t----- bird -----\tfinancial"
  ],
  [
    "How many 'classic' cards are eligible for loan?",
    "SELECT COUNT(*) FROM card WHERE type = 'classic' AND EXISTS ( SELECT 1 FROM disp WHERE disp.disp_id = card.disp_id AND disp.type = 'OWNER' )\t----- bird -----\tfinancial"
  ],
  [
    "How many male clients in 'Hl.m. Praha' district?",
    "SELECT COUNT(*) FROM client WHERE client.gender = 'M' AND client.district_id = ( SELECT district_id FROM district WHERE A2 = 'Hl.m. Praha' )\t----- bird -----\tfinancial"
  ],
  [
    "How many percent of 'Gold' cards were issued prior to 1998?",
    "SELECT ( SELECT COUNT(*) FROM card WHERE type = 'gold' AND issued < '1998-01-01' ) / ( SELECT COUNT(*) FROM card ) * 100 AS Percentage_Gold_Cards\t----- bird -----\tfinancial"
  ],
  [
    "Who is the owner of the account with the largest loan amount?",
    "SELECT T1.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.account_id = ( SELECT T4.account_id FROM account AS T4 INNER JOIN loan AS T5 ON T4.account_id = T5.account_id WHERE T5.amount = ( SELECT MAX(T6.amount) FROM loan AS T6 INNER JOIN account AS T7 ON T6.account_id = T7.account_id ) )\t----- bird -----\tfinancial"
  ],
  [
    "What is the number of committed crimes in 1995 in the district of the account with the id 532?",
    "SELECT T2.`A15` FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`account_id` = 532\t----- bird -----\tfinancial"
  ],
  [
    "What is the district Id of the account that placed the order with the id 33333?",
    "SELECT T1.`district_id` FROM account AS T1 INNER JOIN order AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`order_id` = 33333;\t----- bird -----\tfinancial"
  ],
  [
    "List all the withdrawals in cash transactions that the client with the id 3356 makes.",
    "SELECT t.* FROM trans t JOIN account a ON t.account_id = a.account_id JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.client_id = 3356 AND t.operation = 'VYBER' AND t.amount > 0;\t----- bird -----\tfinancial"
  ],
  [
    "Among the weekly issuance accounts, how many have a loan of under 200000?",
    "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.amount < 200000\t----- bird -----\tfinancial"
  ],
  [
    "What type of credit card does the client with the id 13539 own?",
    "SELECT T1.`type` FROM card AS T1 WHERE T1.`card_id` = ( SELECT T1.`card_id` FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` WHERE T1.`client_id` = 13539 )\t----- bird -----\tfinancial"
  ],
  [
    "What is the region of the client with the id 3541 from?",
    "SELECT T2.`A3` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`client_id` = 3541\t----- bird -----\tfinancial"
  ],
  [
    "Which district has the most accounts with loan contracts finished with no problems?",
    "SELECT `district_id` FROM ( SELECT T1.`district_id`, COUNT(*) AS `NumberOfAccounts` FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`status` = 'A' GROUP BY T1.`district_id` ) AS T ORDER BY `NumberOfAccounts` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Who placed the order with the id 32423?",
    "SELECT T1.`gender` FROM client AS T1 WHERE T1.`client_id` = ( SELECT T2.`client_id` FROM account AS T2 WHERE T2.`account_id` = ( SELECT T3.`account_id` FROM order AS T3 WHERE T3.`order_id` = 32423 ) )\t----- bird -----\tfinancial"
  ],
  [
    "Please list all the transactions made by accounts from district 5.",
    "SELECT t.* FROM trans t JOIN account a ON t.account_id = a.account_id WHERE a.district_id = 5 AND a.account_id IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "How many of the accounts are from Jesenik district?",
    "SELECT COUNT(DISTINCT `account_id`) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Jesenik' )\t----- bird -----\tfinancial"
  ],
  [
    "List all the clients' IDs whose junior credit cards were issued after 1996.",
    "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'junior' AND T1.issued >= '1997-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?",
    "WITH avg_salary_district AS ( SELECT district_id FROM district WHERE A11 > 10000 ORDER BY A11 DESC LIMIT 1 ), client_in_avg_salary_district AS ( SELECT client_id FROM client WHERE district_id = (SELECT * FROM avg_salary_district) ), female_clients_in_avg_salary_district AS ( SELECT client_id FROM client WHERE gender = 'F' AND client_id IN (SELECT * FROM client_in_avg_salary_district) ) SELECT ( SELECT COUNT(*) FROM female_clients_in_avg_salary_district ) AS female_count, ( SELECT COUNT(*) FROM client_in_avg_salary_district ) AS total_count FROM client_in_avg_salary_district;\t----- bird -----\tfinancial"
  ],
  [
    "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
    "SELECT SUM(T3.amount) AS amount_1997 FROM account AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.client_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.gender = 'M' AND T3.date BETWEEN '1997-01-01' AND '1997-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many credit card withdrawals were recorded after 1995?",
    "SELECT COUNT(*) FROM trans WHERE `type` = 'VYBER KARTOU' AND `date` > '1995-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
    "SELECT (SELECT A16 FROM district WHERE A3 = 'north Bohemia') - (SELECT A16 FROM district WHERE A3 = 'east Bohemia') AS crime_difference\t----- bird -----\tfinancial"
  ],
  [
    "How many owner and disponent dispositions are there from account number 1 to account number 10?",
    "SELECT COUNT(*) FROM ( SELECT COUNT(*) AS owner_count FROM disp WHERE disp.type = 'OWNER' AND disp.account_id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) ) AS T1, ( SELECT COUNT(*) AS disponent_count FROM disp WHERE disp.type = 'DISPONENT' AND disp.account_id IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10) ) AS T2\t----- bird -----\tfinancial"
  ],
  [
    "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
    "SELECT k_symbol FROM trans WHERE account_id = 3 AND amount = 3539\t----- bird -----\tfinancial"
  ],
  [
    "What year was account owner number 130 born?",
    "SELECT STRFTIME('%Y', T1.birth_date) AS birth_year FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.account_id = 130\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have an owner disposition and request for a statement to be generated upon a transaction?",
    "SELECT COUNT(DISTINCT T1.`account_id`) FROM disp AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`type` = 'OWNER' AND T2.`operation` = 'PREVOD Z UCTU'\t----- bird -----\tfinancial"
  ],
  [
    "What is the amount of debt that client number 992 has, and how is this client doing with payments?",
    "SELECT SUM(T3.amount) FROM trans AS T3 INNER JOIN account AS T2 ON T3.account_id = T2.account_id WHERE T2.account_id = 992\t----- bird -----\tfinancial"
  ],
  [
    "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?",
    "SELECT T1.gender FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T3.account_id = ( SELECT account_id FROM account WHERE client_id = 4 )\t----- bird -----\tfinancial"
  ],
  [
    "Which kind of credit card does client number 9 possess?",
    "SELECT type FROM card WHERE card_id = ( SELECT card_id FROM client WHERE client_id = 9 )\t----- bird -----\tfinancial"
  ],
  [
    "How much, in total, did client number 617 pay for all of the transactions in 1998?",
    "SELECT SUM(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.client_id = 617 AND T1.date LIKE '%1998'\t----- bird -----\tfinancial"
  ],
  [
    "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.",
    "SELECT DISTINCT T1.client_id FROM client AS T1 WHERE T1.client_id IN ( SELECT client_id FROM client WHERE birth_date BETWEEN '1983-01-01' AND '1987-12-31' ) AND T1.client_id IN ( SELECT client_id FROM client WHERE district_id IN ( SELECT district_id FROM district WHERE A3 LIKE '%East Bohemia%' ) )\t----- bird -----\tfinancial"
  ],
  [
    "Please provide the IDs of the 3 female clients with the largest loans.",
    "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000?",
    "SELECT COUNT(*) FROM trans WHERE account_id IN ( SELECT client_id FROM client WHERE gender = 'M' AND birth_date BETWEEN '1974-01-01' AND '1976-12-31' ) AND type = 'SIPO' AND amount > 4000\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in Beroun were opened after 1996?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Beroun' AND T1.`date` > '1996-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many female customers have a junior credit card?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN card AS T3 ON T2.`disp_id` = T3.`disp_id` WHERE T1.`gender` = 'F' AND T3.`type` = 'junior'\t----- bird -----\tfinancial"
  ],
  [
    "What proportion of customers who have accounts at the Prague branch are female?",
    "SELECT ( SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.gender = 'F' AND T3.A3 = 'Prague' ) AS female_clients / ( SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN account AS T2 ON T1.client_id = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A3 = 'Prague' ) * 100 AS proportion\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of male clients request for weekly statements to be issued?",
    "SELECT (COUNT(*) * 100) / t1.COUNT AS percentage FROM ( SELECT COUNT(*) AS COUNT FROM client INNER JOIN account ON client.client_id = account.client_id INNER JOIN card ON account.account_id = card.account_id INNER JOIN disp ON card.disp_id = disp.disp_id WHERE disp.type = 'OWNER' AND account.frequency = 'POPLATEK TYDNE' ) AS t1 INNER JOIN ( SELECT COUNT(*) AS COUNT FROM client INNER JOIN account ON client.client_id = account.client_id INNER JOIN card ON account.account_id = card.account_id INNER JOIN disp ON card.disp_id = disp.disp_id WHERE disp.type = 'OWNER' AND account.frequency = 'POPLATEK TYDNE' AND client.gender = 'M' ) AS t2 ON t1.COUNT = t2.COUNT;\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who choose statement of weekly issuance are User?",
    "SELECT COUNT(T2.client_id) FROM account AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN card AS T4 ON T3.disp_id = T4.disp_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T4.type = 'User'\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.",
    "SELECT T1.`account_id` FROM ( SELECT T1.`account_id` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`duration` > 24 ) AS T3 INNER JOIN ( SELECT T1.`account_id` FROM account AS T1 WHERE T1.`date` < '1997-01-01' ) AS T4 ON T3.`account_id` = T4.`account_id`\t----- bird -----\tfinancial"
  ],
  [
    "Name the account numbers of female clients who are oldest and have lowest average salary?",
    "SELECT T1.`account_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T2.`A11` = ( SELECT `A11` FROM district ORDER BY `A11` ASC LIMIT 1 ) ORDER BY T1.`birth_date` DESC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who were born in 1920 stay in east Bohemia?",
    "SELECT COUNT(T1.client_id) FROM client AS T1 WHERE T1.client_id IN ( SELECT client_id FROM client WHERE birth_date BETWEEN '1920-01-01' AND '1920-12-31' ) AND T1.client_id IN ( SELECT client_id FROM client WHERE district_id IN ( SELECT district_id FROM district WHERE A3 LIKE '%east Bohemia%' ) )\t----- bird -----\tfinancial"
  ],
  [
    "How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement.",
    "SELECT COUNT(DISTINCT T1.`account_id`) FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`frequency` = 'POPLATEK TYDNE' AND T2.`duration` = 24\t----- bird -----\tfinancial"
  ],
  [
    "What is the average amount of loan which are still on running contract with statement issuance after each transaction?",
    "SELECT AVG(T1.amount) FROM ( SELECT T1.amount FROM trans AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN account AS T3 ON T2.`account_id` = T3.`account_id` INNER JOIN card AS T4 ON T3.`account_id` = T4.`disp_id` INNER JOIN disp AS T5 ON T4.`disp_id` = T5.`disp_id` INNER JOIN client AS T6 ON T5.`client_id` = T6.`client_id` INNER JOIN district AS T7 ON T3.`district_id` = T7.`district_id` WHERE T2.`status` = 'C' AND T1.`type` = 'POPLATEK PO OBRATU' ) AS T3\t----- bird -----\tfinancial"
  ],
  [
    "List all ID and district for clients that can only have the right to issue permanent orders or apply for loans.",
    "SELECT T1.`client_id`, T2.`district_id` FROM client AS T1 INNER JOIN account AS T2 ON T1.`client_id` = T2.`client_id` WHERE T2.`type` = 'OWNER' UNION SELECT T1.`client_id`, T1.`district_id` FROM client AS T1 INNER JOIN card AS T2 ON T1.`client_id` = T2.`client_id` WHERE T2.`type` = 'OWNER';\t----- bird -----\tfinancial"
  ],
  [
    "Provide the IDs and age of the client with high level credit card, which is eligible for loans.",
    "SELECT T1.client_id, TIMESTAMPDIFF(YEAR, T1.birth_date, CURDATE()) AS age FROM client AS T1 INNER JOIN ( SELECT DISTINCT T1.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' ) AS T3 ON T1.client_id = T3.client_id;\t----- bird -----\tfinancial"
  ],
  [
    "What is the most common bond type?",
    "SELECT bond_type, COUNT(*) as count FROM bond GROUP BY bond_type ORDER BY count DESC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "In the non-carcinogenic molecules, how many contain chlorine atoms?",
    "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '-' AND T1.`element` = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the average number of oxygen atoms in single-bonded molecules.",
    "SELECT AVG(T4.Count) FROM ( SELECT COUNT(T3.element) AS Count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = '-' AND T3.element = 'o' GROUP BY T1.molecule_id ) AS T4\t----- bird -----\ttoxicology"
  ],
  [
    "On average how many carcinogenic molecules are single bonded?",
    "SELECT AVG(CASE WHEN T1.bond_type = '-' THEN 1 ELSE 0 END) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id AND T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule containing sodium atoms, how many are non-carcinogenic?",
    "SELECT COUNT(*) FROM molecule AS T1 WHERE T1.molecule_id = ( SELECT T2.molecule_id FROM atom AS T2 INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T2.element = 'na' ) AND T1.label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the triple-bonded molecules which are carcinogenic.",
    "SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '#' INTERSECT SELECT T2.`molecule_id` FROM molecule AS T2 WHERE T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carbon in double-bond molecules?",
    "SELECT (SELECT COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`bond_type` = '=' AND T1.`element` = 'c') / (SELECT COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`bond_type` = '=') * 100\t----- bird -----\ttoxicology"
  ],
  [
    "How many triple type bonds are there?",
    "SELECT COUNT(*) FROM bond WHERE `bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "In how many atoms is there no bromine?",
    "SELECT COUNT(*) - ( SELECT COUNT(*) FROM atom WHERE element = 'br' ) FROM atom\t----- bird -----\ttoxicology"
  ],
  [
    "Of the first 100 molecules in number order, how many are carcinogenic?",
    "SELECT COUNT(*) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify by their ID the molecules in which there is silicon.",
    "SELECT T1.`molecule_id`, T2.`label` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'si'\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in the TR004_8_9 bond atoms?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`atom_id` IN ( SELECT DISTINCT T1.`atom_id` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_id` = 'TR004_8_9' )\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in a double type bond?",
    "SELECT DISTINCT atom.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN atom ON atom.`atom_id` = T2.`atom_id` WHERE T1.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Which type of label is the most numerous in atoms with hydrogen?",
    "SELECT MAX(T1.`count`) AS max_count, T1.`label` FROM ( SELECT T1.`label`, COUNT(T1.`label`) AS count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'h' GROUP BY T1.`label` ) AS T1\t----- bird -----\ttoxicology"
  ],
  [
    "Tellurium is in what type of bond?",
    "SELECT T1.`bond_type` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN atom AS T3 ON T3.`atom_id` = T1.`bond_id` INNER JOIN connected AS T4 ON T4.`bond_id` = T1.`bond_id` INNER JOIN atom AS T5 ON T4.`atom_id` = T5.`atom_id` WHERE T5.`element` = 'te'\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms are connected in single type bonds?",
    "SELECT DISTINCT T1.`atom_id`, T2.`atom_id` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '-' AND T1.`atom_id` < T2.`atom_id`;\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate which atoms are connected in non-carcinogenic type molecules.",
    "SELECT T1.`atom_id`, atom.`atom_id` AS T2_atom_id FROM connected AS T1 INNER JOIN molecule AS T3 ON T1.`molecule_id` = T3.`molecule_id` INNER JOIN atom ON T1.`atom_id` = atom.`atom_id` WHERE T3.`label` = '-';\t----- bird -----\ttoxicology"
  ],
  [
    "Which element is the least numerous in non-carcinogenic molecules?",
    "SELECT T1.element FROM ( SELECT T1.element, COUNT(*) AS count FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ) AS T1 ORDER BY T1.count ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What type of bond is there between the atoms TR004_8 and TR004_20?",
    "SELECT T3.bond_type FROM bond AS T3 INNER JOIN connected AS T2 ON T3.bond_id = T2.bond_id INNER JOIN atom AS T1 ON T2.atom_id = T1.atom_id WHERE T1.atom_id = 'TR004_8' AND T2.atom_id2 IN ( SELECT atom_id FROM atom WHERE atom_id = 'TR004_20' )\t----- bird -----\ttoxicology"
  ],
  [
    "What type of label is not on molecules with atoms with tin?",
    "SELECT T2.`label` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` != 'Sn' GROUP BY T2.`label` HAVING COUNT(*) > 1\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms with iodine and sulfur type elements are there in single bond molecules?",
    "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T1.`element` IN ('i', 's') AND T3.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all connected atoms with a triple bond.",
    "SELECT T1.`atom_id` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all the atoms that are connected to the atoms of the TR181 molecule.",
    "SELECT DISTINCT T1.`atom_id` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T2.`bond_id` = T3.`molecule_id` WHERE T3.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR181' ) ORDER BY T1.`atom_id` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of carcinogenic-type molecules does not contain fluorine?",
    "SELECT (COUNT(T1.`molecule_id`) - COUNT(T2.`molecule_id`)) / COUNT(T1.`molecule_id`) * 100 FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`element` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carcinogenic molecules in triple type bonds?",
    "SELECT (SUM(CASE WHEN T4.bond_type = '#' THEN 1 ELSE 0 END) * 100) / COUNT(T3.bond_id) as percent FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T3.bond_id = T1.atom_id INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T4.bond_type = '#' AND T2.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
    "SELECT DISTINCT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR000' ORDER BY atom.element ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6?",
    "SELECT DISTINCT a1.atom_id FROM atom AS a1 INNER JOIN connected AS c1 ON a1.atom_id = c1.atom_id INNER JOIN bond AS b1 ON c1.bond_id = b1.bond_id WHERE b1.bond_id = ( SELECT bond_id FROM bond WHERE molecule_id = ( SELECT molecule_id FROM molecule WHERE label = 'TR001' ) AND b1.bond_type = 'TR001_2_6' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the difference between the number of molecules that are carcinogenic and those that are not?",
    "SELECT (SELECT COUNT(*) FROM molecule WHERE label = '+') - (SELECT COUNT(*) FROM molecule WHERE label = '-') AS difference\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atom IDs of the bond TR_000_2_5?",
    "SELECT DISTINCT a1.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR_000_2_5'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond IDs that have the same atom ID 2 of TR000_2?",
    "SELECT T2.bond_id FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T1.atom_id WHERE T3.atom_id = 'TR000_2'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top five molecules that have double bonds in alphabetical order.",
    "SELECT DISTINCT T1.`molecule_id`, T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '=' ORDER BY T1.`label` ASC LIMIT 5\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of double bonds in the molecule TR008?",
    "SELECT CAST( (SELECT COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008' AND bond_type = '=' ) AS REAL) / (SELECT COUNT(bond_id) FROM bond WHERE molecule_id = 'TR008' ) * 100 AS percent\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of molecules that are carcinogenic?",
    "SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) / COUNT(molecule_id) * 100 AS percent FROM molecule\t----- bird -----\ttoxicology"
  ],
  [
    "How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage.",
    "SELECT (SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) * 100) / COUNT(atom_id) FROM atom WHERE molecule_id = 'TR206'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of bond that molecule TR000 has when involved in any bonds?",
    "SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR000' AND b.bond_type IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the toxicology and label of molecule TR060?",
    "SELECT label FROM molecule WHERE molecule_id = ( SELECT molecule_id FROM molecule WHERE label = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic?",
    "SELECT T4.label, COUNT(T3.bond_id) AS total_bonds FROM molecule AS T4 JOIN atom AS T1 ON T4.molecule_id = T1.molecule_id JOIN connected AS T2 ON T2.atom_id = T1.atom_id JOIN bond AS T3 ON T3.bond_id = T2.bond_id WHERE T4.molecule_id = 'TR018' GROUP BY T4.label ORDER BY total_bonds DESC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
    "SELECT T1.`molecule_id`, T1.`label` FROM molecule AS T1 WHERE T1.`label` = '-' ORDER BY T1.`label` ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top two bonds that happened with the molecule TR006 in alphabetical order.",
    "SELECT b.bond_id, b.bond_type FROM bond AS b INNER JOIN connected AS c ON b.bond_id = c.bond_id INNER JOIN atom AS a ON c.atom_id = a.atom_id INNER JOIN molecule AS m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR006' ORDER BY b.bond_type ASC LIMIT 2\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds which involved atom 12 does molecule TR009 have?",
    "SELECT COUNT(*) FROM ( SELECT bond_id FROM connected WHERE atom_id IN ( SELECT atom_id FROM atom WHERE element = 'TR009_12' ) OR atom_id2 IN ( SELECT atom_id FROM atom WHERE element = 'TR009_12' ) ) AS T\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules are carcinogenic and have the bromine element?",
    "SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' AND a.element = 'br';\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type and the atoms of the bond ID of TR001_6_9?",
    "SELECT b.bond_type, a.atom_id FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE b.molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = 'TR001_6_9' ) AND b.bond_type IN ('=', '-', '#');\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.",
    "SELECT T1.`label` FROM molecule AS T1 WHERE T1.`molecule_id` = ( SELECT T2.`molecule_id` FROM atom AS T2 WHERE T2.`atom_id` = 'TR001_10' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a triple bond type?",
    "SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "How many connections does the atom 19 have?",
    "SELECT COUNT(T3.`bond_id`) FROM connected AS T3 INNER JOIN bond AS T4 ON T3.`bond_id` = T4.`bond_id` WHERE T3.`atom_id` = ( SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`atom_id` LIKE 'TR%_19' )\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of the toxicology of the molecule \"TR004\".",
    "SELECT DISTINCT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = ( SELECT molecule_id FROM molecule WHERE label = 'TR004' ) AND atom.element IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are not carcinogenic?",
    "SELECT COUNT(*) FROM molecule WHERE label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Among all the atoms from 21 to 25, list all the molecules that are carcinogenic.",
    "SELECT T2.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN ( SELECT `atom_id` FROM atom WHERE SUBSTRING(`atom_id`, 7, 2) BETWEEN 21 AND 25 ) AS T3 ON T1.`atom_id` = T3.`atom_id` WHERE T2.`label` = '+' ORDER BY T2.`molecule_id` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bonds that have phosphorus and nitrogen as their atom elements?",
    "SELECT T3.`bond_id` FROM connected AS T3 INNER JOIN atom AS T4 ON T3.`atom_id` = T4.`atom_id` INNER JOIN molecule AS T5 ON T4.`molecule_id` = T5.`molecule_id` WHERE T5.`molecule_id` IN ( SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` IN ('p', 'n') )\t----- bird -----\ttoxicology"
  ],
  [
    "Is the molecule with the most double bonds carcinogenic?",
    "SELECT T1.`label` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`molecule_id` = ( SELECT T1.`molecule_id` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '=' GROUP BY T1.`molecule_id` ORDER BY COUNT(*) DESC LIMIT 1 )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the average number of bonds the atoms with the element iodine have?",
    "SELECT CAST(T1 AS REAL) / T2 FROM ( SELECT COUNT(T3.bond_id) AS T1 FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T1.element = 'i' ) T1 INNER JOIN ( SELECT COUNT(T1.atom_id) AS T2 FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'i' ) T2\t----- bird -----\ttoxicology"
  ],
  [
    "List the bond type and the bond ID of the atom 45.",
    "SELECT b.bond_type FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id INNER JOIN connected c ON a.atom_id = c.atom_id INNER JOIN bond b ON c.bond_id = b.bond_id WHERE a.atom_id = 45;\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of atoms that can not bond with any other atoms.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`atom_id2` IS NULL\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms of the triple bond with the molecule \"TR447\"?",
    "SELECT DISTINCT a1.atom_id FROM connected AS c JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN bond AS b ON c.bond_id = b.bond_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE b.bond_type = '#' AND m.label = 'TR447';\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the atoms of TR144_8_19?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR144_8_19' )\t----- bird -----\ttoxicology"
  ],
  [
    "Of all the carcinogenic molecules, which one has the most double bonds?",
    "SELECT T1.molecule_id FROM ( SELECT T1.molecule_id, COUNT(T2.bond_id) AS double_bonds FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id INNER JOIN atom AS T4 ON T3.atom_id2 = T4.atom_id WHERE T1.label = '+' AND T2.bond_type = '=' GROUP BY T1.molecule_id ORDER BY double_bonds DESC LIMIT 1 ) AS subquery;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the least common element of all carcinogenic molecules?",
    "WITH carcinogenic_molecules AS ( SELECT DISTINCT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' ), rare_elements AS ( SELECT element FROM carcinogenic_molecules GROUP BY element HAVING COUNT(*) = 1 ) SELECT MIN(element) FROM rare_elements;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that can bond with the atom that has the element lead?",
    "SELECT DISTINCT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id2 = T2.atom_id WHERE T1.bond_id IN ( SELECT bond_id FROM connected WHERE atom_id = ( SELECT atom_id FROM atom WHERE element = 'pb' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "List the elements of all the triple bonds.",
    "SELECT T1.`atom_id`, T2.`element` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN bond AS T3 ON T1.`bond_id` = T3.`bond_id` INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`label` = '#' AND T3.`bond_type` = '#';\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of bonds have the most common combination of atoms' elements?",
    "SELECT (COUNT(*) * 100) / COUNT(bond_id) FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = ( SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) DESC LIMIT 1 )\t----- bird -----\ttoxicology"
  ],
  [
    "What proportion of single bonds are carcinogenic?",
    "SELECT SUM(T2.bond_id) / COUNT(T2.bond_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms consisting of the element carbon and hydrogen.",
    "SELECT COUNT(T1.`atom_id`) FROM atom AS T1 WHERE T1.`element` IN ('c', 'h')\t----- bird -----\ttoxicology"
  ],
  [
    "List down atom id2 for atoms with element sulfur.",
    "SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T1.`molecule_id` = T3.`molecule_id` WHERE T1.`element` = 's'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type for atoms with element Tin?",
    "SELECT T3.`bond_type` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T1.`molecule_id` = T3.`molecule_id` INNER JOIN connected AS T4 ON T4.`bond_id` = T3.`bond_id` AND T4.`atom_id` = T1.`atom_id` WHERE T1.`element` = 'sn';\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are there for single bond molecules?",
    "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine.",
    "SELECT COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`bond_type` = '#' AND T2.`label` = '+' OR T2.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Write down bond id for molecules that are carcinogenic.",
    "SELECT T2.`bond_id` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the single bond molecule id, which molecules are not carcinogenic?",
    "SELECT T1.`molecule_id` FROM molecule AS T1 WHERE T1.`molecule_id` IN ( SELECT T2.`molecule_id` FROM molecule AS T2 INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`bond_type` = '-' ) AND T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the composition of element chlorine in percentage among the single bond molecules?",
    "SELECT SUM(T1.`element` = 'cl') * 100 / COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the labels for TR000, TR001 and TR002?",
    "SELECT `label` FROM molecule WHERE `molecule_id` IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology"
  ],
  [
    "List down the molecule id for non carcinogenic molecules.",
    "SELECT T1.`molecule_id` FROM molecule AS T1 WHERE T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
    "SELECT COUNT(*) FROM molecule WHERE `molecule_id` BETWEEN 'TR000' AND 'TR030' AND label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "List down the bond type for molecules from molecule id TR000 to TR050.",
    "SELECT T2.`bond_type` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T1.`molecule_id` BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements for bond id TR001_10_11?",
    "SELECT T1.`element` FROM atom AS T1 WHERE T1.`molecule_id` = ( SELECT T2.`molecule_id` FROM bond AS T2 JOIN connected AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`atom_id2` = ( SELECT `atom_id` FROM atom WHERE `molecule_id` = ( SELECT `molecule_id` FROM bond WHERE `bond_id` = 'TR001_10_11' ) ) )\t----- bird -----\ttoxicology"
  ],
  [
    "How many bond id have element iodine?",
    "SELECT COUNT(T3.bond_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T3.molecule_id = T2.molecule_id INNER JOIN connected AS T4 ON T4.bond_id = T3.bond_id AND T4.atom_id = T1.atom_id WHERE T1.element = 'i'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?",
    "SELECT T2.`label`, COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'ca' GROUP BY T2.`label`\t----- bird -----\ttoxicology"
  ],
  [
    "Does bond id TR001_1_8 have both element of chlorine and carbon?",
    "SELECT CASE WHEN atom.element = 'cl' AND atom.element = 'c' THEN 'Yes' ELSE 'No' END AS Result FROM atom WHERE atom.molecule_id = ( SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_8' )\t----- bird -----\ttoxicology"
  ],
  [
    "List down two molecule id of triple bond non carcinogenic molecules with element carbon.",
    "SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'c' AND T2.`label` = '-' UNION SELECT T1.`molecule_id` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '#' AND T2.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of element chlorine in carcinogenic molecules?",
    "SELECT ( SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` = 'cl' AND T1.`label` = '+' ) / ( SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 WHERE T1.`label` = '+' ) * 100 AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "List the toxicology elements associated with molecule TR001.",
    "SELECT DISTINCT atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001'\t----- bird -----\ttoxicology"
  ],
  [
    "Give me the molecule ID of the double bond type.",
    "SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Write down the atom IDs of the first and second atoms of triple bond type molecules.",
    "SELECT T1.atom_id AS atom_id1, T2.atom_id AS atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id INNER JOIN molecule AS T4 ON T1.atom_id2 = T4.molecule_id WHERE T2.bond_type = '#' ORDER BY T1.atom_id LIMIT 2\t----- bird -----\ttoxicology"
  ],
  [
    "What are the toxicology elements associated with bond ID TR005_16_26?",
    "SELECT T1.element FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id JOIN connected AS T4 ON T3.bond_id = T4.bond_id WHERE T4.bond_id = 'TR005_16_26' AND T1.element IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the single bond type molecules are non-carcinogenic?",
    "SELECT COUNT(*) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '-' AND T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the label for bond ID TR001_10_11?",
    "SELECT T2.molecule_id FROM bond AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11';\t----- bird -----\ttoxicology"
  ],
  [
    "Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not.",
    "SELECT T1.`bond_id`, T2.`label` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+' AND T1.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
    "SELECT T2.`element` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND CAST(SUBSTR(T2.`atom_id`, 7, 1) AS INTEGER) = 4\t----- bird -----\ttoxicology"
  ],
  [
    "What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label.",
    "SELECT label FROM molecule WHERE molecule_id = 'TR006'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the chemical compound that contains Calcium is carcinogenic.",
    "SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id` INNER JOIN bond AS T4 ON T3.`bond_id` = T4.`bond_id` WHERE T1.`element` = 'ca' AND T2.`label` = '+' GROUP BY T1.`molecule_id` HAVING COUNT(T1.`molecule_id`) > 0;\t----- bird -----\ttoxicology"
  ],
  [
    "Determine the bond type that is formed in the chemical compound containing element Tellurium.",
    "SELECT T1.bond_type FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T3.atom_id = T1.bond_id INNER JOIN connected AS T4 ON T4.bond_id = T1.bond_id INNER JOIN atom AS T5 ON T5.atom_id = T4.atom_id2 WHERE T3.element = 'te'\t----- bird -----\ttoxicology"
  ],
  [
    "Name chemical elements that form a bond TR001_10_11.",
    "SELECT T1.`element` FROM atom AS T1 WHERE T1.`atom_id` IN ( SELECT T2.`atom_id` FROM connected AS T2 WHERE T2.`bond_id` = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.",
    "SELECT (COUNT(DISTINCT m1.molecule_id) * 100) / COUNT(DISTINCT m2.molecule_id) AS percentage FROM molecule m1 LEFT JOIN molecule m2 ON m1.molecule_id = m2.molecule_id LEFT JOIN connected c ON m1.molecule_id = c.molecule_id LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#';\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.",
    "SELECT CAST(SUM(T2.bond_type = '=') AS REAL) / COUNT(T2.bond_id) * 100 AS percent FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR047'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the molecule that contains atom TR001_1 is carcinogenic.",
    "SELECT T2.`label` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id` WHERE T1.`element` = 'TR001_1' AND T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR151 carcinogenic?",
    "SELECT T1.`label` FROM molecule AS T1 WHERE T1.`molecule_id` = 'TR151'\t----- bird -----\ttoxicology"
  ],
  [
    "Which toxic element can be found in the molecule TR151?",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = 'TR151' AND T1.`element` IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology"
  ],
  [
    "How many chemical compounds in the database are identified as carcinogenic.",
    "SELECT COUNT(*) FROM molecule WHERE `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.",
    "SELECT T3.`atom_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id` WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM molecule AS T1 WHERE CAST(SUBSTR(T1.`molecule_id`, 3, 3) AS UNSIGNED) > 10 AND CAST(SUBSTR(T1.`molecule_id`, 3, 3) AS UNSIGNED) < 50 ) AND T1.`element` = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule labeled with carcinogenic compounds?",
    "SELECT COUNT(*) FROM atom AS T1 JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond ids are double-bond with carcinogenic compound?",
    "SELECT T3.`bond_id` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T4 ON T2.`atom_id` = T4.`atom_id` INNER JOIN bond AS T3 ON T4.`bond_id` = T3.`bond_id` WHERE T1.`label` = '+' AND T3.`bond_type` = '=';\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?",
    "SELECT COUNT(*) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` = ( SELECT T3.`molecule_id` FROM molecule AS T3 INNER JOIN atom AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`element` = 'h' AND T3.`label` = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.",
    "SELECT molecule_id FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'TR00_1' JOIN molecule ON bond.molecule_id = molecule.molecule_id ORDER BY molecule_id ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "Among the atoms that contain element carbon, which one does not contain compound carcinogenic?",
    "SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'c' LEFT OUTER JOIN ( SELECT DISTINCT T1.`atom_id` FROM connected AS T1 INNER JOIN molecule AS T2 ON T1.`bond_id` = T2.`molecule_id` WHERE T2.`label` = '+' ) AS T4 ON T1.`atom_id` = T4.`atom_id` WHERE T4.`atom_id` IS NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
    "SELECT (SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h' AND T1.label = '+') / (SELECT COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'h') * 100.0\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR124 carcinogenic?",
    "SELECT `label` FROM molecule WHERE `molecule_id` = 'TR124'\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms comprise TR186?",
    "SELECT DISTINCT atom.atom_id, atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = ( SELECT molecule_id FROM molecule WHERE label = 'TR186' ) AND atom.molecule_id = ( SELECT molecule_id FROM molecule WHERE label = 'TR186' );\t----- bird -----\ttoxicology"
  ],
  [
    "What is the bond type of TR007_4_19?",
    "SELECT T3.`bond_type` FROM bond AS T3 INNER JOIN connected AS T4 ON T3.`bond_id` = T4.`bond_id` INNER JOIN atom AS T5 ON T4.`atom_id` = T5.`atom_id` INNER JOIN molecule AS T6 ON T5.`molecule_id` = T6.`molecule_id` WHERE T6.`label` = 'TR007_4_19' GROUP BY T3.`bond_type` HAVING COUNT(T3.`bond_type`) = 1;\t----- bird -----\ttoxicology"
  ],
  [
    "Name the elements that comprise the atoms of bond TR001_2_4.",
    "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = ( SELECT T1.molecule_id FROM bond AS T1 WHERE T1.bond_id = 'TR001_2_4' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many double bonds does TR006 have and is it carcinogenic?",
    "SELECT T2.label FROM molecule AS T2 WHERE T2.molecule_id = 'TR006'\t----- bird -----\ttoxicology"
  ],
  [
    "List all carcinogenic molecules and their elements.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN ( SELECT T3.`molecule_id` FROM molecule AS T3 INNER JOIN atom AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`label` = '+' ) AS T5 ON T1.`molecule_id` = T5.`molecule_id`;\t----- bird -----\ttoxicology"
  ],
  [
    "Name all bonds with single bond types and what atoms are connected to the molecules.",
    "SELECT T1.`atom_id`, T1.`element`, T2.`atom_id2`, T3.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN atom AS T3 ON T3.`atom_id` = T2.`atom_id2` INNER JOIN molecule AS T4 ON T1.`molecule_id` = T4.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecules have triple bonds and list all the elements they contain.",
    "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id INNER JOIN connected AS T4 ON T3.bond_id = T4.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Name the atoms' elements that form bond TR000_2_3.",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` INNER JOIN connected AS T4 ON T4.`bond_id` = T3.`bond_id` WHERE T4.`atom_id` = T1.`atom_id` AND T3.`bond_type` = 'TR000_2_3' GROUP BY T1.`element` HAVING COUNT(T1.`element`) > 1;\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds are created by bonding atoms with chlorine element?",
    "SELECT COUNT(*) FROM connected INNER JOIN atom AS T1 ON connected.`atom_id` = T1.`atom_id` INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T1.`element` = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?",
    "SELECT COUNT(DISTINCT T1.`bond_type`) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = 'TR346'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '+' AND T2.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules without sulphur element is not having double bond?",
    "SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 LEFT JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` != 's' AND T1.`molecule_id` NOT IN ( SELECT T3.`molecule_id` FROM molecule AS T3 LEFT JOIN bond AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`bond_type` != '=' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the carcinogenic label for bond TR001_2_4?",
    "SELECT T2.`molecule_id` FROM bond AS T2 WHERE T2.`bond_id` = 'TR001_2_4'\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to molecule id TR005?",
    "SELECT COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = 'TR005'\t----- bird -----\ttoxicology"
  ],
  [
    "How many single bonds are there in the list?",
    "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"cl\" element, which of them are carcinogenic?",
    "SELECT T1.`molecule_id` FROM ( SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'cl' ) AS T3 INNER JOIN molecule AS T1 ON T3.`molecule_id` = T1.`molecule_id` WHERE T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"c\" element, which of them are not carcinogenic?",
    "SELECT T1.`molecule_id` FROM ( SELECT T1.`molecule_id` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` = 'c' ) AS T3 INNER JOIN molecule AS T1 ON T3.`molecule_id` = T1.`molecule_id` WHERE T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules which contain the Chlorine element.",
    "SELECT SUM(CASE WHEN molecule.label = '+' AND atom.element = 'cl' THEN 1 ELSE 0 END) / COUNT(molecule.molecule_id) AS percentage FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule id of bond id TR001_1_7?",
    "SELECT molecule_id FROM bond WHERE bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are contained in bond_id TR001_3_4?",
    "SELECT COUNT(DISTINCT T1.`element`) FROM atom AS T1 WHERE T1.`atom_id` IN ( SELECT T2.`atom_id` FROM atom AS T2 WHERE T2.`molecule_id` = ( SELECT T3.`molecule_id` FROM bond AS T3 WHERE T3.`bond_id` = 'TR001_3_4' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2?",
    "SELECT T2.bond_type FROM bond AS T2 WHERE T2.bond_id = ( SELECT T1.bond_id FROM connected AS T1 WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?",
    "SELECT T1.`label` FROM molecule AS T1 WHERE T1.`molecule_id` = ( SELECT T2.`molecule_id` FROM atom AS T2 WHERE T2.`atom_id` = 'TR000_2' ) AND T1.`molecule_id` = ( SELECT T3.`molecule_id` FROM atom AS T3 WHERE T3.`atom_id` = 'TR000_4' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element of toxicology for the atom with the ID of TR000_1?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`atom_id` = 'TR000_1'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR000 is carcinogenic or not?",
    "SELECT label FROM molecule WHERE molecule_id = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the percentage of atoms with single bond.",
    "SELECT SUM(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) / COUNT(bond_id) * 100 AS percentage FROM bond\t----- bird -----\ttoxicology"
  ],
  [
    "How many carcinogenic molecules that consisted of Nitrogen?",
    "SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` = 'n' AND T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule consisted of Sulphur atom with double bond?",
    "SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T1.`molecule_id` = T3.`molecule_id` INNER JOIN connected AS T4 ON T4.`bond_id` = T3.`bond_id` AND T4.`atom_id` = T1.`atom_id` WHERE T1.`element` = 's' AND T3.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Which non-carcinogenic molecules consisted more than 5 atoms?",
    "SELECT T1.`molecule_id` FROM molecule AS T1 WHERE T1.`label` = '-' INTERSECT SELECT T2.`molecule_id` FROM atom AS T2 GROUP BY T2.`molecule_id` HAVING COUNT(T2.`molecule_id`) > 5\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements with double bond, consisted in molecule TR024.",
    "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T4.label = 'TR024' AND T3.bond_type = '=' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca') AND T1.element = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "Which carcinogenic molecule have the highest number of atoms consisted in it?",
    "SELECT CASE WHEN COUNT(*) > 0 THEN T1.molecule_id ELSE 'No data' END AS molecule_id FROM molecule AS T1 INNER JOIN ( SELECT atom.molecule_id, COUNT(*) AS atom_count FROM atom GROUP BY atom.molecule_id ORDER BY atom_count DESC LIMIT 1 ) AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
    "SELECT SUM(CASE WHEN T2.element = 'h' AND T3.bond_type = '#' AND T1.label = '+' THEN 1 ELSE 0 END) / COUNT(T1.molecule_id) * 100 AS percentage FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.atom_id = T3.atom_id\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are carcinogenic?",
    "SELECT COUNT(*) FROM molecule WHERE `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules between TR004 to TR010, how many of them has single bonds?",
    "SELECT COUNT(*) AS single_bonds FROM bond WHERE molecule_id BETWEEN 'TR004' AND 'TR010' AND bond_type = '-';\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule TR008, how many carbons are present?",
    "SELECT COUNT(*) FROM ( SELECT T2.element FROM atom AS T2 WHERE T2.molecule_id = ( SELECT T1.molecule_id FROM molecule AS T1 WHERE T1.label = '+' AND T1.molecule_id = 'TR008' ) ) AS T3 WHERE T3.element = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '-' AND T1.`atom_id` = 'TR004_7'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the total number of molecules with double bonded oxygen?",
    "SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T2.`bond_id` = T3.`bond_id` INNER JOIN atom AS T4 ON T3.`atom_id` = T4.`atom_id` WHERE T4.`element` = 'o' AND T2.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "in molecules with triple bonds, how many of them are not carcinogenic?",
    "SELECT COUNT(T1.molecule_id) - COUNT(T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label != '-'\t----- bird -----\ttoxicology"
  ],
  [
    "List the element and bond type included in the molecule with molecule ID of TR016.",
    "SELECT atom.element, T1.bond_type FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id INNER JOIN bond AS T1 ON molecule.molecule_id = T1.molecule_id INNER JOIN connected ON T1.bond_id = connected.bond_id WHERE molecule.label = 'TR016' GROUP BY atom.element, T1.bond_type;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the atom ID of double bonded carbon in TR012 molecule?",
    "SELECT DISTINCT a.atom_id FROM atom a JOIN bond b ON a.atom_id = ( SELECT c.atom_id2 FROM connected c WHERE c.bond_id = b.bond_id ) JOIN molecule m ON m.molecule_id = b.molecule_id WHERE a.element = 'c' AND b.bond_type = '=' AND m.label = 'TR012';\t----- bird -----\ttoxicology"
  ],
  [
    "List the atom ID of the carcinogenic molecule that contains oxygen?",
    "SELECT T2.`atom_id` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T3.`molecule_id` = T1.`molecule_id` INNER JOIN connected AS T4 ON T4.`bond_id` = T3.`bond_id` INNER JOIN atom AS T5 ON T4.`atom_id2` = T5.`atom_id` WHERE T1.`label` = '+' AND T5.`element` = 'o';\t----- bird -----\ttoxicology"
  ],
  [
    "Which are the cards that have incredibly powerful foils.",
    "SELECT DISTINCT c.id, c.name, c.manaCost, c.power, c.toughness FROM cards c JOIN cards cf ON cf.cardKingdomFoilId = c.cardKingdomId AND cf.cardKingdomId IS NOT NULL WHERE cf.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What are the borderless cards available without powerful foils?",
    "SELECT * FROM cards WHERE borderColor = 'borderless' AND (cardKingdomFoilId IS NULL OR (cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NULL) OR cardKingdomId IS NULL)\t----- bird -----\tcard_games"
  ],
  [
    "List the card names with value that cost more converted mana for the face.",
    "SELECT `faceName` FROM cards ORDER BY `faceConvertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Name all cards with 2015 frame style ranking below 100 on EDHRec.",
    "SELECT * FROM cards WHERE frameVersion = 2015 AND edhrecRank < 100\t----- bird -----\tcard_games"
  ],
  [
    "List all the mythic rarity print cards banned in gladiator format.",
    "SELECT c.* FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.rarity = 'mythic' AND l.status = 'Banned' AND l.format = 'gladiator';\t----- bird -----\tcard_games"
  ],
  [
    "For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format.",
    "SELECT T1.id, T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.type = 'Artifact' AND T1.side IS NULL AND T2.format = 'vintage'\t----- bird -----\tcard_games"
  ],
  [
    "List all the card id and artist with unknown power which are legal for commander play format.",
    "SELECT T1.id, T1.artist FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal' AND T1.power = '*' OR T1.power IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.",
    "SELECT cards.id, cards.artist, cards.hasContentWarning, rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniel' AND cards.hasContentWarning = 1\t----- bird -----\tcard_games"
  ],
  [
    "Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.",
    "SELECT rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s'\t----- bird -----\tcard_games"
  ],
  [
    "Name the card and artist with the most ruling information. Also state if the card is a promotional printing.",
    "SELECT T1.`isPromo` FROM cards AS T1 JOIN ( SELECT `uuid`, COUNT(*) AS count FROM rulings GROUP BY `uuid` ORDER BY count DESC LIMIT 1 ) AS T2 ON T1.`uuid` = T2.`uuid`\t----- bird -----\tcard_games"
  ],
  [
    "State the alternative languages available for card named Annul numbered 29.",
    "SELECT DISTINCT language FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE name = 'Annul' AND number = '29' )\t----- bird -----\tcard_games"
  ],
  [
    "Name all the cards which have alternative language in Japanese.",
    "SELECT DISTINCT cards.id, cards.name, foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of the cards availabe in Chinese Simplified.",
    "SELECT (SUM(id) / COUNT(id)) * 100 FROM foreign_data WHERE language = 'Chinese Simplified'\t----- bird -----\tcard_games"
  ],
  [
    "List all the sets available in Italian translation. State the total number of cards per set.",
    "SELECT T1.`name`, COUNT(T3.`id`) AS total_cards FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` INNER JOIN cards AS T3 ON T3.`setCode` = T1.`code` WHERE T2.`language` = 'Italian' GROUP BY T1.`name`\t----- bird -----\tcard_games"
  ],
  [
    "How many types of cards does the artist Aaron Boyd illustrated about card art?",
    "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 WHERE T1.artist = 'Aaron Boyd'\t----- bird -----\tcard_games"
  ],
  [
    "What is the keyword found on card 'Angel of Mercy'?",
    "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have infinite power?",
    "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games"
  ],
  [
    "What type of promotion is of card 'Duress'?",
    "SELECT promoTypes FROM cards WHERE name = 'Duress' AND isPromo IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What is the border color of card \"Ancestor's Chosen\"?",
    "SELECT `borderColor` FROM cards WHERE `name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of the card \"Ancestor's Chosen\" as originally printed?",
    "SELECT `type` FROM cards WHERE `name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
    "SELECT T2.`language` FROM set_translations AS T2 INNER JOIN sets AS T1 ON T2.`setCode` = T1.`code` WHERE T1.`code` = ( SELECT T1.`code` FROM cards AS T1 WHERE T1.`name` = 'Angel of Mercy' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted have text boxes?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'restricted' AND T1.isTextless = 0\t----- bird -----\tcard_games"
  ],
  [
    "What is the description about the ruling of card \"Condemn\"?",
    "SELECT rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.text LIKE '%Condemn%'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted are found in a starter deck?",
    "SELECT COUNT(*) FROM ( SELECT COUNT(*) AS count FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'restricted' AND cards.isStarter = 1 ) AS restricted_in_starter\t----- bird -----\tcard_games"
  ],
  [
    "What is the status of card \"Cloudchaser Eagle\"?",
    "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.name = 'Cloudchaser Eagle'\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of card \"Benalish Knight\"?",
    "SELECT type FROM cards WHERE name = 'Benalish Knight'\t----- bird -----\tcard_games"
  ],
  [
    "What is the rule of playing card \"Benalish Knight\"?",
    "SELECT format FROM legalities WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Benalish Knight' )\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the names of the artists who illustrated the card art in Phyrexian.",
    "SELECT DISTINCT cards.artist FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Phyrexian'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of borderless cards?",
    "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM cards) FROM cards WHERE borderColor = 'borderless'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards that illusrtated in German have been reprinted?",
    "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isReprint = 1;\t----- bird -----\tcard_games"
  ],
  [
    "How many borderless cards are illustrated in Russian?",
    "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'borderless' AND foreign_data.language = 'Russian';\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of cards whose language is French among the Story Spotlight cards?",
    "SELECT ( SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 AND language = 'French' ) AS French_Story_Spotlight_Count / ( SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1 ) AS Story_Spotlight_Count * 100 AS Percentage\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there with toughness of 99?",
    "SELECT COUNT(*) FROM cards WHERE toughness = 99\t----- bird -----\tcard_games"
  ],
  [
    "Name the cards that were illustrated by Aaron Boyd.",
    "SELECT * FROM cards WHERE artist = 'Aaron Boyd' AND artist IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "How many black border cards are only available on mtgo?",
    "SELECT COUNT(*) FROM cards WHERE cards.borderColor = 'black' AND cards.availability = 'mtgo'\t----- bird -----\tcard_games"
  ],
  [
    "List down all the card IDs with converted mana cost of 0.",
    "SELECT `id` FROM cards WHERE `convertedManaCost` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What are the card layout of cards with keyword of flying?",
    "SELECT DISTINCT cards.layout FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.keywords IS NOT NULL AND foreign_data.keywords LIKE ?\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
    "SELECT COUNT(*) FROM cards WHERE `type` = 'Summon - Angel' AND `subtypes` NOT LIKE '%Angel%'\t----- bird -----\tcard_games"
  ],
  [
    "What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.",
    "SELECT id FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards belong to duel deck a? List the ID.",
    "SELECT `id` FROM cards WHERE `duelDeck` = 'a'\t----- bird -----\tcard_games"
  ],
  [
    "List the edhrecRank for cards with frame version 2015.",
    "SELECT `edhrecRank` FROM cards WHERE `frameVersion` = '2015'\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of artists for cards in Chinese Simplified.",
    "SELECT DISTINCT T1.`artist` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'Chinese Simplified'\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards that only available in paper and Japanese language?",
    "SELECT c.id, c.artist, c.asciiName, c.availability, c.borderColor, c.cardKingdomFoilId FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.availability = 'paper' AND fd.language = 'Japanese' AND fd.language IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "How many of the banned cards are white border?",
    "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.status = 'Banned' AND cards.borderColor = 'white'\t----- bird -----\tcard_games"
  ],
  [
    "List down the uuid for legacy cards and the foreign language of these cards.",
    "SELECT foreign_data.language FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE legalities.format = 'legacy'\t----- bird -----\tcard_games"
  ],
  [
    "Write down the ruling of Beacon of Immortality.",
    "SELECT text FROM rulings WHERE uuid = ( SELECT uuid FROM cards WHERE name = 'Beacon of Immortality' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are having future frame version and what are the legality status of these cards?",
    "SELECT legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE frameVersion = 'future'\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards for set OGW? State the colour for these cards.",
    "SELECT cards.color, cards.colors FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE set_translations.language = 'English' AND cards.setCode = 'OGW'\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
    "SELECT DISTINCT T2.`language` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`convertedManaCost` = 5 AND T2.`language` IS NOT NULL AND T1.`setCode` = '10E'\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of cards with original types of Creature - Elf and the date of rulings for these cards.",
    "SELECT T2.`date` FROM rulings AS T2 INNER JOIN cards AS T1 ON T2.`uuid` = T1.`uuid` WHERE T1.`type` = 'Creature' AND T1.`subtypes` LIKE '%Elf%'\t----- bird -----\tcard_games"
  ],
  [
    "What are the colors of cards from ID 1-20? What are the format of these cards?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Among the Artifact cards, which are black color and comes with foreign languague translation?",
    "SELECT cards.* FROM cards JOIN foreign_data ON foreign_data.uuid = cards.uuid WHERE cards.type = 'Artifact' AND cards.colors = 'B' AND foreign_data.language <> 'English' AND foreign_data.language IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date.",
    "SELECT T1.`name`, T3.`date` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN rulings AS T3 ON T1.`uuid` = T3.`uuid` WHERE T2.`status` = 'Legal' AND T1.`rarity` = 'uncommon' ORDER BY T3.`date` ASC\t----- bird -----\tcard_games"
  ],
  [
    "On how many cards designed by John Avon is its foil non-powerful?",
    "SELECT COUNT(*) - ( SELECT COUNT(*) FROM cards WHERE artist = 'John Avon' AND (cardKingdomFoilId IS NULL OR cardKingdomId IS NULL) ) FROM cards WHERE artist = 'John Avon'\t----- bird -----\tcard_games"
  ],
  [
    "How many white bordered cards are powerful?",
    "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL)\t----- bird -----\tcard_games"
  ],
  [
    "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'UDON' AND availability = 'mtgo' AND hand = -1\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with a 1993 frame version and available on paper have a sensitive content warning?",
    "SELECT COUNT(*) FROM ( SELECT * FROM cards WHERE `frameVersion` = '1993' AND `availability` = 'paper' ) AS T WHERE T.`hasContentWarning` = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
    "SELECT T1.`manaCost` FROM ( SELECT `manaCost` FROM cards WHERE `layout` = 'normal' UNION ALL SELECT `manaCost` FROM cards WHERE `frameVersion` = '2003' UNION ALL SELECT `manaCost` FROM cards WHERE `borderColor` = 'black' UNION ALL SELECT `manaCost` FROM cards WHERE `availability` LIKE '%paper%' AND `availability` LIKE '%mtgo%' ) AS T1\t----- bird -----\tcard_games"
  ],
  [
    "How much unconverted mana do all the cards created by Rob Alexander cost in total?",
    "SELECT SUM(T1.manaCost) FROM cards AS T1 WHERE T1.artist = 'Rob Alexander'\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards available in arena.",
    "SELECT DISTINCT T1.types FROM cards AS T1 WHERE T1.availability = 'arena';\t----- bird -----\tcard_games"
  ],
  [
    "Lists the set code of all cards translated into Spanish.",
    "SELECT DISTINCT T2.`setCode` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3?",
    "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary') FROM cards WHERE frameEffects = 'legendary' AND hand = '+3'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of Story Spotlight cards that also have a text box? List them by their ID.",
    "SELECT id FROM cards WHERE isStorySpotlight = 1 AND isTextless = 0 ORDER BY id\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of cards in Spanish. List them by name.",
    "SELECT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the name of all the languages into which the set whose number of cards is 309 is translated.",
    "SELECT DISTINCT `language` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `baseSetSize` = 309 )\t----- bird -----\tcard_games"
  ],
  [
    "How many Brazilian Portuguese translated sets are inside the Commander block?",
    "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.block = 'Commander' AND T1.language = 'Portuguese (Brazil)'\t----- bird -----\tcard_games"
  ],
  [
    "Lists by ID all Creature-type cards with legal status.",
    "SELECT cards.*, legalities.status FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.types = 'Creature' AND legalities.status = 'Legal' AND cards.uuid IS NOT NULL AND legalities.uuid IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards in German.",
    "SELECT DISTINCT T1.`type` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'German' AND (T1.`subtypes` IS NOT NULL OR T1.`supertypes` IS NOT NULL)\t----- bird -----\tcard_games"
  ],
  [
    "How many null power cards contain info about the triggered ability",
    "SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*'\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces.",
    "SELECT COUNT(*) FROM ( SELECT COUNT(*) AS count FROM cards WHERE `type` = 'Creature' AND `power` IS NOT NULL AND `toughness` IS NOT NULL LEFT JOIN rulings ON cards.uuid = rulings.uuid WHERE rulings.text = 'This is a triggered mana ability' AND `side` IS NULL ) AS subquery;\t----- bird -----\tcard_games"
  ],
  [
    "Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.",
    "SELECT id FROM cards WHERE artist = 'Erica Yang' AND availability = 'paper' LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?",
    "SELECT `artist` FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.text = 'Das perfekte Gegenmittel zu einer dichten Formation'\t----- bird -----\tcard_games"
  ],
  [
    "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
    "SELECT T2.name FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Matthew D. Wilson' AND T1.layout = 'normal' AND T1.borderColor = 'black' AND T1.type = 'Creature' AND T2.language = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with print rarity have ruling text printed on 10/01/2009?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.rarity = 'rare' AND T2.date = '2009-01-10'\t----- bird -----\tcard_games"
  ],
  [
    "What language is the set of 180 cards that belongs to the Ravnica block translated into?",
    "SELECT `language` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `baseSetSize` = 180 )\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards with format commander and legal status do not have a content warning?",
    "SELECT CAST(SUM(T1.hasContentWarning = 0) AS REAL) / COUNT(*) * 100 FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.format = 'commander' AND T2.status = 'Legal' AND T1.hasContentWarning = 0\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards without power are in French?",
    "SELECT ( SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' AND cards.uuid IN ( SELECT uuid FROM foreign_data WHERE foreign_data.name = 'French' ) ) AS French_cards_without_power, ( SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*' ) AS total_cards_without_power, (French_cards_without_power * 100) / total_cards_without_power AS percentage\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of Japanese translated sets are expansion sets?",
    "SELECT (SELECT COUNT(*) FROM set_translations WHERE language = 'Japanese') / (SELECT COUNT(*) FROM sets WHERE type = 'expansion') * 100\t----- bird -----\tcard_games"
  ],
  [
    "What kind of printing is on the card that Daren Bader created?",
    "SELECT `availability` FROM cards WHERE `artist` = 'Daren Bader'\t----- bird -----\tcard_games"
  ],
  [
    "How many color cards with no borders have been ranked higher than 12000 on EDHRec?",
    "SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' AND edhrecRank > 12000\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are oversized, reprinted, and printed for promotions?",
    "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games"
  ],
  [
    "Please list top three unknown power cards that have promotional types for arena league in alphabetical order.",
    "SELECT name FROM cards WHERE (power IS NULL OR power = '*') AND promoTypes = 'arenaleague' ORDER BY name ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card with the multiverse number 149934?",
    "SELECT fd.language FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.multiverseid = 149934;\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order.",
    "SELECT cardKingdomFoilId FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL ORDER BY cardKingdomFoilId ASC LIMIT 3;\t----- bird -----\tcard_games"
  ],
  [
    "What proportion of cards do not have a text box with a normal layout?",
    "SELECT CAST(COUNT(*) AS REAL) / COUNT(*) * 100 FROM cards WHERE isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games"
  ],
  [
    "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?",
    "SELECT T1.`number` FROM cards AS T1 LEFT JOIN cards AS T2 ON T1.`number` = T2.`number` WHERE T1.`subtypes` LIKE '%Angel%' AND T1.`subtypes` LIKE '%Wizard%' AND T2.`faceName` IS NULL GROUP BY T1.`number` HAVING COUNT(T2.`number`) = 1\t----- bird -----\tcard_games"
  ],
  [
    "Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.",
    "SELECT DISTINCT s.code, st.translation FROM sets AS s LEFT JOIN set_translations AS st ON s.code = st.setCode LEFT JOIN cards AS c ON st.uuid = c.uuid WHERE c.mtgoCode IS NULL OR c.mtgoCode = '' ORDER BY st.translation ASC LIMIT 3;\t----- bird -----\tcard_games"
  ],
  [
    "What languages are available in the set known as Archenemy on the magic card market and having the code ARC?",
    "SELECT DISTINCT language FROM set_translations WHERE setCode = 'ARC'\t----- bird -----\tcard_games"
  ],
  [
    "What is the name of set number 5 and its translation?",
    "SELECT s.name AS set_name, st.translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.id = 5;\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and expansion type of set number 206?",
    "SELECT `type` FROM sets WHERE `id` = 206\t----- bird -----\tcard_games"
  ],
  [
    "Please list top two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block in alphabetical order.",
    "SELECT DISTINCT s.code, s.name FROM sets AS s JOIN set_translations AS st ON s.code = st.setCode WHERE st.language = 'Italian' AND s.block = 'Shadowmoor' ORDER BY s.name ASC LIMIT 2\t----- bird -----\tcard_games"
  ],
  [
    "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
    "SELECT sets.id FROM sets JOIN set_translations ON sets.code = set_translations.setCode JOIN cards ON cards.code = sets.code JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND foreign_data.language = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Which Russian set of cards contains the most cards overall?",
    "SELECT T1.`setCode` FROM ( SELECT `setCode` FROM sets WHERE `language` = 'Russian' ) AS T1 INNER JOIN ( SELECT `setCode`, `baseSetSize` FROM sets WHERE `language` = 'Russian' ) AS T2 ON T1.`setCode` = T2.`setCode` WHERE T2.`baseSetSize` = ( SELECT MAX(`baseSetSize`) FROM sets WHERE `language` = 'Russian' );\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games?",
    "SELECT CAST(SUM(T1.isOnlineOnly) AS REAL) / COUNT(T1.isOnlineOnly) * 100 FROM cards AS T1 JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'Chinese Simplified'\t----- bird -----\tcard_games"
  ],
  [
    "How many sets are available just in Japanese and not in Magic: The Gathering Online?",
    "SELECT COUNT(*) - ( SELECT COUNT(*) FROM sets WHERE sets.mtgoCode IS NULL OR LENGTH(sets.mtgoCode) = 0 ) FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE set_translations.language = 'Japanese' AND LENGTH(set_translations.translation) > 0\t----- bird -----\tcard_games"
  ],
  [
    "How many card border with black color ? List out the card id.",
    "SELECT id FROM cards WHERE borderColor = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have frame effect as extendedart? List out the id of those cards.",
    "SELECT id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games"
  ],
  [
    "Among black card borders, which card has full artwork?",
    "SELECT * FROM cards WHERE `borderColor` = 'black' AND `isFullArt` = 1 AND `borderColor` IS NOT NULL AND `isFullArt` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Point out the language of set id \"174\"?",
    "SELECT T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 174;\t----- bird -----\tcard_games"
  ],
  [
    "List out the set name of the set code \"ALL\".",
    "SELECT T2.translation FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.code = 'ALL';\t----- bird -----\tcard_games"
  ],
  [
    "Which foreign language used by \"A Pedra Fellwar\"?",
    "SELECT foreign_data.language FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'A Pedra Fellwar'\t----- bird -----\tcard_games"
  ],
  [
    "State the set code of the set with release date of 07/13/2007?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2007-07-13'\t----- bird -----\tcard_games"
  ],
  [
    "Mention the base set size and set code of the set that was in block named \"Masques\" and \"Mirage\".",
    "SELECT `baseSetSize` FROM sets WHERE `code` = ( SELECT `code` FROM sets WHERE `block` IN ('Masques', 'Mirage') )\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion type of 'expansion'?",
    "SELECT DISTINCT T1.`code` FROM sets AS T1 WHERE T1.`type` = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has boros watermark? List out the type of this card.",
    "SELECT `type` FROM cards WHERE `watermark` = 'boros'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.",
    "SELECT `type` FROM cards WHERE `watermark` = 'colorpie'\t----- bird -----\tcard_games"
  ],
  [
    "What is percentage of the cards with a converted Mana Cost of 10 in set of Abyssal Horror?",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM cards WHERE cards.name = 'Abyssal Horror')) * 100 FROM cards WHERE cards.name = 'Abyssal Horror' AND cards.convertedManaCost = 10\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion commander type?",
    "SELECT DISTINCT sets.code FROM sets WHERE sets.block = 'Commander'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has abzan watermark? List out the type of this card.",
    "SELECT `type` FROM cards WHERE `watermark` = 'abzan'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card that has azorius watermark? List out the type of this card.",
    "SELECT T1.`type` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`watermark` = 'azorius';\t----- bird -----\tcard_games"
  ],
  [
    "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards available in paper have a positive starting maximum hand size?",
    "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '%+%'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards that have a text box.",
    "SELECT DISTINCT T1.`text` FROM cards AS T1 WHERE T1.`isTextless` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?",
    "SELECT `manaCost` FROM cards WHERE `name` = 'Ancestor\\'s Chosen';\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with a white border color, how many of them have unknown power?",
    "SELECT COUNT(*) FROM cards WHERE `borderColor` = 'white' AND (`power` = '*' OR `power` IS NULL)\t----- bird -----\tcard_games"
  ],
  [
    "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.",
    "SELECT DISTINCT T1.id, T1.name FROM cards AS T1 INNER JOIN cards AS T2 ON T1.id = T2.id WHERE T1.isPromo = 1 AND T2.side IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?",
    "SELECT `subtypes`, `supertypes` FROM cards WHERE `name` = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".",
    "SELECT T1.purchaseUrls FROM cards AS T1 WHERE T1.promoTypes = 'bundle'\t----- bird -----\tcard_games"
  ],
  [
    "How many artists have designed a card with a black border color and is available in both \"arena\" and \"mtgo\" printing type?",
    "SELECT COUNT(*) FROM cards WHERE `borderColor` = 'black' AND `availability` LIKE '%arena,mtgo%'\t----- bird -----\tcard_games"
  ],
  [
    "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?",
    "SELECT CASE WHEN T1.`convertedManaCost` > T2.`convertedManaCost` THEN 'Serra Angel' WHEN T1.`convertedManaCost` < T2.`convertedManaCost` THEN 'Shrine Keeper' ELSE 'Same' END AS Result FROM ( SELECT `convertedManaCost` FROM cards WHERE `name` = 'Serra Angel' ) T1 JOIN ( SELECT `convertedManaCost` FROM cards WHERE `name` = 'Shrine Keeper' ) T2\t----- bird -----\tcard_games"
  ],
  [
    "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
    "SELECT `artist` FROM cards WHERE `flavorName` = 'Battra, Dark Destroyer'\t----- bird -----\tcard_games"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "How many translations are there for the set of cards with \"Angel of Mercy\" in it?",
    "SELECT COUNT(*) FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Angel of Mercy' )\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards in the set \"Hauptset Zehnte Edition\".",
    "SELECT DISTINCT cards.name FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode JOIN sets ON set_translations.setCode = sets.code WHERE set_translations.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games"
  ],
  [
    "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?",
    "SELECT COUNT(*) FROM set_translations JOIN sets ON set_translations.setCode = sets.code WHERE sets.name = 'Ancestor''s Chosen' AND set_translations.language = 'Korean';\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex?",
    "SELECT COUNT(*) FROM cards JOIN set_translations ON cards.id = set_translations.id WHERE set_translations.translation = 'Hauptset Zehnte Edition' AND cards.artist = 'Adam Rex';\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the base set of \"Hauptset Zehnte Edition\"?",
    "SELECT COUNT(*) FROM cards WHERE cards.`setCode` = (SELECT `code` FROM sets WHERE `code` = 'Z10E')\t----- bird -----\tcard_games"
  ],
  [
    "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?",
    "SELECT `translation` FROM set_translations JOIN sets ON set_translations.`setCode` = sets.`code` WHERE sets.`name` = 'Eighth Edition' AND sets.`type` = 'expansion' AND `language` = 'Simplified Chinese'\t----- bird -----\tcard_games"
  ],
  [
    "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?",
    "SELECT COUNT(*) FROM cards WHERE name = 'Angel of Mercy' AND mtgoId IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "When was the set of cards with \"Ancestor's Chosen\" released?",
    "SELECT `releaseDate` FROM sets WHERE `code` IN ( SELECT `code` FROM sets WHERE `name` = 'Ancestor''s Chosen' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the expansion type of the set \"Hauptset Zehnte Edition\"?",
    "SELECT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets in the block \"Ice Age\", how many of them have an Italian translation?",
    "SELECT COUNT(*) FROM ( SELECT s.`name` FROM sets AS s INNER JOIN set_translations AS st ON s.`code` = st.`setCode` WHERE s.`block` = 'Ice Age' AND st.`language` = 'Italian' ) AS T;\t----- bird -----\tcard_games"
  ],
  [
    "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
    "SELECT isForeignOnly FROM sets WHERE code IN ( SELECT code FROM sets WHERE name = 'Adarkar Valkyrie' )\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT s.code FROM set_translations AS st INNER JOIN sets AS s ON st.setCode = s.code WHERE st.language = 'Italian' ) AS t1 INNER JOIN sets AS s ON t1.code = s.code WHERE s.baseSetSize < 10\t----- bird -----\tcard_games"
  ],
  [
    "How many cards in the set Coldsnap have a black border color?",
    "SELECT COUNT(*) FROM cards WHERE cards.name = 'Coldsnap' AND cards.borderColor = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the name of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT `name` FROM cards WHERE `setCode` = 'Coldsnap' ORDER BY `convertedManaCost` DESC LIMIT 1;\t----- bird -----\tcard_games"
  ],
  [
    "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
    "SELECT DISTINCT artist FROM cards WHERE name = 'Coldsnap' AND artist IN (SELECT DISTINCT artist FROM cards WHERE name IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy'));\t----- bird -----\tcard_games"
  ],
  [
    "What is card number 4 in the set Coldsnap?",
    "SELECT `number` FROM cards WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Coldsnap' ) AND `number` = 4\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
    "SELECT COUNT(*) FROM ( SELECT * FROM cards WHERE convertedManaCost > 5 AND name = 'Coldsnap' ) AS T WHERE power = '*' OR power IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the Italian flavor text of the card \"Ancestor's Chosen\"?",
    "SELECT fd.flavorText FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid WHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'Italian';\t----- bird -----\tcard_games"
  ],
  [
    "Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text.",
    "SELECT DISTINCT language FROM foreign_data WHERE id IN ( SELECT id FROM cards WHERE name = 'Ancestor''s Chosen' ) AND flavorText IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What's the German type of the card \"Ancestor's Chosen\"?",
    "SELECT fd.type FROM foreign_data fd JOIN cards c ON fd.uuid = c.uuid WHERE c.name = 'Ancestor''s Chosen' AND fd.language = 'German'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian text ruling of all the cards in the set Coldsnap.",
    "SELECT T1.text FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` INNER JOIN set_translations AS T3 ON T1.`uuid` = T3.`uuid` WHERE T2.`name` = 'Coldsnap' AND T3.`language` = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT DISTINCT c.name FROM cards AS c JOIN foreign_data AS fd ON c.uuid = fd.uuid JOIN set_translations AS st ON c.setCode = st.setCode WHERE c.name = 'Coldsnap' AND st.language = 'Italian' AND c.convertedManaCost = (SELECT MAX(convertedManaCost) FROM cards WHERE name = 'Coldsnap' AND setCode = (SELECT code FROM sets WHERE name = 'Coldsnap'));\t----- bird -----\tcard_games"
  ],
  [
    "When was the ruling for the card 'Reminisce' created?",
    "SELECT rulings.date FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Reminisce'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
    "SELECT ( SELECT COUNT(*) FROM cards WHERE convertedManaCost = 7 AND name = 'Coldsnap' AND name IS NOT NULL ) / ( SELECT COUNT(*) FROM cards WHERE name = 'Coldsnap' AND name IS NOT NULL ) * 100 AS percentage\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of incredibly powerful cards in the set Coldsnap?",
    "SELECT (SUM(T1.count) / SUM(T2.count)) * 100 FROM ( SELECT COUNT(*) AS count FROM cards WHERE name = 'Coldsnap' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL ) T1 JOIN ( SELECT COUNT(*) AS count FROM cards WHERE name = 'Coldsnap' ) T2\t----- bird -----\tcard_games"
  ],
  [
    "What's the code for the set which was released on 2017/7/14?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2017-07-14'\t----- bird -----\tcard_games"
  ],
  [
    "List the keyrune code for the set whose code is 'PKHC'.",
    "SELECT `keyruneCode` FROM sets WHERE `code` = 'PKHC'\t----- bird -----\tcard_games"
  ],
  [
    "For the set which had 'SS2' as the code, what is its magic card market id?",
    "SELECT `mcmId` FROM sets WHERE `code` = 'SS2'\t----- bird -----\tcard_games"
  ],
  [
    "What's the magic card market name for the set which was released on 2017/6/9?",
    "SELECT `mcmName` FROM sets WHERE `code` = ( SELECT `code` FROM sets WHERE `releaseDate` = '2017-06-09' )\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"From the Vault: Lore\", what is its expansion type?",
    "SELECT `type` FROM sets WHERE `code` = ( SELECT `code` FROM sets WHERE `name` LIKE '%From the Vault: Lore%' )\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"Commander 2014 Oversized\" , give its parent code.",
    "SELECT `parentCode` FROM sets WHERE `code` = ( SELECT `code` FROM sets WHERE `name` = 'Commander 2014 Oversized' )\t----- bird -----\tcard_games"
  ],
  [
    "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
    "SELECT c.id, c.text, c.hasContentWarning FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec' AND c.hasContentWarning = 1\t----- bird -----\tcard_games"
  ],
  [
    "What was the release date for the set which card \"Evacuation\" in it?",
    "SELECT s.releaseDate FROM sets s JOIN set_translations st ON s.code = st.setCode JOIN cards c ON c.setCode = s.code WHERE c.name = 'Evacuation';\t----- bird -----\tcard_games"
  ],
  [
    "What is the number of cards are there in the set of \"Rinascita di Alara\"?",
    "SELECT `baseSetSize` FROM sets WHERE `code` IN ( SELECT `code` FROM set_translations WHERE `translation` = 'Rinascita di Alara' )\t----- bird -----\tcard_games"
  ],
  [
    "List the expansion type of the set \"Huitième édition\".",
    "SELECT s.type FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Huitième édition'\t----- bird -----\tcard_games"
  ],
  [
    "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
    "SELECT s.translation FROM set_translations s JOIN cards c ON s.setCode = c.code WHERE s.language = 'French' AND c.name = 'Tendo Ice Bridge' AND c.type = 'Land';\t----- bird -----\tcard_games"
  ],
  [
    "How many translations of the name of the set \"Salvat 2011\"?",
    "SELECT COUNT(*) FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Salvat 2011' ) AND `translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Tell the Japanese name of the set which card \"Fellwar Stone\" is in it.",
    "SELECT s.translation FROM set_translations s JOIN cards c ON s.setCode = c.setCode WHERE c.name = 'Fellwar Stone' AND s.language = 'Japanese' AND c.name IS NOT NULL AND s.translation IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Journey into Nyx Hero''s Path' ORDER BY T1.`convertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the release date for the set \"Ola de frío\"?",
    "SELECT s.releaseDate FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Ola de frío';\t----- bird -----\tcard_games"
  ],
  [
    "What was the expansion type for the set which card \"Samite Pilgrim\" in it?",
    "SELECT T1.`type` FROM sets AS T1 JOIN cards AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`name` = 'Samite Pilgrim'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.",
    "SELECT COUNT(*) FROM cards WHERE `convertedManaCost` = '3' AND `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'World Championship Decks 2004' )\t----- bird -----\tcard_games"
  ],
  [
    "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
    "SELECT `translation` FROM set_translations WHERE `language` = 'Chinese Simplified' AND `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Mirrodin' )\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
    "SELECT CAST((SELECT COUNT(*) FROM cards WHERE cards.language = 'Japanese' AND cards.isNonFoilOnly = 1) AS REAL) / (SELECT COUNT(*) FROM cards WHERE cards.language = 'Japanese') * 100\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
    "SELECT ( SELECT COUNT(*) FROM cards JOIN set_translations ON cards.uuid = set_translations.uuid WHERE set_translations.language = 'Portuguese (Brazil)' AND cards.isOnlineOnly = 1 ) / ( SELECT COUNT(*) FROM cards JOIN set_translations ON cards.uuid = set_translations.uuid WHERE set_translations.language = 'Portuguese (Brazil)' ) * 100\t----- bird -----\tcard_games"
  ],
  [
    "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
    "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the unique id of the set that has the highest number of cards?",
    "SELECT `id` FROM sets ORDER BY `baseSetSize` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?",
    "SELECT artist FROM cards WHERE side IS NULL ORDER BY convertedManaCost DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the most common visual frame effects among the incredibly powerful foils?",
    "SELECT `frameEffects` FROM cards WHERE `cardKingdomFoilId` IS NOT NULL AND `cardKingdomId` IS NOT NULL GROUP BY `frameEffects` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with unknown power that can't be found in foil is in duel deck A?",
    "SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND hasFoil = 0 AND duelDeck = 'a'\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
    "SELECT sets.id FROM sets WHERE sets.type = 'commander' ORDER BY sets.totalSetSize DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "In duels, what are the top 10 cards with the highest uncoverted mana cost?",
    "SELECT cards.id, cards.manaCost FROM cards WHERE cards.format = 'duel' ORDER BY cards.manaCost DESC LIMIT 10;\t----- bird -----\tcard_games"
  ],
  [
    "When was the oldest mythic card released and what are its legal play formats?",
    "SELECT DISTINCT legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'mythic' AND legalities.status = 'legal';\t----- bird -----\tcard_games"
  ],
  [
    "How many cards did Volkan BaÇµa illustrated whose foreign language is in French?",
    "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE `artist` = 'Volkan Baga' AND foreign_data.language = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many rare enchantment Abundance cards are there whose play format status are all legal?",
    "SELECT COUNT(*) FROM cards WHERE rarity = 'rare' AND types = 'Enchantment' AND name = 'Abundance' AND EXISTS ( SELECT 1 FROM legalities WHERE cards.uuid = legalities.uuid AND legalities.status = 'Legal' )\t----- bird -----\tcard_games"
  ],
  [
    "Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card.",
    "SELECT T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' AND T2.format = ( SELECT T3.format FROM ( SELECT format, MAX(banned_count) AS max_banned_count FROM ( SELECT format, COUNT(*) AS banned_count FROM legalities WHERE status = 'Banned' GROUP BY format ) AS T4 ) AS T3 )\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the \"Battlebond\" set?",
    "SELECT `language` FROM set_translations JOIN sets ON set_translations.`setCode` = sets.`code` JOIN cards ON cards.`uuid` = foreign_data.`uuid` WHERE sets.`name` = 'Battlebond';\t----- bird -----\tcard_games"
  ],
  [
    "Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated.",
    "SELECT format FROM cards WHERE artist = ( SELECT artist FROM cards GROUP BY artist ORDER BY COUNT(*) ASC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
    "SELECT c.status FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE c.frameVersion = '1997' AND c.artist = 'D. Alexander Gregory' AND c.hasContentWarning = 1 AND c.format = 'legacy'\t----- bird -----\tcard_games"
  ],
  [
    "Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format.",
    "SELECT T1.`name`, T2.`format` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`status` = 'Banned' AND T1.`edhrecRank` = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
    "SELECT MAX(COUNT(DISTINCT cards.language)) AS common_language FROM cards JOIN sets ON cards.setCode = sets.code WHERE cards.releaseDate BETWEEN '2012-01-01' AND '2015-12-31';\t----- bird -----\tcard_games"
  ],
  [
    "List the artists who illustrated cards with black borders which are available only in arena.",
    "SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`id` = T2.`id` INNER JOIN legalities AS T3 ON T1.`id` = T3.`id` WHERE T1.`borderColor` = 'black' AND T1.`availability` = 'arena'\t----- bird -----\tcard_games"
  ],
  [
    "Find the uuid of cards in which the old school format is restricted or banned.",
    "SELECT DISTINCT T1.`uuid` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`format` = 'oldschool' AND (T2.`status` = 'banned' OR T2.`status` = 'restricted')\t----- bird -----\tcard_games"
  ],
  [
    "Among the card designed by Matthew D. Wilson, how many are available only in the paper?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games"
  ],
  [
    "What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates.",
    "SELECT rulings.* FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC\t----- bird -----\tcard_games"
  ],
  [
    "List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.",
    "SELECT DISTINCT legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN sets ON cards.setCode = sets.code WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
    "SELECT DISTINCT T1.name FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Korean' AND T1.code IN ( SELECT DISTINCT T3.code FROM sets AS T3 LEFT JOIN set_translations AS T4 ON T3.code = T4.setCode WHERE T4.language IS NULL OR T4.language NOT LIKE '%Japanese%' )\t----- bird -----\tcard_games"
  ],
  [
    "List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any.",
    "SELECT T1.`name` AS card_name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`status` = 'Banned'\t----- bird -----\tcard_games"
  ],
  [
    "Which user has a higher reputation, Harlan or Jarrod Dixon?",
    "SELECT CASE WHEN T1.Reputation > T2.Reputation THEN 'Harlan' WHEN T1.Reputation < T2.Reputation THEN 'Jarrod Dixon' ELSE 'Same Reputation' END AS Result FROM ( SELECT Reputation FROM users WHERE DisplayName = 'Harlan' ) T1 JOIN ( SELECT Reputation FROM users WHERE DisplayName = 'Jarrod Dixon' ) T2 ON T1.Reputation < T2.Reputation\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users whose accounts were created in the year 2014.",
    "SELECT users.DisplayName FROM users WHERE STRFTIME('%Y', users.CreationDate) = '2014'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users last accessed the website after 2014/9/1?",
    "SELECT COUNT(DISTINCT T1.`Id`) FROM users AS T1 WHERE T1.`LastAccessDate` > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has the most number of views?",
    "SELECT `DisplayName` FROM users WHERE Views = ( SELECT MAX(Views) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
    "SELECT COUNT(*) FROM users WHERE UpVotes > 100 AND DownVotes > 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users with more than 10 views created their account after the year 2013?",
    "SELECT COUNT(*) FROM users WHERE Views > 10 AND STRFTIME('%Y', CreationDate) > '2013'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts does the user csgillespie own?",
    "SELECT COUNT(*) FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the titles of the posts owned by the user csgillespie?",
    "SELECT Title FROM posts WHERE OwnerUserId = (SELECT Id FROM users WHERE DisplayName = 'csgillespie')\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the owner of the post \"Eliciting priors from experts\"?",
    "SELECT OwnerDisplayName FROM posts WHERE Id = ( SELECT Id FROM posts WHERE Title = 'Eliciting priors from experts' AND OwnerUserId IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post that is owned by csgillespie and has the highest popularity?",
    "SELECT Title FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' ) ORDER BY ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who is the owner of the most valuable post?",
    "SELECT users.DisplayName FROM users INNER JOIN ( SELECT MAX(FavoriteCount) AS MaxFavoriteCount, Posts.OwnerUserId FROM posts GROUP BY Posts.OwnerUserId ORDER BY MaxFavoriteCount DESC LIMIT 1 ) AS T1 ON users.Id = T1.OwnerUserId\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total number of comments of all the posts owned by csgillespie?",
    "SELECT SUM(T3.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN comments AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post that got the most number of answers owned by csgillespie, how many answers did it get?",
    "SELECT MAX(`AnswerCount`) FROM posts WHERE `OwnerUserId` IN ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' ) AND `PostId` IN ( SELECT `PostId` FROM posts WHERE `OwnerUserId` IN ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' ) ORDER BY `AnswerCount` DESC LIMIT 1 );\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?",
    "SELECT T1.`LastEditorDisplayName` FROM posts AS T1 WHERE T1.`Title` = 'Examples for teaching: Correlation does not mean causation' AND T1.`LastEditorUserId` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by csgillespie, how many of them are root posts?",
    "SELECT COUNT(*) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' ) AND ParentId IS NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users who owns a post that is well-finished.",
    "SELECT T2.`DisplayName` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T1.`ClosedDate` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by an elder user, how many of them have a score of over 19?",
    "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 AND T1.Score >= 20\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the location of the owner of the post \"Eliciting priors from experts\"?",
    "SELECT T1.`Location` FROM users AS T1 WHERE T1.`Id` = ( SELECT T2.`OwnerUserId` FROM posts AS T2 WHERE T2.`Title` = 'Eliciting priors from experts' )\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the tag \"bayesian\" excerpted from? Please give the body of the post.",
    "SELECT T2.Body FROM posts AS T2 WHERE T2.Id = ( SELECT T1.Id FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'bayesian' )\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the most popular tag excerpted from? Please give the body of the post.",
    "SELECT T1.Body FROM posts AS T1 INNER JOIN tags AS T2 ON T1.Id = T2.ExcerptPostId WHERE T2.Count = ( SELECT MAX(T3.Count) FROM tags AS T3 )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many badges has the user csgillespie obtained?",
    "SELECT COUNT(*) FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the names of the badges obtained by csgillespie.",
    "SELECT `Name` FROM badges WHERE `UserId` = ( SELECT `UserId` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?",
    "SELECT COUNT(*) FROM badges WHERE UserId IN ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' ) AND Date LIKE '2011%'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has obtained the most number of badges?",
    "SELECT `DisplayName` FROM users WHERE `Id` = ( SELECT `UserId` FROM badges GROUP BY `UserId` ORDER BY COUNT(`Id`) DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of the posts owned by the user csgillespie?",
    "SELECT AVG(posts.Score) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of badges obtained by a user with over 200 views?",
    "SELECT CAST(T1.Count AS REAL) / T2.Count AS AverageBadges FROM ( SELECT COUNT(T1.Id) AS Count FROM users AS T1 INNER JOIN ( SELECT `Id` FROM users WHERE Views > 200 ) AS T2 ON T1.Id = T2.Id ) AS T1 JOIN ( SELECT COUNT(*) AS Count FROM users WHERE Views > 200 ) AS T2 ON 1=1;\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with a score of over 20, what is the percentage of them being owned by an elder user?",
    "SELECT ( SELECT COUNT(*) FROM ( SELECT posts.Id FROM posts WHERE posts.Score > 20 AND EXISTS ( SELECT 1 FROM users WHERE users.Id = posts.OwnerUserId AND users.Age > 65 ) ) AS elder_users_posts ) AS count_elder_users_posts * 100 / ( SELECT COUNT(*) FROM posts WHERE posts.Score > 20 ) AS percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes did the user No.58 take on 2010/7/19?",
    "SELECT COUNT(*) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'\t----- bird -----\tcodebase_community"
  ],
  [
    "Indicate the creation date of the maximum number of votes.",
    "SELECT MAX(v.CreationDate) FROM votes v WHERE v.Score = ( SELECT MAX(v.Score) FROM votes v );\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of \"Revival\" badges.",
    "SELECT COUNT(*) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title for the post which got the highest score comment?",
    "SELECT p.Title FROM posts p JOIN ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 ) c ON p.Id = c.PostId;\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post which got 1910 view counts, how many comments does it get?",
    "SELECT COUNT(`Id`) FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `ViewCount` = 1910 )\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get?",
    "SELECT T1.`FavoriteCount` FROM posts AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`UserId` = 3025 AND T2.`CreationDate` = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the only one comment text of the post with parent id 107829.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.23853 gave a comment to a post at 9:08:18 on 2013/7/12, was that post well-finished?",
    "SELECT T1.Id AS PostId FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId JOIN users AS T3 ON T2.UserId = T3.Id WHERE T3.Id = 23853 AND T2.CreationDate = '2013-07-12 09:08:18.0' AND T1.ClosedDate IS NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "For the owner user of post No. 65041, what is his/her reputation points?",
    "SELECT T1.`Reputation` FROM users AS T1 WHERE T1.`Id` = ( SELECT T2.`OwnerUserId` FROM posts AS T2 WHERE T2.`Id` = 65041 )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Tiago Pasqualini' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the display name of the user who made the vote No.6347.",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Id` = ( SELECT T2.`UserId` FROM votes AS T2 WHERE T2.`Id` = 6347 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of votes for the post about data visualization.",
    "SELECT COUNT(*) FROM votes WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` LIKE '%data visualization%' )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user whose display name is \"DatEpicCoderGuyWhoPrograms\", what is his/her badge's name?",
    "SELECT `Name` FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'DatEpicCoderGuyWhoPrograms' )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user No.24, how many times is the number of his/her posts compared to his/her votes?",
    "SELECT (SELECT COUNT(posts.Id) FROM posts WHERE posts.OwnerUserId = 24) / (SELECT COUNT(votes.Id) FROM votes WHERE votes.UserId = 24) AS ratio\t----- bird -----\tcodebase_community"
  ],
  [
    "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
    "SELECT `ViewCount` FROM posts WHERE `Id` = ( SELECT `Id` FROM posts WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Write the contents of comments with a score of 17.",
    "SELECT T1.`Text` FROM comments AS T1 WHERE T1.`Score` = 17\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user has the website URL listed at 'http://stackoverflow.com'",
    "SELECT `DisplayName` FROM users WHERE `WebsiteUrl` = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the badge name that user 'SilentGhost' obtained?",
    "SELECT Name FROM badges WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'SilentGhost' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Name the user that commented 'thank you user93!'",
    "SELECT users.`DisplayName` FROM comments JOIN users ON comments.`UserId` = users.`Id` WHERE `Text` = 'thank you user93!' AND users.`DisplayName` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made by user 'A Lion.'",
    "SELECT comments.Text FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'A Lion'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user?",
    "SELECT T1.`Reputation` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`Title` = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made on the post titled 'How does gentle boosting differ from AdaBoost?'",
    "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'How does gentle boosting differ from AdaBoost?'\t----- bird -----\tcodebase_community"
  ],
  [
    "Name 10 users with the badge name 'Necromancer.'",
    "SELECT users.DisplayName FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Necromancer' LIMIT 10\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
    "SELECT u.DisplayName FROM users u INNER JOIN posts p ON u.Id = p.LastEditorUserId WHERE p.Title = 'Open source tools for visualizing multi-dimensional data'\t----- bird -----\tcodebase_community"
  ],
  [
    "List the title of posts which were edited by Vebjorn Ljosa.",
    "SELECT T1.`Title` FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`UserId` = ( SELECT `UserId` FROM users WHERE `DisplayName` = 'Vebjorn Ljosa' ) AND T2.`PostHistoryTypeId` = 1 -- Assuming 1 is for editing\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total score of the posts edited by Yevgeny and include the user's website URL.",
    "SELECT SUM(T1.Score) FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T2.DisplayName = 'Yevgeny'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all the comments left by users who edited the post titled 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "SELECT comments.* FROM comments INNER JOIN postHistory ON comments.PostId = postHistory.PostId WHERE postHistory.PostId IN ( SELECT posts.Id FROM posts WHERE posts.Title = 'Why square the difference instead of taking the absolute value in standard deviation?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How much is the total bounty amount of the post titled about 'data'",
    "SELECT SUM(T2.BountyAmount) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T1.Title LIKE '%data%'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user added a bounty amount of 50 to the post title mentioning variance?",
    "SELECT users.DisplayName FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN users ON T2.OwnerUserId = users.Id INNER JOIN tags AS T3 ON T2.Id = T3.ExcerptPostId WHERE T3.TagName = 'variance' AND T1.BountyAmount = 50 AND T1.VoteTypeId = 1 -- Assuming 1 is for upvote\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the average view count of posts tagged as 'humor' and write the title and the comments of the posts alongside their scores if applicable.",
    "SELECT T1.`Title`, T1.`Score`, T1.`ViewCount`, T3.`Text` FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` INNER JOIN comments AS T3 ON T1.`Id` = T3.`PostId` WHERE T2.`TagName` = 'humor'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the total number of comments posted by user ID 13.",
    "SELECT COUNT(*) FROM comments WHERE `UserId` = 13\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the highest reputation?",
    "SELECT `Id` FROM users ORDER BY `Reputation` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the lowest view?",
    "SELECT `Id` FROM users ORDER BY Views ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with supporter badge during year 2011?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 WHERE T1.`Name` = 'Supporter' AND T1.`Date` BETWEEN '2011-01-01' AND '2011-12-31'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with more than 5 badges?",
    "WITH BadgeCount AS ( SELECT COUNT(T1.`Name`) AS BadgeCount FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` GROUP BY T2.`Id` HAVING COUNT(T1.`Name`) > 5 ) SELECT COUNT(BadgeCount.BadgeCount) FROM BadgeCount\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from New York have a teacher and supporter badge?",
    "SELECT COUNT(*) FROM users JOIN badges ON users.Id = badges.UserId WHERE Location = 'New York' AND badges.Name IN ('Teacher', 'Supporter');\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user created post ID 1 and what is the reputation of this user?",
    "SELECT u.Reputation FROM users u INNER JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Id = 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user have only one post history per post and having at least 1000 views?",
    "SELECT T2.`UserId` FROM ( SELECT DISTINCT T1.`UserId` FROM postHistory AS T1 GROUP BY T1.`PostId` HAVING COUNT(T1.`PostId`) = 1 ) AS T2 INNER JOIN users AS T3 ON T2.`UserId` = T3.`Id` WHERE T3.`Views` >= 1000;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have posted the most comments. List out the user's badge?",
    "SELECT T1.`Name` FROM badges AS T1 WHERE T1.`UserId` = ( SELECT T2.`UserId` FROM comments AS T2 GROUP BY T2.`UserId` ORDER BY COUNT(T2.`Id`) DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from India have the teacher badges?",
    "SELECT COUNT(*) FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE users.Location = 'India' AND badges.Name = 'Teacher'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage difference of student badges given during 2010 and 2011?",
    "SELECT ( (SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2010') / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') * 100 ) - ((SELECT COUNT(*) FROM badges WHERE Name = 'Student' AND strftime('%Y', Date) = '2011') / (SELECT COUNT(*) FROM badges WHERE Name = 'Student') * 100)\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?",
    "SELECT COUNT(DISTINCT `UserId`) FROM comments WHERE `PostId` = 3720\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post that are related to post ID 61217 and what is the popularity of this post?",
    "SELECT T1.`ViewCount` FROM posts AS T1 WHERE T1.`Id` = 61217\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score and the link type ID for post ID 395?",
    "SELECT LinkTypeId FROM postLinks WHERE PostId = 395\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post ID with score more than 60 and list out all the user ID that created these post.",
    "SELECT T1.OwnerUserId AS `UserId` FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the sum of favourite count gained by user ID 686 in 2011?",
    "SELECT SUM(T2.FavoriteCount) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId INNER JOIN badges AS T3 ON T2.Id = T3.PostId WHERE T1.Id = 686 AND T2.CreationDate BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59' AND T3.Date BETWEEN '2011-01-01 00:00:00' AND '2011-12-31 23:59:59'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average of the up votes and the average user age for users creating more than 10 posts?",
    "SELECT AVG(T1.Age) FROM users AS T1 INNER JOIN ( SELECT u.Id, COUNT(posts.Id) AS PostCount FROM users AS u INNER JOIN posts ON u.Id = posts.OwnerUserId GROUP BY u.Id ) AS T2 ON T1.Id = T2.Id WHERE T2.PostCount > 10\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users obtained the \"Announcer\" badge?",
    "SELECT COUNT(T1.`UserId`) FROM badges AS T1 WHERE T1.`Name` = 'Announcer'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.",
    "SELECT DISTINCT T1.Name FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Date = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many positive comments are there on the list?",
    "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
    "SELECT `Text` FROM comments WHERE `CreationDate` = '2010-07-19 19:16:14.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score of 10 on the list?",
    "SELECT COUNT(*) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "Mention the reputation of users who had obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT T2.`Reputation` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Date` = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of badge that the user whose display name is \"Pierre\" obtained?",
    "SELECT Name FROM badges WHERE UserId = (SELECT Id FROM users WHERE DisplayName = 'Pierre')\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the dates that users who are located in Rochester, NY obtained their badges?",
    "SELECT T2.`Date` FROM badges AS T2 INNER JOIN users AS T1 ON T2.`UserId` = T1.`Id` WHERE T1.`Location` = 'Rochester, NY'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Teacher\" badge, calculate their percentage of users",
    "SELECT (T1.`count` / T2.`count`) * 100 FROM ( SELECT COUNT(T1.`UserId`) AS `count` FROM badges AS T1 WHERE T1.`Name` = 'Teacher' ) AS T1 INNER JOIN ( SELECT COUNT(T2.`Id`) AS `count` FROM users AS T2 ) AS T2 ON 1=1\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
    "SELECT ( (SELECT COUNT(users.Id) FROM users WHERE users.Age BETWEEN 13 AND 18) / (SELECT COUNT(users.Id) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Organizer') ) * 100 AS percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
    "SELECT T2.Score FROM comments AS T2 INNER JOIN posts AS T1 ON T2.PostId = T1.Id WHERE T1.CreaionDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?",
    "SELECT Text FROM comments WHERE PostId = ( SELECT PostId FROM posts WHERE CreationDate = '2010-07-19 19:37:33.0' )\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the age of users who located in Vienna, Austria obtained the badge?",
    "SELECT DISTINCT users.Age FROM users WHERE users.Location = 'Vienna, Austria' AND users.Id IN ( SELECT users.Id FROM users INNER JOIN badges ON users.Id = badges.UserId WHERE badges.Name = 'Scholar' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many adults who obtained the badge Supporter?",
    "SELECT COUNT(*) FROM ( SELECT COUNT(*) AS count FROM badges WHERE Name = 'Supporter' ) AS supp_count INNER JOIN ( SELECT COUNT(*) AS count FROM users WHERE Age BETWEEN 19 AND 65 ) AS adult_count ON supp_count.count = adult_count.count\t----- bird -----\tcodebase_community"
  ],
  [
    "State the number of views of users who obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT T2.`Views` FROM users AS T2 INNER JOIN ( SELECT DISTINCT T1.`Id` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Date` = '2010-07-19 19:39:08.0' ) AS T3 ON T2.`Id` = T3.`Id`\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the name of badges that users who have the lowest reputation obtained?",
    "SELECT T2.`Name` FROM badges AS T2 WHERE T2.`UserId` IN ( SELECT T1.`Id` FROM users AS T1 WHERE T1.`Reputation` = ( SELECT MIN(T3.`Reputation`) FROM users AS T3 ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "State the name of badge that the user whose display name is \"Sharpie\" obtained.",
    "SELECT T1.`Name` FROM badges AS T1 WHERE T1.`UserId` = ( SELECT T2.`Id` FROM users AS T2 WHERE T2.`DisplayName` = 'Sharpie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many elders obtained the \"Supporter\" badge?",
    "SELECT COUNT(T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Supporter' AND T2.`Age` > 65\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of user with the ID of 30?",
    "SELECT `DisplayName` FROM users WHERE `Id` = 30\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were from New York?",
    "SELECT COUNT(*) FROM users WHERE Location = 'New York'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made in 2010?",
    "SELECT COUNT(*) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were adult?",
    "SELECT COUNT(*) FROM users WHERE users.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have the highest number of views?",
    "SELECT `DisplayName` FROM users ORDER BY Views DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the ratio of votes in 2010 and 2011.",
    "SELECT CAST(COUNT(Id) AS REAL) / (SELECT COUNT(Id) FROM votes WHERE YEAR(CreationDate) = 2011) FROM votes WHERE STRFTIME('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of tags used by John Stauffer's?",
    "SELECT T1.`ExcerptPostId` FROM tags AS T1 INNER JOIN posts AS T2 ON T1.`ExcerptPostId` = T2.`Id` WHERE T2.`OwnerUserId` = ( SELECT Id FROM users WHERE DisplayName = 'John Stauffer' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created by Daniel Vassallo?",
    "SELECT COUNT(*) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'Daniel Vassallo' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made by Harlan?",
    "SELECT COUNT(*) FROM votes WHERE UserId = ( SELECT Id FROM users WHERE DisplayName = 'Harlan' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by slashnick has the most answers count? State the post ID.",
    "SELECT p.PostId FROM posts p WHERE p.OwnerDisplayName = 'slashnick' ORDER BY p.AnswerCount DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
    "SELECT CASE WHEN (SELECT SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky') > (SELECT SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Noah Snyder') THEN 'Harvey Motulsky' WHEN (SELECT SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky') < (SELECT SUM(T1.ViewCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Noah Snyder') THEN 'Noah Snyder' ELSE 'Equal' END AS Popularity\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts by Matt Parker have more than 4 votes?",
    "SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id INNER JOIN votes ON posts.Id = votes.PostId WHERE users.DisplayName = 'Matt Parker' AND votes.VoteTypeId = 1 GROUP BY posts.Id HAVING COUNT(votes.Id) > 4\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments did Neil McGuigan get in his posts?",
    "SELECT COUNT(*) FROM comments AS T1 WHERE T1.Score < 60 AND T1.PostId IN ( SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Neil McGuigan' )\t----- bird -----\tcodebase_community"
  ],
  [
    "State all the tags used by Mark Meckes in his posts that doesn't have comments.",
    "SELECT T3.`TagName` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` INNER JOIN tags AS T3 ON T1.`Tags` = T3.`TagName` INNER JOIN ( SELECT DISTINCT T1.`Tags` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'Mark Meckes' ) AS T4 ON T3.`TagName` = T4.`Tags` WHERE NOT EXISTS ( SELECT 1 FROM comments AS T5 WHERE T3.`ExcerptPostId` = T5.`PostId` )\t----- bird -----\tcodebase_community"
  ],
  [
    "List all the name of users that obtained the Organizer Badges.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
    "SELECT CAST(T1.`count` AS REAL) / T2.`count` * 100 AS percentage FROM ( SELECT COUNT(posts.Id) AS count FROM posts INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'r' ) AS T1 INNER JOIN ( SELECT COUNT(posts.Id) AS count FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Community' ) AS T2 ON 1=1\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the difference in view count from post posted by mornington and view count from posts posted by Amos.",
    "SELECT SUM(posts.ViewCount) - ( SELECT SUM(posts_1.ViewCount) FROM posts AS posts_1 WHERE posts_1.OwnerDisplayName = 'Mornington' ) FROM posts WHERE posts.OwnerDisplayName = 'Amos'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users received commentator badges in 2014?",
    "SELECT COUNT(T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Commentator' AND T2.`CreationDate` BETWEEN '2014-01-01 00:00:00' AND '2014-12-31 23:59:59'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created on 21st July, 2010?",
    "SELECT COUNT(*) FROM posts WHERE `CreaionDate` BETWEEN '2010-07-21 00:00:00' AND '2012-07-21 23:59:59'\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the display names and ages of user who got the highest in views?",
    "SELECT users.DisplayName, users.Age FROM users WHERE users.Views = (SELECT MAX(users.Views) FROM users)\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
    "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Id = ( SELECT Id FROM posts WHERE Title = 'Detecting a given face in a database of facial images' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments were given by user ID 13?",
    "SELECT COUNT(*) FROM comments WHERE `UserId` = 13 AND Score < 60\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post title which got positive comments and display names of the users who posted those comments.",
    "SELECT T2.UserDisplayName FROM comments AS T2 INNER JOIN posts AS T1 ON T1.Id = T2.PostId WHERE T2.Score > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the badge names received in 2011 for the user whose location is in the North Pole.",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Location` = 'North Pole' AND STRFTIME('%Y', T1.`Date`) = '2011'\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the users' display names and available website URLs of the post with favorite count of more than 150.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post history counts and last edit date of the post title \"What is the best introductory Bayesian statistics textbook?\"",
    "SELECT COUNT(*) AS post_history_count, postHistory.LastEditDate FROM postHistory INNER JOIN posts ON postHistory.PostId = posts.Id INNER JOIN postLinks ON posts.Id = postLinks.PostId INNER JOIN posts AS relatedPosts ON postLinks.RelatedPostId = relatedPosts.Id WHERE posts.Title = 'What is the best introductory Bayesian statistics textbook?' AND relatedPosts.Title = 'What is the best introductory Bayesian statistics textbook?'\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the last accessed date and location of the users who received the outliers badge.",
    "SELECT T2.`LastAccessDate`, T2.`Location` FROM users AS T2 INNER JOIN ( SELECT T1.`UserId` FROM badges AS T1 WHERE T1.`Name` = 'Outliers' ) AS T3 ON T2.`Id` = T3.`UserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the related post title of \"How to tell if something happened in a data set which monitors a value over time\".",
    "SELECT p.Title FROM posts p WHERE p.Title = 'How to tell if something happened in a data set which monitors a value over time';\t----- bird -----\tcodebase_community"
  ],
  [
    "List the post IDs and badge names of the user Samuel in 2013.",
    "SELECT T1.Name AS BadgeName FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Samuel' AND STRFTIME('%Y', T1.Date) = '2013'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner's display name of the most popular post?",
    "SELECT U.DisplayName FROM posts AS P JOIN users AS U ON P.OwnerUserId = U.Id WHERE P.ViewCount = ( SELECT MAX(ViewCount) AS max_view_count FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the display name and location of the user who owned the excerpt post with hypothesis-testing tag.",
    "SELECT T1.`DisplayName`, T1.`Location` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` INNER JOIN tags AS T3 ON T2.`Id` = T3.`ExcerptPostId` WHERE T3.`TagName` = 'hypothesis-testing'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write down the related posts titles and link type IDs of the post \"What are principal component scores?\".",
    "SELECT p.Title, pl.LinkTypeId FROM posts AS p INNER JOIN postLinks AS pl ON p.Id = pl.PostId WHERE p.Id = ( SELECT Id FROM posts WHERE Title = 'What are principal component scores?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the display name of the parent ID for child post with the highest score.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` INNER JOIN ( SELECT T1.`PostId` AS PostId_T1, T2.`PostId` AS PostId_T2 FROM posts AS T1 INNER JOIN posts AS T2 ON T1.`ParentId` = T2.`Id` WHERE T2.`Score` = ( SELECT MAX(T3.`Score`) FROM posts AS T3 ) ) AS T3 ON T2.`PostId` = T3.`PostId_T2`\t----- bird -----\tcodebase_community"
  ],
  [
    "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
    "SELECT T2.`DisplayName`, T2.`WebsiteUrl` FROM votes AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`VoteTypeId` = 8 AND T1.`BountyAmount` IS NOT NULL AND T1.`UserId` IN ( SELECT T1.`UserId` FROM votes AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`VoteTypeId` = 8 AND T1.`BountyAmount` IS NOT NULL ORDER BY T1.`BountyAmount` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the titles of the top 5 posts with the highest popularity?",
    "SELECT posts.Id, posts.ViewCount FROM posts ORDER BY posts.ViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community"
  ],
  [
    "How many tags have post count between 5,000 to 7,000?",
    "SELECT COUNT(*) FROM tags WHERE Count BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner user id of the most valuable post?",
    "SELECT `OwnerUserId` FROM posts WHERE `FavoriteCount` = ( SELECT MAX(`FavoriteCount`) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "How old is the most influential user?",
    "SELECT users.Age FROM users WHERE users.Reputation = ( SELECT MAX(users.Reputation) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts with votes that were created in 2011 have a bounty of 50?",
    "SELECT COUNT(*) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`PostId` WHERE strftime('%Y', T1.`CreaionDate`) = '2011' AND T2.`BountyAmount` = 50\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the id of the youngest user?",
    "SELECT `Id` FROM users ORDER BY `Age` ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score of the post with the most popular tag?",
    "SELECT T1.Score FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T2.RelatedPostId = T1.Id INNER JOIN ( SELECT TagName, MAX(Count) AS MaxCount FROM tags GROUP BY TagName ) AS T4 ON T3.TagName = T4.TagName WHERE T4.MaxCount = ( SELECT MAX(T5.Count) FROM tags AS T5 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average monthly number of links created in 2010 for posts that have no more than 2 answers?",
    "SELECT CAST(COUNT(T1.Id) AS REAL) / 12 FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE strftime('%Y', T2.CreaionDate) = '2010' AND T2.AnswerCount <= 2\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts that were voted by user 1465, what is the id of the most valuable post?",
    "SELECT T2.`Id` FROM posts AS T2 INNER JOIN ( SELECT `PostId` FROM votes WHERE `UserId` = 1465 ) AS T1 ON T2.`Id` = T1.`PostId` ORDER BY T2.`FavoriteCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post with the oldest post link?",
    "SELECT T1.Title FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId ORDER BY T2.CreationDate ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the highest amount of badges?",
    "SELECT `DisplayName` FROM users WHERE `Id` = ( SELECT `UserId` FROM badges GROUP BY `UserId` ORDER BY COUNT(`Name`) DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "When did \"chl\" cast its first vote in a post?",
    "SELECT MIN(v.CreationDate) FROM votes v WHERE v.UserId = (SELECT Id FROM users WHERE DisplayName = 'chl')\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the date when the youngest user made his or her first post?",
    "SELECT MIN(posts.CreaionDate) AS first_post_date FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Age = (SELECT MIN(users.Age) FROM users)\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the first Autobiographer badge?",
    "SELECT u.DisplayName FROM badges AS b JOIN users AS u ON b.UserId = u.Id WHERE b.Name = 'Autobiographer' AND b.Date = ( SELECT MIN(`Date`) FROM badges WHERE `Name` = 'Autobiographer' );\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?",
    "SELECT COUNT(T2.`Id`) FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.`Location` = 'United Kingdom' AND T2.`FavoriteCount` >= 4\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of posts voted by the oldest users?",
    "SELECT AVG(NumPostsVoted) AS AvgPostsVoted FROM ( SELECT COUNT(votes.PostId) AS NumPostsVoted FROM users INNER JOIN votes ON users.Id = votes.UserId WHERE users.Age = (SELECT MAX(users.Age) AS OldestAge FROM users) ) AS SubQuery\t----- bird -----\tcodebase_community"
  ],
  [
    "Who has the highest reputation? Please give the display name.",
    "SELECT `DisplayName` FROM users ORDER BY `Reputation` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users whose reputations are higher than 2000 and the number of views is higher than 1000?",
    "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all display names of users who are adults.",
    "SELECT users.DisplayName FROM users WHERE users.Age BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts did Jay Stevens have in 2010?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerDisplayName` = 'Jay Stevens' AND YEAR(`CreationDate`) = 2010;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by Harvey Motulsky has the most views? Please give the id and title of this post.",
    "SELECT T1.Id, T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post has the highest score? Please give its id and title's name.",
    "SELECT posts.Id AS PostId, posts.Title FROM posts JOIN comments ON posts.Id = comments.PostId ORDER BY comments.Score DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of Stephen Turner's posts?",
    "SELECT AVG(posts.Score) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Stephen Turner'\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the users' display names whose posts had over 20000 views in 2011.",
    "SELECT T1.DisplayName FROM users AS T1 INNER JOIN ( SELECT T2.OwnerUserId FROM posts AS T2 WHERE T2.ViewCount > 20000 AND STRFTIME('%Y', T2.CreaionDate) = '2011' ) AS T3 ON T1.Id = T3.OwnerUserId\t----- bird -----\tcodebase_community"
  ],
  [
    "Which is the most valuable post in 2010? Please give its id and the owner's display name.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage of posts whose owners had a reputation of over 1000 in 2011?",
    "SELECT ( SELECT COUNT(posts.Id) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.Reputation > 1000 AND posts.CreationDate BETWEEN '2011-01-01' AND '2011-12-31' ) / ( SELECT COUNT(posts.Id) FROM posts ) * 100 AS percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the percentage of teenage users.",
    "SELECT CAST(COUNT(*) AS REAL) / COUNT(*) * 100 FROM users WHERE Age BETWEEN 13 AND 18\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.",
    "SELECT u.DisplayName FROM users u INNER JOIN posts p ON u.Id = p.OwnerUserId WHERE p.Title = 'Computer Game Datasets' ORDER BY p.LastEditDate DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total number of posts with views above average.",
    "SELECT COUNT(*) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT posts.PostId FROM posts LEFT JOIN comments ON posts.Id = comments.PostId WHERE `ViewCount` > 35000 AND comments.PostId IS NULL ) AS T3;\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the display name and location of the user, who was the last to edit the post with ID 183.",
    "SELECT T1.OwnerDisplayName FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T2.CreationDate = ( SELECT MAX(T3.CreationDate) FROM postHistory AS T3 WHERE T3.PostId = 183 ) AND T1.Id = 183;\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the latest badge awarded to the user with the display name Emmett.",
    "SELECT T2.`Name` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T1.`DisplayName` = 'Emmett' ORDER BY T2.`Date` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of adult users who have cast over 5000 upvotes.",
    "SELECT users.Id FROM users WHERE users.Age BETWEEN 19 AND 65 AND users.UpVotes > 5000\t----- bird -----\tcodebase_community"
  ],
  [
    "How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created.",
    "SELECT ABS(T1.Date - T2.CreationDate) FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id WHERE T2.DisplayName = 'Zolomon'\t----- bird -----\tcodebase_community"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "How many users were awarded with 'Citizen Patrol' badge?",
    "SELECT COUNT(*) FROM badges WHERE Name = 'Citizen Patrol'\t----- bird -----\tcodebase_community"
  ],
  [
    "Count the number of posts with a tag specified as 'careers'.",
    "SELECT COUNT(*) FROM posts INNER JOIN tags ON posts.Id = tags.ExcerptPostId WHERE tags.TagName = 'careers'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?",
    "SELECT Reputation, Views FROM users WHERE Id = ( SELECT Id FROM users WHERE DisplayName = 'Jarrod Dixon' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
    "SELECT COUNT(*) FROM posts WHERE Title = 'Clustering 1D data' AND PostTypeId = 1\t----- bird -----\tcodebase_community"
  ],
  [
    "When did the user known as 'IrishStat' create his or her account?",
    "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that offer a bounty amount over 30.",
    "SELECT COUNT(*) FROM votes WHERE votes.`BountyAmount` >= 30\t----- bird -----\tcodebase_community"
  ],
  [
    "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
    "SELECT ( SELECT COUNT(*) FROM posts WHERE posts.Score >= 50 AND posts.OwnerUserId = ( SELECT MAX(users.Id) FROM users ) ) AS count_above_50, ( SELECT COUNT(*) FROM posts WHERE posts.OwnerUserId = ( SELECT MAX(users.Id) FROM users ) ) AS total_posts, (SELECT CAST(count_above_50 AS REAL) / total_posts * 100 AS percentage)\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score less than 20?",
    "SELECT COUNT(*) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the tags with tag ID below 15, how many of them have 20 count of posts and below?",
    "SELECT COUNT(*) FROM ( SELECT t.Id, COUNT(*) AS PostCount FROM tags AS t JOIN posts AS p ON t.ExcerptPostId = p.Id WHERE t.Id < 15 GROUP BY t.Id HAVING PostCount <= 20 ) AS subquery\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the excerpt post ID and wiki post ID of the tag named sample?",
    "SELECT T1.ExcerptPostId, T1.WikiPostId FROM tags AS T1 INNER JOIN posts AS T2 ON T1.ExcerptPostId = T2.Id WHERE T1.TagName = 'sample'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".",
    "SELECT T1.`Reputation`, T1.`UpVotes` FROM users AS T1 WHERE T1.`Id` = ( SELECT T2.`UserId` FROM comments AS T2 WHERE T2.`Text` = 'fine, you win :)' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the texts commented on the post about linear regression.",
    "SELECT c.Text FROM comments c INNER JOIN posts p ON c.PostId = p.Id INNER JOIN postHistory ph ON p.Id = ph.PostId INNER JOIN users u ON ph.UserId = u.Id WHERE p.Title = 'How can I adapt ANOVA for binary data?'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
    "SELECT T1.Text, T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.ViewCount BETWEEN 100 AND 150 ORDER BY T1.Score DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "List the creation date and age of the user that commented with webiste.",
    "SELECT T1.`CreationDate`, T1.`Age` FROM users AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Text` LIKE '%http%' AND T2.`Text` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with 0 score, how many of the posts have view count lower than 5?",
    "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.Score = 0 AND T2.ViewCount < 5\t----- bird -----\tcodebase_community"
  ],
  [
    "In posts with 1 comment, how many of the comments have 0 score?",
    "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`CommentCount` = 1 AND T1.`Score` = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "Among products comments with 0 score, what is the total number of users ages 40 years old?",
    "SELECT COUNT(*) FROM ( SELECT users.Age FROM comments JOIN users ON comments.UserId = users.Id WHERE Score = 0 AND users.Age = 40 ) AS T;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?",
    "SELECT c.Id, c.Score, c.Text, c.CreationDate, c.UserId, c.UserDisplayName FROM comments c WHERE c.PostId = ( SELECT p.Id FROM posts p WHERE p.Title = 'Group differences on a five point Likert item' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the up vote number of the user that commented \"R is also lazy evaluated.\"?",
    "SELECT T1.`UpVotes` FROM users AS T1 WHERE T1.`Id` = ( SELECT T2.`UserId` FROM comments AS T2 WHERE T2.`Text` = 'R is also lazy evaluated.' )\t----- bird -----\tcodebase_community"
  ],
  [
    "List the comments commented by the user with a username of Harvey Motulsky.",
    "SELECT comments.* FROM comments INNER JOIN users ON comments.UserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
    "SELECT users.DisplayName FROM comments AS T1 INNER JOIN votes AS T2 ON T1.UserId = T2.UserId WHERE T2.VoteTypeId = 2 AND T2.BountyAmount = 0 AND T1.Text IN ( SELECT T3.Text FROM comments AS T3 WHERE T3.Score BETWEEN 1 AND 5 ) AND T1.UserId IN ( SELECT DISTINCT T4.UserId FROM comments AS T4 WHERE T4.Score BETWEEN 1 AND 5 );\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
    "SELECT ( SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 5 AND 10 AND T2.UpVotes IS NULL ) / ( SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 WHERE T1.Score BETWEEN 5 AND 10 ) * 100 AS percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all the superpowers of 3-D Man.",
    "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = ( SELECT id FROM superhero WHERE superhero_name = '3-D Man' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have the super power of \"Super Strength\"?",
    "SELECT COUNT(*) FROM hero_attribute WHERE `attribute_id` = ( SELECT `attribute_id` FROM attribute WHERE `attribute_name` = 'Super Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
    "SELECT COUNT(*) FROM ( SELECT T1.`hero_id` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'Super Strength' UNION ALL SELECT T1.`hero_id` FROM superhero AS T1 WHERE T1.`height_cm` > 200 ) T;\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the full names of all the superheroes with over 15 super powers.",
    "SELECT T2.full_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id GROUP BY T2.id HAVING COUNT(T1.power_id) > 15\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have blue eyes?",
    "SELECT COUNT(*) FROM superhero WHERE `eye_colour_id` = ( SELECT `id` FROM colour WHERE `colour` = 'Blue' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the colour of Apocalypse's skin?",
    "SELECT `colour` FROM colour WHERE `id` = ( SELECT `skin_colour_id` FROM superhero WHERE `superhero_name` = 'Apocalypse' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?",
    "SELECT COUNT(T1.`hero_id`) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue' INNER JOIN hero_power AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN superpower AS T4 ON T3.`power_id` = T4.`id` WHERE T4.`power_name` = 'Agility';\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
    "SELECT DISTINCT s.superhero_name FROM superhero s INNER JOIN hero_attribute ha ON s.id = ha.hero_id INNER JOIN hero_power hp ON s.id = hp.hero_id INNER JOIN colour c1 ON s.eye_colour_id = c1.id AND c1.colour = 'Blue' INNER JOIN colour c2 ON s.hair_colour_id = c2.id AND c2.colour = 'Blond'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes are published by Marvel Comics?",
    "SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id IN ( SELECT publisher_id FROM publisher WHERE publisher_name = 'Marvel Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Please give the full name of the tallest hero published by Marvel Comics.",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T3.publisher_name = 'Marvel Comics' AND T2.power_id IN ( SELECT T4.power_id FROM superpower AS T4 WHERE T4.power_name = 'Height' ) AND T1.height_cm = ( SELECT MAX(height_cm) FROM superhero AS T5 INNER JOIN hero_power AS T6 ON T5.id = T6.hero_id INNER JOIN publisher AS T7 ON T5.publisher_id = T7.id WHERE T7.publisher_name = 'Marvel Comics' AND T6.power_id IN ( SELECT T8.power_id FROM superpower AS T8 WHERE T8.power_name = 'Height' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the publisher of Sauron?",
    "SELECT publisher_name FROM publisher WHERE id = ( SELECT publisher_id FROM superhero WHERE superhero_name = 'Sauron' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, how many of them have blue eyes?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`colour` = 'Blue' AND T3.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of the superheroes from Marvel Comics?",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of \"Super Strength\"?",
    "SELECT ( (SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) / ( SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' ) ) * 100 AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes did DC Comics publish?",
    "SELECT COUNT(*) FROM superhero WHERE `publisher_id` = ( SELECT `publisher_id` FROM publisher WHERE `publisher_name` = 'DC Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher published the slowest superhero?",
    "SELECT T1.publisher_name FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id WHERE T2.id = ( SELECT T3.publisher_id FROM superhero AS T3 JOIN hero_attribute AS T4 ON T3.id = T4.hero_id WHERE T4.attribute_name = 'Speed' ORDER BY T4.attribute_value ASC LIMIT 1 )\t----- bird -----\tsuperhero"
  ],
  [
    "How many gold-eyed superheroes did Marvel Comics publish?",
    "SELECT COUNT(*) FROM superhero WHERE eye_colour_id = ( SELECT id FROM colour WHERE colour = 'Gold' ) AND publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher's name of Blue Beetle II?",
    "SELECT publisher_name FROM publisher JOIN superhero ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes with blonde hair are there?",
    "SELECT COUNT(*) FROM superhero INNER JOIN colour AS T1 ON superhero.hair_colour_id = T1.id WHERE T1.colour = 'Blond'\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the dumbest superhero?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`attribute_name` = 'Intelligence' ORDER BY T2.`attribute_value` ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is Copycat's race?",
    "SELECT race FROM race WHERE id = ( SELECT race_id FROM superhero WHERE superhero_name = 'Copycat' );\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have durability of less than 50?",
    "SELECT COUNT(DISTINCT `hero_id`) FROM ( SELECT `hero_id` FROM hero_attribute WHERE `attribute_id` = ( SELECT `id` FROM attribute WHERE `attribute_name` = 'Durability' ) AND `attribute_value` < 50 ) AS T\t----- bird -----\tsuperhero"
  ],
  [
    "What are the names of the superheroes with the power of death touch?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Death Touch'\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes have a strength value of 100?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN attribute AS T3 ON T2.`attribute_id` = T3.`id` WHERE T1.`gender_id` = (SELECT `id` FROM gender WHERE `gender` = 'Female') AND T3.`attribute_name` = 'Strength' AND T2.`attribute_value` = 100\t----- bird -----\tsuperhero"
  ],
  [
    "What is the name of the superhero that has the most powers?",
    "SELECT superhero_name FROM ( SELECT superhero.superhero_name, COUNT(hero_power.power_id) AS num_powers FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.superhero_name ) AS T WHERE num_powers = ( SELECT MAX(num_powers) FROM ( SELECT superhero.superhero_name, COUNT(hero_power.power_id) AS num_powers FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id GROUP BY superhero.superhero_name ) AS T2 )\t----- bird -----\tsuperhero"
  ],
  [
    "How many vampire superheroes are there?",
    "SELECT COUNT(*) FROM superhero WHERE race_id IN ( SELECT id FROM race WHERE race = 'Vampire' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
    "SELECT COUNT(superhero.id) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero"
  ],
  [
    "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
    "SELECT ( SELECT COUNT(*) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) - ( SELECT COUNT(*) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' ) ) AS difference\t----- bird -----\tsuperhero"
  ],
  [
    "Give the publisher ID of Star Trek.",
    "SELECT publisher.id FROM publisher WHERE publisher_name = 'Star Trek'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all superheroes.",
    "SELECT AVG(hero_attribute.attribute_value) FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes without full name?",
    "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye colour of superhero with superhero ID 75?",
    "SELECT T1.`colour` FROM colour AS T1 INNER JOIN superhero AS T2 ON T2.`eye_colour_id` = T1.`id` WHERE T2.`id` = 75\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the superpowers of the superhero called Deathlok.",
    "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = ( SELECT superhero.id FROM superhero WHERE superhero.superhero_name = 'Deathlok' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average weight of all female superheroes?",
    "SELECT AVG(`weight_kg`) FROM superhero WHERE superhero.`gender_id` = 2\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five superpowers of male superheroes.",
    "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Male') LIMIT 5;\t----- bird -----\tsuperhero"
  ],
  [
    "Give the name of the alien superheroes.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 WHERE T1.`height_cm` BETWEEN 170 AND 190 AND T1.`eye_colour_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpower of hero ID 56?",
    "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.id = 56;\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full name of Demi-God superheroes.",
    "SELECT DISTINCT superhero.full_name FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE race.race = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "How many bad superheroes are there?",
    "SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the race of the superhero who weighed 169 kg.",
    "SELECT race.race FROM superhero AS T1 JOIN race ON T1.race_id = race.id WHERE T1.weight_kg = 169\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hair colour of the human superhero who is 185 cm tall.",
    "SELECT colour.colour FROM colour INNER JOIN superhero ON colour.id = superhero.hair_colour_id INNER JOIN race ON superhero.race_id = race.id WHERE superhero.height_cm = 185 AND race.race = 'human';\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye clolour of the heaviest superhero?",
    "SELECT T2.`colour` FROM colour AS T2 WHERE T2.`id` = ( SELECT T1.`eye_colour_id` FROM superhero AS T1 ORDER BY T1.`weight_kg` DESC LIMIT 1 )\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",
    "SELECT ( (SELECT COUNT(publisher.id) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ) * 100 / (SELECT COUNT(superhero.id) FROM superhero WHERE superhero.height_cm BETWEEN 150 AND 180 ) ) AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes.",
    "SELECT full_name FROM superhero WHERE gender_id IN ( SELECT id FROM gender WHERE gender = 'Male' ) AND weight_kg > ( SELECT AVG(weight_kg) * 0.79 FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Which power do superheroes have the most of?",
    "SELECT hp.power_id, sp.power_name FROM hero_power AS hp JOIN superpower AS sp ON hp.power_id = sp.id WHERE (hp.hero_id, hp.power_id) IN ( SELECT hero_id, power_id FROM hero_power GROUP BY hero_id HAVING COUNT(power_id) = ( SELECT MAX(power_count) FROM ( SELECT hero_id, COUNT(power_id) AS power_count FROM hero_power GROUP BY hero_id ) AS temp ) )\t----- bird -----\tsuperhero"
  ],
  [
    "Indicate the attribute value of superhero Abomination.",
    "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.id = ( SELECT superhero.id FROM superhero WHERE superhero_name = 'Abomination' )\t----- bird -----\tsuperhero"
  ],
  [
    "What are the superpowers of heroes with ID 1?",
    "SELECT T2.`power_name` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T1.`hero_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have stealth power?",
    "SELECT COUNT(*) FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'stealth'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the hero's full name with the highest attribute in strength?",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average of superheroes with no skin colour?",
    "SELECT CAST(T1 AS REAL) / T2 AS average FROM ( SELECT COUNT(superhero.id) AS T1 FROM superhero WHERE superhero.skin_colour_id = 1 ) AS T1, ( SELECT COUNT(superhero.id) AS T2 FROM superhero ) AS T2\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes were published by Dark Horse Comics?",
    "SELECT COUNT(*) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the most durability published by Dark Horse Comics?",
    "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.attribute_name = 'durability' AND T3.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eyes colour of Abraham Sapien?",
    "SELECT colour.colour FROM colour INNER JOIN superhero ON colour.id = superhero.eye_colour_id WHERE superhero.full_name = 'Abraham Sapien'\t----- bird -----\tsuperhero"
  ],
  [
    "List the name of superheroes with flight power.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Flight'\t----- bird -----\tsuperhero"
  ],
  [
    "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
    "SELECT T1.`eye_colour_id`, T1.`hair_colour_id`, T1.`skin_colour_id` FROM superhero AS T1 WHERE T1.`gender_id` = (SELECT `id` FROM gender WHERE `gender` = 'Female') AND T1.`publisher_id` = (SELECT `id` FROM publisher WHERE `publisher_name` = 'Dark Horse Comics')\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
    "SELECT T1.publisher_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id INNER JOIN colour AS T4 ON T1.eye_colour_id = T4.id WHERE T2.id = T3.id AND T2.id = T4.id;\t----- bird -----\tsuperhero"
  ],
  [
    "Which group does superhero A-Bomb belong to?",
    "SELECT T1.`race` FROM race AS T1 WHERE T1.`id` = ( SELECT T2.`race_id` FROM superhero AS T2 WHERE T2.`superhero_name` = 'A-Bomb' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of blue female superheroes among all female superheroes?",
    "SELECT ( (SELECT COUNT(*) FROM superhero s WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND s.skin_colour_id IN ( SELECT id FROM colour WHERE colour = 'Blue' )) / (SELECT COUNT(*) FROM superhero s WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')) ) * 100 AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hero name and race of Charles Chandler.",
    "SELECT s.superhero_name, r.race FROM superhero s JOIN race r ON s.race_id = r.id WHERE s.full_name = 'Charles Chandler';\t----- bird -----\tsuperhero"
  ],
  [
    "What is the gender of Agent 13 hero?",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "Provide superheroes' names who have the adaptation power.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Adaptation'\t----- bird -----\tsuperhero"
  ],
  [
    "How many powers does Amazo hero have?",
    "SELECT COUNT(*) FROM hero_power WHERE hero_power.hero_id = ( SELECT superhero.id FROM superhero WHERE superhero.superhero_name = 'Amazo' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the powers of Hunter Zolomon.",
    "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = ( SELECT id FROM superhero WHERE full_name = 'Hunter Zolomon' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the heights of the heroes whose eye colours are amber.",
    "SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber'\t----- bird -----\tsuperhero"
  ],
  [
    "List the heroes' names whose eyes and hair colours are both black.",
    "SELECT T1.superhero_name FROM superhero AS T1 WHERE T1.eye_colour_id = ( SELECT id FROM colour WHERE colour = 'Black' ) AND T1.hair_colour_id = ( SELECT id FROM colour WHERE colour = 'Black' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colours of the heroes whose skin colours are gold.",
    "SELECT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.skin_colour_id = ( SELECT id FROM colour WHERE colour = 'Gold' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full names of vampire heroes.",
    "SELECT superhero.full_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire'\t----- bird -----\tsuperhero"
  ],
  [
    "Describe the names of neutral alignment superheroes.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Neutral'\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have the highest attribute value in strength?",
    "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = ( SELECT MAX(T3.attribute_value) FROM hero_attribute AS T3 INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T4.attribute_name = 'Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "What are the race and alignment of Cameron Hicks?",
    "SELECT race.race, alignment.alignment FROM superhero JOIN race ON superhero.race_id = race.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE superhero.superhero_name = 'Cameron Hicks';\t----- bird -----\tsuperhero"
  ],
  [
    "How many percent of female heroes were published by Marvel Comics?",
    "SELECT ( (SELECT COUNT(*) FROM superhero WHERE gender_id IN ( SELECT id FROM gender WHERE gender = 'Female' ) AND publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) / ( SELECT COUNT(*) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) ) * 100 AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "Find the average weight of the heroes who are aliens.",
    "SELECT AVG(T1.`weight_kg`) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.",
    "SELECT (SELECT `weight_kg` FROM superhero WHERE `full_name` = 'Emil Blonsky') - (SELECT `weight_kg` FROM superhero WHERE `full_name` = 'Charles Chandler') AS difference\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height for each superhero.",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's superpower?",
    "SELECT power_name FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Abomination' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the race of god/eternal, how many of them are male",
    "SELECT COUNT(*) FROM superhero WHERE `race_id` = ( SELECT `id` FROM race WHERE `race` = 'god/eternal' ) AND `gender_id` = ( SELECT `id` FROM gender WHERE `gender` = 'Male' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which hero was the fastest?",
    "SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Speed' AND T2.attribute_value = ( SELECT MAX(T4.attribute_value) FROM hero_attribute AS T4 INNER JOIN attribute AS T5 ON T4.attribute_id = T5.id WHERE T5.attribute_name = 'Speed' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have a neutral alignment?",
    "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3\t----- bird -----\tsuperhero"
  ],
  [
    "State all of 3-D Man's attributes along with their values.",
    "SELECT a.attribute_name, ha.attribute_value FROM hero_attribute ha INNER JOIN attribute a ON ha.attribute_id = a.id INNER JOIN superhero s ON ha.hero_id = s.id WHERE s.superhero_name = '3-D Man'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superheroes have blue eyes with brown hair?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`hair_colour_id` = T3.`id` WHERE T2.`colour` = 'Blue' AND T3.`colour` = 'Brown'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher for Hawkman, Karate Kid and Speedy?",
    "SELECT T1.`publisher_name` FROM publisher AS T1 INNER JOIN ( SELECT `publisher_id` FROM ( SELECT `publisher_id` FROM superhero WHERE `superhero_name` = 'Hawkman' ) UNION ALL SELECT `publisher_id` FROM superhero WHERE `superhero_name` = 'Karate Kid' UNION ALL SELECT `publisher_id` FROM superhero WHERE `superhero_name` = 'Speedy' ) AS T2 ON T1.`id` = T2.`publisher_id`\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes didn't have any publisher?",
    "SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = 1\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the percentage of superheroes with blue eyes.",
    "SELECT ( SELECT COUNT(superhero_name) FROM superhero WHERE eye_colour_id = 7 ) * 100.0 / ( SELECT COUNT(superhero_name) FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Find the ratio between male superheroes and female superheroes.",
    "SELECT CAST(T1 AS REAL) / T2 AS ratio FROM ( SELECT COUNT(*) AS T1 FROM superhero WHERE gender_id = 1 ) AS T1, ( SELECT COUNT(*) AS T2 FROM superhero WHERE gender_id = 2 ) AS T2\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the tallest superhero?",
    "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the power ID of cryokinesis?",
    "SELECT sp.id FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sp.power_name = 'cryokinesis';\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the name of superhero with superhero ID 294.",
    "SELECT superhero_name FROM superhero WHERE id = 294\t----- bird -----\tsuperhero"
  ],
  [
    "List the full names of superheroes with missing weight.",
    "SELECT superhero.full_name FROM superhero WHERE (superhero.weight_kg = 0 OR superhero.weight_kg IS NULL)\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name.",
    "SELECT T2.`colour` FROM colour AS T2 WHERE T2.`id` = ( SELECT T1.`eye_colour_id` FROM superhero AS T1 WHERE T1.`full_name` = 'Karen Beecher-Duncan' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpowers of the superhero has Helen Parr as their full name?",
    "SELECT T1.power_name FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` WHERE T2.`full_name` = 'Helen Parr'\t----- bird -----\tsuperhero"
  ],
  [
    "Find the race of the superhero who weighs 108kg and is 188cm tall.",
    "SELECT T2.`race` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`weight_kg` = 108 AND T1.`height_cm` = 188\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher name of the superhero ID 38?",
    "SELECT T2.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`id` = 38\t----- bird -----\tsuperhero"
  ],
  [
    "What is the race of the superhero with maximum attribute value?",
    "SELECT T1.`race` FROM race AS T1 INNER JOIN ( SELECT T1.`race_id` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`attribute_value` = ( SELECT MAX(T3.`attribute_value`) FROM hero_attribute AS T3 WHERE T3.`hero_id` = T1.`id` ) ) AS T2 ON T1.`id` = T2.`race_id`\t----- bird -----\tsuperhero"
  ],
  [
    "Give the alignment and superpowers of the superhero named Atom IV.",
    "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Atom IV' )\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full names of superheroes with blue eyes.",
    "SELECT superhero.full_name FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE attribute.attribute_name = 'Eye Colour' AND colour.colour = 'Blue'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all neutral superheroes.",
    "SELECT AVG(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T2.alignment_id = 3\t----- bird -----\tsuperhero"
  ],
  [
    "List the skin colour of the superheroes with 100 attribute value.",
    "SELECT T2.`colour` FROM hero_attribute AS T1 INNER JOIN colour AS T2 ON T1.`skin_colour_id` = T2.`id` INNER JOIN superhero AS T3 ON T1.`hero_id` = T3.`id` WHERE T1.`attribute_value` = 100;\t----- bird -----\tsuperhero"
  ],
  [
    "Count the good female superheroes.",
    "SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = 1 AND superhero.gender_id = 2\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the names of superheroes with attribute value between 75 to 80.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`attribute_value` BETWEEN 75 AND 80\t----- bird -----\tsuperhero"
  ],
  [
    "Give the race of the blue-haired male superhero.",
    "SELECT race.`race` FROM superhero INNER JOIN colour ON superhero.`hair_colour_id` = colour.`id` INNER JOIN race ON superhero.`race_id` = race.`id` INNER JOIN gender ON superhero.`gender_id` = gender.`id` WHERE colour.`colour` = 'blue' AND gender.`gender` = 'male'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the bad superheroes, what is the percentage of female superheroes?",
    "SELECT ( SELECT COUNT(*) FROM superhero WHERE alignment_id = 2 AND gender_id = 2 ) * 100.0 / ( SELECT COUNT(*) FROM superhero WHERE alignment_id = 2 )\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
    "SELECT ( SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' ) - ( SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour IS NULL ) AS difference\t----- bird -----\tsuperhero"
  ],
  [
    "How strong is the Hulk?",
    "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE superhero.superhero_name = 'Hulk' AND attribute.attribute_name = 'Strength'\t----- bird -----\tsuperhero"
  ],
  [
    "List down Ajax's superpowers.",
    "SELECT T2.power_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T1.hero_id = ( SELECT id FROM superhero WHERE superhero_name = 'Ajax' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many green-skinned villains are there in the superhero universe?",
    "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.skin_colour_id = colour.id INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE colour.colour = 'Green' AND alignment.alignment = 'Bad'\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes are in Marvel Comics?",
    "SELECT COUNT(*) FROM superhero WHERE `gender_id` = (SELECT `id` FROM gender WHERE `gender` = 'Female') AND `publisher_id` = (SELECT `id` FROM publisher WHERE `publisher_name` = 'Marvel Comics')\t----- bird -----\tsuperhero"
  ],
  [
    "Identify superheroes who can control wind and list their names in alphabetical order.",
    "SELECT DISTINCT superhero.superhero_name FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.power_id = T2.id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE T2.power_name = 'Wind Control' ORDER BY superhero.superhero_name ASC;\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the gender of the superhero who has the ability of Phoenix Force.",
    "SELECT T1.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Phoenix Force';\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the heaviest superhero in DC Comics.",
    "SELECT superhero_name FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' ) AND weight_kg = ( SELECT MAX(weight_kg) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of a non-human superhero in Dark Horse Comics?",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` WHERE T3.`publisher_name` = 'Dark Horse Comics' AND T1.`race_id` <> (SELECT `id` FROM race WHERE `race` = 'Human')\t----- bird -----\tsuperhero"
  ],
  [
    "Count the fastest superheroes.",
    "SELECT COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`attribute_name` = 'Speed' AND T2.`attribute_value` = 100\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
    "SELECT ( SELECT COUNT(*) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' ) ) - ( SELECT COUNT(*) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) AS difference\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the weakest attribute of the Black Panther.",
    "SELECT a.attribute_name FROM hero_attribute AS ha JOIN attribute AS a ON ha.attribute_id = a.id WHERE ha.hero_id = ( SELECT superhero.id FROM superhero WHERE superhero.superhero_name = 'Black Panther' ) ORDER BY ha.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's eye colour?",
    "SELECT T1.`colour` FROM colour AS T1 INNER JOIN ( SELECT `eye_colour_id` FROM superhero WHERE `superhero_name` = 'Abomination' ) AS T2 ON T1.`id` = T2.`eye_colour_id`\t----- bird -----\tsuperhero"
  ],
  [
    "Name the tallest superhero.",
    "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Name the superhero, otherwise known as Charles Chandler.",
    "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
    "SELECT ( SELECT COUNT(*) FROM superhero sh WHERE sh.publisher_id IN ( SELECT id FROM publisher pub WHERE pub.publisher_name = 'George Lucas' ) AND sh.gender_id IN ( SELECT id FROM gender WHERE gender = 'Female' ) ) / ( SELECT COUNT(*) FROM superhero sh WHERE sh.publisher_id IN ( SELECT id FROM publisher pub WHERE pub.publisher_name = 'George Lucas' ) ) * 100 AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
    "SELECT ( SELECT COUNT(*) FROM superhero sh WHERE sh.publisher_id IN ( SELECT id FROM publisher pu WHERE pu.publisher_name = 'Marvel Comics' ) AND sh.alignment_id IN ( SELECT id FROM alignment WHERE alignment = 'Good' ) ) AS good_heroes_count, ( SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id IN ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) AS total_heroes_count\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes that have John as their first name?",
    "SELECT COUNT(*) FROM superhero WHERE full_name LIKE 'John%'\t----- bird -----\tsuperhero"
  ],
  [
    "Give the hero ID of superhero with the lowest attribute value.",
    "SELECT hero_id FROM hero_attribute ORDER BY attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full name of the superhero named Alien.",
    "SELECT full_name FROM superhero WHERE superhero_name = 'Alien';\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Brown' AND T1.weight_kg < 100 AND T1.full_name IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "List the attribute value of the superhero named Aquababy.",
    "SELECT hero_attribute.attribute_value FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id WHERE superhero.superhero_name = 'Aquababy'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the weight and race of the superhero with superhero ID 40.",
    "SELECT race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.id = 40;\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height of all neutral superheroes.",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Neutral'\t----- bird -----\tsuperhero"
  ],
  [
    "List the hero ID of superheroes have intellegence as their power.",
    "SELECT T1.`hero_id` FROM hero_power AS T1 INNER JOIN superpower AS T2 ON T1.`power_id` = T2.`id` WHERE T2.`power_name` = 'Intelligence'\t----- bird -----\tsuperhero"
  ],
  [
    "Give the eye colour of Blackwulf.",
    "SELECT T1.`colour` FROM colour AS T1 INNER JOIN ( SELECT T2.`eye_colour_id` FROM superhero AS T2 WHERE T2.`superhero_name` = 'Blackwulf' ) AS T3 ON T1.`id` = T3.`eye_colour_id`\t----- bird -----\tsuperhero"
  ],
  [
    "List the power of superheroes with height greater than 80% of the average height of all superheroes.",
    "SELECT T2.power_name AS power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id WHERE T1.height_cm > ( SELECT AVG(height_cm) * 0.8 FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the reference names of the drivers who are eliminated in the first period in race number 18.",
    "SELECT DISTINCT T1.driverRef FROM qualifying AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 18 AND T2.position > 5 AND T1.q1 = ( SELECT MAX(q1) FROM qualifying WHERE raceId = 18 )\t----- bird -----\tformula_1"
  ],
  [
    "What is the surname of the driver with the best lap time in race number 19 in the second period?",
    "SELECT surname FROM drivers WHERE driverId = ( SELECT driverId FROM lapTimes WHERE raceId = ( SELECT raceId FROM races WHERE year = (SELECT year FROM seasons WHERE year = 2017) AND round = 2 ) AND lap = ( SELECT MIN(lap) FROM lapTimes WHERE raceId = ( SELECT raceId FROM races WHERE year = (SELECT year FROM seasons WHERE year = 2017) AND round = 2 ) ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the year during which the race is held on circuits in Shanghai.",
    "SELECT T2.`raceId`, T2.`year` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`location` = 'Shanghai'\t----- bird -----\tformula_1"
  ],
  [
    "Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found?",
    "SELECT `url` FROM circuits WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `name` = 'Circuit de Barcelona-Catalunya' )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the name of the race held on the circuits in Germany.",
    "SELECT T2.`name` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`country` = 'Germany'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the positions of the circuits built by the constructor Renault.",
    "SELECT T2.circuitId, T2.name, T3.position FROM constructors AS T1 INNER JOIN circuits AS T2 ON T1.constructorRef = T2.circuitRef INNER JOIN ( SELECT `circuitId`, MAX(`position`) AS `position` FROM ( SELECT `circuitId`, `position` FROM constructorStandings WHERE `constructorId` IN ( SELECT `constructorId` FROM constructors WHERE `name` = 'Renault' ) ) AS T4 GROUP BY `circuitId` ) AS T3 ON T2.circuitId = T3.circuitId WHERE T1.name = 'Renault'\t----- bird -----\tformula_1"
  ],
  [
    "How many races in the year 2010 are held on grand prixs outside Asia and Europe?",
    "SELECT COUNT(*) FROM races WHERE year = 2010 AND circuitId NOT IN ( SELECT circuitId FROM circuits WHERE location IN ('Asia', 'Europe') )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the names of the races held on the circuits in Spain.",
    "SELECT T2.`name` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`country` = 'Spain'\t----- bird -----\tformula_1"
  ],
  [
    "What is the location coordinates of the circuits for Australian grand prix?",
    "SELECT lat, lng FROM circuits WHERE name = 'Australian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Where can I find the information about the races held on Sepang International Circuit?",
    "SELECT races.* FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Sepang International Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time of the races held on Sepang International Circuit.",
    "SELECT time FROM results WHERE raceId = ( SELECT raceId FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit' ) )\t----- bird -----\tformula_1"
  ],
  [
    "Give the coordinate position for Abu Dhabi Grand Prix.",
    "SELECT lat, lng FROM circuits WHERE circuitId = ( SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the constructor which got 1 point in the race No. 24 from?",
    "SELECT c.country FROM constructors c INNER JOIN constructorResults cr ON c.constructorId = cr.constructorId INNER JOIN races r ON cr.raceId = r.raceId INNER JOIN circuits cic ON r.circuitId = cic.circuitId WHERE cr.points = 1 AND r.round = 24\t----- bird -----\tformula_1"
  ],
  [
    "What's Bruno Senna's Q1 result in the qualifying race No. 354?",
    "SELECT q1 FROM qualifying WHERE raceId = ( SELECT raceId FROM races WHERE round = 354 ) AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruno' AND surname = 'Senna' )\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?",
    "SELECT T1.nationality FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T2.q2 IS NOT NULL AND T2.q2 = '0:01:40' AND T3.year = 2019 AND T3.round = 355;\t----- bird -----\tformula_1"
  ],
  [
    "What is his number of the driver who finished 0:01:54 in the Q3 of qualifying race No.903?",
    "SELECT number FROM drivers WHERE driverId = ( SELECT driverId FROM qualifying WHERE raceId = ( SELECT raceId FROM races WHERE year = (SELECT year FROM seasons WHERE year = 2017) AND raceId = 903 ) AND q3 = '0:01:54' )\t----- bird -----\tformula_1"
  ],
  [
    "For the Bahrain Grand Prix in 2007, how many drivers not finished the game?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 LEFT JOIN lapTimes AS T2 ON T1.driverId = T2.driverId AND T1.raceId = T2.raceId WHERE T2.time IS NULL AND T1.raceId = ( SELECT raceId FROM races WHERE year = 2007 AND name = 'Bahrain Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT url FROM seasons WHERE year = ( SELECT year FROM races WHERE raceId = 901 )\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened on 2015/11/29, how many drivers finished the game?",
    "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE date = '2015-11-29' ) AND time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 592, who is the oldest?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.",
    "SELECT T1.url FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.lap = 1 AND T2.time = '0:01:27' AND T2.raceId = (SELECT raceId FROM races WHERE year = 2017 AND round = 161)\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed in race No.933, where does he come from?",
    "SELECT drivers.nationality FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN seasons ON races.year = seasons.year WHERE races.round = 933 AND seasons.year = 2017 AND results.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results WHERE results.raceId = races.raceId AND results.fastestLapSpeed IS NOT NULL );\t----- bird -----\tformula_1"
  ],
  [
    "Where is Malaysian Grand Prix held? Give the location coordinates.",
    "SELECT lat, lng FROM circuits WHERE circuitId = ( SELECT circuitId FROM races WHERE name = 'Malaysian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "For the constructor which got the highest point in the race No. 9 , what is its introduction website?",
    "SELECT T1.`url` FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.`constructorId` = T2.`constructorId` INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` INNER JOIN constructorStandings AS T4 ON T2.`constructorId` = T4.`constructorId` AND T2.`raceId` = T4.`raceId` WHERE T3.`year` = 2019 AND T3.`round` = 9 AND T4.`points` = (SELECT MAX(`points`) FROM constructorStandings WHERE T2.`raceId` = T4.`raceId`) AND T2.`raceId` = T3.`raceId`;\t----- bird -----\tformula_1"
  ],
  [
    "What's Lucas di Grassi's Q1 result in the race No. 345?",
    "SELECT q1 FROM qualifying WHERE raceId = ( SELECT raceId FROM races WHERE year = (SELECT MAX(year) FROM seasons) AND round = 345 ) AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi' )\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?",
    "SELECT T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.driverId = ( SELECT DISTINCT d.driverId FROM lapTimes AS lt JOIN races AS r ON lt.raceId = r.raceId JOIN seasons AS s ON r.year = s.year JOIN circuits AS c ON r.circuitId = c.circuitId JOIN drivers AS d ON lt.driverId = d.driverId WHERE s.year = (SELECT MAX(year) FROM seasons) AND r.round = 347 AND lt.lap = 2 AND lt.time = '0:01:15' )\t----- bird -----\tformula_1"
  ],
  [
    "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?",
    "SELECT d.code FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.q3 IS NOT NULL AND q.q3 = '0:01:33' AND q.raceId = (SELECT raceId FROM races WHERE name = 'Race No. 45');\t----- bird -----\tformula_1"
  ],
  [
    "What is the actual finish time for Bruce McLaren in the race No.743?",
    "SELECT T1.time FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Bruce' AND T2.surname = 'McLaren' AND T1.raceId = (SELECT raceId FROM races WHERE year = (SELECT year FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 743)) AND round = (SELECT round FROM races WHERE raceId = 743))\t----- bird -----\tformula_1"
  ],
  [
    "Who finished second in the San Marino Grand Prix in 2006?",
    "SELECT forename FROM drivers WHERE driverId = ( SELECT driverId FROM driverStandings WHERE raceId = ( SELECT raceId FROM races WHERE name = 'San Marino Grand Prix' AND year = 2006 ) AND position = 2 )\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT url FROM seasons WHERE year = ( SELECT year FROM races WHERE raceId = 901 )\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened in 2015/11/29, how many drivers finished the game?",
    "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE year = 2015 AND date = '2015-11-29' )\t----- bird -----\tformula_1"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "Who was the driver that got the best lap time in the race No. 348? Give his full name.",
    "SELECT forename || ' ' || surname AS full_name FROM drivers WHERE driverId = (SELECT driverId FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE year = (SELECT year FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 348))) AND time = (SELECT MIN(time) FROM lapTimes WHERE raceId = (SELECT raceId FROM races WHERE year = (SELECT year FROM seasons WHERE year = (SELECT year FROM races WHERE raceId = 348)))))\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed, what is his nationality?",
    "SELECT T1.`nationality` FROM drivers AS T1 WHERE T1.`driverId` = ( SELECT T2.`driverId` FROM lapTimes AS T2 WHERE T2.`time` = ( SELECT MAX(`time`) FROM lapTimes ) )\t----- bird -----\tformula_1"
  ],
  [
    "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
    "SELECT ( (SELECT MAX(fastestLapSpeed) AS fastest_lap_speed_853 FROM results WHERE raceId = 853 ) - ( SELECT MAX(fastestLapSpeed) AS fastest_lap_speed_854 FROM results WHERE raceId = 854 ) ) / ( SELECT MAX(fastestLapSpeed) AS fastest_lap_speed_853 FROM results WHERE raceId = 853 ) * 100 AS percentage_faster\t----- bird -----\tformula_1"
  ],
  [
    "For the drivers who took part in the race in 1983/7/16, what's their race completion rate?",
    "SELECT CAST(T1 AS REAL) / T2 AS completion_rate FROM ( SELECT COUNT(DISTINCT driverId) AS T1 FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE year = 1983 AND date = '1983-07-16' ) ) AS T1, ( SELECT COUNT(DISTINCT driverId) AS T2 FROM results WHERE date = '1983-07-16' ) AS T2\t----- bird -----\tformula_1"
  ],
  [
    "Which year was the first Singapore Grand Prix?",
    "SELECT MIN(races.year) FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Singapore Grand Prix' AND circuits.circuitId IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "How many races were there in 2005? Name all the races in descending order.",
    "SELECT * FROM races WHERE year = 2005 ORDER BY year DESC\t----- bird -----\tformula_1"
  ],
  [
    "Name the first race recorded. What are the other races that happened within the same month and year of that race.",
    "SELECT r.raceId, r.year, STRFTIME('%m', r.date) AS month, r.name FROM races r WHERE r.year = (SELECT MIN(year) FROM races) AND STRFTIME('%m', r.date) = (SELECT MIN(STRFTIME('%m', date)) FROM races) AND r.raceId != (SELECT MIN(raceId) FROM races) ORDER BY r.year, STRFTIME('%m', r.date);\t----- bird -----\tformula_1"
  ],
  [
    "State the name and date of the last round of race in year 1999.",
    "SELECT name, date FROM races WHERE year = 1999 AND round = ( SELECT MAX(round) FROM races WHERE year = 1999 )\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the most number of races?",
    "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Name the races in year 2017 that are not hosted in year 2000.",
    "SELECT DISTINCT T1.raceId FROM races AS T1 LEFT JOIN races AS T2 ON T1.circuitId = T2.circuitId AND T1.year = 2017 AND T2.year = 2000 WHERE T2.raceId IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "In which country was the first European Grand Prix hosted? Name the circuit and location.",
    "SELECT circuits.name, circuits.location FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.year = ( SELECT MIN(races.year) FROM races WHERE races.name LIKE '%European%' )\t----- bird -----\tformula_1"
  ],
  [
    "When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?",
    "SELECT year FROM races WHERE name = 'British Grand Prix' ORDER BY year DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many seasons has Silverstone Circuit hosted the United Kindom grand prix?",
    "SELECT COUNT(DISTINCT year) FROM races WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Silverstone Circuit' ) AND name = 'British Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Name all drivers in the 2010 Singapore Grand Prix order by their position stands.",
    "SELECT DISTINCT d.forename, d.surname, ds.positionText FROM drivers AS d INNER JOIN driverStandings AS ds ON d.driverId = ds.driverId WHERE ds.raceId = ( SELECT raceId FROM races WHERE year = 2010 AND name = 'Singapore Grand Prix' ) ORDER BY ds.positionText\t----- bird -----\tformula_1"
  ],
  [
    "State the driver with the most points scored. Find his full name with that points.",
    "SELECT T2.forename, T2.surname FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.points = ( SELECT MAX(T3.points) FROM driverStandings AS T3 INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId )\t----- bird -----\tformula_1"
  ],
  [
    "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.",
    "SELECT d.driverId, d.forename, d.surname, SUM(cs.points) AS total_points FROM driverStandings AS ds JOIN drivers AS d ON ds.driverId = d.driverId JOIN constructorResults AS cr ON ds.constructorId = cr.constructorId JOIN constructorStandings AS cs ON cr.constructorId = cs.constructorId WHERE cr.raceId = ( SELECT raceId FROM races WHERE year = 2017 AND name = 'Chinese Grand Prix' ) GROUP BY d.driverId, d.forename, d.surname ORDER BY total_points DESC LIMIT 3\t----- bird -----\tformula_1"
  ],
  [
    "What is the best lap time recorded? List the driver and race with such recorded lap time.",
    "SELECT T3.forename, T3.surname, T2.name FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN drivers AS T3 ON T1.`driverId` = T3.`driverId` WHERE T1.time = ( SELECT MIN(T4.time) FROM lapTimes AS T4 INNER JOIN races AS T5 ON T4.`raceId` = T5.`raceId` INNER JOIN drivers AS T6 ON T4.`driverId` = T6.`driverId` )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix?",
    "SELECT AVG(T2.time) FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2009 AND T2.name = 'Chinese Grand Prix' AND T3.forename = 'Sebastian' AND T3.surname = 'Vettel'\t----- bird -----\tformula_1"
  ],
  [
    "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
    "SELECT (COUNT(T3.raceId) - COUNT(T1.raceId)) / COUNT(T3.raceId) * 100 FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year INNER JOIN results AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T4 ON T3.driverId = T4.driverId WHERE T4.surname = 'Hamilton' AND T2.year >= 2010\t----- bird -----\tformula_1"
  ],
  [
    "Name the driver with the most winning. Mention his nationality and what is his average point scores.",
    "SELECT AVG(points) AS avg_points FROM driverStandings WHERE driverId = ( SELECT driverId FROM driverStandings GROUP BY driverId ORDER BY MAX(wins) DESC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "How old is the youngest Japanese driver? What is his name?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "List circuits which host 4 f1 races from year 1990 to 2000.",
    "SELECT DISTINCT T1.circuitId, T1.circuitRef, T1.name, T1.location, T1.country FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.year BETWEEN 1990 AND 2000 GROUP BY T1.circuitId, T1.circuitRef, T1.name, T1.location, T1.country HAVING COUNT(T2.raceId) = 4\t----- bird -----\tformula_1"
  ],
  [
    "List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.",
    "SELECT T1.`circuitRef`, T1.`location`, T2.`name` AS race_name FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`country` = 'USA' AND T2.`year` = 2006\t----- bird -----\tformula_1"
  ],
  [
    "Name the races along with its circuit name and location for f1 races hosted in September 2005.",
    "SELECT c.name, c.location FROM races AS r INNER JOIN circuits AS c ON r.circuitId = c.circuitId WHERE r.date >= '2005-09-01' AND r.date <= '2005-09-30'\t----- bird -----\tformula_1"
  ],
  [
    "Which race was Alex Yoong in when he was in track number less than 10?",
    "SELECT name FROM races WHERE raceId = (SELECT raceId FROM driverStandings WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Alex' AND surname = 'Yoong') AND position < 10)\t----- bird -----\tformula_1"
  ],
  [
    "How many times did Michael Schumacher won from races hosted in Sepang International Circuit?",
    "SELECT COUNT(*) FROM ( SELECT raceId FROM results WHERE driverId IN ( SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher' ) AND points = ( SELECT MAX(points) FROM results WHERE driverId IN ( SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher' ) ) )\t----- bird -----\tformula_1"
  ],
  [
    "State the race and year of race in which Michael Schumacher had his fastest lap.",
    "SELECT year FROM races WHERE raceId = (SELECT raceId FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher') AND milliseconds = (SELECT MIN(milliseconds) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Michael' AND surname = 'Schumacher')))\t----- bird -----\tformula_1"
  ],
  [
    "What is Eddie Irvine's average points scored in year 2000?",
    "SELECT AVG(points) FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Eddie' AND surname = 'Irvine' ) AND raceId = ( SELECT raceId FROM races WHERE year = 2000 )\t----- bird -----\tformula_1"
  ],
  [
    "Which was Lewis Hamilton first race? What was his points recorded for his first race event?",
    "SELECT results.points FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.year = ( SELECT MIN(races.year) FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "List all races in 2017 and the hosting country order by date of the event.",
    "SELECT DISTINCT races.* FROM races WHERE races.year = 2017 ORDER BY races.date\t----- bird -----\tformula_1"
  ],
  [
    "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.",
    "SELECT T1.`raceId`, T1.`year`, circuits.`location` AS `circuit` FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN circuits ON T1.`circuitId` = circuits.`circuitId` GROUP BY T2.`raceId`, circuits.`location` HAVING MAX(T2.`lap`) = (SELECT MAX(T3.`lap`) FROM lapTimes AS T3)\t----- bird -----\tformula_1"
  ],
  [
    "Among all European Grand Prix races, what is the percentage of the races were hosted in Germany?",
    "SELECT ( SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix' AND circuits.country = 'Germany' ) / ( SELECT COUNT(*) FROM races WHERE name = 'European Grand Prix' ) * 100 AS percentage FROM circuits\t----- bird -----\tformula_1"
  ],
  [
    "What's the location coordinates of Silverstone Circuit?",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitRef` = 'Silverstone'\t----- bird -----\tformula_1"
  ],
  [
    "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?",
    "SELECT `circuitRef`, `lat` FROM circuits WHERE `circuitRef` IN ('Silverstone', 'Hockenheimring', 'Hungaroring') ORDER BY `lat` DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What's the reference name of Marina Bay Street Circuit?",
    "SELECT `circuitRef` FROM circuits WHERE `name` = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "In which country can I find the circuit with the highest altitude?",
    "SELECT `country` FROM circuits ORDER BY `alt` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers don't have a code?",
    "SELECT COUNT(*) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the oldest driver from?",
    "SELECT T1.nationality FROM drivers AS T1 ORDER BY T1.dob ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the surnames of all the Italian drivers.",
    "SELECT DISTINCT T1.surname FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.driverId = T2.constructorId WHERE T2.nationality = 'Italian'\t----- bird -----\tformula_1"
  ],
  [
    "Which website should I go to if I want to know more about Anthony Davidson?",
    "SELECT T1.`url` FROM drivers AS T1 WHERE T1.`surname` = 'Davidson' AND T1.`forename` = 'Anthony'\t----- bird -----\tformula_1"
  ],
  [
    "What's Lewis Hamilton's reference name?",
    "SELECT `driverRef` FROM drivers WHERE `surname` = 'Hamilton' AND `forename` = 'Lewis'\t----- bird -----\tformula_1"
  ],
  [
    "Which circuit did the 2009 Spanish Grand Prix use?",
    "SELECT name FROM circuits WHERE circuitId = ( SELECT circuitId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list all the years that Silverstone Circuit was used in a Formula_1 race.",
    "SELECT DISTINCT year FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Silverstone'\t----- bird -----\tformula_1"
  ],
  [
    "Please give more information about the Formula_1 races that used the Silverstone Circuit.",
    "SELECT races.*, circuits.name, seasons.year, results.grid, results.number, results.points, results.position FROM races JOIN circuits ON circuits.circuitId = races.circuitId JOIN seasons ON seasons.year = races.year JOIN results ON results.raceId = races.raceId WHERE circuits.name = 'Silverstone'\t----- bird -----\tformula_1"
  ],
  [
    "What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?",
    "SELECT date FROM races WHERE year = 2010 AND circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Abu Dhabi Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "How many Formula_1 races took place on the circuits in Italy?",
    "SELECT COUNT(*) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`country` = 'Italy'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.",
    "SELECT date FROM races WHERE raceId IN ( SELECT raceId FROM races JOIN circuits ON circuits.circuitId = races.circuitId WHERE circuits.location = 'Barcelona' )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.",
    "SELECT url FROM circuits WHERE circuitId = ( SELECT circuitId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "What's the fastest lap time ever in a race for Lewis Hamilton?",
    "SELECT MIN(results.fastestLapTime) FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Yas Marina Circuit' ) ) AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' );\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN circuits AS T3 ON T2.`circuitId` = T3.`circuitId` WHERE T2.`fastestLapSpeed` IS NOT NULL AND T2.`raceId` = ( SELECT T1.`raceId` FROM results AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`fastestLapSpeed` IS NOT NULL ORDER BY T1.`fastestLapSpeed` DESC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Which driver ranked the first in the Australian Grand Prix in 2008? Please give his reference name.",
    "SELECT driverRef FROM drivers WHERE driverId = ( SELECT driverId FROM driverStandings WHERE raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND position = 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the Formula_1 races that Lewis Hamilton participated.",
    "SELECT DISTINCT r.raceId FROM races AS r JOIN results AS res ON r.raceId = res.raceId JOIN drivers AS d ON res.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race did Lewis Hamilton rank the highest?",
    "SELECT name FROM races WHERE raceId = ( SELECT raceId FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) ORDER BY position ASC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
    "SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "In which years did Lewis Hamilton participate in a Formula_1 race?",
    "SELECT DISTINCT r.year FROM races AS r INNER JOIN results AS rr ON r.raceId = rr.raceId INNER JOIN drivers AS d ON rr.driverId = d.driverId WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What was Lewis Hamilton's final rank in the 2008 Australian Grand Prix?",
    "SELECT positionOrder FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND raceId = (SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')\t----- bird -----\tformula_1"
  ],
  [
    "Which driver was in the no. 4 grid formation when starting the race in 2008's Australian Grand Prix? Please give his forename and surname.",
    "SELECT forename, surname FROM drivers WHERE driverId = ( SELECT driverId FROM results WHERE grid = 4 )\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
    "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?",
    "SELECT MIN(time) FROM lapTimes WHERE raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "What's the finish time for the driver who ranked second in 2008's Australian Grand Prix?",
    "SELECT time FROM results WHERE driverId = ( SELECT driverId FROM driverStandings WHERE raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND position = 2 ) AND raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?",
    "SELECT T1.`forename`, T1.`surname`, T3.`url` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` WHERE T3.`year` = 2008 AND T3.`name` = 'Australian Grand Prix' ORDER BY T2.`grid` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers from the USA participated in the 2008 Australian Grand Prix?",
    "SELECT COUNT(d.driverId) FROM drivers AS d INNER JOIN qualifying AS q ON d.driverId = q.driverId INNER JOIN races AS r ON q.raceId = r.raceId WHERE r.year = 2008 AND r.name = 'Australian Grand Prix' AND d.nationality = 'American'\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers that finished the race in the 2008 Australian Grand Prix, how many of them have participated in Formula_1 races?",
    "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE driverId IN ( SELECT DISTINCT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND time IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?",
    "SELECT SUM(points) FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
    "SELECT AVG(T3.fastestLapTime) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`forename` = 'Lewis' AND T2.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the rate of drivers completing all the laps in the 2008 Australian Grand Prix?",
    "SELECT (SELECT COUNT(DISTINCT raceId) FROM results WHERE year = 2008 AND circuitId = (SELECT circuitId FROM circuits WHERE name = 'Australian Grand Prix') AND time IS NOT NULL) / (SELECT COUNT(DISTINCT raceId) FROM races WHERE year = 2008 AND circuitId = (SELECT circuitId FROM circuits WHERE name = 'Australian Grand Prix'))\t----- bird -----\tformula_1"
  ],
  [
    "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
    "WITH champion AS ( SELECT time FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND position = ( SELECT MAX(position) FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) ) AND time IS NOT NULL ), last_driver AS ( SELECT time FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND position = ( SELECT MIN(position) FROM results WHERE raceId IN ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) ) AND time IS NOT NULL ) SELECT ( (SELECT MAX(`time`) FROM champion) - (SELECT MIN(`time`) FROM last_driver) ) AS difference, (SELECT MIN(`time`) FROM last_driver) AS last_driver_time;\t----- bird -----\tformula_1"
  ],
  [
    "How many circuits are there in Melbourne, Australia?",
    "SELECT COUNT(*) FROM circuits WHERE country = 'Australia' AND location = 'Melbourne'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the US circuits.",
    "SELECT T1.`lat`, T1.`lng` FROM circuits AS T1 JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`year` = '2023' AND T1.`location` LIKE '%USA%'\t----- bird -----\tformula_1"
  ],
  [
    "How many British drivers were born after 1980?",
    "SELECT COUNT(*) FROM drivers AS T1 WHERE T1.nationality = 'British' AND T1.dob > 1980\t----- bird -----\tformula_1"
  ],
  [
    "What are the average points of British constructors?",
    "SELECT AVG(T2.`points`) FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`nationality` = 'British'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor has the highest point?",
    "SELECT name FROM constructors WHERE constructorId = ( SELECT constructorId FROM constructorResults ORDER BY points DESC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the constructor names with 0 points at race 291.",
    "SELECT T2.name FROM constructorResults AS T1 INNER JOIN constructorStandings AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`raceId` = 291 AND T2.`points` = 0;\t----- bird -----\tformula_1"
  ],
  [
    "How many Japanese constructors have 0 points in 2 races?",
    "SELECT COUNT(DISTINCT T2.constructorId) FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T2.nationality = 'Japanese' AND T1.points = 0 AND T1.raceId IN ( SELECT DISTINCT raceId FROM constructorResults WHERE points = 0 GROUP BY raceId HAVING COUNT(DISTINCT raceId) = 2 )\t----- bird -----\tformula_1"
  ],
  [
    "Which constructors have been ranked 1?",
    "SELECT DISTINCT T1.`constructorId` FROM constructorStandings AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`position` = 1;\t----- bird -----\tformula_1"
  ],
  [
    "How many French constructors have a lap number of over 50?",
    "SELECT COUNT(T1.`constructorId`) FROM constructors AS T1 INNER JOIN ( SELECT DISTINCT T2.`constructorId` FROM lapTimes AS T2 INNER JOIN constructors AS T3 ON T2.`constructorId` = T3.`constructorId` WHERE T2.`lap` > 50 ) AS T4 ON T1.`constructorId` = T4.`constructorId`;\t----- bird -----\tformula_1"
  ],
  [
    "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
    "SELECT ( (SELECT COUNT(DISTINCT D.driverId) FROM drivers D WHERE D.nationality = 'Japanese' AND D.dob BETWEEN '2007-01-01' AND '2009-12-31' AND D.dob IS NOT NULL ) / (SELECT COUNT(DISTINCT D.driverId) FROM drivers D WHERE D.dob BETWEEN '2007-01-01' AND '2009-12-31' AND D.dob IS NOT NULL ) ) * 100 AS race_completion_percentage\t----- bird -----\tformula_1"
  ],
  [
    "What is the average time in seconds of champion for each year?",
    "SELECT T1.`year`, AVG(CAST(T2.`time` AS REAL)) AS `Average Time` FROM results AS T1 INNER JOIN seasons AS T3 ON T1.`raceId` = T3.`year` INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`position` = 1 GROUP BY T1.`year`\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "How many Italian drivers haven't finished the race?",
    "SELECT COUNT(T2.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.time IS NULL AND T2.nationality = 'Italian'\t----- bird -----\tformula_1"
  ],
  [
    "Which driver has the fastest lap time? Please give their forenames and surnames.",
    "SELECT MIN(`time`) FROM lapTimes\t----- bird -----\tformula_1"
  ],
  [
    "What is the fastest lap number of the champion in 2009?",
    "SELECT T1.lap FROM lapTimes AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId AND T1.raceId = T2.raceId WHERE T2.driverId = ( SELECT T1.driverId FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2009 AND T1.positionText = '1' ) AND T1.time IS NOT NULL ORDER BY T1.time ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the average of fastest lap speed in the 2009 Spanish Grand Prix race?",
    "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Which race has the shortest actual finishing time? Please give the name and year.",
    "SELECT T1.`name`, T1.`year` FROM races AS T1 JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`milliseconds` IS NOT NULL AND T2.`milliseconds` = ( SELECT MIN(T3.`milliseconds`) FROM results AS T3 WHERE T3.`raceId` = T1.`raceId` AND T3.`milliseconds` IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
    "SELECT (SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.dob < 1985 AND T2.lap > 50) / (SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN races AS T2 ON T1.driverId = T2.driverId WHERE T2.year BETWEEN 2000 AND 2005) * 100\t----- bird -----\tformula_1"
  ],
  [
    "How many French drivers who obtain the laptime less than 02:00.00?",
    "SELECT COUNT(*) FROM ( SELECT T1.`driverId` FROM ( SELECT DISTINCT T1.`driverId` FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.`nationality` = T2.`nationality` WHERE T2.`nationality` = 'French' ) AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`time` < '02:00.00' ) AS T1\t----- bird -----\tformula_1"
  ],
  [
    "List out the code for drivers who have nationality in America.",
    "SELECT T1.`driverRef` FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.`nationality` = T2.`nationality` WHERE T2.`nationality` = 'America'\t----- bird -----\tformula_1"
  ],
  [
    "List out the Id number of races which were hold in 2009.",
    "SELECT raceId FROM races WHERE year = 2009\t----- bird -----\tformula_1"
  ],
  [
    "How many driver participated in race ID number 18?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM driverStandings AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.raceId = 18\t----- bird -----\tformula_1"
  ],
  [
    "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?",
    "SELECT COUNT(*) FROM ( SELECT T1.driverId FROM drivers AS T1 ORDER BY T1.dob ASC LIMIT 3 ) AS T2 JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T3.nationality = 'Dutch'\t----- bird -----\tformula_1"
  ],
  [
    "What is reference name of Robert Kubica?",
    "SELECT driverRef FROM drivers WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica' )\t----- bird -----\tformula_1"
  ],
  [
    "How many Australian drivers who were born in 1980?",
    "SELECT COUNT(*) FROM drivers AS T1 WHERE T1.`dob` IS NOT NULL AND strftime('%Y', T1.`dob`) = '1980'\t----- bird -----\tformula_1"
  ],
  [
    "List out top 3 German drivers who were born from 1980-1990 and have the earliest lap time.",
    "SELECT T1.`driverId`, MIN(T1.`time`) AS earliest_lap_time FROM lapTimes AS T1 WHERE T1.`driverId` IN ( SELECT DISTINCT T1.`driverId` FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.`nationality` = T2.`nationality` WHERE T1.`nationality` = 'German' AND T1.`dob` BETWEEN '1980-01-01' AND '1990-12-31' ) GROUP BY T1.`driverId` ORDER BY earliest_lap_time LIMIT 3\t----- bird -----\tformula_1"
  ],
  [
    "Please state the reference name of the oldest German driver.",
    "SELECT `driverRef` FROM drivers WHERE `nationality` = 'German' ORDER BY `dob` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers.",
    "SELECT T1.driverId, T1.code FROM ( SELECT DISTINCT T1.driverId, T1.code FROM drivers AS T1 WHERE T1.dob LIKE '1971%' ) AS T1 INNER JOIN ( SELECT T1.driverId, T1.code, MIN(T2.time) AS fastestLapTime FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId, T1.code ) AS T2 ON T1.driverId = T2.driverId AND T1.code = T2.code\t----- bird -----\tformula_1"
  ],
  [
    "List out top 10 Spanish drivers who were born before 1982 and have the latest lap time.",
    "SELECT T1.driverId, MAX(T2.time) AS latest_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'Spanish' AND T1.dob < '1982-01-01' GROUP BY T1.driverId ORDER BY latest_lap_time DESC LIMIT 10;\t----- bird -----\tformula_1"
  ],
  [
    "State the racing year which has the fastest lap time?",
    "SELECT year FROM races JOIN results ON races.raceId = results.raceId WHERE results.fastestLapTime IS NOT NULL ORDER BY results.fastestLapTime ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the lowest speed of lap time?",
    "SELECT year FROM ( SELECT DISTINCT year FROM races JOIN lapTimes ON races.raceId = lapTimes.raceId WHERE lapTimes.time IS NOT NULL ) AS subquery ORDER BY MAX(CAST(REPLACE(lapTimes.time, ':', '')) + 0) ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
    "SELECT DISTINCT T1.driverId FROM lapTimes AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId AND T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T1.lap = 1 ORDER BY T2.time ASC LIMIT 5;\t----- bird -----\tformula_1"
  ],
  [
    "From race no. 50 to 100, how many finishers have been disqualified?",
    "SELECT COUNT(*) FROM results WHERE raceId > 50 AND raceId < 100 AND statusId = 2 AND time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "How many times the circuits were held in Austria? Please give their location and coordinates.",
    "SELECT location, lat, lng FROM circuits WHERE country = 'Austria'\t----- bird -----\tformula_1"
  ],
  [
    "What race number has the most finishers?",
    "SELECT raceId FROM ( SELECT raceId, COUNT(DISTINCT driverId) AS finishers FROM results WHERE time IS NOT NULL GROUP BY raceId ORDER BY finishers DESC ) AS T LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "On what year did the youngest driver had his first qualifying race? State the name, date and time of the race.",
    "SELECT T1.`year`, T1.`date`, T1.`time` FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN drivers AS T3 ON T2.`driverId` = T3.`driverId` WHERE T3.`surname` = 'Max' ORDER BY T1.`year` ASC, T1.`date` ASC, T1.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many American drivers have been disqualified from the race.",
    "SELECT COUNT(*) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId INNER JOIN constructors ON results.constructorId = constructors.constructorId WHERE drivers.nationality = 'American' AND results.statusId = 2\t----- bird -----\tformula_1"
  ],
  [
    "Which of the Italian constructor got the highest point to date? Give its introduction website?",
    "SELECT T1.url FROM constructors AS T1 INNER JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'Italian' AND T2.points = (SELECT MAX(T3.points) FROM constructorResults AS T3 WHERE T3.constructorId = T2.constructorId)\t----- bird -----\tformula_1"
  ],
  [
    "What is the website of the constructor who tallied the most total wins.",
    "SELECT MAX(total_wins) AS max_wins FROM ( SELECT T2.`constructorRef`, SUM(CASE WHEN T3.`positionText` = '1' THEN 1 ELSE 0 END) AS total_wins FROM constructorResults AS T1 JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` JOIN results AS T3 ON T1.`raceId` = T3.`raceId` AND T1.`constructorId` = T3.`constructorId` GROUP BY T2.`constructorRef` ) AS T4\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers who participated in the French Grand Prix, who has the slowest time in the 3rd lap.",
    "SELECT driverId FROM lapTimes WHERE raceId = ( SELECT raceId FROM races WHERE name = 'French Grand Prix' ) AND lap = 3 AND time = ( SELECT MAX(time) FROM lapTimes WHERE raceId = ( SELECT raceId FROM races WHERE name = 'French Grand Prix' ) AND lap = 3 )\t----- bird -----\tformula_1"
  ],
  [
    "In which race did the fastest 1st lap time was recorded? Please indicate the time in milliseconds.",
    "SELECT T1.`time` FROM lapTimes AS T1 WHERE T1.`lap` = 1 ORDER BY T1.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
    "SELECT AVG(T1.`fastestLapTime`) FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2006 AND T2.`name` LIKE '%United States%' AND T1.`driverId` IN ( SELECT DISTINCT T1.`driverId` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2006 AND T2.`name` LIKE '%United States%' ORDER BY T1.`rank` ASC LIMIT 10 )\t----- bird -----\tformula_1"
  ],
  [
    "List down top 5 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
    "SELECT * FROM pitStops WHERE raceId IN ( SELECT raceId FROM races WHERE year BETWEEN 1980 AND 1985 ) LIMIT 5;\t----- bird -----\tformula_1"
  ],
  [
    "Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.",
    "SELECT T1.time FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Canadian Grand Prix' AND T2.year = 2008 AND T1.position = 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
    "SELECT T1.`url` FROM constructors AS T1 INNER JOIN results AS T2 ON T1.`constructorId` = T2.`constructorId` INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` WHERE T3.`name` = 'Singapore Grand Prix' AND T3.`year` = 2009 AND T2.`position` = 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the full name and date of birth of Austrian drivers born between 1981 and 1991?",
    "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.nationality = T2.nationality WHERE T2.nationality = 'Austrian' AND T1.dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1"
  ],
  [
    "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.",
    "SELECT CONCAT(T1.forename, ' ', T1.surname) AS FFull name, 'https://en.wikipedia.org/wiki/' || T1.surname || '_' || T1.forename AS Wiki Pedia page link, T1.dob AS Date of birth FROM drivers AS T1 WHERE T1.dob BETWEEN '1971-01-01' AND '1985-12-31' AND T1.nationality = 'German' ORDER BY T1.dob DESC;\t----- bird -----\tformula_1"
  ],
  [
    "In which location does the Hungaroring circuit located? Also, find the country and coordinates of this circuit?",
    "SELECT `lat`, `lng` FROM circuits WHERE `name` = 'Hungaroring'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
    "SELECT MAX(points) AS max_points, constructorResults.constructorId, constructors.name, constructors.nationality FROM constructorResults INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId INNER JOIN races ON constructorResults.raceId = races.raceId WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructorResults.constructorId, constructors.name, constructors.nationality ORDER BY max_points DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the average score of Lewis Hamilton among all the Turkish Grand Prix?",
    "SELECT AVG(points) FROM ( SELECT points FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND raceId IN ( SELECT raceId FROM races WHERE name LIKE '%Turkish%' ) )\t----- bird -----\tformula_1"
  ],
  [
    "What is the annual average number of races held during the first 10 years of the 21st century?",
    "SELECT AVG(race_count) AS avg_races_per_year FROM ( SELECT year, COUNT(*) AS race_count FROM races WHERE year BETWEEN 2000 AND 2010 GROUP BY year ) AS subquery\t----- bird -----\tformula_1"
  ],
  [
    "Which citizenship do the vast majority of the drivers hold?",
    "SELECT T1.`nationality` FROM drivers AS T1 GROUP BY T1.`nationality` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
    "SELECT T1.wins FROM driverStandings AS T1 WHERE T1.driverId = ( SELECT T2.driverId FROM driverStandings AS T2 WHERE T2.position = 91 )\t----- bird -----\tformula_1"
  ],
  [
    "In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?",
    "SELECT T2.`name` FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`fastestLapSpeed` = ( SELECT MIN(T3.`fastestLapSpeed`) FROM results AS T3 WHERE T3.`raceId` = T1.`raceId` )\t----- bird -----\tformula_1"
  ],
  [
    "Which racetrack hosted the most recent race? Indicate the full location.",
    "SELECT circuits.location, circuits.country FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE races.date = (SELECT MAX(date) FROM races)\t----- bird -----\tformula_1"
  ],
  [
    "What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?",
    "SELECT forename || ' ' || surname AS full_name FROM drivers WHERE driverId = ( SELECT driverId FROM qualifying WHERE raceId = ( SELECT raceId FROM qualifying WHERE year = 2008 AND circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) AND position = 3 ) AND position = 1 )\t----- bird -----\tformula_1"
  ],
  [
    "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.",
    "SELECT d.forename || ' ' || d.surname AS full_name, d.nationality, q.raceId FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE d.dob = (SELECT MAX(dob) FROM drivers) AND q.position = 1 AND q.raceId IN (SELECT raceId FROM qualifying);\t----- bird -----\tformula_1"
  ],
  [
    "How many accidents did the driver who had the highest number accidents in the Canadian Grand Prix have?",
    "SELECT COUNT(*) FROM results WHERE driverId = ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Canadian Grand Prix' ) AND statusId = 3 GROUP BY driverId ORDER BY COUNT(*) DESC LIMIT 1 ) AND statusId = 3\t----- bird -----\tformula_1"
  ],
  [
    "How many wins was achieved by the oldest racer? Indicate his/her full name.",
    "SELECT forename, surname FROM drivers WHERE driverId IN ( SELECT driverId FROM drivers WHERE dob = (SELECT MAX(dob) FROM drivers) )\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time a driver had ever spent at a pit stop?",
    "SELECT MAX(T1.duration) FROM pitStops AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId\t----- bird -----\tformula_1"
  ],
  [
    "Among all the lap records set on various circuits, what is the time for the fastest one?",
    "SELECT circuits.name FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE lapTimes.time = (SELECT MIN(time) FROM lapTimes)\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time that Lewis Hamilton had spent at a pit stop?",
    "SELECT MAX(T1.duration) FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?",
    "SELECT lap FROM pitStops WHERE raceId = ( SELECT raceId FROM races WHERE year = 2011 AND name = 'Australian Grand Prix' ) AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time each driver spent at the pit stop during the 2011 Australian Grand Prix.",
    "SELECT T1.time FROM pitStops AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2011\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
    "SELECT MIN(time) AS fastest_lap_time FROM lapTimes WHERE raceId IN ( SELECT raceId FROM results WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND raceId IN ( SELECT raceId FROM races WHERE name LIKE '%Formula_1%' ) ) AND driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' ) AND time IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the shortest lap time ever record in a Formula_1 race? Please give his full name.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` INNER JOIN circuits AS T4 ON T3.`circuitId` = T4.`circuitId` WHERE T4.`name` = 'F1' AND T2.`time` = ( SELECT MIN(T5.time) FROM lapTimes AS T5 INNER JOIN races AS T6 ON T5.`raceId` = T6.`raceId` INNER JOIN circuits AS T7 ON T6.`circuitId` = T7.`circuitId` WHERE T7.`name` = 'F1' ) AND T2.`time` IS NOT NULL AND T2.`time` = ( SELECT MIN(time) FROM lapTimes WHERE raceId IN ( SELECT raceId FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'F1' ) ) )\t----- bird -----\tformula_1"
  ],
  [
    "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?",
    "SELECT position FROM lapTimes WHERE raceId = (SELECT raceId FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND time = (SELECT MIN(time) FROM lapTimes WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'))) AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record for the Austrian Grand Prix Circuit?",
    "SELECT MIN(lapTimes.time) AS fastest_lap_time FROM lapTimes WHERE lapTimes.raceId IN ( SELECT races.raceId FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Austrian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the lap records for the circuits in Italy.",
    "SELECT T1.`lap`, T1.`time`, T1.`milliseconds` FROM lapTimes AS T1 INNER JOIN circuits AS T2 ON T1.`raceId` = T2.`circuitId` WHERE T2.`country` = 'Italy'\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?",
    "SELECT lt.time FROM lapTimes lt JOIN races r ON r.raceId = lt.raceId JOIN circuits c ON c.circuitId = r.circuitId WHERE c.name = 'Austrian Grand Prix' AND lt.position = 1;\t----- bird -----\tformula_1"
  ],
  [
    "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
    "SELECT duration FROM pitStops WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Austrian Grand Prix' ) AND driverId = ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Austrian Grand Prix' ) AND statusId IN ( SELECT statusId FROM status WHERE status = 'Withdrew' ) )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the circuits whose lap record is 1:29.488.",
    "SELECT lat, lng FROM circuits WHERE circuitId = ( SELECT circuitId FROM lapTimes WHERE time = '1:29.488' )\t----- bird -----\tformula_1"
  ],
  [
    "What was the average time in milliseconds Lewis Hamilton spent at a pit stop during Formula_1 races?",
    "SELECT AVG(pitStops.milliseconds) AS average_pit_stop_time FROM pitStops JOIN drivers ON pitStops.driverId = drivers.driverId WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?",
    "SELECT AVG(T2.`time`) FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.`circuitId` = T2.`raceId` WHERE T1.`country` = 'Italy'\t----- bird -----\tformula_1"
  ],
  [
    "Which player has the highest overall rating? Indicate the player's api id.",
    "SELECT `player_api_id` FROM Player_Attributes ORDER BY `overall_rating` DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the height of the tallest player? Indicate his name.",
    "SELECT player_name FROM Player WHERE height = ( SELECT MAX(height) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the player with the lowest potential?",
    "SELECT T1.`preferred_foot` FROM Player_Attributes AS T1 WHERE T1.`player_api_id` = ( SELECT T2.`player_api_id` FROM Player_Attributes AS T2 WHERE T2.`potential` = ( SELECT MIN(T3.`potential`) FROM Player_Attributes AS T3 ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
    "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating >= 60 AND overall_rating < 65 AND defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
    "SELECT `player_api_id` FROM Player_Attributes ORDER BY `crossing` DESC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most goals in the 2016 season?",
    "SELECT T1.`name` FROM League AS T1 INNER JOIN Match AS T2 ON T1.`id` = T2.`league_id` WHERE T2.`season` = '2015/2016' GROUP BY T1.`name` ORDER BY SUM(T2.`home_team_goal` + T2.`away_team_goal`) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which home team had lost the fewest matches in the 2016 season?",
    "SELECT Match.home_team_api_id FROM Match WHERE Match.season = '2015/2016' AND Match.home_team_goal - Match.away_team_goal < 0 GROUP BY Match.home_team_api_id HAVING COUNT(*) = ( SELECT COUNT(*) FROM Match WHERE Match.season = '2015/2016' AND Match.home_team_goal - Match.away_team_goal < 0 GROUP BY Match.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Indicate the full names of the top 10 players with the highest number of penalties.",
    "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.penalties = ( SELECT MAX(Player_Attributes.penalties) FROM Player_Attributes ) ORDER BY Player.player_name LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "In Scotland Premier League, which away team won the most during the 2010 season?",
    "SELECT T2.team_long_name FROM Team AS T2 INNER JOIN Match AS T1 ON T2.team_api_id = T1.away_team_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id WHERE T3.name = 'Scotland Premier League' AND T1.season = '2009/2010' AND T1.away_team_goal > T1.home_team_goal AND T1.away_team_api_id = ( SELECT MAX(T4.away_team_api_id) FROM Match AS T4 INNER JOIN League AS T5 ON T4.league_id = T5.id WHERE T5.name = 'Scotland Premier League' AND T4.season = '2009/2010' AND T4.away_team_goal > T4.home_team_goal )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed?",
    "SELECT T2.buildUpPlaySpeed FROM ( SELECT T1.`team_api_id`, T1.`team_short_name`, T2.buildUpPlaySpeed FROM Team_Attributes AS T1 INNER JOIN ( SELECT `team_api_id`, MAX(buildUpPlaySpeed) AS max_speed FROM Team_Attributes GROUP BY `team_api_id` ORDER BY max_speed DESC LIMIT 4 ) AS T2 ON T1.`team_api_id` = T2.`team_api_id` ) AS T3\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which League had the most matches end as draw in the 2016 season?",
    "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' AND T1.home_team_goal = T1.away_team_goal GROUP BY T2.name ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
    "SELECT (strftime('%Y', CURRENT_DATE) - strftime('%Y', T1.birthday)) AS age FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.sprint_speed >= 97 AND T1.birthday BETWEEN '2013-01-01 00:00:00' AND '2015-12-31 00:00:00' AND T1.birthday IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the name of the league with the highest matches of all time and how many matches were played in the said league.",
    "SELECT COUNT(Match.id) FROM League INNER JOIN Match ON League.id = Match.league_id WHERE League.name = ( SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id GROUP BY League.name ORDER BY COUNT(Match.id) DESC LIMIT 1 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average height of players born between 1990 and 1995?",
    "SELECT AVG(T1.`height`) FROM Player AS T1 WHERE T1.`birthday` >= '1990-01-01 00:00:00' AND T1.`birthday` < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the players' api id who had the highest above average overall ratings in 2010.",
    "SELECT `player_api_id` FROM Player_Attributes WHERE overall_rating > ( SELECT AVG(overall_rating) FROM Player_Attributes WHERE substr(date, 1, 4) = '2010' ) AND substr(date, 1, 4) = '2010' ORDER BY overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.",
    "SELECT `team_fifa_api_id` FROM Team_Attributes WHERE `buildUpPlaySpeed` BETWEEN 51 AND 59\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the long name of teams with above-average build-up play passing in 2012.",
    "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE strftime('%Y', T1.date) = '2012' AND T1.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Team_Attributes AS T3 WHERE strftime('%Y', T3.date) = '2012' GROUP BY T3.team_api_id )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",
    "SELECT CAST( (SELECT COUNT(T1.`player_api_id`) FROM Player_Attributes AS T1 WHERE T1.`preferred_foot` = 'left' ) AS REAL) / ( SELECT COUNT(T1.`player_api_id`) FROM Player_Attributes AS T1 ) * 100\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 5 leagues in ascending order of the number of goals made in all seasons combined.",
    "SELECT League.name, SUM(home_team_goal + away_team_goal) AS total_goals FROM Match JOIN League ON Match.league_id = League.id GROUP BY League.name ORDER BY total_goals DESC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "Find the average number of long-shot done by Ahmed Samir Farag.",
    "SELECT CAST(SUM(Player_Attributes.long_shots) AS REAL) / COUNT(Player.player_fifa_api_id) FROM Player_Attributes JOIN Player ON Player_Attributes.player_fifa_api_id = Player.player_fifa_api_id WHERE Player.player_name = 'Ahmed Samir Farag' AND Player_Attributes.long_shots IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
    "SELECT T1.`player_name` FROM ( SELECT T1.`player_api_id`, AVG(T2.`heading_accuracy`) AS `avg_heading_accuracy` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`height` > 180 GROUP BY T1.`player_api_id` ) AS T3 JOIN Player AS T1 ON T3.`player_api_id` = T1.`player_api_id` ORDER BY T3.`avg_heading_accuracy` DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
    "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date >= '2014-01-01 00:00:00' AND T1.date <= '2014-01-31 00:00:00' HAVING AVG(T1.chanceCreationPassing) < ( SELECT AVG(chanceCreationPassing) FROM ( SELECT chanceCreationPassing FROM Team_Attributes AS T3 INNER JOIN Team AS T4 ON T3.team_api_id = T4.team_api_id WHERE T3.buildUpPlayDribblingClass = 'Normal' AND T3.date >= '2014-01-01 00:00:00' AND T3.date <= '2014-01-31 00:00:00' ) AS T5 ) ORDER BY T1.chanceCreationPassing DESC\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
    "SELECT T1.`name` FROM League AS T1 INNER JOIN Match AS T2 ON T1.`id` = T2.`league_id` WHERE T2.`season` = '2009/2010' AND (SELECT AVG(T2.`home_team_goal`) FROM Match AS T3 WHERE T3.`league_id` = T2.`league_id`) > (SELECT AVG(T2.`away_team_goal`) FROM Match AS T4 WHERE T4.`league_id` = T2.`league_id`)\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the short name of the football team Queens Park Rangers?",
    "SELECT `team_short_name` FROM Team WHERE `team_long_name` = 'Queens Park Rangers'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football players with a birthyear of 1970 and a birthmonth of October.",
    "SELECT T1.player_name FROM Player AS T1 WHERE STRFTIME('%Y-%m-%d', T1.birthday) BETWEEN '1970-10-01' AND '1970-10-31'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the attacking work rate of the football playerr Franco Zennaro?",
    "SELECT `attacking_work_rate` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Franco Zennaro' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch?",
    "SELECT T2.`buildUpPlayPositioningClass` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'ADO Den Haag';\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
    "SELECT `finishing` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Francois Affolter' ) AND `date` = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the overall rating of the football player Gabriel Tamas in year 2011?",
    "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas' ) AND date = ( SELECT date FROM Player WHERE player_name = 'Gabriel Tamas' ) AND strftime('%Y', date) = '2011'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
    "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND Match.league_id = ( SELECT id FROM League WHERE name = 'Scotland Premier League' );\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the youngest football player?",
    "SELECT T1.preferred_foot FROM Player AS T1 INNER JOIN ( SELECT T2.player_api_id FROM Player AS T2 ORDER BY T2.birthday DESC LIMIT 1 ) AS T3 ON T1.player_api_id = T3.player_api_id WHERE T1.preferred_foot IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest potential score.",
    "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among all the players whose weight is under 130, how many of them preferred foot in attacking is left?",
    "SELECT COUNT(*) FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.weight < 130 AND pa.preferred_foot = 'left';\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football teams that has a chance creation passing class of Risky. Inidcate its short name only.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the defensive work rate of the football player David Wilson\n?",
    "SELECT `defensive_work_rate` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'David Wilson' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "When is the birthday of the football player who has the highest overall rating?",
    "SELECT T2.birthday FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of the football league in the country of Netherlands?",
    "SELECT T2.`name` FROM Country AS T1 INNER JOIN League AS T2 ON T1.`id` = T2.`country_id` WHERE T1.`name` = 'Netherlands'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
    "SELECT AVG(home_team_goal) FROM Match WHERE `season` = '2010/2011' AND `country_id` = ( SELECT `id` FROM Country WHERE `name` = 'Poland' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who has the highest average finishing rate between the highest and shortest football player?",
    "SELECT CASE WHEN (SELECT AVG(`finishing`) FROM Player_Attributes WHERE `player_api_id` IN ( SELECT `player_api_id` FROM Player WHERE height = (SELECT MAX(`height`) FROM Player) ) ) > (SELECT AVG(`finishing`) FROM Player_Attributes WHERE `player_api_id` IN ( SELECT `player_api_id` FROM Player WHERE height = (SELECT MIN(`height`) FROM Player) ) ) THEN (SELECT AVG(`finishing`) FROM Player_Attributes WHERE `player_api_id` IN ( SELECT `player_api_id` FROM Player WHERE height = (SELECT MAX(`height`) FROM Player) ) ) ELSE (SELECT AVG(`finishing`) FROM Player_Attributes WHERE `player_api_id` IN ( SELECT `player_api_id` FROM Player WHERE height = (SELECT MIN(`height`) FROM Player) ) ) END AS Higher_Finishing_Rate\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list player names which are higher than 180.",
    "SELECT Player.player_name FROM Player WHERE Player.height > 180\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players were born after 1990?",
    "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) = '1990'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players whose first names are Adam and weigh more than 170?",
    "SELECT COUNT(*) FROM ( SELECT * FROM Player WHERE Player.player_name LIKE 'Adam%' ) AS T1 WHERE T1.weight > 170\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which players had an overall rating of over 80 from 2008 to 2010? Please list player names.",
    "SELECT T2.`player_name` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`overall_rating` > 80 AND strftime('%Y', T1.`date`) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Doran's potential score?",
    "SELECT `potential` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Doran' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List out of players whose preferred foot is left.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list all team names which the speed class is fast.",
    "SELECT T2.`team_long_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlaySpeedClass` = 'Fast'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the passing class of CLB team?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which teams have build up play passing more than 70? Please list their short names.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "From 2010 to 2015, what was the average overall rating of players who are higher than 170?",
    "SELECT AVG(Player_Attributes.overall_rating) FROM Player_Attributes WHERE height > 170 AND strftime('%Y', date) BETWEEN '2010' AND '2015';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which football player has the shortest height?",
    "SELECT Player.player_name FROM Player WHERE Player.height = ( SELECT MIN(Player.height) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the league Italy Serie A from?",
    "SELECT `name` FROM Country WHERE `id` = ( SELECT `country_id` FROM League WHERE `name` = 'Italy Serie A' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
    "SELECT T2.`team_short_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlaySpeed` = 31 AND T1.`buildUpPlayDribbling` = 53 AND T1.`buildUpPlayPassing` = 32\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the football player Aaron Doran?",
    "SELECT AVG(`overall_rating`) FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Doran' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?",
    "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Germany 1. Bundesliga' AND strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the short name of the football team that had a home team goal of 10?",
    "SELECT T2.`team_short_name` FROM Match AS T1 INNER JOIN Team AS T2 ON T1.`home_team_api_id` = T2.`team_api_id` WHERE T1.`home_team_goal` = 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest balance score and potential score of 61.",
    "SELECT T1.* FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.balance = (SELECT MAX(balance) FROM Player_Attributes) AND T2.potential = 61;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
    "SELECT (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Abdou Diallo')) - (SELECT AVG(ball_control) FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Aaron Appindangoye')) AS difference\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the long name for the team GEN?",
    "SELECT `team_long_name` FROM Team WHERE `team_short_name` = 'GEN'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is older, Aaron Lennon or Abdelaziz Barrada?",
    "SELECT CASE WHEN T1.`birthday` > T2.`birthday` THEN 'Aaron Lennon' WHEN T1.`birthday` < T2.`birthday` THEN 'Abdelaziz Barrada' ELSE 'Same birthday' END AS Older_Player FROM ( SELECT `birthday` FROM Player WHERE `player_name` = 'Aaron Lennon' ) T1 JOIN ( SELECT `birthday` FROM Player WHERE `player_name` = 'Abdelaziz Barrada' ) T2\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is the tallest?",
    "SELECT Player.player_name FROM Player ORDER BY Player.height DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
    "SELECT COUNT(*) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the Belgium Jupiler League from?",
    "SELECT Country.name FROM League INNER JOIN Country ON League.country_id = Country.id WHERE League.name = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the leagues from Germany.",
    "SELECT DISTINCT L.name FROM League AS L INNER JOIN Country AS C ON L.country_id = C.id WHERE C.name = 'Germany'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player has the strongest overall strength?",
    "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",
    "SELECT COUNT(*) FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id WHERE strftime('%Y', P.birthday) < '1986' AND PA.defensive_work_rate = 'high';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone?",
    "SELECT T2.player_name FROM ( SELECT T1.player_name, T1.crossing, ROW_NUMBER() OVER (ORDER BY T1.crossing DESC) AS rn FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone') ) AS T2 WHERE T2.rn = 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the heading accuracy of Ariel Borysiuk?",
    "SELECT `heading_accuracy` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Ariel Borysiuk' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose height is over 180, how many of them have a volley score of over 70?",
    "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE height > 180 AND volleys > 70;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the names of the players whose volley score and dribbling score are over 70.",
    "SELECT T2.`player_name` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`volleys` > 70 AND T1.`dribbling` > 70;\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2008/2009 season were held in Belgium?",
    "SELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND ( SELECT name FROM Country WHERE id = Match.country_id ) = 'Belgium'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the long passing score of the oldest player?",
    "SELECT T2.long_passing FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday = ( SELECT MAX(birthday) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the Belgium Jupiler League in April, 2009?",
    "SELECT COUNT(*) FROM Match INNER JOIN League ON Match.league_id = League.id WHERE League.name = 'Belgium Jupiler League' AND strftime('%Y', Match.date) = '2009' AND strftime('%m', Match.date) = '04';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most matches in the 2008/2009 season?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the players born before the year 1986?",
    "SELECT AVG(overall_rating) FROM Player_Attributes WHERE Player_Attributes.player_api_id IN ( SELECT Player.player_api_id FROM Player WHERE strftime('%Y', Player.birthday) < '1986' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
    "SELECT ( (SELECT `overall_rating` FROM Player_Attributes WHERE `player_api_id` = (SELECT `player_api_id` FROM Player WHERE `player_name` = 'Ariel Borysiuk') ) - (SELECT `overall_rating` FROM Player_Attributes WHERE `player_api_id` = (SELECT `player_api_id` FROM Player WHERE `player_name` = 'Paulin Puel') ) ) * 100 AS `percentage_difference`\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much is the average build up play speed of the Heart of Midlothian team?",
    "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average overall rating of Pietro Marino.",
    "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Pietro Marino'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Lennox's total crossing score?",
    "SELECT SUM(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Aaron Lennox'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Ajax's highest chance creation passing score and what is it classified as?",
    "SELECT chanceCreationPassingClass FROM Team_Attributes WHERE team_api_id IN ( SELECT team_api_id FROM Team WHERE team_long_name = 'Ajax' ) AND chanceCreationPassing = ( SELECT MAX(chanceCreationPassing) FROM Team_Attributes WHERE team_api_id IN ( SELECT team_api_id FROM Team WHERE team_long_name = 'Ajax' ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which foot is preferred by Abdou Diallo?",
    "SELECT `preferred_foot` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Abdou Diallo' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the highest overall rating received by Dorlan Pabon?",
    "SELECT MAX(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average number of goals made by Parma as the away team while playing in Italy?",
    "SELECT AVG(away_team_goal) FROM Match WHERE away_team_api_id IN ( SELECT team_api_id FROM Team WHERE team_long_name = 'Parma' ) AND league_id IN ( SELECT id FROM League WHERE name = 'Italy' ) AND away_team_goal IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
    "SELECT COUNT(*) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating = 77 AND T1.date = '2016-06-23'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the overall rating for Aaron Mooy on 2016/2/4?",
    "SELECT `overall_rating` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Mooy' ) AND `date` = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the potiential for Francesco Parravicini on 2010/8/30?",
    "SELECT `potential` FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Francesco Parravicini' ) AND `date` = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was Francesco Migliore's attacking work rate on 2015/5/1?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the defensive work rate for Kevin Berigaud on 2013/2/22.",
    "SELECT T1.`defensive_work_rate` FROM Player_Attributes AS T1 WHERE T1.`player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Kevin Berigaud' ) AND T1.`date` = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
    "SELECT date FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE pa.crossing = ( SELECT MAX(crossing) FROM Player_Attributes pa2 WHERE pa2.player_api_id = p.player_api_id ) AND p.player_name = 'Kevin Constant'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the build up play speed class for \"Willem II\" on 2011/2/22?",
    "SELECT `buildUpPlaySpeedClass` FROM Team_Attributes JOIN Team ON Team_Attributes.`team_api_id` = Team.`team_api_id` WHERE Team.`team_long_name` = 'Willem II' AND `date` = '2011-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
    "SELECT T1.`buildUpPlayDribblingClass` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_short_name` = 'LEI' AND T1.`date` = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.",
    "SELECT `buildUpPlayPassingClass` FROM Team_Attributes JOIN Team ON Team_Attributes.`team_api_id` = Team.`team_api_id` WHERE Team.`team_long_name` = 'FC Lorient' AND `date` = '2010-02-22'\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
    "SELECT `chanceCreationCrossingClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'Hull City' ) AND `date` = '2010-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
    "SELECT `defenceAggressionClass` FROM Team_Attributes WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'Hannover 96' ) AND `date` = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
    "SELECT AVG(`overall_rating`) FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Marko Arnautovic' ) AND `date` BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
    "SELECT ( (SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12' ) - ( SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Jordan Bowery') AND date = '2013-07-12' ) ) * 100 / ( SELECT overall_rating FROM Player_Attributes WHERE player_api_id = (SELECT player_api_id FROM Player WHERE player_name = 'Landon Donovan') AND date = '2013-07-12' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down 5 tallest players' name.",
    "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.height DESC LIMIT 5;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the player api id of 10 heaviest players?",
    "SELECT Player.player_api_id FROM Player ORDER BY Player.weight DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the name of players who are 35 years old and above.",
    "SELECT Player.player_name FROM Player WHERE datetime(CURRENT_TIMESTAMP,'localtime') - datetime(Player.birthday) > 34\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many home team goal have been scored by Aaron Lennon?",
    "SELECT COUNT(`home_team_goal`) FROM Match WHERE `home_player_1` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Lennon' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Sum up the away team goal scored by both Daan Smith and Filipe Ferreira.",
    "SELECT SUM(CASE WHEN T1.`player_api_id` IN ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Daan Smith' OR `player_name` = 'Filipe Ferreira' ) THEN Match.`away_team_goal` ELSE 0 END) FROM Match INNER JOIN Player AS T1 ON Match.`away_player_11` = T1.`player_api_id` OR Match.`away_player_10` = T1.`player_api_id` OR Match.`away_player_9` = T1.`player_api_id` OR Match.`away_player_8` = T1.`player_api_id` OR Match.`away_player_7` = T1.`player_api_id` OR Match.`away_player_6` = T1.`player_api_id` OR Match.`away_player_5` = T1.`player_api_id` OR Match.`away_player_4` = T1.`player_api_id` OR Match.`away_player_3` = T1.`player_api_id` OR Match.`away_player_2` = T1.`player_api_id` OR Match.`away_player_1` = T1.`player_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the total home team goal scored by players whose age are 30 years old and below.",
    "SELECT SUM(CASE WHEN DATEDIFF(CURRENT_DATE, T1.birthday) / 365 <= 30 THEN T2.home_team_goal ELSE 0 END) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.birthday <= DATE_SUB(CURRENT_DATE, INTERVAL 30 YEAR)\t----- bird -----\teuropean_football_2"
  ],
  [
    "State 10 names of the strongest players.",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of players with the highest potential?",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with finishing rate of 1, pick the eldest player and state the player's name.",
    "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.finishing = 1 ORDER BY T1.birthday ASC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the name of players who came from Belgium.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Locate players with vision scores of 90 and above, state the country of these players.",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country's players have the heaviest average weights?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the long name for slow speed class team.",
    "SELECT T2.`team_long_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlaySpeedClass` = 'Slow'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the short name of team who played safe while creating chance of passing?",
    "SELECT T1.`team_short_name` FROM Team AS T1 INNER JOIN ( SELECT T1.`team_api_id` FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.`team_api_id` = T2.`away_team_api_id` OR T1.`team_api_id` = T2.`home_team_api_id` WHERE T1.`buildUpPlaySpeedClass` = 'Safe' GROUP BY T1.`team_api_id` ) AS T2 ON T1.`team_api_id` = T2.`team_api_id`;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average heights of Italy players?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the names of top three football players who are over 180 cm tall in alphabetical order.",
    "SELECT T1.`player_name` FROM Player AS T1 WHERE T1.`height` > 180 ORDER BY T1.`player_name` ASC LIMIT 3\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many football players born after the 1990s have the first name \"Aaron\"?",
    "SELECT COUNT(*) FROM Player WHERE STRFTIME('%Y', Player.birthday) > 1990 AND Player.player_name LIKE 'Aaron%'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference between players 6 and 23's jumping scores?",
    "SELECT (SELECT `jumping` FROM Player_Attributes WHERE `id` = 6) - (SELECT `jumping` FROM Player_Attributes WHERE `id` = 23) AS difference\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide top three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
    "SELECT `player_api_id` FROM ( SELECT `player_api_id`, RANK() OVER (ORDER BY `potential`) AS rank FROM Player_Attributes WHERE `preferred_foot` = 'right' AND `potential` = ( SELECT MIN(`potential`) FROM Player_Attributes ) ) AS T WHERE T.rank <= 3\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
    "SELECT COUNT(*) FROM Player_Attributes WHERE crossing = (SELECT MAX(crossing) FROM Player_Attributes) AND preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage of players have a strength and stamina score of more than 80?",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM Player)) * 100 FROM Player_Attributes WHERE `strength` > 80 AND `stamina` > 80\t----- bird -----\teuropean_football_2"
  ],
  [
    "In what country did the Poland Ekstraklasa take place?",
    "SELECT T2.`name` FROM League AS T1 INNER JOIN Country AS T2 ON T1.`country_id` = T2.`id` WHERE T1.`name` = 'Poland Ekstraklasa'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
    "SELECT home_team_goal, away_team_goal FROM Match WHERE date LIKE '2008-09-24%' AND (league_id, country_id) = ('1', '1')\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
    "SELECT T1.`sprint_speed`, T1.`agility`, T1.`acceleration` FROM Player_Attributes AS T1 WHERE T1.`player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Alexis Blin' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Does the KSV Cercle Brugge team have a slow, balanced or fast speed class?",
    "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_long_name = 'KSV Cercle Brugge'\t----- bird -----\teuropean_football_2"
  ],
  [
    "In the 2015–2016 season, how many games were played in the Italian Serie A league?",
    "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND league_id IN ( SELECT id FROM League WHERE name = 'Serie A' AND country_id IN ( SELECT id FROM Country WHERE name = 'Italy' ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the highest score of the home team in the Netherlands Eredivisie league?",
    "SELECT MAX(home_team_goal) FROM Match WHERE league_id IN ( SELECT id FROM League WHERE name = 'Netherlands Eredivisie' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please state the finishing rate and curve score of the player who has the heaviest weight.",
    "SELECT T1.finishing, T1.curve FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_api_id = ( SELECT T3.player_api_id FROM Player AS T3 WHERE T3.weight = ( SELECT MAX(weight) FROM Player ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most games in the 2015–2016 season?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the full name of the away team that scored the most goals.",
    "SELECT T2.`team_long_name` FROM Match AS T1 INNER JOIN Team AS T2 ON T1.`away_team_api_id` = T2.`team_api_id` WHERE T1.`away_team_goal` = ( SELECT MAX(T3.`away_team_goal`) FROM Match AS T3 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please name one player whose overall strength is the greatest.",
    "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id ORDER BY Player_Attributes.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
    "SELECT CAST( (SELECT COUNT(distinct PA.player_api_id) FROM Player_Attributes PA JOIN Player P ON PA.player_api_id = P.player_api_id WHERE PA.height < 180 AND PA.overall_rating > 70) AS FLOAT) / (SELECT COUNT(distinct P.player_api_id) FROM Player P) * 100 AS percentage\t----- bird -----\teuropean_football_2"
  ],
  [
    "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
    "SELECT 100 * (COUNT(DISTINCT Patient.ID) - COUNT(DISTINCT Patient.ID) / COUNT(DISTINCT Patient.ID)) FROM Patient WHERE Patient.SEX = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient were born after 1930?",
    "SELECT ( SELECT COUNT(Patient.ID) FROM Patient WHERE Patient.SEX = 'F' AND STRFTIME('%Y', Patient.Birthday) > '1930' ) / ( SELECT COUNT(Patient.ID) FROM Patient WHERE Patient.SEX = 'F' ) * 100\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between Year 1930 to 1940, how many percent of them were inpatient?",
    "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM Patient WHERE STRFTIME('%Y', Birthday) BETWEEN '1930' AND '1940') FROM Patient WHERE STRFTIME('%Y', Birthday) BETWEEN '1930' AND '1940' AND Admission = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?",
    "SELECT (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '-') / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Diagnosis = 'SLE' AND Patient.Admission = '+')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.",
    "SELECT Laboratory.Date FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.ID = 30609\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had.",
    "SELECT T2.`Examination Date`, T1.SEX, T1.Birthday, T3.`Symptoms` FROM Examination AS T2 INNER JOIN Patient AS T1 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T3.`ID` = T2.`ID` WHERE T1.`ID` = 163109\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday of patient with LDH beyond normal range.",
    "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH > '500'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the ID and age of patient with positive degree of coagulation.",
    "SELECT STRFTIME('%Y', T1.Birthday) AS Year, TIMESTAMPDIFF(YEAR, T1.Birthday, CURRENT_TIMESTAMP) AS Age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with severe degree of thrombosis, list their ID, sex and dieseas the patient is diagnosed with.",
    "SELECT T1.ID, T1.SEX, T2.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Thrombosis = 2 AND T2.Thrombosis IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were born in 1937 whose total cholesterol was beyond the normal range.",
    "SELECT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Birthday = '1937' AND Laboratory.T-CHO >= 250;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient with albumin level lower than 3.5, list their ID, sex and diagnosis.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ALB` < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient had total protein not within the normal range?",
    "SELECT CAST( (SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'F' AND (Laboratory.TP < '6.0' OR Laboratory.TP > '8.5') ) AS REAL) / ( SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.SEX = 'F' ) * 100 AS percentage\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?",
    "SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND Description = '1997' AND Admission = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the age of the youngest patient when they initially arrived at the hospital?",
    "SELECT MIN(SUBSTR(Birthday, 7, 4) - SUBSTR(First Date, 7, 4)) AS age FROM Patient;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many of the patients with the most serious thrombosis cases examined in 1997 are women?",
    "SELECT COUNT(*) FROM Examination e JOIN Patient p ON e.ID = p.ID JOIN Laboratory l ON e.ID = l.ID WHERE e.Thrombosis = 1 AND p.SEX = 'F' AND e.Examination Date BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the age gap between the youngest and oldest patient with a normal triglyceride recorded?",
    "SELECT STRFTIME('%Y', MAX(T1.Birthday)) - STRFTIME('%Y', MIN(T1.Birthday)) AS AgeGap FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG >= 200\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.",
    "SELECT T1.Symptoms, T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = ( SELECT MIN(Birthday) FROM Patient )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
    "SELECT AVG(COUNT(DISTINCT Examination.ID)) / 12 AS average_tests_per_month FROM ( SELECT COUNT(DISTINCT Examination.ID) AS tests_per_month, EXTRACT(MONTH FROM Examination.Examination_Date) AS month, EXTRACT(YEAR FROM Examination.Examination_Date) AS year FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.Examination_Date BETWEEN '1998-01-01' AND '1998-12-31' AND Patient.SEX = 'M' GROUP BY month, year ) AS subquery WHERE subquery.year = 1998 AND subquery.month BETWEEN 1 AND 12;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
    "SELECT MAX(Laboratory.Date) AS OldestLabDate FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.Diagnosis = 'SJS';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
    "SELECT CAST(T1 AS REAL) / T2 AS Ratio FROM ( SELECT COUNT(*) AS T1 FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND (L.UA <= '8.0' OR L.UA IS NULL) ) AS T1, ( SELECT COUNT(*) AS T2 FROM Patient AS P JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'F' AND (L.UA <= '6.5' OR L.UA IS NULL) ) AS T2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients hadn't undergone a medical examination until at least a year following their initial hospital visit?",
    "SELECT COUNT(*) FROM ( SELECT SUBSTR(Examination.`Examination Date`, 1, 4) - SUBSTR(Patient.`First Date`, 1, 4) AS YearsDifference FROM Examination JOIN Patient ON Examination.`ID` = Patient.`ID` ) AS SubQuery WHERE YearsDifference >= 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many underage patients were examined during the course of the three-year period from 1990 to 1993?",
    "SELECT COUNT(Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE STRFTIME('%Y', Patient.Birthday) < STRFTIME('%Y', CURRENT_DATE) - 18 AND STRFTIME('%Y', Examination.ExaminationDate) BETWEEN 1990 AND 1993;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have elevated total bilirubin count?",
    "SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND EXISTS ( SELECT 1 FROM Laboratory WHERE Laboratory.ID = Patient.ID AND `T-BIL` > '2.0' );\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
    "SELECT TOP 1 Diagnosis FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of patients examined in the laboratory for the October of the year 1991?",
    "SELECT AVG(EXTRACT(YEAR FROM (DATE('1999-01-01') - T1.`Birthday`))) AS average_age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Date` BETWEEN '1991-10-01' AND '1991-10-30'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis?",
    "SELECT P.SEX, P.Birthday, E.Examination_Date, E.HGB, E.Diagnosis FROM Examination E INNER JOIN Patient P ON E.ID = P.ID INNER JOIN Laboratory L ON E.ID = L.ID WHERE E.HGB = (SELECT MAX(HGB) FROM Examination E INNER JOIN Patient P ON E.ID = P.ID INNER JOIN Laboratory L ON E.ID = L.ID) ORDER BY E.HGB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the anti-nucleus antibody concentration level for the patient id 3605340 on 1996/12/2?",
    "SELECT ANA FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 3605340 AND Examination.`Examination Date` = '1996-12-02'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?",
    "SELECT CASE WHEN T2.T_CHO IS NULL THEN 'Not available' WHEN T2.T_CHO < 250 THEN 'Normal' ELSE 'Abnormal' END AS Status FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Examination_Date = '1995-09-04' AND T1.ID = 2927464\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the gender of the first AORTITIS diagnosed patient?",
    "SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'AORTITIS' ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12?",
    "SELECT T2.`aCL IgM` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ID` = ( SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`Diagnosis` = 'SLE' AND T1.`Description` = '1994-02-19' ) AND T1.`Date` = '1993-11-12'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` WHERE T3.`GPT` = '9' AND T2.`Date` = '1992-06-12'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?",
    "SELECT (strftime('%Y', '1992') - strftime('%Y', T1.`Birthday`)) AS Age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`UA` = '8.4' AND T2.`Date` = '1991-10-21'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995?",
    "SELECT COUNT(T3.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T2.ID = T3.ID WHERE T1.ID = [actual_patient_id] AND T3.Date BETWEEN '1995-01-01' AND '1995-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 WHERE T1.`ID` = ( SELECT T2.`ID` FROM Patient AS T2 INNER JOIN Examination AS T3 ON T2.`ID` = T3.`ID` WHERE T3.`Examination Date` = '1997-01-27' AND T2.`Diagnosis` = 'SLE' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient whose birthday was 1959/3/1, what symptoms did he/she have during the examination on 1993/9/27?",
    "SELECT T1.`Symptoms` FROM Examination AS T1 WHERE T1.`ID` = ( SELECT T2.`ID` FROM Examination AS T2 WHERE T2.`Examination Date` = '1993-09-27' ) AND T1.`ID` = ( SELECT T3.`ID` FROM Patient AS T3 WHERE T3.`Birthday` = '1959-03-01' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
    "SELECT (Dec_T_CHO - Nov_T_CHO) / Nov_T_CHO AS Decrease_Rate FROM ( SELECT SUM(CASE WHEN T2.`Date` LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) AS Nov_T_CHO, SUM(CASE WHEN T2.`Date` LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) AS Dec_T_CHO FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = '1959-02-18' ) AS T\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Lists all patients by ID who were diagnosed with Behcet's and had their exams between 01/01/197 and 12/31/1997.",
    "SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Examination ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Laboratory.ID = Patient.ID WHERE Patient.Diagnosis LIKE '%Behcet%' AND YEAR(Examination.Examination Date) >= 1997 AND YEAR(Examination.Examination Date) < 1998;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
    "SELECT DISTINCT Patient.ID FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Examination.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND Laboratory.GPT > 30 AND Laboratory.ALB < 4;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients born in 1964 were admitted to the hospital? List them by ID.",
    "SELECT ID FROM Patient WHERE SEX = 'F' AND strftime('%Y', Birthday) = '1964' AND Admission = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
    "SELECT COUNT(*) FROM Examination WHERE `Thrombosis` = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > ( SELECT AVG(`aCL IgM`) FROM Examination WHERE `Thrombosis` = 2 AND `ANA Pattern` = 'S' ) * 1.2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?",
    "SELECT ( SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.`U-PRO` > 0 AND l.`U-PRO` < 30 AND l.UA <= 6.5 ) * 100 / ( SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.`U-PRO` > 0 AND l.`U-PRO` < 30 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
    "SELECT (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND `First Date` LIKE '%1981') AS total_male_patients_1981, (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND `First Date` LIKE '%1981' AND Diagnosis = 'BEHCET') AS male_patients_with_behcet_1981 FROM Patient;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
    "SELECT DISTINCT T2.ID FROM ( SELECT Patient.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID WHERE Laboratory.Date LIKE '1991-10%' AND T-BIL < 2.0 ) AS T2 INNER JOIN ( SELECT DISTINCT Patient.ID FROM Patient WHERE Admission = '-' ) AS T1 ON T2.ID = T1.ID;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989?",
    "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE `ANA Pattern` != 'p' AND SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
    "SELECT Patient.SEX FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Examination.ID IN ( SELECT Examination.ID FROM Examination INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Diagnosis = 'PSS' ) AND Examination.ID IN ( SELECT Laboratory.ID FROM Laboratory INNER JOIN Patient ON Laboratory.ID = Patient.ID INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.CRP = '2+' AND Laboratory.CRE = 1 AND Laboratory.LDH = 123 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
    "SELECT AVG(Laboratory.ALB) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE SEX = 'F' AND Diagnosis = 'SLE' AND PLT > 400;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common sign of patients with SLE disease?",
    "SELECT Symptoms FROM ( SELECT Symptoms, COUNT(*) AS Count FROM Examination WHERE Examination.ID IN ( SELECT Patient.ID FROM Patient WHERE Diagnosis = 'SLE' AND Examination.Symptoms IS NOT NULL ) GROUP BY Symptoms ) AS SymptomsCount ORDER BY Count DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When was the medical information on patient number 48473 first documented, and what disease did she have?",
    "SELECT `Diagnosis` FROM Patient WHERE `ID` = 48473\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients were given an APS diagnosis?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`Diagnosis` LIKE '%APS%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who underwent testing in 1997 had protein levels outside the normal range?",
    "SELECT COUNT(*) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE strftime('%Y', e.`Examination Date`) = '1997' AND (l.TP < 6 OR l.TP > 8.5)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What proportion of patients who had signs of thrombocytopenia had SLE diagnosed?",
    "SELECT CAST(SUM(T1.Symptoms LIKE '%thrombocytopenia%') AS REAL) / COUNT(T2.Symptoms) * 100 FROM Patient AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.Symptoms LIKE '%thrombocytopenia%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
    "SELECT CAST((COUNT(CASE WHEN T1.SEX = 'F' THEN 1 END) AS REAL) / (SELECT COUNT(*) FROM Patient T1 WHERE YEAR(T1.Birthday) = 1980 AND T1.Diagnosis = 'RA') AS REAL) * 100 AS REAL FROM Patient T1 WHERE YEAR(T1.Birthday) = 1980 AND T1.Diagnosis = 'RA'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with BEHCET disease did not stay in the hospital for treatment?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`Examination Date` BETWEEN '1995' AND '1997' AND T1.`Diagnosis` = 'BEHCET' AND T1.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were female got white blood cells that were below 3.5?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.WBC < 3.5;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
    "SELECT DATEDIFF(`Examination Date`, `First Date`) AS `Time Difference` FROM Examination JOIN Patient ON Examination.`ID` = Patient.`ID` WHERE Patient.`ID` = 821298\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient with the number 57266's uric acid within a normal range?",
    "SELECT * FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID WHERE Patient.ID = 57266 AND ( (Patient.SEX = 'M' AND UA > 8.0) OR (Patient.SEX = 'F' AND UA > 6.5) ) AND UA IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the laboratory examination of patient '48473' where his/her AST glutamic oxaloacetic transaminase (GOT) index is above the normal range.",
    "SELECT * FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.ID = 48473 AND Laboratory.GOT IS NOT NULL AND Laboratory.GOT >= 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients with their sex and date of birthday, whose AST glutamic oxaloacetic transaminase (GOT) index is within normal range for loboratory examination in 1994.",
    "SELECT Patient.SEX, Patient.Birthday FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.GOT < 60 AND strftime('%Y', Laboratory.Date) = '1994' GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.",
    "SELECT T1.ID FROM ( SELECT Patient.ID FROM Patient WHERE Patient.SEX = 'M' ) AS T1 INNER JOIN ( SELECT Examination.ID, Patient.ID FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID INNER JOIN Patient ON Examination.ID = Patient.ID WHERE Laboratory.GPT >= 60 ) AS T2 ON T1.ID = T2.Patient.ID;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth.",
    "SELECT T3.`ID`, T3.`Birthday` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Patient AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`GPT` > 60 ORDER BY T3.`Birthday` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
    "SELECT AVG(Laboratory.LDH) FROM Laboratory WHERE Laboratory.`ID` IN ( SELECT Patient.`ID` FROM Patient WHERE EXISTS ( SELECT 1 FROM Laboratory WHERE Laboratory.`ID` = Patient.`ID` AND Laboratory.LDH < 500 ) )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
    "SELECT Patient.ID, (STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', Birthday)) AS age FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.LDH BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient?",
    "SELECT T1.`Admission` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ALP` < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID of the patient who is born on the April 1st, 1982. Is his/her alkaliphophatase (ALP) within normal range?",
    "SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`Birthday` = '1982-04-01' AND EXISTS ( SELECT 1 FROM Laboratory AS T2 WHERE T2.`ID` = T1.`ID` AND T2.`ALP` < 300 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List ID, sex and date of birth of patient whose total protein (TP) below the lower range of the normal index.",
    "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 WHERE T1.ID IN ( SELECT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.GOT < 6.0 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal.",
    "SELECT T2.`TP` - 8.5 AS Deviation FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`TP` > 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Sort in descending order all patients by birthday for male patient with albumin not within range.",
    "SELECT P.* FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE P.SEX = 'M' AND (L.ALB <= 3.5 OR L.ALB >= 5.5) ORDER BY P.Birthday DESC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patient born in 1982, state if their albumin is within normal range.",
    "SELECT p.ID, p.Birthday, l.ALB FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE STRFTIME('%Y', p.Birthday) = '1982' AND l.ALB BETWEEN 3.5 AND 5.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of the female patient whose uric acid (UA) beyond the normal range?",
    "WITH female_with_ua_beyond_normal AS ( SELECT COUNT(*) FROM Patient AS T1 LEFT JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.UA > 8.0 OR (T2.UA > 6.5 AND T1.SEX = 'F')) ), total_female AS ( SELECT COUNT(*) FROM Patient AS T1 WHERE T1.SEX = 'F' ) SELECT (female_with_ua_beyond_normal.count * 100 / total_female.count) AS percentage;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with normal uric acid (UA), what is the average UA index based on their latest laboratory examination result?",
    "SELECT AVG(T3.`UA`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` WHERE (T3.`UA` < 8.0 AND T1.`SEX` = 'M') OR (T3.`UA` < 6.5 AND T1.`SEX` = 'F') ORDER BY T3.`Date` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`UN` = 29\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID, sex, birthday of all patients diagnosed with 'RA' that are within the UN normal index.",
    "SELECT DISTINCT Patient.ID, Patient.SEX, Patient.Birthday FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'RA' AND ( (Laboratory.GOT < 30 AND Laboratory.GPT < 30 AND Laboratory.LDH < 30 AND Laboratory.ALP < 30) OR (Laboratory.GOT IS NULL AND Laboratory.GPT IS NULL AND Laboratory.LDH IS NULL AND Laboratory.ALP IS NULL) );\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients are are with creatinine index out of the normal range?",
    "SELECT COUNT(*) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.CRE >= 1.5 AND SEX = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Are there more male patients with creatinine not within the normal range than female? True or False?",
    "SELECT CASE WHEN (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`CRE` >= 1.5) > (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`CRE` >= 1.5) THEN 'True' ELSE 'False' END AS Result\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index.",
    "SELECT Patient.ID, Patient.SEX, Patient.Birthday FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID INNER JOIN Patient ON Examination.ID = Patient.ID WHERE T-BIL = (SELECT MAX(T-BIL) FROM Laboratory)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range.",
    "SELECT T1.SEX, COUNT(*) AS Count FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.T-BIL >= 2.0 GROUP BY T1.SEX\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index.",
    "SELECT T1.`ID`, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` IS NOT NULL AND T1.`Birthday` = ( SELECT MIN(`Birthday`) FROM Patient WHERE `Birthday` IS NOT NULL ) AND T2.`T-CHO` = ( SELECT MAX(`T-CHO`) FROM Laboratory WHERE `T-CHO` IS NOT NULL ) ORDER BY T1.`Birthday` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of the male patient with high cholesterol?",
    "SELECT AVG(SUM(YEAR(NOW()) - YEAR(Birthday))) AS average_age FROM Patient WHERE `T-CHO` >= 250 AND `SEX` = 'M';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?",
    "SELECT T1.`ID`, T1.`Diagnosis`, T2.`TG` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TG` > 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?",
    "SELECT COUNT(*) FROM ( SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TG` >= 200 AND strftime('%Y', DATE(CURRENT_TIMESTAMP)) - strftime('%Y', T1.`Birthday`) > 50 ) AS T3;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids.",
    "SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T2.`ID` = T3.`ID` WHERE T1.`Admission` = '-' AND T2.`CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",
    "SELECT COUNT(*) FROM ( SELECT * FROM Patient WHERE SEX = 'M' AND Birthday BETWEEN '1936-01-01' AND '1956-12-31' ) AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CPK >= 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`age` FROM ( SELECT DISTINCT T1.`ID`, T1.`SEX`, DATEDIFF(YEAR, T1.`Birthday`, CURRENT_DATE()) AS `age` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GLU` >= 180 ) AS T3 INNER JOIN ( SELECT DISTINCT T1.`ID`, T1.`SEX`, DATEDIFF(YEAR, T1.`Birthday`, CURRENT_DATE()) AS `age` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-CHO` < 250 ) AS T4 ON T3.`ID` = T4.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991.",
    "SELECT T1.`ID`, T2.`GLU` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GLU` < 180 AND T1.`Description` >= '1991-01-01'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday who has abnormal white blood cell count. Group them by sex and list the patient by age in ascending order.",
    "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.WBC <= 3.5 OR T2.WBC >= 9.0 GROUP BY T1.SEX ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.",
    "SELECT T1.`ID`, DATEDIFF(YEAR, T1.`Birthday`, CURRENT_DATE()) AS `Age`, T1.`Diagnosis` FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`RBC` < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
    "SELECT * FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'F' AND (YEAR(CURRENT_DATE) - YEAR(Birthday)) >= 50 AND (RBC <= 3.5 OR RBC >= 6.0) AND Admission = '+';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex.",
    "SELECT Patient.ID, Patient.SEX FROM Patient JOIN Laboratory ON Laboratory.ID = Patient.ID WHERE Patient.Admission = '-' AND Laboratory.HGB < 10\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.",
    "SELECT T1.`ID`, T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T3.`HGB` BETWEEN 10 AND 17 ORDER BY T1.`Birthday` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.",
    "SELECT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) AS Age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.HCT >= 52 AND T2.HCT <= 52 GROUP BY T1.ID HAVING COUNT(T2.ID) >= 2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "From laboratory examinations in 1991, what is the average hematoclit level that is lower than the normal range.",
    "SELECT AVG(HCT) FROM Laboratory WHERE Date LIKE '1991%' AND HCT < 29\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
    "SELECT ( SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.PLT < 100 ) - ( SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.PLT > 400 ) AS Difference\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
    "SELECT T1.* FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SUBTRACT(year(current_timestamp), year(Birthday)) < 50 AND T2.Date LIKE '1984%' AND T2.PLT BETWEEN 100 AND 400 ORDER BY T1.ID;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
    "SELECT ( SELECT COUNT(*) FROM ( SELECT T1.`ID`, T1.`Age`, T2.`PT` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Age` > 55 AND T2.`PT` >= 14 AND T1.`SEX` = 'F' ) AS T3 ) AS NumFemaleWithAbnormalPT / ( SELECT COUNT(*) FROM ( SELECT T1.`ID`, T1.`Age` FROM Patient AS T1 WHERE T1.`Age` > 55 ) AS T2 ) AS TotalNumPatientsOver55\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.",
    "SELECT Patient.* FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE `First Date` > '1992-12-31' AND PT < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time?",
    "SELECT COUNT(*) FROM Examination e JOIN Laboratory l ON e.ID = l.ID WHERE e.`Examination Date` > '1997-01-01' AND l.APTT < 45;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal activated partial prothrom bin time, how many of them have a mild thrombosis?",
    "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`APTT` > 45 AND T1.`Thrombosis` = 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
    "SELECT COUNT(T1.`ID`) FROM ( SELECT DISTINCT T1.`ID` FROM Patient AS T1 WHERE T1.`SEX` = 'M' AND T1.`WBC` BETWEEN 3.5 AND 9.0 ) AS T1 INNER JOIN ( SELECT DISTINCT T2.`ID` FROM Laboratory AS T2 WHERE (T2.`FG` <= 150 OR T2.`FG` >= 450) ) AS T2 ON T1.`ID` = T2.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients born after 1980/1/1 have an abnormal fibrinogen level?",
    "SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Birthday > '1980-01-01' AND EXISTS ( SELECT 1 FROM Laboratory WHERE Laboratory.ID = Patient.ID AND Laboratory.FG < 150 OR Laboratory.FG > 450 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the disease names of the patients that have a proteinuria level higher than normal.",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`U-PRO` >= 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID.",
    "SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`ID` IN ( SELECT DISTINCT T1.`ID` FROM Patient AS T1 WHERE T1.`Diagnosis` = 'SLE' ) AND T1.`ID` IN ( SELECT DISTINCT T1.`ID` FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`U-PRO` BETWEEN 0 AND 30 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with an Ig G lower than normal has the symptom of abortion?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` < 900 AND T2.`Symptoms` = 'abortion'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal Ig G level, how many of them have symptoms?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Symptoms` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who has the highest Ig A within the normal range, what is his or her diagnosis?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`IGA` BETWEEN 80 AND 500 ORDER BY T3.`IGA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE `First Date` >= '1990-01-01' AND l.IGA BETWEEN 80 AND 500\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?",
    "SELECT T1.`Diagnosis`, COUNT(*) AS Frequency FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`IGM` NOT BETWEEN 40 AND 400 GROUP BY T1.`Diagnosis` ORDER BY Frequency DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal C-reactive protein don't have their data recorded?",
    "SELECT COUNT(*) - COUNT(T2.Description) FROM Patient AS T1 LEFT JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.CRP LIKE '+' OR T2.CRP LIKE '-' OR T2.CRP < 1.0) AND T2.Description IS NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose C-reactive protein level is abnormal, how many of them aren't 18 yet?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CRP` NOT IN('+-', '-') AND T2.`CRP` >= 1.0 AND (T1.`Birthday` < CURDATE() OR (T1.`Birthday` = CURDATE() AND MONTH(T1.`Birthday`) < MONTH(CURDATE())))\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` WHERE T2.`RA` IN ('-', '+-') AND T3.`KCT` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diseases of the patients born after 1995-1-1 and have a normal Rhuematoid Factor.",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` WHERE T1.`Birthday` >= '1995-01-01' AND T3.`RA` IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the ID of the patient whose RF is normal and who is older than 60.",
    "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.RF < 20 AND (YEAR(Birthday) - YEAR(?)) > 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal RF don't have thrombosis?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.RF < 20 AND p.Thrombosis = 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal level of complement 3 have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`C3` > 35 AND T1.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose level of Hematoclit isn't normal, which patient has the highest anti-Cardiolipin antibody concentration? Please list his or her ID.",
    "SELECT T1.`ID` FROM ( SELECT T1.`ID`, MAX(T2.`aCL IgA`) AS max_aCL_IgA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`HCT` < 29 OR T2.`HCT` > 52 ) AS T3 ORDER BY T3.max_aCL_IgA DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`C4` > 10\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T2.`ID` = T3.`ID` WHERE T2.`RNP` IN ('-', '+-') AND T3.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth.",
    "SELECT T1.ID, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP NOT IN ('-', '+-') AND T1.Birthday = ( SELECT MIN(Birthday) FROM Patient AS T3 INNER JOIN Laboratory AS T4 ON T3.ID = T4.ID WHERE T4.RNP NOT IN ('-', '+-') )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with normal anti-SM, how many of them have the most severe degree of thrombosis?",
    "SELECT COUNT(*) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID WHERE (e.ANA = '-' OR e.ANA = '+-') AND e.Thrombosis = 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.",
    "SELECT T1.`ID` FROM ( SELECT T1.`ID`, T1.`Birthday`, ROW_NUMBER() OVER (PARTITION BY T1.`ID` ORDER BY T1.`Birthday`) AS rn FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ANA` NOT IN ('-', '+-') ) T3 WHERE T3.rn <= 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients who had the examination done after 1997/1/1 and had a normal anti-scl70.",
    "SELECT T1.`ID` FROM Examination AS T1 JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` >= '1997-01-01' AND T2.`SC170` IN('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal anti-scl70, how many of them are male and have the symptom of vertigo?",
    "SELECT COUNT(DISTINCT T1_Patient.`ID`) FROM ( SELECT DISTINCT T1_Patient.`ID` FROM Patient AS T1_Patient INNER JOIN Laboratory AS T2_Laboratory ON T1_Patient.`ID` = T2_Laboratory.`ID` WHERE T2_Laboratory.`SC170` IN ('-', '+-') ) AS T3 INNER JOIN Examination AS T4 ON T3.`ID` = T4.`ID` WHERE T4.`Symptoms` = 'vertigo'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal anti-SSA came to the hospital before 1990?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` WHERE T3.`SSA` IN ('-', '+-') AND STRFTIME('%Y', T1.`First Date`) < '1990'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID.",
    "SELECT p.ID FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.`First Date` = ( SELECT MIN(`First Date`) FROM Patient WHERE `First Date` IS NOT NULL ) AND l.SSA NOT IN('-', '+-') AND p.`First Date` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-SSB and are diagnosed with SLE in the examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` WHERE T3.`SSB` IN ('-', '+-') AND T2.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose anti-SSB are normal, how many of them have other symptoms observed in their examination?",
    "SELECT COUNT(DISTINCT T2.Symptoms) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SSB` IN ('-', '+-') AND T2.Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
    "SELECT COUNT(*) FROM Patient AS P JOIN Examination AS E ON P.ID = E.ID WHERE E.aCL IgG IN('-', '+-') AND E.SSB IN('-', '+-') AND P.SEX = 'M';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`DNA` >= 8\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-DNA level, yet their data are not recorded.",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 LEFT JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`DNA` IS NULL AND T2.`DNA` < 8 AND T2.`Description` IS NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Of the patients with an abnormal level of anti-DNA-II, how many of them admitted to the hospital?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.DNA-II > 8 AND p.Admission = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of patient who has a abnormal level of glutamic oxaloacetic transaminase level, yet he or she is diagnosed with SLE?",
    "SELECT (COUNT(DISTINCT Patient.ID) * 1.0) / (SELECT COUNT(DISTINCT Patient.ID) FROM Patient WHERE Patient.Diagnosis = 'SLE') FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID INNER JOIN Examination ON Laboratory.ID = Examination.ID WHERE Examination.GOT >= 60 AND Patient.Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have their glutamic oxaloacetic transaminase in the normal range?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.GOT < 60;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?",
    "SELECT T2.`Birthday` AS Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`GOT` >= 60 ORDER BY T2.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the top three patients' birthdays with the highest glutamic pylvic transaminase in the normal range.",
    "SELECT T1_Patient.`Birthday` FROM ( SELECT T1_Patient.`ID`, T1_Patient.`Birthday`, RANK() OVER (ORDER BY T2_Laboratory.`GPT` DESC) AS r FROM Patient AS T1_Patient INNER JOIN Laboratory AS T2_Laboratory ON T1_Patient.`ID` = T2_Laboratory.`ID` WHERE T2_Laboratory.`GPT` < 60 ) AS T3 WHERE T3.r <= 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with the normal glutamic pylvic transaminase level, how many of them are male?",
    "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`GPT` < 60 AND T2.`SEX` = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with the highest lactate dehydrogenase in the normal range, when was his or her data first recorded?",
    "SELECT T3.`First Date` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Patient AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`LDH` < 500 ORDER BY T2.`LDH` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.",
    "SELECT Examination.* FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Laboratory.ID = Patient.ID WHERE Laboratory.LDH >= 500 ORDER BY Patient.`First Date` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with an abnormal alkaliphophatase level, how many of them are admitted to the hospital?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ALP` >= 300 AND T1.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients followed at the outpatient clinic, how many of them have a normal level of alkaliphophatase?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-' AND T2.`ALP` < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diagnosis of the patients whose total protein is lower than normal.",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TP` < 6.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who are diagnosed with SJS, how many of them have a normal level of total protein?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the examination date of the patient whose albumin is the highest in the normal range?",
    "SELECT Laboratory.Date FROM Examination INNER JOIN Laboratory ON Examination.ID = Laboratory.ID WHERE Laboratory.ALB > 3.5 AND Laboratory.ALB < 5.5 AND Laboratory.Date IS NOT NULL ORDER BY Laboratory.ALB DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have a normal level of both albumin and total protein?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.ALB > 3.5 AND l.ALB < 5.5 AND l.TP BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
    "SELECT T1.aCL IgG, T1.aCL IgM, T1.aCL IgA FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.50 AND T2.UA < 7.50 ORDER BY T2.UA DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level?",
    "SELECT MAX(ANA) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`CRE` < 1.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID whose creatinine level is normal and whose anti Cardiolipin antibody concentration level is the highest.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CRE` < 1.5 AND T2.`aCL IgA` = ( SELECT MAX(T3.`aCL IgA`) FROM Laboratory AS T3 WHERE T3.`ID` = T2.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(*) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Patient AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`T-BIL` >= 2.0 AND T3.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti-nucleus antibody concentration of the patient whose total bilirubin is the highest in the normal range?",
    "SELECT * FROM Laboratory WHERE `T-BIL` IS NOT NULL AND `T-BIL` < 2.0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` WHERE T2.`KCT` = '-' AND T3.`T-CHO` >= 250;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total cholesterol is within the normal range, how many of them have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE T-CHO < 250 AND ANA Pattern = 'P';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
    "SELECT ( SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`TG` < 200 ) - ( SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`TG` < 200 AND T3.`Symptoms` IS NOT NULL ) AS difference\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease name of the patient who has the highest level of triglyceride within the normal range?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`TG` < 200 AND T3.`TG` = ( SELECT MAX(T4.`TG`) FROM Laboratory AS T4 WHERE T4.`TG` < 200 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients with no thrombosis and an abnormal level of creatinine phosphokinase.",
    "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Thrombosis = 0 AND Laboratory.CPK < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID JOIN Examination e ON p.ID = e.ID WHERE l.CPK < 250 AND (e.KCT = '+' OR e.RVVT = '+' OR e.LAC = '+')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the birthday of the oldest patient whose blood glucose is abnormal?",
    "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU > 180\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal blood glucose, how many of them don't have thrombosis?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE l.GLU < 180 AND l.Thrombosis = 0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients accepted to the hospital have a normal level of white blood cells?",
    "SELECT COUNT(*) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID JOIN Laboratory AS l ON p.ID = l.ID WHERE p.Admission = '+' AND l.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients diagnosed with SLE have a normal white blood cell level?",
    "SELECT COUNT(*) FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Diagnosis = 'SLE' AND l.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`RBC` <= 3.5 OR T2.`RBC` >= 6.0 INTERSECT SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`PLT` > 100 AND T1.`PLT` < 400 AND T1.`Diagnosis` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.",
    "SELECT T3.`PLT` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`Diagnosis` = 'MCTD' AND T3.`PLT` > 100 AND T3.`PLT` < 400\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the male patients that have a normal prothrombin time, what is their average prothrombin time?",
    "SELECT AVG(T2.PT) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.PT < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with severe thrombosis have a normal prothrombin time?",
    "SELECT COUNT(*) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.Thrombosis IN (2, 1) AND l.PT < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What's Angela Sanders's major?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "How many students in the Student_Club are from the College of Engineering?",
    "SELECT COUNT(*) FROM ( SELECT member_id FROM ( SELECT member_id FROM member WHERE position = 'Member' ) AS T1 INTERSECT SELECT member_id FROM ( SELECT member_id FROM member WHERE link_to_major = ( SELECT major_id FROM major WHERE college = 'College of Engineering' ) ) AS T2 ) AS T3\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the full names of the students in the Student_Club that come from the Art and Design Department.",
    "SELECT member.first_name, member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN major ON member.link_to_major = major.major_id INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Student_Club' AND major.department = 'Art and Design'\t----- bird -----\tstudent_club"
  ],
  [
    "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
    "SELECT COUNT(T1.link_to_member) FROM attendance AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.link_to_event = ( SELECT event_id FROM event WHERE event_name = 'Women''s Soccer' ) AND T2.position = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
    "SELECT T1.phone FROM member AS T1 INNER JOIN ( SELECT DISTINCT T1.member_id AS member_id FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer' ) AS T2 ON T1.member_id = T2.member_id;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students from the Student_Club who attended the event \"Women's Soccer\", how many of them want a T-shirt that's in medium size?",
    "SELECT COUNT(*) FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE m.t_shirt_size = 'Medium' AND e.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the event that has the highest attendance of the students from the Student_Club?",
    "SELECT T1.event_id, T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id, T1.event_name HAVING COUNT(T2.link_to_event) = ( SELECT MAX(attendance) FROM ( SELECT COUNT(link_to_event) AS attendance FROM attendance GROUP BY link_to_event ) AS T3 )\t----- bird -----\tstudent_club"
  ],
  [
    "Which college is the vice president of the Student_Club from?",
    "SELECT T2.`college` FROM major AS T2 INNER JOIN member AS T1 ON T1.`link_to_major` = T2.`major_id` WHERE T1.position = 'Vice President'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the event names of all the events attended by Maya Mclean.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.member_id = ( SELECT member_id FROM member WHERE first_name = 'Maya' AND last_name = 'Mclean' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many events of the Student_Club did Sacha Harrison attend in 2019?",
    "SELECT COUNT(*) FROM attendance AS a JOIN event AS e ON a.link_to_event = e.event_id JOIN member AS m ON a.link_to_member = m.member_id WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison' AND STRFTIME('%Y', e.event_date) = '2019';\t----- bird -----\tstudent_club"
  ],
  [
    "Among the events attended by more than 10 members of the Student_Club, how many of them are meetings?",
    "SELECT COUNT(*) FROM ( SELECT T1.event_id FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.type = 'Meeting' GROUP BY T1.event_id HAVING COUNT(T1.event_id) > 10 ) AS T3;\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the names of all the events of the Student_Club that had an attendance of over 20 students.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.position = 'Student_Club' GROUP BY T1.event_id HAVING COUNT(T2.event_id) > 20\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average attendance of meetings in 2020?",
    "SELECT CAST(T2.`count` AS REAL) / T1.`count` AS average_attendance FROM ( SELECT COUNT(event_id) AS count FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020' ) AS T1 JOIN ( SELECT COUNT(DISTINCT event_name) AS count FROM ( SELECT event_id, event_name FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020' ) AS T ) AS T2 ON T1.count = T2.count\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most expensive item that was spent in support of club events?",
    "SELECT e.expense_description FROM expense e JOIN budget b ON e.link_to_budget = b.budget_id WHERE b.category = 'Club T-Shirts' ORDER BY e.cost DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have majored Environmental Engineering?\n",
    "SELECT COUNT(T1.`member_id`) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Environmental Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of all the members of the Student_Club who attended the \"Laugh Out Loud\" event.",
    "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Laugh Out Loud'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of all the students who majored Law and Constitutional Studies. \n",
    "SELECT DISTINCT T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club"
  ],
  [
    "What county did Sherri Ramsey grew up?",
    "SELECT T2.county FROM zip_code AS T2 WHERE T2.zip_code = ( SELECT T1.zip FROM member AS T1 WHERE T1.first_name = 'Sherri' AND T1.last_name = 'Ramsey' )\t----- bird -----\tstudent_club"
  ],
  [
    "What college offers the major that Tyler Hewitt took?",
    "SELECT T1.`college` FROM major AS T1 INNER JOIN member AS T3 ON T1.`major_id` = T3.`link_to_major` INNER JOIN member AS T4 ON T3.`member_id` = T4.`member_id` WHERE T4.`first_name` = 'Tyler' AND T4.`last_name` = 'Hewitt'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the amount of the funds that the Vice President received?",
    "SELECT SUM(amount) FROM income WHERE link_to_member = ( SELECT member_id FROM member WHERE position = 'Vice President' )\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on food in September Meeting?",
    "SELECT SUM(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Food' AND event.event_name = 'September Meeting';\t----- bird -----\tstudent_club"
  ],
  [
    "What city and state did the President of the Student_Club grow up?",
    "SELECT T1.`city`, T1.`state` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T1.`member_id` = ( SELECT T2.`member_id` FROM member AS T2 WHERE T2.`position` = 'President' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the Student_Club members that grew up in Illinois state.",
    "SELECT member.first_name, member.last_name FROM member INNER JOIN zip_code AS T1 ON member.zip = T1.zip_code WHERE T1.state = 'Illinois'\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on advertisement in September Meeting?",
    "SELECT SUM(expense.cost) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement' AND event.event_name = 'September Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "What department offers the major that Pierce and Guidi took?",
    "SELECT T2.department FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major WHERE T1.major_name IN ( SELECT DISTINCT T3.major_name FROM member AS T3 INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id WHERE T3.first_name = 'Pierce' OR T3.first_name = 'Guidi' )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total budgeted amount for all category in \"October Speaker\" event?",
    "SELECT SUM(amount) FROM budget WHERE event_status = 'Open' AND link_to_event = ( SELECT event_id FROM event WHERE event_name = 'October Speaker' AND event_date >= '2020-10-01' AND event_date <= '2020-10-31' )\t----- bird -----\tstudent_club"
  ],
  [
    "Was each expense in October Meeting on October 8, 2019 approved?",
    "SELECT T1.expense_id, T1.approved FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T3.event_date = '2019-10-08' AND T1.approved IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
    "SELECT AVG(cost) FROM expense WHERE STRFTIME('%m', expense_date) = '09' OR STRFTIME('%m', expense_date) = '10'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.",
    "SELECT SUM(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_date >= '2020-01-01' AND T1.event_date <= '2020-12-31' AND T1.status = 'Open' AND T2.category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "Give the location for \"Spring Budget Review\".",
    "SELECT location FROM event WHERE event_id = ( SELECT event_id FROM event WHERE event_name = 'Spring Budget Review' )\t----- bird -----\tstudent_club"
  ],
  [
    "What was the cost for the \"Posters\" on 2019/9/4?",
    "SELECT e.cost FROM expense e INNER JOIN event e_j ON e.link_to_event = e_j.event_id WHERE e_j.event_name = 'Posters' AND e_j.event_date = '2019-09-04'\t----- bird -----\tstudent_club"
  ],
  [
    "With the biggest budget for the \"Food\", what was the remaining of it?",
    "SELECT MAX(budget.remaining) FROM budget WHERE budget.category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "What was the notes of the fundraising on 2019/9/14?",
    "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'\t----- bird -----\tstudent_club"
  ],
  [
    "How many majors are there in \"College of Humanities and Social Sciences\"?",
    "SELECT COUNT(*) FROM major WHERE department = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the phone number of \"Carlo Jacobs\".",
    "SELECT `phone` FROM member WHERE `first_name` = 'Carlo' AND `last_name` = 'Jacobs'\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the hometown county for \"Adela O'Gallagher\".",
    "SELECT zip_code.county FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Adela' AND member.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club"
  ],
  [
    "For all the budgets for \"November Meeting\", how many of them had exceeded the budget?",
    "SELECT COUNT(*) FROM budget WHERE link_to_event = ( SELECT event_id FROM event WHERE event_name = 'November Meeting' ) AND remaining < 0\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the total number of the budget amount for \"September Speaker\" event.",
    "SELECT SUM(budget.amount) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?",
    "SELECT T2.event_status FROM event AS T2 INNER JOIN expense AS T1 ON T1.link_to_event = T2.event_id WHERE T1.expense_description = 'Post Cards, Posters' AND T1.expense_date = '2019-08-20'\t----- bird -----\tstudent_club"
  ],
  [
    "What was Brent Thomason's major?",
    "SELECT major_name FROM major WHERE major_id = ( SELECT major_id FROM member WHERE first_name = 'Brent' AND last_name = 'Thomason' )\t----- bird -----\tstudent_club"
  ],
  [
    "For all the club members from \"Human Development and Family Studies\" major, how many of them wear large size t-shirt?",
    "SELECT COUNT(T1.member_id) FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Human Development and Family Studies' AND T1.t_shirt_size = 'Large'\t----- bird -----\tstudent_club"
  ],
  [
    "What's Christof Nielson's zip code type?",
    "SELECT zip_code.type FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.member_id = ( SELECT member_id FROM member WHERE first_name = 'Christof' AND last_name = 'Nielson' )\t----- bird -----\tstudent_club"
  ],
  [
    "State the major name for the Vice President of the club.",
    "SELECT m.major_name FROM member m WHERE m.position = 'Vice President'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown state for \"Sacha Harrison\"?",
    "SELECT T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.member_id = ( SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which department was the President of the club in?",
    "SELECT T2.`department` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`position` = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "State the date Connor Hilton paid his/her dues.",
    "SELECT date_received FROM income WHERE income_id = ( SELECT income_id FROM income WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Connor' AND last_name = 'Hilton' ) AND source = 'Dues' )\t----- bird -----\tstudent_club"
  ],
  [
    "Who was the first one paid his/her dues? Tell the full name.",
    "SELECT first_name, last_name FROM member WHERE member.member_id = ( SELECT member.member_id FROM income WHERE source = 'Dues' ORDER BY date_received ASC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
    "SELECT COUNT(*) FROM ( SELECT SUM(budget.amount) AS Yearly_Kickoff_Amount, SUM(budget.amount) AS October_Meeting_Amount FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE budget.category = 'Advertisement' AND event.event_name IN ('Yearly Kickoff', 'October Meeting') ) AS T WHERE T.Yearly_Kickoff_Amount > T.October_Meeting_Amount\t----- bird -----\tstudent_club"
  ],
  [
    "What percentage was the budget for Parking to the total budget for the \"November Speaker\"?",
    "SELECT ( (SELECT SUM(amount) FROM budget WHERE category = 'Parking' AND event_status = 'Open' AND link_to_event = ( SELECT event_id FROM event WHERE event_name = 'November Speaker' AND event_status = 'Open' ) ) / ( SELECT SUM(amount) FROM budget WHERE event_status = 'Open' AND link_to_event = ( SELECT event_id FROM event WHERE event_name = 'November Speaker' AND event_status = 'Open' ) ) ) * 100\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total cost of the pizzas for all the events?",
    "SELECT SUM(expense.cost) FROM expense INNER JOIN budget ON expense.`link_to_budget` = budget.`budget_id` WHERE expense.`expense_description` = 'Pizza'\t----- bird -----\tstudent_club"
  ],
  [
    "How many cities are there in Orange County, Virginia?",
    "SELECT COUNT(DISTINCT T1.`zip`) FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`county` = 'Orange County' AND T2.`state` = 'Virginia'\t----- bird -----\tstudent_club"
  ],
  [
    "List all of the College of Humanities and Social Sciences' departments.",
    "SELECT DISTINCT T1.`department` FROM major AS T1 WHERE T1.`college` = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is Amy Firth's hometown?",
    "SELECT zip_code.city, zip_code.county, zip_code.state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Amy' AND member.last_name = 'Firth'\t----- bird -----\tstudent_club"
  ],
  [
    "What are the expenses of the budget with the lowest remaining?",
    "SELECT E.expense_description FROM expense E INNER JOIN budget B ON E.link_to_budget = B.budget_id WHERE B.remaining = ( SELECT MIN(remaining) FROM budget )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members who attended the event \"October Meeting\".",
    "SELECT DISTINCT T1.`member_id`, T1.`first_name`, T1.`last_name` FROM attendance AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` INNER JOIN member AS T3 ON T1.`link_to_member` = T3.`member_id` WHERE T2.`event_name` = 'October Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "Which college do most of the members go to?",
    "SELECT T.college FROM ( SELECT major.college, COUNT(*) AS member_count FROM member INNER JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ) AS T WHERE T.member_count = ( SELECT MAX(member_count) FROM ( SELECT major.college, COUNT(*) AS member_count FROM member INNER JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ) AS T2 )\t----- bird -----\tstudent_club"
  ],
  [
    "What does the person with the phone number \"809-555-3360\" major in?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the highest budget amount?",
    "SELECT `event_name` FROM event WHERE `event_id` = ( SELECT `event_id` FROM budget ORDER BY `amount` DESC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the expenses incurred by the vice president.",
    "SELECT e.expense_id, e.expense_description, e.cost FROM expense e INNER JOIN member m ON e.link_to_member = m.member_id WHERE m.position = 'Vice President'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members attended the \"Women's Soccer\" event?",
    "SELECT COUNT(DISTINCT T1.member_id) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Women''s Soccer';\t----- bird -----\tstudent_club"
  ],
  [
    "When did the member, Casey Mason, received the income?",
    "SELECT date_received FROM income WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Casey' AND last_name = 'Mason' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many of the members' hometowns are from Maryland state?",
    "SELECT COUNT(*) FROM member WHERE member.zip LIKE '%Maryland%'\t----- bird -----\tstudent_club"
  ],
  [
    "How many events did the member with the phone number \"954-555-6240\" attend?",
    "SELECT COUNT(*) FROM attendance WHERE link_to_member = ( SELECT member_id FROM member WHERE phone = '954-555-6240' )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members of the \"School of Applied Sciences, Technology and Education\" department.",
    "SELECT member.first_name, member.last_name FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club"
  ],
  [
    "Among all the closed events, which event has the highest spend-to-budget ratio?",
    "SELECT event_id, event_name, (spent / amount) AS spend_to_budget_ratio FROM event INNER JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'Closed' ORDER BY spend_to_budget_ratio DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many student have the position of president?",
    "SELECT COUNT(*) FROM member WHERE position = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the highest amount of budget spend for an event?",
    "SELECT MAX(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id\t----- bird -----\tstudent_club"
  ],
  [
    "How many meeting events were held in 2020?",
    "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND STRFTIME('%Y', event_date) = '2020'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total amount of money spent for food?",
    "SELECT SUM(budget.spent) FROM budget INNER JOIN expense ON budget.`budget_id` = expense.`link_to_budget` WHERE budget.category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of students that have attended more than 7 events.",
    "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.member_id HAVING COUNT(T2.link_to_event) > 7\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students majored in interior design, who have attended the Community Theater event?",
    "SELECT * FROM ( SELECT DISTINCT T1.`member_id` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Interior Design' ) AS T3 LIMIT 5; -- Limit the result set for better readability\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of students from Georgetown, South Carolina.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN ( SELECT DISTINCT T1.`member_id` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`city` = 'Georgetown' AND T2.`state` = 'South Carolina' ) AS T3 ON T1.`member_id` = T3.`member_id`\t----- bird -----\tstudent_club"
  ],
  [
    "How many income generated by Grant Gilmour?",
    "SELECT SUM(income.amount) FROM income WHERE income.link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Grant' AND last_name = 'Gilmour' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which student was able to generate income more than $40?",
    "SELECT member.first_name, member.last_name FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.amount > 40\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total expense for the Yearly Kickoff?",
    "SELECT SUM(cost) FROM expense WHERE link_to_budget IN ( SELECT budget_id FROM budget WHERE link_to_event IN ( SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff' ) );\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has been entrusted to manage the budget for the Yearly Kickoff?",
    "SELECT T1.member_id FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Yearly Kickoff' AND T1.event_status = 'Open'\t----- bird -----\tstudent_club"
  ],
  [
    "Which students manage to generate the highest income. State his/her full name along with the income source.",
    "SELECT member.first_name, member.last_name, income.source FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.amount = ( SELECT MAX(income.amount) FROM income WHERE income.link_to_member = member.member_id );\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the lowest cost?",
    "SELECT event_name FROM event LEFT JOIN expense ON event.event_id = expense.event_id WHERE expense.cost IS NOT NULL ORDER BY expense.cost ASC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?",
    "SELECT (SUM(cost) / (SELECT SUM(cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id)) * 100 FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the ratio between students majored in finance and physics?",
    "SELECT CAST(SUM(CASE WHEN major.major_name = 'Finance' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN major.major_name = 'Physics' THEN 1 ELSE 0 END) AS Ratio FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the top source of funds received in September 2019 based on their amount.",
    "SELECT source, SUM(amount) AS total_amount FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' GROUP BY source ORDER BY total_amount DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the full name and email address of the Student_Club's Secretary.",
    "SELECT first_name, last_name, email FROM member WHERE member_id = ( SELECT member_id FROM member WHERE position = 'Secretary' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have major in 'Physics Teaching'?",
    "SELECT COUNT(T1.`member_id`) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Physics Teaching'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members did attend the event 'Community Theater' in 2019?",
    "SELECT COUNT(*) FROM attendance AS a JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Community Theater' AND STRFTIME('%Y', e.event_date) = '2019'\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the number of events attended by Luisa Guidi. What is her major?",
    "SELECT T2.`major_name` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Luisa' AND T1.`last_name` = 'Guidi'\t----- bird -----\tstudent_club"
  ],
  [
    "On average, how much did the Student_Club spend on food for the typical event in the past?",
    "SELECT CAST(SUM(T3.cost) AS REAL) / COUNT(T2.event_id) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id INNER JOIN expense AS T3 ON T1.budget_id = T3.link_to_budget WHERE T2.status = 'Closed' AND T3.category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "Name the event with the highest amount spent on advertisement.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.category = 'Advertisement' ORDER BY T2.spent DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Did Maya Mclean attend the 'Women's Soccer' event?",
    "SELECT COUNT(*) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` INNER JOIN member AS T3 ON T1.`link_to_member` = T3.`member_id` WHERE T2.`event_name` = 'Women''s Soccer' AND T3.`first_name` = 'Maya' AND T3.`last_name` = 'Mclean'\t----- bird -----\tstudent_club"
  ],
  [
    "Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service'",
    "SELECT SUM(CASE WHEN event_name = 'Community Service' THEN 1 ELSE 0 END) AS community_service_count, COUNT(event_id) AS total_events FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31'\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the cost of posters for 'September Speaker' event.",
    "SELECT cost FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category = 'Speaker Gifts' AND expense_description = 'Posters';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most popular size of t-shirt ordered by the club members?",
    "SELECT t_shirt_size FROM ( SELECT t_shirt_size, COUNT(t_shirt_size) AS count FROM member GROUP BY t_shirt_size ) AS subquery WHERE count = ( SELECT MAX(count) FROM ( SELECT COUNT(t_shirt_size) AS count FROM member GROUP BY t_shirt_size ) )\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the name of the closed event whose cost has exceeded the budget the most.",
    "SELECT event_name FROM event WHERE event_id = ( SELECT event_id FROM budget WHERE remaining < 0 ORDER BY remaining ASC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "Identify the type of expenses and their total value approved for 'October Meeting' event.",
    "SELECT SUM(expense.cost) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND expense.approved = 'true';\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount.",
    "SELECT b.category, b.spent FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'April Speaker' ORDER BY b.spent ASC\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Food, which one has the highest budgeted amount?",
    "SELECT MAX(amount) FROM budget WHERE category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Advertising, list out top three which have the most budgeted amount?",
    "SELECT * FROM budget WHERE category = 'Advertisement' ORDER BY amount DESC LIMIT 3\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total cost spent for Parking in the list.",
    "SELECT SUM(cost) FROM expense WHERE expense_description = 'Parking'\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the total expense used on 8/20/2019.",
    "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?",
    "SELECT SUM(cost) FROM expense WHERE link_to_member = ( SELECT member_id FROM member WHERE member_id = 'rec4BLdZHS2Blfp4v' )\t----- bird -----\tstudent_club"
  ],
  [
    "State what kind of expenses that Sacha Harrison incurred?",
    "SELECT expense_description FROM expense WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison' )\t----- bird -----\tstudent_club"
  ],
  [
    "What kind of expenses incurred by members who have X-Large in size of tee shirt?",
    "SELECT expense.* FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the zip code of member who incurred less than 50USD.",
    "SELECT T2.zip FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.cost < 50\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Phillip Cullen has joined.",
    "SELECT major_name FROM major WHERE major_id = ( SELECT link_to_major FROM member WHERE first_name = 'Phillip' AND last_name = 'Cullen' )\t----- bird -----\tstudent_club"
  ],
  [
    "List out the position of members who joined major of Business.",
    "SELECT T1.`position` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Business'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of Business have the Medium size of tee shirt?",
    "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Business' AND member.t_shirt_size = 'Medium'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the type of events which have remaining budget more than 30 USD.",
    "SELECT T1.`type` FROM event AS T1 INNER JOIN budget AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`remaining` > 30\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the category of events which were held at MU 215.",
    "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the category of event which was taken place in 2020-03-24T12:00:00?",
    "SELECT category FROM budget WHERE link_to_event = ( SELECT event_id FROM event WHERE event_date = '2020-03-24T12:00:00' )\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Vice President has joined.",
    "SELECT major_name FROM member m JOIN major ma ON m.link_to_major = ma.major_id WHERE m.position = 'Vice President';\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of members who are major Mathematics in the list?",
    "SELECT SUM(CASE WHEN position = 'Member' AND major_name = 'Mathematics' THEN 1 ELSE 0 END) / COUNT(member_id) * 100 FROM member JOIN major ON member.link_to_major = major.major_id;\t----- bird -----\tstudent_club"
  ],
  [
    "State the category of events were held at MU 215.",
    "SELECT DISTINCT type FROM event WHERE location = 'MU 215'\t----- bird -----\tstudent_club"
  ],
  [
    "How many income are received with an amount of 50?",
    "SELECT COUNT(*) FROM income WHERE amount = 50\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members, how many of them have an extra large t-shirt size?",
    "SELECT COUNT(*) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
    "SELECT COUNT(*) FROM major WHERE `department` = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of members with a major in environmental engineering and include its department and college name.",
    "SELECT T1.last_name, T2.department, T3.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN ( SELECT college FROM major WHERE major_name = 'Environmental Engineering' ) AS T3 ON T2.college = T3.college WHERE T2.major_name = 'Environmental Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent?",
    "SELECT DISTINCT T1.category FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.location = 'MU 215' AND T2.type = 'Guest Speaker' AND T1.spent = 0\t----- bird -----\tstudent_club"
  ],
  [
    "List the city and state of members enrolled under electrical and computer engineering department.",
    "SELECT T1.city, T1.state FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T2.department = 'Electrical and Computer Engineering Department' AND T1.position = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN major AS T4 ON T3.link_to_major = T4.major_id INNER JOIN zip_code AS T5 ON T3.zip = T5.zip_code WHERE T3.position = 'Vice President' AND T5.city = 'Washington' AND T1.type = 'Social'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the last name and position of the student that bought pizza on 09/10/2019?",
    "SELECT last_name, position FROM member WHERE member_id = ( SELECT link_to_member FROM expense WHERE expense_description = 'Pizza' AND expense_date = '2019-09-10' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of the members of the club that attended the women's soccer event.",
    "SELECT T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id WHERE T3.event_name = 'Women''s Soccer' AND T1.position = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club?",
    "SELECT (COUNT(T2.member_id) * 100) / T1.total_count AS percentage FROM ( SELECT COUNT(DISTINCT member_id) AS total_count FROM member WHERE t_shirt_size = 'Medium' ) AS T1 JOIN ( SELECT COUNT(DISTINCT member_id) AS count FROM income WHERE amount = 50 ) AS T2 ON T1.total_count = T2.count;\t----- bird -----\tstudent_club"
  ],
  [
    "Which countries have zip codes with post office boxes?",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "What are the zip codes that have post office boxes in the country of the country of San Juan Municipio whose state is Puerto Rico?",
    "SELECT T1.`zip_code` FROM zip_code AS T1 INNER JOIN ( SELECT `country` FROM zip_code WHERE `city` = 'San Juan' AND `county` = 'Puerto Rico' ) AS T2 ON T1.`zip_code` = T2.`zip_code` WHERE T1.`type` = 'PO Box'\t----- bird -----\tstudent_club"
  ],
  [
    "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN ( SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' ) AS T2 ON T1.event_name = T2.event_name WHERE T1.event_date BETWEEN '2019-03-15' AND '2020-03-20' AND T1.status = 'Closed'\t----- bird -----\tstudent_club"
  ],
  [
    "Please provide links to events for members who have paid more than 50 dollar.",
    "SELECT T2.event_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN attendance AS T3 ON T1.`link_to_event` = T3.`link_to_event` WHERE T1.`cost` > 50\t----- bird -----\tstudent_club"
  ],
  [
    "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
    "SELECT T1.`member_id`, T1.`first_name`, T1.`last_name`, T1.`email`, T1.`position`, T1.`t_shirt_size`, T1.`phone`, T1.`zip`, T1.`link_to_major`, T2.`event_id`, T2.`event_name` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`event_id` = T3.`event_id` WHERE T2.`approved` = 'true' AND T2.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19' AND T3.`event_id` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".",
    "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T2.major_name = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the members who majored in business at the College of Agriculture and Applied Sciences.",
    "SELECT T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'College of Agriculture and Applied Sciences' AND T2.major_name = 'Business'\t----- bird -----\tstudent_club"
  ],
  [
    "List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019.",
    "SELECT member.email FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense_date BETWEEN '2019-09-10' AND '2019-11-19' GROUP BY member.email HAVING SUM(cost) > 20\t----- bird -----\tstudent_club"
  ],
  [
    "How many members have education major in the College of Education & Human Services?",
    "SELECT COUNT(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Education' AND major.department = 'College of Education & Human Services'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the events that went over budget?",
    "SELECT ( SELECT COUNT(budget_id) FROM budget WHERE remaining < 0 ) / ( SELECT COUNT(event_id) FROM event ) * 100\t----- bird -----\tstudent_club"
  ],
  [
    "Give the event ID, location, and status of events conducted from November 2019 to March 2020.",
    "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31'\t----- bird -----\tstudent_club"
  ],
  [
    "List the expenses that spend more than fifty dollars on average.",
    "SELECT * FROM expense WHERE cost > 50\t----- bird -----\tstudent_club"
  ],
  [
    "Find the full name of members whose t-shirt size is extra large.",
    "SELECT member.first_name, member.last_name FROM member WHERE member.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of zip codes that are PO boxes.",
    "SELECT SUM(CASE WHEN zip_code.type = 'PO Box' THEN 1 ELSE 0 END) / COUNT(zip_code.zip_code) * 100 FROM zip_code;\t----- bird -----\tstudent_club"
  ],
  [
    "List the name and location of events that underspend its budget.",
    "SELECT T1.event_name, T1.location FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T2.remaining > 0\t----- bird -----\tstudent_club"
  ],
  [
    "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
    "SELECT T2.event_id, T2.event_name, T2.event_date FROM expense AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.expense_description = 'Pizza' AND T1.cost > 50 AND T1.cost < 100\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name and major of members who had to spend more than a hundred dollars on an expense?",
    "SELECT T1.`first_name`, T1.`last_name`, T2.`major_name` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN major AS T3 ON T1.`link_to_major` = T3.`major_id` WHERE T2.`cost` > 100\t----- bird -----\tstudent_club"
  ],
  [
    "In the events with more than forty incomes, list the city and country in which the event is happening.",
    "SELECT T1.city, T1.country FROM event AS T1 INNER JOIN ( SELECT T2.event_id, T3.city, T3.country FROM event AS T2 INNER JOIN ( SELECT event_id FROM income WHERE amount > 40 GROUP BY event_id HAVING COUNT(event_id) > 40 ) AS T4 ON T2.event_id = T4.event_id INNER JOIN zip_code AS T3 ON T2.location = T3.zip_code ) AS T5 ON T1.event_id = T5.event_id\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members who incurred expenses in more than one event, who paid the most amount?",
    "SELECT T1.`member_id`, SUM(T1.`cost`) AS total_cost FROM expenses AS T1 JOIN attendance AS T2 ON T1.`link_to_member` = T2.`link_to_member` WHERE T2.`link_to_event` IN ( SELECT DISTINCT T3.`link_to_event` FROM expenses AS T3 JOIN attendance AS T4 ON T3.`link_to_member` = T4.`link_to_member` GROUP BY T3.`link_to_event` HAVING COUNT(DISTINCT T4.`link_to_event`) > 1 ) GROUP BY T1.`member_id` ORDER BY total_cost DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average amount paid by students in a position other than a member?",
    "SELECT AVG(cost) FROM expense WHERE link_to_member IN ( SELECT member_id FROM member WHERE position != 'Member' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of events with less than average parking cost.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.category = 'Parking' AND T3.cost < ( SELECT AVG(cost) FROM expense WHERE category = 'Parking' )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the cost for the game events?",
    "SELECT SUM(expense.cost) / COUNT(event_id) * 100 AS percentage FROM expense INNER JOIN event ON expense.event_id = event.event_id WHERE event.type = 'Game';\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget allowed the most money for water, chips, and cookies?",
    "SELECT T2.`budget_id` FROM expense AS T1 INNER JOIN budget AS T2 ON T1.`link_to_budget` = T2.`budget_id` WHERE T1.`expense_description` = 'Water, chips, cookies' ORDER BY T1.`cost` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the top five members who spend the most money in the descending order of spending.",
    "SELECT member.first_name, member.last_name FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost = ( SELECT MAX(expense.cost) FROM expense ) ORDER BY expense.cost DESC LIMIT 5\t----- bird -----\tstudent_club"
  ],
  [
    "Give the full name and contact number of members who had to spend more than average on each expense.",
    "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN ( SELECT member_id FROM expense GROUP BY link_to_member HAVING SUM(cost) > ( SELECT AVG(cost) FROM expense ) ) AS T2 ON T1.member_id = T2.member_id;\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference in the percentage of members in Maine and Vermont.",
    "SELECT ( (SELECT COUNT(*) FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'Member' AND zip_code.state = 'Maine' ) / ( SELECT COUNT(*) FROM member WHERE member.position = 'Member' ) ) - ( (SELECT COUNT(*) FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.position = 'Member' AND zip_code.state = 'Vermont' ) / ( SELECT COUNT(*) FROM member WHERE member.position = 'Member' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the major of Garrett Gerke and which department does it belong to?",
    "SELECT T2.`department` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Garrett' AND T1.`last_name` = 'Gerke'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
    "SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last names of students under the Elementary Education major and include their phone numbers.",
    "SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.major_name = 'Elementary Education'\t----- bird -----\tstudent_club"
  ],
  [
    "What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category?",
    "SELECT category, amount FROM budget WHERE link_to_event = ( SELECT event_id FROM event WHERE event_name = 'January Speaker' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the event names which were budgeted for the food.",
    "SELECT T2.`event_name` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T1.`category` = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
    "SELECT member.first_name, member.last_name, income.amount FROM income INNER JOIN member ON income.link_to_member = member.member_id INNER JOIN attendance ON member.member_id = attendance.link_to_member WHERE income.date_received = '2019-09-09'\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget category does the expense 'Posters' fall to?",
    "SELECT budget.category FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense_description = 'Posters'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to.",
    "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.position = 'Secretary'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total amount spent on speaker gifts and list the name of the event they were spent on.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.category = 'Speaker Gifts'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown of Garrett Girke?",
    "SELECT zip_code.city FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.member_id = <obtained_member_id>;\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has the hometown of Lincolnton, North Carolina with the zip code of 28092? List their full name and position.",
    "SELECT member.position FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.city = 'Lincolnton' AND zip_code.state = 'North Carolina' AND zip_code.zip_code = 28092\t----- bird -----\tstudent_club"
  ],
  [
    "How many gas stations in CZE has Premium gas?",
    "SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the ratio of costumers who pay in EUR against customers who pay in CZK?",
    "SELECT (SELECT COUNT(*) FROM customers WHERE Currency = 'EUR') / (SELECT COUNT(*) FROM customers WHERE Currency = 'CZK')\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In 2012, who had the least consumption in LAM?",
    "SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T1.Date BETWEEN '201201' AND '201212' ORDER BY T1.Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the average monthly consumption of customers in SME for the year 2013?",
    "SELECT AVG(T2.Consumption) / 12 AS AverageMonthlyConsumption FROM ( SELECT T1.CustomerID, T2.Consumption FROM transactions_1k AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '20130101' AND '20131231' ) AS T3 JOIN customers AS T1 ON T1.CustomerID = T3.CustomerID WHERE T1.Segment = 'SME'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customers, paying in CZK, consumed the most gas in 2011?",
    "SELECT T3.CustomerID FROM ( SELECT DISTINCT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Price = 'CZK' ) AS T3 INNER JOIN ( SELECT T1.CustomerID FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '20110101' AND '20111231' GROUP BY T1.CustomerID ORDER BY SUM(T1.Consumption) DESC LIMIT 1 ) AS T4 ON T3.CustomerID = T4.CustomerID;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many customers in KAM had a consumption of less than 30,000 for the year 2012?",
    "SELECT COUNT(*) FROM ( SELECT Consumption FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'KAM' ) AND Date BETWEEN '20120101' AND '20121231' ) AS T WHERE T.Consumption < 30000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "SELECT ( SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' AND T1.Date BETWEEN '20120101' AND '20121231' ) - ( SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' AND T1.Date BETWEEN '20120101' AND '20121231' ) AS Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most gas use paid in EUR?",
    "SELECT STRFTIME('%Y', yearmonth.Date) AS Year, SUM(yearmonth.Consumption) AS TotalConsumption FROM yearmonth GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which segment had the least consumption?",
    "SELECT c.Segment FROM customers AS c INNER JOIN ( SELECT ym.CustomerID, SUM(ym.Consumption) AS TotalConsumption FROM yearmonth AS ym GROUP BY ym.CustomerID ) AS subquery ON c.CustomerID = subquery.CustomerID ORDER BY TotalConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most consumption of gas paid in CZK?",
    "SELECT strftime('%Y', Date) AS Year, SUM(Consumption) AS TotalConsumption FROM yearmonth WHERE Date LIKE '%YYYY%' -- Ensure the date has at least the first 4 characters as year GROUP BY strftime('%Y', Date) ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the gas consumption peak month for SME customers in 2013?",
    "SELECT MAX(Consumption) AS PeakConsumption, Date FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM customers WHERE Segment = 'SME' ) AND Date LIKE '2013%' GROUP BY Date ORDER BY PeakConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "SELECT T1.Segment, T1.CustomerID, T1.Consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' GROUP BY T1.Segment, T1.CustomerID ORDER BY T1.Consumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "SELECT yearmonth.CustomerID, customers.Segment, yearmonth.Consumption_2012, yearmonth.Consumption_2013, yearmonth.Consumption_2013 - yearmonth.Consumption_2012 AS Change FROM ( SELECT yearmonth.CustomerID, yearmonth.Consumption, yearmonth.Date, CASE WHEN yearmonth.Date BETWEEN '20120101' AND '20121231' THEN yearmonth.Consumption ELSE NULL END AS Consumption_2012, CASE WHEN yearmonth.Date BETWEEN '20130101' AND '20131231' THEN yearmonth.Consumption ELSE NULL END AS Consumption_2013 FROM yearmonth ) AS T INNER JOIN customers ON T.CustomerID = customers.CustomerID\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did customer 6 consume in total between August and November 2013?",
    "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201308' AND '201311' AND T2.CustomerID = 6\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "SELECT ( SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE' AND Segment = 'Discount' ) - ( SELECT COUNT(*) FROM gasstations WHERE Country = 'SVK' AND Segment = 'Discount' ) AS Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much more was customer 7 consuming in April 2013 than customer 5?",
    "SELECT ( SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 7 AND Date = '201304' ) - ( SELECT SUM(Consumption) FROM yearmonth WHERE CustomerID = 5 AND Date = '201304' ) AS ConsumptionDifference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "SELECT ( SELECT SUM(CASE WHEN T1.`Currency` = 'CZK' THEN T2.`Amount` ELSE 0 END) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' ) - ( SELECT SUM(CASE WHEN T1.`Currency` = 'EUR' THEN T2.`Amount` ELSE 0 END) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'SME' ) AS Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?",
    "SELECT T1.CustomerID FROM yearmonth AS T2 INNER JOIN customers AS T1 ON T2.CustomerID = T1.CustomerID WHERE T2.Date = '201310' AND T1.Segment = 'LAM' AND T1.Currency = 'EUR' ORDER BY T2.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who among KAM's customers consumed the most? How much did it consume?",
    "SELECT T1.CustomerID, SUM(T1.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' GROUP BY T1.CustomerID ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did the KAM customers consume in total in May 2013?",
    "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN ( SELECT DISTINCT T2.CustomerID FROM customers AS T2 WHERE T2.Segment = 'KAM' ) AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date LIKE '201305%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many percent of LAM customer consumed more than 46.73?",
    "SELECT (SUM(CASE WHEN T3.Amount > 46.73 THEN 1 ELSE 0 END) * 100) / COUNT(T3.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN transactions_1k AS T3 ON T1.CustomerID = T3.CustomerID WHERE T2.Segment = 'LAM'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country has more \"value for money\" gas stations? Please give a total number of \"value for money\" gas stations in each country.",
    "SELECT Country, COUNT(*) AS Count FROM gasstations WHERE Segment = 'Value for money' GROUP BY Country\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of KAM customers pay in euros?",
    "SELECT ( SELECT COUNT(*) FROM transactions_1k t JOIN customers c ON t.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' AND t.Price = 'EUR' ) / ( SELECT COUNT(*) FROM customers WHERE customers.Segment = 'KAM' ) * 100 AS Percentage\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In February 2012, what percentage of customers consumed more than 528.3?",
    "SELECT (COUNT(DISTINCT T1.CustomerID) * 100) / (SELECT COUNT(DISTINCT T1.CustomerID) FROM yearmonth AS T1 WHERE T1.Date LIKE '201202%') FROM yearmonth AS T1 WHERE T1.Date LIKE '201202%' AND T1.Consumption > 528.3\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of Slovakian gas stations are premium?",
    "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM gasstations WHERE Country = 'CZE') FROM gasstations WHERE Country = 'CZE' AND Segment = 'Premium'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client ID consumed the most in September 2013?",
    "SELECT T1.CustomerID FROM ( SELECT T1.CustomerID, SUM(T2.Consumption) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID AND T2.Date = '201309' GROUP BY T1.CustomerID ) AS T3 ORDER BY T3.TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client segment consumed the least in September 2013?",
    "SELECT customers.Segment FROM ( SELECT customers.Segment, SUM(yearmonth.Consumption) AS TotalConsumption FROM customers INNER JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = '201309' GROUP BY customers.Segment ) AS SubQuery ORDER BY TotalConsumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which SME customer consumed the least in June 2012?",
    "SELECT T1.CustomerID, T2.Consumption FROM ( SELECT CustomerID FROM customers WHERE Segment = 'SME' ) AS T1 INNER JOIN ( SELECT CustomerID, MIN(Consumption) AS MinConsumption FROM yearmonth WHERE Date = '201206' GROUP BY CustomerID ) AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T2.MinConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the highest monthly consumption in the year 2012?",
    "SELECT MAX(Consumption) FROM ( SELECT Date, Consumption FROM yearmonth WHERE SUBSTR(Date, 1, 4) = '2012' ) AS SubQuery\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the biggest monthly consumption of the customers who use euro as their currency?",
    "SELECT MAX(MonthlyConsumption) FROM ( SELECT T1.CustomerID, SUM(T2.Consumption) AS MonthlyConsumption FROM yearmonth AS T2 INNER JOIN ( SELECT CustomerID FROM customers WHERE Currency = 'EUR' ) AS T1 ON T2.CustomerID = T1.CustomerID GROUP BY T1.CustomerID ) AS T3\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products consumed in September, 2013.",
    "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID AND T2.Date LIKE '201309%' INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "SELECT DISTINCT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date BETWEEN '2013-06-01' AND '2013-06-30'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the chains of the gas stations with transactions in euro.",
    "SELECT COUNT(*) FROM transactions_1k WHERE Price = 'EUR';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products bought in transactions in euro.",
    "SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in January, 2012?",
    "SELECT AVG(t.Price) FROM transactions_1k t WHERE t.Date LIKE '2012-01%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID AND T2.Price = 'EUR' INNER JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID AND T3.Consumption > 1000;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "SELECT products.Description FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID INNER JOIN products ON transactions_1k.ProductID = products.ProductID WHERE gasstations.Country = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
    "SELECT DISTINCT Date, Time FROM transactions_1k WHERE GasStationID IN ( SELECT GasStationID FROM gasstations WHERE ChainID = 11 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?",
    "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN ( SELECT GasStationID FROM gasstations WHERE Country = 'CZE' ) AND Price > 1000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "SELECT COUNT(*) FROM transactions_1k WHERE GasStationID IN ( SELECT GasStationID FROM gasstations WHERE Country = 'CZE' ) AND Date > '2012-01-01'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in gas stations in the Czech Republic?",
    "SELECT AVG(T1.Amount * T1.Price) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Country = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customers who paid in the euro, what is their average total price of the transactions?",
    "SELECT AVG(T2.Amount) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Price IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customer paid the most in 2012/8/25?",
    "SELECT CustomerID FROM ( SELECT CustomerID, SUM(Amount) AS TotalAmount FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ) AS T WHERE T.TotalAmount = ( SELECT MAX(TotalAmount) FROM ( SELECT CustomerID, SUM(Amount) AS TotalAmount FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ) AS T2 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country's gas station had the first paid cusomer in 2012/8/25?",
    "SELECT T2.Country FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Amount > 0 ORDER BY T1.Date ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
    "SELECT T2.Currency FROM customers AS T2 WHERE T2.CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What segment did the customer have at 2012/8/23 21:20:00?",
    "SELECT T1.Segment FROM customers AS T1 WHERE T1.CustomerID = ( SELECT T2.CustomerID FROM transactions_1k AS T2 WHERE T2.Date = '2012-08-23' AND T2.Time = '21:20:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions were paid in EUR in the morning of 2012/8/26?",
    "SELECT COUNT(*) FROM transactions_1k WHERE Date = '2012-08-26' AND Time < '13:00:00' AND Price > 0\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the earliest customer, what segment did he/she have?",
    "SELECT T1.Segment FROM customers AS T1 WHERE T1.CustomerID = ( SELECT MIN(T2.CustomerID) FROM customers AS T2 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the deal happened at 2012/8/24 12:42:00, which country was it?",
    "SELECT T2.Country FROM gasstations AS T2 WHERE T2.GasStationID = ( SELECT T1.GasStationID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-24' AND T1.Time = '12:42:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the product id of the transaction happened at 2012/8/23 21:20:00?",
    "SELECT T1.ProductID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",
    "SELECT * FROM yearmonth WHERE Date BETWEEN '2012-01-01' AND '2012-01-31'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",
    "SELECT COUNT(*) FROM transactions_1k INNER JOIN gasstations ON transactions_1k.GasStationID = gasstations.GasStationID WHERE Date = '2012-08-26' AND Time BETWEEN '08:00:00' AND '09:00:00' AND gasstations.Country = 'CZE';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",
    "-- Corrected SQL query SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN yearmonth AS T3 ON T2.Date LIKE '%201306%' AND T3.CustomerID = T2.CustomerID WHERE T2.Amount = 214582.17;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country was the card owner of No.667467 in?",
    "SELECT T2.`Country` FROM gasstations AS T2 WHERE T2.`GasStationID` = ( SELECT T1.`GasStationID` FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`CardID` = 667467 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What's the nationality of the customer who spent 548.4 in 2012/8/24?",
    "SELECT T3.Country FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T1.Date = '2012-08-24' AND T1.Amount = 548.4;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of the customers who used EUR in 2012/8/25?",
    "SELECT ( SELECT COUNT(DISTINCT T1.CustomerID) FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25' AND T2.Price > 0 AND T2.ProductID IN ( SELECT ProductID FROM products WHERE Description LIKE '%EUR%' ) ) / ( SELECT COUNT(DISTINCT T1.CustomerID) FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25' AND T2.Price > 0 ) * 100\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
    "SELECT T1.Consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '2012-01-01' AND '2012-12-31' AND T2.CustomerID = <customer_id>; SELECT T1.Consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '2013-01-01' AND '2013-12-31' AND T2.CustomerID = <customer_id>;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which gas station has the highest amount of revenue?",
    "SELECT T2.`GasStationID`, SUM(T1.`Amount` * T1.`Price`) AS Revenue FROM transactions_1k AS T1 JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` GROUP BY T2.`GasStationID` ORDER BY Revenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of \"premium\" against the overall segment in \"SVK\"?",
    "SELECT (COUNT(*) * 1.0 / total_customers) * 100 FROM ( SELECT COUNT(*) AS total_customers FROM customers WHERE customers.Country = 'SVK' ) AS total_customers, ( SELECT COUNT(*) FROM customers WHERE customers.Country = 'SVK' AND customers.Segment = 'Premium' ) AS premium_customers;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "SELECT SUM(T1.Amount) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.CustomerID = 38508 AND T1.Date BETWEEN '20120101' AND '20120131' AND T1.Amount IS NOT NULL;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which are the top five best selling products? Please state the full name of them.",
    "SELECT products.Description AS ProductName FROM ( SELECT products.Description, SUM(transactions_1k.Amount) AS TotalSale FROM products INNER JOIN transactions_1k ON products.ProductID = transactions_1k.ProductID GROUP BY products.Description ORDER BY TotalSale DESC LIMIT 5 ) AS T3;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "SELECT Currency FROM customers WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k GROUP BY CustomerID ORDER BY SUM(Amount) DESC LIMIT 1 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country had the gas station that sold the most expensive product id No.2 for one unit?",
    "SELECT T2.Country FROM gasstations AS T1 JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ProductID = 2 AND T2.Amount = 1 AND T2.Price = ( SELECT MAX(T3.Price) FROM transactions_1k AS T3 JOIN products AS T4 ON T3.ProductID = T4.ProductID WHERE T4.ProductID = 2 );\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "SELECT T1.CustomerID, T3.Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN transactions_1k AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date LIKE '201208%' AND T3.CustomerID IN ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Description = 'Product ID No.5' AND T1.Price / T1.Amount > 29.00 )\t----- bird -----\tdebit_card_specializing"
  ]
]