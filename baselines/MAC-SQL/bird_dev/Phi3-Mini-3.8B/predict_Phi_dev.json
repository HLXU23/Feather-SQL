[
  [
    "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
    "SELECT T3.sname FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T2.CDSCode = T3.cds WHERE T2.County = 'Alameda' AND T2.GSoffered = 'K-12' AND T1.FreeMealCountK12 / T1.EnrollmentK12 = ( SELECT MAX(CAST(T3.FreeMealCountK12 AS REAL) / T3.EnrollmentK12) FROM frpm AS T4 INNER JOIN schools AS T5 ON T4.CDSCode = T5.CDSCode INNER JOIN satscores AS T6 ON T5.CDSCode = T6.cds WHERE T5.County = 'Alameda' AND T5.GSoffered = 'K-12' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.",
    "SELECT T2.`sname` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`GSserved` = 'K-12' AND T2.`Educational Option Type` = 'Continuation School' AND T1.`Percent (%) Eligible Free (Ages 5-17)` IS NOT NULL GROUP BY T2.`sname` ORDER BY MIN(T1.`Percent (%) Eligible Free (Ages 5-17)`) ASC LIMIT 3;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the zip code of all the charter schools in Fresno County Office of Education.",
    "SELECT DISTINCT T2.CDSCode FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Charter = 1 AND T2.SOCType = 'County Community Day School' AND T2.SOC = '69' AND T1.DistrictType = 'County Office of Education (COE)' AND T1.cname = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?",
    "SELECT T2.`School` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`FRPM Count (K-12)` = ( SELECT MAX(T3.`FRPM Count (K-12)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.`CDSCode` = T4.`CDSCode` )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.",
    "SELECT DISTINCT T3.`School Name`, T3.`School Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN schools AS T3 ON T2.`CDSCode` = T3.`CDSCode` WHERE T1.`Charter School (Y/N)` = 1 AND T3.`FundingType` = 'Directly funded' AND T1.`StatusType` = 'Active' AND CAST(SUBSTR(T1.`LastUpdate`, 1, 10) AS DATE) > '2000-01-01'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools with an average score in Math under 400 in the SAT test are exclusively virtual?",
    "SELECT COUNT(*) FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.Virtual = 'F' AND satscores.AvgScrMath < 400\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.",
    "SELECT DISTINCT S.School FROM schools AS S JOIN satscores AS SC ON S.CDSCode = SC.cds WHERE SC.NumTstTakr > 500 AND S.Magnet = 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
    "SELECT T3.`Phone` FROM schools AS T3 INNER JOIN ( SELECT T2.`sname`, MAX(T2.`NumGE1500`) AS MaxGE1500 FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` IS NOT NULL GROUP BY T2.`sname` ) AS T4 ON T3.`CDSCode` = T4.`sname`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?",
    "SELECT T2.`NumTstTakr` FROM satscores AS T2 INNER JOIN ( SELECT T1.`CDSCode` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`GSoffered` = 'K-12' ORDER BY T2.`Enrollment (Ages 5-17)` DESC LIMIT 1 ) AS T3 ON T2.`cds` = T3.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?",
    "SELECT COUNT(*) FROM ( SELECT s.sname FROM satscores AS s INNER JOIN schools AS sc ON s.cds = sc.CDSCode WHERE s.AvgScrMath > 560 AND sc.FundingType = 'Directly funded' ) AS T1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the codes of the schools with a total enrollment of over 500.",
    "SELECT frpm.`CDSCode` FROM frpm WHERE (frpm.`Enrollment (K-12)` + frpm.`Enrollment (Ages 5-17)`) > 500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?",
    "SELECT MAX(T1.`Percent (%) Eligible FRPM (K-17)` / T1.`Enrollment (Ages 5-17)`) AS `EligibleFreeRate` FROM frpm AS T1 INNER JOIN ( SELECT T2.`sname`, T2.`CDSCode`, T2.`Free Meal Count (Ages 5-17)`, T2.`Enrollment (Ages 5-17)`, T2.`Percent (%) Eligible FRPM (K-17)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` > 0.3 ) AS T3 ON T1.`CDSCode` = T3.`CDSCode` GROUP BY T1.`CDSCode` ORDER BY `EligibleFreeRate` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the schools with the top 3 SAT excellence rate.",
    "SELECT T3.`School`, T3.`Phone` FROM ( SELECT T2.`sname`, CAST(T2.`NumGE1500` AS REAL) / T2.`NumTstTakr` AS ExcellenceRate FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumTstTakr` > 0 GROUP BY T2.`sname` ORDER BY ExcellenceRate DESC LIMIT 3 ) AS T1 INNER JOIN schools AS T3 ON T1.`sname` = T3.`School`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.",
    "SELECT T2.`NCESSchool` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` GROUP BY T2.`NCESSchool` ORDER BY MAX(T1.`Enrollment (Ages 5-17)`) DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which active district has the highest average score in Reading?",
    "SELECT DISTINCT satscores.`dname` FROM schools AS s JOIN frpm ON s.`CDSCode` = frpm.`CDSCode` JOIN satscores ON s.`CDSCode` = satscores.`cds` WHERE s.`StatusType` = 'Active' AND satscores.`dname` IS NOT NULL ORDER BY satscores.`dname` ASC;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in merged Alameda have number of test takers less than 100?",
    "SELECT COUNT(*) FROM ( SELECT s.CDSCode FROM schools AS s INNER JOIN frpm AS f ON s.`CDSCode` = f.`CDSCode` WHERE f.`County Code` = '36' AND f.`StatusType` = 'Merged' ) AS T1 INNER JOIN ( SELECT s.`CDSCode` FROM schools AS s INNER JOIN satscores AS sc ON s.`CDSCode` = sc.`cds` WHERE sc.`County Code` = '36' ) AS T2 ON T1.CDSCode = T2.CDSCode GROUP BY T1.CDSCode HAVING MAX(T2.`NumTstTakr`) < 100;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the charter number of the school that the average score in Writing is 499?",
    "SELECT T2.`CharterNum` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`AvgScrWrite` = 499 GROUP BY T2.`CharterNum`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Contra Costa (directly funded) have number of test takers not more than 250?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Contra Costa' AND T1.`FundingType` = 'Directly funded' AND T2.`FRPM Count (K-12)` <= 250 GROUP BY T2.`FRPM Count (K-12)`;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest average score in Math?",
    "SELECT T1.`Phone` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` ORDER BY T2.`AvgScrMath` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?",
    "-- Count the number of schools in County Code '37' with Low Grade '9' and High Grade '12' SELECT COUNT(*) FROM ( -- Select distinct school codes from the schools table SELECT DISTINCT s.CDSCode FROM schools AS s -- Join the frpm table on school code INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode -- Filter by County Code '37' and Grade levels '9' and '12' WHERE f.\"County Code\" = '37' AND s.\"Low Grade\" = '9' AND s.\"High Grade\" = '12' ) AS T3;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
    "-- Assuming you have the tables frpm, schools, and satscores created in your SQLite database -- Run the corrected SQL query SELECT DISTINCT T2.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County Name` = 'Los Angeles' AND T1.`FRPM Count (K-12)` > 500 AND T1.`FRPM Count (K-12)` < 700 AND T2.`School Type` IS NOT NULL AND T2.`School Type` = 'K-12 Schools (Public)' GROUP BY T2.`School Name` ORDER BY T2.`School Name` ASC;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which school in Contra Costa has the highest number of test takers?",
    "SELECT T3.School FROM schools AS T3 JOIN frpm AS T1 ON T3.CDSCode = T1.CDSCode JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T3.County = 'Contra Costa' AND T3.StatusType = 'Active' AND T3.Magnet = 1 GROUP BY T3.School HAVING T2.NumTstTakr = ( SELECT MAX(T4.NumTstTakr) FROM schools AS T6 JOIN frpm AS T4 ON T6.CDSCode = T4.CDSCode JOIN satscores AS T5 ON T4.cds = T5.cds WHERE T6.County = 'Contra Costa' AND T6.StatusType = 'Active' AND T6.Magnet = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
    "SELECT S.SchoolName, S.CDSCode, S.Street, S.StreetAbr, S.City, S.Zip FROM schools AS S INNER JOIN ( SELECT CDSCode, Enrollment (K-12) AS Enrollment_K12, Enrollment (Ages 5-17) AS Enrollment_Ages517 FROM frpm ) AS FRPM ON S.CDSCode = FRPM.CDSCode WHERE ABS(FRPM.Enrollment_K12 - FRPM.Enrollment_Ages517) > 30\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?",
    "SELECT DISTINCT T2.`sname` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN ( SELECT `cds`, MAX(`NumGE1500`) AS `MaxScore` FROM satscores GROUP BY `cds` ) AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T1.`Percent (%) Eligible Free (K-12)` > 0.1 AND T3.`MaxScore` >= 1500;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?",
    "SELECT DISTINCT schools.FundingType FROM schools JOIN ( SELECT s.CDSCode FROM satscores s JOIN schools s ON s.CDSCode = s.CDSCode WHERE s.cname = 'Riverside' AND s.AvgScrMath IS NOT NULL GROUP BY s.CDSCode HAVING AVG(s.AvgScrMath) > 400 ) AS AvgMathScores ON schools.CDSCode = AvgMathScores.CDSCode\t----- bird -----\tcalifornia_schools"
  ],
  [
    "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?",
    "SELECT DISTINCT T2.\"School Name\", T2.\"Street\", T2.\"City\", T2.\"Zip\", T2.\"State\" FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.\"CDSCode\" = T2.\"CDSCode\" WHERE T1.\"District Code\" = '060' AND T1.\"FRPM Count (Ages 15-17)\" > 800 AND T2.\"School Type\" = 'High Schools (Public)'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.",
    "SELECT schools.SchoolName, schools.CommunicationNumber, AVG(satscores.AvgScrWrite) AS AverageWritingScore FROM schools INNER JOIN satscores ON schools.CDSCode = satscores.cds WHERE (schools.`Academic Year` > '1991') OR (schools.`Academic Year` < '2000') GROUP BY schools.SchoolName, schools.CommunicationNumber ORDER BY AverageWritingScore DESC;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
    "SELECT schools.SchoolName, schools.SchoolType FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE (frpm.EnrollmentK12 - frpm.EnrollmentAges5to17) > ( SELECT AVG(frpm.EnrollmentK12 - frpm.EnrollmentAges5to17) FROM frpm INNER JOIN schools ON frpm.CDSCode = schools.CDSCode )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "When did the first-through-twelfth-grade school with the largest enrollment open?",
    "SELECT T1.`LastUpdate` FROM frpm AS T1 INNER JOIN ( SELECT T2.`CDSCode` FROM frpm AS T2 INNER JOIN schools AS T3 ON T2.`CDSCode` = T3.`CDSCode` WHERE T2.`GSserved` = 'K-12' GROUP BY T2.`CDSCode` ORDER BY T2.`Enrollment (K-12)` DESC LIMIT 1 ) AS T4 ON T1.`CDSCode` = T4.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?",
    "SELECT T1.`School Name`, T1.`Enrollment (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Enrollment (K-12)` IS NOT NULL GROUP BY T1.`School Name`, T1.`Enrollment (K-12)` ORDER BY `Enrollment (K-12)` ASC LIMIT 5;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
    "SELECT T1.`Percent (%) Eligible Free (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`GSserved` LIKE '%K-12%' ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 2\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?",
    "SELECT T1.SchoolName, CAST(T1.FRPMCountK12 AS REAL) / T1.EnrollmentK12 AS 'Eligible Free or Reduced Price Meal Rate' FROM frpm AS T1 INNER JOIN ( SELECT T3.CDSCode, SUM(T1.FRPMCountK12) AS 'FRPMCountK12', SUM(T1.EnrollmentK12) AS 'EnrollmentK12' FROM frpm AS T1 INNER JOIN schools AS T3 ON T1.CDSCode = T3.CDSCode WHERE T3.EdOpsCode = '66' GROUP BY T3.CDSCode ) AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CDSCode IN ( SELECT T3.CDSCode FROM schools AS T3 WHERE T3.EdOpsCode = '66' GROUP BY T3.CDSCode ORDER BY SUM(T1.FRPMCountK12) DESC LIMIT 5 ) ORDER BY T2.FRPMCountK12 DESC;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.",
    "SELECT DISTINCT S.SchoolName, S.Website FROM frpm AS F INNER JOIN schools AS S ON F.`CDSCode` = S.`CDSCode` WHERE F.`FreeMealCount (Ages 5-17)` BETWEEN 1900 AND 2000 AND S.`Website` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson?",
    "SELECT T2.`Percent (%) Eligible Free (Ages 5-17)` AS FreeRate FROM frpm AS T2 INNER JOIN schools AS T1 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T1.`School Name` IS NOT NULL GROUP BY T2.`Percent (%) Eligible Free (Ages 5-17)`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12?",
    "SELECT T1.email FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.CharterSchool = 1 AND T2.GSserved = 'K-12' AND T1.EnrollmentK12 = ( SELECT MIN(T2.EnrollmentK12) FROM frpm AS T2 INNER JOIN schools AS T3 ON T2.CDSCode = T3.CDSCode WHERE T3.CharterSchool = 1 AND T3.GSserved = 'K-12' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name.",
    "SELECT T2.`AdmLName3` || ' ' || T2.`AdmFName3` AS AdministratorFullName FROM ( SELECT T1.`CDSCode`, MAX(T2.`NumGE1500`) AS MaxGE1500 FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` GROUP BY T1.`CDSCode` ) AS SubQuery INNER JOIN schools AS T3 ON SubQuery.`CDSCode` = T3.`CDSCode` INNER JOIN ( SELECT T2.`cds`, T2.`AdmLName3`, T2.`AdmFName3` FROM satscores AS T2 INNER JOIN schools AS T3 ON T2.`cds` = T3.`CDSCode` WHERE T3.`StatusType` = 'Active' ) AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T4.`NumGE1500` = SubQuery.MaxGE1500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
    "SELECT T1.`sname`, T1.`Street`, T1.`City`, T1.`Zip`, T1.`State` FROM schools AS T1 INNER JOIN ( SELECT T1.`CDSCode` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`rtype` = 'S' GROUP BY T1.`CDSCode` HAVING CAST(SUM(T2.`NumGE1500`) AS REAL) / SUM(T2.`NumTstTakr`) = ( SELECT MIN(CAST(SUM(T3.`NumGE1500`) AS REAL) / SUM(T3.`NumTstTakr`)) FROM frpm AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T4.`rtype` = 'S' GROUP BY T3.`CDSCode` ) ) AS T5 ON T1.`CDSCode` = T5.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?",
    "SELECT T1.`School` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`County` = 'Los Angeles' AND T2.`NumTstTakr` BETWEEN 2000 AND 3000;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?",
    "SELECT AVG(s.NumTstTakr) AS AverageTestTakers FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode WHERE f.DistrictName = 'Fresno' AND f.AcademicYear = '1980-1981' AND s.OpenDate <= '1980-12-31' AND (s.ClosedDate IS NULL OR s.ClosedDate >= '1980-01-01') GROUP BY f.CDSCode;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the telephone number for the school with the lowest average score in reading in Fresno Unified?",
    "SELECT T1.`Phone` FROM schools AS T1 INNER JOIN ( SELECT T2.`CDSCode` FROM schools AS T2 INNER JOIN satscores AS T3 ON T2.`CDSCode` = T3.`cds` WHERE T3.`rtype` = 'S' AND T2.`district_id` = ( SELECT `district_id` FROM frpm WHERE `district_name` = 'Fresno Unified' ) ORDER BY T3.`AvgScrRead` ASC LIMIT 1 ) AS T4 ON T1.`CDSCode` = T4.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which exclusively virtual schools have the top 5 highest average reading scores?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the type of education offered in the school who scored the highest average in Math?",
    "SELECT DISTINCT schools.EdOpsCode FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode JOIN ( SELECT satscores.cds FROM satscores INNER JOIN frpm ON satscores.cds = frpm.CDSCode WHERE frpm.AvgScrMath IS NOT NULL AND frpm.AvgScrMath = ( SELECT MAX(frpm.AvgScrMath) FROM frpm WHERE frpm.AvgScrMath IS NOT NULL ) ) AS HighestMathSchools ON schools.CDSCode = HighestMathSchools.cds\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?",
    "SELECT T2.`AvgScrMath` FROM satscores AS T2 INNER JOIN ( SELECT T1.`CDSCode` FROM schools AS T1 INNER JOIN frpm AS T3 ON T1.`CDSCode` = T3.`CDSCode` INNER JOIN satscores AS T4 ON T1.`CDSCode` = T4.`cds` GROUP BY T1.`CDSCode`, T1.`cname`, T1.`dname` ORDER BY (T4.`AvgScrMath` + T4.`AvgScrRead` + T4.`AvgScrWrite`) ASC LIMIT 1 ) AS SubQuery ON T2.`cds` = SubQuery.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.",
    "SELECT DISTINCT S.City FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode INNER JOIN satscores AS SC ON S.CDSCode = SC.cds WHERE SC.NumGE1500 = ( SELECT MAX(SC2.NumGE1500) FROM frpm AS F2 INNER JOIN satscores AS SC2 ON F2.CDSCode = SC2.cds WHERE F2.CDSCode = F.CDSCode )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores.",
    "SELECT schools.`School`, AVG(satscores.`AvgScrWrite`) AS `AverageWritingScore` FROM schools INNER JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` INNER JOIN satscores ON schools.`CDSCode` = satscores.`cds` WHERE frpm.`Charter School (Y/N)` IS NOT NULL AND schools.`School` LIKE 'Ricci Ulrich%' GROUP BY schools.`School`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "SELECT T1.NCESSchool, COUNT(T1.NCESSchool) AS EnrollmentCount FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.EILCode = 'ELEMHIGH' GROUP BY T1.NCESSchool ORDER BY EnrollmentCount DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?",
    "SELECT AVG(monthly_opened_schools) FROM ( SELECT COUNT(*) AS monthly_opened_schools FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Alameda' AND T1.`OpenDate` >= '1980-01-01' AND T1.`OpenDate` < '1981-01-01' AND T2.`District Code` = 52 AND T1.`OpenDate` IS NOT NULL GROUP BY strftime('%Y', T1.`OpenDate`), strftime('%m', T1.`OpenDate`) ) AS subquery;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?",
    "SELECT ( SELECT COUNT(DISTINCT s.CDSCode) FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE f.StatusType = 'Merged' AND f.DOC = '54' AND f.County = 'Orange' ) / ( SELECT COUNT(DISTINCT s.CDSCode) FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE f.StatusType = 'Merged' AND f.DOC = '52' AND f.County = 'Orange' ) AS ratio\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.",
    "SELECT frpm.cname AS County, schools.School, schools.ClosedDate FROM schools JOIN frpm ON schools.CDSCode = frpm.CDSCode JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.StatusType = 'Closed' GROUP BY frpm.cname, schools.School, schools.ClosedDate ORDER BY COUNT(*) DESC, frpm.cname ASC\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the postal street address for the school with the 6th highest Math average? Indicate the school's name.",
    "SELECT T1.`Street`, T1.`MailStreet`, T1.`MailCity`, T1.`Zip` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` ORDER BY T2.`AvgScrMath` DESC LIMIT 6 OFFSET 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.",
    "SELECT T1.`street` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`rtype` = 'S' AND T2.`AvgScrRead` IS NOT NULL ORDER BY T2.`AvgScrRead` ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?",
    "SELECT COUNT(*) FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`City` = 'Lakeport' AND (T2.`AvgScrRead` + T2.`AvgScrMath` + T2.`AvgScrWrite`) >= 1500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many test takers are there at the school/s whose mailing city address is in Fresno?",
    "SELECT T2.`FRPM Count (K-12)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`City` = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.",
    "SELECT S.SchoolName, S.CountyName, S.DistrictName, S.Zip, S.MailZip, S.MailCity, S.MailStreet, S.MailStrAbr, S.Phone, S.Website, S.OpenDate, S.ClosedDate, S.Charter, S.CharterNum, S.FundingType, S.DOC, S.DOCType, S.SOC, S.SOCType, S.EdOpsCode, S.EdOpsName, S.EILCode, S.EILName, S.GSoffered, S.GSserved, S.Virtual, S.Magnet, S.Latitude, S.Longitude, S.AdmFName1, S.AdmLName1, S.AdmEmail1, S.AdmFName2, S.AdmLName2, S.AdmEmail2, S.AdmFName3, S.AdmLName3, S.AdmEmail3, S.LastUpdate FROM schools AS S INNER JOIN frpm AS F ON S.`CDSCode` = F.`CDSCode` WHERE F.`AdmFName1` = 'Avetik Atoian'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?",
    "SELECT ( ( SELECT COUNT(*) FROM schools WHERE `CDSCode` IN ( SELECT `CDSCode` FROM frpm WHERE `County Code` = '15' ) ) ) / ( SELECT COUNT(*) FROM schools WHERE `CDSCode` IN ( SELECT `CDSCode` FROM frpm WHERE `County Code` = '41' ) ) AS ratio FROM schools WHERE `CDSCode` IN ( SELECT `CDSCode` FROM frpm WHERE `County Code` IN ('15', '41') )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of all the schools with a mailing state address in California, how many are active in San Joaquin?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school that had the 333rd highest average writing score?",
    "SELECT T1.`phone`, T1.`ext` FROM schools AS T1 JOIN ( SELECT T3.`CDSCode` FROM schools AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T4.`AvgScrWrite` IS NOT NULL GROUP BY T3.`CDSCode` ORDER BY MAX(T4.`AvgScrWrite`) DESC LIMIT 333 ) AS T2 ON T1.`CDSCode` = T2.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
    "SELECT T1.`School`, T1.`Phone`, T1.`Ext` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T2.`County Code` = '33' AND T3.`Zip Code` LIKE '95203%' AND T1.`StatusType` = 'Active' GROUP BY T1.`School` ORDER BY T1.`School` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?",
    "CREATE TABLE frpm ( CDSCode TEXT, CountyCode TEXT, DistrictCode TEXT, SchoolCode TEXT, DistrictName TEXT, SchoolName TEXT, SchoolType TEXT ); CREATE TABLE satscores ( cds TEXT, sname TEXT, dname TEXT, cname TEXT, rtype TEXT, enroll12 INTEGER ); CREATE TABLE schools ( CDSCode TEXT, NCESSchool TEXT, StatusType TEXT, County TEXT, District TEXT, School TEXT, Website TEXT ); -- Insert sample data into the tables -- ...\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
    "SELECT T3.`website` FROM schools AS T3 INNER JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T3.`CDSCode` IN ( SELECT CDSCode FROM schools WHERE Virtual = 'P' AND County = 'San Joaquin' AND Charter = 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
    "SELECT COUNT(*) FROM schools WHERE City = 'Hickman' AND Charter = 1 AND DOC = 52\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
    "SELECT COUNT(*) AS TotalNonCharteredSchools FROM ( SELECT T1.CDSCode, T1.FRPMCountK12, T1.EnrollmentK12, CAST(T1.FRPMCountK12 AS REAL) * 100 / T1.EnrollmentK12 AS PercentEligibleFRPMK12 FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.CountyCode = '33' -- Corrected county code for Los Angeles AND T1.SchoolType = 'Non-chartered Schools (Public)' -- Filter for non-chartered schools AND T1.SchoolType IS NOT NULL -- Ensure we exclude schools with 'None' type AND T2.PercentEligibleFRPMK12 < 0.18 -- Filter for less than 0.18% eligible free meals ) AS SubQuery WHERE PercentEligibleFRPMK12 < 0.18;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs",
    "SELECT T1.`AdmFName1`, T1.`AdmLName1`, T1.`School`, T1.`City` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Charter School (Y/N)` = 1 AND T2.`Charter School Number` = '00D2' GROUP BY T1.`AdmFName1`, T1.`AdmLName1`, T1.`School`, T1.`City`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?",
    "SELECT COUNT(*) FROM schools WHERE Charter = 1 AND CDSCode LIKE '00D4%' AND MailCity = 'Hickman'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?",
    "SELECT ( ( SELECT COUNT(*) FROM schools INNER JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` WHERE frpm.`County Code` = '36' -- Corrected county code for Santa Clara AND schools.`FundingType` = 'Locally funded' ) / ( SELECT COUNT(*) FROM schools INNER JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` WHERE frpm.`County Code` = '36' -- Corrected county code for Santa Clara ) * 100 ) AS ratio_percentage;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?",
    "SELECT COUNT(*) FROM schools WHERE `County` = 'Stanislaus' AND OpenDate BETWEEN '2000-01-01' AND '2005-12-31' AND FundingType = 'Directly Funded'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total amount of Community College District closure in 1989 in the city of San Francisco?",
    "SELECT SUM(sc.NumTstTakr) AS TotalTestTakers FROM frpm AS f JOIN schools AS s ON f.CDSCode = s.CDSCode JOIN satscores AS sc ON s.CDSCode = sc.cds WHERE f.StatusType = 'Closed' AND f.OpenDate IS NOT NULL AND f.ClosedDate = '1989-06-30' AND f.DistrictName = 'San Francisco Unified' GROUP BY f.DistrictName;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
    "SELECT T1.cname FROM frpm AS T1 INNER JOIN ( SELECT s.CDSCode, COUNT(*) AS closure_count FROM schools AS s INNER JOIN frpm AS f ON s.CDSCode = f.CDSCode WHERE s.StatusType = 'Closed' AND f.AcademicYear BETWEEN '1980' AND '1989' AND f.SOC = 11 GROUP BY s.CDSCode ORDER BY closure_count DESC LIMIT 1 ) AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AcademicYear BETWEEN '1980' AND '1989' AND T1.SOC = 11\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
    "SELECT schools.`NCESSchool` FROM schools WHERE SOC = 31\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many active and closed District Community Day Schools are there in the county of Alpine?",
    "SELECT COUNT(*) FROM schools INNER JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` INNER JOIN satscores ON frpm.`CDSCode` = satscores.`cds` WHERE frpm.`County Code` = '01' AND schools.`SOCType` = 'District Community Day Schools' AND schools.`StatusType` = 'Closed'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the district code for the School that does not offer a magnet program in the city of Fresno?",
    "SELECT DISTINCT T2.`District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Magnet` = 0 AND T2.`County Name` = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year?",
    "SELECT COUNT(*) FROM frpm JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE schools.EdOpsCode = 'SSS' AND frpm.AcademicYear = '2014-2015' AND frpm.Age >= 5 AND frpm.Age <= 17 AND schools.District = 'Fremont' GROUP BY frpm.CDSCode;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?",
    "SELECT COUNT(*) FROM ( SELECT frpm.`Percent (%) Eligible FRPM (K-12)` FROM schools AS T1 JOIN frpm ON T1.`CDSCode` = frpm.`CDSCode` WHERE T1.`MailStreet` LIKE '%PO Box 1040%' AND T1.`School Type` = 'Elementary Schools (Public)' AND T1.`EILCode` = 'ELEM' AND T1.`GSoffered` = 'K-5' ) AS subquery\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360?",
    "SELECT MIN(T1.`Low Grade`) AS LowestGrade FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`NCESDist` = '613360' AND T1.`StatusType` = 'Active' AND T2.`Low Grade` IS NOT NULL GROUP BY T1.`NCESDist`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.",
    "SELECT DISTINCT S.`School`, S.`EILName` FROM frpm AS F INNER JOIN schools AS S ON F.`CDSCode` = S.`CDSCode` WHERE F.`County Code` = '37' AND F.`Educational Option Type` = 'Traditional' AND S.`EILName` IS NOT NULL ORDER BY S.`EILName` ASC;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?",
    "SELECT DISTINCT S.City FROM schools AS S JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.EILCode = 'HS' AND F.NSLP_Provision_Status = 'Lunch Provision 2' AND S.Low Grade >= '9' AND S.High Grade <= '12' AND F.County Code = '37' GROUP BY S.City ORDER BY S.City ASC;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?",
    "SELECT T1.`School Name`, CAST(T2.`Free Meal Count (Ages 5-17)` AS REAL) / T2.`Enrollment (Ages 5-17)` * 100 AS `Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T1.`County` = 'Los Angeles' AND T1.`GSoffered` LIKE 'K-9%' GROUP BY T1.`School Name`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the most common type of grade span served in the city of Adelanto?",
    "SELECT T1.GSoffered FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County Code = '37' AND T1.StatusType = 'Active' GROUP BY T1.GSoffered ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.",
    "SELECT CASE WHEN ( SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T2.`County Code` = '37' AND T3.`Virtual` = 'F' ) > ( SELECT COUNT(*) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN satscores AS T3 ON T1.`CDSCode` = T3.`cds` WHERE T2.`County Code` = '36' AND T3.`Virtual` = 'F' ) THEN 'San Diego' ELSE 'Santa Barbara' END AS CountyWithMostVirtualSchools\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
    "SELECT T2.`School`, T2.`School Type` FROM frpm AS T1 INNER JOIN ( SELECT CDSCode, MAX(Latitude) AS MaxLatitude FROM schools GROUP BY CDSCode ) AS T3 ON T1.`CDSCode` = T3.`CDSCode` INNER JOIN schools AS T2 ON T3.`CDSCode` = T2.`CDSCode`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
    "SELECT T1.`GSoffered` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`State` = 'CA' ORDER BY T1.`Latitude` ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the grade span offered in the school with the highest longitude?",
    "SELECT T1.`GSoffered` FROM schools AS T1 WHERE T1.`CDSCode` = ( SELECT T2.`CDSCode` FROM schools AS T2 ORDER BY T2.`Longitude` DESC LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
    "SELECT CASE WHEN COUNT(DISTINCT T1.`CDSCode`) > 0 THEN T1.`City`, COUNT(DISTINCT T1.`CDSCode`) AS SchoolsCount ELSE 'No schools found' END AS Result FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`GSoffered` = 'K-8' AND T2.`rtype` = 'S' AND T2.`NumGE1500` IS NOT NULL GROUP BY T1.`City`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the two most common first names among the school administrators? Indicate the district to which they administer.",
    "SELECT T1.AdmFName1 AS AdminFirstName, T1.District AS DistrictName FROM ( SELECT S.AdmFName1, S.District, COUNT(*) AS Frequency FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.AdmFName1 IS NOT NULL GROUP BY S.AdmFName1, S.District ) AS T1 WHERE ( SELECT COUNT(*) FROM ( SELECT S.AdmFName1, S.District FROM schools AS S INNER JOIN frpm AS F ON S.CDSCode = F.CDSCode WHERE S.AdmFName1 IS NOT NULL GROUP BY S.AdmFName1, S.District ) AS T2 WHERE T2.AdmFName1 = T1.AdmFName1 AND T2.District = T1.District GROUP BY T2.AdmFName1 ORDER BY COUNT(*) DESC LIMIT 1 ) <= 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.",
    "SELECT T1.`Percent (%) Eligible Free (K-12)`, T2.`District Code` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' AND T2.`District Name` = 'Los Angeles Unified' AND T2.`School` LIKE '%Alusine%' GROUP BY T1.`Percent (%) Eligible Free (K-12)`, T2.`District Code` ORDER BY T1.`Percent (%) Eligible Free (K-12)` DESC;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.",
    "SELECT DISTINCT T2.`District`, T2.`County`, T2.`School`, T3.`AdmLName1` FROM schools AS T2 JOIN frpm AS T1 ON T1.`CDSCode` = T2.`CDSCode` JOIN schools AS T3 ON T3.`CDSCode` = T2.`CDSCode` WHERE T2.`Charter` = 1 AND T2.`CDSCode` = 40 AND T1.`District Code` IS NOT NULL AND T3.`AdmLName1` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.",
    "SELECT T3.`AdmEmail1` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` INNER JOIN schools AS T3 ON T1.`CDSCode` = T3.`CDSCode` WHERE T2.`NumGE1500` IS NOT NULL GROUP BY T2.`NumGE1500` ORDER BY T2.`NumGE1500` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
    "SELECT COUNT(DISTINCT account.account_id) FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'east Bohemia' AND account.frequency = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts who have region in Prague are eligible for loans?",
    "SELECT COUNT(DISTINCT account.`account_id`) FROM account AS account INNER JOIN district AS district ON account.`district_id` = district.`district_id` WHERE district.`A3` = 'PRAGUE' AND EXISTS ( SELECT 1 FROM loan WHERE loan.`account_id` = account.`account_id` );\t----- bird -----\tfinancial"
  ],
  [
    "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
    "SELECT CASE WHEN A12 > A13 THEN '1995' WHEN A12 < A13 THEN '1996' ELSE 'Equal' END AS YearWithHigherUnemploymentRate FROM district\t----- bird -----\tfinancial"
  ],
  [
    "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
    "SELECT COUNT(*) FROM ( SELECT T2.`A11` FROM district AS T2 WHERE T2.`A11` > 6000 AND T2.`A11` < 10000 ) AS T3\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who are living in North Bohemia have average salary greater than 8000?",
    "SELECT COUNT(DISTINCT T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'North Bohemia' AND T1.`gender` = 'M' AND T2.`A11` > 8000\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
    "SELECT (SELECT MAX(`A11`) FROM district) - (SELECT `A11` FROM district ORDER BY `A11` ASC LIMIT 1)\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of clients who are youngest and have highest average salary?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`district_id` = ( SELECT `district_id` FROM district ORDER BY `A11` DESC LIMIT 1 ) ORDER BY T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many customers who choose statement of weekly issuance are Owner?",
    "SELECT COUNT(DISTINCT client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN account ON client.district_id = account.district_id INNER JOIN disp ON account.disp_id = disp.disp_id WHERE account.frequency = 'POPLATEK TYDNE' AND disp.type = 'OWNER' AND client.gender = 'M';\t----- bird -----\tfinancial"
  ],
  [
    "List out the clients who choose statement of issuance after transaction are Disponent?",
    "SELECT DISTINCT client.`client_id` FROM client AS client JOIN disp AS disp ON client.`district_id` = disp.`district_id` JOIN account AS account ON disp.`account_id` = account.`account_id` JOIN disp AS disp2 ON account.`disp_id` = disp2.`disp_id` WHERE disp2.`type` = 'DISPONENT' AND account.`frequency` = 'POPLATEK PO OBRATU';\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
    "SELECT a.account_id, MIN(l.amount) AS min_approved_amount FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.date LIKE '1997-%' AND l.operation = 'VYBER' GROUP BY a.account_id HAVING min_approved_amount IS NOT NULL ORDER BY min_approved_amount ASC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
    "SELECT account_id FROM account WHERE date LIKE '1993-%' AND account_id IN ( SELECT account_id FROM loan WHERE duration > 12 )\t----- bird -----\tfinancial"
  ],
  [
    "Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov?",
    "SELECT COUNT(*) FROM client WHERE gender = 'F' AND birth_date < '1950-01-01' AND district_id = ( SELECT district_id FROM district WHERE A2 = 'Slokolov' )\t----- bird -----\tfinancial"
  ],
  [
    "List out the accounts who have the earliest trading date in 1995 ?",
    "SELECT T1.`account_id` FROM account AS T1 WHERE T1.`date` = ( SELECT MIN(T2.`date`) FROM account AS T2 WHERE SUBSTR(T2.`date`, 1, 4) = '1995' )\t----- bird -----\tfinancial"
  ],
  [
    "State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD",
    "SELECT DISTINCT a.account_id FROM account a JOIN loan l ON a.account_id = l.account_id WHERE a.date < '1997-01-01' AND l.amount > 3000 GROUP BY a.account_id;\t----- bird -----\tfinancial"
  ],
  [
    "Which client issued his/her card in 1994/3/3, give his/her client id.",
    "-- Corrected SQL SELECT DISTINCT client.client_id FROM client JOIN disp ON client.district_id = disp.disp_id JOIN card ON disp.disp_id = card.disp_id WHERE card.issued = '1994-03-03';\t----- bird -----\tfinancial"
  ],
  [
    "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
    "SELECT T1.`date` FROM account AS T1 WHERE T1.`district_id` = ( SELECT T2.`district_id` FROM account AS T2 WHERE T2.`account_id` = ( SELECT account_id FROM trans WHERE date = '1998-10-14' AND amount = 840 ) )\t----- bird -----\tfinancial"
  ],
  [
    "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
    "SELECT T2.`district_id` FROM account AS T3 INNER JOIN loan AS T1 ON T3.`account_id` = T1.`account_id` INNER JOIN district AS T2 ON T3.`district_id` = T2.`district_id` WHERE T1.`date` = '1994-08-25'\t----- bird -----\tfinancial"
  ],
  [
    "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
    "SELECT T3.`amount` FROM trans AS T3 INNER JOIN account AS T4 ON T3.`account_id` = T4.`account_id` INNER JOIN disp AS T5 ON T4.`account_id` = T5.`account_id` INNER JOIN card AS T6 ON T5.`disp_id` = T6.`disp_id` INNER JOIN district AS T7 ON T4.`district_id` = T7.`district_id` WHERE T6.`issued` >= '1996-10-21' AND T6.`issued` < '1996-10-22' ORDER BY T3.`amount` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the gender of the oldest client who opened his/her account in the highest average salary branch?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`district_id` = ( SELECT `district_id` FROM district ORDER BY `A11` DESC LIMIT 1 ) ORDER BY T1.`birth_date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN ( SELECT T1.`client_id` FROM client AS T1 INNER JOIN loan AS T2 ON T1.`district_id` = T2.`account_id` ORDER BY T2.`amount` DESC LIMIT 1 ) AS T4 ON T1.`client_id` = T4.`client_id`\t----- bird -----\tfinancial"
  ],
  [
    "How many clients opened their accounts in Jesenik branch were women?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Jesenik' AND T1.`gender` = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?",
    "SELECT disp_id FROM disp WHERE account_id = ( SELECT account_id FROM trans WHERE amount = 5100 AND date = '1998-09-02' )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts were opened in Litomerice in 1996?",
    "SELECT COUNT(*) FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.A2 = 'Litomerice' AND account.date LIKE '1996-%'\t----- bird -----\tfinancial"
  ],
  [
    "For the female client who was born in 1976/1/29, which district did she opened her account?",
    "SELECT T1.`district_id` FROM client AS T1 WHERE T1.`gender` = 'F' AND T1.`birth_date` = '1976-01-29'\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?",
    "SELECT DISTINCT c.`birth_date` FROM client AS c JOIN loan AS l ON c.`client_id` = l.`account_id` WHERE l.`amount` = 98832 AND l.`date` = '1996-01-03' AND c.`birth_date` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "For the first client who opened his/her account in Prague, what is his/her account ID?",
    "SELECT DISTINCT account.account_id FROM account JOIN district ON account.district_id = district.district_id WHERE district.A3 = 'Prague' ORDER BY account.account_id ASC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'south Bohemia' ORDER BY `A4` DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
    "SELECT ((MAX(T7.`balance`) - MIN(T6.`balance`)) / MIN(T6.`balance`) * 100) AS `increase_rate` FROM (SELECT A.`account_id`, A.`balance` FROM account AS A INNER JOIN (SELECT L.`account_id`, MIN(L.`date`) AS `first_loan_date` FROM loan AS L GROUP BY L.`account_id` ) AS LF ON A.`account_id` = LF.`account_id` INNER JOIN client AS C ON A.`district_id` = C.`district_id` INNER JOIN district AS D ON C.`district_id` = D.`district_id` WHERE LF.`first_loan_date` = '1993-07-05' ) AS T6 INNER JOIN (SELECT A.`account_id`, A.`balance` FROM account AS A INNER JOIN client AS C ON A.`district_id` = C.`district_id` INNER JOIN district AS D ON C.`district_id` = D.`district_id` WHERE A.`date` = '1998-12-27' ) AS T7 ON T6.`account_id` = T7.`account_id`\t----- bird -----\tfinancial"
  ],
  [
    "What is the percentage of loan amount that has been fully paid with no issue.",
    "SELECT (total_paid_loan_amount / total_loan_amount) * 100 AS percentage_paid_loan_amount FROM ( SELECT SUM(`amount`) AS total_loan_amount FROM loan ) AS total_loan_amount_table, ( SELECT SUM(`amount`) AS total_paid_loan_amount FROM loan WHERE `status` = 'A' ) AS total_paid_loan_amount_table\t----- bird -----\tfinancial"
  ],
  [
    "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
    "SELECT (SUM(CASE WHEN T.`status` = 'C' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_no_issue FROM loan AS T INNER JOIN account AS A ON T.`account_id` = A.`account_id`\t----- bird -----\tfinancial"
  ],
  [
    "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
    "SELECT account.`account_id`, district.`A2` AS district_name, district.`A3` AS district_region FROM account INNER JOIN district ON account.`district_id` = district.`district_id` WHERE account.`date` = '1993-02-08' AND account.`frequency` = 'POPLATEK PO OBRATU' GROUP BY account.`account_id`\t----- bird -----\tfinancial"
  ],
  [
    "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
    "SELECT A.`account_id`, A.`frequency` FROM account AS A INNER JOIN district AS D ON A.`district_id` = D.`district_id` WHERE D.`A3` = 'east Bohemia' AND A.`date` BETWEEN '1995-01-01' AND '2000-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "List account ID and account opening date for accounts from 'Prachatice'.",
    "SELECT account.`account_id`, account.`date` FROM account AS account INNER JOIN district AS district ON account.`district_id` = district.`district_id` WHERE district.`A2` = 'Prachatice'\t----- bird -----\tfinancial"
  ],
  [
    "State the district and region for loan ID '4990'.",
    "SELECT DISTINCT T1.`A3` FROM district AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN loan AS T3 ON T2.`account_id` = T3.`account_id` WHERE T3.`loan_id` = '4990';\t----- bird -----\tfinancial"
  ],
  [
    "Provide the account ID, district and region for loan amount greater than USD300,000.",
    "SELECT T1.`account_id`, T2.`district_id`, T3.`A2` AS district, T3.`A3` AS region FROM (SELECT `account_id` FROM loan WHERE `amount` > 300000 ) AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN district AS T3 ON T2.`district_id` = T3.`district_id`\t----- bird -----\tfinancial"
  ],
  [
    "List the loan ID, district and average salary for loan with duration of 60 months.",
    "SELECT DISTINCT T1.`loan_id`, T3.`A11` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN district AS T3 ON T2.`district_id` = T3.`district_id` WHERE T1.`duration` = 60 GROUP BY T1.`loan_id`, T3.`A11`\t----- bird -----\tfinancial"
  ],
  [
    "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
    "SELECT T1.district_name, ((T3.unemployment_rate_1996 - T3.unemployment_rate_1995) / T3.unemployment_rate_1995) * 100 AS unemployment_rate_increment FROM district AS T1 INNER JOIN ( SELECT district_id, MAX(CASE WHEN year = 1996 THEN unemployment_rate ELSE NULL END) AS unemployment_rate_1996, MAX(CASE WHEN year = 1995 THEN unemployment_rate ELSE NULL END) AS unemployment_rate_1995 FROM district GROUP BY district_id ) AS T3 ON T1.district_id = T3.district_id\t----- bird -----\tfinancial"
  ],
  [
    "Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.",
    "SELECT ( SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Decin' AND strftime('%Y', T1.`date`) = '1993' ) * 100.0 / ( SELECT COUNT(*) FROM account AS T1 WHERE strftime('%Y', T1.`date`) = '1993' ) AS percentage\t----- bird -----\tfinancial"
  ],
  [
    "List the account IDs with monthly issuance of statements.",
    "SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE'\t----- bird -----\tfinancial"
  ],
  [
    "List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders.",
    "SELECT T1.`district_id`, COUNT(T1.`client_id`) AS female_account_holders FROM client AS T1 WHERE T1.`gender` = 'F' GROUP BY T1.`district_id` ORDER BY female_account_holders DESC LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996?",
    "SELECT DISTINCT district.`A2` AS district_name, SUM(loan.`amount`) AS total_withdrawal FROM loan INNER JOIN account ON loan.`account_id` = account.`account_id` INNER JOIN district ON account.`district_id` = district.`district_id` WHERE loan.`date` LIKE '1996-01%' AND loan.`type` = 'VYDAJ' GROUP BY district.`A2` ORDER BY total_withdrawal DESC LIMIT 10;\t----- bird -----\tfinancial"
  ],
  [
    "How many of the account holders in South Bohemia still do not own credit cards?",
    "SELECT COUNT(*) - COUNT(DISTINCT card.card_id) AS account_without_credit_cards FROM account JOIN district ON account.district_id = district.district_id LEFT JOIN disp ON account.account_id = disp.account_id LEFT JOIN card ON disp.disp_id = card.disp_id WHERE district.A3 = 'South Bohemia' AND card.card_id IS NULL;\t----- bird -----\tfinancial"
  ],
  [
    "Which district has highest active loan?",
    "SELECT T1.`district_id` FROM district AS T1 INNER JOIN ( SELECT account_id, COUNT(*) AS active_loans FROM loan WHERE status = 'C' GROUP BY account_id ) AS T2 ON T1.`district_id` = T2.`account_id` ORDER BY T2.`active_loans` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the average loan amount by male borrowers?",
    "SELECT AVG(`amount`) FROM loan AS T1 INNER JOIN client AS T2 ON T1.`account_id` = T2.`client_id` WHERE T2.`gender` = 'M';\t----- bird -----\tfinancial"
  ],
  [
    "In 1996, which districts have the highest unemployment rate? List their branch location and district name.",
    "SELECT T2.`A2` AS 'District Name', T2.`A4` AS 'Number of Inhabitants', T2.`A5` AS 'Number of Municipalities with Inhabitants 500-1999' FROM district AS T2 WHERE T2.`district_id` = ( SELECT T2.`district_id` FROM district AS T3 ORDER BY T3.`A13` DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?",
    "SELECT COUNT(account_id) FROM account WHERE district_id = ( SELECT `district_id` FROM district ORDER BY `A16` DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?",
    "CREATE INDEX idx_account_id ON trans(account_id);\t----- bird -----\tfinancial"
  ],
  [
    "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?",
    "SELECT COUNT(DISTINCT accounts.account_id) AS approved_loans FROM ( SELECT account_id FROM account WHERE frequency = 'POPLATEK MESICNE' AND date BETWEEN '1995-01-01' AND '1997-12-31' ) AS accounts INNER JOIN ( SELECT account_id FROM loan WHERE amount >= 250000 AND date BETWEEN '1995-01-01' AND '1997-12-31' AND status = 'A' ) AS approved_loans ON accounts.account_id = approved_loans.account_id\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have running contracts in Branch location 1?",
    "SELECT COUNT(*) FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`district_id` = 1 AND T2.`status` = 'C'\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there?",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "How many high-level credit cards have \"disponent\" type of disposition?",
    "SELECT COUNT(*) FROM card AS T1 INNER JOIN disp AS T2 ON T1.`disp_id` = T2.`disp_id` WHERE T1.`type` = 'gold' AND T2.`type` = 'DISPONENT'\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts are there in the district of \"Pisek\"?",
    "SELECT COUNT(*) FROM account WHERE district_id = ( SELECT `district_id` FROM district WHERE `A2` = 'Pisek' )\t----- bird -----\tfinancial"
  ],
  [
    "Which districts have transactions greater than USS$10,000 in 1997?",
    "SELECT DISTINCT T2.`district_id` FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` LIKE '1997%' AND CAST(T1.`amount` AS REAL) > 10000\t----- bird -----\tfinancial"
  ],
  [
    "Which accounts placed orders for household payment in Pisek?",
    "SELECT DISTINCT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN district dd ON a.district_id = dd.district_id JOIN order o ON a.account_id = o.account_id WHERE o.k_symbol = 'SIPO' AND dd.district_id = ( SELECT district_id FROM district WHERE A2 = 'Pisek' ) GROUP BY a.account_id ORDER BY a.account_id ASC;\t----- bird -----\tfinancial"
  ],
  [
    "What are the accounts that have both gold and junior credit cards?",
    "SELECT DISTINCT account_id FROM account WHERE account_id IN ( SELECT account_id FROM card WHERE type = 'gold' ) AND account_id IN ( SELECT account_id FROM card WHERE type = 'junior' )\t----- bird -----\tfinancial"
  ],
  [
    "How much is the average amount in credit card made by account holders in a month, in year 2021?",
    "SELECT AVG(trans.`amount`) AS average_credit_card_withdrawal FROM trans JOIN account ON trans.`account_id` = account.`account_id` WHERE strftime('%Y', trans.`date`) = '2021' AND trans.`operation` = 'VYBER KARTOU' AND account.`type` = 'credit';\t----- bird -----\tfinancial"
  ],
  [
    "Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998?",
    "WITH MonthlySpending AS ( SELECT a.account_id, AVG(l.amount / l.duration) AS avg_monthly_spent FROM account a JOIN loan l ON a.account_id = l.account_id WHERE l.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY a.account_id ), AverageSpending AS ( SELECT AVG(avg_monthly_spent) AS overall_avg_spent FROM MonthlySpending ) SELECT a.account_id, a.district_id, a.frequency, a.date FROM account a JOIN MonthlySpending ms ON a.account_id = ms.account_id CROSS JOIN AverageSpending WHERE ms.avg_monthly_spent < AverageSpending.overall_avg_spent ORDER BY a.account_id;\t----- bird -----\tfinancial"
  ],
  [
    "Who are the female account holders who own credit cards and also have loans?",
    "SELECT DISTINCT T1.`client_id` FROM client AS T1 INNER JOIN card AS T2 ON T1.`client_id` = T2.`disp_id` INNER JOIN loan AS T3 ON T1.`client_id` = T3.`account_id` WHERE T1.`gender` = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "How many female clients' accounts are in the region of South Bohemia?",
    "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND district.A3 = 'south Bohemia';\t----- bird -----\tfinancial"
  ],
  [
    "Please list the accounts whose district is Tabor that are eligible for loans.",
    "SELECT DISTINCT account.account_id, disp.type FROM account INNER JOIN district ON account.district_id = district.district_id INNER JOIN disp ON account.account_id = disp.account_id WHERE district.A2 = 'Tabor' AND disp.type = 'OWNER';\t----- bird -----\tfinancial"
  ],
  [
    "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
    "SELECT DISTINCT C.type AS AccountType, AVG(D.A11) AS AverageIncome FROM client AS C JOIN account AS A ON C.district_id = A.district_id JOIN district AS D ON A.district_id = D.district_id WHERE A.type <> 'OWNER' AND D.A11 BETWEEN 8000 AND 9000 GROUP BY C.type;\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in North Bohemia has made a transaction with the partner's bank being AB?",
    "SELECT COUNT(DISTINCT account_id) FROM ( SELECT account_id FROM trans WHERE account_id IN ( SELECT account_id FROM account WHERE district_id = ( SELECT `district_id` FROM district WHERE `A3` = 'North Bohemia' ) ) AND bank = 'AB' ) AS T1\t----- bird -----\tfinancial"
  ],
  [
    "Please list the name of the districts with accounts that made withdrawal transactions.",
    "SELECT DISTINCT T3.`A2` FROM district AS T3 INNER JOIN account AS T4 ON T3.`district_id` = T4.`district_id` INNER JOIN trans AS T5 ON T4.`account_id` = T5.`account_id` WHERE T5.`type` = 'VYDAJ'\t----- bird -----\tfinancial"
  ],
  [
    "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?",
    "SELECT AVG(d.A15) AS AverageCrimes1995 FROM district AS d JOIN ( SELECT a.district_id FROM account AS a JOIN ( SELECT account_id FROM loan WHERE date >= '1997-01-01' GROUP BY account_id HAVING COUNT(*) > 0 ) AS l ON a.account_id = l.account_id GROUP BY a.district_id HAVING MIN(a.date) >= '1997-01-01' ) AS a_min_date ON d.district_id = a_min_date.district_id WHERE d.A15 > 4000\t----- bird -----\tfinancial"
  ],
  [
    "How many 'classic' cards are eligible for loan?",
    "SELECT COUNT(*) FROM card INNER JOIN disp ON card.`disp_id` = disp.`disp_id` WHERE card.`type` = 'classic' AND disp.`type` = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "How many male clients in 'Hl.m. Praha' district?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Hl.m. Praha' AND T1.`gender` = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "How many percent of 'Gold' cards were issued prior to 1998?",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM card)) * 100 AS percentage FROM card WHERE type = 'gold' AND issued < '1998-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "Who is the owner of the account with the largest loan amount?",
    "SELECT gender FROM client WHERE client_id = ( SELECT client_id FROM disp WHERE disp_id = ( SELECT disp_id FROM disp WHERE account_id = ( SELECT account_id FROM loan ORDER BY amount DESC LIMIT 1 ) ) )\t----- bird -----\tfinancial"
  ],
  [
    "What is the number of committed crimes in 1995 in the district of the account with the id 532?",
    "SELECT T2.`A15` FROM district AS T2 WHERE T2.`district_id` = ( SELECT T1.`district_id` FROM account AS T1 WHERE T1.`account_id` = 532 )\t----- bird -----\tfinancial"
  ],
  [
    "What is the district Id of the account that placed the order with the id 33333?",
    "SELECT DISTINCT account.`district_id` FROM account AS account INNER JOIN order AS order ON account.`account_id` = order.`account_id` WHERE order.`order_id` = 33333;\t----- bird -----\tfinancial"
  ],
  [
    "List all the withdrawals in cash transactions that the client with the id 3356 makes.",
    "SELECT t.trans_id, t.account_id, t.date, t.type, t.operation, t.amount, t.balance, t.k_symbol, t.bank, t.account FROM trans AS t JOIN account AS a ON t.account_id = a.account_id WHERE a.district_id = ( SELECT district_id FROM client AS c WHERE c.client_id = 3356 ) AND t.operation = 'VYBER' AND t.amount IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "Among the weekly issuance accounts, how many have a loan of under 200000?",
    "SELECT COUNT(*) FROM account INNER JOIN loan ON account.`account_id` = loan.`account_id` WHERE account.frequency = 'POPLATEK TYDNE' AND loan.amount < 200000\t----- bird -----\tfinancial"
  ],
  [
    "What type of credit card does the client with the id 13539 own?",
    "SELECT DISTINCT T2.`type` FROM card AS T2 INNER JOIN disp AS T3 ON T2.`disp_id` = T3.`disp_id` INNER JOIN client AS T1 ON T3.`client_id` = T1.`client_id` WHERE T1.`client_id` = 13539;\t----- bird -----\tfinancial"
  ],
  [
    "What is the region of the client with the id 3541 from?",
    "SELECT T2.`A3` FROM district AS T2 WHERE T2.`district_id` = ( SELECT T1.`district_id` FROM client AS T1 WHERE T1.`client_id` = 3541 )\t----- bird -----\tfinancial"
  ],
  [
    "Which district has the most accounts with loan contracts finished with no problems?",
    "SELECT T3.`district_name` FROM ( SELECT T2.`district_id`, COUNT(*) AS `finished_loans_count` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN district AS T3 ON T2.`district_id` = T3.`district_id` WHERE T1.`status` = 'A' GROUP BY T2.`district_id` ) AS T4 INNER JOIN district AS T5 ON T4.`district_id` = T5.`district_id` ORDER BY T4.`finished_loans_count` DESC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "Who placed the order with the id 32423?",
    "SELECT DISTINCT client.client_id, client.gender FROM client INNER JOIN disp ON client.district_id = disp.district_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN order ON account.account_id = order.account_id WHERE order.order_id = 32423;\t----- bird -----\tfinancial"
  ],
  [
    "Please list all the transactions made by accounts from district 5.",
    "SELECT T1.`trans_id`, T1.`date`, T1.`type`, T1.`operation`, T1.`amount`, T1.`balance`, T1.`k_symbol`, T1.`bank`, T1.`account` FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`district_id` = 5 AND T1.`bank` IS NOT NULL AND T1.`account` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "How many of the accounts are from Jesenik district?",
    "SELECT COUNT(*) FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Jesenik'\t----- bird -----\tfinancial"
  ],
  [
    "List all the clients' IDs whose junior credit cards were issued after 1996.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN card AS T2 ON T1.`district_id` = T2.`disp_id` WHERE T2.`type` = 'junior' AND T2.`issued` >= '1997-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?",
    "SELECT ( SELECT COUNT(DISTINCT T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` > 10000 AND T1.`gender` = 'F' ) / ( SELECT COUNT(DISTINCT T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A11` > 10000 ) * 100\t----- bird -----\tfinancial"
  ],
  [
    "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
    "SELECT ((total_amount_1997 - total_amount_1996) / total_amount_1996) * 100 AS growth_rate FROM ( SELECT SUM(l.amount) AS total_amount_1996 FROM loan AS l INNER JOIN account AS a ON l.account_id = a.account_id INNER JOIN client AS c ON a.client_id = c.client_id WHERE c.gender = 'M' AND strftime('%Y', a.date) = '1996' ) AS t1, ( SELECT SUM(l.amount) AS total_amount_1997 FROM loan AS l INNER JOIN account AS a ON l.account_id = a.account_id INNER JOIN client AS c ON a.client_id = c.client_id WHERE c.gender = 'M' AND strftime('%Y', a.date) = '1997' ) AS t2;\t----- bird -----\tfinancial"
  ],
  [
    "How many credit card withdrawals were recorded after 1995?",
    "SELECT COUNT(*) FROM trans WHERE operation = 'VYBER KARTOU' AND date > '1995-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
    "SELECT (SELECT COUNT(*) FROM district WHERE A3 = 'North Bohemia') - (SELECT COUNT(*) FROM district WHERE A3 = 'East Bohemia') AS difference_in_crimes\t----- bird -----\tfinancial"
  ],
  [
    "How many owner and disponent dispositions are there from account number 1 to account number 10?",
    "SELECT COUNT(*) FROM disp WHERE account_id BETWEEN 1 AND 10 AND type IN ('OWNER', 'DISPONENT')\t----- bird -----\tfinancial"
  ],
  [
    "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
    "SELECT COUNT(*) AS request_count, SUM(amount) AS total_debit FROM order WHERE account_id = 3 AND amount = 3539;\t----- bird -----\tfinancial"
  ],
  [
    "What year was account owner number 130 born?",
    "SELECT T1.`birth_date` FROM client AS T1 WHERE T1.`client_id` = ( SELECT T1.`client_id` FROM disp AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`account_id` = 130 AND T1.`type` = 'OWNER' )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have an owner disposition and request for a statement to be generated upon a transaction?",
    "SELECT COUNT(DISTINCT disp.account_id) FROM disp INNER JOIN account ON disp.`account_id` = account.`account_id` WHERE disp.`type` = 'OWNER' AND account.`frequency` = 'POPLATEK PO OBRATU'\t----- bird -----\tfinancial"
  ],
  [
    "What is the amount of debt that client number 992 has, and how is this client doing with payments?",
    "SELECT (SELECT SUM(amount) FROM loan WHERE account_id = ( SELECT account_id FROM client WHERE client_id = 992 )) AS total_debt, (SELECT COUNT(*) FROM trans WHERE account_id = ( SELECT account_id FROM client WHERE client_id = 992 ) AND k_symbol IS NOT NULL) AS payment_count FROM client WHERE client_id = 992;\t----- bird -----\tfinancial"
  ],
  [
    "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?",
    "SELECT SUM(T3.`amount`) AS total_amount, (SELECT T1.`gender` FROM client AS T1 INNER JOIN disp AS T4 ON T1.`client_id` = T4.`client_id` WHERE T4.`account_id` = 851) AS account_owner_gender FROM trans AS T3 WHERE T3.`trans_id` = 851;\t----- bird -----\tfinancial"
  ],
  [
    "Which kind of credit card does client number 9 possess?",
    "SELECT type FROM card WHERE disp_id = ( SELECT disp_id FROM disp WHERE client_id = 9 )\t----- bird -----\tfinancial"
  ],
  [
    "How much, in total, did client number 617 pay for all of the transactions in 1998?",
    "SELECT SUM(amount) AS total_amount FROM trans INNER JOIN account ON trans.account_id = account.account_id WHERE account.client_id = 617 AND YEAR(account.date) = 1998 GROUP BY account.client_id;\t----- bird -----\tfinancial"
  ],
  [
    "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.",
    "SELECT DISTINCT client.client_id, client.client_id AS client_id_alias FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.A2 = 'east Bohemia' AND client.birth_date BETWEEN '1983-01-01' AND '1987-12-31';\t----- bird -----\tfinancial"
  ],
  [
    "Please provide the IDs of the 3 female clients with the largest loans.",
    "SELECT T1.client_id, MAX(T3.amount) AS loan_amount FROM client AS T1 INNER JOIN loan AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' GROUP BY T1.client_id ORDER BY loan_amount DESC LIMIT 3;\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000?",
    "SELECT COUNT(DISTINCT client.client_id) FROM client JOIN district ON client.district_id = district.district_id JOIN account ON client.client_id = account.client_id JOIN loan ON account.account_id = loan.account_id WHERE client.gender = 'M' AND client.birth_date BETWEEN '1974-01-01' AND '1976-12-31' AND loan.amount > 4000 AND loan.status = 'A' GROUP BY client.client_id;\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in Beroun were opened after 1996?",
    "SELECT COUNT(*) FROM account WHERE district_id = ( SELECT district_id FROM district WHERE A2 = 'Beroun' ) AND date > '1996-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many female customers have a junior credit card?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN card AS T3 ON T2.`disp_id` = T3.`disp_id` WHERE T1.`gender` = 'F' AND T3.`type` = 'junior'\t----- bird -----\tfinancial"
  ],
  [
    "What proportion of customers who have accounts at the Prague branch are female?",
    "SELECT ( SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A3` = 'Prague' AND T1.`gender` = 'F' ) / ( SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A3` = 'Prague' ) * 100\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of male clients request for weekly statements to be issued?",
    "SELECT (COUNT(DISTINCT c.client_id) * 100.0 / (SELECT COUNT(DISTINCT c.client_id) FROM client c)) AS percentage FROM client c INNER JOIN account a ON c.district_id = a.district_id WHERE a.frequency = 'POPLATEK TYDNE' AND c.gender = 'M' AND a.frequency = 'POPLATEK TYDNE' AND a.frequency IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who choose statement of weekly issuance are User?",
    "SELECT COUNT(DISTINCT T1.`client_id`) FROM client AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`frequency` = 'POPLATEK TYDNE' AND T1.`district_id` IN ( SELECT DISTINCT T3.`district_id` FROM client AS T3 INNER JOIN account AS T4 ON T3.`district_id` = T4.`district_id` WHERE T4.`frequency` = 'POPLATEK TYDNE' ) AND T1.`district_id` IN ( SELECT DISTINCT T5.`district_id` FROM client AS T5 INNER JOIN account AS T6 ON T5.`district_id` = T6.`district_id` WHERE T6.`frequency` = 'POPLATEK TYDNE' )\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.",
    "SELECT account_id FROM account WHERE account_id IN ( SELECT account_id FROM loan WHERE duration > 24 GROUP BY account_id ORDER BY MIN(amount) ASC LIMIT 1 ) AND date < '1997-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "Name the account numbers of female clients who are oldest and have lowest average salary?",
    "SELECT DISTINCT T1.account_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN ( SELECT account_id, MIN(A11) AS min_avg_salary FROM loan GROUP BY account_id ) AS T3 ON T1.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T1.birth_date ASC, T3.min_avg_salary ASC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who were born in 1920 stay in east Bohemia?",
    "SELECT COUNT(*) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE CAST(birth_date AS INTEGER) = 1920 AND T2.`A3` = 'east Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement.",
    "SELECT COUNT(*) FROM loan WHERE duration = 24 AND account_id IN ( SELECT account_id FROM loan WHERE duration = 24 AND payments = 4 )\t----- bird -----\tfinancial"
  ],
  [
    "What is the average amount of loan which are still on running contract with statement issuance after each transaction?",
    "SELECT AVG(L.amount) FROM loan AS L JOIN account AS A ON L.account_id = A.account_id WHERE A.status = 'C' GROUP BY A.account_id HAVING COUNT(DISTINCT L.loan_id) > 0;\t----- bird -----\tfinancial"
  ],
  [
    "List all ID and district for clients that can only have the right to issue permanent orders or apply for loans.",
    "SELECT DISTINCT T1.`client_id`, T2.`district_id` FROM client AS T1 INNER JOIN disp AS T3 ON T1.`client_id` = T3.`client_id` INNER JOIN account AS T4 ON T3.`account_id` = T4.`account_id` INNER JOIN district AS T2 ON T4.`district_id` = T2.`district_id` WHERE T3.`type` = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "Provide the IDs and age of the client with high level credit card, which is eligible for loans.",
    "SELECT DISTINCT c.client_id, c.birth_date FROM client AS c INNER JOIN disp AS d ON c.district_id = d.district_id INNER JOIN card AS ca ON d.disp_id = ca.disp_id INNER JOIN loan AS l ON d.account_id = l.account_id WHERE ca.type = 'gold' AND l.status IN ('A', 'B');\t----- bird -----\tfinancial"
  ],
  [
    "What is the most common bond type?",
    "SELECT bond_type FROM ( SELECT bond_type, COUNT(*) AS count FROM bond GROUP BY bond_type ) AS T1 ORDER BY count DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "In the non-carcinogenic molecules, how many contain chlorine atoms?",
    "SELECT COUNT(DISTINCT T1.molecule_id) FROM ( SELECT molecule_id FROM molecule WHERE label = '-' ) AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the average number of oxygen atoms in single-bonded molecules.",
    "SELECT AVG(`oxygen_count`) FROM ( SELECT T1.`molecule_id`, COUNT(*) AS `oxygen_count` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'o' AND T2.`bond_type` = '-' GROUP BY T1.`molecule_id` ) AS T3\t----- bird -----\ttoxicology"
  ],
  [
    "On average how many carcinogenic molecules are single bonded?",
    "SELECT AVG(single_bond_count) FROM ( SELECT molecule_id, COUNT(*) AS single_bond_count FROM ( SELECT bond_id, molecule_id FROM bond WHERE bond_type = '-' ) AS single_bonds GROUP BY molecule_id ) AS molecule_single_bonds;\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule containing sodium atoms, how many are non-carcinogenic?",
    "SELECT COUNT(*) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'na' AND m.label = '-';\t----- bird -----\ttoxicology"
  ],
  [
    "Find the triple-bonded molecules which are carcinogenic.",
    "SELECT DISTINCT T3.`atom_id` FROM atom AS T3 INNER JOIN connected AS T4 ON T3.`atom_id` = T4.`atom_id2` INNER JOIN bond AS T5 ON T4.`bond_id` = T5.`bond_id` INNER JOIN molecule AS T6 ON T5.`molecule_id` = T6.`molecule_id` WHERE T6.`molecule_id` IN ( SELECT T1.`molecule_id` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '#' AND T2.`label` = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carbon in double-bond molecules?",
    "SELECT ( SELECT COUNT(DISTINCT c1.atom_id) FROM atom AS c1 INNER JOIN bond AS b1 ON c1.molecule_id = b1.molecule_id INNER JOIN connected AS c2 ON b1.bond_id = c2.bond_id WHERE b1.bond_type = '=' AND c2.atom_id IS NOT NULL ) / ( SELECT COUNT(DISTINCT c1.atom_id) FROM atom AS c1 INNER JOIN bond AS b1 ON c1.molecule_id = b1.molecule_id INNER JOIN connected AS c2 ON b1.bond_id = c2.bond_id WHERE c2.atom_id IS NOT NULL ) * 100 AS percentage_of_carbon_in_double_bond_molecules FROM atom AS c1 WHERE c1.element = 'c' GROUP BY c1.atom_id;\t----- bird -----\ttoxicology"
  ],
  [
    "How many triple type bonds are there?",
    "SELECT COUNT(*) FROM bond WHERE bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "In how many atoms is there no bromine?",
    "SELECT COUNT(DISTINCT T1.`atom_id`) FROM atom AS T1 WHERE T1.`element` != 'br'\t----- bird -----\ttoxicology"
  ],
  [
    "Of the first 100 molecules in number order, how many are carcinogenic?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT `molecule_id` FROM molecule WHERE `molecule_id` BETWEEN 'TR000' AND 'TR099' AND `label` = '+' ) AS T1\t----- bird -----\ttoxicology"
  ],
  [
    "Identify by their ID the molecules in which there is silicon.",
    "SELECT DISTINCT T1.`atom_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'si' GROUP BY T1.`atom_id`\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in the TR004_8_9 bond atoms?",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`bond_id` = 'TR004_8_9'\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in a double type bond?",
    "SELECT DISTINCT T2.element FROM atom AS T1 INNER JOIN bond AS T4 ON T1.molecule_id = T4.molecule_id INNER JOIN connected ON T4.bond_id = connected.bond_id INNER JOIN atom AS T2 ON connected.atom_id2 = T2.atom_id WHERE T4.bond_type = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Which type of label is the most numerous in atoms with hydrogen?",
    "WITH HydrogenMolecules AS ( SELECT T1.molecule_id FROM atom AS T1 WHERE T1.element = 'h' GROUP BY T1.molecule_id ), MoleculeLabels AS ( SELECT T2.molecule_id, T2.label, COUNT(*) AS label_count FROM molecule AS T2 JOIN HydrogenMolecules AS HM ON T2.molecule_id = HM.molecule_id GROUP BY T2.molecule_id, T2.label ), MaxLabel AS ( SELECT molecule_id, label FROM MoleculeLabels WHERE label_count = (SELECT MAX(label_count) FROM MoleculeLabels) ) SELECT label FROM MaxLabel;\t----- bird -----\ttoxicology"
  ],
  [
    "Tellurium is in what type of bond?",
    "SELECT MAX(bond_type) AS bond_type FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'te' )\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms are connected in single type bonds?",
    "SELECT DISTINCT A1.`element`, A2.`element` FROM atom AS A1 INNER JOIN connected AS C1 ON A1.`atom_id` = C1.`atom_id` INNER JOIN bond AS B1 ON C1.`bond_id` = B1.`bond_id` INNER JOIN atom AS A2 ON B1.`atom_id2` = A2.`atom_id` WHERE B1.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate which atoms are connected in non-carcinogenic type molecules.",
    "SELECT DISTINCT connected.`atom_id2` FROM connected INNER JOIN bond AS T3 ON connected.`bond_id` = T3.`bond_id` INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Which element is the least numerous in non-carcinogenic molecules?",
    "SELECT element FROM ( SELECT atom.`element`, COUNT(*) AS element_count FROM atom INNER JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE molecule.`label` = '-' GROUP BY atom.`element` ) AS element_counts ORDER BY element_count ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What type of bond is there between the atoms TR004_8 and TR004_20?",
    "SELECT T5.`bond_type` FROM bond AS T5 INNER JOIN ( SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`atom_id` = 'TR004_8' AND T2.`atom_id` = 'TR004_20' ) AS T6 ON T5.`molecule_id` = T6.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "What type of label is not on molecules with atoms with tin?",
    "SELECT DISTINCT T2.`label` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'sn'\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms with iodine and sulfur type elements are there in single bond molecules?",
    "SELECT COUNT(DISTINCT a.atom_id) FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id INNER JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element IN ('i', 's') AND b.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all connected atoms with a triple bond.",
    "SELECT DISTINCT T1.`atom_id`, T1.`atom_id2` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN atom AS T3 ON T1.`atom_id` = T3.`atom_id` INNER JOIN atom AS T4 ON T1.`atom_id2` = T4.`atom_id` WHERE T2.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all the atoms that are connected to the atoms of the TR181 molecule.",
    "-- Assuming the tables are already populated with data -- Execute the query SELECT DISTINCT T1.`atom_id` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id2` INNER JOIN molecule AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR181' );\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of carcinogenic-type molecules does not contain fluorine?",
    "SELECT COUNT(*) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`molecule_id` = T3.`molecule_id` INNER JOIN connected AS T4 ON T3.`bond_id` = T4.`bond_id` WHERE T1.`label` = '+' AND T2.`element` = 'f'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carcinogenic molecules in triple type bonds?",
    "SELECT ( SELECT COUNT(*) FROM bond WHERE bond_type = '#' ) / ( SELECT COUNT(*) FROM molecule WHERE label = '+' ) * 100 AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
    "SELECT DISTINCT atom.`element` FROM atom INNER JOIN molecule AS T1 ON atom.`molecule_id` = T1.`molecule_id` WHERE T1.`molecule_id` = 'TR000' ORDER BY atom.`element` ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6?",
    "SELECT DISTINCT A.`atom_id`, A.`element` FROM atom AS A INNER JOIN connected AS C ON A.`atom_id` = C.`atom_id2` INNER JOIN bond AS B ON C.`bond_id` = B.`bond_id` INNER JOIN molecule AS M ON B.`molecule_id` = M.`molecule_id` WHERE M.`label` = 'TR001' AND B.`bond_id` = ( SELECT `bond_id` FROM bond WHERE `molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR001' ) AND `bond_type` = 'None' LIMIT 1 );\t----- bird -----\ttoxicology"
  ],
  [
    "What is the difference between the number of molecules that are carcinogenic and those that are not?",
    "SELECT ( SELECT COUNT(*) FROM molecule WHERE label = '+' ) - ( SELECT COUNT(*) FROM molecule WHERE label = '-' ) AS difference\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atom IDs of the bond TR_000_2_5?",
    "SELECT DISTINCT A1.atom_id FROM atom AS A1 JOIN bond AS B ON A1.molecule_id = B.molecule_id JOIN connected AS C ON B.bond_id = C.bond_id WHERE B.bond_id = 'TR_000_2_5' AND A1.atom_id IS NOT NULL GROUP BY A1.atom_id LIMIT 10;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond IDs that have the same atom ID 2 of TR000_2?",
    "SELECT DISTINCT bond_id FROM connected JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR000_2'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top five molecules that have double bonds in alphabetical order.",
    "SELECT DISTINCT T1.`molecule_id` FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T2.`bond_type` = '=' GROUP BY T1.`molecule_id` ORDER BY T1.`molecule_id` ASC LIMIT 5\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of double bonds in the molecule TR008?",
    "SELECT ROUND( ( SELECT COUNT(*) FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR008') AND bond_type = '=' ) / ( SELECT COUNT(*) FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR008') AND bond_type IS NOT NULL ) * 100, 2 ) AS percent\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of molecules that are carcinogenic?",
    "SELECT ( SELECT COUNT(*) FROM molecule WHERE label = '+' ) / ( SELECT COUNT(*) FROM molecule ) * 100 AS percent\t----- bird -----\ttoxicology"
  ],
  [
    "How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage.",
    "SELECT ROUND( (SELECT COUNT(*) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T1.`molecule_id` = (SELECT `molecule_id` FROM molecule WHERE `label` = 'TR206') AND T1.`element` = 'h' AND T1.`element` IS NOT NULL ) / (SELECT COUNT(*) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id2 WHERE T1.`molecule_id` = (SELECT `molecule_id` FROM molecule WHERE `label` = 'TR206') AND T1.`element` IS NOT NULL ) * 100, 2) AS percent\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of bond that molecule TR000 has when involved in any bonds?",
    "SELECT DISTINCT bond.`bond_type` FROM bond INNER JOIN molecule AS T1 ON bond.`molecule_id` = T1.`molecule_id` WHERE T1.`molecule_id` = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the toxicology and label of molecule TR060?",
    "SELECT m.label, GROUP_CONCAT(a.element) AS elements FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.molecule_id = ( SELECT molecule_id FROM molecule WHERE label = '+' ) GROUP BY m.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic?",
    "SELECT COALESCE( (SELECT bond_type FROM bond WHERE molecule_id = 'TR018' GROUP BY bond_type ORDER BY COUNT(*) DESC LIMIT 1), 'Unknown' ) AS majority_bond_type, (SELECT label FROM molecule WHERE molecule_id = 'TR018') AS carcinogenicity FROM atom WHERE atom.molecule_id = 'TR018';\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
    "SELECT T1.`molecule_id` FROM molecule AS T1 WHERE T1.`label` = '-' AND T1.`molecule_id` IN ( SELECT DISTINCT T2.`molecule_id` FROM bond AS T2 INNER JOIN molecule AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T2.`bond_type` = '-' ) ORDER BY T1.`molecule_id` ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top two bonds that happened with the molecule TR006 in alphabetical order.",
    "SELECT DISTINCT bond_type FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = (SELECT molecule_id FROM atom WHERE element = 'TR006') ORDER BY bond_type ASC LIMIT 2;\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds which involved atom 12 does molecule TR009 have?",
    "SELECT COUNT(DISTINCT bond.bond_id) FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR009' AND (atom.atom_id = 'TR009_12' OR atom.atom_id = 'TR009_12') AND bond.molecule_id LIKE 'TR009_%' GROUP BY bond.bond_id;\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules are carcinogenic and have the bromine element?",
    "SELECT COUNT(DISTINCT T1.molecule_id) FROM ( SELECT molecule_id FROM molecule WHERE label = '+' ) AS T1 INNER JOIN ( SELECT molecule_id FROM atom WHERE element = 'br' ) AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type and the atoms of the bond ID of TR001_6_9?",
    "SELECT DISTINCT b.bond_type, a1.atom_id, a2.atom_id FROM bond AS b JOIN connected AS c ON b.bond_id = c.bond_id JOIN atom AS a1 ON c.atom_id = a1.atom_id JOIN atom AS a2 ON c.atom_id2 = a2.atom_id JOIN molecule AS m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR001_6_9' AND a2.atom_id IS NOT NULL ORDER BY b.bond_type;\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.",
    "SELECT T1.`label` FROM molecule AS T1 JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`atom_id` = 'TR001_10'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a triple bond type?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM bond AS T1 WHERE T1.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "How many connections does the atom 19 have?",
    "SELECT COUNT(DISTINCT c.`bond_id`) FROM connected AS c INNER JOIN atom AS a ON c.`atom_id` = a.`atom_id` INNER JOIN bond AS b ON c.`bond_id` = b.`bond_id` WHERE a.`atom_id` = ( SELECT a2.`molecule_id` FROM atom AS a2 WHERE a2.`atom_id` LIKE 'TR%_19' )\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of the toxicology of the molecule \"TR004\".",
    "CREATE TABLE molecule ( molecule_id INTEGER PRIMARY KEY, label TEXT ); INSERT INTO molecule (molecule_id, label) VALUES (1, 'TR004'); CREATE TABLE atom ( atom_id INTEGER PRIMARY KEY, molecule_id INTEGER, element TEXT ); INSERT INTO atom (atom_id, molecule_id, element) VALUES (1, 1, 'c'), (2, 1, 'h'), (3, 1, 'o'), (4, 1, 'n'), (5, 1, 'cl'), (6, 1, 's'), (7, 1, 'p'), (8, 1, 'na'), (9, 1, 'br'), (10, 1, 'f'), (11, 1, 'i'), (12, 1, 'sn'), (13, 1, 'pb'), (14, 1, 'te'), (15, 1, 'ca');\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are not carcinogenic?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT `molecule_id` FROM molecule WHERE `label` = '-' ) AS T1\t----- bird -----\ttoxicology"
  ],
  [
    "Among all the atoms from 21 to 25, list all the molecules that are carcinogenic.",
    "SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN molecule AS T3 ON T1.`molecule_id` = T3.`molecule_id` WHERE SUBSTRING(T1.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND SUBSTRING(T2.`atom_id`, 7, 2) BETWEEN '21' AND '25' AND T3.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bonds that have phosphorus and nitrogen as their atom elements?",
    "SELECT DISTINCT T3.`bond_type` FROM bond AS T3 INNER JOIN ( SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'p' AND T2.`element` = 'n' ) AS T4 ON T3.`molecule_id` = T4.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "Is the molecule with the most double bonds carcinogenic?",
    "SELECT T4.`label` FROM molecule AS T4 JOIN ( SELECT T1.`molecule_id`, COUNT(*) AS double_bond_count FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`bond_type` = '=' GROUP BY T1.`molecule_id` ORDER BY double_bond_count DESC LIMIT 1 ) AS T3 ON T4.`molecule_id` = T3.`molecule_id` WHERE T4.`label` = '+';\t----- bird -----\ttoxicology"
  ],
  [
    "What is the average number of bonds the atoms with the element iodine have?",
    "SELECT AVG(bond_count) AS average_bonds FROM ( SELECT connected.`atom_id`, COUNT(connected.`bond_id`) AS bond_count FROM connected INNER JOIN bond ON connected.`bond_id` = bond.`bond_id` INNER JOIN atom ON connected.`atom_id` = atom.`atom_id` WHERE atom.`element` = 'i' GROUP BY connected.`atom_id` ) AS subquery\t----- bird -----\ttoxicology"
  ],
  [
    "List the bond type and the bond ID of the atom 45.",
    "SELECT DISTINCT CASE WHEN bond_type = '-' THEN 'single bond' WHEN bond_type = '=' THEN 'double bond' WHEN bond_type = '#' THEN 'triple bond' ELSE 'None' END AS `bond_type`, bond_id FROM ( SELECT bond_id, bond_type FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE atom.atom_id = 45 AND connected.atom_id2 = 45 ) AS subquery ORDER BY bond_id ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of atoms that can not bond with any other atoms.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`bond_id` IS NULL\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms of the triple bond with the molecule \"TR447\"?",
    "SELECT DISTINCT T3.`element` FROM atom AS T3 INNER JOIN bond AS T2 ON T3.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T1 ON T2.`bond_id` = T1.`bond_id` INNER JOIN molecule AS M ON T2.`molecule_id` = M.`molecule_id` WHERE M.`label` = 'TR447' AND T2.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the atoms of TR144_8_19?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_id` = 'TR144_8_19'\t----- bird -----\ttoxicology"
  ],
  [
    "Of all the carcinogenic molecules, which one has the most double bonds?",
    "SELECT T1.`molecule_id`, COUNT(T2.`bond_id`) AS double_bond_count FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '=' GROUP BY T1.`molecule_id` ORDER BY double_bond_count DESC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the least common element of all carcinogenic molecules?",
    "SELECT T4.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN ( SELECT T3.element FROM atom AS T3 INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.label = '+' GROUP BY T3.element ORDER BY COUNT(*) ASC LIMIT 1 ) AS T4 ON T1.element = T4.element\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that can bond with the atom that has the element lead?",
    "SELECT T4.`atom_id2` FROM connected AS T4 INNER JOIN ( SELECT T2.`bond_id` FROM bond AS T2 INNER JOIN ( SELECT T1.`molecule_id` FROM atom AS T1 WHERE T1.`element` = 'pb' ) AS T3 ON T2.`molecule_id` = T3.`molecule_id` ) AS T5 ON T4.`bond_id` = T5.`bond_id`\t----- bird -----\ttoxicology"
  ],
  [
    "List the elements of all the triple bonds.",
    "SELECT DISTINCT T2.`element` FROM bond AS T1 INNER JOIN connected AS T3 ON T1.`bond_id` = T3.`bond_id` INNER JOIN atom AS T2 ON T3.`atom_id` = T2.`atom_id` WHERE T1.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of bonds have the most common combination of atoms' elements?",
    "SELECT COUNT(*) AS atom_count FROM atom\t----- bird -----\ttoxicology"
  ],
  [
    "What proportion of single bonds are carcinogenic?",
    "SELECT ( SELECT COUNT(*) FROM bond WHERE bond_type = '-' ) / ( SELECT COUNT(*) FROM bond WHERE bond_type = '-' ) AS proportion\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms consisting of the element carbon and hydrogen.",
    "SELECT COUNT(*) AS total_atoms FROM atom WHERE element IN ('c', 'h');\t----- bird -----\ttoxicology"
  ],
  [
    "List down atom id2 for atoms with element sulfur.",
    "SELECT DISTINCT connected.`atom_id2` FROM atom AS T1 INNER JOIN connected ON T1.`atom_id` = connected.`atom_id` INNER JOIN atom AS T3 ON connected.`atom_id2` = T3.`atom_id` WHERE T3.`element` = 's'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type for atoms with element Tin?",
    "SELECT DISTINCT T5.`bond_type` FROM bond AS T5 INNER JOIN molecule AS T6 ON T5.`molecule_id` = T6.`molecule_id` WHERE T6.`molecule_id` IN ( SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'sn' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are there for single bond molecules?",
    "SELECT COUNT(DISTINCT T1.`element`) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine.",
    "SELECT COUNT(DISTINCT a.atom_id) FROM atom a INNER JOIN bond b ON a.molecule_id = b.molecule_id INNER JOIN connected c ON b.bond_id = c.bond_id AND a.atom_id = c.atom_id2 WHERE b.bond_type = '#' AND a.element IN ('p', 'br') GROUP BY a.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "Write down bond id for molecules that are carcinogenic.",
    "SELECT bond_id FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM molecule WHERE label = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among the single bond molecule id, which molecules are not carcinogenic?",
    "SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '-' AND T1.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the composition of element chlorine in percentage among the single bond molecules?",
    "SELECT ( SELECT COUNT(*) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE bond.bond_type = '-' AND atom.element = 'cl' ) / ( SELECT COUNT(*) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE bond.bond_type = '-' ) as percent\t----- bird -----\ttoxicology"
  ],
  [
    "What are the labels for TR000, TR001 and TR002?",
    "SELECT T1.`label` FROM molecule AS T1 WHERE T1.`molecule_id` IN ('TR000', 'TR001', 'TR002')\t----- bird -----\ttoxicology"
  ],
  [
    "List down the molecule id for non carcinogenic molecules.",
    "SELECT `molecule_id` FROM molecule WHERE `label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
    "SELECT COUNT(*) FROM molecule AS T1 INNER JOIN ( SELECT molecule_id FROM molecule WHERE label = '+' AND molecule_id BETWEEN 'TR000' AND 'TR030' ) AS T2 ON T1.molecule_id = T2.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "List down the bond type for molecules from molecule id TR000 to TR050.",
    "SELECT DISTINCT T1.`bond_type` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` BETWEEN 'TR000' AND 'TR050' ORDER BY T1.`bond_type` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements for bond id TR001_10_11?",
    "SELECT DISTINCT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.molecule_id = 'TR001_10_11' AND b.bond_id = ( SELECT MAX(bond_id) FROM bond WHERE molecule_id = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many bond id have element iodine?",
    "SELECT DISTINCT T3.`bond_id` FROM bond AS T3 INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`molecule_id` IN ( SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'i' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?",
    "SELECT CASE WHEN MAX(label) = '+' THEN 'Carcinogenic' ELSE 'Non-Carcinogenic' END AS `Type` FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'Ca' )\t----- bird -----\ttoxicology"
  ],
  [
    "Does bond id TR001_1_8 have both element of chlorine and carbon?",
    "SELECT CASE WHEN ( SELECT COUNT(*) FROM ( SELECT T1.element FROM connected AS T3 INNER JOIN atom AS T1 ON T3.atom_id = T1.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T2.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_1_8') AND T1.element = 'cl' ) AS T4 WHERE T4.element = 'cl' ) > 0 AND ( SELECT COUNT(*) FROM ( SELECT T1.element FROM connected AS T3 INNER JOIN atom AS T1 ON T3.atom_id = T1.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T2.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_1_8') AND T1.element = 'c' ) AS T5 WHERE T5.element = 'c' ) > 0 THEN 'Yes' ELSE 'No' END\t----- bird -----\ttoxicology"
  ],
  [
    "List down two molecule id of triple bond non carcinogenic molecules with element carbon.",
    "SELECT DISTINCT T1.molecule_id FROM (SELECT molecule_id FROM atom WHERE element = 'c' ) AS T1 INNER JOIN (SELECT molecule_id FROM bond WHERE bond_type = '#' ) AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN (SELECT molecule_id FROM molecule WHERE label = '-' ) AS T3 ON T1.molecule_id = T3.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of element chlorine in carcinogenic molecules?",
    "SELECT ( SELECT COUNT(DISTINCT atom.`molecule_id`) FROM atom WHERE atom.`element` = 'cl' AND atom.`molecule_id` IN ( SELECT molecule_id FROM molecule WHERE label = '+' ) ) / ( SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = '+' ) * 100 AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "List the toxicology elements associated with molecule TR001.",
    "SELECT DISTINCT atom.`element` FROM atom AS atom INNER JOIN molecule AS molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE molecule.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR001' )\t----- bird -----\ttoxicology"
  ],
  [
    "Give me the molecule ID of the double bond type.",
    "SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '='\t----- bird -----\ttoxicology"
  ],
  [
    "Write down the atom IDs of the first and second atoms of triple bond type molecules.",
    "SELECT DISTINCT T1.`atom_id`, T3.`atom_id2` FROM atom AS T1 JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` JOIN connected AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T2.`bond_type` = '#' AND T3.`atom_id` = T1.`atom_id` AND T3.`atom_id2` IS NOT NULL GROUP BY T1.`atom_id`;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the toxicology elements associated with bond ID TR005_16_26?",
    "SELECT DISTINCT atom.`element` FROM atom INNER JOIN bond ON atom.`molecule_id` = bond.`molecule_id` INNER JOIN connected ON bond.`bond_id` = connected.`bond_id` INNER JOIN molecule ON bond.`molecule_id` = molecule.`molecule_id` WHERE molecule.`molecule_id` = 'TR005_16_26' ORDER BY atom.`element` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the single bond type molecules are non-carcinogenic?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '-' AND T2.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the label for bond ID TR001_10_11?",
    "SELECT T2.`label` FROM molecule AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not.",
    "SELECT molecule.`label` FROM molecule INNER JOIN bond ON molecule.`molecule_id` = bond.`molecule_id` WHERE bond.`bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+' AND substr(T1.`atom_id`, 7, 1) = '4'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label.",
    "SELECT CASE WHEN SUM(CASE WHEN a.element = 'h' THEN 1 ELSE 0 END) > 0 THEN '+' ELSE '-' END AS label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR006' GROUP BY m.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the chemical compound that contains Calcium is carcinogenic.",
    "SELECT DISTINCT m.molecule_id FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id INNER JOIN bond b ON m.molecule_id = b.molecule_id INNER JOIN connected c ON b.bond_id = c.bond_id INNER JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE a.element = 'ca' AND a2.element = 'ca' AND m.label = '+';\t----- bird -----\ttoxicology"
  ],
  [
    "Determine the bond type that is formed in the chemical compound containing element Tellurium.",
    "SELECT * FROM bond WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'Te') AND bond_type IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "Name chemical elements that form a bond TR001_10_11.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 JOIN bond AS B ON T1.`molecule_id` = B.`molecule_id` JOIN connected AS C ON B.`bond_id` = C.`bond_id` WHERE C.`atom_id` = ( SELECT SUBSTR(bond_id, 7, 2) FROM bond WHERE bond_id = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.",
    "SELECT (triple_bond_compounds / total_compounds) * 100 AS triple_bond_percentage FROM ( SELECT COUNT(DISTINCT molecule_id) AS total_compounds FROM molecule ) AS total_compounds_table, ( SELECT COUNT(DISTINCT bond.`molecule_id`) AS triple_bond_compounds FROM bond WHERE bond.`bond_type` = '#' ) AS triple_bond_compounds_table\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.",
    "SELECT COUNT(DISTINCT T1.`bond_id`) AS total_bond_count FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`molecule_id` IN ( SELECT DISTINCT T1.`molecule_id` FROM molecule AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` != T2.`molecule_id` WHERE T2.`molecule_id` = 'TR047' )\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the molecule that contains atom TR001_1 is carcinogenic.",
    "SELECT DISTINCT T3.`label` FROM molecule AS T3 INNER JOIN ( SELECT T5.`molecule_id` FROM atom AS T5 INNER JOIN connected AS T6 ON T5.`atom_id` = T6.`atom_id` WHERE T5.`element` = 'TR001_1' ) AS T7 ON T3.`molecule_id` = T7.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR151 carcinogenic?",
    "SELECT T1.`label` = '+' AS IsCarcinogenic FROM molecule AS T1 WHERE T1.`molecule_id` = 'TR151'\t----- bird -----\ttoxicology"
  ],
  [
    "Which toxic element can be found in the molecule TR151?",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS C ON T1.`atom_id` = C.`atom_id` WHERE T2.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR151' ) AND T1.`element` IN ('cl', 'br') AND C.`bond_id` IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "How many chemical compounds in the database are identified as carcinogenic.",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM molecule AS T1 WHERE T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.",
    "SELECT DISTINCT atom.atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE substr(molecule.molecule_id, 3, 3) BETWEEN 10 AND 49 AND atom.element = 'c';\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule labeled with carcinogenic compounds?",
    "SELECT COUNT(DISTINCT atom.`atom_id`) FROM atom INNER JOIN molecule AS T1 ON atom.`molecule_id` = T1.`molecule_id` WHERE T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond ids are double-bond with carcinogenic compound?",
    "SELECT DISTINCT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id INNER JOIN ( SELECT bond.bond_id FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = ' = ' ) AS double_bonds ON molecule.molecule_id = double_bonds.molecule_id WHERE molecule.label = '+';\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?",
    "SELECT COUNT(DISTINCT a.atom_id) FROM atom a INNER JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '+' AND a.element = 'h';\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.",
    "SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a1 ON m.molecule_id = a1.molecule_id AND a1.element = 'TR00_1' JOIN bond b ON m.molecule_id = b.molecule_id AND b.bond_type = 'TR00_1_2' JOIN connected c ON b.bond_id = c.bond_id AND c.atom_id = a1.atom_id WHERE a1.atom_id IS NOT NULL ORDER BY m.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "Among the atoms that contain element carbon, which one does not contain compound carcinogenic?",
    "SELECT DISTINCT T1.`atom_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'c' AND T2.`label` = '-' AND NOT EXISTS ( SELECT 1 FROM bond AS T3 INNER JOIN connected AS T4 ON T3.`bond_id` = T4.`bond_id` WHERE T3.`molecule_id` = T1.`molecule_id` AND T4.`atom_id` = T1.`atom_id` AND T3.`bond_type` = '=' );\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
    "SELECT ( SELECT COUNT(*) FROM ( SELECT molecule_id FROM molecule WHERE label = '+' ) AS T1 INNER JOIN ( SELECT molecule_id FROM atom WHERE element = 'h' ) AS T2 ON T1.molecule_id = T2.molecule_id ) / ( SELECT COUNT(*) FROM molecule WHERE label = '+' ) * 100.0 AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR124 carcinogenic?",
    "SELECT T1.`label` FROM molecule AS T1 JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` JOIN connected AS T3 ON T2.`atom_id` = T3.`atom_id` JOIN bond AS T4 ON T3.`bond_id` = T4.`bond_id` WHERE T1.`molecule_id` = 'TR124' AND T1.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms comprise TR186?",
    "SELECT DISTINCT atom.`element` FROM atom INNER JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE molecule.`molecule_id` = (SELECT molecule_id FROM molecule WHERE label = 'TR186')\t----- bird -----\ttoxicology"
  ],
  [
    "What is the bond type of TR007_4_19?",
    "SELECT DISTINCT b.bond_type FROM bond b JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR007_4_19' AND b.bond_type IS NOT NULL GROUP BY b.bond_type;\t----- bird -----\ttoxicology"
  ],
  [
    "Name the elements that comprise the atoms of bond TR001_2_4.",
    "SELECT DISTINCT a.`element` FROM atom a JOIN bond b ON a.`molecule_id` = b.`molecule_id` JOIN connected c ON b.`bond_id` = c.`bond_id` WHERE b.`molecule_id` = 'TR001_2_4' AND a.`element` IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "How many double bonds does TR006 have and is it carcinogenic?",
    "SELECT molecule.`label` FROM molecule WHERE molecule.`molecule_id` = 'TR006'\t----- bird -----\ttoxicology"
  ],
  [
    "List all carcinogenic molecules and their elements.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Name all bonds with single bond types and what atoms are connected to the molecules.",
    "SELECT DISTINCT T1.`molecule_id`, T2.`atom_id`, T2.`element` FROM bond AS T1 INNER JOIN connected AS T4 ON T1.`bond_id` = T4.`bond_id` INNER JOIN atom AS T2 ON T4.`atom_id` = T2.`atom_id` WHERE T1.`bond_type` = '-' ORDER BY T2.`atom_id` ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecules have triple bonds and list all the elements they contain.",
    "SELECT DISTINCT T3.`element` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN atom AS T3 ON T1.`atom_id` = T3.`atom_id` WHERE T2.`molecule_id` IN ( SELECT DISTINCT T4.`molecule_id` FROM molecule AS T4 INNER JOIN bond AS T5 ON T4.`molecule_id` = T5.`molecule_id` WHERE T5.`bond_type` = '#' )\t----- bird -----\ttoxicology"
  ],
  [
    "Name the atoms' elements that form bond TR000_2_3.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`molecule_id` = ( SELECT T5.`molecule_id` FROM bond AS T5 WHERE T5.`bond_id` = 'TR000_2_3' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds are created by bonding atoms with chlorine element?",
    "SELECT COUNT(DISTINCT T3.`bond_id`) FROM bond AS T2 INNER JOIN connected AS T3 ON T2.`bond_id` = T3.`bond_id` INNER JOIN atom AS T1 ON T3.`atom_id` = T1.`atom_id` WHERE T1.`element` = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?",
    "SELECT COUNT(DISTINCT T3.`bond_type`) FROM bond AS T3 INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR346' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '=' AND T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules without sulphur element is not having double bond?",
    "SELECT COUNT(DISTINCT T1.`molecule_id`) FROM atom AS T1 LEFT JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` != 's' AND T1.`molecule_id` NOT IN ( SELECT DISTINCT T3.`molecule_id` FROM bond AS T3 INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T3.`bond_type` = ' = ' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the carcinogenic label for bond TR001_2_4?",
    "SELECT T2.`label` FROM molecule AS T2 WHERE T2.`molecule_id` = ( SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR001_2_4' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to molecule id TR005?",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR005' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many single bonds are there in the list?",
    "SELECT COUNT(*) FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"cl\" element, which of them are carcinogenic?",
    "SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'cl' AND T2.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"c\" element, which of them are not carcinogenic?",
    "SELECT DISTINCT T1.`molecule_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`element` = 'c' AND T2.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules which contain the Chlorine element.",
    "SELECT ( SELECT COUNT(*) FROM molecule WHERE label = '+' ) / ( SELECT COUNT(DISTINCT atom.`molecule_id`) FROM atom WHERE element = 'cl' ) * 100 AS percentage\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule id of bond id TR001_1_7?",
    "SELECT T1.`molecule_id` FROM bond AS T1 WHERE T1.`bond_id` = 'TR001_1_7'\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are contained in bond_id TR001_3_4?",
    "SELECT COUNT(DISTINCT T1.`element`) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`molecule_id` = 'TR001_3_4'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2?",
    "SELECT DISTINCT bond_type FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON atom.atom_id = connected.atom_id INNER JOIN atom ON atom.atom_id = connected.atom_id2 WHERE atom.element = 'TR000_1' AND atom.element = 'TR000_2' ORDER BY bond_type ASC;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?",
    "SELECT T1.`molecule_id` FROM atom AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`atom_id` = 'TR000_2' AND T2.`atom_id` = 'TR000_4'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element of toxicology for the atom with the ID of TR000_1?",
    "SELECT T1.`element` FROM atom AS T1 WHERE T1.`atom_id` = 'TR000_1'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR000 is carcinogenic or not?",
    "SELECT CASE WHEN T1.`label` = '+' THEN 'Yes' WHEN T1.`label` = '-' THEN 'No' ELSE 'Unknown' END AS `carcinogenic` FROM molecule AS T1 WHERE T1.`molecule_id` = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the percentage of atoms with single bond.",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM bond)) * 100 AS percentage FROM bond WHERE bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "How many carcinogenic molecules that consisted of Nitrogen?",
    "SELECT COUNT(DISTINCT atom.`molecule_id`) FROM atom INNER JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE atom.`element` = 'n' AND molecule.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule consisted of Sulphur atom with double bond?",
    "SELECT DISTINCT m.label FROM molecule m INNER JOIN atom a ON m.molecule_id = a.molecule_id INNER JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 's' AND b.bond_type = '=';\t----- bird -----\ttoxicology"
  ],
  [
    "Which non-carcinogenic molecules consisted more than 5 atoms?",
    "SELECT T1.`molecule_id` FROM molecule AS T1 INNER JOIN ( SELECT `molecule_id`, COUNT(*) AS atom_count FROM atom GROUP BY `molecule_id` HAVING atom_count > 5 ) AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements with double bond, consisted in molecule TR024.",
    "SELECT DISTINCT T1.`element` FROM atom AS T1 INNER JOIN bond AS T3 ON T1.`molecule_id` = T3.`molecule_id` INNER JOIN connected AS T4 ON T1.`atom_id` = T4.`atom_id` INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = 'TR024' AND T3.`bond_type` = '=' AND T4.`bond_id` = (SELECT MAX(bond_id) FROM bond WHERE molecule_id = T1.`molecule_id` AND bond_type = '=')\t----- bird -----\ttoxicology"
  ],
  [
    "Which carcinogenic molecule have the highest number of atoms consisted in it?",
    "SELECT m.molecule_id, COUNT(a.atom_id) AS atom_count FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+' GROUP BY m.molecule_id ORDER BY atom_count DESC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
    "SELECT (COUNT(DISTINCT T1.`molecule_id`) / COUNT(DISTINCT T3.`molecule_id`)) * 100.0 AS percentage FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN molecule AS T3 ON T1.`molecule_id` = T3.`molecule_id` WHERE T1.`element` = 'h' AND T2.`bond_type` = '#' AND T3.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are carcinogenic?",
    "SELECT COUNT(*) FROM molecule WHERE `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules between TR004 to TR010, how many of them has single bonds?",
    "SELECT COUNT(DISTINCT bond_id) FROM bond WHERE `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` BETWEEN 'TR004' AND 'TR010' ) AND `bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule TR008, how many carbons are present?",
    "SELECT COUNT(*) FROM atom WHERE `molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR008' ) AND `element` = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
    "SELECT element FROM atom WHERE atom_id = ( SELECT atom_id FROM atom WHERE molecule_id = ( SELECT molecule_id FROM molecule WHERE label = '-' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the total number of molecules with double bonded oxygen?",
    "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS C ON T2.bond_id = C.bond_id INNER JOIN atom AS T3 ON C.atom_id = T3.atom_id WHERE T3.element = 'o' AND T2.bond_type = '='\t----- bird -----\ttoxicology"
  ],
  [
    "in molecules with triple bonds, how many of them are not carcinogenic?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`molecule_id` FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`bond_type` = '#' AND T2.`label` = '-' ) AS T3\t----- bird -----\ttoxicology"
  ],
  [
    "List the element and bond type included in the molecule with molecule ID of TR016.",
    "SELECT DISTINCT T1.`element`, T2.`bond_type` FROM atom AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T1.`molecule_id` = 'TR016'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the atom ID of double bonded carbon in TR012 molecule?",
    "SELECT DISTINCT a1.atom_id FROM atom a1 JOIN bond b ON a1.molecule_id = b.molecule_id AND b.bond_type = '=' JOIN connected c ON b.bond_id = c.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id AND a2.element = 'c' JOIN atom a3 ON c.atom_id = a3.atom_id AND a3.element = 'c' JOIN molecule m ON a1.molecule_id = m.molecule_id WHERE m.label = 'TR012' AND a1.atom_id <> a3.atom_id GROUP BY a1.atom_id;\t----- bird -----\ttoxicology"
  ],
  [
    "List the atom ID of the carcinogenic molecule that contains oxygen?",
    "SELECT T3.`atom_id` FROM atom AS T3 INNER JOIN ( SELECT T1.`molecule_id` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` = 'o' AND T1.`label` = '+' ) AS T4 ON T3.`molecule_id` = T4.`molecule_id`\t----- bird -----\ttoxicology"
  ],
  [
    "Which are the cards that have incredibly powerful foils.",
    "SELECT DISTINCT f.`name` FROM cards AS c INNER JOIN set_translations AS s ON c.`setCode` = s.`setCode` INNER JOIN foreign_data AS f ON c.`uuid` = f.`uuid` WHERE c.`cardKingdomFoilId` IS NOT NULL AND c.`cardKingdomFoilId` = c.`cardKingdomId` AND c.`cardKingdomId` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the borderless cards available without powerful foils?",
    "SELECT DISTINCT cards.* FROM cards JOIN sets ON sets.code = cards.code WHERE cards.borderColor = 'borderless' AND cards.cardKingdomFoilId IS NULL AND cards.cardKingdomId IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "List the card names with value that cost more converted mana for the face.",
    "SELECT c.`name`, MAX(c.`faceConvertedManaCost`) / 2 AS `maxFaceConvertedManaCostInMana` FROM cards AS c INNER JOIN foreign_data AS fd ON c.`uuid` = fd.`uuid` WHERE c.`faceConvertedManaCost` IS NOT NULL GROUP BY c.`name`\t----- bird -----\tcard_games"
  ],
  [
    "Name all cards with 2015 frame style ranking below 100 on EDHRec.",
    "SELECT cards.asciiName, cards.edhrecRank FROM cards JOIN sets ON cards.uuid = sets.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.frameVersion = '2015' AND cards.edhrecRank < 100 AND legalities.status = 'Legal' AND sets.type = 'expansion' AND set_translations.language = 'English' -- Assuming we want English translations GROUP BY cards.asciiName, cards.edhrecRank ORDER BY cards.edhrecRank ASC;\t----- bird -----\tcard_games"
  ],
  [
    "List all the mythic rarity print cards banned in gladiator format.",
    "SELECT DISTINCT C.id, C.artist, C.asciiName, C.availability, C.borderColor, C.cardKingdomFoilId FROM cards AS C INNER JOIN set_translations AS ST ON C.setCode = ST.setCode INNER JOIN sets AS S ON ST.setCode = S.code INNER JOIN rulings AS R ON C.uuid = R.uuid WHERE S.block = 'Gladiator' AND R.text LIKE '%banned%' AND C.rarity = 'Mythic' AND C.status = 'Banned'\t----- bird -----\tcard_games"
  ],
  [
    "For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format.",
    "SELECT T3.`id`, T3.`uuid` FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN legalities AS T3 ON T2.`uuid` = T3.`uuid` WHERE T2.`types` = 'Artifact' AND T2.`side` IS NOT NULL AND T3.`format` = 'vintage'\t----- bird -----\tcard_games"
  ],
  [
    "List all the card id and artist with unknown power which are legal for commander play format.",
    "SELECT cards.id, cards.artist FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN sets ON cards.code = sets.code INNER JOIN set_translations ON sets.code = set_translations.setCode INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE (cards.power = '*' OR cards.power IS NULL) AND legalities.format = 'commander' AND legalities.status = 'Legal' AND sets.type = 'commander' AND set_translations.language = 'English' GROUP BY cards.id, cards.artist;\t----- bird -----\tcard_games"
  ],
  [
    "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.",
    "SELECT cards.id, cards.asciiName, foreign_data.flavorText, foreign_data.language, legalities.uuid, sets.name, rulings.flavorText AS ruling_flavorText FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setCode = sets.code JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniel' AND cards.hasContentWarning = 1;\t----- bird -----\tcard_games"
  ],
  [
    "Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.",
    "SELECT T2.`flavorText` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN rulings ON T1.`uuid` = rulings.`uuid` WHERE T1.`asciiName` = 'Sublime Epiphany' AND T1.`cardKingdomFoilId` LIKE '74s' GROUP BY T2.`flavorText`;\t----- bird -----\tcard_games"
  ],
  [
    "Name the card and artist with the most ruling information. Also state if the card is a promotional printing.",
    "SELECT T1.`name`, T1.`artist`, COUNT(T2.`uuid`) AS ruling_count, T1.`availability` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` GROUP BY T1.`name`, T1.`artist`, T1.`availability` ORDER BY ruling_count DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "State the alternative languages available for card named Annul numbered 29.",
    "SELECT c.id, c.artist, c.asciiName, c.availability, c.borderColor, c.cardKingdomFoilId FROM cards c JOIN foreign_data fd ON c.uuid = fd.uuid JOIN set_translations st ON st.setCode = (SELECT code FROM sets WHERE name = 'Zendikar Rising') JOIN sets s ON s.code = st.setCode WHERE c.asciiName = 'annul' AND c.number = '29';\t----- bird -----\tcard_games"
  ],
  [
    "Name all the cards which have alternative language in Japanese.",
    "-- Corrected SQL to select all cards with a Japanese translation SELECT DISTINCT c.`name` FROM cards AS c JOIN set_translations AS st ON c.`uuid` = st.`setCode` WHERE st.`language` = 'Japanese';\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of the cards availabe in Chinese Simplified.",
    "SELECT (chinese_simplified_cards / total_cards) * 100 AS percentage FROM ( SELECT COUNT(*) AS total_cards FROM cards ) AS total, ( SELECT COUNT(*) AS chinese_simplified_cards FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE foreign_data.`language` = 'Chinese Simplified' ) AS chinese_simplified\t----- bird -----\tcard_games"
  ],
  [
    "List all the sets available in Italian translation. State the total number of cards per set.",
    "SELECT T2.setCode, T2.totalSetSize FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN foreign_data AS FD ON T1.uuid = FD.uuid WHERE T1.language = 'Italian';\t----- bird -----\tcard_games"
  ],
  [
    "How many types of cards does the artist Aaron Boyd illustrated about card art?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Boyd'\t----- bird -----\tcard_games"
  ],
  [
    "What is the keyword found on card 'Angel of Mercy'?",
    "SELECT T2.`flavorText` FROM cards AS T1 USE INDEX (idx_uuid) INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`asciiName` = 'Angel of Mercy' AND T1.`availability` IS NOT NULL GROUP BY T2.`flavorText` ORDER BY T2.`flavorText` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have infinite power?",
    "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games"
  ],
  [
    "What type of promotion is of card 'Duress'?",
    "SELECT MAX(promoTypes) AS promotion_type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.asciiName = 'Duress' GROUP BY T1.code;\t----- bird -----\tcard_games"
  ],
  [
    "What is the border color of card \"Ancestor's Chosen\"?",
    "SELECT cards.borderColor FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN sets ON cards.set_code = sets.code WHERE cards.asciiName = 'Ancestor''s Chosen' AND sets.block = 'Magic Player Rewards';\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of the card \"Ancestor's Chosen\" as originally printed?",
    "SELECT DISTINCT T1.`originaltype` FROM cards AS T1 JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`asciiName` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
    "SELECT DISTINCT T2.`language` FROM cards AS T1 INNER JOIN set_translations AS T3 ON T1.`set_id` = T3.`set_id` INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`name` = 'Angel of Mercy'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted have text boxes?",
    "SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`status` = 'restricted' AND T2.`isTextless` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What is the description about the ruling of card \"Condemn\"?",
    "SELECT DISTINCT T2.`flavorText` FROM cards AS T2 INNER JOIN foreign_data AS T1 ON T1.`uuid` = T2.`uuid` WHERE T2.`asciiName` = 'Condemn' AND T1.`language` = 'English' -- Assuming we want the English flavor text ORDER BY T2.`flavorText` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted are found in a starter deck?",
    "SELECT COUNT(DISTINCT c.id) FROM cards AS c INNER JOIN legalities AS l ON c.`uuid` = l.`uuid` INNER JOIN sets AS s ON s.`code` = (SELECT setCode FROM set_translations WHERE sets.`code` = s.`code`) WHERE l.`status` = 'restricted' AND s.`isStarter` = 1;\t----- bird -----\tcard_games"
  ],
  [
    "What is the status of card \"Cloudchaser Eagle\"?",
    "SELECT T1.`asciiName`, T2.`flavorText` FROM cards AS T1 JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`asciiName` = 'Cloudchaser Eagle' AND T2.`language` = 'English' -- Assuming we want the English flavor text GROUP BY T1.`asciiName`, T2.`flavorText` ORDER BY T1.`asciiName` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of card \"Benalish Knight\"?",
    "SELECT foreign_data.`flavorText` FROM foreign_data INNER JOIN cards ON foreign_data.`uuid` = cards.`uuid` INNER JOIN sets ON cards.`setCode` = sets.`code` WHERE cards.`asciiName` = 'Benalish Knight' AND sets.`isFoilOnly` = 0 AND cards.`availability` IS NOT NULL GROUP BY foreign_data.`uuid`;\t----- bird -----\tcard_games"
  ],
  [
    "What is the rule of playing card \"Benalish Knight\"?",
    "SELECT DISTINCT T1.`artist`, T1.`availability`, T1.`borderColor`, T1.`cardKingdomFoilId` FROM cards AS T1 JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` JOIN set_translations AS T3 ON T3.`setCode` = (SELECT T4.`code` FROM sets AS T4 WHERE T4.`code` = T1.`code`) WHERE T1.`asciiName` = 'Benalish Knight' AND T1.`availability` IS NOT NULL AND T2.`language` = 'English' -- Assuming we want the flavor text in English ORDER BY T1.`artist` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the names of the artists who illustrated the card art in Phyrexian.",
    "SELECT DISTINCT cards.`artist` FROM cards INNER JOIN set_translations ON cards.`uuid` = set_translations.`uuid` INNER JOIN sets ON set_translations.`setCode` = sets.`code` WHERE sets.`block` = 'Phyrexian';\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of borderless cards?",
    "SELECT ( SELECT COUNT(*) FROM cards WHERE borderColor = 'borderless' ) * 100.0 / ( SELECT COUNT(*) FROM cards )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards that illusrtated in German have been reprinted?",
    "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE foreign_data.`language` = 'German' AND cards.`isReprint` = 1\t----- bird -----\tcard_games"
  ],
  [
    "How many borderless cards are illustrated in Russian?",
    "SELECT COUNT(*) FROM ( SELECT cards.* FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.borderColor = 'borderless' AND foreign_data.language = 'Russian' ) AS borderless_cards_in_russian\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of cards whose language is French among the Story Spotlight cards?",
    "SELECT ( SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'French' AND cards.isStorySpotlight = 1 ) * 100.0 / ( SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.isStorySpotlight = 1 ) AS percentage\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there with toughness of 99?",
    "SELECT COUNT(*) FROM cards WHERE toughness = '99'\t----- bird -----\tcard_games"
  ],
  [
    "Name the cards that were illustrated by Aaron Boyd.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "How many black border cards are only available on mtgo?",
    "SELECT COUNT(*) FROM cards WHERE borderColor = 'black' AND availability = 'mtgo'\t----- bird -----\tcard_games"
  ],
  [
    "List down all the card IDs with converted mana cost of 0.",
    "SELECT cards.`id` FROM cards WHERE cards.`convertedManaCost` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What are the card layout of cards with keyword of flying?",
    "SELECT DISTINCT cards.`layout` FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE foreign_data.`keywords` LIKE '%flying%'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT c.`id` FROM cards AS c INNER JOIN set_translations AS st ON c.`uuid` = st.`uuid` INNER JOIN sets AS s ON st.`setCode` = s.`code` WHERE c.`originalType` = 'Summon - Angel' AND c.`subtype` NOT IN ( SELECT name FROM foreign_data WHERE language = 'English' ) ) AS subquery\t----- bird -----\tcard_games"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "What are the cards belong to duel deck a? List the ID.",
    "SELECT cards.id FROM cards INNER JOIN set_translations ON cards.uuid = set_translations.uuid INNER JOIN sets ON set_translations.setCode = sets.code WHERE sets.booster = 'Duel Deck' AND sets.code = 'a';\t----- bird -----\tcard_games"
  ],
  [
    "List the edhrecRank for cards with frame version 2015.",
    "SELECT T1.`edhrecRank` FROM cards AS T1 WHERE T1.`frameVersion` = '2015'\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of artists for cards in Chinese Simplified.",
    "SELECT DISTINCT T1.`artist` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`setCode` INNER JOIN foreign_data AS T3 ON T1.`uuid` = T3.`uuid` WHERE T3.`language` = 'Chinese Simplified' AND T1.`artist` IS NOT NULL ORDER BY T1.`artist` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards that only available in paper and Japanese language?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "How many of the banned cards are white border?",
    "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid JOIN set_translations ON set_translations.setCode = sets.code WHERE legalities.uuid = 'banned-uuid' -- Replace 'banned-uuid' with the actual UUID of the banned status AND set_translations.setCode = 'ZNR' -- Replace 'ZNR' with the actual set code for Zendikar Rising AND cards.borderColor = 'white';\t----- bird -----\tcard_games"
  ],
  [
    "List down the uuid for legacy cards and the foreign language of these cards.",
    "SELECT DISTINCT foreign_data.`language` FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE cards.`availability` = 'legacy'\t----- bird -----\tcard_games"
  ],
  [
    "Write down the ruling of Beacon of Immortality.",
    "SELECT T2.`flavorText` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`asciiName` = 'Beacon of Immortality' AND T2.`language` = 'English';\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are having future frame version and what are the legality status of these cards?",
    "SELECT DISTINCT legalities.`status` FROM cards INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` WHERE frameVersion = 'future'\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards for set OGW? State the colour for these cards.",
    "SELECT DISTINCT T1.`id`, T1.`artist`, T1.`asciiName`, T1.`availability`, T1.`borderColor` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`uuid` = T2.`code` INNER JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` WHERE T3.`setCode` = 'OGW'\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
    "SELECT DISTINCT T3.`language`, T3.`name` FROM set_translations AS T3 INNER JOIN cards AS T4 ON T3.`setCode` = T4.`code` INNER JOIN sets AS T5 ON T4.`code` = T5.`code` WHERE T5.`setCode` = '10E' AND T4.`convertedManaCost` = 5 AND T3.`language` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of cards with original types of Creature - Elf and the date of rulings for these cards.",
    "SELECT DISTINCT r.date FROM rulings AS r INNER JOIN cards AS c ON r.uuid = c.uuid INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid INNER JOIN sets AS s ON c.setCode = s.code WHERE c.originalType = 'Creature - Elf' ORDER BY r.date ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What are the colors of cards from ID 1-20? What are the format of these cards?",
    "SELECT DISTINCT legalities.`format` FROM cards INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` WHERE cards.`id` BETWEEN 1 AND 20\t----- bird -----\tcard_games"
  ],
  [
    "Among the Artifact cards, which are black color and comes with foreign languague translation?",
    "SELECT DISTINCT cards.* FROM cards INNER JOIN set_translations ON cards.code = set_translations.setCode INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.originalType = 'Artifact' AND cards.colors = 'B' AND foreign_data.language != 'English' ORDER BY cards.uuid ASC;\t----- bird -----\tcard_games"
  ],
  [
    "Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` INNER JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` WHERE T1.`rarity` = 'uncommon' ORDER BY T1.`releaseDate` ASC LIMIT 3;\t----- bird -----\tcard_games"
  ],
  [
    "On how many cards designed by John Avon is its foil non-powerful?",
    "SELECT COUNT(DISTINCT cards.id) FROM cards WHERE cards.artist = 'John Avon' AND cards.cardKingdomFoilId IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "How many white bordered cards are powerful?",
    "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
    "SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN sets ON sets.code = cards.set_code WHERE cards.artist = 'UDON' AND cards.availability LIKE '%mtgo%' AND cards.hand = -1 AND cards.hand IS NOT NULL GROUP BY cards.hand;\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with a 1993 frame version and available on paper have a sensitive content warning?",
    "SELECT COUNT(*) FROM cards WHERE frameVersion = 1993 AND availability LIKE '%paper%' AND hasContentWarning = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
    "SELECT T1.`manaCost` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`layout` = 'normal' AND T1.`frameVersion` = '2003' AND T1.`borderColor` = 'black' AND T1.`availability` LIKE '%paper%' AND T1.`availability` LIKE '%mtgo%'\t----- bird -----\tcard_games"
  ],
  [
    "How much unconverted mana do all the cards created by Rob Alexander cost in total?",
    "SELECT SUM(CAST(T1.`manaCost` AS REAL)) FROM cards AS T1 WHERE T1.`artist` = 'Rob Alexander'\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards available in arena.",
    "SELECT DISTINCT T1.`subtypes`, T1.`supertypes` FROM cards AS T1 WHERE T1.`availability` = 'arena' AND T1.`subtypes` IS NOT NULL AND T1.`supertypes` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Lists the set code of all cards translated into Spanish.",
    "SELECT DISTINCT ST.`setCode` FROM set_translations AS ST INNER JOIN sets AS S ON ST.`setCode` = S.`code` WHERE ST.`language` = 'Spanish';\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3?",
    "SELECT ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' AND hand = '+3' ) / ( SELECT COUNT(*) FROM cards WHERE frameEffects = 'legendary' ) * 100\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of Story Spotlight cards that also have a text box? List them by their ID.",
    "SELECT cards.id FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode JOIN sets ON set_translations.setCode = sets.code JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.isStorylight = 1 AND cards.isTextless IS NOT NULL GROUP BY cards.id\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of cards in Spanish. List them by name.",
    "SELECT (COUNT(DISTINCT T1.`name`) * 100.0) / (SELECT COUNT(DISTINCT T1.`name`) FROM cards AS T1) AS percentage_spanish_cards FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN foreign_data AS T3 ON T1.`uuid` = T3.`uuid` WHERE T3.`language` = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the name of all the languages into which the set whose number of cards is 309 is translated.",
    "SELECT DISTINCT f.`language` FROM set_translations AS f INNER JOIN sets AS s ON f.`setCode` = s.`code` WHERE s.`baseSetSize` = 309\t----- bird -----\tcard_games"
  ],
  [
    "How many Brazilian Portuguese translated sets are inside the Commander block?",
    "SELECT COUNT(*) FROM set_translations WHERE language = 'Portuguese (Brazil)' AND setCode IN ( SELECT setCode FROM sets WHERE block = 'Commander' )\t----- bird -----\tcard_games"
  ],
  [
    "Lists by ID all Creature-type cards with legal status.",
    "SELECT DISTINCT cards.id, cards.asciiName, sets.name AS set_name FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid INNER JOIN sets ON cards.setCode = sets.code INNER JOIN set_translations ON sets.code = set_translations.setCode WHERE cards.types LIKE '%Creature%' AND cards.availability LIKE '%mtgo%' AND legalities.status = 'legal' AND set_translations.setCode = 'ZNR' GROUP BY cards.id, cards.asciiName, sets.name;\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards in German.",
    "SELECT DISTINCT c.`type` FROM cards AS c INNER JOIN set_translations AS st ON c.`uuid` = st.`uuid` INNER JOIN foreign_data AS fd ON st.`uuid` = fd.`uuid` INNER JOIN legalities AS l ON c.`uuid` = l.`uuid` WHERE fd.`language` = 'German' AND l.`uuid` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces.",
    "SELECT ( SELECT COUNT(*) FROM cards WHERE type = 'promo' AND availability LIKE '%pre-modern%' ) + ( SELECT COUNT(*) FROM foreign_data WHERE flavorText = 'This is a triggered mana ability' AND language = 'English' ) + ( SELECT COUNT(*) FROM cards WHERE side IS NULL ) AS total_cards\t----- bird -----\tcard_games"
  ],
  [
    "Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.",
    "SELECT cards.id FROM cards JOIN set_translations ON sets.code = set_translations.setCode JOIN sets ON set_translations.setCode = sets.code JOIN foreign_data ON cards.uuid = foreign_data.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = 'Erica Yang' AND cards.availability LIKE '%pauper%' AND cards.availability LIKE '%paper%' AND cards.availability IS NOT NULL AND sets.type = 'expansion' AND sets.isFoilOnly = 0 GROUP BY cards.id;\t----- bird -----\tcard_games"
  ],
  [
    "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?",
    "SELECT T1.`name` FROM cards AS T2 INNER JOIN foreign_data AS T1 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T2.`setCode` = T3.`setCode` WHERE T1.`flavorText` = 'Das perfekte Gegenmittel zu einer dichten Formation' AND T3.`language` = 'German' LIMIT 1;\t----- bird -----\tcard_games"
  ],
  [
    "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
    "SELECT T4.`name` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`setCode` INNER JOIN sets AS T3 ON T2.`setCode` = T3.`code` INNER JOIN foreign_data AS T4 ON T1.`uuid` = T4.`uuid` WHERE T1.`artist` = 'Matthew D. Wilson' AND T1.`borderColor` = 'black' AND T4.`language` = 'French' AND T3.`block` = 'Magic Player Rewards' GROUP BY T4.`name`\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with print rarity have ruling text printed on 10/01/2009?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`rarity` = 'rare' AND T2.`date` = '2009-01-10'\t----- bird -----\tcard_games"
  ],
  [
    "What language is the set of 180 cards that belongs to the Ravnica block translated into?",
    "SELECT s.id, s.baseSetSize, s.releaseDate, s.block, s.booster, s.code FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.baseSetSize = 180 AND st.language = 'Spanish' AND s.block = 'Ravnica' ORDER BY s.releaseDate ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards with format commander and legal status do not have a content warning?",
    "SELECT (COUNT(DISTINCT CASE WHEN c.hasContentWarning = 0 THEN c.id END) * 100.0 / COUNT(DISTINCT c.id)) AS percentage FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE c.format = 'commander' AND c.legalStatus = 'legal' GROUP BY c.format, c.legalStatus\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards without power are in French?",
    "SELECT ROUND( ( SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'French' AND (cards.power IS NULL OR cards.power = '*') ) * 100.0 / ( SELECT COUNT(*) FROM cards WHERE (cards.power IS NULL OR cards.power = '*') ), 2) AS percentage\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of Japanese translated sets are expansion sets?",
    "SELECT COUNT(*) FROM set_translations JOIN sets ON set_translations.`setCode` = sets.`code` WHERE language = 'Japanese' AND type = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "What kind of printing is on the card that Daren Bader created?",
    "SELECT T1.`availability` FROM cards AS T1 WHERE T1.`uuid` = ( SELECT T2.`uuid` FROM cards AS T2 WHERE T2.`artist` = 'Daren Bader' )\t----- bird -----\tcard_games"
  ],
  [
    "How many color cards with no borders have been ranked higher than 12000 on EDHRec?",
    "SELECT COUNT(*) FROM cards WHERE cards.`borderColor` = 'borderless' AND cards.`edhrecRank` > 12000\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are oversized, reprinted, and printed for promotions?",
    "SELECT COUNT(*) FROM cards WHERE isPromo = 1\t----- bird -----\tcard_games"
  ],
  [
    "Please list top three unknown power cards that have promotional types for arena league in alphabetical order.",
    "SELECT T1.`uuid` FROM cards AS T1 WHERE T1.`power` IS NULL OR T1.`power` = '*' AND T1.`promoTypes` = 'arenaleague' ORDER BY T1.`id` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card with the multiverse number 149934?",
    "SELECT DISTINCT T2.`language` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` INNER JOIN foreign_data ON T1.`uuid` = foreign_data.`uuid` INNER JOIN sets ON T2.`setCode` = sets.`code` WHERE T1.`multiverseid` = 149934 AND foreign_data.`multiverseid` = 149934;\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order.",
    "SELECT DISTINCT T1.id AS foil_id, T1.asciiName AS foil_name, T2.id AS card_id, T2.asciiName AS card_name FROM cards AS T1 INNER JOIN cards AS T2 ON T1.cardKingdomFoilId = T2.cardKingdomId WHERE T1.cardKingdomFoilId IS NOT NULL AND T2.cardKingdomId IS NOT NULL ORDER BY T1.id ASC LIMIT 3;\t----- bird -----\tcard_games"
  ],
  [
    "What proportion of cards do not have a text box with a normal layout?",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM cards)) * 100 FROM cards WHERE isTextless = 1 AND layout = 'normal'\t----- bird -----\tcard_games"
  ],
  [
    "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.",
    "SELECT DISTINCT T2.`name` FROM cards AS C INNER JOIN set_translations AS T2 ON C.`setCode` = T2.`setCode` WHERE C.`mtgoCode` IS NULL OR C.`mtgoCode` = '' ORDER BY T2.`setCode` ASC, T2.`name` ASC LIMIT 3;\t----- bird -----\tcard_games"
  ],
  [
    "What languages are available in the set known as Archenemy on the magic card market and having the code ARC?",
    "SELECT DISTINCT `language` FROM set_translations WHERE `setCode` = 'ARC'\t----- bird -----\tcard_games"
  ],
  [
    "What is the name of set number 5 and its translation?",
    "SELECT `translation` FROM set_translations JOIN sets ON set_translations.`setCode` = sets.`code` WHERE sets.`id` = 5 AND sets.`name` IS NOT NULL GROUP BY sets.`name` ORDER BY sets.`name` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and expansion type of set number 206?",
    "SELECT DISTINCT `block` FROM sets WHERE `id` = 206\t----- bird -----\tcard_games"
  ],
  [
    "Please list top two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block in alphabetical order.",
    "SELECT DISTINCT c.id, st.setCode FROM cards AS c INNER JOIN set_translations AS st ON c.uuid = st.setCode INNER JOIN sets AS s ON st.setCode = s.code INNER JOIN foreign_data AS fd ON c.uuid = fd.uuid WHERE s.block = 'Shadowmoor' AND st.language = 'Italian' AND fd.language = 'Italian' ORDER BY st.setCode ASC LIMIT 2;\t----- bird -----\tcard_games"
  ],
  [
    "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
    "SELECT DISTINCT sets.id FROM sets INNER JOIN set_translations ON sets.code = set_translations.setCode INNER JOIN foreign_data ON foreign_data.uuid = set_translations.setCode INNER JOIN cards ON cards.uuid = foreign_data.uuid WHERE sets.isFoilOnly = 1 AND foreign_data.language = 'Japanese' AND sets.isForeignOnly = 1;\t----- bird -----\tcard_games"
  ],
  [
    "Which Russian set of cards contains the most cards overall?",
    "DELETE FROM set_translations WHERE language IS NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games?",
    "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isOnlineOnly = 1)) AS percentage FROM cards INNER JOIN sets ON cards.`setCode` = (SELECT setCode FROM set_translations WHERE sets.`code` = set_translations.`setCode`) INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE foreign_data.`language` = 'Chinese Simplified' AND sets.`isOnlineOnly` = 1\t----- bird -----\tcard_games"
  ],
  [
    "How many sets are available just in Japanese and not in Magic: The Gathering Online?",
    "SELECT T1.`setCode` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`language` = 'Japanese' AND T2.`mtgoCode` IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many card border with black color ? List out the card id.",
    "SELECT cards.`id` FROM cards WHERE cards.`borderColor` = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have frame effect as extendedart? List out the id of those cards.",
    "SELECT id FROM cards WHERE frameEffects = 'extendedart'\t----- bird -----\tcard_games"
  ],
  [
    "Among black card borders, which card has full artwork?",
    "SELECT DISTINCT cards.id, cards.artist, cards.asciiName, cards.availability, cards.borderColor, cards.cardKingdomFoilId FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode JOIN sets ON cards.setCode = sets.code WHERE cards.borderColor = 'black' AND cards.isFullArt = 1 AND cards.availability IS NOT NULL GROUP BY cards.asciiName ORDER BY cards.asciiName ASC;\t----- bird -----\tcard_games"
  ],
  [
    "Point out the language of set id \"174\"?",
    "SELECT `language` FROM `set_translations` WHERE `setCode` = 174;\t----- bird -----\tcard_games"
  ],
  [
    "List out the set name of the set code \"ALL\".",
    "SELECT DISTINCT `translation` FROM set_translations JOIN sets ON set_translations.`setCode` = sets.`code` WHERE sets.`name` LIKE '%ALL%' AND sets.`name` IS NOT NULL AND sets.`name` != 'None';\t----- bird -----\tcard_games"
  ],
  [
    "Which foreign language used by \"A Pedra Fellwar\"?",
    "SELECT `language` FROM foreign_data JOIN cards ON foreign_data.`uuid` = cards.`uuid` WHERE cards.`name` = 'A Pedra Fellwar'\t----- bird -----\tcard_games"
  ],
  [
    "State the set code of the set with release date of 07/13/2007?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2007-07-13'\t----- bird -----\tcard_games"
  ],
  [
    "Mention the base set size and set code of the set that was in block named \"Masques\" and \"Mirage\".",
    "SELECT s.id AS set_id, s.baseSetSize, s.code, st.translation AS set_translation FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.block IN ('Masques', 'Mirage') AND st.language = 'English' ORDER BY s.baseSetSize DESC;\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion type of 'expansion'?",
    "SELECT DISTINCT set_translations.translation FROM sets JOIN set_translations ON sets.code = set_translations.setCode WHERE sets.block = 'expansion' AND sets.isFoilOnly = 0 LIMIT 10;\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has boros watermark? List out the type of this card.",
    "SELECT DISTINCT sets.`type` FROM cards INNER JOIN sets ON cards.`uuid` = sets.`uuid` INNER JOIN set_translations ON sets.`code` = set_translations.`setCode` WHERE cards.`asciiName` LIKE '%boros%'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.",
    "SELECT DISTINCT T3.`type` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T2.`setCode` = T3.`setCode` WHERE T1.`availability` LIKE '%colorpie%' AND T3.`language` = 'English' GROUP BY T3.`language` ORDER BY T3.`language` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What is percentage of the cards with a converted Mana Cost of 10 in set of Abyssal Horror?",
    "SELECT ROUND( ( SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`code` = ( SELECT `code` FROM sets WHERE `block` = 'Abyssal Horror' ) AND T1.`convertedManaCost` = 10 ) / ( SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`code` = ( SELECT `code` FROM sets WHERE `block` = 'Abyssal Horror' ) AND T1.`convertedManaCost` IS NOT NULL ) * 100, 2 ) AS percentage FROM cards WHERE `setCode` = ( SELECT `code` FROM sets WHERE `block` = 'Abyssal Horror' )\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion commander type?",
    "SELECT DISTINCT set_translations.`setCode` FROM set_translations INNER JOIN ( SELECT * FROM sets WHERE type LIKE '%expansion%' UNION SELECT * FROM sets WHERE type LIKE '%Commander%' ) AS combined_sets ON set_translations.`setCode` = combined_sets.`code`\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has abzan watermark? List out the type of this card.",
    "SELECT DISTINCT T2.`name`, T2.`flavorText` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T1.`setCode` = T3.`code` WHERE T1.`asciiName` LIKE '%abzan%' AND T2.`asciiName` IS NOT NULL AND T3.`type` = 'expansion' ORDER BY T2.`name` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card that has azorius watermark? List out the type of this card.",
    "SELECT DISTINCT ft.language AS language, st.translation AS card_type FROM cards c JOIN foreign_data ft ON c.uuid = ft.uuid JOIN set_translations st ON st.setCode = (SELECT code FROM sets WHERE id = c.set_id) WHERE c.asciiName LIKE '%azorius%' AND ft.language IS NOT NULL GROUP BY ft.language ORDER BY ft.language ASC;\t----- bird -----\tcard_games"
  ],
  [
    "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards available in paper have a positive starting maximum hand size?",
    "SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand LIKE '+%'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards that have a text box.",
    "SELECT DISTINCT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.isTextless = 0;\t----- bird -----\tcard_games"
  ],
  [
    "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?",
    "SELECT cards.manaCost FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode JOIN sets ON set_translations.setCode = sets.code WHERE cards.asciiName = 'Ancestor`s Chosen' AND cards.manaCost IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with a white border color, how many of them have unknown power?",
    "SELECT COUNT(*) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)\t----- bird -----\tcard_games"
  ],
  [
    "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.",
    "SELECT DISTINCT T1.`asciiName` FROM cards AS T1 JOIN cards AS T2 ON T1.id = T2.id AND T1.`side` IS NOT NULL AND T2.`side` IS NOT NULL WHERE T1.`isPromo` = 1 AND T1.`asciiName` <> T2.`asciiName` GROUP BY T1.`asciiName` ORDER BY T1.`asciiName` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?",
    "SELECT DISTINCT type FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.name = 'Molimo, Maro-Sorcerer' AND foreign_data.name = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".",
    "SELECT po.purchaseUrls FROM cards AS c INNER JOIN sets AS s ON c.setCode = s.code INNER JOIN set_translations AS st ON s.code = st.setCode INNER JOIN purchase_options AS po ON c.uuid = po.cardUuid WHERE s.type = 'bundle';\t----- bird -----\tcard_games"
  ],
  [
    "How many artists have designed a card with a black border color and is available in both \"arena\" and \"mtgo\" printing type?",
    "SELECT COUNT(DISTINCT T1.`artist`) FROM cards AS T1 WHERE T1.`borderColor` = 'black' AND T1.`availability` LIKE '%arena,mtgo%'\t----- bird -----\tcard_games"
  ],
  [
    "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?",
    "SELECT T1.`convertedManaCost` FROM cards AS T1 WHERE T1.`name` = 'Serra Angel' UNION SELECT T2.`convertedManaCost` FROM cards AS T2 WHERE T2.`name` = 'Shrine Keeper'\t----- bird -----\tcard_games"
  ],
  [
    "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
    "SELECT DISTINCT cards.artist FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.name = 'Battra, Dark Destroyer' AND cards.availability LIKE '%paper%' AND cards.borderColor = 'black';\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style.",
    "SELECT T1.`name` FROM cards AS T1 WHERE T1.`frameVersion` = '2003' ORDER BY T1.`convertedManaCost` DESC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?",
    "SELECT DISTINCT ft.translation FROM set_translations AS ft INNER JOIN sets AS s ON ft.setCode = s.code INNER JOIN foreign_data AS fd ON ft.uuid = fd.uuid WHERE ft.language = 'Italian' AND ft.translation LIKE '%Ancestor''s Chosen%' AND fd.language = 'Italian' AND fd.name = 'Ancestor''s Chosen';\t----- bird -----\tcard_games"
  ],
  [
    "How many translations are there for the set of cards with \"Angel of Mercy\" in it?",
    "SELECT COUNT(*) FROM set_translations AS T1 INNER JOIN ( SELECT DISTINCT T2.`uuid` FROM cards AS T2 WHERE T2.`asciiName` = 'Angel of Mercy' ) AS T3 ON T1.`setCode` = ( SELECT T4.`code` FROM sets AS T4 WHERE T4.`name` = ( SELECT T5.`name` FROM cards AS T5 WHERE T5.`asciiName` = 'Angel of Mercy' ) )\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards in the set \"Hauptset Zehnte Edition\".",
    "SELECT DISTINCT T2.`translation` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T2.`setCode` = T3.`code` WHERE T3.`name` = 'Hauptset Zehnte Edition';\t----- bird -----\tcard_games"
  ],
  [
    "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?",
    "SELECT ft.name AS foreign_data_name, st.name AS set_translations_name FROM set_translations st JOIN sets s ON st.setCode = s.code JOIN foreign_data ft ON st.language = ft.language WHERE s.name = 'Ancestor''s Chosen' AND ft.language = 'Korean'\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex?",
    "SELECT COUNT(*) FROM ( SELECT T1.`id` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`setCode` WHERE T2.`translation` = 'Hauptset Zehnte Edition' AND T1.`artist` = 'Adam Rex' ) AS T3\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the base set of \"Hauptset Zehnte Edition\"?",
    "SELECT s.baseSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode JOIN cards c ON c.uuid = st.uuid WHERE st.translation = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games"
  ],
  [
    "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?",
    "SELECT t.`translation` FROM set_translations AS t INNER JOIN sets AS s ON t.`setCode` = s.`code` WHERE s.`name` = 'Eighth Edition' AND t.`language` = 'Simplified Chinese';\t----- bird -----\tcard_games"
  ],
  [
    "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?",
    "SELECT T1.`mtgoCode` FROM cards AS T1 JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` JOIN sets AS T3 ON T1.`mtgoCode` = T3.`mtgoCode` WHERE T1.`asciiName` = 'Angel of Mercy' AND T2.`name` = 'Angel of Mercy' AND T3.`keyruneCode` = 'PMEI' GROUP BY T1.`mtgoCode`\t----- bird -----\tcard_games"
  ],
  [
    "When was the set of cards with \"Ancestor's Chosen\" released?",
    "SELECT MAX(sets.releaseDate) FROM sets JOIN cards ON sets.code = cards.uuid WHERE cards.name = 'Ancestor''s Chosen' AND cards.releaseDate IS NOT NULL GROUP BY sets.releaseDate;\t----- bird -----\tcard_games"
  ],
  [
    "What is the expansion type of the set \"Hauptset Zehnte Edition\"?",
    "SELECT `type` FROM sets WHERE `code` = ( SELECT `setCode` FROM set_translations WHERE `translation` = 'Hauptset Zehnte Edition' )\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets in the block \"Ice Age\", how many of them have an Italian translation?",
    "SELECT COUNT(DISTINCT T1.`setCode`) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T1.`language` = 'Italian' AND T2.`block` = 'Ice Age'\t----- bird -----\tcard_games"
  ],
  [
    "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`setCode` WHERE T2.`translation` = 'Adarkar Valkyrie' AND T1.`isForeignOnly` = 1;\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT setCode FROM set_translations WHERE language = 'Italian' AND translation IS NOT NULL ) AS T1 INNER JOIN sets ON T1.setCode = sets.code WHERE baseSetSize < 10\t----- bird -----\tcard_games"
  ],
  [
    "How many cards in the set Coldsnap have a black border color?",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`block` = 'Coldsnap' AND T1.`borderColor` = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the name of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT DISTINCT T3.`translation` AS \"Card Name\" FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`uuid` = T2.`code` INNER JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` WHERE T2.`block` = 'Coldsnap' ORDER BY T3.`translation` ASC;\t----- bird -----\tcard_games"
  ],
  [
    "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
    "SELECT DISTINCT T1.`artist` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`block` = 'Coldsnap' AND T1.`artist` IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND T1.`artist` IS NOT NULL GROUP BY T1.`artist`;\t----- bird -----\tcard_games"
  ],
  [
    "What is card number 4 in the set Coldsnap?",
    "SELECT T1.`id` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Coldsnap' AND T1.`id` = 4;\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
    "SELECT COUNT(*) FROM ( SELECT T1.`id` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`block` = 'Coldsnap' AND T1.`convertedManaCost` > 5 AND (T1.`power` = '*' OR T1.`power` IS NULL) ) AS T3\t----- bird -----\tcard_games"
  ],
  [
    "What is the Italian flavor text of the card \"Ancestor's Chosen\"?",
    "SELECT ft.`text` FROM set_translations AS ft INNER JOIN foreign_data AS fd ON ft.`setCode` = fd.`uuid` WHERE ft.`language` = 'Italian' AND fd.`name` = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text.",
    "SELECT DISTINCT T1.`language` FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`asciiName` = 'Ancestor''s Chosen' AND T1.`flavorText` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What's the German type of the card \"Ancestor's Chosen\"?",
    "SELECT DISTINCT T4.`type` FROM set_translations AS T1 INNER JOIN cards AS T2 ON T1.`setCode` = T2.`name` INNER JOIN foreign_data AS T3 ON T2.`uuid` = T3.`uuid` INNER JOIN sets AS T4 ON T1.`setCode` = T4.`code` INNER JOIN legalities AS T5 ON T2.`uuid` = T5.`uuid` WHERE T1.`language` = 'German' AND T3.`name` = 'Ancestor''s Chosen' AND T2.`availability` IS NOT NULL AND T5.`uuid` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian text ruling of all the cards in the set Coldsnap.",
    "SELECT T1.`text` FROM rulings AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T2.`setCode` = T3.`code` INNER JOIN foreign_data AS T4 ON T1.`uuid` = T4.`uuid` WHERE T3.`name` = 'Coldsnap' AND T2.`language` = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT DISTINCT FD.`name` FROM cards AS C INNER JOIN set_translations AS ST ON C.`uuid` = ST.`uuid` INNER JOIN sets AS S ON ST.`setCode` = S.`code` INNER JOIN foreign_data AS FD ON C.`uuid` = FD.`uuid` WHERE S.`name` = 'Coldsnap' AND ST.`language` = 'Italian' ORDER BY C.`cmc` DESC LIMIT 1;\t----- bird -----\tcard_games"
  ],
  [
    "When was the ruling for the card 'Reminisce' created?",
    "SELECT MAX(r.date) AS ruling_date FROM rulings AS r JOIN cards AS c ON r.uuid = c.uuid JOIN foreign_data AS f ON c.uuid = f.uuid WHERE c.asciiName = 'Reminisce' AND f.name = 'Reminisce'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
    "SELECT (SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' GROUP BY T2.name;\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of incredibly powerful cards in the set Coldsnap?",
    "SELECT ROUND( ( SELECT COUNT(*) FROM cards AS T1 WHERE T1.`cardKingdomFoilId` IS NOT NULL AND T1.`uuid` IN ( SELECT `uuid` FROM set_translations WHERE `setCode` = 'Coldsnap' ) ) / ( SELECT COUNT(*) FROM cards AS T2 WHERE T2.`uuid` IN ( SELECT `uuid` FROM set_translations WHERE `setCode` = 'Coldsnap' ) ) * 100, 2 ) AS percentage_of_foil_cards FROM cards WHERE `uuid` IN ( SELECT `uuid` FROM set_translations WHERE `setCode` = 'Coldsnap' )\t----- bird -----\tcard_games"
  ],
  [
    "What's the code for the set which was released on 2017/7/14?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2017-07-14'\t----- bird -----\tcard_games"
  ],
  [
    "List the keyrune code for the set whose code is 'PKHC'.",
    "SELECT sets.code, sets.name FROM sets WHERE sets.code = 'PKHC';\t----- bird -----\tcard_games"
  ],
  [
    "For the set which had 'SS2' as the code, what is its magic card market id?",
    "SELECT DISTINCT T2.mcmId FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.code = 'SS2';\t----- bird -----\tcard_games"
  ],
  [
    "What's the magic card market name for the set which was released on 2017/6/9?",
    "SELECT ft.`name` AS mcmName FROM cards c JOIN foreign_data ft ON c.`uuid` = ft.`uuid` JOIN sets s ON c.`mcmId` = s.`mcmId` WHERE s.`releaseDate` = '2017-06-09'\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"From the Vault: Lore\", what is its expansion type?",
    "SELECT st.translation AS expansion_type FROM set_translations st JOIN sets s ON st.setCode = s.code WHERE s.name LIKE '%From the Vault: Lore%'\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"Commander 2014 Oversized\" , give its parent code.",
    "SELECT `parentCode` FROM sets WHERE `name` = 'Commander 2014 Oversized'\t----- bird -----\tcard_games"
  ],
  [
    "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
    "SELECT T1.`uuid`, T1.`hasContentWarning` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`artist` = 'Jim Pavelec'\t----- bird -----\tcard_games"
  ],
  [
    "What was the release date for the set which card \"Evacuation\" in it?",
    "SELECT `releaseDate` FROM sets WHERE `code` = ( SELECT `setCode` FROM cards WHERE name = 'Evacuation' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the number of cards are there in the set of \"Rinascita di Alara\"?",
    "SELECT s.baseSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE st.translation = 'Rinascita di Alara'\t----- bird -----\tcard_games"
  ],
  [
    "List the expansion type of the set \"Huitième édition\".",
    "SELECT DISTINCT cards.type FROM cards JOIN set_translations ON cards.uuid = set_translations.uuid WHERE set_translations.translation = 'Huitième édition'\t----- bird -----\tcard_games"
  ],
  [
    "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
    "SELECT ft.translation FROM set_translations AS ft JOIN sets ON ft.setCode = sets.code JOIN cards ON sets.id = cards.id JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE ft.language = 'French' AND ft.translation IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many translations of the name of the set \"Salvat 2011\"?",
    "SELECT COUNT(*) FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM sets WHERE `name` = 'Salvat 2011' )\t----- bird -----\tcard_games"
  ],
  [
    "Tell the Japanese name of the set which card \"Fellwar Stone\" is in it.",
    "SELECT * FROM set_translations WHERE language = 'Japanese' AND setCode IN ( SELECT code FROM sets WHERE name = 'Zendikar Rising' )\t----- bird -----\tcard_games"
  ],
  [
    "Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`uuid` = T2.`code` INNER JOIN set_translations AS T3 ON T2.`code` = T3.`setCode` WHERE T3.`setName` = 'Journey into Nyx Hero''s Path' ORDER BY T1.`convertedManaCost` DESC LIMIT 1;\t----- bird -----\tcard_games"
  ],
  [
    "What is the release date for the set \"Ola de frío\"?",
    "SELECT sets.`releaseDate` FROM sets WHERE sets.`code` = ( SELECT setCode FROM set_translations WHERE translation = 'Ola de frío' )\t----- bird -----\tcard_games"
  ],
  [
    "What was the expansion type for the set which card \"Samite Pilgrim\" in it?",
    "SELECT T2.`translation` FROM cards AS T3 INNER JOIN sets AS T1 ON T3.`code` = T1.`code` INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T3.`asciiName` = 'Samite Pilgrim' AND T1.`type` = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.",
    "SELECT COUNT(*) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations ON T2.`code` = set_translations.`setCode` WHERE set_translations.`setCode` = ( SELECT setCode FROM sets WHERE sets.`name` = 'World Championship Decks 2004' ) AND T1.`cmc` = 3\t----- bird -----\tcard_games"
  ],
  [
    "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
    "SELECT T2.`translation` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`block` = 'Core Set' AND T2.`name` = 'Mirrodin' AND T1.`language` = 'Chinese Simplified';\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
    "SELECT ( SELECT COUNT(*) FROM cards WHERE cards.`availability` LIKE '%non-foil%' AND cards.`uuid` IN ( SELECT cards.`uuid` FROM set_translations INNER JOIN sets ON set_translations.`setCode` = sets.`code` WHERE set_translations.`language` = 'Japanese' ) ) / ( SELECT COUNT(*) FROM set_translations INNER JOIN sets ON set_translations.`setCode` = sets.`code` WHERE set_translations.`language` = 'Japanese' ) * 100\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
    "SELECT (CAST(COUNT(DISTINCT s.`code`) AS REAL) / CAST(COUNT(DISTINCT s.`code`) AS REAL)) * 100 FROM sets AS s INNER JOIN set_translations AS st ON s.`code` = st.`setCode` WHERE st.`language` = 'Portuguese (Brazil)' AND s.`isOnlineOnly` = 1\t----- bird -----\tcard_games"
  ],
  [
    "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
    "SELECT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1 GROUP BY availability\t----- bird -----\tcard_games"
  ],
  [
    "What is the unique id of the set that has the highest number of cards?",
    "SELECT `id` FROM sets ORDER BY `baseSetSize` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?",
    "SELECT T1.`artist` FROM cards AS T1 JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`side` IS NULL ORDER BY T1.`convertedManaCost` DESC\t----- bird -----\tcard_games"
  ],
  [
    "What is the most common visual frame effects among the incredibly powerful foils?",
    "SELECT frameEffects FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomFoilId IS NOT NULL AND frameEffects = ( SELECT MAX(frameEffects) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomFoilId IS NOT NULL )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with unknown power that can't be found in foil is in duel deck A?",
    "SELECT COUNT(*) FROM cards AS T1 WHERE (T1.`power` IS NULL OR T1.`power` = '*') AND T1.`hasFoil` = 0 AND T1.`duelDeck` = 'a' AND NOT EXISTS ( SELECT 1 FROM cards AS T2 WHERE T1.`id` = T2.`id` AND T2.`hasFoil` = 1 )\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
    "SELECT sets.`code` FROM sets WHERE sets.`type` = 'commander' ORDER BY sets.`totalSetSize` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "In duels, what are the top 10 cards with the highest uncoverted mana cost?",
    "SELECT T1.uuid, MAX(T1.manaCost) AS highest_mana_cost FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid JOIN set_translations AS T3 ON T1.uuid = T3.setCode JOIN sets AS T4 ON T3.setCode = T4.code WHERE T2.format = 'duel' AND T4.type = 'expansion' GROUP BY T1.uuid ORDER BY highest_mana_cost DESC LIMIT 10;\t----- bird -----\tcard_games"
  ],
  [
    "When was the oldest mythic card released and what are its legal play formats?",
    "SELECT DISTINCT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid INNER JOIN sets AS T4 ON T4.code = ( SELECT T5.code FROM sets AS T5 INNER JOIN rulings AS T6 ON T5.code = T6.uuid WHERE T6.text LIKE '%mythic%' ORDER BY T5.releaseDate ASC LIMIT 1 ) WHERE T3.text LIKE '%mythic%' AND T1.rarity = 'mythic' AND T1.status = 'legal' AND T1.availability LIKE '%paper%'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards did Volkan BaÇµa illustrated whose foreign language is in French?",
    "SELECT COUNT(*) FROM cards INNER JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE artist = 'Volkan Baga' AND language = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many rare enchantment Abundance cards are there whose play format status are all legal?",
    "SELECT COUNT(*) FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.rarity = 'rare' AND cards.types = 'Enchantment' AND cards.name = 'Abundance' AND legalities.status = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card.",
    "SELECT T1.name AS play_format, T3.name AS card_name FROM ( SELECT DISTINCT T1.name FROM sets AS T1 JOIN legalities AS T4 ON T1.uuid = T4.uuid WHERE T4.status = 'banned' GROUP BY T1.name ) AS T1 JOIN cards AS T3 ON T3.uuid = ( SELECT T4.uuid FROM legalities AS T4 WHERE T4.status = 'banned' GROUP BY T4.uuid ORDER BY COUNT(*) DESC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the \"Battlebond\" set?",
    "SELECT `language` FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM sets WHERE `name` = 'Battlebond' )\t----- bird -----\tcard_games"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
    "SELECT DISTINCT cards.status FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN sets ON cards.code = sets.code INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.artist = 'D. Alexander Gregory' AND cards.format = 'legacy' AND cards.hasContentWarning = 1 AND cards.frameVersion = '1997' AND cards.status IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format.",
    "SELECT DISTINCT c.`name`, st.`translation` FROM cards AS c INNER JOIN legalities AS l ON c.`uuid` = l.`uuid` INNER JOIN legalities AS l2 ON l.`formatUuid` = l2.`uuid` INNER JOIN sets AS s ON c.`code` = s.`code` INNER JOIN set_translations AS st ON s.`code` = st.`setCode` WHERE c.`uuid` IN ( SELECT cardUuid FROM edhrecRankings WHERE edhrecRank = 1 ) AND l.`status` = 'banned' AND l2.`name` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "List the artists who illustrated cards with black borders which are available only in arena.",
    "SELECT DISTINCT T1.`artist` FROM cards AS T1 WHERE T1.`borderColor` = 'black' AND T1.`availability` = 'arena'\t----- bird -----\tcard_games"
  ],
  [
    "Find the uuid of cards in which the old school format is restricted or banned.",
    "SELECT DISTINCT cards.`uuid`, cards.`name` FROM cards INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` WHERE legalities.`status` IN ('banned', 'restricted') AND legalities.`format` = 'oldschool';\t----- bird -----\tcard_games"
  ],
  [
    "Among the card designed by Matthew D. Wilson, how many are available only in the paper?",
    "SELECT COUNT(*) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\t----- bird -----\tcard_games"
  ],
  [
    "What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates.",
    "SELECT T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T1.artist = 'Kev Walker' ORDER BY T3.date DESC;\t----- bird -----\tcard_games"
  ],
  [
    "List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.",
    "SELECT DISTINCT format FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`set_code` = T2.`code` INNER JOIN legalities AS T3 ON T1.`uuid` = T3.`uuid` WHERE T2.`name` = 'Hour of Devastation' AND T3.`status` = 'legal';\t----- bird -----\tcard_games"
  ],
  [
    "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
    "SELECT T1.`name` FROM ( SELECT DISTINCT T1.`name` FROM sets AS T1 LEFT JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`language` IS NULL OR T2.`language` <> 'Japanese' ) AS T1 EXCEPT SELECT DISTINCT T1.`name` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`language` = 'Korean'\t----- bird -----\tcard_games"
  ],
  [
    "List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any.",
    "SELECT DISTINCT c.frameVersion, c.asciiName, c.availability, c.borderColor, c.cardKingdomFoilId FROM cards AS c INNER JOIN legalities AS l ON c.uuid = l.uuid WHERE c.artist = 'Allen Williams' AND l.status = 'banned';\t----- bird -----\tcard_games"
  ],
  [
    "Which user has a higher reputation, Harlan or Jarrod Dixon?",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Reputation` > ( SELECT T2.`Reputation` FROM users AS T2 WHERE T2.`DisplayName` = 'Jarrod Dixon' ) AND T1.`DisplayName` = 'Harlan'\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users whose accounts were created in the year 2014.",
    "SELECT DISTINCT users.`DisplayName` FROM users WHERE strftime('%Y', users.`CreationDate`) = '2014';\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users last accessed the website after 2014/9/1?",
    "SELECT COUNT(*) FROM users WHERE LastAccessDate > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has the most number of views?",
    "SELECT users.`DisplayName` FROM users WHERE users.`Id` = ( SELECT users.`Id` FROM users ORDER BY users.`Views` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
    "SELECT T1.`Id`, T1.`DownVotes` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` GROUP BY T1.`Id` HAVING SUM(T2.`BountyAmount`) > 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users with more than 10 views created their account after the year 2013?",
    "SELECT COUNT(*) FROM users WHERE Views > 10 AND CreationDate > '2013-12-31'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts does the user csgillespie own?",
    "SELECT COUNT(*) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users WHERE DisplayName = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the titles of the posts owned by the user csgillespie?",
    "SELECT DISTINCT P.`Title` FROM posts AS P INNER JOIN users AS U ON P.`OwnerUserId` = U.`Id` WHERE U.`DisplayName` = 'csgillespie' AND U.`DisplayName` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the owner of the post \"Eliciting priors from experts\"?",
    "SELECT T2.`DisplayName` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T1.`Title` = 'Eliciting priors from experts';\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post that is owned by csgillespie and has the highest popularity?",
    "SELECT T1.Title FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN ( SELECT PostId, MAX(ViewCount) AS MaxViewCount FROM votes GROUP BY PostId ) AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'csgillespie' AND T3.MaxViewCount = ( SELECT MAX(V.ViewCount) FROM votes AS V WHERE V.PostId = T1.Id )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who is the owner of the most valuable post?",
    "SELECT users.DisplayName FROM posts INNER JOIN ( SELECT OwnerUserId, MAX(FavoriteCount) AS MaxFavoriteCount FROM posts GROUP BY OwnerUserId ) AS MaxFavoritePosts ON posts.OwnerUserId = MaxFavoritePosts.OwnerUserId INNER JOIN users ON posts.OwnerUserId = users.Id ORDER BY MaxFavoritePosts.MaxFavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total number of comments of all the posts owned by csgillespie?",
    "SELECT SUM(c.CommentCount) FROM comments AS c INNER JOIN posts AS p ON c.PostId = p.Id INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'csgillespie' GROUP BY u.DisplayName;\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post that got the most number of answers owned by csgillespie, how many answers did it get?",
    "SELECT T1.`AnswerCount` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie' ORDER BY T1.`AnswerCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?",
    "SELECT T2.`DisplayName` FROM users AS T2 WHERE T2.`Id` = ( SELECT T1.`LastEditorUserId` FROM posts AS T1 WHERE T1.`Title` = 'Examples for teaching: Correlation does not mean causation' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by csgillespie, how many of them are root posts?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT p.`Id` FROM posts AS p INNER JOIN users AS u ON p.`OwnerUserId` = u.`Id` WHERE u.`DisplayName` = 'csgillespie' AND p.`ParentId` IS NULL ) AS subquery;\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users who owns a post that is well-finished.",
    "SELECT DISTINCT T2.`DisplayName` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T1.`ClosedDate` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by an elder user, how many of them have a score of over 19?",
    "SELECT COUNT(*) FROM posts INNER JOIN users ON posts.`OwnerUserId` = users.`Id` WHERE users.`Age` > 65 AND posts.`Score` >= 20\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the location of the owner of the post \"Eliciting priors from experts\"?",
    "SELECT DISTINCT T1.`Location` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` INNER JOIN postHistory AS T3 ON T2.`Id` = T3.`PostId` WHERE T2.`Title` = 'Eliciting priors from experts' AND T1.`Id` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the tag \"bayesian\" excerpted from? Please give the body of the post.",
    "SELECT T2.`Body` FROM posts AS T2 WHERE T2.`Id` = ( SELECT T3.`Id` FROM tags AS T4 INNER JOIN posts AS T3 ON T4.`ExcerptPostId` = T3.`Id` WHERE T4.`TagName` = 'bayesian' )\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the most popular tag excerpted from? Please give the body of the post.",
    "SELECT T1.`Text` FROM posts AS T1 INNER JOIN ( SELECT T2.`ExcerptPostId`, COUNT(*) AS tag_count FROM tags AS T2 GROUP BY T2.`ExcerptPostId` ORDER BY tag_count DESC LIMIT 1 ) AS T3 ON T1.`Id` = T3.`ExcerptPostId`\t----- bird -----\tcodebase_community"
  ],
  [
    "How many badges has the user csgillespie obtained?",
    "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the names of the badges obtained by csgillespie.",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie' AND strftime('%Y', T1.`Date`) = '2011' ) AS T3;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has obtained the most number of badges?",
    "SELECT T2.`DisplayName` FROM ( SELECT T1.`UserId`, COUNT(T1.`Id`) AS `BadgeCount` FROM badges AS T1 GROUP BY T1.`UserId` ) AS T3 INNER JOIN users AS T2 ON T3.`UserId` = T2.`Id` ORDER BY T3.`BadgeCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of the posts owned by the user csgillespie?",
    "SELECT AVG(T1.`Score`) FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of badges obtained by a user with over 200 views?",
    "SELECT AVG(Count) FROM ( SELECT COUNT(DISTINCT T1.`Id`) AS Count FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Views` > 200 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with a score of over 20, what is the percentage of them being owned by an elder user?",
    "SELECT (CAST(Sub2.`count` AS REAL) / Sub1.`count`) * 100 FROM (SELECT COUNT(*) AS `count` FROM posts WHERE Score > 20 ) AS Sub1, (SELECT COUNT(*) AS `count` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`Age` > 65 ) AS Sub2\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes did the user No.58 take on 2010/7/19?",
    "SELECT COUNT(*) FROM votes WHERE UserId = 58\t----- bird -----\tcodebase_community"
  ],
  [
    "Indicate the creation date of the maximum number of votes.",
    "WITH top_voted_posts AS ( SELECT PostId FROM votes GROUP BY PostId ORDER BY COUNT(*) DESC LIMIT 1 ) SELECT posts.CreationDate FROM posts JOIN top_voted_posts ON posts.Id = top_voted_posts.PostId;\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of \"Revival\" badges.",
    "SELECT COUNT(*) FROM badges WHERE Name = 'Revival'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title for the post which got the highest score comment?",
    "SELECT posts.Title FROM posts INNER JOIN ( SELECT PostId, MAX(Score) AS MaxScore FROM comments GROUP BY PostId ) AS MaxComments ON posts.Id = MaxComments.PostId WHERE posts.AcceptedAnswerId IS NOT NULL ORDER BY MaxComments.MaxScore DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post which got 1910 view counts, how many comments does it get?",
    "SELECT COUNT(*) FROM comments AS T2 WHERE T2.`PostId` = ( SELECT T1.`Id` FROM posts AS T1 WHERE T1.`ViewCount` = 1910 )\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get?",
    "SELECT T1.PostId, MAX(T1.FavoriteCount) AS FavoriteCount FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Id = 3025 AND T1.CreationDate = '2014-04-23 20:29:39.0' GROUP BY T1.PostId;\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the only one comment text of the post with parent id 107829.",
    "SELECT T2.`Text` FROM comments AS T2 INNER JOIN posts AS T1 ON T2.`PostId` = T1.`Id` WHERE T1.`ParentId` = 107829 AND T2.`UserId` IS NOT NULL GROUP BY T2.`Text` LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "For the owner user of post No. 65041, what is his/her reputation points?",
    "SELECT `Reputation` FROM users WHERE `Id` = ( SELECT `OwnerUserId` FROM posts WHERE `Id` = 65041 )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Tiago Pasqualini' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the display name of the user who made the vote No.6347.",
    "SELECT users.`DisplayName` FROM users INNER JOIN votes ON users.`Id` = votes.`UserId` WHERE votes.`Id` = 6347;\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of votes for the post about data visualization.",
    "SELECT COUNT(T3.`Id`) FROM votes AS T3 INNER JOIN ( SELECT T1.`Id` FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T2.`TagName` LIKE '%data visualization%' ) AS T4 ON T3.`PostId` = T4.`Id`\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user whose display name is \"DatEpicCoderGuyWhoPrograms\", what is his/her badge's name?",
    "SELECT badges.`Name` FROM badges INNER JOIN users ON badges.`UserId` = users.`Id` WHERE users.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user No.24, how many times is the number of his/her posts compared to his/her votes?",
    "SELECT (SELECT COUNT(*) FROM posts WHERE OwnerUserId = 24) / (SELECT COUNT(*) FROM votes WHERE UserId = 24)\t----- bird -----\tcodebase_community"
  ],
  [
    "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
    "SELECT MAX(T1.`ViewCount`) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`Comment` IS NOT NULL AND T1.`Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' GROUP BY T1.`Id`\t----- bird -----\tcodebase_community"
  ],
  [
    "Write the contents of comments with a score of 17.",
    "SELECT Text FROM comments WHERE Score = 17\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user has the website URL listed at 'http://stackoverflow.com'",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`WebsiteUrl` = 'http://stackoverflow.com'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the badge name that user 'SilentGhost' obtained?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'SilentGhost'\t----- bird -----\tcodebase_community"
  ],
  [
    "Name the user that commented 'thank you user93!'",
    "SELECT T2.`DisplayName` FROM users AS T2 INNER JOIN ( SELECT T1.`UserId` FROM comments AS T1 WHERE T1.`Text` LIKE '%thank you user93%' ) AS T3 ON T2.`Id` = T3.`UserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made by user 'A Lion.'",
    "SELECT T1.`Id`, T1.`Text` FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'A Lion'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user?",
    "SELECT u.Reputation FROM users AS u JOIN posts AS p ON u.Id = p.OwnerUserId JOIN ( SELECT DISTINCT ph.UserId FROM postHistory AS ph JOIN postLinks AS pl ON ph.PostId = pl.PostId JOIN posts AS p2 ON pl.RelatedPostId = p2.Id WHERE p2.Title = 'Understanding what Dassault iSight is doing?' ) AS subquery ON u.Id = subquery.UserId WHERE p.Title = 'Understanding what Dassault iSight is doing?';\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made on the post titled 'How does gentle boosting differ from AdaBoost?'",
    "SELECT DISTINCT P.`Id`, P.`CreationDate`, P.`Title`, P.`OwnerUserId`, U.`DisplayName` FROM posts AS P INNER JOIN comments AS C ON P.`Id` = C.`PostId` INNER JOIN users AS U ON P.`OwnerUserId` = U.`Id` WHERE P.`Title` = 'How does gentle boosting differ from AdaBoost?' AND C.`CreationDate` IS NOT NULL ORDER BY P.`CreationDate` ASC;\t----- bird -----\tcodebase_community"
  ],
  [
    "Name 10 users with the badge name 'Necromancer.'",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Name` = 'Necromancer' ORDER BY T1.`DisplayName` ASC LIMIT 10\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "List the title of posts which were edited by Vebjorn Ljosa.",
    "SELECT T1.`Title` FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`UserId` = ( SELECT Id FROM users WHERE DisplayName = 'Vebjorn Ljosa' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total score of the posts edited by Yevgeny and include the user's website URL.",
    "SELECT T3.`WebsiteUrl`, SUM(T1.`Score`) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` INNER JOIN users AS T3 ON T2.`UserId` = T3.`Id` WHERE T3.`DisplayName` = 'Yevgeny' GROUP BY T3.`WebsiteUrl`\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all the comments left by users who edited the post titled 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "SELECT T2.`Id`, T2.`Text` FROM comments AS T2 INNER JOIN postHistory AS T3 ON T2.`PostId` = T3.`PostId` WHERE T3.`UserId` IN ( SELECT T4.`UserId` FROM postHistory AS T4 WHERE T4.`PostId` = ( SELECT T1.`Id` FROM posts AS T1 WHERE T1.`Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "How much is the total bounty amount of the post titled about 'data'",
    "SELECT COALESCE(SUM(v.BountyAmount), 0) AS TotalBountyAmount FROM posts p INNER JOIN tags t ON p.Id = t.ExcerptPostId LEFT JOIN votes v ON p.Id = v.PostId WHERE t.TagName LIKE '%data%' GROUP BY p.Id;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user added a bounty amount of 50 to the post title mentioning variance?",
    "SELECT DISTINCT u.`DisplayName` FROM votes AS v INNER JOIN posts AS p ON v.`PostId` = p.`Id` INNER JOIN users AS u ON v.`UserId` = u.`Id` INNER JOIN postHistory AS ph ON p.`Id` = ph.`PostId` INNER JOIN comments AS c ON p.`Id` = c.`PostId` INNER JOIN tags AS t ON p.`Id` = t.`ExcerptPostId` WHERE v.`BountyAmount` = 50 AND t.`TagName` = 'variance' AND c.`UserDisplayName` IS NOT NULL GROUP BY u.`DisplayName`;\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the average view count of posts tagged as 'humor' and write the title and the comments of the posts alongside their scores if applicable.",
    "SELECT P.Title, P.Body, P.Score, AVG(P.ViewCount) AS AverageViewCount, C.Text AS Comments FROM posts AS P INNER JOIN tags AS T ON P.Id = T.ExcerptPostId INNER JOIN comments AS C ON P.Id = C.PostId WHERE T.TagName = 'humor' GROUP BY P.Id ORDER BY P.Score DESC;\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the total number of comments posted by user ID 13.",
    "SELECT COUNT(*) FROM comments WHERE UserId = 13;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the highest reputation?",
    "SELECT `Id` FROM users ORDER BY `Reputation` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the lowest view?",
    "SELECT T1.`Id` FROM users AS T1 ORDER BY T1.`Views` ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with supporter badge during year 2011?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Supporter' AND strftime('%Y', T1.`Date`) = '2011'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with more than 5 badges?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`UserId` FROM badges AS T1 GROUP BY T1.`UserId` HAVING COUNT(T1.`Id`) > 5 ) AS T2\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from New York have a teacher and supporter badge?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`Id` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN badges AS T3 ON T1.`Id` = T3.`UserId` INNER JOIN users AS T4 ON T3.`UserId` = T4.`Id` WHERE T4.`Location` = 'New York' AND T2.`Name` = 'Teacher' AND T3.`Name` = 'Supporter' ) AS T5\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user created post ID 1 and what is the reputation of this user?",
    "SELECT T2.`Reputation` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T1.`Id` = 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user have only one post history per post and having at least 1000 views?",
    "SELECT DISTINCT T1.Id, T1.DisplayName FROM users AS T1 INNER JOIN ( SELECT T2.OwnerUserId FROM posts AS T2 WHERE T2.ViewCount >= 1000 GROUP BY T2.OwnerUserId HAVING COUNT(T2.Id) = 1 ) AS T3 ON T1.Id = T3.OwnerUserId INNER JOIN postHistory AS T4 ON T1.Id = T4.UserId GROUP BY T1.Id, T1.DisplayName;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have posted the most comments. List out the user's badge?",
    "SELECT T2.`Id` FROM badges AS T2 INNER JOIN ( SELECT T1.`UserId` FROM comments AS T1 GROUP BY T1.`UserId` ORDER BY COUNT(T1.`Id`) DESC LIMIT 1 ) AS T3 ON T2.`UserId` = T3.`UserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from India have the teacher badges?",
    "SELECT COUNT(*) FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN posts AS T3 ON T1.`Id` = T3.`OwnerUserId` WHERE T1.`Location` = 'India' AND T2.`Name` = 'Teacher'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage difference of student badges given during 2010 and 2011?",
    "SELECT ( ( SELECT COUNT(*) FROM badges AS T1 WHERE T1.`Name` = 'Student' AND YEAR(T1.`Date`) = 2010 ) / ( SELECT COUNT(*) FROM badges AS T1 WHERE T1.`Name` = 'Student' ) * 100 ) - ( ( SELECT COUNT(*) FROM badges AS T2 WHERE T2.`Name` = 'Student' AND YEAR(T2.`Date`) = 2011 ) / ( SELECT COUNT(*) FROM badges AS T2 WHERE T2.`Name` = 'Student' ) * 100 ) AS percentage_difference;\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?",
    "SELECT pht.`PostHistoryTypeId`, COUNT(DISTINCT c.`UserId`) FROM postHistory AS pht INNER JOIN posts AS p ON pht.`PostId` = p.`Id` LEFT JOIN comments AS c ON p.`Id` = c.`PostId` WHERE p.`Id` = 3720 GROUP BY pht.`PostHistoryTypeId`\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post that are related to post ID 61217 and what is the popularity of this post?",
    "SELECT P.Id, P.OwnerUserId, P.LastEditorUserId, P.PostTypeId, P.AcceptedAnswerId, MAX(V.ViewCount) AS Popularity FROM posts AS P JOIN votes AS V ON P.Id = V.PostId JOIN (SELECT PostId, MAX(ViewCount) AS MaxViewCount FROM posts GROUP BY PostId) AS MaxViews ON P.Id = MaxViews.PostId JOIN postLinks AS PL ON P.Id = PL.PostId WHERE PL.PostId = 61217 AND PL.RelatedPostId IS NOT NULL GROUP BY P.Id, P.OwnerUserId, P.LastEditorUserId, P.PostTypeId, P.AcceptedAnswerId;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score and the link type ID for post ID 395?",
    "SELECT T1.`PostTypeId`, MAX(T3.`Score`) AS `Score` FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.`Id` = T2.`PostId` LEFT JOIN comments AS T3 ON T1.`Id` = T3.`PostId` WHERE T1.`Id` = 395 GROUP BY T1.`PostTypeId`;\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post ID with score more than 60 and list out all the user ID that created these post.",
    "SELECT DISTINCT p.Id, u.Id AS UserId FROM posts AS p INNER JOIN users AS u ON p.OwnerUserId = u.Id INNER JOIN ( SELECT c.PostId FROM comments AS c WHERE c.Score > 60 ) AS c_high_score ON p.Id = c_high_score.PostId\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the sum of favourite count gained by user ID 686 in 2011?",
    "SELECT SUM(t.Count) FROM tags AS t INNER JOIN posts AS p ON t.ExcerptPostId = p.Id INNER JOIN ( SELECT PostId FROM votes WHERE UserId = 686 ) AS v ON p.Id = v.PostId WHERE strftime('%Y', p.CreationDate) = '2011';\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average of the up votes and the average user age for users creating more than 10 posts?",
    "SELECT AVG(T1.UpVotes) AS avg_up_votes, AVG(T2.Age) AS avg_age FROM ( SELECT U.`Id`, AVG(V.`UpVotes`) AS UpVotes, AVG(U.`Age`) AS Age FROM users AS U LEFT JOIN votes AS V ON U.`Id` = V.`UserId` GROUP BY U.`Id` HAVING COUNT(P.`Id`) > 10 ) AS T1 INNER JOIN posts AS P ON T1.`Id` = P.`OwnerUserId` INNER JOIN users AS T2 ON P.`OwnerUserId` = T2.`Id` GROUP BY T1.`Id`\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users obtained the \"Announcer\" badge?",
    "SELECT COUNT(*) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Announcer'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.",
    "SELECT DISTINCT B.`Name` FROM badges AS B INNER JOIN users AS U ON B.`UserId` = U.`Id` WHERE U.`CreationDate` = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many positive comments are there on the list?",
    "SELECT COUNT(*) FROM comments WHERE Score > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
    "SELECT T3.`DisplayName`, T3.`Reputation` FROM users AS T3 WHERE T3.`Id` = ( SELECT T1.`UserId` FROM comments AS T1 WHERE T1.`CreationDate` = '2010-07-19 19:16:14.0' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score of 10 on the list?",
    "SELECT COUNT(*) FROM posts WHERE Score = 10\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the names of badges that users who have the highest reputation obtained?",
    "SELECT T2.`Name` FROM badges AS T2 INNER JOIN users AS T1 ON T2.`UserId` = T1.`Id` WHERE T1.`Reputation` = ( SELECT MAX(T3.`Reputation`) FROM users AS T3 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the reputation of users who had obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT T2.`Reputation` FROM users AS T2 INNER JOIN ( SELECT T1.`UserId` FROM badges AS T1 WHERE T1.`Date` = '2010-07-19 19:39:08.0' ) AS T3 ON T2.`Id` = T3.`UserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of badge that the user whose display name is \"Pierre\" obtained?",
    "SELECT `Name` FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Pierre' )\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the dates that users who are located in Rochester, NY obtained their badges?",
    "SELECT DISTINCT T1.`CreationDate` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T1.`Location` = 'Rochester, NY'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Teacher\" badge, calculate their percentage of users",
    "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM users) AS percentage FROM badges INNER JOIN users ON badges.`UserId` = users.`Id` WHERE badges.`Name` = 'Teacher';\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
    "SELECT COUNT(*) FROM ( SELECT T1.`Id` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Organizer' ) AS T3\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
    "SELECT `Name` FROM sqlite_master WHERE `tbl_name` = 'posts';\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?",
    "SELECT c.`Text` FROM comments c JOIN posts p ON c.`PostId` = p.`Id` WHERE p.`CreationDate` = '2010-07-19 19:37:33.0' AND c.`PostId` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the age of users who located in Vienna, Austria obtained the badge?",
    "SELECT DISTINCT u.`Age` FROM users AS u INNER JOIN badges AS b ON u.`Id` = b.`UserId` WHERE u.`Location` = 'Vienna, Austria' AND b.`Name` = 'Popular Question' AND b.`Date` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "How many adults who obtained the badge Supporter?",
    "SELECT COUNT(*) FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Name` = 'Supporter' AND T1.`Age` BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "State the number of views of users who obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT T1.`Views` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Date` = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the name of badges that users who have the lowest reputation obtained?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Reputation` = ( SELECT MIN(T3.`Reputation`) FROM users AS T3 )\t----- bird -----\tcodebase_community"
  ],
  [
    "State the name of badge that the user whose display name is \"Sharpie\" obtained.",
    "SELECT `Name` FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Sharpie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many elders obtained the \"Supporter\" badge?",
    "SELECT COUNT(*) FROM ( SELECT users.`Id` FROM users WHERE users.`Age` > 65 ) AS elders INNER JOIN ( SELECT badges.`UserId` FROM badges INNER JOIN users ON badges.`UserId` = users.`Id` WHERE badges.`Name` = 'Supporter' ) AS supporters ON elders.`Id` = supporters.`UserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of user with the ID of 30?",
    "SELECT DisplayName FROM users WHERE Id = 30\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were from New York?",
    "SELECT COUNT(*) FROM ( SELECT T1.`Id` FROM users AS T1 WHERE T1.`Location` LIKE '%New York%' ) AS T2\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made in 2010?",
    "SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010';\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were adult?",
    "SELECT COUNT(*) FROM users WHERE Age BETWEEN 19 AND 65;\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have the highest number of views?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN ( SELECT MAX(Views) AS MaxViews FROM users ) AS T2 ON T1.`Views` = T2.`MaxViews`;\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the ratio of votes in 2010 and 2011.",
    "SELECT (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2010') / (SELECT COUNT(*) FROM votes WHERE strftime('%Y', CreationDate) = '2011') AS ratio\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of tags used by John Stauffer's?",
    "SELECT DISTINCT t.`TagName` FROM tags t JOIN posts p ON t.`ExcerptPostId` = p.`Id` JOIN users u ON p.`OwnerUserId` = u.`Id` WHERE u.`DisplayName` = 'John Stauffer';\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created by Daniel Vassallo?",
    "SELECT COUNT(*) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Daniel Vassallo' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made by Harlan?",
    "SELECT COUNT(*) FROM votes INNER JOIN users ON votes.`UserId` = users.`Id` WHERE users.`DisplayName` = 'Harlan'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by slashnick has the most answers count? State the post ID.",
    "SELECT posts.`Id` FROM posts INNER JOIN users AS T1 ON posts.`OwnerUserId` = T1.`Id` WHERE T1.`DisplayName` = 'slashnick' ORDER BY ( SELECT COUNT(*) FROM votes WHERE votes.`PostId` = posts.`Id` ) DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
    "SELECT T1.Id, T1.OwnerUserId, T1.DisplayName, MAX(T2.TotalViewCount) AS TotalViewCount FROM posts AS T1 INNER JOIN ( SELECT T3.PostId, SUM(T4.ViewCount) AS TotalViewCount FROM votes AS T4 INNER JOIN users AS T3 ON T4.UserId = T3.Id WHERE T3.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY T3.PostId ) AS T2 ON T1.Id = T2.PostId WHERE T1.OwnerUserId IN ( SELECT T5.Id FROM posts AS T5 INNER JOIN users AS T6 ON T5.OwnerUserId = T6.Id WHERE T6.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ) GROUP BY T1.Id, T1.OwnerUserId, T1.DisplayName ORDER BY TotalViewCount DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts by Matt Parker have more than 4 votes?",
    "SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` INNER JOIN votes AS T3 ON T1.`Id` = T3.`PostId` WHERE T2.`DisplayName` = 'Matt Parker' AND T3.`VoteTypeId` = 1 AND T3.`BountyAmount` > 4\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments did Neil McGuigan get in his posts?",
    "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` INNER JOIN users AS T3 ON T1.`UserId` = T3.`Id` WHERE T2.`OwnerUserId` = (SELECT `Id` FROM users WHERE `DisplayName` = 'Neil McGuigan') AND T1.`Score` < 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State all the tags used by Mark Meckes in his posts that doesn't have comments.",
    "SELECT T1.`Id` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'Mark Meckes' AND T1.`Id` NOT IN ( SELECT T4.`PostId` FROM comments AS T4 )\t----- bird -----\tcodebase_community"
  ],
  [
    "List all the name of users that obtained the Organizer Badges.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Name` = 'Organizer'\t----- bird -----\tcodebase_community"
  ],
  [
    "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
    "SELECT (SELECT COUNT(*) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T2.`TagName` = 'r' ) / (SELECT COUNT(*) FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'Community' ) * 100 AS percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the difference in view count from post posted by mornington and view count from posts posted by Amos.",
    "SELECT (SELECT MAX(ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Mornington' AND posts.ViewCount IS NOT NULL) - (SELECT MAX(ViewCount) FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Amos' AND posts.ViewCount IS NOT NULL) AS ViewCountDifference FROM posts GROUP BY posts.Id HAVING posts.ViewCount IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users received commentator badges in 2014?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Commentator' AND T2.`CreationDate` LIKE '2014-%';\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created on 21st July, 2010?",
    "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the display names and ages of user who got the highest in views?",
    "SELECT T1.`DisplayName`, T1.`Age` FROM users AS T1 WHERE T1.`Id` = ( SELECT T3.`OwnerUserId` FROM posts AS T3 ORDER BY T3.`ViewCount` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
    "SELECT MAX(p.`CreationDate`), p.`OwnerUserId` FROM posts AS p INNER JOIN comments AS c ON p.`Id` = c.`PostId` WHERE c.`Text` LIKE '%Detecting a given face in a database of facial images%' GROUP BY p.`OwnerUserId` ORDER BY MAX(p.`CreationDate`) DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments were given by user ID 13?",
    "SELECT COUNT(*) FROM comments WHERE Score < 60 AND UserId = 13\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post title which got positive comments and display names of the users who posted those comments.",
    "SELECT DISTINCT p.Title, u.DisplayName FROM posts p JOIN comments c ON p.Id = c.PostId JOIN users u ON c.UserId = u.Id WHERE c.Score > 60 ORDER BY p.Title ASC;\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the badge names received in 2011 for the user whose location is in the North Pole.",
    "SELECT DISTINCT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Location` = 'North Pole' AND strftime('%Y', T1.`Date`) = '2011';\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the users' display names and available website URLs of the post with favorite count of more than 150.",
    "SELECT DISTINCT p.`OwnerDisplayName`, u.`WebsiteUrl` FROM posts AS p INNER JOIN users AS u ON p.`OwnerUserId` = u.`Id` WHERE p.`FavoriteCount` > 150 AND u.`WebsiteUrl` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post history counts and last edit date of the post title \"What is the best introductory Bayesian statistics textbook?\"",
    "SELECT T2.`PostId`, COUNT(T2.`Id`) AS `PostHistoryCount`, MAX(T2.`CreationDate`) AS `LastEditDate` FROM postHistory AS T2 WHERE T2.`PostId` = ( SELECT T1.`Id` FROM posts AS T1 WHERE T1.`Title` = 'What is the best introductory Bayesian statistics textbook?' ) GROUP BY T2.`PostId`\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the last accessed date and location of the users who received the outliers badge.",
    "SELECT DISTINCT U.`LastAccessDate`, U.`Location` FROM users AS U INNER JOIN badges AS B ON U.`Id` = B.`UserId` WHERE B.`Name` = 'Outliers' ORDER BY U.`LastAccessDate` DESC;\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the related post title of \"How to tell if something happened in a data set which monitors a value over time\".",
    "SELECT `Title` FROM posts WHERE `Id` = ( SELECT `RelatedPostId` FROM postLinks WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'How to tell if something happened in a data set which monitors a value over time' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "List the post IDs and badge names of the user Samuel in 2013.",
    "SELECT p.PostId, b.Name FROM posts AS p INNER JOIN badges AS b ON p.PostId = b.PostId INNER JOIN ( SELECT ph.PostId, MAX(ph.CreationDate) AS MaxCreationDate FROM postHistory AS ph INNER JOIN users AS u ON ph.UserId = u.Id WHERE u.DisplayName IS NOT NULL AND strftime('%Y', ph.CreationDate) = '2013' GROUP BY ph.PostId ) AS ph ON b.PostId = ph.PostId INNER JOIN users AS u ON b.UserId = u.Id WHERE u.DisplayName = 'Samuel' AND strftime('%Y', ph.MaxCreationDate) = '2013';\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner's display name of the most popular post?",
    "SELECT users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.Id = ( SELECT MAX(posts.Id) FROM posts WHERE posts.ViewCount IS NOT NULL ORDER BY posts.ViewCount DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the display name and location of the user who owned the excerpt post with hypothesis-testing tag.",
    "SELECT DISTINCT T2.`OwnerDisplayName`, T2.`Location` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` INNER JOIN tags AS T3 ON T1.`Id` = T3.`ExcerptPostId` WHERE T3.`TagName` = 'hypothesis-testing'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write down the related posts titles and link type IDs of the post \"What are principal component scores?\".",
    "SELECT P.Title, PH.PostHistoryTypeId FROM posts AS P JOIN postHistory AS PH ON P.Id = PH.PostId JOIN posts AS P2 ON P2.Id = PH.RelatedPostId WHERE P.Title = 'What are principal component scores?' AND P2.Title = 'What are principal component scores?';\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the display name of the parent ID for child post with the highest score.",
    "SELECT DISTINCT users.`DisplayName` FROM users INNER JOIN posts ON users.`Id` = posts.`OwnerUserId` WHERE posts.`ParentId` IS NOT NULL AND posts.`Score` = ( SELECT MAX(posts.`Score`) FROM posts WHERE posts.`ParentId` IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
    "SELECT T2.`DisplayName`, T2.`WebsiteUrl` FROM ( SELECT T1.`UserId`, MAX(T1.`BountyAmount`) AS MaxBountyAmount FROM votes AS T1 WHERE T1.`VoteTypeId` = 8 GROUP BY T1.`UserId` ) AS SubQuery INNER JOIN users AS T2 ON SubQuery.`UserId` = T2.`Id` WHERE T2.`WebsiteUrl` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the titles of the top 5 posts with the highest popularity?",
    "SELECT p.Title FROM posts p INNER JOIN ( SELECT ch.PostId, MAX(c.ViewCount) AS MaxViewCount FROM postHistory ch INNER JOIN comments c ON ch.PostId = c.PostId GROUP BY ch.PostId ) v ON p.Id = v.PostId ORDER BY v.MaxViewCount DESC LIMIT 5\t----- bird -----\tcodebase_community"
  ],
  [
    "How many tags have post count between 5,000 to 7,000?",
    "SELECT COUNT(*) FROM tags WHERE ExcerptPostId IN ( SELECT Id FROM posts WHERE (AnswerCount + CommentCount) BETWEEN 5000 AND 7000 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner user id of the most valuable post?",
    "SELECT T1.`OwnerUserId` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` ORDER BY T1.`FavoriteCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How old is the most influential user?",
    "SELECT `Age` FROM users WHERE `Id` = ( SELECT `Id` FROM users ORDER BY `Reputation` DESC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts with votes that were created in 2011 have a bounty of 50?",
    "SELECT COUNT(*) FROM posts INNER JOIN votes ON posts.Id = votes.PostId WHERE votes.BountyAmount = 50 AND strftime('%Y', posts.CreationDate) = '2011';\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the id of the youngest user?",
    "SELECT `Id` FROM users WHERE `Age` = ( SELECT MIN(`Age`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score of the post with the most popular tag?",
    "SELECT MAX(T5.MaxScore) AS ScoreOfMostPopularTagPost FROM ( SELECT T1.ExcerptPostId, MAX(T1.Count) AS MaxCount FROM tags AS T1 GROUP BY T1.ExcerptPostId ) AS T4 INNER JOIN ( SELECT PostId, MAX(Score) AS MaxScore FROM comments GROUP BY PostId ) AS T5 ON T4.ExcerptPostId = T5.PostId\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average monthly number of links created in 2010 for posts that have no more than 2 answers?",
    "SELECT AVG(CAST(T3.`count` AS REAL)) FROM ( SELECT MONTH(posts.`CreationDate`) AS month, COUNT(*) AS `count` FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.`RelatedPostId` = T2.`Id` WHERE YEAR(posts.`CreationDate`) = 2010 AND posts.`AnswerCount` <= 2 GROUP BY MONTH(posts.`CreationDate`) ) AS T3\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts that were voted by user 1465, what is the id of the most valuable post?",
    "SELECT p.Id FROM posts AS p INNER JOIN ( SELECT v.PostId, MAX(v.Score) AS MaxScore FROM votes AS v INNER JOIN ( SELECT PostId FROM votes WHERE UserId = 1465 ) AS user_votes ON v.PostId = user_votes.PostId GROUP BY v.PostId ) AS max_votes ON p.Id = max_votes.PostId WHERE EXISTS ( SELECT 1 FROM votes AS v WHERE v.PostId = p.Id AND v.UserId = 1465 ) ORDER BY max_votes.MaxScore DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post with the oldest post link?",
    "SELECT p.Title FROM posts AS p INNER JOIN ( SELECT pl.PostId, MIN(p.CreationDate) AS MinCreationDate FROM postLinks AS pl INNER JOIN posts AS p ON pl.RelatedPostId = p.Id GROUP BY pl.PostId ) AS subquery ON p.Id = subquery.PostId WHERE p.Id = ( SELECT pl.PostId FROM postLinks AS pl INNER JOIN posts AS p ON pl.RelatedPostId = p.Id GROUP BY pl.PostId ORDER BY subquery.MinCreationDate ASC LIMIT 1 );\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the highest amount of badges?",
    "SELECT T1.DisplayName FROM users AS T1 JOIN ( SELECT T2.UserId, COUNT(T2.Name) AS badge_count FROM badges AS T2 GROUP BY T2.UserId ORDER BY badge_count DESC LIMIT 1 ) AS T4 ON T1.Id = T4.UserId;\t----- bird -----\tcodebase_community"
  ],
  [
    "When did \"chl\" cast its first vote in a post?",
    "SELECT MIN(p.CreationDate) AS FirstVoteCreationDate FROM posts AS p INNER JOIN votes AS v ON p.Id = v.PostId INNER JOIN users AS u ON v.UserId = u.Id WHERE u.DisplayName = 'chl';\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the date when the youngest user made his or her first post?",
    "SELECT MIN(T2.`CreationDate`) AS FirstPostDate FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`Age` IS NOT NULL GROUP BY T2.`Id`\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the first Autobiographer badge?",
    "SELECT `DisplayName` FROM users WHERE `Id` = ( SELECT `UserId` FROM badges WHERE `Id` = ( SELECT `Id` FROM badges WHERE `Name` = 'Autobiographer' ORDER BY `Date` ASC LIMIT 1 ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` INNER JOIN users AS T3 ON T1.`UserId` = T3.`Id` WHERE T3.`Location` = 'United Kingdom' AND T1.`BountyAmount` >= 4\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of posts voted by the oldest users?",
    "SELECT AVG(votes.`PostId`) FROM votes INNER JOIN users ON votes.`UserId` = users.`Id` WHERE users.`Age` = ( SELECT MAX(users.`Age`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Who has the highest reputation? Please give the display name.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN ( SELECT `Id`, MAX(`Reputation`) AS `MaxReputation` FROM users GROUP BY `Id` ) AS T2 ON T1.`Id` = T2.`Id` AND T1.`Reputation` = T2.`MaxReputation`\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users whose reputations are higher than 2000 and the number of views is higher than 1000?",
    "SELECT COUNT(*) FROM users WHERE Reputation > 2000 AND Views > 1000\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all display names of users who are adults.",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`CreationDate` BETWEEN '1997-12-29' AND '2023-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts did Jay Stevens have in 2010?",
    "SELECT COUNT(DISTINCT p.Id) FROM posts AS p JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Jay Stevens' AND strftime('%Y', p.CreationDate) = '2010';\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by Harvey Motulsky has the most views? Please give the id and title of this post.",
    "SELECT p.Id, p.Title FROM posts AS p INNER JOIN ( SELECT PostId, MAX(ViewCount) AS MaxViewCount FROM posts GROUP BY PostId ) AS max_views ON p.Id = max_views.PostId INNER JOIN ( SELECT PostId, COUNT(UserId) AS VoteCount FROM votes GROUP BY PostId ) AS vote_counts ON p.Id = vote_counts.PostId INNER JOIN users AS u ON p.OwnerUserId = u.Id WHERE u.DisplayName = 'Harvey Motulsky' AND vote_counts.VoteCount = ( SELECT MAX(VoteCount) FROM ( SELECT COUNT(UserId) AS VoteCount FROM votes WHERE PostId IN (SELECT PostId FROM posts WHERE OwnerUserId = u.Id) GROUP BY PostId ) AS sub_vote_counts )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post has the highest score? Please give its id and title's name.",
    "SELECT posts.OwnerUserId, users.DisplayName FROM posts INNER JOIN users ON posts.OwnerUserId = users.Id WHERE posts.AcceptedAnswerId IS NOT NULL ORDER BY posts.AcceptedAnswerId DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of Stephen Turner's posts?",
    "SELECT AVG(T1.`Score`) FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'Stephen Turner'\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the users' display names whose posts had over 20000 views in 2011.",
    "SELECT DISTINCT U.`DisplayName` FROM posts P JOIN users U ON P.`OwnerUserId` = U.`Id` JOIN postHistory PH ON P.`Id` = PH.`PostId` WHERE P.`ViewCount` > 20000 AND strftime('%Y', P.`CreationDate`) = '2011' GROUP BY U.`DisplayName`\t----- bird -----\tcodebase_community"
  ],
  [
    "Which is the most valuable post in 2010? Please give its id and the owner's display name.",
    "SELECT p.Id, u.DisplayName FROM posts p JOIN users u ON p.OwnerUserId = u.Id JOIN ( SELECT PostId, MAX(CreationDate) AS MaxCreationDate FROM posts WHERE strftime('%Y', CreationDate) = '2010' GROUP BY PostId ) AS subq ON p.Id = subq.PostId AND p.CreationDate = subq.MaxCreationDate ORDER BY p.FavoriteCount DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage of posts whose owners had a reputation of over 1000 in 2011?",
    "SELECT (SELECT COUNT(*) FROM (SELECT DISTINCT OwnerUserId FROM posts WHERE strftime('%Y', CreationDate) = '2011') AS T1 WHERE OwnerUserId IN (SELECT Id FROM users WHERE Reputation > 1000)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', CreationDate) = '2011') AS percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the percentage of teenage users.",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM users)) * 100 AS percentage FROM users WHERE Age BETWEEN 13 AND 18;\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.",
    "SELECT T3.`DisplayName` FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` INNER JOIN users AS T3 ON T2.`UserId` = T3.`Id` INNER JOIN ( SELECT `PostId`, MAX(`CreationDate`) AS `MaxCreationDate` FROM postHistory GROUP BY `PostId` ) AS T4 ON T1.`Id` = T4.`PostId` WHERE T1.`Title` = 'Computer Game Datasets' AND T3.`DisplayName` IS NOT NULL AND T4.`MaxCreationDate` IS NOT NULL ORDER BY T4.`MaxCreationDate` DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total number of posts with views above average.",
    "SELECT COUNT(*) FROM posts WHERE ViewCount > ( SELECT AVG(ViewCount) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments were added to the post with the highest score?",
    "SELECT COUNT(*) FROM comments WHERE comments.`PostId` = ( SELECT posts.`Id` FROM posts WHERE posts.`Score` = ( SELECT MAX(posts.`Score`) ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
    "SELECT COUNT(*) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the display name and location of the user, who was the last to edit the post with ID 183.",
    "SELECT T1.`DisplayName`, T1.`Location` FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`PostId` = ( SELECT Id FROM posts WHERE Id = 183 ) ORDER BY T2.`CreationDate` DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the latest badge awarded to the user with the display name Emmett.",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN ( SELECT T1.`Id` FROM users AS T1 WHERE T1.`DisplayName` = 'Emmett' ) AS T2 ON T1.`UserId` = T2.`Id` ORDER BY T1.`Date` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of adult users who have cast over 5000 upvotes.",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT U.`Id` FROM users AS U JOIN votes AS V ON U.`Id` = V.`UserId` WHERE U.`Age` BETWEEN 19 AND 65 AND V.`UpVotes` > 5000 ) AS T1;\t----- bird -----\tcodebase_community"
  ],
  [
    "How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created.",
    "SELECT (SELECT MAX(badges.Date) FROM badges INNER JOIN users ON badges.UserId = users.Id WHERE users.DisplayName = 'Zolomon') - users.CreationDate AS days_to_get_badge FROM users WHERE users.DisplayName = 'Zolomon';\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts and comments left by the user, who has the latest created user account.",
    "SELECT (SELECT COUNT(*) FROM posts WHERE posts.`OwnerUserId` = ( SELECT users.`Id` FROM users ORDER BY users.`CreationDate` DESC LIMIT 1 )) AS num_posts, (SELECT COUNT(*) FROM comments WHERE comments.`UserId` = ( SELECT users.`Id` FROM users ORDER BY users.`CreationDate` DESC LIMIT 1 )) AS num_comments\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the text of the latest comment to the post with the title 'Analysing wind data with R' and the display name of the user who left it.",
    "SELECT T1.`CreationDate`, T1.`Text`, T2.`DisplayName` FROM comments AS T1 INNER JOIN posts AS T3 ON T1.`PostId` = T3.`Id` INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T3.`Title` = 'Analysing wind data with R' ORDER BY T1.`CreationDate` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were awarded with 'Citizen Patrol' badge?",
    "SELECT COUNT(*) FROM ( SELECT T1.`Id` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Citizen Patrol' ) AS T3\t----- bird -----\tcodebase_community"
  ],
  [
    "Count the number of posts with a tag specified as 'careers'.",
    "SELECT COUNT(*) FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T2.`TagName` = 'careers'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?",
    "SELECT `Reputation`, `Views` FROM users WHERE `Id` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Jarrod Dixon' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
    "SELECT COUNT(*) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`Title` = 'Clustering 1D data' AND T2.`PostHistoryTypeId` = 2\t----- bird -----\tcodebase_community"
  ],
  [
    "When did the user known as 'IrishStat' create his or her account?",
    "SELECT `CreationDate` FROM users WHERE `Id` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'IrishStat' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that offer a bounty amount over 30.",
    "SELECT COUNT(*) FROM votes WHERE BountyAmount >= 30\t----- bird -----\tcodebase_community"
  ],
  [
    "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
    "SELECT (COUNT(DISTINCT CASE WHEN c.Score > 50 THEN p.Id END) * 100.0) / COUNT(DISTINCT p.Id) AS percentage FROM posts p INNER JOIN users u ON p.OwnerUserId = u.Id INNER JOIN comments c ON p.Id = c.PostId WHERE u.Reputation = (SELECT MAX(Reputation) FROM users) GROUP BY p.Id\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score less than 20?",
    "SELECT COUNT(*) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the tags with tag ID below 15, how many of them have 20 count of posts and below?",
    "SELECT COUNT(*) FROM ( SELECT T1.Id, T1.TagName, T1.Count FROM tags AS T1 INNER JOIN ( SELECT PostId, COUNT(*) AS AnswerCount FROM posts GROUP BY PostId ) AS T2 ON T1.ExcerptPostId = T2.PostId WHERE T1.Id < 15 AND T2.AnswerCount <= 20 ) AS T3;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the excerpt post ID and wiki post ID of the tag named sample?",
    "SELECT t.`ExcerptPostId`, t.`WikiPostId` FROM tags AS t WHERE t.`Id` = ( SELECT Id FROM tags WHERE TagName = 'sample' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".",
    "SELECT T2.`Reputation`, T2.`UpVotes` FROM users AS T2 WHERE T2.`Id` = ( SELECT T1.`UserId` FROM comments AS T1 WHERE T1.`Text` = 'fine, you win :)' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the texts commented on the post about linear regression.",
    "SELECT DISTINCT p.`Id`, p.`Title`, p.`OwnerUserId`, p.`LastEditorUserId`, t.`Id`, t.`Name` FROM posts AS p INNER JOIN tags AS t ON p.`Id` = t.`ExcerptPostId` WHERE p.`Title` = 'How can I adapt ANOVA for binary data?' ORDER BY p.`CreationDate` ASC;\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
    "SELECT T1.`Id`, T1.`Score` FROM comments AS T1 INNER JOIN ( SELECT T2.`PostId`, MAX(T2.`Score`) AS `MaxScore` FROM comments AS T2 INNER JOIN ( SELECT T3.`Id`, T3.`ViewCount` FROM posts AS T3 INNER JOIN postHistory AS T4 ON T3.`Id` = T4.`PostId` WHERE T3.`ViewCount` BETWEEN 100 AND 150 ) AS T5 ON T2.`PostId` = T5.`Id` GROUP BY T2.`PostId` ) AS T6 ON T1.`PostId` = T6.`PostId` AND T1.`Score` = T6.`MaxScore`\t----- bird -----\tcodebase_community"
  ],
  [
    "List the creation date and age of the user that commented with webiste.",
    "SELECT DISTINCT T1.`CreationDate`, U.`Age` FROM comments AS T1 INNER JOIN users AS U ON T1.`UserId` = U.`Id` WHERE T1.`Text` LIKE '%http://%' AND U.`Age` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with 0 score, how many of the posts have view count lower than 5?",
    "SELECT COUNT(*) FROM comments INNER JOIN posts ON comments.PostId = posts.Id WHERE comments.Score < 5 AND posts.ViewCount < 5\t----- bird -----\tcodebase_community"
  ],
  [
    "In posts with 1 comment, how many of the comments have 0 score?",
    "SELECT COUNT(*) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`CommentCount` = 1 AND T1.`Score` = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "Among products comments with 0 score, what is the total number of users ages 40 years old?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`UserId` FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Score` = 0 AND T2.`Age` = 40 ) AS T3;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?",
    "SELECT T3.`Id` FROM comments AS T3 INNER JOIN posts AS T4 ON T3.`PostId` = T4.`Id` WHERE T4.`Id` = ( SELECT T1.`Id` FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`Text` LIKE '%Group differences on a five point Likert item%' LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the up vote number of the user that commented \"R is also lazy evaluated.\"?",
    "SELECT T4.`UpVotes` FROM votes AS T3 INNER JOIN users AS T4 ON T3.`UserId` = T4.`Id` INNER JOIN comments AS T1 ON T3.`PostId` = T1.`PostId` WHERE T1.`Text` = 'R is also lazy evaluated.' AND T4.`UpVotes` IS NOT NULL GROUP BY T4.`UpVotes`\t----- bird -----\tcodebase_community"
  ],
  [
    "List the comments commented by the user with a username of Harvey Motulsky.",
    "SELECT T1.`Id`, T1.`CreationDate`, T1.`Text`, T1.`UserId` FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'Harvey Motulsky'\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
    "SELECT DISTINCT u.`DisplayName` FROM users u INNER JOIN posts p ON u.`Id` = p.`OwnerUserId` LEFT JOIN votes v ON u.`Id` = v.`UserId` AND p.`Id` = v.`PostId` WHERE p.`Score` BETWEEN 1 AND 5 AND (v.`DownVotes` = 0 OR v.`DownVotes` IS NULL);\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
    "SELECT (COUNT(DISTINCT CASE WHEN p.UpVotes = 0 THEN u.Id END) * 100.0 / COUNT(DISTINCT u.Id)) AS percentage FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON u.Id = c.UserId AND p.Id = c.PostId WHERE p.Score BETWEEN 5 AND 10 AND c.Score BETWEEN 5 AND 10 GROUP BY u.Id;\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all the superpowers of 3-D Man.",
    "SELECT MAX(power_name) FROM superpower WHERE id IN ( SELECT power_id FROM hero_power WHERE hero_id IN ( SELECT id FROM superhero WHERE superhero_name = '3-D Man' ) );\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have the super power of \"Super Strength\"?",
    "SELECT COUNT(DISTINCT T1.`id`) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Super Strength'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT superhero.id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' ) AS T1 INNER JOIN superhero ON T1.id = superhero.id WHERE superhero.height_cm > 200\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the full names of all the superheroes with over 15 super powers.",
    "SELECT superhero.`full_name` FROM superhero INNER JOIN ( SELECT superhero.`id` FROM superhero INNER JOIN hero_power ON superhero.`id` = hero_power.`hero_id` GROUP BY superhero.`id` HAVING COUNT(hero_power.`power_id`) > 15 ) AS T1 ON superhero.`id` = T1.`id`\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have blue eyes?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the colour of Apocalypse's skin?",
    "SELECT colour.colour FROM colour JOIN superhero ON superhero.skin_colour_id = colour.id WHERE superhero.superhero_name = 'Apocalypse';\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?",
    "SELECT COUNT(DISTINCT superhero.id) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE colour.id = (SELECT id FROM colour WHERE attribute_name = 'Blue') AND superpower.power_name = 'Agility' AND superhero.eye_colour_id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
    "SELECT DISTINCT superhero.name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN superhero AS superhero_attributes ON superhero.id = superhero_attributes.hero_id JOIN hero_attribute ON superhero_attributes.hero_id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN superpower ON superhero_attributes.hero_id = superpower.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower AS superpower_attributes ON hero_power.power_id = superpower_attributes.id WHERE colour.colour = 'Blue' AND colour.id = (SELECT colour.id FROM colour WHERE colour.colour = 'Blond') AND superpower_attributes.power_name = 'Agility'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes are published by Marvel Comics?",
    "SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.`publisher_id` = publisher.`id` WHERE publisher.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Please give the full name of the tallest hero published by Marvel Comics.",
    "SELECT superhero.`full_name` FROM superhero INNER JOIN publisher ON superhero.`publisher_id` = publisher.`id` WHERE publisher.`publisher_name` = 'Marvel Comics' AND superhero.`height_cm` = ( SELECT MAX(height_cm) FROM superhero WHERE publisher.`publisher_name` = 'Marvel Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the publisher of Sauron?",
    "SELECT superhero.publisher_id FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name = 'Sauron' GROUP BY superhero.publisher_id;\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, how many of them have blue eyes?",
    "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND colour.colour = 'Blue' AND superhero.eye_colour_id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of the superheroes from Marvel Comics?",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of \"Super Strength\"?",
    "SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes did DC Comics publish?",
    "SELECT COUNT(*) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'DC Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher published the slowest superhero?",
    "SELECT T3.`publisher_name` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superhero AS T3 ON T1.`publisher_id` = T3.`id` INNER JOIN publisher ON T3.`publisher_id` = publisher.`id` WHERE T2.`attribute_name` = 'Speed' GROUP BY T3.`publisher_name` ORDER BY MIN(T2.`attribute_value`) ASC LIMIT 1;\t----- bird -----\tsuperhero"
  ],
  [
    "How many gold-eyed superheroes did Marvel Comics publish?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`eye_colour_id` = T3.`id` AND T3.`colour` = 'Gold' AND T2.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher's name of Blue Beetle II?",
    "SELECT publisher.publisher_name FROM publisher INNER JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes with blonde hair are there?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`hair_colour_id` = T2.`id` WHERE T2.`colour` = 'Blond'\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the dumbest superhero?",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN ( SELECT hero_id, MIN(attribute_value) AS min_intelligence FROM hero_attribute INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute_name = 'Intelligence' GROUP BY hero_id ) AS T2 ON T1.id = T2.hero_id WHERE T2.min_intelligence IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "What is Copycat's race?",
    "SELECT r.race FROM superhero AS s JOIN race AS r ON s.race_id = r.id WHERE s.superhero_name = 'Copycat';\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have durability of less than 50?",
    "SELECT COUNT(*) FROM superhero INNER JOIN hero_attribute ON superhero.`id` = hero_attribute.`hero_id` INNER JOIN attribute ON hero_attribute.`attribute_id` = attribute.`id` WHERE attribute.`attribute_name` = 'Durability' AND hero_attribute.`attribute_value` < 50\t----- bird -----\tsuperhero"
  ],
  [
    "What are the names of the superheroes with the power of death touch?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Death Touch'\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes have a strength value of 100?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN attribute AS T3 ON T2.`attribute_id` = T3.`id` INNER JOIN gender AS T4 ON T1.`gender_id` = T4.`id` WHERE T3.`attribute_name` = 'Strength' AND T2.`attribute_value` = 100 AND T4.`gender` = 'Female'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the name of the superhero that has the most powers?",
    "SELECT superhero.`superhero_name` FROM superhero JOIN ( SELECT hero_id, COUNT(power_id) AS power_count FROM hero_power GROUP BY hero_id ) AS power_counts ON superhero.`id` = power_counts.`hero_id` ORDER BY power_count DESC LIMIT 1;\t----- bird -----\tsuperhero"
  ],
  [
    "How many vampire superheroes are there?",
    "SELECT COUNT(DISTINCT superhero.id) FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
    "SELECT COUNT(*) AS bad_marvel_comics_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher.publisher_name = 'Marvel Comics';\t----- bird -----\tsuperhero"
  ],
  [
    "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
    "SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference\t----- bird -----\tsuperhero"
  ],
  [
    "Give the publisher ID of Star Trek.",
    "SELECT publisher.id FROM publisher WHERE publisher.publisher_name = 'Star Trek';\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all superheroes.",
    "SELECT AVG(CAST(T2.`attribute_value` AS REAL)) FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`attribute_id`\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes without full name?",
    "SELECT COUNT(*) FROM superhero WHERE full_name IS NULL\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye colour of superhero with superhero ID 75?",
    "SELECT T2.`colour` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`id` = 75;\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the superpowers of the superhero called Deathlok.",
    "SELECT superpower.`power_name` FROM superpower INNER JOIN hero_power ON superpower.`id` = hero_power.`power_id` INNER JOIN superhero ON hero_power.`hero_id` = superhero.`id` WHERE superhero.`superhero_name` = 'Deathlok'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average weight of all female superheroes?",
    "SELECT AVG(T1.`weight_kg`) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` WHERE T2.`gender` = 'Female' AND T1.`weight_kg` IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five superpowers of male superheroes.",
    "SELECT DISTINCT SP.power_name FROM superhero AS SH INNER JOIN hero_power AS HP ON SH.id = HP.hero_id INNER JOIN superpower AS SP ON HP.power_id = SP.id INNER JOIN gender AS G ON SH.gender_id = G.id WHERE G.gender = 'Male' ORDER BY SP.power_name ASC LIMIT 5;\t----- bird -----\tsuperhero"
  ],
  [
    "Give the name of the alien superheroes.",
    "SELECT DISTINCT superhero_name FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.name = 'Alien';\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color.",
    "SELECT DISTINCT superhero.name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN attribute ON superhero.id = attribute.hero_id AND attribute.attribute_name = 'Height' WHERE colour.id = 1 -- Assuming 'None' corresponds to ID 1 for eye color AND superhero.height_cm BETWEEN 170 AND 190 AND superhero.eye_colour_id IS NOT NULL -- Assuming there is a gender_id for 'N/A'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpower of hero ID 56?",
    "SELECT MAX(sp.`power_name`) AS Superpower FROM hero_power AS hp INNER JOIN superpower AS sp ON hp.`power_id` = sp.`id` WHERE hp.`hero_id` = 56\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full name of Demi-God superheroes.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "How many bad superheroes are there?",
    "SELECT COUNT(DISTINCT superhero.`id`) FROM superhero INNER JOIN alignment ON superhero.`alignment_id` = alignment.`id` WHERE alignment.`alignment` = 'Bad'\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the race of the superhero who weighed 169 kg.",
    "SELECT DISTINCT R.`race` FROM superhero AS S INNER JOIN race AS R ON S.`race_id` = R.`id` WHERE S.`weight_kg` = 169;\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hair colour of the human superhero who is 185 cm tall.",
    "SELECT colour.name AS hair_colour FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE superhero.height_cm = 185 AND superhero.race_id = (SELECT id FROM race WHERE race = 'human') AND colour.id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye clolour of the heaviest superhero?",
    "SELECT T2.`colour` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`id` = ( SELECT MAX(id) FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",
    "SELECT ( SELECT COUNT(*) FROM superhero WHERE publisher_id = 13 AND height_cm BETWEEN 150 AND 180 ) * 100.0 / ( SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes.",
    "SELECT CONCAT(S.first_name, ' ', S.last_name) AS full_name FROM superhero AS S INNER JOIN gender AS G ON S.gender_id = G.id WHERE G.gender = 'M' AND S.weight_kg > ( SELECT MAX(weight_kg) * 0.79 FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Which power do superheroes have the most of?",
    "SELECT power_name FROM ( SELECT power_name, COUNT(*) AS power_count FROM superpower GROUP BY power_name ) AS power_counts ORDER BY power_count DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Indicate the attribute value of superhero Abomination.",
    "SELECT T1.`attribute_value` FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` WHERE T2.`superhero_name` = 'Abomination' AND T1.`attribute_id` = ( SELECT `attribute_id` FROM attribute WHERE attribute_name = 'Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "What are the superpowers of heroes with ID 1?",
    "SELECT superpower.`power_name` FROM superpower INNER JOIN hero_power ON superpower.`id` = hero_power.`power_id` WHERE hero_power.`hero_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have stealth power?",
    "SELECT COUNT(DISTINCT T1.`id`) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`power_id` IN ( SELECT `id` FROM superpower WHERE `power_name` = 'stealth' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the hero's full name with the highest attribute in strength?",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN ( SELECT hero_id, MAX(attribute_value) AS max_strength FROM hero_attribute WHERE attribute_name = 'Strength' GROUP BY hero_id ) AS T2 ON T1.id = T2.hero_id WHERE T1.full_name IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average of superheroes with no skin colour?",
    "SELECT AVG(T1.`COUNT(*)`) FROM ( SELECT COUNT(*) FROM superhero WHERE skin_colour_id = 1 ) AS T1\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes were published by Dark Horse Comics?",
    "SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.`publisher_id` = publisher.`id` WHERE publisher.`id` = ( SELECT `id` FROM publisher WHERE publisher_name = 'Dark Horse Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the most durability published by Dark Horse Comics?",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN attribute AS T4 ON T3.attribute_id = T4.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T4.attribute_name = 'Durability' AND T3.attribute_value = ( SELECT MAX(T3_inner.attribute_value) FROM hero_attribute AS T3_inner INNER JOIN attribute AS T4_inner ON T3_inner.attribute_id = T4_inner.id WHERE T4_inner.attribute_name = 'Durability' AND T1.id = T3_inner.hero_id )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eyes colour of Abraham Sapien?",
    "SELECT colour.`colour` FROM colour INNER JOIN superhero ON superhero.`eye_colour_id` = colour.`id` WHERE superhero.`full_name` = 'Abraham Sapien'\t----- bird -----\tsuperhero"
  ],
  [
    "List the name of superheroes with flight power.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Flight'\t----- bird -----\tsuperhero"
  ],
  [
    "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
    "SELECT T1.`eye_colour_id`, T1.`hair_colour_id`, T1.`skin_colour_id` FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` INNER JOIN colour AS T4 ON T1.`eye_colour_id` = T4.`id` AND T1.`hair_colour_id` = T4.`id` AND T1.`skin_colour_id` = T4.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Dark Horse Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
    "SELECT DISTINCT T5.`publisher_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`hair_colour_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`skin_colour_id` = T3.`id` INNER JOIN colour AS T4 ON T1.`eye_colour_id` = T4.`id` INNER JOIN publisher AS T5 ON T1.`publisher_id` = T5.`id` WHERE T2.`id` = T3.`id` AND T2.`id` = T4.`id`\t----- bird -----\tsuperhero"
  ],
  [
    "Which group does superhero A-Bomb belong to?",
    "SELECT DISTINCT T2.`alignment` FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T1.`superhero_name` = 'A-Bomb'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of blue female superheroes among all female superheroes?",
    "SELECT ROUND( (SELECT COUNT(*) FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id WHERE superhero.gender_id = (SELECT id FROM gender WHERE name = 'Female') AND colour.id = (SELECT id FROM colour WHERE name = 'Blue') ) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.gender_id = (SELECT id FROM gender WHERE name = 'Female') ), 2) AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hero name and race of Charles Chandler.",
    "SELECT T1.`full_name`, T2.`race` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`id` = ( SELECT `id` FROM superhero WHERE `full_name` = 'Charles Chandler' )\t----- bird -----\tsuperhero"
  ],
  [
    "What is the gender of Agent 13 hero?",
    "SELECT T2.`gender` FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` WHERE T1.`superhero_name` = 'Agent 13'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide superheroes' names who have the adaptation power.",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "How many powers does Amazo hero have?",
    "SELECT COUNT(*) FROM hero_power WHERE hero_id = ( SELECT `id` FROM superhero WHERE superhero_name = 'Amazo' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the powers of Hunter Zolomon.",
    "SELECT T1.`power_id` FROM hero_power AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` WHERE T2.`full_name` = 'Hunter Zolomon'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the heights of the heroes whose eye colours are amber.",
    "SELECT T1.`height_cm` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Amber'\t----- bird -----\tsuperhero"
  ],
  [
    "List the heroes' names whose eyes and hair colours are both black.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`hair_colour_id` = T3.`id` WHERE T2.`colour` = 'Black' AND T3.`colour` = 'Black'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colours of the heroes whose skin colours are gold.",
    "SELECT DISTINCT T1.`eye_colour_id` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`skin_colour_id` = ( SELECT `id` FROM colour WHERE `colour` = 'Gold' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full names of vampire heroes.",
    "SELECT superhero.`full_name` FROM superhero INNER JOIN race ON superhero.`race_id` = race.`id` WHERE race.`race` = 'Vampire'\t----- bird -----\tsuperhero"
  ],
  [
    "Describe the names of neutral alignment superheroes.",
    "SELECT DISTINCT superhero_name FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Neutral';\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have the highest attribute value in strength?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT superhero.id FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' AND hero_attribute.attribute_value = ( SELECT MAX(hero_attribute.attribute_value) FROM hero_attribute JOIN superhero ON hero_attribute.hero_id = superhero.id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Strength' ) ) AS subquery;\t----- bird -----\tsuperhero"
  ],
  [
    "What are the race and alignment of Cameron Hicks?",
    "SELECT T2.`alignment` FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T1.`superhero_name` = 'Cameron Hicks';\t----- bird -----\tsuperhero"
  ],
  [
    "How many percent of female heroes were published by Marvel Comics?",
    "SELECT ROUND( ( SELECT COUNT(*) FROM superhero WHERE gender_id = ( SELECT id FROM gender WHERE gender = 'Female' ) AND publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) / CAST( ( SELECT COUNT(*) FROM superhero WHERE publisher_id = ( SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) ) AS REAL ) * 100, 2 ) AS percentage_female_marvel_heroes;\t----- bird -----\tsuperhero"
  ],
  [
    "Find the average weight of the heroes who are aliens.",
    "SELECT AVG(T1.`weight_kg`) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T2.`race` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.",
    "SELECT ( SELECT T1.`weight_kg` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T1.`full_name` = 'Emil Blonsky' ) - ( SELECT T1.`weight_kg` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T1.`full_name` = 'Charles Chandler' ) AS weight_difference\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height for each superhero.",
    "SELECT superhero.`superhero_name`, SUM(superhero.`height_cm`) / COUNT(superhero.`id`) AS `average_height` FROM superhero GROUP BY superhero.`superhero_name`\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's superpower?",
    "SELECT T1.`power_name` FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`power_id` WHERE T2.`hero_id` = ( SELECT `id` FROM superhero WHERE superhero_name = 'Abomination' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the race of god/eternal, how many of them are male",
    "SELECT COUNT(*) FROM superhero WHERE superhero.`race_id` = 21 AND superhero.`gender_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "Which hero was the fastest?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`attribute_id` = ( SELECT attribute_id FROM attribute WHERE attribute_name = 'Speed' ) ORDER BY T2.`attribute_value` DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have a neutral alignment?",
    "SELECT COUNT(*) FROM superhero WHERE alignment_id = 3;\t----- bird -----\tsuperhero"
  ],
  [
    "State all of 3-D Man's attributes along with their values.",
    "SELECT T1.`attribute_name`, T2.`attribute_value` FROM attribute AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`attribute_id` INNER JOIN superhero AS T3 ON T2.`hero_id` = T3.`id` WHERE T3.`superhero_name` = '3-D Man'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superheroes have blue eyes with brown hair?",
    "SELECT DISTINCT superhero.superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN colour ON superhero.hair_colour_id = colour.id INNER JOIN superhero_attribute ON superhero.id = superhero_attribute.hero_id INNER JOIN attribute ON superhero_attribute.attribute_id = attribute.id WHERE colour.colour_id = 7 -- Blue eyes AND attribute.attribute_name = 'Hair' -- Filtering by hair attribute AND attribute.attribute_value = 'Brown' -- Filtering by brown hair value\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher for Hawkman, Karate Kid and Speedy?",
    "SELECT DISTINCT p.publisher_name FROM publisher AS p INNER JOIN superhero AS s ON p.id = s.publisher_id INNER JOIN hero_power AS hp ON s.id = hp.hero_id INNER JOIN superhero AS sh ON hp.hero_id = sh.id WHERE s.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy') AND sh.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy') AND hp.power_id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes didn't have any publisher?",
    "SELECT COUNT(*) FROM superhero WHERE publisher_id = 1;\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the percentage of superheroes with blue eyes.",
    "SELECT CAST(SUM(CASE WHEN colour.`colour` LIKE '%Blue%' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) * 100.0 FROM superhero INNER JOIN colour ON superhero.`eye_colour_id` = colour.`id`\t----- bird -----\tsuperhero"
  ],
  [
    "Find the ratio between male superheroes and female superheroes.",
    "SELECT ( SELECT COUNT(*) FROM superhero WHERE gender_id = 1 ) / ( SELECT COUNT(*) FROM superhero WHERE gender_id = 2 ) AS ratio\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the tallest superhero?",
    "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the power ID of cryokinesis?",
    "SELECT * FROM superhero WHERE id = (SELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'cryokinesis'));\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the name of superhero with superhero ID 294.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 WHERE T1.`id` = 294\t----- bird -----\tsuperhero"
  ],
  [
    "List the full names of superheroes with missing weight.",
    "SELECT DISTINCT superhero.`full_name` FROM superhero INNER JOIN hero_attribute ON superhero.`id` = hero_attribute.`hero_id` INNER JOIN attribute ON hero_attribute.`attribute_id` = attribute.`id` WHERE attribute.`attribute_name` = 'Weight' AND (hero_attribute.`attribute_value` = 0 OR hero_attribute.`attribute_value` IS NULL)\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name.",
    "SELECT T2.`attribute_name` FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` INNER JOIN superhero AS T3 ON T1.`hero_id` = T3.`id` INNER JOIN colour AS T4 ON T3.`eye_colour_id` = T4.`id` WHERE T3.`full_name` = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpowers of the superhero has Helen Parr as their full name?",
    "SELECT MAX(power_name) FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON superhero.id = hero_power.hero_id WHERE superhero.full_name = 'Helen Parr' AND superhero.id IS NOT NULL GROUP BY superhero.id;\t----- bird -----\tsuperhero"
  ],
  [
    "Find the race of the superhero who weighs 108kg and is 188cm tall.",
    "SELECT DISTINCT R.name FROM superhero AS S INNER JOIN race AS R ON S.race_id = R.id INNER JOIN superhero AS SA ON S.id = SA.hero_id INNER JOIN hero_attribute AS HA ON SA.id = HA.hero_id WHERE HA.weight_kg = 108 AND HA.height_cm = 188 ORDER BY R.name ASC;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher name of the superhero ID 38?",
    "SELECT DISTINCT T2.`publisher_name` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T1.`id` = 38;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the race of the superhero with maximum attribute value?",
    "SELECT DISTINCT race.`race` FROM superhero INNER JOIN race ON superhero.`race_id` = race.`id` INNER JOIN hero_attribute ON superhero.`id` = hero_attribute.`hero_id` INNER JOIN attribute ON hero_attribute.`attribute_id` = attribute.`id` WHERE attribute.`attribute_name` = 'Strength' ORDER BY hero_attribute.`attribute_value` DESC LIMIT 1;\t----- bird -----\tsuperhero"
  ],
  [
    "Give the alignment and superpowers of the superhero named Atom IV.",
    "SELECT power_name FROM superpower INNER JOIN hero_power ON superpower.id = hero_power.power_id INNER JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.superhero_name = 'Atom IV'\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full names of superheroes with blue eyes.",
    "SELECT DISTINCT superhero.full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Blue' ORDER BY superhero.full_name ASC LIMIT 5;\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all neutral superheroes.",
    "SELECT AVG(attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` INNER JOIN attribute AS T3 ON T2.`attribute_id` = T3.`id` INNER JOIN alignment AS T4 ON T2.`alignment_id` = T4.`id` WHERE T4.`alignment` = 'Neutral' AND T2.`alignment_id` = 3;\t----- bird -----\tsuperhero"
  ],
  [
    "List the skin colour of the superheroes with 100 attribute value.",
    "SELECT DISTINCT c.`name` AS 'Skin Colour' FROM `superhero` AS s INNER JOIN `hero_attribute` AS ha ON s.`id` = ha.`hero_id` INNER JOIN `attribute` AS a ON ha.`attribute_id` = a.`id` INNER JOIN `colour` AS c ON s.`skin_colour_id` = c.`id` WHERE a.`attribute_value` = 100\t----- bird -----\tsuperhero"
  ],
  [
    "Count the good female superheroes.",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN alignment AS T3 ON T1.`alignment_id` = T3.`id` WHERE T2.`id` = 2 AND T3.`id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the names of superheroes with attribute value between 75 to 80.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`attribute_value` BETWEEN 75 AND 80\t----- bird -----\tsuperhero"
  ],
  [
    "Give the race of the blue-haired male superhero.",
    "SELECT T6.`race` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN attribute AS T3 ON T2.`attribute_id` = T3.`id` INNER JOIN gender AS T4 ON T1.`gender_id` = T4.`id` INNER JOIN colour AS T5 ON T1.`hair_colour_id` = T5.`id` INNER JOIN race AS T6 ON T1.`race_id` = T6.`id` WHERE T4.`gender` = 'Male' AND T5.`colour` = 'Blue'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the bad superheroes, what is the percentage of female superheroes?",
    "SELECT ( SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id INNER JOIN gender ON superhero.gender_id = gender.id WHERE alignment.alignment = 'Bad' AND gender.id = 2 ) * 100.0 / ( SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Bad' ) AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
    "SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.`eye_colour_id` = colour.`id` WHERE colour.`colour` = 'None'\t----- bird -----\tsuperhero"
  ],
  [
    "How strong is the Hulk?",
    "SELECT `attribute_value` FROM hero_attribute WHERE hero_id = ( SELECT `id` FROM superhero WHERE superhero_name = 'Hulk' ) AND attribute_id = ( SELECT `attribute_id` FROM attribute WHERE attribute_name = 'Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "List down Ajax's superpowers.",
    "SELECT MAX(sp.power_name) AS SuperpowerName FROM hero_power hp INNER JOIN superhero sh ON hp.hero_id = sh.id INNER JOIN superpower sp ON hp.power_id = sp.id WHERE sh.superhero_name = 'Ajax' GROUP BY sp.power_name;\t----- bird -----\tsuperhero"
  ],
  [
    "How many green-skinned villains are there in the superhero universe?",
    "SELECT COUNT(*) FROM superhero JOIN colour ON superhero.skin_colour_id = colour.id JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment = 'Bad' AND colour.colour = 'Green' AND superhero.skin_colour_id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes are in Marvel Comics?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN publisher AS T3 ON T1.`publisher_id` = T3.`id` WHERE T2.`gender` = 'Female' AND T3.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Identify superheroes who can control wind and list their names in alphabetical order.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` WHERE T3.`power_name` = 'Wind Control' ORDER BY T1.`superhero_name` ASC\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the gender of the superhero who has the ability of Phoenix Force.",
    "SELECT DISTINCT G.gender FROM superhero AS S INNER JOIN hero_power AS HP ON S.`id` = HP.`hero_id` INNER JOIN superpower AS SP ON HP.`power_id` = SP.`id` INNER JOIN gender AS G ON S.`gender_id` = G.`id` WHERE SP.`power_name` = 'Phoenix Force';\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the heaviest superhero in DC Comics.",
    "SELECT T1.`weight_kg` FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'DC Comics' ORDER BY T1.`weight_kg` DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of a non-human superhero in Dark Horse Comics?",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` INNER JOIN race AS T3 ON T1.`race_id` != 'Human' WHERE T2.`publisher_name` = 'Dark Horse Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Count the fastest superheroes.",
    "SELECT COUNT(*) FROM superhero INNER JOIN hero_attribute ON superhero.`id` = hero_attribute.`hero_id` WHERE hero_attribute.`attribute_value` = 100 AND hero_attribute.`attribute_id` = ( SELECT `attribute_id` FROM attribute WHERE `attribute_name` = 'Speed' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
    "SELECT ABS( (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics') - (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics') ) AS difference_in_superheroes;\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the weakest attribute of the Black Panther.",
    "SELECT T2.`attribute_name` FROM superhero AS T3 INNER JOIN hero_attribute AS T1 ON T3.`id` = T1.`hero_id` INNER JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` WHERE T3.`superhero_name` = 'Black Panther' ORDER BY T2.`attribute_value` ASC LIMIT 1;\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's eye colour?",
    "SELECT colour.`colour` FROM colour WHERE colour.`id` = ( SELECT eye_colour_id FROM superhero WHERE superhero.`superhero_name` = 'Abomination' )\t----- bird -----\tsuperhero"
  ],
  [
    "Name the tallest superhero.",
    "SELECT superhero.superhero_name FROM superhero INNER JOIN ( SELECT MAX(superhero.height_cm) AS tallest_height FROM superhero ) AS T ON superhero.height_cm = T.tallest_height\t----- bird -----\tsuperhero"
  ],
  [
    "Name the superhero, otherwise known as Charles Chandler.",
    "SELECT `superhero_name` FROM superhero WHERE `id` = ( SELECT `id` FROM superhero WHERE `full_name` = 'Charles Chandler' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
    "SELECT (CAST(COUNT(*) AS REAL) / CAST(SUM(COUNT(*)) OVER() AS REAL)) * 100.0 FROM superhero INNER JOIN publisher ON superhero.`publisher_id` = publisher.`id` WHERE publisher_name = 'George Lucas' AND superhero.`gender_id` = (SELECT id FROM gender WHERE gender = 'Female')\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
    "SELECT ( ( SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.`publisher_id` = publisher.`id` WHERE publisher_name = 'Marvel Comics' AND superhero.`alignment_id` = ( SELECT `id` FROM alignment WHERE alignment = 'Good' ) ) * 100.0 ) / ( SELECT COUNT(*) FROM superhero INNER JOIN publisher ON superhero.`publisher_id` = publisher.`id` WHERE publisher_name = 'Marvel Comics' ) AS percentage\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes that have John as their first name?",
    "SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` INNER JOIN hero_power AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN superpower AS T4 ON T3.`power_id` = T4.`id` WHERE T1.`full_name` LIKE 'John%' AND T2.`gender` = 'Male' AND T4.`power_name` = 'Wind Control'\t----- bird -----\tsuperhero"
  ],
  [
    "Give the hero ID of superhero with the lowest attribute value.",
    "SELECT superhero.id FROM superhero INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id INNER JOIN superhero_attribute_value ON hero_attribute.attribute_value_id = superhero_attribute_value.attribute_value_id INNER JOIN superhero_attribute_value_value ON superhero_attribute_value.value_id = superhero_attribute_value_value.value_id WHERE superhero_attribute_value_value.value = ( SELECT MIN(superhero_attribute_value_value.value) FROM superhero_attribute_value_value INNER JOIN superhero_attribute ON superhero_attribute_value_value.attribute_value_id = superhero_attribute.attribute_value_id INNER JOIN hero_attribute ON superhero_attribute.hero_id = hero_attribute.hero_id INNER JOIN attribute ON superhero_attribute.attribute_id = attribute.id )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full name of the superhero named Alien.",
    "SELECT `full_name` FROM superhero WHERE `id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Alien' )\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.",
    "SELECT DISTINCT superhero.`full_name` FROM superhero INNER JOIN colour ON superhero.`eye_colour_id` = colour.`id` INNER JOIN superhero AS T1 ON superhero.`id` = T1.`id` WHERE colour.`colour` = 'Brown' AND superhero.`weight_kg` < 100 AND superhero.`full_name` IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "List the attribute value of the superhero named Aquababy.",
    "SELECT `attribute_value` FROM hero_attribute WHERE `hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Aquababy' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the weight and race of the superhero with superhero ID 40.",
    "SELECT T1.`weight_kg`, T2.`race` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`id` = 40\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height of all neutral superheroes.",
    "SELECT AVG(T1.`height_cm`) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id` WHERE T2.`alignment` = 'Neutral'\t----- bird -----\tsuperhero"
  ],
  [
    "List the hero ID of superheroes have intellegence as their power.",
    "SELECT hero_power.`hero_id` FROM hero_power INNER JOIN superpower ON hero_power.`power_id` = superpower.`id` WHERE superpower.`power_name` = 'Intelligence'\t----- bird -----\tsuperhero"
  ],
  [
    "Give the eye colour of Blackwulf.",
    "SELECT T2.`colour` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`superhero_name` = 'Blackwulf'\t----- bird -----\tsuperhero"
  ],
  [
    "List the power of superheroes with height greater than 80% of the average height of all superheroes.",
    "SELECT power_name FROM superpower INNER JOIN hero_power ON superpower.`id` = hero_power.`power_id` INNER JOIN superhero ON superhero.`id` = hero_power.`hero_id` WHERE height_cm > ( SELECT AVG(height_cm) * 0.8 FROM superhero )\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the reference names of the drivers who are eliminated in the first period in race number 18.",
    "SELECT driverRef FROM drivers INNER JOIN qualifying ON drivers.`driverId` = qualifying.`driverId` WHERE qualifying.`q1` IN ( SELECT MAX(q1) FROM qualifying WHERE raceId = 18 )\t----- bird -----\tformula_1"
  ],
  [
    "What is the surname of the driver with the best lap time in race number 19 in the second period?",
    "SELECT DISTINCT T1.`surname`, T1.`forename`, T1.`number` FROM drivers AS T1 INNER JOIN ( SELECT T2.`driverId`, MIN(T2.`lap`) AS minLap FROM lapTimes AS T2 WHERE T2.`raceId` = 19 GROUP BY T2.`driverId` ) AS T3 ON T1.`driverId` = T3.`driverId` INNER JOIN qualifying AS Q ON T1.`driverId` = Q.`driverId` AND Q.`raceId` = 19 AND Q.`q2` = T3.`minLap`\t----- bird -----\tformula_1"
  ],
  [
    "Please list the year during which the race is held on circuits in Shanghai.",
    "SELECT raceId FROM races WHERE circuitId = ( SELECT circuitId FROM circuits WHERE location = 'Shanghai' )\t----- bird -----\tformula_1"
  ],
  [
    "Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found?",
    "SELECT url FROM races WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Circuit de Barcelona-Catalunya' )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the name of the race held on the circuits in Germany.",
    "SELECT * FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Germany' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the positions of the circuits built by the constructor Renault.",
    "SELECT races.`name` FROM races INNER JOIN constructorResults ON races.`raceId` = constructorResults.`raceId` INNER JOIN constructors ON constructorResults.`constructorId` = constructors.`constructorId` WHERE constructors.`name` = 'Renault';\t----- bird -----\tformula_1"
  ],
  [
    "How many races in the year 2010 are held on grand prixs outside Asia and Europe?",
    "SELECT DISTINCT raceId FROM races WHERE year = 2010 AND circuitId NOT IN ( SELECT circuitId FROM circuits WHERE country IN ('Japan', 'Portugal') )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the names of the races held on the circuits in Spain.",
    "SELECT races.name FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Spain'\t----- bird -----\tformula_1"
  ],
  [
    "What is the location coordinates of the circuits for Australian grand prix?",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitId` IN ( SELECT `circuitId` FROM races WHERE `name` = 'Australian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Where can I find the information about the races held on Sepang International Circuit?",
    "SELECT raceId FROM races WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time of the races held on Sepang International Circuit.",
    "SELECT raceId, year, round, name, date FROM races WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Sepang International Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "Give the coordinate position for Abu Dhabi Grand Prix.",
    "SELECT lat, lng FROM circuits WHERE circuitId = ( SELECT circuitId FROM races WHERE name = 'Abu Dhabi Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the constructor which got 1 point in the race No. 24 from?",
    "SELECT DISTINCT c.`country` FROM constructors AS c INNER JOIN constructorResults AS cr ON c.`constructorId` = cr.`constructorId` INNER JOIN races AS r ON cr.`raceId` = r.`raceId` WHERE r.`raceId` = 24 AND cr.`points` = 1 AND c.`country` IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "What's Bruno Senna's Q1 result in the qualifying race No. 354?",
    "SELECT Q.`position`, Q.`positionText` FROM qualifying AS Q INNER JOIN drivers AS D ON Q.`driverId` = D.`driverId` INNER JOIN constructors AS C ON Q.`constructorId` = C.`constructorId` WHERE Q.`qualifyId` = 354 AND D.`forename` = 'Bruno' AND D.`surname` = 'Senna';\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?",
    "SELECT DISTINCT T2.`nationality` FROM drivers AS T1 INNER JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` INNER JOIN qualifying AS Q ON T1.`driverId` = Q.`driverId` INNER JOIN races AS R ON Q.`raceId` = R.`raceId` WHERE R.`raceId` = 355 AND Q.`q2` = '0:01:40'\t----- bird -----\tformula_1"
  ],
  [
    "What is his number of the driver who finished 0:01:54 in the Q3 of qualifying race No.903?",
    "SELECT d.number FROM drivers d JOIN qualifying q ON d.driverId = q.driverId WHERE q.raceId = 903 AND q.q3 = ( SELECT MAX(q3) FROM qualifying WHERE raceId = 903 )\t----- bird -----\tformula_1"
  ],
  [
    "For the Bahrain Grand Prix in 2007, how many drivers not finished the game?",
    "SELECT DISTINCT drivers.driverId FROM drivers LEFT JOIN results ON drivers.driverId = results.driverId AND races.raceId = results.raceId AND races.year = 2007 AND races.name = 'Bahrain Grand Prix' WHERE results.raceId IS NULL AND drivers.driverId NOT IN ( SELECT driverId FROM results WHERE races.raceId = results.raceId AND races.year = 2007 AND races.name = 'Bahrain Grand Prix' );\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT `year` FROM races WHERE `raceId` = 901\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened on 2015/11/29, how many drivers finished the game?",
    "SELECT DISTINCT drivers.`driverId` FROM races INNER JOIN lapTimes ON races.`raceId` = lapTimes.`raceId` INNER JOIN drivers ON lapTimes.`driverId` = drivers.`driverId` WHERE races.`year` = 2015 AND races.`date` = '2015-11-29' AND lapTimes.`time` IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 592, who is the oldest?",
    "SELECT MAX(T1.`dob`) FROM drivers AS T1 INNER JOIN races AS T2 ON T1.`driverId` = T2.`raceId` WHERE T2.`raceId` = 592 AND T1.`dob` IS NOT NULL GROUP BY T1.`dob`\t----- bird -----\tformula_1"
  ],
  [
    "Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.",
    "SELECT drivers.forename, drivers.surname, drivers.url FROM drivers JOIN lapTimes ON drivers.driverId = lapTimes.driverId JOIN races ON lapTimes.raceId = races.raceId WHERE races.raceId = 161 AND lapTimes.time = '0:01:27' AND drivers.driverId IS NOT NULL GROUP BY drivers.driverId;\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed in race No.933, where does he come from?",
    "SELECT drivers.driverId, drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN constructors ON results.constructorId = constructors.constructorId WHERE races.year = 933 AND races.round = 933 AND results.fastestLapSpeed = ( SELECT MAX(fastestLapSpeed) FROM results AS r WHERE r.raceId = races.raceId )\t----- bird -----\tformula_1"
  ],
  [
    "Where is Malaysian Grand Prix held? Give the location coordinates.",
    "SELECT `lat`, `location` FROM circuits WHERE `circuitId` = ( SELECT `circuitId` FROM races WHERE `name` = 'Malaysian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "For the constructor which got the highest point in the race No. 9 , what is its introduction website?",
    "SELECT T2.`url` FROM constructorResults AS T1 JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`raceId` = 9 ORDER BY T1.`points` DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What's Lucas di Grassi's Q1 result in the race No. 345?",
    "SELECT q1 FROM qualifying WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lucas' AND surname = 'di Grassi' ) AND raceId = ( SELECT raceId FROM races WHERE raceId = 345 )\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?",
    "SELECT drivers.code FROM drivers JOIN ( SELECT lapTimes.driverId FROM lapTimes JOIN qualifying ON lapTimes.raceId = qualifying.raceId AND lapTimes.driverId = qualifying.driverId WHERE qualifying.q3 = '0:01:33' ORDER BY lapTimes.lap DESC LIMIT 1 ) AS fastest_lap ON drivers.driverId = fastest_lap.driverId JOIN constructorResults ON constructorResults.constructorId = ( SELECT constructorId FROM constructorResults WHERE raceId = 45 ORDER BY points DESC LIMIT 1 ) JOIN constructorStandings ON constructorStandings.constructorId = constructorResults.constructorId AND constructorStandings.raceId = 45 JOIN constructors ON constructors.constructorId = constructorStandings.constructorId JOIN driverResults ON driverResults.driverId = drivers.driverId AND driverResults.raceId = 45 GROUP BY drivers.driverId;\t----- bird -----\tformula_1"
  ],
  [
    "What is the actual finish time for Bruce McLaren in the race No.743?",
    "SELECT MAX(time) FROM lapTimes WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Bruce' AND surname = 'McLaren' AND raceId = 743 AND driverId IS NOT NULL ) AND time IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "Who finished second in the San Marino Grand Prix in 2006?",
    "SELECT driverId FROM driverStandings WHERE raceId = ( SELECT raceId FROM races WHERE name = 'San Marino Grand Prix' AND year = 2006 ) AND position = 2\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT `year` FROM races WHERE `raceId` = 901\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened in 2015/11/29, how many drivers finished the game?",
    "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers JOIN races ON races.raceId = drivers.raceId JOIN results ON results.driverId = drivers.driverId JOIN constructors ON constructors.constructorId = results.constructorId JOIN constructorResults ON constructorResults.constructorId = constructors.constructorId JOIN constructorStandings ON constructorStandings.constructorId = constructors.constructorId JOIN seasons ON seasons.year = races.year WHERE races.year = 2015 AND races.round = 29 AND results.statusId = (SELECT statusId FROM status WHERE status = 'D');\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 872, who is the youngest?",
    "SELECT T1.`driverId` FROM drivers AS T1 JOIN races AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`raceId` = 872 AND T1.`dob` IS NOT NULL GROUP BY T1.`dob` ORDER BY T1.`dob` ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "Who was the driver that got the best lap time in the race No. 348? Give his full name.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`raceId` = 348 ORDER BY T2.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed, what is his nationality?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
    "SELECT ( CAST( ( SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 853 ) - ( SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = ( SELECT MIN(raceId) FROM results WHERE raceId > 853 ) ) ) / ( SELECT MAX(fastestLapSpeed) FROM results WHERE raceId = 853 ) * 100 ) AS percentage_faster\t----- bird -----\tformula_1"
  ],
  [
    "For the drivers who took part in the race in 1983/7/16, what's their race completion rate?",
    "SELECT (COUNT(DISTINCT CASE WHEN r.time IS NOT NULL THEN d.driverId END) * 100.0 / COUNT(DISTINCT d.driverId)) AS completion_rate FROM drivers d JOIN races r ON d.driverId = r.driverId WHERE r.date = '1983-07-16';\t----- bird -----\tformula_1"
  ],
  [
    "Which year was the first Singapore Grand Prix?",
    "SELECT MIN(year) FROM races WHERE name = 'Singapore Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "How many races were there in 2005? Name all the races in descending order.",
    "SELECT * FROM races WHERE year = 2005 ORDER BY year DESC, round DESC\t----- bird -----\tformula_1"
  ],
  [
    "Name the first race recorded. What are the other races that happened within the same month and year of that race.",
    "SELECT DISTINCT circuits.`name`, races.`year` FROM races JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE races.`year` = (SELECT MIN(year) FROM races) AND races.`month` = (SELECT MIN(month) FROM races WHERE year = races.`year`) ORDER BY races.`year`, races.`month` ASC;\t----- bird -----\tformula_1"
  ],
  [
    "State the name and date of the last round of race in year 1999.",
    "SELECT T1.`name`, T1.`date` FROM races AS T1 WHERE T1.`year` = ( SELECT `year` FROM seasons WHERE `year` = 1999 ) AND T1.`round` = ( SELECT MAX(`round`) FROM races WHERE `year` = 1999 )\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the most number of races?",
    "SELECT year, COUNT(round) as num_rounds FROM races GROUP BY year ORDER BY num_rounds DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Name the races in year 2017 that are not hosted in year 2000.",
    "SELECT T1.`name` FROM races AS T1 LEFT JOIN races AS T2 ON T1.`name` = T2.`name` AND T2.`year` = 2000 WHERE T2.`name` IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "In which country was the first European Grand Prix hosted? Name the circuit and location.",
    "SELECT c.`name`, c.`location` FROM circuits AS c JOIN races AS r ON c.`circuitId` = r.`circuitId` WHERE r.`year` = ( SELECT MIN(year) FROM races WHERE name LIKE '%Grand Prix%' )\t----- bird -----\tformula_1"
  ],
  [
    "When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?",
    "SELECT raceId FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Brands Hatch'\t----- bird -----\tformula_1"
  ],
  [
    "How many seasons has Silverstone Circuit hosted the United Kindom grand prix?",
    "SELECT COUNT(DISTINCT T1.`year`) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`name` = 'Silverstone Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "Name all drivers in the 2010 Singapore Grand Prix order by their position stands.",
    "SELECT drivers.forename, drivers.surname, driverStandings.position FROM driverStandings JOIN drivers ON driverStandings.driverId = drivers.driverId JOIN races ON driverStandings.raceId = races.raceId WHERE races.name = '2010 Singapore Grand Prix' ORDER BY driverStandings.position ASC;\t----- bird -----\tformula_1"
  ],
  [
    "State the driver with the most points scored. Find his full name with that points.",
    "SELECT d.`forename`, d.`surname` FROM drivers AS d INNER JOIN ( SELECT cs.`constructorId`, cs.`driverId` FROM constructorStandings AS cs INNER JOIN ( SELECT `constructorId`, MAX(`points`) AS maxPoints FROM constructorStandings GROUP BY `constructorId` ) AS maxPointsPerConstructor ON cs.`constructorId` = maxPointsPerConstructor.`constructorId` AND cs.`points` = maxPointsPerConstructor.maxPoints LIMIT 1 ) AS topDriver ON d.`driverId` = topDriver.`driverId`;\t----- bird -----\tformula_1"
  ],
  [
    "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.",
    "SELECT T1.`constructorId`, T1.`points` FROM constructorResults AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2017 AND T2.`name` = 'Chinese Grand Prix' ORDER BY T1.`points` DESC LIMIT 3\t----- bird -----\tformula_1"
  ],
  [
    "What is the best lap time recorded? List the driver and race with such recorded lap time.",
    "SELECT T1.`driverId`, T1.`raceId` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`time` = ( SELECT MIN(time) FROM lapTimes )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix?",
    "SELECT AVG(time) FROM lapTimes WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Sebastian' AND surname = 'Vettel' ) AND raceId = ( SELECT raceId FROM races WHERE name = 'Chinese Grand Prix' AND year = 2009 )\t----- bird -----\tformula_1"
  ],
  [
    "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
    "SELECT ( SELECT COUNT(*) FROM races AS r JOIN results AS res ON r.`raceId` = res.`raceId` JOIN drivers AS d ON res.`driverId` = d.`driverId` WHERE d.`surname` = 'Hamilton' AND r.`year` >= 2010 AND r.`position` > 1 ) * 100.0 / ( SELECT COUNT(*) FROM races AS r JOIN results AS res ON r.`raceId` = res.`raceId` JOIN drivers AS d ON res.`driverId` = d.`driverId` WHERE d.`surname` = 'Hamilton' AND r.`year` >= 2010 ) AS percentage FROM races WHERE r.`year` >= 2010 GROUP BY r.`year` HAVING r.`year` >= 2010;\t----- bird -----\tformula_1"
  ],
  [
    "Name the driver with the most winning. Mention his nationality and what is his average point scores.",
    "SELECT T1.`driverId`, T1.`nationality`, AVG(T2.`points`) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`wins` = ( SELECT MAX(T3.`wins`) FROM driverStandings AS T3 )\t----- bird -----\tformula_1"
  ],
  [
    "How old is the youngest Japanese driver? What is his name?",
    "SELECT D.`surname`, D.`forename`, C.`name` AS constructorName FROM drivers AS D JOIN constructors AS C ON D.`constructorId` = C.`constructorId` JOIN ( SELECT D2.`driverId` FROM drivers AS D2 JOIN circuits AS C2 ON D2.`circuitId` = C2.`circuitId` WHERE D2.`nationality` = 'Japanese' ORDER BY D2.`dob` ASC LIMIT 1 ) AS OD ON D.`driverId` = OD.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "List circuits which host 4 f1 races from year 1990 to 2000.",
    "SELECT circuits.`circuitId`, COUNT(races.`raceId`) FROM races JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE year BETWEEN 1990 AND 2000 GROUP BY circuits.`circuitId` HAVING COUNT(races.`raceId`) >= 4\t----- bird -----\tformula_1"
  ],
  [
    "List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.",
    "SELECT DISTINCT circuits.circuitId, circuits.name, circuits.location, races.name FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'USA' AND races.year = 2006\t----- bird -----\tformula_1"
  ],
  [
    "Name the races along with its circuit name and location for f1 races hosted in September 2005.",
    "SELECT T2.`name`, T2.`location` FROM circuits AS T2 INNER JOIN races AS T1 ON T2.`circuitId` = T1.`circuitId`\t----- bird -----\tformula_1"
  ],
  [
    "Which race was Alex Yoong in when he was in track number less than 10?",
    "SELECT DISTINCT races.raceId FROM races INNER JOIN drivers ON races.driverId = drivers.driverId INNER JOIN constructors ON drivers.constructorId = constructors.constructorId WHERE drivers.surname = 'Hill' AND drivers.forename = 'Alex' AND races.position < 10\t----- bird -----\tformula_1"
  ],
  [
    "How many times did Michael Schumacher won from races hosted in Sepang International Circuit?",
    "SELECT COUNT(*) FROM ( SELECT races.raceId FROM races INNER JOIN circuits ON races.circuitId = circuits.circuitId INNER JOIN constructorResults ON races.raceId = constructorResults.raceId INNER JOIN constructors ON constructorResults.constructorId = constructors.constructorId INNER JOIN drivers ON constructors.constructorId = drivers.driverId WHERE circuits.name = 'Sepang International Circuit' AND drivers.surname = 'Schumacher' AND constructorResults.points = ( SELECT MAX(points) FROM constructorResults WHERE constructorResults.constructorId = constructors.constructorId AND constructorResults.raceId = races.raceId ) ) AS winners\t----- bird -----\tformula_1"
  ],
  [
    "State the race and year of race in which Michael Schumacher had his fastest lap.",
    "SELECT T1.milliseconds FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.surname = 'Schumacher' AND T1.milliseconds = ( SELECT MIN(T4.milliseconds) FROM lapTimes AS T4 WHERE T4.driverId = T1.driverId AND T4.raceId = T2.raceId ) AND T2.raceId IN ( SELECT T5.raceId FROM races AS T5 INNER JOIN drivers AS T6 ON T5.driverId = T6.driverId WHERE T6.surname = 'Schumacher' )\t----- bird -----\tformula_1"
  ],
  [
    "What is Eddie Irvine's average points scored in year 2000?",
    "SELECT AVG(CR.`points`) AS average_points FROM races AS R INNER JOIN constructorResults AS CR ON R.`raceId` = CR.`raceId` INNER JOIN constructors AS C ON CR.`constructorId` = C.`constructorId` INNER JOIN drivers AS D ON R.`driverId` = D.`driverId` WHERE R.`year` = 2000 AND D.`forename` = 'Eddie' AND D.`surname` = 'Irvine' GROUP BY D.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "Which was Lewis Hamilton first race? What was his points recorded for his first race event?",
    "SELECT T2.`points` FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN drivers AS T3 ON T2.`driverId` = T3.`driverId` WHERE T3.`surname` = 'Hamilton' AND T1.`year` = ( SELECT MIN(T1.`year`) FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN drivers AS T3 ON T2.`driverId` = T3.`driverId` WHERE T3.`surname` = 'Hamilton' );\t----- bird -----\tformula_1"
  ],
  [
    "List all races in 2017 and the hosting country order by date of the event.",
    "SELECT T1.`raceId`, T2.`country` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`year` = 2017 ORDER BY T1.`date`\t----- bird -----\tformula_1"
  ],
  [
    "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.",
    "SELECT T1.name AS Race, T1.year AS Year, T2.name AS Circuit, MAX(T1.laps) AS MaxLaps FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId GROUP BY T1.raceId, T1.year, T2.name ORDER BY MaxLaps DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "Among all European Grand Prix races, what is the percentage of the races were hosted in Germany?",
    "SELECT ( COUNT(DISTINCT races.raceId) * 100.0 / ( SELECT COUNT(DISTINCT races.raceId) FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'European Grand Prix' ) ) AS percentage FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.country = 'Germany' AND races.name = 'European Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What's the location coordinates of Silverstone Circuit?",
    "SELECT lat, lng FROM circuits WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Silverstone Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?",
    "SELECT c1.name FROM circuits c1 JOIN ( SELECT MAX(lat) AS lat FROM circuits WHERE name IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') ) c2 ON c1.lat = c2.lat\t----- bird -----\tformula_1"
  ],
  [
    "What's the reference name of Marina Bay Street Circuit?",
    "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "In which country can I find the circuit with the highest altitude?",
    "SELECT T1.`country` FROM circuits AS T1 ORDER BY T1.`alt` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers don't have a code?",
    "SELECT COUNT(*) FROM drivers WHERE code IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the oldest driver from?",
    "SELECT T1.`nationality` FROM drivers AS T1 INNER JOIN ( SELECT MIN(dob) AS min_dob FROM drivers ) AS T2 ON T1.`dob` = T2.`min_dob`\t----- bird -----\tformula_1"
  ],
  [
    "Please list the surnames of all the Italian drivers.",
    "SELECT DISTINCT drivers.`surname` FROM drivers INNER JOIN constructors ON drivers.`constructorId` = constructors.`constructorId` WHERE constructors.`nationality` = 'Italian';\t----- bird -----\tformula_1"
  ],
  [
    "Which website should I go to if I want to know more about Anthony Davidson?",
    "SELECT url FROM drivers WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Anthony' AND surname = 'Davidson' )\t----- bird -----\tformula_1"
  ],
  [
    "What's Lewis Hamilton's reference name?",
    "SELECT driverRef FROM drivers WHERE driverId = ( SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "Which circuit did the 2009 Spanish Grand Prix use?",
    "SELECT circuitId FROM races WHERE year = ( SELECT year FROM seasons WHERE year = 2009 )\t----- bird -----\tformula_1"
  ],
  [
    "Please list all the years that Silverstone Circuit was used in a Formula_1 race.",
    "SELECT DISTINCT races.`year` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE circuits.`name` = 'Silverstone Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "Please give more information about the Formula_1 races that used the Silverstone Circuit.",
    "SELECT DISTINCT T1.`name`, T1.`date`, T1.`circuitId`, T1.`url`, T1.`round` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`circuitRef` = 'Silverstone' GROUP BY T1.`name`, T1.`date`, T1.`circuitId`, T1.`url`, T1.`round`;\t----- bird -----\tformula_1"
  ],
  [
    "What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?",
    "SELECT races.date FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2010 AND circuits.url = 'abu_dhabi_circuit' GROUP BY races.date;\t----- bird -----\tformula_1"
  ],
  [
    "How many Formula_1 races took place on the circuits in Italy?",
    "SELECT COUNT(*) FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Italy' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.",
    "SELECT races.date FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE circuits.name = 'Barcelona' AND races.date IS NOT NULL GROUP BY races.date ORDER BY races.date ASC;\t----- bird -----\tformula_1"
  ],
  [
    "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.",
    "SELECT circuits.url, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng, circuits.alt FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009 AND circuits.url IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "What's the fastest lap time ever in a race for Lewis Hamilton?",
    "SELECT MIN(fastestLapTime) FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.",
    "SELECT DISTINCT drivers.forename, drivers.surname, results.fastestLapSpeed FROM results INNER JOIN races ON results.raceId = races.raceId INNER JOIN constructors ON results.constructorId = constructors.constructorId INNER JOIN drivers ON results.driverId = drivers.driverId WHERE results.fastestLapSpeed IS NOT NULL ORDER BY results.fastestLapSpeed DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver ranked the first in the Australian Grand Prix in 2008? Please give his reference name.",
    "SELECT DISTINCT drivers.`driverRef` FROM races AS races INNER JOIN driverStandings AS driverStandings ON races.`raceId` = driverStandings.`raceId` INNER JOIN drivers AS drivers ON driverStandings.`driverId` = drivers.`driverId` WHERE races.`year` = 2008 AND driverStandings.`position` = 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the Formula_1 races that Lewis Hamilton participated.",
    "SELECT T1.`name`, T1.`year` FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN drivers AS T3 ON T2.`driverId` = T3.`driverId` WHERE T3.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race did Lewis Hamilton rank the highest?",
    "SELECT races.name FROM races INNER JOIN driverStandings ON races.raceId = driverStandings.raceId INNER JOIN drivers ON driverStandings.driverId = drivers.driverId WHERE drivers.surname = 'Hamilton' GROUP BY races.name HAVING MIN(driverStandings.position) = ( SELECT MIN(position) FROM driverStandings WHERE driverId = ( SELECT driverId FROM drivers WHERE surname = 'Hamilton' ) AND races.raceId = driverStandings.raceId )\t----- bird -----\tformula_1"
  ],
  [
    "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
    "SELECT MAX(fastestLapSpeed) FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId JOIN constructors ON results.constructorId = constructors.constructorId WHERE races.name = 'Spanish Grand Prix' AND races.year = 2009 AND drivers.nationality = 'Spain' AND results.fastestLapSpeed IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "In which years did Lewis Hamilton participate in a Formula_1 race?",
    "SELECT DISTINCT R.`year` FROM races AS R INNER JOIN results AS RS ON R.`raceId` = RS.`raceId` INNER JOIN drivers AS D ON RS.`driverId` = D.`driverId` WHERE D.`surname` = 'Hamilton';\t----- bird -----\tformula_1"
  ],
  [
    "What was Lewis Hamilton's final rank in the 2008 Australian Grand Prix?",
    "SELECT position FROM driverStandings WHERE driverId = ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 ) ) ORDER BY position ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver was in the no. 4 grid formation when starting the race in 2008's Australian Grand Prix? Please give his forename and surname.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`raceId` = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND T2.`position` = 4\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
    "SELECT DISTINCT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 ) AND time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?",
    "SELECT T1.`lap`, T1.`time` FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`forename` = 'Lewis' AND T3.`raceId` = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) ORDER BY T1.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What's the finish time for the driver who ranked second in 2008's Australian Grand Prix?",
    "SELECT MAX(time) AS finish_time FROM lapTimes WHERE driverId = ( SELECT driverId FROM driverStandings WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 ) AND position = 2 ) AND time IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?",
    "SELECT DISTINCT C.`name` FROM constructors AS C INNER JOIN constructorStandings AS CS ON C.`constructorId` = CS.`constructorId` INNER JOIN races AS R ON CS.`raceId` = R.`raceId` WHERE R.`year` = 2008 AND CS.`position` = 1 AND C.`constructorId` NOT IN ( SELECT CS2.`constructorId` FROM constructorStandings AS CS2 INNER JOIN races AS R2 ON CS2.`raceId` = R2.`raceId` WHERE R2.`year` = 2008 AND CS2.`position` <> 1 )\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers from the USA participated in the 2008 Australian Grand Prix?",
    "SELECT DISTINCT drivers.driverId FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN seasons ON races.year = seasons.year WHERE drivers.nationality = 'American' AND races.name = 'Australian Grand Prix' AND seasons.year = 2008;\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers that finished the race in the 2008 Australian Grand Prix, how many of them have participated in Formula_1 races?",
    "SELECT COUNT(DISTINCT driverId) FROM drivers WHERE driverId IN ( SELECT DISTINCT driverId FROM races INNER JOIN results ON races.raceId = results.raceId WHERE results.statusId IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?",
    "SELECT SUM(results.points) FROM results INNER JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What is the rate of drivers completing all the laps in the 2008 Australian Grand Prix?",
    "SELECT COUNT(DISTINCT T3.`raceId`) FROM races AS T3 WHERE T3.`year` = 2008\t----- bird -----\tformula_1"
  ],
  [
    "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
    "WITH last_driver_position AS ( SELECT MAX(position) AS position FROM driverStandings WHERE raceId IN ( SELECT raceId FROM races WHERE year = 2008 ) ) SELECT (MAX(T7.`time`) - T4.`time`) / T4.`time` * 100 AS percentage_faster FROM results AS T4 INNER JOIN constructors AS T5 ON T4.`constructorId` = T5.`constructorId` INNER JOIN races AS T6 ON T4.`raceId` = T6.`raceId` INNER JOIN driverStandings AS T7 ON T4.`driverId` = T7.`driverId` INNER JOIN last_driver_position AS T8 ON T7.`position` = T8.`position` WHERE T6.`year` = 2008\t----- bird -----\tformula_1"
  ],
  [
    "How many circuits are there in Melbourne, Australia?",
    "SELECT COUNT(DISTINCT circuits.circuitId) FROM circuits INNER JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'Australia' AND circuits.location = 'Melbourne' AND races.year IN (SELECT year FROM seasons);\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the US circuits.",
    "SELECT DISTINCT circuits.location, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN seasons ON races.year = seasons.year WHERE seasons.year = (SELECT MAX(year) FROM seasons) AND circuits.location LIKE '%USA%';\t----- bird -----\tformula_1"
  ],
  [
    "How many British drivers were born after 1980?",
    "SELECT COUNT(DISTINCT drivers.driverId) FROM drivers INNER JOIN seasons ON drivers.driverId = seasons.driverId INNER JOIN constructors ON drivers.constructorId = constructors.constructorId WHERE constructors.nationality = 'British' AND seasons.year > 1980;\t----- bird -----\tformula_1"
  ],
  [
    "What are the average points of British constructors?",
    "SELECT T1.`constructorId` FROM constructors AS T1 WHERE T1.`nationality` = 'British'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor has the highest point?",
    "SELECT constructorId FROM constructorStandings WHERE points = ( SELECT MAX(points) FROM constructorStandings )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the constructor names with 0 points at race 291.",
    "SELECT constructors.name FROM constructors INNER JOIN constructorResults ON constructors.constructorId = constructorResults.constructorId WHERE constructorResults.raceId = ( SELECT raceId FROM races WHERE raceId = 291 ) AND constructorResults.points = 0\t----- bird -----\tformula_1"
  ],
  [
    "How many Japanese constructors have 0 points in 2 races?",
    "SELECT T1.`constructorId` FROM constructors AS T1 INNER JOIN constructorResults AS T3 ON T1.`constructorId` = T3.`constructorId` WHERE T1.`nationality` = 'Japanese' GROUP BY T1.`constructorId` HAVING COUNT(T3.`raceId`) = 2 AND SUM(T3.`points`) = 0\t----- bird -----\tformula_1"
  ],
  [
    "Which constructors have been ranked 1?",
    "SELECT DISTINCT constructorStandings.`constructorId` FROM constructorStandings WHERE constructorStandings.`position` = 1\t----- bird -----\tformula_1"
  ],
  [
    "How many French constructors have a lap number of over 50?",
    "SELECT COUNT(DISTINCT C.`constructorId`) FROM constructors AS C INNER JOIN constructorResults AS CR ON C.`constructorId` = CR.`constructorId` INNER JOIN ( SELECT DISTINCT R.`raceId` FROM races AS R WHERE R.`lap` > 50 ) AS RL ON CR.`raceId` = RL.`raceId` WHERE C.`nationality` = 'France';\t----- bird -----\tformula_1"
  ],
  [
    "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What is the average time in seconds of champion for each year?",
    "SELECT races.`year`, AVG(CAST(SUBSTR(results.`time`, 1, INSTR(results.`time`, ':') - 1) AS REAL)) AS average_time_seconds FROM results INNER JOIN drivers ON results.`driverId` = drivers.`driverId` INNER JOIN races ON results.`raceId` = races.`raceId` INNER JOIN constructorStandings ON races.`raceId` = constructorStandings.`raceId` INNER JOIN constructors ON constructorStandings.`constructorId` = constructors.`constructorId` INNER JOIN status ON results.`statusId` = status.`statusId` WHERE status.`status` = 'R' AND constructorStandings.`points` = ( SELECT MAX(points) FROM constructorStandings cs2 WHERE cs2.`constructorId` = constructors.`constructorId` AND cs2.`raceId` = races.`raceId` ) GROUP BY races.`year` ORDER BY races.`year` ASC;\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.",
    "SELECT D.`forename`, D.`surname` FROM drivers AS D JOIN races AS R ON D.`driverId` = R.`driverId` JOIN constructorResults AS CR ON R.`raceId` = CR.`raceId` JOIN constructorStandings AS CS ON CR.`constructorId` = CS.`constructorId` JOIN seasons AS S ON R.`year` = S.`year` WHERE D.`dob` > '1975-01-01' AND CS.`position` = 2 GROUP BY D.`forename`, D.`surname` ORDER BY D.`forename`, D.`surname` ASC;\t----- bird -----\tformula_1"
  ],
  [
    "How many Italian drivers haven't finished the race?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT drivers.driverId FROM drivers INNER JOIN races ON drivers.driverId = races.driverId WHERE drivers.nationality = 'Italian' AND races.time IS NULL ) AS ItalianDriversWithoutFinish;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver has the fastest lap time? Please give their forenames and surnames.",
    "SELECT MIN(results.`fastestLapTime`) AS fastest_lap_time FROM results AS results\t----- bird -----\tformula_1"
  ],
  [
    "What is the fastest lap number of the champion in 2009?",
    "SELECT T1.`fastestLap` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`constructorId` = ( SELECT T1.`constructorId` FROM constructorStandings AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`position` = 1 AND T2.`year` = 2009 ) ORDER BY T1.`position` ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What is the average of fastest lap speed in the 2009 Spanish Grand Prix race?",
    "SELECT AVG(fastestLapSpeed) FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009 )\t----- bird -----\tformula_1"
  ],
  [
    "Which race has the shortest actual finishing time? Please give the name and year.",
    "SELECT T1.`name`, T1.`year` FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`milliseconds` = ( SELECT MIN(T3.`milliseconds`) FROM results AS T3 WHERE T3.`milliseconds` IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
    "SELECT ( SELECT COUNT(DISTINCT d.driverId) FROM drivers AS d JOIN races AS r ON d.driverId = r.driverId JOIN lapTimes AS lt ON d.driverId = lt.driverId AND r.raceId = lt.raceId WHERE d.dob < '1985-01-01' AND r.laps > 50 AND r.year BETWEEN 2000 AND 2005 AND lt.lap IS NOT NULL ) * 100.0 / ( SELECT COUNT(DISTINCT d.driverId) FROM drivers AS d JOIN races AS r ON d.driverId = r.driverId WHERE r.year BETWEEN 2000 AND 2005 AND r.laps IS NOT NULL ) AS percentage\t----- bird -----\tformula_1"
  ],
  [
    "How many French drivers who obtain the laptime less than 02:00.00?",
    "SELECT COUNT(DISTINCT drivers.driverId) AS FrenchDriversWithLapTimeUnder2Min FROM drivers INNER JOIN nationality ON drivers.nationality = nationality.nationality INNER JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE nationality.nationality = 'French' AND CAST(SUBSTR(lapTimes.time, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(lapTimes.time, 4, 2) AS INTEGER) < 120;\t----- bird -----\tformula_1"
  ],
  [
    "List out the code for drivers who have nationality in America.",
    "SELECT DISTINCT T3.`code` FROM drivers AS T3 JOIN constructors AS T4 ON T3.`constructorId` = T4.`constructorId` WHERE T3.`nationality` = 'America' AND T3.`number` IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "List out the Id number of races which were hold in 2009.",
    "SELECT raceId FROM races WHERE year = 2009\t----- bird -----\tformula_1"
  ],
  [
    "How many driver participated in race ID number 18?",
    "SELECT COUNT(DISTINCT drivers.driverId) FROM races JOIN drivers ON races.driverId = drivers.driverId WHERE races.raceId = 18;\t----- bird -----\tformula_1"
  ],
  [
    "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?",
    "SELECT COUNT(*) AS DutchYoungestDrivers FROM ( SELECT drivers.driverId, drivers.forename, drivers.surname, drivers.country FROM drivers INNER JOIN circuits ON drivers.circuitId = circuits.circuitId INNER JOIN races ON races.circuitId = circuits.circuitId INNER JOIN qualifying ON qualifying.driverId = drivers.driverId INNER JOIN results ON results.driverId = drivers.driverId AND results.raceId = races.raceId WHERE drivers.forename != 'Max' GROUP BY drivers.driverId ORDER BY MAX(drivers.birth_date) ASC LIMIT 3 ) AS YoungestDrivers WHERE YoungestDrivers.country IN ('Netherlands', 'Netherlands');\t----- bird -----\tformula_1"
  ],
  [
    "What is reference name of Robert Kubica?",
    "SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'\t----- bird -----\tformula_1"
  ],
  [
    "How many Australian drivers who were born in 1980?",
    "SELECT DISTINCT drivers.driverId FROM drivers JOIN circuits ON races.circuitId = circuits.circuitId JOIN seasons ON races.year = seasons.year JOIN qualifying ON races.raceId = qualifying.raceId JOIN constructors ON qualifying.constructorId = constructors.constructorId JOIN driverStandings ON races.raceId = driverStandings.raceId AND drivers.driverId = driverStandings.driverId WHERE drivers.nationality = 'Australian' AND YEAR(drivers.dob) = 1980;\t----- bird -----\tformula_1"
  ],
  [
    "List out top 3 German drivers who were born from 1980-1990 and have the earliest lap time.",
    "SELECT DISTINCT T1.`driverId`, T1.`surname`, T1.`forename`, T1.`dob`, MIN(T1.`lap`) AS earliest_lap FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN constructors AS T3 ON T1.`constructorId` = T3.`constructorId` WHERE T1.`dob` BETWEEN '1980-01-01' AND '1990-12-31' AND T3.`nationality` = 'German' GROUP BY T1.`driverId` ORDER BY earliest_lap ASC LIMIT 3;\t----- bird -----\tformula_1"
  ],
  [
    "Please state the reference name of the oldest German driver.",
    "SELECT d.driverRef FROM drivers d WHERE d.dob = ( SELECT MIN(dob) FROM drivers WHERE nationality = 'German' )\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers.",
    "SELECT DISTINCT drivers.driverId, drivers.number, drivers.code FROM drivers INNER JOIN ( SELECT lapTimes.driverId, lapTimes.raceId, MAX(lapTimes.lap) AS fastestLap FROM lapTimes INNER JOIN races ON lapTimes.raceId = races.raceId WHERE races.year = (SELECT year FROM seasons WHERE year = 1971) GROUP BY lapTimes.raceId ) AS fastestLaps ON drivers.driverId = fastestLaps.driverId INNER JOIN races ON fastestLaps.raceId = races.raceId INNER JOIN drivers ON drivers.driverId = fastestLaps.driverId WHERE drivers.dob = '1971-01-01' ORDER BY drivers.number ASC;\t----- bird -----\tformula_1"
  ],
  [
    "List out top 10 Spanish drivers who were born before 1982 and have the latest lap time.",
    "SELECT T3.`surname`, T3.`forename`, MAX(T6.`time`) AS latest_lap_time FROM drivers AS T3 INNER JOIN constructors AS T4 ON T3.`constructorId` = T4.`constructorId` INNER JOIN races AS T5 ON T4.`constructorId` = T5.`constructorId` INNER JOIN lapTimes AS T6 ON T3.`driverId` = T6.`driverId` WHERE T3.`nationality` = 'Spanish' AND T3.`dob` < '1982-01-01' GROUP BY T3.`surname`, T3.`forename`\t----- bird -----\tformula_1"
  ],
  [
    "State the racing year which has the fastest lap time?",
    "SELECT subquery.year, subquery.fastest_lap_time FROM ( SELECT races.year, MIN(COALESCE(results.fastestLapTime, '999999999')) AS fastest_lap_time FROM races LEFT JOIN results ON races.raceId = results.raceId GROUP BY races.year ) AS subquery ORDER BY subquery.fastest_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the lowest speed of lap time?",
    "SELECT r.year, MAX(lt.time) AS max_lap_time FROM races r INNER JOIN lapTimes lt ON r.raceId = lt.raceId GROUP BY r.year ORDER BY max_lap_time ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
    "SELECT DISTINCT T1.driverId FROM lapTimes AS T1 INNER JOIN ( SELECT raceId, MIN(time) AS fastest_lap_time FROM lapTimes WHERE lap = 1 GROUP BY raceId ) AS T2 ON T1.raceId = T2.raceId ORDER BY T2.fastest_lap_time ASC LIMIT 5;\t----- bird -----\tformula_1"
  ],
  [
    "From race no. 50 to 100, how many finishers have been disqualified?",
    "SELECT COUNT(*) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2\t----- bird -----\tformula_1"
  ],
  [
    "How many times the circuits were held in Austria? Please give their location and coordinates.",
    "SELECT circuits.circuitId, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE circuits.country = 'Austria' GROUP BY circuits.circuitId, circuits.name, circuits.location, circuits.country, circuits.lat, circuits.lng;\t----- bird -----\tformula_1"
  ],
  [
    "What race number has the most finishers?",
    "SELECT races.`raceId` FROM races JOIN results ON races.`raceId` = results.`raceId` WHERE results.`time` IS NOT NULL GROUP BY races.`raceId` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.",
    "SELECT DISTINCT T2.`driverRef` FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`q2` IS NOT NULL AND T1.`raceId` = 23 AND T2.`dob` IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "On what year did the youngest driver had his first qualifying race? State the name, date and time of the race.",
    "SELECT T1.`year`, T1.`date`, T1.`time` FROM races AS T1 INNER JOIN qualifying AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN ( SELECT `driverId` FROM drivers WHERE dob IS NOT NULL ORDER BY dob ASC LIMIT 1 ) AS T3 ON T2.`driverId` = T3.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "How many American drivers have been disqualified from the race.",
    "SELECT COUNT(DISTINCT T1.`driverId`) FROM drivers AS T1 INNER JOIN races AS T2 ON T1.`driverId` = T2.`raceId` INNER JOIN results AS T3 ON T1.`driverId` = T3.`driverId` AND T2.`raceId` = T3.`raceId` WHERE T1.`nationality` = 'American' AND T3.`statusId` = 2\t----- bird -----\tformula_1"
  ],
  [
    "Which of the Italian constructor got the highest point to date? Give its introduction website?",
    "SELECT url FROM constructors WHERE constructorId = ( SELECT constructorId FROM constructors WHERE nationality = 'Italian' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the website of the constructor who tallied the most total wins.",
    "SELECT T4.`url` FROM constructors AS T4 INNER JOIN ( SELECT T3.`constructorId` FROM constructorStandings AS T3 GROUP BY T3.`constructorId` ORDER BY SUM(T3.`wins`) DESC LIMIT 1 ) AS T5 ON T4.`constructorId` = T5.`constructorId`\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers who participated in the French Grand Prix, who has the slowest time in the 3rd lap.",
    "SELECT DISTINCT T1.`driverId`, MAX(T1.`time`) AS slowest_time FROM lapTimes AS T1 JOIN races AS R1 ON T1.`raceId` = R1.`raceId` WHERE R1.`name` = 'French Grand Prix' AND T1.`lap` = 3 GROUP BY T1.`driverId` ORDER BY slowest_time DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "In which race did the fastest 1st lap time was recorded? Please indicate the time in milliseconds.",
    "SELECT time FROM lapTimes WHERE raceId = ( SELECT raceId FROM lapTimes WHERE lap = 1 ORDER BY time ASC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
    "SELECT T1.`time` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`year` = 2006 AND T2.`name` = 'United States Grand Prix' ORDER BY T1.`time` ASC LIMIT 10\t----- bird -----\tformula_1"
  ],
  [
    "List down top 5 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
    "SELECT DISTINCT T3.surname FROM drivers AS T3 INNER JOIN pitStops AS T5 ON T3.driverId = T5.driverId INNER JOIN races AS T8 ON T5.raceId = T8.raceId INNER JOIN circuits AS T6 ON T8.circuitId = T6.circuitId INNER JOIN constructors AS T7 ON T8.constructorId = T7.constructorId WHERE T3.nationality = 'German' AND (YEAR(T3.dob) BETWEEN 1980 AND 1985) ORDER BY (SELECT AVG(CAST(T5.duration AS REAL)) FROM pitStops AS T5 WHERE T5.driverId = T3.driverId) ASC LIMIT 5;\t----- bird -----\tformula_1"
  ],
  [
    "Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.",
    "SELECT time FROM lapTimes WHERE driverId = ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE name = 'Canadian Grand Prix' AND year = 2008 ) AND position = 1 )\t----- bird -----\tformula_1"
  ],
  [
    "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
    "SELECT c.url FROM constructors c JOIN constructorResults cr ON c.constructorId = cr.constructorId JOIN races r ON cr.raceId = r.raceId WHERE r.name = 'Singapore Grand Prix' AND r.year = 2009 AND cr.points = ( SELECT MAX(points) FROM constructorResults WHERE raceId = r.raceId );\t----- bird -----\tformula_1"
  ],
  [
    "What is the full name and date of birth of Austrian drivers born between 1981 and 1991?",
    "SELECT T1.`forename`, T1.`surname`, T1.`dob` FROM ( SELECT * FROM drivers WHERE nationality = 'Austrian' ) AS T1 WHERE T1.`dob` BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1"
  ],
  [
    "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.",
    "SELECT D.`forename`, D.`surname`, C.`name`, C.`url`, R.`date` FROM drivers D JOIN constructors C ON D.`nationality` = C.`nationality` JOIN races R ON R.`circuitId` = (SELECT `circuitId` FROM circuits WHERE `name` = 'Zolder') JOIN driverStandings DS ON DS.`driverId` = D.`driverId` AND DS.`raceId` = R.`raceId` WHERE DS.`position` = 1 AND R.`date` BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY R.`date` DESC;\t----- bird -----\tformula_1"
  ],
  [
    "In which location does the Hungaroring circuit located? Also, find the country and coordinates of this circuit?",
    "SELECT country, location, lat, lng FROM circuits WHERE circuitId = ( SELECT circuitId FROM circuits WHERE name = 'Hungaroring' )\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
    "SELECT MAX(T1.`points`), T2.`name`, T3.`nationality` FROM constructorResults AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN constructors AS T3 ON T1.`constructorId` = T3.`constructorId` WHERE T2.`name` = 'Monaco Grand Prix' AND T2.`year` BETWEEN 1980 AND 2010 GROUP BY T2.`name`, T3.`constructorId` ORDER BY MAX(T1.`points`) DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What is the average score of Lewis Hamilton among all the Turkish Grand Prix?",
    "SELECT AVG(points) AS average_score FROM constructorResults JOIN races ON constructorResults.raceId = races.raceId JOIN constructors ON constructorResults.constructorId = constructors.constructorId JOIN driverStandings ON constructorResults.constructorId = driverStandings.constructorId WHERE races.name = 'Turkish Grand Prix' AND constructors.name = 'Lewis Hamilton' AND constructors.constructorRef = 'Mercedes' AND driverStandings.driverId = (SELECT driverId FROM driverStandings WHERE raceId = races.raceId AND driverId = (SELECT driverId FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')) AND constructorResults.points IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "What is the annual average number of races held during the first 10 years of the 21st century?",
    "SELECT COUNT(*) FROM races WHERE year BETWEEN 2000 AND 2010\t----- bird -----\tformula_1"
  ],
  [
    "Which citizenship do the vast majority of the drivers hold?",
    "SELECT T3.`nationality` FROM drivers AS T3 GROUP BY T3.`nationality` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
    "SELECT MAX(T2.wins) FROM constructorStandings AS T2 JOIN ( SELECT DISTINCT T1.constructorId FROM driverStandings AS T1 JOIN races AS T4 ON T1.raceId = T4.raceId JOIN drivers AS T5 ON T1.driverId = T5.driverId JOIN qualifying AS T6 ON T1.raceId = T6.raceId JOIN constructors AS T7 ON T1.constructorId = T7.constructorId WHERE T1.position = 91 AND T4.year = (SELECT year FROM seasons WHERE raceId = T4.raceId) ) AS T3 ON T2.constructorId = T3.constructorId GROUP BY T2.constructorId ORDER BY T2.wins DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?",
    "SELECT races.name FROM races JOIN results ON races.raceId = results.raceId WHERE results.fastestLapTime = ( SELECT MIN(fastestLapTime) FROM results )\t----- bird -----\tformula_1"
  ],
  [
    "Which racetrack hosted the most recent race? Indicate the full location.",
    "SELECT circuits.`name`, circuits.`location`, circuits.`country` FROM races JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.date = ( SELECT MAX(date) FROM races )\t----- bird -----\tformula_1"
  ],
  [
    "What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?",
    "SELECT drivers.forename, drivers.surname FROM drivers JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN races ON races.raceId = qualifying.raceId JOIN circuits ON races.circuitId = circuits.circuitId WHERE races.year = 2008 AND qualifying.position = 1 AND circuits.location = 'Marina Bay Street Circuit' GROUP BY drivers.forename, drivers.surname LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.",
    "SELECT CONCAT(d.forename, ' ', d.surname) AS full_name, d.nationality, r.name AS race_name FROM drivers AS d JOIN races AS r ON d.driverId = r.driverId JOIN ( SELECT driverId, MIN(dob) AS dob FROM drivers WHERE dob IS NOT NULL GROUP BY driverId ) AS youngest ON d.driverId = youngest.driverId AND d.dob = youngest.dob JOIN seasons AS s ON r.year = s.year JOIN qualifying AS q ON d.driverId = q.driverId AND r.raceId = q.raceId WHERE r.name = 'Zolder' ORDER BY youngest.dob ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "How many accidents did the driver who had the highest number accidents in the Canadian Grand Prix have?",
    "SELECT D.`surname`, D.`forename`, COUNT(*) AS accident_count FROM results AS R INNER JOIN drivers AS D ON R.`driverId` = D.`driverId` INNER JOIN ( SELECT R3.`driverId` FROM races AS R3 INNER JOIN results AS R4 ON R3.`raceId` = R4.`raceId` WHERE R3.`name` = 'Canadian Grand Prix' AND R4.`statusId` = 3 GROUP BY R4.`driverId` ORDER BY COUNT(R4.`statusId`) DESC LIMIT 1 ) AS SubQuery ON D.`driverId` = SubQuery.`driverId` WHERE R.`statusId` = 3 GROUP BY D.`driverId`\t----- bird -----\tformula_1"
  ],
  [
    "How many wins was achieved by the oldest racer? Indicate his/her full name.",
    "SELECT CONCAT(drivers.`forename`, ' ', drivers.`surname`) AS full_name, COUNT(*) AS wins FROM constructorStandings AS T1 INNER JOIN constructors ON T1.`constructorId` = constructors.`constructorId` INNER JOIN drivers ON T1.`driverId` = drivers.`driverId` WHERE T1.`wins` > 0 GROUP BY T1.`constructorId`, drivers.`driverId` ORDER BY wins DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time a driver had ever spent at a pit stop?",
    "SELECT MAX(pitStops.`duration`) FROM pitStops\t----- bird -----\tformula_1"
  ],
  [
    "Among all the lap records set on various circuits, what is the time for the fastest one?",
    "SELECT circuits.circuitId, MIN(lapTimes.time) AS fastestLapTime FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN circuits ON races.circuitId = circuits.circuitId GROUP BY circuits.circuitId;\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time that Lewis Hamilton had spent at a pit stop?",
    "SELECT MAX(duration) AS longest_pit_stop_duration FROM pitStops WHERE duration IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?",
    "SELECT T1.lap FROM pitStops AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.name = 'Australian Grand Prix' AND T2.year = 2011 AND T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T1.lap = ( SELECT MAX(lap) FROM pitStops AS T4 INNER JOIN races AS T5 ON T4.raceId = T5.raceId WHERE T5.name = 'Australian Grand Prix' AND T5.year = 2011 )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time each driver spent at the pit stop during the 2011 Australian Grand Prix.",
    "SELECT drivers.driverId, drivers.forename, drivers.surname, races.name AS race_name, races.date AS race_date, races.time AS race_time, pitStops.duration AS pit_stop_duration FROM drivers JOIN races ON drivers.driverId = lapTimes.driverId JOIN lapTimes ON races.raceId = lapTimes.raceId AND races.year = 2011 JOIN pitStops ON drivers.driverId = pitStops.driverId AND races.raceId = pitStops.raceId WHERE races.name = '2011 Australian Grand Prix' AND races.date = '2011-03-14' ORDER BY pitStops.duration ASC; -- Changed from DESC to ASC to get the shortest duration first\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
    "SELECT T1.`fastestLapTime` FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T1.`raceId` = T3.`raceId` WHERE T2.`surname` = 'Hamilton' AND T1.`fastestLapTime` IS NOT NULL ORDER BY T1.`fastestLapTime` ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the shortest lap time ever record in a Formula_1 race? Please give his full name.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`time` = ( SELECT MIN(time) AS shortest_lap_time FROM lapTimes )\t----- bird -----\tformula_1"
  ],
  [
    "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?",
    "SELECT T1.`position` FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`forename` = 'Lewis' AND T2.`surname` = 'Hamilton' ORDER BY T1.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record for the Austrian Grand Prix Circuit?",
    "SELECT MIN(CAST(SUBSTR(time, 6) AS REAL)) AS lap_record FROM lapTimes JOIN races ON lapTimes.`raceId` = races.`raceId` WHERE races.`circuitId` = ( SELECT circuitId FROM circuits WHERE name = 'Yeongam County' );\t----- bird -----\tformula_1"
  ],
  [
    "Please list the lap records for the circuits in Italy.",
    "SELECT T1.`lap`, T1.`time` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`circuitId` IN ( SELECT circuitId FROM circuits WHERE country = 'Italy' )\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?",
    "SELECT DISTINCT s.year FROM seasons s JOIN races r ON s.year = r.year JOIN circuits c ON r.circuitId = c.circuitId JOIN lapTimes lt ON r.raceId = lt.raceId AND c.name = 'Austrian Grand Prix Circuit' WHERE lt.time = ( SELECT MIN(time) AS fastest_lap_time FROM lapTimes WHERE raceId = r.raceId AND circuitId = c.circuitId );\t----- bird -----\tformula_1"
  ],
  [
    "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
    "SELECT raceId FROM races WHERE name = 'Austrian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the circuits whose lap record is 1:29.488.",
    "SELECT T1.`circuitId`, T1.`name`, T1.`location`, T1.`lat`, T1.`lng` FROM circuits AS T1 INNER JOIN lapTimes AS T2 ON T1.`circuitId` = T2.`raceId` WHERE T2.`time` = '1:29.488'\t----- bird -----\tformula_1"
  ],
  [
    "What was the average time in milliseconds Lewis Hamilton spent at a pit stop during Formula_1 races?",
    "SELECT AVG(pitStops.`duration`) FROM pitStops INNER JOIN races ON pitStops.`raceId` = races.`raceId` WHERE races.`name` LIKE '%Grand Prix%'\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?",
    "SELECT AVG(milliseconds) FROM lapTimes WHERE raceId IN ( SELECT raceId FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Italy' ) )\t----- bird -----\tformula_1"
  ],
  [
    "Which player has the highest overall rating? Indicate the player's api id.",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`overall_rating` = ( SELECT MAX(T3.`overall_rating`) FROM Player_Attributes AS T3 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the height of the tallest player? Indicate his name.",
    "SELECT Player.player_name FROM Player INNER JOIN Player_Attributes AS T1 ON Player.player_api_id = T1.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the player with the lowest potential?",
    "SELECT T1.`preferred_foot` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`potential` = ( SELECT MIN(T3.`potential`) FROM Player_Attributes AS T3 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
    "SELECT COUNT(*) FROM ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 WHERE T1.`overall_rating` BETWEEN 60 AND 65 ) AS T1 INNER JOIN ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 WHERE T1.`defensive_work_rate` = 'low' ) AS T2\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`crossing` IN ( SELECT T3.`crossing` FROM Player_Attributes AS T3 ORDER BY T3.`crossing` DESC LIMIT 5 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most goals in the 2016 season?",
    "SELECT League.name FROM League JOIN ( SELECT League.id, SUM(Match.home_team_goal + Match.away_team_goal) AS total_goals FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2015/2016' GROUP BY League.id ) AS subquery ORDER BY total_goals DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which home team had lost the fewest matches in the 2016 season?",
    "SELECT T2.team_long_name FROM Team AS T2 JOIN ( SELECT T3.home_team_api_id, COUNT(*) AS total_losses FROM Match AS T3 WHERE T3.season = '2015/2016' AND (T3.home_team_goal - T3.away_team_goal) < 0 GROUP BY T3.home_team_api_id ) AS T4 ON T2.team_api_id = T4.home_team_api_id ORDER BY T4.total_losses ASC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Indicate the full names of the top 10 players with the highest number of penalties.",
    "SELECT T2.`player_name` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` ORDER BY T1.`penalties` DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "In Scotland Premier League, which away team won the most during the 2010 season?",
    "SELECT T2.away_team_api_id FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.league_id WHERE T1.name = 'Scotland Premier League' AND T2.season = '2009/2010' GROUP BY T2.away_team_api_id ORDER BY SUM(T2.away_team_goal - T2.home_team_goal) DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed?",
    "SELECT T2.`team_long_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` ORDER BY T1.`buildUpPlaySpeed` DESC LIMIT 4\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which League had the most matches end as draw in the 2016 season?",
    "SELECT T1.name FROM League AS T1 INNER JOIN ( SELECT season, COUNT(*) AS draw_matches FROM Match WHERE season = '2015/2016' AND home_team_goal = away_team_goal GROUP BY season ORDER BY draw_matches DESC LIMIT 1 ) AS T2 ON T1.id = T2.season;\t----- bird -----\teuropean_football_2"
  ],
  [
    "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
    "SELECT P.`gender` FROM Player P JOIN ( SELECT PA.player_api_id, (STRFTIME('%Y-%m-%d', 'now') - STRFTIME('%Y-%m-%d', PA.date)) AS AGE FROM Player_Attributes PA WHERE PA.sprint_speed >= 97 AND PA.date BETWEEN '2013-01-01 00:00:00' AND '2015-12-31 00:00:00' GROUP BY PA.player_api_id ) AS T ON P.`player_api_id` = T.`player_api_id` ORDER BY T.AGE ASC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the name of the league with the highest matches of all time and how many matches were played in the said league.",
    "SELECT League.name, COUNT(Match.league_id) AS MatchCount FROM League JOIN Match ON League.id = Match.league_id GROUP BY League.id ORDER BY MatchCount DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average height of players born between 1990 and 1995?",
    "SELECT AVG(height) FROM Player WHERE birthday >= '1990-01-01 00:00:00' AND birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the players' api id who had the highest above average overall ratings in 2010.",
    "SELECT P.`player_api_id` FROM Player_Attributes AS P INNER JOIN ( SELECT AVG(overall_rating) AS avg_rating FROM Player_Attributes WHERE substr(date,1,4) = '2010' ) AS T ON P.`overall_rating` > T.`avg_rating` WHERE substr(date,1,4) = '2010'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.",
    "SELECT DISTINCT T2.`team_fifa_api_id` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlaySpeed` BETWEEN 51 AND 59\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the long name of teams with above-average build-up play passing in 2012.",
    "SELECT DISTINCT Team.team_long_name FROM Team INNER JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id INNER JOIN Player ON Team.team_api_id = Player.player_api_id INNER JOIN League ON Team.country_id = League.id INNER JOIN ( SELECT Team_Attributes.team_api_id, SUM(buildUpPlayPassing) / COUNT(Player.player_api_id) AS avg_buildUpPlayPassing FROM Team_Attributes INNER JOIN Player ON Team_Attributes.team_api_id = Player.player_api_id WHERE strftime('%Y', Player.date) = '2012' GROUP BY Team_Attributes.team_api_id ) AS AvgTeamPassing ON Team.team_api_id = AvgTeamPassing.team_api_id WHERE AvgTeamPassing.avg_buildUpPlayPassing > ( SELECT SUM(buildUpPlayPassing) / COUNT(DISTINCT Player.player_api_id) FROM Team_Attributes INNER JOIN Player ON Team_Attributes.team_api_id = Player.player_api_id WHERE strftime('%Y', Player.date) = '2012' ) AND strftime('%Y', Team.date) = '2012';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",
    "SELECT ROUND( ( ( SELECT COUNT(*) FROM Player_Attributes pa JOIN Player p ON p.player_api_id = pa.player_api_id WHERE pa.preferred_foot = 'left' AND p.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00' ) / ( SELECT COUNT(*) FROM Player_Attributes pa JOIN Player p ON p.player_api_id = pa.player_api_id ) * 100, 2 ) AS percentage_left_footed_players_born_1987_to_1992 FROM Player_Attributes pa JOIN Player p ON p.player_api_id = pa.player_api_id WHERE p.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00' GROUP BY p.player_api_id;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 5 leagues in ascending order of the number of goals made in all seasons combined.",
    "SELECT T2.id, SUM(T3.home_team_goal + T3.away_team_goal) AS total_goals FROM League AS T2 INNER JOIN ( SELECT T1.team_api_id, T3.league_id FROM Team AS T1 INNER JOIN Team_Attributes AS T3 ON T1.team_api_id = T3.team_api_id INNER JOIN Match AS T3 ON T1.team_api_id = T3.home_team_api_id OR T1.team_api_id = T3.away_team_api_id GROUP BY T1.team_api_id, T3.league_id ) AS T3 GROUP BY T2.id ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "Find the average number of long-shot done by Ahmed Samir Farag.",
    "SELECT AVG(long_shots) FROM Player_Attributes WHERE player_fifa_api_id IN ( SELECT player_fifa_api_id FROM Player WHERE player_name = 'Ahmed Samir Farag' AND player_fifa_api_id IS NOT NULL );\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
    "SELECT PL.`player_name`, AVG(P.`heading_accuracy`) AS avg_heading_accuracy FROM Player_Attributes AS P INNER JOIN Player AS PL ON P.`player_api_id` = PL.`player_api_id` WHERE PL.`height` > 180 GROUP BY P.`player_api_id` ORDER BY avg_heading_accuracy DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
    "SELECT T1.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team ON T1.team_api_id = Team.team_api_id INNER JOIN League ON Team.league_id = League.id INNER JOIN ( SELECT Match.home_team_api_id, SUM(Match.chanceCreationPassing) AS total_chance_creation_passing, COUNT(Match.id) AS match_count FROM Match WHERE Match.date >= '2014-01-01' AND Match.date < '2014-01-31' GROUP BY Match.home_team_api_id ) AS T2 ON Team.team_api_id = T2.home_team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' GROUP BY T1.team_long_name HAVING total_chance_creation_passing / match_count < ( SELECT AVG(total_chance_creation_passing / match_count) FROM ( SELECT Match.home_team_api_id, SUM(Match.chanceCreationPassing) AS total_chance_creation_passing, COUNT(Match.id) AS match_count FROM Match WHERE Match.date >= '2014-01-01' AND Match.date < '2014-01-31' GROUP BY Match.home_team_api_id ) AS T3 ) ORDER BY total_chance_creation_passing / match_count DESC;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
    "SELECT DISTINCT League.name FROM League INNER JOIN ( SELECT home_team_api_id, AVG(home_team_goal) AS avg_home_goals, AVG(away_team_goal) AS avg_away_goals FROM Match WHERE season = '2009/2010' GROUP BY home_team_api_id ) AS HomeTeamStats ON League.id = HomeTeamStats.home_team_api_id INNER JOIN ( SELECT away_team_api_id, AVG(home_team_goal) AS avg_home_goals, AVG(away_team_goal) AS avg_away_goals FROM Match WHERE season = '2009/2010' GROUP BY away_team_api_id ) AS AwayTeamStats ON League.id = AwayTeamStats.away_team_api_id WHERE HomeTeamStats.avg_home_goals > AwayTeamStats.avg_away_goals;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the short name of the football team Queens Park Rangers?",
    "SELECT team_short_name FROM Team WHERE team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Queens Park Rangers' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football players with a birthyear of 1970 and a birthmonth of October.",
    "SELECT * FROM ( SELECT substr(birthday, 1, 4) AS year, substr(birthday, 6, 2) AS month FROM Player ) AS T1 WHERE T1.year = '1970' AND T1.month = '10'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the attacking work rate of the football playerr Franco Zennaro?",
    "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Franco Zennaro' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch?",
    "SELECT TA.`buildUpPlayPositioningClass` FROM Team_Attributes AS TA WHERE TA.`team_api_id` = ( SELECT T.`team_api_id` FROM Team AS T WHERE T.`team_long_name` = 'ADO Den Haag' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
    "SELECT PA.`heading_accuracy` FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.`player_api_id` = P.`player_api_id` WHERE P.`player_name` = 'Francois Affolter' AND PA.`date` = '2014-09-18 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the overall rating of the football player Gabriel Tamas in year 2011?",
    "SELECT overall_rating FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Gabriel Tamas' AND strftime('%Y', date) = '2011' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
    "SELECT COUNT(*) FROM Match WHERE season = '2015/2016' AND home_team_api_id IN ( SELECT id FROM League WHERE name = 'Scotland Premier League' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the youngest football player?",
    "SELECT Player.preferred_foot, MAX(Player.birthday) AS youngest_birthday FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id GROUP BY Player.preferred_foot ORDER BY youngest_birthday ASC;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest potential score.",
    "SELECT Player.`player_name` FROM Player INNER JOIN Player_Attributes ON Player.`player_api_id` = Player_Attributes.`player_api_id` WHERE Player_Attributes.`potential` = ( SELECT MAX(Player_Attributes.`potential`) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among all the players whose weight is under 130, how many of them preferred foot in attacking is left?",
    "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player.weight < 130 AND Player_Attributes.preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football teams that has a chance creation passing class of Risky. Inidcate its short name only.",
    "SELECT T4.`team_short_name` FROM Team_Attributes AS T3 INNER JOIN Team AS T4 ON T3.`team_api_id` = T4.`team_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the defensive work rate of the football player David Wilson\n?",
    "SELECT defensive_work_rate FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'David Wilson' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "When is the birthday of the football player who has the highest overall rating?",
    "SELECT T1.`birthday` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`overall_rating` = ( SELECT MAX(overall_rating) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of the football league in the country of Netherlands?",
    "SELECT name FROM League WHERE id = ( SELECT id FROM League WHERE country_id = ( SELECT id FROM Country WHERE name = 'Netherlands' ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
    "SELECT AVG(T1.home_team_goal) AS average_home_team_goal FROM Match AS T1 INNER JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id INNER JOIN Country AS T3 ON T2.country_id = T3.id WHERE T3.name = 'Poland' AND T1.season = '2010/2011'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who has the highest average finishing rate between the highest and shortest football player?",
    "SELECT MAX(avg_finishing_high, avg_finishing_low) AS highest_avg_finishing_rate FROM ( SELECT AVG(Player_Attributes.finishing) AS avg_finishing_high FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN ( SELECT MAX(height) AS max_height FROM Player ) AS max_height_player WHERE Player.height = max_height_player.max_height GROUP BY Player.player_api_id UNION ALL SELECT AVG(Player_Attributes.finishing) AS avg_finishing_low FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN ( SELECT MIN(height) AS min_height FROM Player ) AS min_height_player WHERE Player.height = min_height_player.min_height GROUP BY Player.player_api_id ) AS avg_finishing_rates\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list player names which are higher than 180.",
    "SELECT DISTINCT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`height` > 180\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players were born after 1990?",
    "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players whose first names are Adam and weigh more than 170?",
    "SELECT T1.`player_name` FROM Player AS T1 WHERE T1.`player_name` LIKE '%Adam%' AND T1.`weight` > 170\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which players had an overall rating of over 80 from 2008 to 2010? Please list player names.",
    "SELECT P.`player_name` FROM Player_Attributes AS PA INNER JOIN Player AS P ON PA.`player_api_id` = P.`player_api_id` WHERE PA.`overall_rating` > 80 AND strftime('%Y', PA.`date`) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Doran's potential score?",
    "SELECT potential FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Aaron Doran' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List out of players whose preferred foot is left.",
    "SELECT * FROM Player_Attributes WHERE preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list all team names which the speed class is fast.",
    "SELECT DISTINCT T2.`team_long_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlaySpeedClass` = 'Fast'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the passing class of CLB team?",
    "SELECT buildUpPlayPassingClass FROM Team_Attributes WHERE team_api_id = ( SELECT team_api_id FROM Team WHERE team_short_name = 'CLB' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which teams have build up play passing more than 70? Please list their short names.",
    "SELECT T2.`team_short_name` FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`buildUpPlayPassing` > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "From 2010 to 2015, what was the average overall rating of players who are higher than 170?",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE strftime('%Y', T1.`date`) BETWEEN '2010' AND '2015' AND T2.`height` > 170\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which football player has the shortest height?",
    "SELECT T1.`player_name` FROM Player AS T1 WHERE T1.`height` = ( SELECT MIN(height) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the league Italy Serie A from?",
    "SELECT country_id FROM League WHERE id = ( SELECT id FROM League WHERE name = 'Italy Serie A' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
    "SELECT DISTINCT T1.team_short_name FROM Team T1 JOIN Team_Attributes TA1 ON T1.team_api_id = TA1.team_api_id JOIN Team_Attributes TA2 ON T1.team_api_id = TA2.team_api_id JOIN Team_Attributes TA3 ON T1.team_api_id = TA3.team_api_id WHERE TA1.buildUpPlaySpeed = 31 AND TA2.buildUpPlayDribbling = 53 AND TA3.buildUpPlayPassing = 32\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the football player Aaron Doran?",
    "SELECT AVG(pa.overall_rating) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE p.player_name = 'Aaron Doran';\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?",
    "SELECT COUNT(*) FROM Match JOIN Team ON Match.home_team_api_id = Team.team_api_id JOIN League ON Team.country_id = (SELECT id FROM Country WHERE name = 'Germany') WHERE strftime('%Y-%m', Match.date) BETWEEN '2008-08' AND '2008-10';\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the short name of the football team that had a home team goal of 10?",
    "SELECT DISTINCT T.`team_short_name` FROM Team AS T INNER JOIN Match AS M ON T.`team_api_id` = M.`home_team_api_id` WHERE M.`home_team_goal` = 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest balance score and potential score of 61.",
    "SELECT Player.player_name, Player_Attributes.balance FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.potential = 61 ORDER BY Player_Attributes.balance DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
    "SELECT AVG(ball_control) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE Player.`player_name` = 'Aaron Appindangoye'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the long name for the team GEN?",
    "SELECT `team_long_name` FROM Team WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_short_name` = 'GEN' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is older, Aaron Lennon or Abdelaziz Barrada?",
    "SELECT P1.player_name, P1.birthday FROM Player AS P1 JOIN Player_Attributes AS PA1 ON P1.player_api_id = PA1.player_api_id WHERE P1.player_name IN ('Aaron Lennon', 'Abdelaziz Barrada') ORDER BY P1.birthday ASC LIMIT 2;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is the tallest?",
    "SELECT player_api_id FROM Player WHERE height = ( SELECT MAX(height) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN ( SELECT T2.`player_api_id` FROM Player_Attributes AS T2 WHERE T2.`attacking_work_rate` = 'low' ) AS T3 ON T1.`player_api_id` = T3.`player_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the Belgium Jupiler League from?",
    "SELECT `country_id` FROM League WHERE `name` = 'Belgium Jupiler League'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the leagues from Germany.",
    "SELECT DISTINCT League.name FROM League JOIN Country ON League.country_id = Country.id WHERE Country.name = 'Germany';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player has the strongest overall strength?",
    "SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`overall_rating` = ( SELECT MAX(T3.`overall_rating`) FROM Player_Attributes AS T3 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",
    "SELECT T1.`id` FROM Player AS T1 WHERE strftime('%Y', T1.`birthday`) < '1986' AND T1.`id` IN ( SELECT T2.`id` FROM Player_Attributes AS T2 WHERE T2.`defensive_work_rate` = 'high' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone?",
    "SELECT MAX(Player_Attributes.`crossing`) FROM Player_Attributes INNER JOIN Player ON Player_Attributes.`player_api_id` = Player.`player_api_id` WHERE Player.`player_name` IN ('Alexis', 'Ariel Borysiuk', 'Arouna Kone')\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the heading accuracy of Ariel Borysiuk?",
    "SELECT heading_accuracy FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Ariel Borysiuk' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose height is over 180, how many of them have a volley score of over 70?",
    "SELECT DISTINCT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN ( SELECT `player_api_id` FROM Player_Attributes WHERE `volleys` > 70 ) AS T2 ON T1.`player_api_id` = T2.`player_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the names of the players whose volley score and dribbling score are over 70.",
    "SELECT DISTINCT Player.player_name FROM Player INNER JOIN Player_Attributes AS T1 ON Player.player_api_id = T1.player_api_id WHERE T1.volleys > 70 AND T1.dribbling > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2008/2009 season were held in Belgium?",
    "SELECT COUNT(*) FROM Match WHERE season = '2008/2009' AND country_id = ( SELECT id FROM Country WHERE name = 'Belgium' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the long passing score of the oldest player?",
    "SELECT MAX(long_passing) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.birthday = ( SELECT MIN(birthday) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the Belgium Jupiler League in April, 2009?",
    "SELECT COUNT(DISTINCT m.id) AS matches_held FROM Match AS m JOIN Team AS t ON m.home_team_api_id = t.team_api_id JOIN League AS l ON t.league_id = l.id WHERE l.name = 'Belgium Jupiler League' AND strftime('%Y', m.date) = '2009' AND strftime('%m', m.date) = '04';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most matches in the 2008/2009 season?",
    "SELECT league_id FROM Match WHERE season = '2008/2009' GROUP BY league_id ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the players born before the year 1986?",
    "SELECT AVG(pa.overall_rating) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE strftime('%Y', p.birthday) < '1986';\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
    "WITH highest_rating_puel AS ( SELECT MAX(overall_rating) AS highest_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Paulin Puel' ), borysiuk_rating AS ( SELECT overall_rating FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Ariel Borysiuk' ) SELECT (borysiuk_rating.overall_rating - highest_rating_puel.highest_rating) / highest_rating_puel.highest_rating * 100 AS percentage_difference FROM borysiuk_rating, highest_rating_puel;\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much is the average build up play speed of the Heart of Midlothian team?",
    "SELECT AVG(buildUpPlaySpeed) FROM Team_Attributes WHERE team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'Heart of Midlothian' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average overall rating of Pietro Marino.",
    "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 JOIN Player ON T1.player_api_id = Player.player_api_id WHERE Player.player_name = 'Pietro Marino';\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Lennox's total crossing score?",
    "SELECT SUM(crossing) FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Aaron Lennox' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Ajax's highest chance creation passing score and what is it classified as?",
    "SELECT T1.`chanceCreationPassing`, T1.`chanceCreationPassingClass` FROM Team_Attributes AS T1 WHERE T1.`team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_long_name` = 'Ajax' ) ORDER BY T1.`chanceCreationPassing` DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which foot is preferred by Abdou Diallo?",
    "SELECT T1.`preferred_foot` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Abdou Diallo'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the highest overall rating received by Dorlan Pabon?",
    "SELECT MAX(T2.`overall_rating`) FROM Player_Attributes AS T2 INNER JOIN Player AS T1 ON T2.`player_api_id` = T1.`player_api_id` WHERE T1.`player_name` = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average number of goals made by Parma as the away team while playing in Italy?",
    "SELECT AVG(M.`away_team_goal`) AS average_goals FROM Match AS M INNER JOIN Team AS T ON M.`away_team_api_id` = T.`team_api_id` INNER JOIN League AS L ON T.`country_id` = L.`id` WHERE T.`team_long_name` = 'Parma' AND L.`name` = 'Italy' GROUP BY T.`team_long_name`\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
    "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating = 77 AND T2.date = '2016-06-23' GROUP BY T1.player_name ORDER BY T1.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the overall rating for Aaron Mooy on 2016/2/4?",
    "SELECT Player_Attributes.`overall_rating` FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Aaron Mooy' ) AND date = '2016-02-04 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the potiential for Francesco Parravicini on 2010/8/30?",
    "SELECT potential FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Francesco Parravicini' ) AND date = '2010-08-30 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was Francesco Migliore's attacking work rate on 2015/5/1?",
    "SELECT attacking_work_rate FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Francesco Migliore' ) AND date = '2015-05-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the defensive work rate for Kevin Berigaud on 2013/2/22.",
    "CREATE INDEX idx_player_api_id ON Player(player_api_id); CREATE INDEX idx_player_name_birthday ON Player(player_name, birthday);\t----- bird -----\teuropean_football_2"
  ],
  [
    "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
    "SELECT date FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant' ) AND crossing = ( SELECT MAX(crossing) FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player WHERE player_name = 'Kevin Constant' ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the build up play speed class for \"Willem II\" on 2011/2/22?",
    "SELECT DISTINCT Team_Attributes.team_api_id, Team_Attributes.buildUpPlaySpeedClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_long_name = 'Willem II' AND Team_Attributes.date = '2012-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
    "SELECT buildUpPlayDribblingClass FROM Team_Attributes WHERE team_api_id = ( SELECT team_api_id FROM Team WHERE team_short_name = 'LEI' ) AND date = '2015-09-10 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.",
    "SELECT Team_Attributes.buildUpPlayPassingClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id JOIN Player ON Player.player_api_id = Player_Attributes.player_api_id WHERE Team.team_long_name = 'FC Lorient' AND Team.`date` = '2010-02-22'\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
    "SELECT * FROM Team_Attributes AS T2 INNER JOIN Team AS T1 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'PEC Zwolle' AND T2.`date` = '2013-09-20';\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
    "SELECT T3.chanceCreationCrossingClass FROM Team_Attributes AS T3 JOIN Team AS T1 ON T3.team_api_id = T1.team_api_id WHERE T1.team_long_name = 'Hull City' AND T3.`date` = '2010-02-22' AND T3.chanceCreationCrossingClass IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
    "SELECT Team_Attributes.defenceAggressionClass FROM Team_Attributes JOIN Team ON Team_Attributes.team_api_id = Team.team_api_id WHERE Team.team_api_id = ( SELECT Team.team_api_id FROM Team JOIN League ON Team.country_id = League.id WHERE League.name = 'Germany 1. Bundesliga' AND Team.team_api_id = ( SELECT Team.team_api_id FROM Team JOIN Player_Attributes ON Team.team_api_id = Player_Attributes.team_api_id WHERE Player_Attributes.team_long_name = 'Hannover 96' AND Player_Attributes.date = '2015-09-10' ) AND Team_Attributes.date = '2015-09-10' );\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
    "SELECT AVG(T1.`overall_rating`) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Marko Arnautovic' AND T1.`date` BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down 5 tallest players' name.",
    "SELECT T1.player_name FROM Player AS T1 INNER JOIN ( SELECT player_api_id, MAX(height) AS max_height FROM Player WHERE height IS NOT NULL GROUP BY player_api_id ) AS T2 ON T1.player_api_id = T2.player_api_id;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the player api id of 10 heaviest players?",
    "SELECT Player_Attributes.player_api_id FROM Player_Attributes INNER JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.weight = ( SELECT MAX(Player.weight) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the name of players who are 35 years old and above.",
    "SELECT T1.`player_name` FROM Player AS T1 WHERE T1.`birthday` <= datetime('now', '-34 years')\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many home team goal have been scored by Aaron Lennon?",
    "SELECT COUNT(*) FROM Match AS M INNER JOIN Player AS P ON M.`home_player_1` = P.`player_api_id` OR M.`home_player_2` = P.`player_api_id` OR M.`home_player_3` = P.`player_api_id` OR M.`home_player_4` = P.`player_api_id` OR M.`home_player_5` = P.`player_api_id` OR M.`home_player_6` = P.`player_api_id` OR M.`home_player_7` = P.`player_api_id` OR M.`home_player_8` = P.`player_api_id` OR M.`home_player_9` = P.`player_api_id` OR M.`home_player_10` = P.`player_api_id` OR M.`home_player_11` = P.`player_api_id` WHERE P.`player_name` = 'Aaron Lennon'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Sum up the away team goal scored by both Daan Smith and Filipe Ferreira.",
    "SELECT SUM(home_team_goal) FROM Match JOIN Player AS home_player ON Match.home_player_11 = home_player.player_api_id JOIN Player AS away_player ON Match.away_player_11 = away_player.player_api_id WHERE home_player.player_name = 'Daan Smith' AND away_player.player_name = 'Filipe Ferreira' AND home_player.player_api_id IS NOT NULL AND away_player.player_api_id IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the total home team goal scored by players whose age are 30 years old and below.",
    "SELECT SUM(M.`home_team_goal`) AS total_home_team_goals FROM Match AS M JOIN ( SELECT P.`player_api_id` FROM Player AS P JOIN Player_Attributes AS PA ON P.`player_api_id` = PA.`player_api_id` WHERE strftime('%Y', 'now') - strftime('%Y', P.`birthday`) < 31 ) AS FilteredPlayers ON M.`home_player_1` = FilteredPlayers.`player_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "State 10 names of the strongest players.",
    "SELECT T2.player_name FROM Player AS T2 JOIN Player_Attributes AS T1 ON T2.player_api_id = T1.player_api_id WHERE T1.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of players with the highest potential?",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`potential` = ( SELECT MAX(potential) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
    "SELECT DISTINCT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`attacking_work_rate` = 'high' AND T2.`attacking_work_rate` = 'high'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with finishing rate of 1, pick the eldest player and state the player's name.",
    "SELECT Player.player_name FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE Player_Attributes.finishing = 1 ORDER BY Player.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the name of players who came from Belgium.",
    "SELECT DISTINCT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T3 ON T1.player_api_id = T3.player_api_id INNER JOIN Team AS T4 ON T3.team_api_id = T4.team_api_id INNER JOIN Country AS T2 ON T4.team_fifa_api_id = T2.id WHERE T2.name = 'Belgium'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Locate players with vision scores of 90 and above, state the country of these players.",
    "SELECT DISTINCT T2.name FROM Player AS T1 INNER JOIN Player_Attributes AS T3 ON T1.player_api_id = T3.player_api_id INNER JOIN Country AS T2 ON T1.player_fifa_api_id = T2.id WHERE T3.vision > 89 LIMIT 10;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country's players have the heaviest average weights?",
    "SELECT C.name FROM ( SELECT P.country_id, AVG(P.weight) AS avg_weight FROM Player AS P INNER JOIN Player_Attributes AS A ON P.player_api_id = A.player_api_id GROUP BY P.country_id ) AS T4 INNER JOIN Country AS C ON T4.country_id = C.id ORDER BY avg_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the long name for slow speed class team.",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`buildUpPlaySpeedClass` = 'Slow'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the short name of team who played safe while creating chance of passing?",
    "SELECT T1.`team_short_name` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`chanceCreationPassingClass` = 'Safe'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average heights of Italy players?",
    "SELECT AVG(T1.height) FROM Player AS T1 INNER JOIN Player_Attributes AS T1A ON T1.player_api_id = T1A.player_api_id INNER JOIN Country AS T2 ON T2.id = T1A.country_id WHERE T2.name = 'Italy';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the names of top three football players who are over 180 cm tall in alphabetical order.",
    "SELECT DISTINCT P.`player_name` FROM Player P INNER JOIN Player_Attributes PA ON P.`player_api_id` = PA.`player_api_id` WHERE PA.`height` > 180 ORDER BY P.`player_name` ASC LIMIT 3;\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many football players born after the 1990s have the first name \"Aaron\"?",
    "SELECT COUNT(DISTINCT T1.`player_api_id`) FROM Player AS T1 WHERE T1.`player_name` LIKE 'Aaron%' AND T1.`birthday` > '1990-01-01'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference between players 6 and 23's jumping scores?",
    "SELECT jumping - ( SELECT jumping FROM Player_Attributes WHERE id = 6 ) AS difference FROM Player_Attributes WHERE id = 23\t----- bird -----\teuropean_football_2"
  ],
  [
    "",
    "error: No SQL found in the input string\t----- bird -----\t"
  ],
  [
    "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
    "SELECT COUNT(*) FROM ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 WHERE T1.`potential` = ( SELECT MAX(potential) FROM Player_Attributes ) AND T1.`preferred_foot` = 'left' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage of players have a strength and stamina score of more than 80?",
    "SELECT COUNT(*) FROM Player_Attributes WHERE stamina > 80 AND strength > 80\t----- bird -----\teuropean_football_2"
  ],
  [
    "In what country did the Poland Ekstraklasa take place?",
    "SELECT DISTINCT Country.name FROM League JOIN Country ON League.country_id = Country.id WHERE League.name = 'Ekstraklasa';\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
    "SELECT home_team_goal, away_team_goal FROM Match WHERE id = ( SELECT id FROM Match WHERE date LIKE '2008-09-24%' AND country_id = (SELECT id FROM Country WHERE name = 'Belgium') )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
    "SELECT T2.acceleration, T2.sprint_speed, T2.agility FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Alexis Blin'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Does the KSV Cercle Brugge team have a slow, balanced or fast speed class?",
    "SELECT buildUpPlaySpeedClass FROM Team_Attributes WHERE team_api_id = ( SELECT team_api_id FROM Team WHERE team_long_name = 'KSV Cercle Brugge' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "In the 2015–2016 season, how many games were played in the Italian Serie A league?",
    "SELECT COUNT(*) FROM Match WHERE league_id = ( SELECT id FROM League WHERE name = 'Italy Serie A' AND season = '2015/2016' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the highest score of the home team in the Netherlands Eredivisie league?",
    "SELECT MAX(M.`home_team_goal`) FROM Match AS M INNER JOIN Team AS T ON M.`home_team_api_id` = T.`team_api_id` INNER JOIN League AS L ON T.`country_id` = L.`id` WHERE L.`name` = 'Netherlands Eredivisie';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please state the finishing rate and curve score of the player who has the heaviest weight.",
    "-- Verify that the 'weight' column exists in the 'Player' table SELECT * FROM Player WHERE weight IS NOT NULL; -- Verify that the 'player_api_id' column is correctly used to join the tables SELECT * FROM Player_Attributes WHERE player_api_id IN (SELECT player_api_id FROM Player WHERE weight IS NOT NULL); -- Corrected SQL query SELECT T2.`finishing`, T2.`curve` FROM Player_Attributes AS T1 INNER JOIN ( SELECT T2.`player_api_id` FROM Player_Attributes AS T2 INNER JOIN Player AS T3 ON T2.`player_api_id` = T3.`player_api_id` ORDER BY T2.`weight` DESC LIMIT 1 ) AS T4 ON T1.`player_api_id` = T4.`player_api_id`;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most games in the 2015–2016 season?",
    "SELECT L.`name` AS league_name, T.`team_long_name` AS team_name, MAX(game_count) AS most_games FROM League AS L JOIN Team AS T ON L.`country_id` = (SELECT `id` FROM Country WHERE `name` = 'Belgium') JOIN ( SELECT M.`home_team_api_id`, COUNT(*) AS game_count FROM Match AS M WHERE M.`season` = '2015/2016' GROUP BY M.`home_team_api_id` ) AS TG ON T.`team_api_id` = TG.`home_team_api_id` GROUP BY L.`name`, T.`team_long_name` ORDER BY most_games DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the full name of the away team that scored the most goals.",
    "SELECT T1.`team_long_name` FROM Team AS T1 INNER JOIN ( SELECT `team_api_id` FROM Match WHERE `away_team_goal` = ( SELECT MAX(`away_team_goal`) FROM Match ) ) AS T2 ON T1.`team_api_id` = T2.`team_api_id`\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please name one player whose overall strength is the greatest.",
    "SELECT T2.player_name FROM Player AS T2 JOIN Player_Attributes AS T1 ON T2.player_api_id = T1.player_api_id WHERE T1.overall_rating = ( SELECT MAX(overall_rating) FROM Player_Attributes ) AND T2.birthday = ( SELECT MIN(birthday) FROM Player AS T3 WHERE T3.player_api_id = T2.player_api_id )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
    "SELECT ( COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Player) AS percentage FROM Player_Attributes pa JOIN Player p ON pa.player_api_id = p.player_api_id WHERE p.height < 180 AND p.overall_rating > 70;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
    "SELECT (COUNT(CASE WHEN T1.Admission = '+' THEN 1 END) - COUNT(CASE WHEN T1.Admission = '-' THEN 1 END)) / COUNT(T1.ID) * 100 AS deviation_percentage FROM Patient AS T1 WHERE T1.SEX = 'M' GROUP BY T1.SEX;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient were born after 1930?",
    "SELECT (COUNT(DISTINCT CASE WHEN p.SEX = 'F' AND p.Birthday > '1930-01-01' THEN p.ID END) * 100.0 / COUNT(DISTINCT p.ID)) AS percentage_female_born_after_1930 FROM Patient p;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between Year 1930 to 1940, how many percent of them were inpatient?",
    "SELECT ( (SELECT COUNT(*) FROM Patient AS p WHERE p.Admission = '+' AND strftime('%Y', p.Birthday) BETWEEN '1930' AND '1940' ) / (SELECT COUNT(*) FROM Patient AS p WHERE strftime('%Y', p.Birthday) BETWEEN '1930' AND '1940' ) * 100 ) AS Percentage ORDER BY Percentage ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?",
    "SELECT COUNT(DISTINCT CASE WHEN Examination.`Admission` = '-' THEN Patient.`ID` ELSE NULL END) AS InpatientCount, COUNT(DISTINCT CASE WHEN Examination.`Admission` = '+' THEN Patient.`ID` ELSE NULL END) AS OutpatientCount, (COUNT(DISTINCT CASE WHEN Examination.`Admission` = '-' THEN Patient.`ID` ELSE NULL END) / NULLIF(COUNT(DISTINCT CASE WHEN Examination.`Admission` = '+' THEN Patient.`ID` ELSE NULL END), 0)) AS Ratio FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE Examination.`Diagnosis` = 'SLE' GROUP BY Examination.`Diagnosis`;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.",
    "SELECT T2.`Date` FROM Laboratory AS T2 INNER JOIN Patient AS T1 ON T1.`ID` = T2.`ID` WHERE T1.`ID` = '30609'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had.",
    "SELECT P.`SEX`, P.`Birthday`, E.`Examination Date`, L.`Symptoms` FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`ID` = '163109' AND L.`Symptoms` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday of patient with LDH beyond normal range.",
    "SELECT DISTINCT P.`ID`, P.`SEX`, P.`Birthday` FROM Patient AS P INNER JOIN ( SELECT `ID`, `LDH` FROM Laboratory WHERE `LDH` > 500 ) AS LDH_Results ON P.`ID` = LDH_Results.`ID`;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the ID and age of patient with positive degree of coagulation.",
    "SELECT T1.`ID`, (strftime('%Y', CURRENT_DATE) - strftime('%Y', T1.`Birthday`)) AS `Age` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`KCT` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with severe degree of thrombosis, list their ID, sex and dieseas the patient is diagnosed with.",
    "SELECT T1.`SEX`, T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Thrombosis` = 2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were born in 1937 whose total cholesterol was beyond the normal range.",
    "SELECT DISTINCT P.`ID`, P.`SEX`, P.`Birthday`, P.`Diagnosis` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`Birthday` = '1937' AND L.`T-CHO` > '250' ORDER BY P.`ID` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient with albumin level lower than 3.5, list their ID, sex and diagnosis.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ALB` < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient had total protein not within the normal range?",
    "SELECT (COUNT(DISTINCT Laboratory.`ID`) * 100.0) / COUNT(DISTINCT Patient.`ID`) AS `percentage_female_tp_not_normal` FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Patient.`SEX` = 'F' AND (Laboratory.`TP` < '6.0' OR Laboratory.`TP` > '8.5')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",
    "SELECT P.`ID`, AVG(L.`aCL IgG`) AS Average_aCL_IgG FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE (P.`Admission` = '+') AND (year(E.`Examination Date`) - year(P.`Birthday`) >= 50) GROUP BY P.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN ( SELECT ID FROM Patient WHERE SEX = 'F' AND SUBSTR(Description, 6, 4) = '1997' ) AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the age of the youngest patient when they initially arrived at the hospital?",
    "SELECT T1.`ID`, MIN(SUBTRACT(STRFTIME('%Y', T1.`Birthday`), STRFTIME('%Y', T1.`First Date`))) AS youngest_age FROM Patient AS T1 JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`First Date` IS NOT NULL GROUP BY T1.`ID` ORDER BY youngest_age ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many of the patients with the most serious thrombosis cases examined in 1997 are women?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`Examination Date` LIKE '1997-%' AND E.`Thrombosis` = '1' AND P.`SEX` = 'F' GROUP BY P.`SEX`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the age gap between the youngest and oldest patient with a normal triglyceride recorded?",
    "SELECT MAX(strftime('%Y', Birthday)) - MIN(strftime('%Y', Birthday)) AS age_gap FROM Patient WHERE EXISTS ( SELECT 1 FROM Laboratory WHERE Laboratory.`ID` = Patient.`ID` AND TG >= 200 AND TG IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.",
    "SELECT Patient.`Symptoms`, Patient.`Diagnosis` FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE Patient.`Birthday` = ( SELECT MIN(`Birthday`) FROM Patient WHERE `Birthday` IS NOT NULL );\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
    "SELECT AVG(MonthlyTotals.TotalPatients) AS AverageMonthlyMalePatients FROM ( SELECT strftime('%m', Laboratory.Date) AS Month, COUNT(*) AS TotalPatients FROM Laboratory JOIN Patient ON Laboratory.ID = Patient.ID JOIN Examination ON Laboratory.ID = Examination.ID WHERE Laboratory.Date BETWEEN '1998-01-01' AND '1998-12-31' AND Patient.SEX = 'M' AND Patient.SEX IS NOT NULL GROUP BY strftime('%m', Laboratory.Date) ) AS MonthlyTotals;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
    "SELECT T1.`Birthday`, (strftime('%Y', T1.`Birthday`) - strftime('%Y', T1.`First Date`)) AS Age FROM Patient AS T1 INNER JOIN ( SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Diagnosis` = 'SJS' GROUP BY T1.`ID` ORDER BY T1.`Birthday` ASC LIMIT 1 ) AS T4 ON T1.`ID` = T4.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
    "SELECT CAST(T1.`COUNT` AS REAL) / T2.`COUNT` FROM ( SELECT COUNT(*) AS `COUNT` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`UA` <= '8.0' ) AS T1, ( SELECT COUNT(*) AS `COUNT` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`UA` <= '6.5' ) AS T2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients hadn't undergone a medical examination until at least a year following their initial hospital visit?",
    "SELECT COUNT(DISTINCT Patient.`ID`) AS PatientsWithoutExamination FROM Patient LEFT JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE (Examination.`Date` IS NULL) OR (strftime('%Y', COALESCE(Examination.`Date`, Patient.`First Date`)) - strftime('%Y', Patient.`First Date`) >= 1);\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many underage patients were examined during the course of the three-year period from 1990 to 1993?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE strftime('%Y', Birthday) < '1993' AND T2.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have elevated total bilirubin count?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.T_BIL > 2.0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
    "SELECT T1.`Diagnosis` FROM ( SELECT T1.`Diagnosis`, COUNT(T1.`Diagnosis`) AS `Count` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.`Diagnosis` ) AS T3 ORDER BY T3.`Count` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of patients examined in the laboratory for the October of the year 1991?",
    "SELECT AVG(strftime('%Y', T1.Birthday) - 1991) AS average_age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date BETWEEN '1991-10-01' AND '1991-10-30';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis?",
    "SELECT T2.`Diagnosis`, (strftime('%Y', T2.`Birthday`) - strftime('%Y', T1.`Examination Date`)) AS Age FROM Patient AS T2 INNER JOIN Examination AS T1 ON T2.`ID` = T1.`ID` AND T1.`HGB` = (SELECT MAX(`HGB`) FROM Examination)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the anti-nucleus antibody concentration level for the patient id 3605340 on 1996/12/2?",
    "SELECT MAX(`ANA`) AS `ANA` FROM Examination JOIN Patient ON Examination.`ID` = Patient.`ID` WHERE Patient.`ID` = 3605340 AND Examination.`Examination Date` = '1996-12-02';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?",
    "SELECT CASE WHEN MAX(T1.`T-CHO`) < 250 THEN 'Yes' ELSE 'No' END AS `Total Cholesterol Status` FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Patient AS T3 ON T2.`ID` = T3.`ID` WHERE T3.`ID` = 2927464 AND T2.`Examination Date` = '1995-09-04' GROUP BY T3.`ID` HAVING COUNT(T1.`T-CHO`) > 0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the gender of the first AORTITIS diagnosed patient?",
    "SELECT T1.`SEX` FROM Patient AS T1 JOIN Examination AS T2 ON T1.`ID` = T2.`ID` JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Diagnosis` = 'AORTITIS' GROUP BY T1.`SEX` ORDER BY T1.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12?",
    "SELECT E.`aCL IgM` FROM Examination AS E INNER JOIN Patient AS P ON E.`ID` = P.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`Diagnosis` = 'SLE' AND E.`Examination Date` = '1993/11/12' AND E.`aCL IgM` IS NOT NULL AND L.`Date` = (SELECT MAX(Date) FROM Laboratory WHERE Patient.`ID` = P.`ID` AND Date < '1993/11/12') GROUP BY E.`aCL IgM`;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
    "SELECT DISTINCT P.`SEX` FROM Patient P INNER JOIN Examination E ON P.`ID` = E.`ID` INNER JOIN Laboratory L ON P.`ID` = L.`ID` WHERE P.`SEX` = 'M' AND L.`GPT` = 9 AND E.`Date` = '1992-06-12'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?",
    "SELECT (strftime('%Y', '1992') - strftime('%Y', T2.`Birthday`)) AS Age FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`UA` = '8.4' AND T1.`Date` = '1991-10-21' GROUP BY T2.`Birthday` HAVING COUNT(T2.`Birthday`) = 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995?",
    "SELECT COUNT(L.`ID`) FROM Laboratory AS L INNER JOIN ( SELECT P.`ID` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`First Date` = '1991-06-13' AND E.`Diagnosis` = 'SJS' GROUP BY P.`ID` HAVING MIN(E.`First Date`) = '1991-06-13' ) AS SubQuery ON L.`ID` = SubQuery.`ID` WHERE L.`Date` BETWEEN '1995-01-01' AND '1995-12-31';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
    "SELECT P.`Diagnosis` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`Examination Date` = ( SELECT MIN(E2.`Examination Date`) FROM Examination AS E2 WHERE E2.`ID` = P.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient whose birthday was 1959/3/1, what symptoms did he/she have during the examination on 1993/9/27?",
    "SELECT `Symptoms` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Birthday` = '1959-03-01' AND T1.`Examination Date` = '1993-09-27'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
    "SELECT SUM(`T-CHO`) FROM Laboratory WHERE `ID` = (SELECT `ID` FROM Patient WHERE `Birthday` = '1959-02-18') AND `Date` LIKE '1981-12-%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Lists all patients by ID who were diagnosed with Behcet's and had their exams between 01/01/197 and 12/31/1997.",
    "SELECT DISTINCT P.`ID` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE P.`Diagnosis` = 'BEHCET' AND E.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
    "SELECT DISTINCT P.`ID` FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND L.`GPT` > 30 AND L.`ALB` < 4\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients born in 1964 were admitted to the hospital? List them by ID.",
    "SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND YEAR(Patient.Birthday) = 1964 AND Examination.Admission = '+';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
    "SELECT COUNT(*) FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Examination.`Thrombosis` = 2 AND Examination.`ANA` = 'S' AND Laboratory.`aCL IgM` > ( SELECT AVG(Laboratory.`aCL IgM`) * 1.2 FROM Laboratory WHERE Laboratory.`aCL IgM` IS NOT NULL )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?",
    "SELECT ( SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`U-PRO` > 0 AND Laboratory.`U-PRO` < 30 ) * ( SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM Patient) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`UA` <= 6.5 ) AS percentage\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
    "SELECT (CAST(SUM(CASE WHEN T2.`Diagnosis` = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) / CAST(COUNT(DISTINCT T1.`ID`) AS REAL)) * 100 AS percentage FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND EXTRACT(YEAR FROM T2.`Examination Date`) = 1981 GROUP BY T1.`ID`;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
    "SELECT T1.`ID` FROM Patient AS T1 WHERE T1.`Admission` = '-' AND T1.`ID` IN ( SELECT T2.`ID` FROM Laboratory AS T2 WHERE T2.`Date` LIKE '1991-10%' ) AND T1.`ID` IN ( SELECT T3.`ID` FROM Laboratory AS T3 WHERE T3.`T-BIL` < 2.0 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE SEX = 'F' AND BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31' AND T2.`ANA Pattern` != 'p'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
    "SELECT DISTINCT P.`SEX` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`Diagnosis` = 'PSS' AND L.`CRP` = '2+' AND L.`CRE` = '1' AND L.`LDH` = '123' ORDER BY P.`SEX` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
    "SELECT AVG(L.`ALB`) FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` INNER JOIN Patient AS PD ON P.`ID` = PD.`ID` WHERE P.`SEX` = 'F' AND PD.`Diagnosis` = 'SLE' AND L.`PLT` > 400\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common sign of patients with SLE disease?",
    "SELECT T3.`Symptoms` FROM Examination AS T1 INNER JOIN ( SELECT P.`ID`, P.`Diagnosis` FROM Patient AS P WHERE P.`Diagnosis` LIKE '%SLE%' ) AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T2.`ID` = T3.`ID` GROUP BY T3.`Symptoms` ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When was the medical information on patient number 48473 first documented, and what disease did she have?",
    "SELECT T1.`Diagnosis` FROM patient AS T1 WHERE T1.`ID` = 48473\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients were given an APS diagnosis?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'F' AND T2.`Diagnosis` LIKE '%APS%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who underwent testing in 1997 had protein levels outside the normal range?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`Examination Date` BETWEEN '1997-01-01' AND '1997-12-31' AND (L.`TP` < 6 OR L.`TP` > 8.5)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What proportion of patients who had signs of thrombocytopenia had SLE diagnosed?",
    "SELECT ROUND( ( SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Symptoms IS NOT NULL AND Examination.Symptoms LIKE '%thrombocytopenia%' AND Examination.Diagnosis IS NOT NULL AND Examination.Diagnosis LIKE '%SLE%' ) / ( SELECT COUNT(DISTINCT Patient.ID) FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Symptoms IS NOT NULL AND Examination.Symptoms LIKE '%thrombocytopenia%' ) * 100, 2 ) AS Proportion\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
    "SELECT ROUND( ( SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`BIRTHDAY` LIKE '1980-%' AND T2.`DIAGNOSIS` = 'RA' AND T1.`SEX` = 'F' AND T2.`DIAGNOSIS` IS NOT NULL ) / ( SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`BIRTHDAY` LIKE '1980-%' AND T2.`DIAGNOSIS` = 'RA' AND T2.`DIAGNOSIS` IS NOT NULL GROUP BY T1.`SEX` ), 2 ) * 100\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with BEHCET disease did not stay in the hospital for treatment?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T1.`Diagnosis` = 'BEHCET' AND T1.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were female got white blood cells that were below 3.5?",
    "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE SEX = 'F' AND WBC < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
    "SELECT MAX(ExaminationDate) - MIN(FirstDate) AS DaysBetweenFirstArrivalAndEvaluation FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 821298 AND FirstDate IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient with the number 57266's uric acid within a normal range?",
    "SELECT MAX(T1.`UA`) AS UricAcid FROM laboratory AS T1 JOIN patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ID` = 57266 AND ( (T1.`UA` > 8.0 AND T2.`SEX` = 'M') OR (T1.`UA` > 6.5 AND T2.`SEX` = 'F') ) GROUP BY T2.`SEX`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the laboratory examination of patient '48473' where his/her AST glutamic oxaloacetic transaminase (GOT) index is above the normal range.",
    "SELECT P.`ID`, P.`SEX`, P.`Birthday`, P.`Description`, P.`First Date`, P.`Admission`, P.`Diagnosis` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`GOT` >= 60 AND L.`Date` IS NOT NULL GROUP BY P.`ID` HAVING MAX(L.`Date`) = L.`Date`;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients with their sex and date of birthday, whose AST glutamic oxaloacetic transaminase (GOT) index is within normal range for loboratory examination in 1994.",
    "SELECT DISTINCT P.`ID`, P.`SEX`, P.`Birthday` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`Examination Date` IS NOT NULL AND strftime('%Y', E.`Examination Date`) = '1994' AND L.`GOT` < 60 GROUP BY P.`ID`, P.`SEX`, P.`Birthday` ORDER BY P.`ID` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.",
    "SELECT DISTINCT P.`ID` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`SEX` = 'M' AND L.`GPT` >= 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth.",
    "SELECT DISTINCT T1.`Diagnosis`, MAX(T2.`Date`) AS LatestExaminationDate FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GPT` > 60 GROUP BY T1.`Diagnosis` ORDER BY MAX(T2.`Date`) ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
    "SELECT AVG(L.LDH) AS average_LDH FROM Laboratory AS L JOIN Patient AS P ON L.ID = P.ID JOIN Examination AS E ON P.ID = E.ID WHERE L.LDH < 500 GROUP BY P.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
    "SELECT P.`ID`, (strftime('%Y', 'now') - strftime('%Y', P.`Birthday`)) AS `age` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`LDH` BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient?",
    "SELECT T1.`Admission`, COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ALP` < 300 GROUP BY T1.`Admission`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID of the patient who is born on the April 1st, 1982. Is his/her alkaliphophatase (ALP) within normal range?",
    "SELECT CASE WHEN T2.`ALP` < 300 THEN 'Yes' ELSE 'No' END AS 'ALP within normal range' FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ID` = ( SELECT `ID` FROM Patient WHERE `Birthday` LIKE '1982-04-01%' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List ID, sex and date of birth of patient whose total protein (TP) below the lower range of the normal index.",
    "SELECT P.`ID`, P.`SEX`, P.`Birthday` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`TP` < ( SELECT MIN(TP) AS LowerRange FROM Laboratory WHERE TP > 0 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal.",
    "SELECT TP - 8.5 AS TPIndexDeviation FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SEX` = 'F' AND T1.`TP` > 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Sort in descending order all patients by birthday for male patient with albumin not within range.",
    "SELECT * FROM ( SELECT DISTINCT P.* FROM Patient P INNER JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND (L.ALB <= 3.5 OR L.ALB >= 5.5) ) AS T ORDER BY T.Birthday DESC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patient born in 1982, state if their albumin is within normal range.",
    "SELECT P.`ID` FROM Patient AS P JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE strftime('%Y', P.`Birthday`) = '1982' AND L.`ALB` BETWEEN 3.5 AND 5.5;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of the female patient whose uric acid (UA) beyond the normal range?",
    "SELECT (COUNT(DISTINCT p.ID) * 100.0 / COUNT(DISTINCT l.ID)) AS percentage FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'F' AND l.UA > 6.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with normal uric acid (UA), what is the average UA index based on their latest laboratory examination result?",
    "SELECT AVG(L.UA) AS `AverageUAIndex` FROM ( SELECT P.ID, MAX(L.`Date`) AS `MaxDate` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` GROUP BY P.`ID` ) AS T INNER JOIN Laboratory AS L ON T.`ID` = L.`ID` AND T.`MaxDate` = L.`Date` INNER JOIN Patient AS P ON L.`ID` = P.`ID` WHERE (L.`UA` < 8.0 AND P.`SEX` = 'M') OR (L.`UA` < 6.5 AND P.`SEX` = 'F');\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`UN` = 29\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID, sex, birthday of all patients diagnosed with 'RA' that are within the UN normal index.",
    "SELECT DISTINCT Patient.`ID`, Patient.`SEX`, Patient.`Birthday` FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Examination.`Diagnosis` = 'RA' AND Laboratory.`UN` < 30 ORDER BY Patient.`ID` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients are are with creatinine index out of the normal range?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`CRE` > 1.5 ) AS T3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Are there more male patients with creatinine not within the normal range than female? True or False?",
    "SELECT ( SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'M' AND T3.`CRE` >= 1.5 ) > ( SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'F' AND T3.`CRE` >= 1.5 );\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index.",
    "SELECT P.`ID`, P.`SEX`, P.`Birthday` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`T-BIL` = ( SELECT MAX(`T-BIL`) FROM Laboratory )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range.",
    "SELECT P.`SEX`, COUNT(DISTINCT P.`ID`) AS patient_count FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`T-BIL` >= 2.0 GROUP BY P.`SEX`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index.",
    "SELECT P.`ID` AS PatientID, MAX(L.`T-CHO`) AS TCHOIndex FROM Patient AS P JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`Birthday` = ( SELECT MIN(P.`Birthday`) FROM Patient AS P WHERE P.`Birthday` IS NOT NULL ) GROUP BY P.`ID` ORDER BY TCHOIndex DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of the male patient with high cholesterol?",
    "SELECT AVG(strftime('%Y', 'now') - strftime('%Y', p.birthday)) AS average_age FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.T-CHO >= 250 AND p.Birthday IS NOT NULL GROUP BY p.ID;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?",
    "SELECT Patient.`ID`, Patient.`Diagnosis` FROM Patient INNER JOIN ( SELECT Patient.`ID`, MAX(Laboratory.`TG`) AS Max_TG FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` GROUP BY Patient.`ID` ) AS Max_TG_table ON Patient.`ID` = Max_TG_table.`ID` WHERE Max_TG_table.Max_TG > 300;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT P.`ID` FROM Laboratory AS L INNER JOIN Patient AS P ON L.`ID` = P.`ID` WHERE L.`TG` >= 200 AND P.`Birthday` IS NOT NULL ) AS SubQuery WHERE (strftime('%Y', 'now') - strftime('%Y', SubQuery.`Birthday`)) > 50;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids.",
    "SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`Admission` = '-' AND T3.`CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'M' AND T1.`Birthday` BETWEEN '1936' AND '1956' AND T3.`CPK` >= 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
    "SELECT T2.`ID`, T2.`SEX`, (strftime('%Y', 'now') - strftime('%Y', T2.`Birthday`)) AS `AGE` FROM Patient AS T2 INNER JOIN Laboratory AS T1 ON T1.`ID` = T2.`ID` WHERE T1.`GLU` >= 180 AND T1.`T-CHO` < 250 GROUP BY T2.`ID`, T2.`SEX`, T2.`Birthday` HAVING COUNT(DISTINCT T1.`ID`) = 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991.",
    "SELECT DISTINCT P.`ID`, MAX(L.`GLU`) AS GLU FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`Examination Date` IS NOT NULL AND strftime('%Y', E.`Examination Date`) > '1991' AND L.`GLU` < 180 GROUP BY P.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday who has abnormal white blood cell count. Group them by sex and list the patient by age in ascending order.",
    "SELECT P.`SEX`, P.`ID`, P.`Birthday` FROM Patient AS P INNER JOIN ( SELECT P.`ID`, MAX(`Date`) AS MaxDate FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`WBC` <= 3.5 OR L.`WBC` >= 9.0 GROUP BY P.`ID` ) AS L ON P.`ID` = L.`ID` ORDER BY P.`SEX`, P.`Birthday` ASC;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.",
    "SELECT DISTINCT P.`ID`, (strftime('%Y', 'now') - strftime('%Y', P.`Birthday`)) AS `Age` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`RBC` < 3.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
    "SELECT T1.`ID`, T1.`Admission` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND (strftime('%Y', T1.`Birthday`) - 1970) >= 50 AND (T2.`RBC` <= 3.5 OR T2.`RBC` >= 6.0)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex.",
    "SELECT P.`ID`, P.`SEX` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`HGB` < 10 AND P.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.",
    "SELECT T1.`ID`, T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T3.`HGB` BETWEEN 10 AND 17 ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.",
    "SELECT T1.`ID`, (strftime('%Y', 'now') - strftime('%Y', T1.`Birthday`)) AS `age` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` GROUP BY T1.`ID` HAVING COUNT(T2.`ID`) > 2 AND MAX(T2.`HCT`) >= 52;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "From laboratory examinations in 1991, what is the average hematoclit level that is lower than the normal range.",
    "SELECT AVG(L.`HCT`) FROM Laboratory AS L INNER JOIN Patient AS P ON L.`ID` = P.`ID` WHERE L.`Date` LIKE '1991%' AND L.`HCT` < 29\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
    "SELECT (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`PLT` < 100) AS lower_than_normal, (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`PLT` > 400) AS higher_than_normal, (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`PLT` < 100) - (SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`PLT` > 400) AS difference\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
    "SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN ( SELECT T1.`ID` FROM Laboratory AS T1 WHERE T1.`Date` LIKE '1984%' AND T1.`PLT` BETWEEN 100 AND 400 ) AS T2 ON T1.`ID` = T2.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
    "SELECT `Patient`.`ID`, `Patient`.`SEX`, `Laboratory`.`PT` FROM `Patient` INNER JOIN `Laboratory` ON `Patient`.`ID` = `Laboratory`.`ID` WHERE `Patient`.`SEX` = 'F' AND `Laboratory`.`PT` >= 14 GROUP BY `Patient`.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.",
    "SELECT DISTINCT P.`ID` FROM Patient P INNER JOIN Laboratory L ON P.`ID` = L.`ID` WHERE L.`PT` < 14 AND L.`Date` > '1992-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time?",
    "SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Examination_Date > '1997-01-01' AND Laboratory.APTT < 45 GROUP BY Patient.ID;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal activated partial prothrom bin time, how many of them have a mild thrombosis?",
    "SELECT COUNT(DISTINCT Patient.`ID`) AS distinct_patient_count FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Examination.`APTT` > 45 AND Laboratory.`Thrombosis` = 3;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
    "SELECT COUNT(DISTINCT Patient.ID) FROM Patient AS Patient INNER JOIN Examination AS Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory AS Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND (Laboratory.FG <= 150 OR Laboratory.FG >= 450) AND Patient.ID IN ( SELECT Patient.ID FROM Patient AS Patient INNER JOIN Examination AS Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.WBC BETWEEN 3.5 AND 9.0 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients born after 1980/1/1 have an abnormal fibrinogen level?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` > '1980-01-01' AND (T2.`FG` < 150 OR T2.`FG` > 450)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the disease names of the patients that have a proteinuria level higher than normal.",
    "SELECT DISTINCT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`U-PRO` >= 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID.",
    "SELECT DISTINCT T1.`ID` FROM ( SELECT Patient.`ID` FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`U-PRO` > 0 AND Laboratory.`U-PRO` < 30 ) AS T1 INNER JOIN ( SELECT Patient.`ID` FROM Patient WHERE Patient.`Diagnosis` = 'SLE' ) AS T2 ON T1.`ID` = T2.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with an Ig G lower than normal has the symptom of abortion?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`IGG` < 900 AND T3.`Symptoms` = 'abortion'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal Ig G level, how many of them have symptoms?",
    "SELECT COUNT(DISTINCT P.`ID`) AS PatientCount FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`IGG` BETWEEN 900 AND 2000 AND P.`Symptoms` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who has the highest Ig A within the normal range, what is his or her diagnosis?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`IGA` BETWEEN 80 AND 500 ORDER BY T2.`IGA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`aCL IgA` BETWEEN 80 AND 500 AND E.`Examination Date` > '1990-01-01' AND L.`IGA` BETWEEN 80 AND 500 AND L.`IGA` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?",
    "SELECT T3.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`IGM` NOT BETWEEN 40 AND 400 GROUP BY T3.`Diagnosis` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal C-reactive protein don't have their data recorded?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE (CRP LIKE '+' OR CRP LIKE '-' OR CRP < 1.0) AND T1.`Description` IS NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose C-reactive protein level is abnormal, how many of them aren't 18 yet?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`CRP` NOT IN('+-', '-') AND L.`CRP` >= 1.0 AND (strftime('%Y', CURRENT_DATE) - strftime('%Y', P.`Birthday`)) < 18 AND L.`CRP` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`RA` IN ('-', '+') AND E.`KCT` = '+';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diseases of the patients born after 1995-1-1 and have a normal Rhuematoid Factor.",
    "SELECT DISTINCT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE YEAR(T1.`Birthday`) > 1995 AND T2.`RA` IN ('+', '+-');\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the ID of the patient whose RF is normal and who is older than 60.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`RF` < 20 AND (strftime('%Y', 'now') - strftime('%Y', T1.`Birthday`)) > 60;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal RF don't have thrombosis?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`RF` < 20 AND T3.`Thrombosis` = '0'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal level of complement 3 have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(DISTINCT Patient.`ID`) FROM Patient INNER JOIN Examination ON Patient.`ID` = Examination.`ID` INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Laboratory.`C3` > 35 AND Examination.`ANA_Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose level of Hematoclit isn't normal, which patient has the highest anti-Cardiolipin antibody concentration? Please list his or her ID.",
    "SELECT P.`ID` FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`HCT` NOT BETWEEN 29 AND 52 AND L.`aCL IgA` = ( SELECT MAX(L2.`aCL IgA`) FROM Laboratory AS L2 JOIN Examination AS E2 ON L2.`ID` = E2.`ID` WHERE E2.`HCT` NOT BETWEEN 29 AND 52 AND E2.`ID` = P.`ID` ) GROUP BY P.`ID` ORDER BY L.`aCL IgA` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Thrombosis` = 2 ) AS T4 INNER JOIN ( SELECT DISTINCT T1.`ID` FROM Patient AS T1 INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`C4` > 10 ) AS T5 ON T4.`ID` = T5.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`RNP` IN ('-', '+-') AND T1.`Admission` = '+';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth.",
    "SELECT T1.`ID`, T1.`Birthday` FROM Patient AS T1 INNER JOIN ( SELECT `ID`, MAX(`Birthday`) AS MaxBirthday FROM Patient WHERE `Birthday` IS NOT NULL GROUP BY `ID` ) AS T3 ON T1.`ID` = T3.`ID` INNER JOIN ( SELECT `ID`, `RNP` FROM Laboratory WHERE `RNP` NOT IN('-', '+-') AND `RNP` IS NOT NULL GROUP BY `ID` ) AS T4 ON T1.`ID` = T4.`ID` WHERE T4.`RNP` IS NOT NULL ORDER BY T3.`MaxBirthday` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with normal anti-SM, how many of them have the most severe degree of thrombosis?",
    "SELECT COUNT(DISTINCT Patient.ID) AS PatientCount FROM Patient INNER JOIN Examination ON Patient.ID = Examination.ID INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.SM IN ('-', '+-') AND Laboratory.SM IN ('-', '+-') AND Laboratory.Thrombosis = 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.",
    "SELECT P.`ID` FROM ( SELECT P.`ID`, MAX(P.`Birthday`) AS `Birthday` FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`SM` NOT IN ('-', '+-') GROUP BY P.`ID` ) AS T1 ORDER BY T1.`Birthday` ASC LIMIT 3;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients who had the examination done after 1997/1/1 and had a normal anti-scl70.",
    "SELECT DISTINCT P.`ID` FROM Patient P INNER JOIN Examination E ON P.`ID` = E.`ID` INNER JOIN Laboratory L ON P.`ID` = L.`ID` WHERE E.`Examination Date` >= '1997-01-01' AND L.`SC170` IN ('-', '+-');\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal anti-scl70, how many of them are male and have the symptom of vertigo?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON E.`ID` = L.`ID` WHERE E.`SC170` IN ('-', '+-') AND P.`SEX` = 'M' AND L.`Symptoms` = 'vertigo'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal anti-SSA came to the hospital before 1990?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`SSA` IN ('-','+-') AND L.`Examination Date` IS NOT NULL AND strftime('%Y', L.`Examination Date`) < '1990'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID.",
    "SELECT P.`ID` FROM Patient AS P INNER JOIN ( SELECT P.`ID`, MIN(E.`Examination Date`) AS EarliestExaminationDate FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`SSA` IS NOT NULL GROUP BY P.`ID` ) AS T ON P.`ID` = T.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-SSB and are diagnosed with SLE in the examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T2.`ID` = T3.`ID` WHERE T1.`SSB` IN ('-', '+-') AND T3.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose anti-SSB are normal, how many of them have other symptoms observed in their examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T2.`ID` = T3.`ID` WHERE T1.`SSB` IN ('-', '+-') AND T3.`Symptoms` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
    "SELECT COUNT(*) FROM ( SELECT P.`ID` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`CENTROMEA` IN ('-', '+-') AND L.`SSB` IN ('-', '+-') AND P.`SEX` = 'M' ) AS SubQuery GROUP BY SubQuery.`ID` HAVING COUNT(DISTINCT SubQuery.`ID`) = 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.",
    "SELECT DISTINCT T2.`Diagnosis` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`DNA` >= 8 AND T3.`DNA` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-DNA level, yet their data are not recorded.",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T3.`DNA` < 8 AND T1.`Description` IS NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Of the patients with an abnormal level of anti-DNA-II, how many of them admitted to the hospital?",
    "SELECT COUNT(*) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`DNA-II` >= 8 AND T2.`Admission` = '+';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of patient who has a abnormal level of glutamic oxaloacetic transaminase level, yet he or she is diagnosed with SLE?",
    "SELECT (COUNT(DISTINCT P.`ID`) / (SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P WHERE P.`Diagnosis` = 'SLE')) * 100 AS percentage FROM Patient AS P JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`GOT` >= 60 AND P.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have their glutamic oxaloacetic transaminase in the normal range?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'M' AND T3.`GOT` < 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?",
    "SELECT P.`Birthday` FROM Patient AS P INNER JOIN ( SELECT P.`ID` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`GOT` >= 60 GROUP BY P.`ID` ) AS SubQuery ON P.`ID` = SubQuery.`ID` ORDER BY P.`Birthday` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the top three patients' birthdays with the highest glutamic pylvic transaminase in the normal range.",
    "SELECT T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GPT` < 60 ORDER BY T2.`GPT` DESC LIMIT 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with the normal glutamic pylvic transaminase level, how many of them are male?",
    "SELECT column_name FROM information_schema.columns WHERE table_name = 'Examination';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with the highest lactate dehydrogenase in the normal range, when was his or her data first recorded?",
    "SELECT MIN(E.`Examination Date`) AS FirstRecordedDate FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`LDH` < 500 GROUP BY P.`ID` HAVING MAX(L.`LDH`) = ( SELECT MAX(L2.`LDH`) FROM Patient AS P2 INNER JOIN Examination AS E2 ON P2.`ID` = E2.`ID` INNER JOIN Laboratory AS L2 ON P2.`ID` = L2.`ID` WHERE L2.`LDH` < 500 GROUP BY P2.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.",
    "SELECT P.`ID`, MAX(`First Date`) AS `latest_first_date` FROM Patient AS P INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`LDH` >= 500 GROUP BY P.`ID` ORDER BY `latest_first_date` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with an abnormal alkaliphophatase level, how many of them are admitted to the hospital?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT Patient.ID FROM Patient INNER JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.ALP >= 300 ) AS SubQuery INNER JOIN Patient ON SubQuery.ID = Patient.ID WHERE Patient.Admission = '+';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients followed at the outpatient clinic, how many of them have a normal level of alkaliphophatase?",
    "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Admission = '-' AND ALP < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diagnosis of the patients whose total protein is lower than normal.",
    "SELECT DISTINCT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TP` < 6.0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who are diagnosed with SJS, how many of them have a normal level of total protein?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the examination date of the patient whose albumin is the highest in the normal range?",
    "SELECT T1.`Date` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ALB` = ( SELECT MAX(ALB) AS max_normal_albumin FROM Laboratory WHERE ALB > 3.5 AND ALB < 5.5 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have a normal level of both albumin and total protein?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`ALB` BETWEEN 3.5 AND 5.5 AND T2.`TP` BETWEEN 6.0 AND 8.5;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
    "SELECT T1.SEX, MAX(T2.aCL_IgG), MAX(T2.aCL_IgM), MAX(T2.aCL_IgA) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.50 GROUP BY T1.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level?",
    "SELECT MAX(L.ANA) FROM Laboratory AS L JOIN Examination AS E ON L.ID = E.ID JOIN Patient AS P ON L.ID = P.ID WHERE P.CRE < 1.5 AND E.ANA IS NOT NULL GROUP BY P.ID;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID whose creatinine level is normal and whose anti Cardiolipin antibody concentration level is the highest.",
    "SELECT P.`ID` FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE L.`CRE` < 1.5 AND E.`aCL IgA` = ( SELECT MAX(E2.`aCL IgA`) FROM Examination AS E2 INNER JOIN Laboratory AS L2 ON E2.`ID` = L2.`ID` WHERE L2.`CRE` < 1.5 AND E2.`ID` = E.`ID` )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`T-BIL` >= 2.0 AND T3.`ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti-nucleus antibody concentration of the patient whose total bilirubin is the highest in the normal range?",
    "SELECT E.ANA FROM Examination AS E INNER JOIN ( SELECT P.ID FROM Patient AS P INNER JOIN Laboratory AS L ON P.ID = L.ID WHERE L.T-BIL = ( SELECT MAX(T-BIL) FROM Laboratory WHERE T-BIL < 2.0 AND T-BIL IS NOT NULL ) ) AS SubQuery ON E.ID = SubQuery.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
    "SELECT COUNT(*) FROM ( SELECT P.ID FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`T-CHO` > 250 AND L.`KCT` = '-' GROUP BY P.`ID` ) AS SubQuery;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total cholesterol is within the normal range, how many of them have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Examination AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`T-CHO` < 250 AND T3.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
    "SELECT COUNT(*) FROM Laboratory AS L INNER JOIN ( SELECT DISTINCT P.`ID` FROM Patient AS P WHERE P.`Symptoms` IS NOT NULL ) AS P ON L.`ID` = P.`ID` WHERE L.`TG` < 200 AND P.`Symptoms` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease name of the patient who has the highest level of triglyceride within the normal range?",
    "SELECT T1.`Diagnosis` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TG` = ( SELECT MAX(T3.`TG`) FROM Laboratory AS T3 WHERE T3.`TG` < 200 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients with no thrombosis and an abnormal level of creatinine phosphokinase.",
    "SELECT DISTINCT Patient.`ID` FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Examination.`Thrombosis` = 0 AND Laboratory.`CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",
    "SELECT COUNT(DISTINCT P.`ID`) FROM Patient AS P INNER JOIN Examination AS E ON P.`ID` = E.`ID` INNER JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE E.`CPK` < 250 AND (L.`KCT` = '+' OR L.`RVVT` = '+' OR L.`LAC` = '+') GROUP BY P.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the birthday of the oldest patient whose blood glucose is abnormal?",
    "SELECT T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`GLU` > 180 ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal blood glucose, how many of them don't have thrombosis?",
    "SELECT COUNT(*) FROM Laboratory AS L JOIN Patient AS P ON L.`ID` = P.`ID` JOIN Examination AS E ON P.`ID` = E.`ID` WHERE E.`GLU` < 180 AND E.`Thrombosis` = 0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients accepted to the hospital have a normal level of white blood cells?",
    "SELECT COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`WBC` BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients diagnosed with SLE have a normal white blood cell level?",
    "SELECT COUNT(*) FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE Diagnosis = 'SLE' AND WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.",
    "SELECT DISTINCT Patient.`ID` FROM Patient INNER JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE (Laboratory.`RBC` < 3.5 OR Laboratory.`RBC` > 6.0) AND Patient.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
    "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.PLT > 100 AND Laboratory.PLT < 400 AND Laboratory.Diagnosis IS NOT NULL GROUP BY Laboratory.Diagnosis;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.",
    "SELECT T1.`ID`, T2.`PLT` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Diagnosis` = 'MCTD' AND T2.`PLT` > 100 AND T2.`PLT` < 400\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the male patients that have a normal prothrombin time, what is their average prothrombin time?",
    "SELECT AVG(L.`PT`) AS average_prothrombin_time FROM Patient AS P JOIN Examination AS E ON P.`ID` = E.`ID` JOIN Laboratory AS L ON P.`ID` = L.`ID` WHERE P.`SEX` = 'M' AND E.`PT` < 14 GROUP BY P.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with severe thrombosis have a normal prothrombin time?",
    "SELECT COUNT(*) FROM Patient AS p JOIN Examination AS e ON p.ID = e.ID JOIN Laboratory AS l ON p.ID = l.ID WHERE e.Thrombosis IN (2, 1) AND l.PT < 14 GROUP BY p.ID\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What's Angela Sanders's major?",
    "SELECT major_name FROM major AS T3 INNER JOIN member AS T4 ON T3.zip = T4.zip AND T4.zip IS NOT NULL WHERE T4.first_name = 'Angela' AND T4.last_name = 'Sanders';\t----- bird -----\tstudent_club"
  ],
  [
    "How many students in the Student_Club are from the College of Engineering?",
    "SELECT COUNT(DISTINCT m.member_id) FROM member AS m INNER JOIN attendance AS a ON m.member_id = a.link_to_member INNER JOIN event AS e ON a.link_to_event = e.event_id INNER JOIN major AS ma ON m.zip = (SELECT z.zip_code FROM zip_code AS z WHERE z.zip = m.zip) INNER JOIN major AS mg ON ma.major_id = mg.major_id WHERE e.event_name = 'Student_Club' AND mg.department = 'Engineering';\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the full names of the students in the Student_Club that come from the Art and Design Department.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 JOIN major AS T3 ON T1.`link_to_major` = T3.`major_id` JOIN zip_code AS T4 ON T1.`zip` = T4.`zip_code` WHERE T3.`department` = 'Art and Design' AND T4.`type` = 'Standard';\t----- bird -----\tstudent_club"
  ],
  [
    "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
    "SELECT COUNT(DISTINCT member_id) FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id WHERE attendance.link_to_event = (SELECT event_id FROM event WHERE event_name = 'Women''s Soccer') AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club')\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
    "SELECT DISTINCT member.phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND member.phone IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students from the Student_Club who attended the event \"Women's Soccer\", how many of them want a T-shirt that's in medium size?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT attendance.link_to_member FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer' AND attendance.link_to_member IN ( SELECT member_id FROM member INNER JOIN major ON member.zip = zip_code.zip_code WHERE major.department = 'Student_Club' ) ) AS subquery INNER JOIN member ON subquery.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND member.t_shirt_size IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the event that has the highest attendance of the students from the Student_Club?",
    "SELECT E.event_name FROM event E JOIN attendance A ON E.event_id = A.link_to_event JOIN member M ON A.link_to_member = M.member_id JOIN major MG ON M.link_to_major = MG.major_id WHERE MG.department = 'Student_Club' GROUP BY E.event_id ORDER BY COUNT(A.link_to_event) DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "Which college is the vice president of the Student_Club from?",
    "SELECT DISTINCT T1.`college` FROM major AS T1 INNER JOIN member AS T4 ON T1.`link_to_major` = T4.`major_id` WHERE T4.`position` = 'Vice President';\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the event names of all the events attended by Maya Mclean.",
    "SELECT event.`event_name` FROM event INNER JOIN attendance ON event.`event_id` = attendance.`link_to_event` INNER JOIN member ON attendance.`link_to_member` = member.`member_id` WHERE member.`first_name` = 'Maya' AND member.`last_name` = 'Mclean'\t----- bird -----\tstudent_club"
  ],
  [
    "How many events of the Student_Club did Sacha Harrison attend in 2019?",
    "SELECT COUNT(DISTINCT attendance.link_to_member) AS event_count FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name LIKE '%Student_Club%' AND strftime('%Y', event.event_date) = '2019';\t----- bird -----\tstudent_club"
  ],
  [
    "Among the events attended by more than 10 members of the Student_Club, how many of them are meetings?",
    "SELECT COUNT(*) FROM ( SELECT E.event_id FROM event E JOIN attendance A ON E.event_id = A.link_to_event GROUP BY E.event_id HAVING COUNT(A.link_to_member) > 10 ) AS SubQuery JOIN event ON SubQuery.event_id = event.event_id WHERE event.type = 'Meeting';\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the names of all the events of the Student_Club that had an attendance of over 20 students.",
    "SELECT DISTINCT T1.`event_name` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T1.`event_id` IN ( SELECT T1.`event_id` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` GROUP BY T1.`event_id` HAVING COUNT(T2.`link_to_member`) > 20 ) AND T1.`type` = 'Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average attendance of meetings in 2020?",
    "SELECT AVG(attendance_count) FROM ( SELECT COUNT(a.link_to_member) AS attendance_count FROM attendance a JOIN event e ON a.link_to_event = e.event_id WHERE e.type = 'Meeting' AND strftime('%Y', e.event_date) = '2020' GROUP BY e.event_id ) AS subquery;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most expensive item that was spent in support of club events?",
    "SELECT MAX(T1.`cost`) AS `max_cost` FROM expense AS T1 INNER JOIN budget AS T2 ON T1.`link_to_budget` = T2.`budget_id` WHERE T2.`event_status` = 'Open'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have majored Environmental Engineering?\n",
    "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Environmental Engineering' AND T1.`position` = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of all the members of the Student_Club who attended the \"Laugh Out Loud\" event.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN attendance AS T3 ON T1.`member_id` = T3.`link_to_member` INNER JOIN event AS T4 ON T3.`link_to_event` = T4.`event_id` WHERE T4.`event_name` = 'Laugh Out Loud';\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of all the students who majored Law and Constitutional Studies. \n",
    "SELECT T1.`last_name` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Law and Constitutional Studies'\t----- bird -----\tstudent_club"
  ],
  [
    "What county did Sherri Ramsey grew up?",
    "SELECT DISTINCT T1.`county` FROM zip_code AS T1 INNER JOIN member AS T2 ON T1.`zip` = T2.`zip` WHERE T2.`first_name` = 'Sherri' AND T2.`last_name` = 'Ramsey';\t----- bird -----\tstudent_club"
  ],
  [
    "What college offers the major that Tyler Hewitt took?",
    "SELECT DISTINCT major.college FROM major INNER JOIN member ON major.major_id = member.link_to_major INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE member.first_name = 'Tyler' AND member.last_name = 'Hewitt';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the amount of the funds that the Vice President received?",
    "SELECT SUM(amount) FROM income WHERE link_to_member = ( SELECT member_id FROM member WHERE position = 'Vice President' )\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on food in September Meeting?",
    "SELECT SUM(T3.`amount`) AS total_spent_on_food FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN budget AS T3 ON T1.`link_to_budget` = T3.`budget_id` WHERE T3.`category` = 'Food' AND T1.`expense_date` BETWEEN '2019-09-01' AND '2019-09-30' AND T2.`zip` IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "What city and state did the President of the Student_Club grow up?",
    "SELECT T1.`city`, T1.`state` FROM zip_code AS T1 INNER JOIN member AS T3 ON T1.`zip_code` = T3.`zip` INNER JOIN attendance AS T2 ON T3.`member_id` = T2.`link_to_member` INNER JOIN event ON T2.`link_to_event` = event.`event_id` WHERE event.`event_name` = 'President' AND T3.`first_name` = 'President' LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the Student_Club members that grew up in Illinois state.",
    "SELECT DISTINCT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` INNER JOIN major AS T3 ON T1.`link_to_major` = T3.`major_id` INNER JOIN attendance AS A ON T1.`member_id` = A.`link_to_member` INNER JOIN event AS E ON A.`link_to_event` = E.`event_id` WHERE T2.`state` = 'IL' AND E.`type` = 'Meeting' AND T3.`department` = 'Student_Club' AND E.`status` = 'Open'\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on advertisement in September Meeting?",
    "SELECT SUM(T3.`amount`) AS TotalAdvertisementSpent FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN budget AS T3 ON T1.`link_to_budget` = T3.`budget_id` INNER JOIN event AS T4 ON T1.`link_to_event` = T4.`event_id` WHERE T3.`category` = 'Advertisement' AND T1.`expense_date` BETWEEN '2019-09-01' AND '2019-09-30' AND T2.`position` = 'Member' AND T2.`zip` IS NOT NULL AND T4.`event_name` = 'September Meeting';\t----- bird -----\tstudent_club"
  ],
  [
    "What department offers the major that Pierce and Guidi took?",
    "SELECT DISTINCT major.department FROM major INNER JOIN member ON major.major_id = member.zip_code INNER JOIN attendance ON member.member_id = attendance.link_to_member WHERE member.first_name = 'Pierce' AND member.last_name = 'Guidi';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total budgeted amount for all category in \"October Speaker\" event?",
    "SELECT SUM(budget.`amount`) FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'October Speaker'\t----- bird -----\tstudent_club"
  ],
  [
    "Was each expense in October Meeting on October 8, 2019 approved?",
    "SELECT COUNT(*) FROM expense JOIN attendance ON expense.link_to_member = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND event.event_date = '2019-10-08' AND expense.approved = 'true'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
    "SELECT AVG(e.`cost`) FROM expense AS e INNER JOIN member AS m ON e.`link_to_member` = m.`member_id` WHERE m.`first_name` = 'Elijah' AND (strftime('%m', e.`expense_date`) = '09' OR strftime('%m', e.`expense_date`) = '10');\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.",
    "SELECT (SELECT SUM(b.`amount`) AS total_spent_2019 FROM budget AS b INNER JOIN event AS e ON b.`link_to_event` = e.`event_id` WHERE strftime('%Y', e.`event_date`) = '2019' AND EXISTS (SELECT 1 FROM attendance AS a INNER JOIN member AS m ON a.`link_to_member` = m.`member_id` WHERE a.`link_to_event` = e.`event_id` AND m.`position` = 'Student_Club' AND m.`position` IS NOT NULL)) - (SELECT SUM(b.`amount`) AS total_spent_2020 FROM budget AS b INNER JOIN event AS e ON b.`link_to_event` = e.`event_id` WHERE strftime('%Y', e.`event_date`) = '2020' AND EXISTS (SELECT 1 FROM attendance AS a INNER JOIN member AS m ON a.`link_to_member` = m.`member_id` WHERE a.`link_to_event` = e.`event_id` AND m.`position` = 'Student_Club' AND m.`position` IS NOT NULL)) AS difference\t----- bird -----\tstudent_club"
  ],
  [
    "Give the location for \"Spring Budget Review\".",
    "SELECT location FROM event WHERE event_id = ( SELECT event_id FROM event WHERE event_name = 'Spring Budget Review' )\t----- bird -----\tstudent_club"
  ],
  [
    "What was the cost for the \"Posters\" on 2019/9/4?",
    "SELECT MAX(expense.cost) AS total_cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_date = '2019-09-04' AND event.event_name = 'Posters' AND expense.cost IS NOT NULL GROUP BY event.event_id;\t----- bird -----\tstudent_club"
  ],
  [
    "With the biggest budget for the \"Food\", what was the remaining of it?",
    "SELECT budget.`remaining` FROM budget WHERE budget.`category` = 'Food' ORDER BY budget.`amount` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What was the notes of the fundraising on 2019/9/14?",
    "SELECT T2.`notes` FROM event AS T2 INNER JOIN attendance AS T1 ON T2.`event_id` = T1.`link_to_event` INNER JOIN income AS T3 ON T3.`link_to_member` = T1.`link_to_member` WHERE T3.`source` = 'Fundraising' AND T3.`date_received` = '2019-09-14' GROUP BY T2.`event_id` HAVING COUNT(T3.`link_to_member`) > 0;\t----- bird -----\tstudent_club"
  ],
  [
    "How many majors are there in \"College of Humanities and Social Sciences\"?",
    "SELECT COUNT(*) FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the phone number of \"Carlo Jacobs\".",
    "SELECT phone FROM member WHERE member_id = ( SELECT member_id FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs' )\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the hometown county for \"Adela O'Gallagher\".",
    "SELECT z.county FROM zip_code z JOIN member m ON m.zip = z.zip_code WHERE m.first_name = 'Adela' AND m.last_name = 'O''Gallagher';\t----- bird -----\tstudent_club"
  ],
  [
    "For all the budgets for \"November Meeting\", how many of them had exceeded the budget?",
    "SELECT COUNT(*) FROM ( SELECT T1.`budget_id` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'November Meeting' AND T1.`remaining` < 0 ) AS T3\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the total number of the budget amount for \"September Speaker\" event.",
    "SELECT SUM(b.amount) AS total_budget_amount FROM budget AS b JOIN event AS e ON b.link_to_event = e.event_id WHERE e.event_name = 'September Speaker' AND e.status = 'Open' AND b.event_status = 'Open';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?",
    "SELECT DISTINCT e.event_status FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN expense ex ON a.link_to_member = ex.link_to_member WHERE e.event_date = '2019-08-20' AND ex.expense_description = 'Post Cards, Posters' AND ex.expense_date = '2019-08-20' AND e.event_status IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "What was Brent Thomason's major?",
    "SELECT major_name FROM member AS m INNER JOIN major AS ma ON m.zip = (SELECT zip_code.zip_code FROM zip_code WHERE zip_code.zip = m.zip) WHERE m.first_name = 'Brent' AND m.last_name = 'Thomason';\t----- bird -----\tstudent_club"
  ],
  [
    "For all the club members from \"Human Development and Family Studies\" major, how many of them wear large size t-shirt?",
    "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`department` = 'Human Development and Family Studies' AND T1.`t_shirt_size` = 'Large'\t----- bird -----\tstudent_club"
  ],
  [
    "What's Christof Nielson's zip code type?",
    "SELECT zip_code.`type` FROM zip_code INNER JOIN ( SELECT member.`zip` FROM member WHERE member.`first_name` = 'Christof' AND member.`last_name` = 'Nielson' ) AS T1 ON zip_code.`zip_code` = T1.`zip`\t----- bird -----\tstudent_club"
  ],
  [
    "State the major name for the Vice President of the club.",
    "SELECT DISTINCT M.`major_name` FROM member AS M INNER JOIN attendance AS A ON M.`member_id` = A.`link_to_member` INNER JOIN event AS E ON A.`link_to_event` = E.`event_id` WHERE E.`type` = 'Meeting' AND M.`position` = 'Vice President';\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown state for \"Sacha Harrison\"?",
    "SELECT z.short_state FROM member m JOIN zip_code z ON m.zip = z.zip_code WHERE m.first_name = 'Sacha' AND m.last_name = 'Harrison';\t----- bird -----\tstudent_club"
  ],
  [
    "Which department was the President of the club in?",
    "SELECT DISTINCT major.department FROM major INNER JOIN member ON member.zip = ( SELECT zip_code.zip FROM zip_code WHERE zip_code.city = 'Washington' ) INNER JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.position = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "State the date Connor Hilton paid his/her dues.",
    "SELECT i.date_received FROM income i JOIN member m ON i.link_to_member = m.member_id WHERE m.first_name = 'Connor' AND m.last_name = 'Hilton' AND i.source = 'Dues';\t----- bird -----\tstudent_club"
  ],
  [
    "Who was the first one paid his/her dues? Tell the full name.",
    "SELECT T2.`first_name`, T2.`last_name` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`source` = 'Dues' ORDER BY T1.`date_received` ASC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
    "SELECT SUM(b.`amount`) FROM budget AS b INNER JOIN event AS e ON b.`link_to_event` = e.`event_id` WHERE b.`category` = 'Advertisement' AND e.`event_name` = 'October Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "What percentage was the budget for Parking to the total budget for the \"November Speaker\"?",
    "SELECT SUM(b.`amount`) AS total_speaker_budget FROM budget AS b INNER JOIN event AS e ON b.`link_to_event` = e.`event_id` WHERE e.`event_name` = 'November Speaker'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total cost of the pizzas for all the events?",
    "SELECT SUM(e.`cost`) AS total_pizza_cost FROM expense AS e INNER JOIN ( SELECT `event_id` FROM event WHERE `event_status` = 'Open' ) AS open_events ON e.`link_to_event` = open_events.`event_id` WHERE e.`expense_description` = 'Pizza';\t----- bird -----\tstudent_club"
  ],
  [
    "How many cities are there in Orange County, Virginia?",
    "SELECT COUNT(*) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'\t----- bird -----\tstudent_club"
  ],
  [
    "List all of the College of Humanities and Social Sciences' departments.",
    "SELECT DISTINCT M.first_name, M.last_name FROM member AS M JOIN major AS MAJOR ON M.zip = ZIP_CODE.zip JOIN event AS EV ON EV.event_id = MAJOR.major_id WHERE MAJOR.name LIKE '%College of Humanities and Social Sciences%';\t----- bird -----\tstudent_club"
  ],
  [
    "Where is Amy Firth's hometown?",
    "SELECT T2.city, T2.county, T2.state FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Amy' AND T1.last_name = 'Firth';\t----- bird -----\tstudent_club"
  ],
  [
    "What are the expenses of the budget with the lowest remaining?",
    "SELECT T2.`expense_description` FROM expense AS T2 INNER JOIN budget AS T1 ON T2.`link_to_budget` = T1.`budget_id` ORDER BY T1.`remaining` ASC\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members who attended the event \"October Meeting\".",
    "SELECT DISTINCT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`link_to_event` = ( SELECT event_id FROM event WHERE event_name = 'October Meeting' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which college do most of the members go to?",
    "SELECT major.`college` FROM ( SELECT major.`college`, COUNT(DISTINCT attendance.`link_to_member`) AS member_count FROM attendance INNER JOIN member ON attendance.`link_to_member` = member.`member_id` INNER JOIN major ON member.`link_to_major` = major.`major_id` GROUP BY major.`college` ) AS subquery ORDER BY member_count DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "What does the person with the phone number \"809-555-3360\" major in?",
    "SELECT major_name FROM major JOIN member ON major.major_id = member.major_id WHERE member.phone = '809-555-3360' AND member.member_id IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the highest budget amount?",
    "SELECT T2.`event_name` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` ORDER BY T1.`amount` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "List all the expenses incurred by the vice president.",
    "SELECT E.event_id, E.event_name, E.event_date, E.type, E.notes, E.location, E.status, MAX(EXP.expense_date) AS latest_expense_date, SUM(EXP.cost) AS total_expense_cost FROM event AS E LEFT JOIN expense AS EXP ON E.event_id = EXP.link_to_event WHERE E.type = 'Meeting' GROUP BY E.event_id, E.event_name, E.event_date, E.type, E.notes, E.location, E.status;\t----- bird -----\tstudent_club"
  ],
  [
    "How many members attended the \"Women's Soccer\" event?",
    "SELECT COUNT(DISTINCT member.`member_id`) FROM attendance AS attendance_link INNER JOIN event AS event_link ON attendance_link.`link_to_event` = event_link.`event_id` INNER JOIN member ON attendance_link.`link_to_member` = member.`member_id` WHERE event_link.`event_name` = 'Women''s Soccer';\t----- bird -----\tstudent_club"
  ],
  [
    "When did the member, Casey Mason, received the income?",
    "SELECT date_received FROM income WHERE income_id = ( SELECT income_id FROM income WHERE link_to_member = ( SELECT member_id FROM member WHERE first_name = 'Casey' AND last_name = 'Mason' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "How many of the members' hometowns are from Maryland state?",
    "SELECT COUNT(*) FROM ( SELECT T1.`member_id` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`state` = 'Maryland' ) AS T3\t----- bird -----\tstudent_club"
  ],
  [
    "How many events did the member with the phone number \"954-555-6240\" attend?",
    "SELECT COUNT(DISTINCT attendance.link_to_event) FROM attendance INNER JOIN member ON attendance.link_to_member = member.member_id WHERE member.phone = '954-555-6240'\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members of the \"School of Applied Sciences, Technology and Education\" department.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'School of Applied Sciences, Technology and Education';\t----- bird -----\tstudent_club"
  ],
  [
    "Among all the closed events, which event has the highest spend-to-budget ratio?",
    "SELECT event_id, MAX(spent / amount) AS spend_to_budget_ratio FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.status = 'Closed' GROUP BY event_id ORDER BY spend_to_budget_ratio DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "How many student have the position of president?",
    "SELECT COUNT(*) FROM ( SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 WHERE T1.`position` = 'President' ) AS T2\t----- bird -----\tstudent_club"
  ],
  [
    "What is the highest amount of budget spend for an event?",
    "SELECT T3.event_name, MAX(T5.amount) AS max_spent FROM event AS T3 INNER JOIN budget AS T5 ON T3.event_id = T5.link_to_event GROUP BY T3.event_id ORDER BY max_spent DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "How many meeting events were held in 2020?",
    "SELECT COUNT(*) FROM event WHERE type = 'Meeting' AND strftime('%Y', event_date) = '2020';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total amount of money spent for food?",
    "SELECT SUM(B.amount) AS total_spent_on_food FROM budget AS B WHERE B.`category` = 'Food' AND B.`event_status` = 'Open';\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of students that have attended more than 7 events.",
    "SELECT DISTINCT T2.first_name, T2.last_name FROM member AS T2 JOIN ( SELECT T1.link_to_member FROM attendance AS T1 GROUP BY T1.link_to_member HAVING COUNT(T1.link_to_event) > 7 ) AS T3 ON T2.member_id = T3.link_to_member;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students majored in interior design, who have attended the Community Theater event?",
    "SELECT DISTINCT T1.member_id FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id WHERE T2.major_name = 'Interior Design' AND T4.event_name = 'Community Theater';\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of students from Georgetown, South Carolina.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`city` = 'Georgetown' AND T2.`state` = 'South Carolina'\t----- bird -----\tstudent_club"
  ],
  [
    "How many income generated by Grant Gilmour?",
    "SELECT COUNT(*) FROM ( SELECT T1.`amount` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`last_name` = 'Gilmour' ) AS T3\t----- bird -----\tstudent_club"
  ],
  [
    "Which student was able to generate income more than $40?",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN income AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`amount` > 40\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total expense for the Yearly Kickoff?",
    "SELECT SUM(e.cost) AS total_expense FROM expense AS e JOIN attendance AS a ON e.link_to_member = a.link_to_member JOIN event AS ev ON a.link_to_event = ev.event_id WHERE ev.event_name = 'Yearly Kickoff' AND e.approved IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has been entrusted to manage the budget for the Yearly Kickoff?",
    "SELECT DISTINCT T4.major_id FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN major AS T4 ON T1.link_to_major = T4.major_id WHERE T3.event_name = 'Yearly Kickoff' AND T1.position = 'Treasurer';\t----- bird -----\tstudent_club"
  ],
  [
    "Which students manage to generate the highest income. State his/her full name along with the income source.",
    "SELECT m.first_name || ' ' || m.last_name AS full_name, i.source AS income_source, i.amount AS income FROM income i INNER JOIN member m ON i.link_to_member = m.member_id WHERE i.amount = ( SELECT MAX(i2.amount) FROM income i2 INNER JOIN member m2 ON i2.link_to_member = m2.member_id );\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the lowest cost?",
    "SELECT T1.event_name FROM event AS T1 WHERE T1.event_id = ( SELECT T2.event_id FROM expense AS T2 WHERE T2.cost IS NOT NULL GROUP BY T2.link_to_event ORDER BY MIN(T2.cost) ASC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?",
    "SELECT (SUM(CASE WHEN e.event_name = 'Yearly Kickoff' THEN ex.cost ELSE 0 END) / SUM(ex.cost)) * 100 AS percentage FROM expense ex JOIN attendance a ON ex.link_to_member = a.member_id JOIN event e ON a.link_to_event = e.event_id JOIN zip_code z ON a.zip = z.zip_code WHERE ex.approved = 'true' AND e.event_name = 'Yearly Kickoff' AND ex.cost IS NOT NULL GROUP BY e.event_name;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the ratio between students majored in finance and physics?",
    "SELECT (SELECT COUNT(*) FROM member INNER JOIN major ON member.`zip` = zip_code.`zip_code` AND member.`link_to_major` = major.`major_id` AND major.`department` = 'Finance') / (SELECT COUNT(*) FROM member INNER JOIN major ON member.`zip` = zip_code.`zip_code` AND member.`link_to_major` = major.`major_id` AND major.`department` = 'Physics') AS ratio FROM member INNER JOIN major ON member.`zip` = zip_code.`zip_code` AND member.`link_to_major` = major.`major_id`;\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the top source of funds received in September 2019 based on their amount.",
    "SELECT T1.`source` FROM income AS T1 WHERE T1.`date_received` BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY T1.`amount` DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the full name and email address of the Student_Club's Secretary.",
    "SELECT T1.`first_name`, T1.`last_name`, T1.`email` FROM member AS T1 WHERE T1.`position` = 'Secretary' GROUP BY T1.`first_name`, T1.`last_name`, T1.`email`\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have major in 'Physics Teaching'?",
    "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Physics Teaching'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members did attend the event 'Community Theater' in 2019?",
    "SELECT COUNT(DISTINCT T1.member_id) FROM attendance AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T2.event_name = 'Community Theater' AND strftime('%Y', T2.event_date) = '2019';\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the number of events attended by Luisa Guidi. What is her major?",
    "SELECT major_name FROM major WHERE major_id IN ( SELECT major_id FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE first_name = 'Luisa' AND last_name = 'Guidi' );\t----- bird -----\tstudent_club"
  ],
  [
    "On average, how much did the Student_Club spend on food for the typical event in the past?",
    "SELECT AVG(total_spent_on_food) AS avg_spent_on_food_per_event FROM ( SELECT b.`event_id`, SUM(b.`amount`) AS total_spent_on_food FROM budget AS b INNER JOIN event AS e ON b.`link_to_event` = e.`event_id` WHERE e.`event_status` = 'Closed' AND b.`category` = 'Food' GROUP BY b.`event_id` ) AS subquery;\t----- bird -----\tstudent_club"
  ],
  [
    "Name the event with the highest amount spent on advertisement.",
    "SELECT event_name FROM event WHERE event_id = ( SELECT event_id FROM budget WHERE category = 'Advertisement' ORDER BY spent DESC LIMIT 1 );\t----- bird -----\tstudent_club"
  ],
  [
    "Did Maya Mclean attend the 'Women's Soccer' event?",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`link_to_event` = ( SELECT `event_id` FROM event WHERE event_name = 'Women''s Soccer' ) AND T1.`first_name` = 'Maya' AND T1.`last_name` = 'Mclean'\t----- bird -----\tstudent_club"
  ],
  [
    "Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service'",
    "SELECT COUNT(*) FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'Member' AND event.event_date BETWEEN '2019-01-01' AND '2019-12-31' AND event.type = 'Community Service'\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the cost of posters for 'September Speaker' event.",
    "SELECT cost FROM expense WHERE expense_id = ( SELECT expense_id FROM expense WHERE expense_description = 'Posters' AND link_to_budget = ( SELECT budget_id FROM budget WHERE link_to_event = ( SELECT event_id FROM event WHERE event_name = 'September Speaker' ) ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most popular size of t-shirt ordered by the club members?",
    "SELECT T2.`t_shirt_size` FROM ( SELECT T2.`t_shirt_size`, COUNT(*) AS `count` FROM attendance AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` GROUP BY T2.`t_shirt_size` ) AS T3 ORDER BY T3.`count` DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the name of the closed event whose cost has exceeded the budget the most.",
    "SELECT T1.`event_name` FROM event AS T1 INNER JOIN budget AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T1.`status` = 'Closed' AND T2.`remaining` < 0 ORDER BY T2.`remaining` ASC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Identify the type of expenses and their total value approved for 'October Meeting' event.",
    "SELECT DISTINCT expense_description, SUM(cost) AS total_cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON expense.link_to_event = event.event_id WHERE expense.approved = 'true' AND event.event_name = 'October Meeting' GROUP BY expense_description;\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount.",
    "SELECT category, amount FROM budget WHERE link_to_event = ( SELECT event_id FROM event WHERE event_name = 'April Speaker' ) ORDER BY amount ASC\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Food, which one has the highest budgeted amount?",
    "SELECT T2.event_name, T1.amount FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Food' ORDER BY T1.amount DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Advertising, list out top three which have the most budgeted amount?",
    "SELECT T1.`budget_id`, T1.`category`, T1.`spent`, T1.`remaining`, T1.`amount` FROM budget AS T1 WHERE T1.`category` = 'Advertisement' ORDER BY T1.`amount` DESC LIMIT 3\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total cost spent for Parking in the list.",
    "SELECT SUM(T2.`cost`) FROM expense AS T1 INNER JOIN expense AS T2 ON T1.`expense_id` = T2.`expense_id` WHERE T2.`expense_description` = 'Parking'\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the total expense used on 8/20/2019.",
    "SELECT SUM(cost) AS total_expense FROM expense WHERE expense_date = '2019-08-20' AND cost IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?",
    "SELECT T1.`first_name`, T1.`last_name`, SUM(T3.`cost`) AS total_cost FROM member AS T1 INNER JOIN attendance AS T4 ON T1.`member_id` = T4.`link_to_member` INNER JOIN expense AS T3 ON T4.`link_to_member` = T3.`link_to_member` WHERE T1.`member_id` = 'rec4BLdZHS2Blfp4v' GROUP BY T1.`first_name`, T1.`last_name`\t----- bird -----\tstudent_club"
  ],
  [
    "State what kind of expenses that Sacha Harrison incurred?",
    "SELECT expense_description FROM expense INNER JOIN member ON expense.`link_to_member` = member.`member_id` WHERE member.`member_id` = ( SELECT member_id FROM member WHERE first_name = 'Sacha' AND last_name = 'Harrison' )\t----- bird -----\tstudent_club"
  ],
  [
    "What kind of expenses incurred by members who have X-Large in size of tee shirt?",
    "SELECT DISTINCT M.first_name, M.last_name, M.email, E.event_name, E.event_date, B.category, B.spent, B.remaining, B.amount FROM member AS M JOIN attendance AS A ON M.member_id = A.link_to_member JOIN event AS E ON A.link_to_event = E.event_id JOIN budget AS B ON E.event_id = B.link_to_event JOIN expense AS EE ON M.member_id = EE.link_to_member WHERE EE.expense_description IS NOT NULL AND E.t_shirt_size = 'X-Large' GROUP BY M.first_name, M.last_name, M.email, E.event_name, E.event_date, B.category, B.spent, B.remaining, B.amount ORDER BY E.event_date ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the zip code of member who incurred less than 50USD.",
    "SELECT DISTINCT T1.`zip` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`cost` < 50\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Phillip Cullen has joined.",
    "SELECT major_name FROM major JOIN member ON major.major_id = member.member_id WHERE first_name = 'Phillip' AND last_name = 'Cullen';\t----- bird -----\tstudent_club"
  ],
  [
    "List out the position of members who joined major of Business.",
    "SELECT T1.`position` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` INNER JOIN major AS T3 ON T1.`link_to_major` = T3.`major_id` WHERE T3.`major_name` = 'Business'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of Business have the Medium size of tee shirt?",
    "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Business' AND T1.`t_shirt_size` = 'Medium'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the type of events which have remaining budget more than 30 USD.",
    "SELECT T2.`type` FROM event AS T2 INNER JOIN budget AS T1 ON T2.`event_id` = T1.`link_to_event` WHERE T1.`remaining` > 30\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the category of events which were held at MU 215.",
    "SELECT DISTINCT T1.`category` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`location` = 'MU 215'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the category of event which was taken place in 2020-03-24T12:00:00?",
    "SELECT T2.`category` FROM event AS T1 INNER JOIN budget AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T1.`event_date` = '2020-03-24T12:00:00'\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Vice President has joined.",
    "CREATE INDEX idx_member_zip ON member(zip); SELECT DISTINCT major_name FROM member AS M JOIN major AS T1 ON M.zip = ( SELECT zip_code.zip_code FROM zip_code WHERE zip_code.zip = M.zip ) WHERE M.position = 'Vice President';\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of members who are major Mathematics in the list?",
    "SELECT (SUM(CASE WHEN T1.`link_to_major` = T2.`major_id` THEN 1 ELSE 0 END) / COUNT(*)) * 100 FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id`\t----- bird -----\tstudent_club"
  ],
  [
    "State the category of events were held at MU 215.",
    "SELECT DISTINCT B.`category` FROM event AS E INNER JOIN budget AS B ON E.`event_id` = B.`event_id` WHERE E.`location` = 'MU 215' ORDER BY B.`category` ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "How many income are received with an amount of 50?",
    "SELECT m.`first_name`, m.`last_name`, m.`email`, m.`position`, m.`t_shirt_size`, m.`phone`, m.`zip`, m.`link_to_major` FROM income AS i INNER JOIN member AS m ON i.`link_to_member` = m.`member_id` WHERE i.`amount` = 50 AND m.`zip` IS NOT NULL GROUP BY m.`zip` ORDER BY m.`zip` ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members, how many of them have an extra large t-shirt size?",
    "SELECT (SELECT COUNT(*) FROM member WHERE t_shirt_size = 'X-Large') / (SELECT COUNT(*) FROM member)\t----- bird -----\tstudent_club"
  ],
  [
    "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
    "SELECT COUNT(*) FROM ( SELECT T1.`major_name` FROM major AS T1 INNER JOIN major AS T2 ON T1.`department` = T2.`department` WHERE T2.`department` = 'School of Applied Sciences, Technology and Education' ) AS T3\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of members with a major in environmental engineering and include its department and college name.",
    "SELECT T1.`last_name`, T2.`department`, T2.`college` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`department` IN ( SELECT major.`department` FROM major WHERE major_id IN ( SELECT major_id FROM major WHERE major_name = 'Environmental Engineering' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent?",
    "SELECT DISTINCT budget.`category` FROM budget INNER JOIN event ON budget.`link_to_event` = event.`event_id` WHERE event.`location` = 'MU 215' AND event.`type` = 'Guest Speaker' AND budget.`spent` = 0\t----- bird -----\tstudent_club"
  ],
  [
    "List the city and state of members enrolled under electrical and computer engineering department.",
    "SELECT T3.`city`, T3.`state` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` INNER JOIN zip_code AS T3 ON T1.`zip` = T3.`zip_code` WHERE T2.`department` = 'Electrical and Computer Engineering Department' AND T1.`position` = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
    "SELECT DISTINCT T1.member_id FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN zip_code AS T4 ON T1.zip = T4.zip_code WHERE T1.position = 'Vice President' AND T3.type = 'Social' AND T4.city = 'Washington' AND T4.state = 'Texas' AND T4.short_state = 'TX' AND T3.location = '900 E. Washington St.';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the last name and position of the student that bought pizza on 09/10/2019?",
    "SELECT T2.`last_name`, T2.`position` FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`expense_description` = 'Pizza' AND T1.`expense_date` = '2019-09-10'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of the members of the club that attended the women's soccer event.",
    "SELECT T1.`last_name` FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`event_name` = 'Women''s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club?",
    "WITH StudentClubMembers AS ( SELECT member_id FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Student_Club' ) SELECT (COUNT(CASE WHEN T1.amount = 50 THEN 1 END) / COUNT(DISTINCT T2.member_id)) * 100 AS percentage FROM income AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T2.position = 'Member' AND T2.zip IS NOT NULL AND T2.member_id IN (SELECT member_id FROM StudentClubMembers);\t----- bird -----\tstudent_club"
  ],
  [
    "Which countries have zip codes with post office boxes?",
    "SELECT DISTINCT T2.`short_state` FROM zip_code AS T1 INNER JOIN zip_code AS T2 ON T1.`zip_code` = T2.`zip_code` WHERE T1.`type` = 'PO Box'\t----- bird -----\tstudent_club"
  ],
  [
    "What are the zip codes that have post office boxes in the country of the country of San Juan Municipio whose state is Puerto Rico?",
    "SELECT DISTINCT m.`zip` FROM member AS m JOIN zip_code AS z ON m.`zip` = z.`zip_code` JOIN major AS ma ON m.`link_to_major` = ma.`major_id` JOIN event AS e ON ma.`department` = e.`department` JOIN attendance AS a ON m.`member_id` = a.`link_to_member` JOIN budget AS b ON e.`event_id` = b.`link_to_event` JOIN expense AS ex ON a.`link_to_member` = ex.`link_to_member` WHERE e.`type` = 'PO Box' -- Assuming 'PO Box' is represented by a specific type AND ma.`college` = 'College of Education & Human Services' -- Assuming the department related to PO Boxes AND z.`zip_code` IS NOT NULL AND e.`status` = 'Open' -- Assuming only open events have PO Boxes GROUP BY z.`zip_code` ORDER BY z.`zip_code` ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
    "SELECT event_name FROM event WHERE type = 'Game' AND status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club"
  ],
  [
    "Please provide links to events for members who have paid more than 50 dollar.",
    "SELECT DISTINCT E.event_id, E.event_name, E.event_date, E.type, E.notes, E.location, E.status FROM event AS E JOIN attendance AS A ON E.event_id = A.link_to_event JOIN member AS M ON A.link_to_member = M.member_id JOIN budget AS B ON E.event_id = B.link_to_event WHERE B.amount > 50 AND B.event_status = 'Open' GROUP BY E.event_id, M.member_id;\t----- bird -----\tstudent_club"
  ],
  [
    "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
    "SELECT DISTINCT m.member_id, m.first_name, m.last_name, e.event_name, e.event_date FROM member AS m INNER JOIN attendance AS a ON m.member_id = a.link_to_member INNER JOIN event AS e ON a.link_to_event = e.event_id INNER JOIN expense AS ex ON m.member_id = ex.link_to_member INNER JOIN zip_code AS z ON m.zip = z.zip_code WHERE ex.expense_date BETWEEN '2019-01-10' AND '2019-11-19' AND ex.approved = 'true' AND e.status = 'Open' AND z.type = 'Standard' GROUP BY m.member_id, m.first_name, m.last_name, e.event_name, e.event_date;\t----- bird -----\tstudent_club"
  ],
  [
    "Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".",
    "SELECT DISTINCT M.`college` FROM member AS M INNER JOIN major AS MA ON M.`link_to_major` = MA.`major_id` WHERE MA.`college` = 'rec1N0upiVLy5esTO';\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the members who majored in business at the College of Agriculture and Applied Sciences.",
    "SELECT DISTINCT member.`phone` FROM member JOIN major ON member.`link_to_major` = major.`major_id` WHERE major.`major_name` = 'Business' AND major.`department` = 'College of Agriculture and Applied Sciences';\t----- bird -----\tstudent_club"
  ],
  [
    "List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019.",
    "SELECT DISTINCT m.`email` FROM member AS m JOIN attendance AS a ON m.`member_id` = a.`link_to_member` JOIN expense AS e ON a.`link_to_member` = e.`link_to_member` JOIN budget AS b ON e.`link_to_budget` = b.`budget_id` WHERE e.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19' AND e.`cost` > 20 AND b.`event_status` = 'Open';\t----- bird -----\tstudent_club"
  ],
  [
    "How many members have education major in the College of Education & Human Services?",
    "SELECT COUNT(*) FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`department` = 'Education & Human Services' AND T2.`college` = 'College of Education & Human Services' AND T1.`position` = 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the events that went over budget?",
    "SELECT (SUM(CASE WHEN T1.`remaining` < 0 THEN 1 ELSE 0 END) / COUNT(*)) * 100 FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id`\t----- bird -----\tstudent_club"
  ],
  [
    "Give the event ID, location, and status of events conducted from November 2019 to March 2020.",
    "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31' AND location IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "List the expenses that spend more than fifty dollars on average.",
    "SELECT expense_id, expense_description, cost FROM expense WHERE cost > ( SELECT AVG(cost) FROM expense )\t----- bird -----\tstudent_club"
  ],
  [
    "Find the full name of members whose t-shirt size is extra large.",
    "SELECT * FROM event;\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of zip codes that are PO boxes.",
    "SELECT (COUNT(*) / (SELECT COUNT(*) FROM zip_code)) * 100 FROM zip_code WHERE type = 'PO Box'\t----- bird -----\tstudent_club"
  ],
  [
    "List the name and location of events that underspend its budget.",
    "SELECT E.`event_name`, E.`location` FROM event AS E INNER JOIN ( SELECT B.`event_id`, SUM(B.`remaining`) AS total_remaining FROM budget AS B GROUP BY B.`event_id` ) AS BudgetRemaining ON E.`event_id` = BudgetRemaining.`event_id` WHERE BudgetRemaining.`total_remaining` > 0;\t----- bird -----\tstudent_club"
  ],
  [
    "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
    "SELECT DISTINCT E.`event_name`, E.`event_date` FROM event AS E INNER JOIN expense AS EX ON E.`event_id` = EX.`link_to_event` INNER JOIN budget AS B ON EX.`link_to_budget` = B.`budget_id` WHERE EX.`expense_description` = 'Pizza' AND EX.`cost` > 50 AND EX.`cost` < 100 GROUP BY E.`event_name`, E.`event_date`\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name and major of members who had to spend more than a hundred dollars on an expense?",
    "SELECT DISTINCT T1.`first_name`, T1.`last_name`, T4.`major_name` FROM member AS T1 INNER JOIN expense AS T3 ON T1.`member_id` = T3.`link_to_member` INNER JOIN budget AS T2 ON T3.`link_to_budget` = T2.`budget_id` INNER JOIN major AS T4 ON T1.`link_to_major` = T4.`major_id` WHERE T2.`amount` > 100 AND T3.`cost` > 100\t----- bird -----\tstudent_club"
  ],
  [
    "In the events with more than forty incomes, list the city and country in which the event is happening.",
    "SELECT DISTINCT T3.`city`, T3.`state` FROM zip_code AS T3 INNER JOIN member AS T5 ON T3.`zip` = T5.`zip` INNER JOIN attendance AS T6 ON T5.`member_id` = T6.`link_to_member` INNER JOIN ( SELECT E.`event_id` FROM event AS E INNER JOIN ( SELECT I.`link_to_event` FROM income AS I WHERE I.`amount` > 40 GROUP BY I.`link_to_event` HAVING COUNT(I.`income_id`) > 40 ) AS SubQuery1 ON E.`event_id` = SubQuery1.`link_to_event` ) AS T7 ON T6.`link_to_event` = T7.`event_id`\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members who incurred expenses in more than one event, who paid the most amount?",
    "SELECT m.member_id, MAX(e.cost) AS max_cost FROM expense e INNER JOIN ( SELECT a.link_to_member FROM attendance a INNER JOIN expense ex ON a.link_to_member = ex.link_to_member GROUP BY ex.link_to_member HAVING COUNT(DISTINCT a.link_to_event) > 1 ) AS subquery ON e.link_to_member = subquery.link_to_member INNER JOIN member m ON e.link_to_member = m.member_id GROUP BY m.member_id;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average amount paid by students in a position other than a member?",
    "SELECT T1.`member_id`, T1.`position`, T1.`zip` FROM member AS T1 WHERE T1.`position` != 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of events with less than average parking cost.",
    "SELECT DISTINCT E.`event_name` FROM `event` AS E JOIN ( SELECT B.`event_id`, AVG(B.`amount`) AS avg_cost FROM `budget` AS B WHERE B.`category` = 'Parking' AND B.`event_status` = 'Open' GROUP BY B.`event_id` ) AS B ON E.`event_id` = B.`event_id` WHERE E.`category` = 'Parking' AND E.`cost` < (SELECT MAX(avg_cost) FROM (SELECT AVG(B.`amount`) AS avg_cost FROM `budget` AS B WHERE B.`category` = 'Parking' AND B.`event_status` = 'Open' GROUP BY B.`event_id`) AS C) AND E.`event_status` = 'Open'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the cost for the game events?",
    "SELECT (SUM(e.`cost`) / COUNT(DISTINCT ev.`event_id`)) * 100 AS percentage FROM expense AS e INNER JOIN attendance AS a ON e.`link_to_member` = a.`member_id` INNER JOIN event AS ev ON a.`link_to_event` = ev.`event_id` WHERE ev.`type` = 'Game' AND ev.`event_id` IS NOT NULL GROUP BY ev.`event_id`;\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget allowed the most money for water, chips, and cookies?",
    "SELECT MAX(T2.amount) FROM budget AS T2 INNER JOIN ( SELECT T1.link_to_budget FROM expense AS T1 WHERE T1.expense_description = 'Water, chips, cookies' GROUP BY T1.link_to_budget ) AS T3 ON T2.budget_id = T3.link_to_budget;\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the top five members who spend the most money in the descending order of spending.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` GROUP BY T1.`member_id` ORDER BY SUM(T2.`cost`) DESC LIMIT 5\t----- bird -----\tstudent_club"
  ],
  [
    "Give the full name and contact number of members who had to spend more than average on each expense.",
    "-- Create indexes for faster querying CREATE INDEX idx_member_id ON member(member_id); CREATE INDEX idx_expense_link_to_member ON expense(link_to_member); CREATE INDEX idx_expense_link_to_budget ON expense(link_to_budget); CREATE INDEX idx_budget_link_to_event ON budget(link_to_event); CREATE INDEX idx_event_event_id ON event(event_id); CREATE INDEX idx_member_zip ON member(zip); CREATE INDEX idx_major_major_id ON major(major_id); CREATE INDEX idx_zip_zip_code ON zip_code(zip_code); -- Query to find the full name and contact number of members who had to spend more than average on each expense SELECT m.first_name || ' ' || m.last_name AS full_name, m.email AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN ( SELECT link_to_budget, AVG(cost) AS avg_cost FROM expense GROUP BY link_to_budget ) avg_costs ON b.budget_id = avg_costs.link_to_budget WHERE e.cost > avg_costs.avg_cost GROUP BY m.member_id;\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference in the percentage of members in Maine and Vermont.",
    "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM member) AS percentage_vermont FROM member INNER JOIN zip_code ON member.`zip` = zip_code.`zip_code` WHERE zip_code.`state` = 'Vermont';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the major of Garrett Gerke and which department does it belong to?",
    "SELECT major.`department` FROM major WHERE major.`major_id` = ( SELECT major_id FROM member WHERE first_name = 'Garrett' AND last_name = 'Gerke' );\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
    "SELECT m.first_name, m.last_name, b.amount AS cost FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN budget AS b ON a.link_to_event = b.link_to_event JOIN expense AS e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies' AND b.category = 'Food' GROUP BY m.first_name, m.last_name, b.amount;\t----- bird -----\tstudent_club"
  ],
  [
    "List the last names of students under the Elementary Education major and include their phone numbers.",
    "SELECT T1.`last_name`, T1.`phone` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Elementary Education'\t----- bird -----\tstudent_club"
  ],
  [
    "What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category?",
    "SELECT budget.`category`, MAX(budget.`amount`) AS amount_budgeted FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'January Speaker' GROUP BY budget.`category`\t----- bird -----\tstudent_club"
  ],
  [
    "List the event names which were budgeted for the food.",
    "SELECT T1.`event_name` FROM event AS T1 INNER JOIN budget AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`category` = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
    "SELECT T2.`amount` FROM member AS T1 INNER JOIN income AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`date_received` = '2019-09-09'\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget category does the expense 'Posters' fall to?",
    "SELECT category FROM budget WHERE budget_id = ( SELECT budget_id FROM expense WHERE expense_description = 'Posters' )\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to.",
    "SELECT m.`first_name`, m.`last_name`, ma.`college` FROM member AS m JOIN attendance AS a ON m.`member_id` = a.`link_to_member` JOIN event AS e ON a.`link_to_event` = e.`event_id` JOIN zip_code AS za ON m.`zip` = za.`zip_code` JOIN major AS ma ON m.`link_to_major` = ma.`major_id` WHERE m.`position` = 'Secretary' AND e.`status` = 'Open' GROUP BY m.`first_name`, m.`last_name`, ma.`college`\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total amount spent on speaker gifts and list the name of the event they were spent on.",
    "SELECT e.`event_name` FROM event AS e INNER JOIN budget AS b ON e.`event_id` = b.`link_to_event` WHERE b.`category` = 'Speaker Gifts'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown of Garrett Girke?",
    "SELECT T1.city FROM zip_code AS T1 INNER JOIN member AS T3 ON T1.zip = T3.zip WHERE T3.first_name = 'Garrett' AND T3.last_name = 'Girke';\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has the hometown of Lincolnton, North Carolina with the zip code of 28092? List their full name and position.",
    "SELECT member.first_name, member.last_name, major.major_name FROM member JOIN major ON member.link_to_major = major.major_id WHERE member.member_id = ( SELECT member.member_id FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.zip_code = ( SELECT zip_code.zip_code FROM zip_code WHERE city = 'Lincolnton' AND state = 'North Carolina' ) AND member.zip = 28092 )\t----- bird -----\tstudent_club"
  ],
  [
    "How many gas stations in CZE has Premium gas?",
    "SELECT COUNT(DISTINCT T1.`GasStationID`) FROM gasstations AS T1 INNER JOIN yearmonth AS T2 ON T1.`ChainID` = T2.`CustomerID` WHERE T1.`Country` = 'CZE' AND T1.`Segment` = 'Premium'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the ratio of costumers who pay in EUR against customers who pay in CZK?",
    "SELECT ( SELECT COUNT(*) FROM customers WHERE Currency = 'EUR' ) / ( SELECT COUNT(*) FROM customers WHERE Currency = 'CZK' ) AS ratio\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In 2012, who had the least consumption in LAM?",
    "SELECT ym.CustomerID, MIN(ym.Consumption) AS MinConsumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE c.Segment = 'LAM' AND strftime('%Y', ym.Date) = '2012' GROUP BY ym.CustomerID ORDER BY MinConsumption ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the average monthly consumption of customers in SME for the year 2013?",
    "SELECT AVG(Consumption) / 12 AS AverageMonthlyConsumption FROM ( SELECT strftime('%Y', T1.`Date`) AS Year, MONTH(T1.`Date`) AS Month, SUM(T1.`Consumption`) AS Consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'SME' AND T1.`Date` BETWEEN '2013-01-01' AND '2013-12-31' GROUP BY Year, Month ) AS T4\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customers, paying in CZK, consumed the most gas in 2011?",
    "SELECT T1.`CustomerID`, SUM(T1.`Consumption`) AS TotalConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` BETWEEN '20110101' AND '20111231' AND T2.`Currency` = 'CZK' GROUP BY T1.`CustomerID` ORDER BY SUM(T1.`Consumption`) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many customers in KAM had a consumption of less than 30,000 for the year 2012?",
    "SELECT COUNT(*) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'KAM' AND T1.`Date` BETWEEN '201201' AND '201212' AND T1.`Consumption` < 30000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "SELECT (SELECT SUM(y2.`Consumption`) FROM yearmonth AS y2 INNER JOIN customers AS c2 ON y2.`CustomerID` = c2.`CustomerID` WHERE c2.`Currency` = 'CZK' AND y2.`Date` BETWEEN '20120101' AND '20121231') - (SELECT SUM(y2.`Consumption`) FROM yearmonth AS y2 INNER JOIN customers AS c2 ON y2.`CustomerID` = c2.`CustomerID` WHERE c2.`Currency` = 'EUR' AND y2.`Date` BETWEEN '20120101' AND '20121231') AS Consumption_difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most gas use paid in EUR?",
    "SELECT strftime('%Y', yearmonth.`Date`) AS Year, SUM(yearmonth.`Consumption`) AS TotalConsumption FROM yearmonth INNER JOIN customers ON yearmonth.`CustomerID` = customers.`CustomerID` WHERE customers.`Currency` = 'EUR' GROUP BY Year ORDER BY TotalConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which segment had the least consumption?",
    "SELECT c.`Segment`, MIN(y.`Consumption`) AS `LeastConsumption` FROM customers AS c JOIN yearmonth AS y ON c.`CustomerID` = y.`CustomerID` GROUP BY c.`Segment` ORDER BY `LeastConsumption` ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most consumption of gas paid in CZK?",
    "SELECT strftime('%Y', Y1.`Date`) AS Year, SUM(Y1.`Consumption`) AS TotalConsumption FROM yearmonth AS Y1 INNER JOIN customers AS C1 ON Y1.`CustomerID` = C1.`CustomerID` WHERE C1.`Currency` = 'CZK' GROUP BY strftime('%Y', Y1.`Date`) ORDER BY TotalConsumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the gas consumption peak month for SME customers in 2013?",
    "SELECT YM.`Date` AS PeakMonth FROM ( SELECT YM.`Date`, MAX(YM.`Consumption`) AS PeakConsumption FROM yearmonth AS YM INNER JOIN customers AS C ON YM.`CustomerID` = C.`CustomerID` WHERE C.`Segment` = 'SME' AND YM.`Date` LIKE '2013%' GROUP BY YM.`Date` ) AS PeakMonthData ORDER BY PeakConsumption DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "SELECT T2.Segment, AVG(T1.Consumption) AS AnnualAverageConsumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date BETWEEN '201301' AND '201312' GROUP BY T2.Segment HAVING T1.Consumption IS NOT NULL ORDER BY AnnualAverageConsumption ASC;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "SELECT T1.`Segment`, ((T1.`Consumption_2013` - T1.`Consumption_2012`) / T1.`Consumption_2013`) * 100 AS `Percentage_Increase` FROM ( SELECT YM.`CustomerID`, C.`Segment`, SUM(CASE WHEN YM.`Date` LIKE '201201' THEN YM.`Consumption` ELSE 0 END) AS `Consumption_2012`, SUM(CASE WHEN YM.`Date` LIKE '201312' THEN YM.`Consumption` ELSE 0 END) AS `Consumption_2013` FROM yearmonth AS YM INNER JOIN customers AS C ON YM.`CustomerID` = C.`CustomerID` WHERE C.`Segment` IN ('SME', 'LAM', 'KAM') GROUP BY YM.`CustomerID`, C.`Segment` ) AS T1 ORDER BY `Percentage_Increase` DESC;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did customer 6 consume in total between August and November 2013?",
    "SELECT SUM(T1.`Consumption`) FROM yearmonth AS T1 WHERE T1.`CustomerID` = 6 AND T1.`Date` BETWEEN '201308' AND '201311'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "SELECT COUNT(*) FROM gasstations WHERE ChainID IN ( SELECT ChainID FROM gasstations WHERE Segment = 'Discount' ) AND Country = 'SVK'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much more was customer 7 consuming in April 2013 than customer 5?",
    "SELECT ( SELECT `Consumption` FROM yearmonth WHERE `CustomerID` = 7 AND `Date` = '201304' ) - ( SELECT `Consumption` FROM yearmonth WHERE `CustomerID` = 5 AND `Date` = '201304' ) AS Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "SELECT ( SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Currency = 'CZK' ) - ( SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Currency = 'EUR' ) AS Difference\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?",
    "SELECT T1.CustomerID, MAX(T2.Consumption) AS MaxConsumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'EUR' AND T2.Date LIKE '201310%' GROUP BY T1.CustomerID HAVING MaxConsumption = ( SELECT MAX(Consumption) FROM yearmonth WHERE Date LIKE '201310%' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who among KAM's customers consumed the most? How much did it consume?",
    "SELECT MAX(`Consumption`) FROM yearmonth WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Segment` = 'KAM' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did the KAM customers consume in total in May 2013?",
    "SELECT SUM(y.Consumption) FROM yearmonth y JOIN customers c ON y.CustomerID = c.CustomerID WHERE c.Segment = 'KAM' AND y.Date LIKE '201305%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many percent of LAM customer consumed more than 46.73?",
    "SELECT ( ( SELECT COUNT(*) FROM yearmonth INNER JOIN customers ON yearmonth.`CustomerID` = customers.`CustomerID` WHERE customers.`Segment` = 'LAM' AND yearmonth.`Consumption` > 46.73 ) / ( SELECT COUNT(*) FROM customers WHERE Segment = 'LAM' ) * 100 ) AS percentage\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country has more \"value for money\" gas stations? Please give a total number of \"value for money\" gas stations in each country.",
    "SELECT g.`Country`, COUNT(*) AS \"Value for Money Gas Stations\" FROM gasstations AS g INNER JOIN gasstations AS g2 ON g.`ChainID` = g2.`ChainID` WHERE g2.`Segment` = 'Value for money' GROUP BY g.`Country` ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of KAM customers pay in euros?",
    "SELECT ROUND( ( SELECT COUNT(*) FROM ( SELECT DISTINCT T1.`CustomerID` FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Segment` = 'KAM' AND T2.`Currency` = 'EUR' AND T2.`Currency` IS NOT NULL ) AS SubQuery ) / ( SELECT COUNT(*) FROM customers WHERE Segment = 'KAM' AND Currency IS NOT NULL ) * 100, 2 ) AS percentage\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In February 2012, what percentage of customers consumed more than 528.3?",
    "SELECT (num_customers / total_consumption) * 100 AS percentage FROM ( SELECT SUM(`Consumption`) AS total_consumption FROM yearmonth WHERE `Date` LIKE '201202%' ) AS subquery1, ( SELECT COUNT(*) AS num_customers FROM yearmonth WHERE `Consumption` > 528.3 AND `Date` LIKE '201202%' ) AS subquery2\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of Slovakian gas stations are premium?",
    "SELECT (PremiumGasStations / TotalGasStations) * 100 AS PercentageOfPremiumGasStations FROM ( SELECT COUNT(DISTINCT GasStationID) AS TotalGasStations FROM gasstations WHERE Country = 'SVK' ) AS TotalGasStationsTable, ( SELECT COUNT(DISTINCT GasStationID) AS PremiumGasStations FROM gasstations WHERE Country = 'SVK' AND Segment = 'Premium' ) AS PremiumGasStationsTable\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client ID consumed the most in September 2013?",
    "SELECT T1.`CustomerID` FROM yearmonth AS T1 WHERE T1.`Date` = '201309' ORDER BY T1.`Consumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client segment consumed the least in September 2013?",
    "SELECT T2.`Segment` FROM ( SELECT `CustomerID`, SUM(`Consumption`) AS `TotalConsumption` FROM `yearmonth` WHERE `Date` = '201309' GROUP BY `CustomerID` ) AS T1 INNER JOIN `customers` AS T2 ON T1.`CustomerID` = T2.`CustomerID` ORDER BY T1.`TotalConsumption` ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which SME customer consumed the least in June 2012?",
    "SELECT T1.`Consumption` FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Segment` = 'SME' AND T1.`Date` = '201206' ORDER BY T1.`Consumption` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the highest monthly consumption in the year 2012?",
    "SELECT MAX(`Consumption`) FROM yearmonth WHERE SUBSTR(`Date`, 1, 4) = '2012'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the biggest monthly consumption of the customers who use euro as their currency?",
    "SELECT MAX(monthly_consumption) AS MaxMonthlyConsumption FROM ( SELECT `CustomerID`, SUM(Consumption) / 12 AS monthly_consumption FROM yearmonth GROUP BY `CustomerID` ) AS subquery WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Currency` = 'EUR' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products consumed in September, 2013.",
    "SELECT DISTINCT P.`Description` FROM products AS P INNER JOIN transactions_1k AS T1 ON P.`ProductID` = T1.`ProductID` INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` LIKE '201309%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "SELECT DISTINCT gs.Country FROM gasstations gs JOIN transactions_1k t ON gs.GasStationID = t.GasStationID JOIN yearmonth ym ON t.CustomerID = ym.CustomerID WHERE ym.Date LIKE '201306%' ORDER BY gs.Country ASC;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the chains of the gas stations with transactions in euro.",
    "SELECT DISTINCT T1.`ChainID` FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Price` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products bought in transactions in euro.",
    "SELECT DISTINCT P.`Description` FROM transactions_1k AS T1 INNER JOIN products AS P ON T1.`ProductID` = P.`ProductID` INNER JOIN customers AS C ON T1.`CustomerID` = C.`CustomerID` WHERE C.`Currency` = 'EUR' ORDER BY P.`Description` ASC;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in January, 2012?",
    "SELECT AVG(TotalPrice) AS AveragePrice FROM ( SELECT SUM(T1.Price) AS TotalPrice FROM transactions_1k AS T1 JOIN yearmonth AS YM ON T1.CustomerID = YM.CustomerID WHERE YM.Date LIKE '2012-01%' GROUP BY YM.CustomerID ) AS SubQuery;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "SELECT COUNT(*) FROM ( SELECT DISTINCT ym.`CustomerID` FROM yearmonth AS ym INNER JOIN customers AS c ON ym.`CustomerID` = c.`CustomerID` WHERE c.`Currency` = 'EUR' AND ym.`Consumption` > 1000 ) AS ym_filtered\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "SELECT DISTINCT T1.`Description` FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` INNER JOIN gasstations AS T3 ON T2.`GasStationID` = T3.`GasStationID` WHERE T3.`Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
    "SELECT DISTINCT T1.`Time` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`ChainID` = 11\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?",
    "SELECT COUNT(*) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE' AND T1.`Price` > 1000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "SELECT COUNT(*) FROM ( SELECT T1.`TransactionID`, T1.`Date`, T1.`Time`, T1.`CustomerID`, T1.`CardID`, T1.`GasStationID`, T1.`ProductID`, T1.`Amount`, T1.`Price` FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE' AND T1.`Date` > '2012-01-01' ) AS T3\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in gas stations in the Czech Republic?",
    "SELECT AVG(T1.`Price`) FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customers who paid in the euro, what is their average total price of the transactions?",
    "SELECT AVG(T1.`Price`) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Currency` = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customer paid the most in 2012/8/25?",
    "SELECT T3.`Segment` FROM customers AS T3 WHERE T3.`CustomerID` = ( SELECT T2.`CustomerID` FROM ( SELECT T1.`CustomerID`, SUM(T1.`Amount`) AS TotalAmount FROM transactions_1k AS T1 WHERE T1.`Date` = '2012-08-25' GROUP BY T1.`CustomerID` ) AS T2 ORDER BY T2.`TotalAmount` DESC LIMIT 1 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country's gas station had the first paid cusomer in 2012/8/25?",
    "SELECT DISTINCT T2.`Country` FROM gasstations AS T2 INNER JOIN ( SELECT T1.`GasStationID` FROM transactions_1k AS T1 WHERE T1.`Date` = '2012-08-25' AND T1.`Amount` > 0 ORDER BY T1.`Date` ASC LIMIT 1 ) AS T3 ON T2.`GasStationID` = T3.`GasStationID`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
    "SELECT T1.`Currency` FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`TransactionID` = ( SELECT TransactionID FROM transactions_1k WHERE Time = '16:25:00' AND Date = '2012-08-24' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What segment did the customer have at 2012/8/23 21:20:00?",
    "SELECT T2.`Segment` FROM customers AS T2 INNER JOIN ( SELECT T1.* FROM transactions_1k AS T1 WHERE T1.`Date` = '2012-08-23' AND T1.`Time` = '21:20:00' ) AS T3 ON T2.`CustomerID` = T3.`CustomerID`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions were paid in EUR in the morning of 2012/8/26?",
    "SELECT COUNT(*) FROM transactions_1k WHERE `Date` = '2012-08-26' AND `Time` < '13:00:00'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the earliest customer, what segment did he/she have?",
    "SELECT Segment FROM customers WHERE CustomerID = ( SELECT CustomerID FROM transactions_1k WHERE Date = ( SELECT MIN(Date) FROM transactions_1k ) )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the deal happened at 2012/8/24 12:42:00, which country was it?",
    "SELECT Country FROM gasstations WHERE GasStationID = ( SELECT GasStationID FROM transactions_1k WHERE TransactionID = ( SELECT TransactionID FROM transactions_1k WHERE Date = '2012-08-24' AND Time = '12:42:00' ) )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the product id of the transaction happened at 2012/8/23 21:20:00?",
    "SELECT ProductID FROM transactions_1k WHERE TransactionID = ( SELECT TransactionID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",
    "SELECT ym.`Date`, MAX(t.`Amount`) AS Expenses FROM transactions_1k t JOIN yearmonth ym ON t.`CustomerID` = ym.`CustomerID` WHERE t.`CustomerID` = ( SELECT `CustomerID` FROM transactions_1k WHERE `Amount` = 124.05 AND `Date` = '2012-08-24' LIMIT 1 ) AND ym.`Date` BETWEEN '2012-01-01' AND '2012-01-31' GROUP BY ym.`Date` ORDER BY ym.`Date` ASC;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",
    "SELECT COUNT(DISTINCT T1.TransactionID) AS NumberOfTransactions FROM transactions_1k AS T1 INNER JOIN gasstations AS GS ON T1.GasStationID = GS.GasStationID WHERE T1.Time BETWEEN '08:00:00' AND '09:00:00' AND T1.Date = '2012-08-26' AND GS.Country = 'CZE';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",
    "SELECT c.`Currency` FROM customers AS c INNER JOIN ( SELECT t.`CustomerID` FROM transactions_1k AS t INNER JOIN yearmonth AS ym ON t.`CustomerID` = ym.`CustomerID` WHERE ym.`Date` LIKE '201306%' GROUP BY t.`CustomerID` HAVING MAX(t.`Amount`) = 214582.17 ) AS subquery ON c.`CustomerID` = subquery.`CustomerID`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country was the card owner of No.667467 in?",
    "SELECT DISTINCT T3.`Country` FROM transactions_1k AS T2 INNER JOIN gasstations AS T3 ON T2.`GasStationID` = T3.`GasStationID` WHERE T2.`CardID` = 667467\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What's the nationality of the customer who spent 548.4 in 2012/8/24?",
    "SELECT DISTINCT c.`Segment` FROM customers AS c JOIN transactions_1k AS t ON c.`CustomerID` = t.`CustomerID` JOIN yearmonth AS ym ON c.`CustomerID` = ym.`CustomerID` WHERE t.`Amount` = 548.4 AND t.`Date` = '2012-08-24' AND ym.`Consumption` IS NOT NULL GROUP BY c.`Segment`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of the customers who used EUR in 2012/8/25?",
    "SELECT (COUNT(DISTINCT T2.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM yearmonth WHERE Date = '2012-08-25')) * 100 AS percentage FROM yearmonth AS T2 INNER JOIN transactions_1k AS T1 ON T2.CustomerID = T1.CustomerID INNER JOIN customers AS C ON T1.CustomerID = C.CustomerID WHERE T1.Date = '2012-08-25' AND C.Currency = 'EUR' GROUP BY T2.CustomerID;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
    "SELECT (y2012.Consumption - y2013.Consumption) / y2012.Consumption AS consumption_decrease_rate FROM (SELECT ym.CustomerID, SUM(ym.Consumption) AS Consumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE ym.Date = '2012-08-24' AND c.CustomerID IN (SELECT DISTINCT CustomerID FROM transactions_1k WHERE Amount = 634.8 AND Date = '2012-08-25') GROUP BY ym.CustomerID) AS y2012 JOIN (SELECT ym.CustomerID, SUM(ym.Consumption) AS Consumption FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE ym.Date = '2013-08-24' AND c.CustomerID IN (SELECT DISTINCT CustomerID FROM transactions_1k WHERE Amount = 634.8 AND Date = '2012-08-25') GROUP BY ym.CustomerID) AS y2013 ON y2012.CustomerID = y2013.CustomerID;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which gas station has the highest amount of revenue?",
    "SELECT T1.GasStationID, MAX(T1.TotalRevenue) AS HighestRevenue FROM ( SELECT T1.GasStationID, SUM(T1.Amount * T1.Price) AS TotalRevenue FROM transactions_1k AS T1 GROUP BY T1.GasStationID ) AS T1 GROUP BY T1.GasStationID ORDER BY HighestRevenue DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of \"premium\" against the overall segment in \"SVK\"?",
    "SELECT ( SELECT COUNT(DISTINCT T2.GasStationID) FROM transactions_1k AS T2 JOIN gasstations ON T2.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'SVK' AND gasstations.Segment = 'Premium' ) / ( SELECT COUNT(DISTINCT T2.GasStationID) FROM transactions_1k AS T2 JOIN gasstations ON T2.GasStationID = gasstations.GasStationID WHERE gasstations.Country = 'SVK' ) * 100 AS percentage\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "SELECT SUM(T1.`Amount`) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`CustomerID` = 38508 AND T2.`Date` LIKE '201201%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which are the top five best selling products? Please state the full name of them.",
    "SELECT T1.`Description` FROM ( SELECT T1.`ProductID`, SUM(T2.`Amount`) AS `TotalSales` FROM products AS T1 INNER JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` GROUP BY T1.`ProductID` ORDER BY `TotalSales` DESC LIMIT 5 ) AS T3 INNER JOIN products AS T1 ON T3.`ProductID` = T1.`ProductID`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "SELECT c.`Currency`, AVG(t.`Price` / t.`Amount`) AS AvgPricePerItem FROM customers AS c JOIN ( SELECT t.`CustomerID` FROM transactions_1k AS t WHERE t.`Price` IS NOT NULL AND t.`Amount` IS NOT NULL GROUP BY t.`CustomerID` ORDER BY SUM(t.`Amount`) DESC LIMIT 1 ) AS top_customer ON c.`CustomerID` = top_customer.`CustomerID` JOIN transactions_1k AS t ON c.`CustomerID` = t.`CustomerID` GROUP BY c.`Currency`\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country had the gas station that sold the most expensive product id No.2 for one unit?",
    "SELECT T2.`Country` FROM gasstations AS T2 INNER JOIN transactions_1k AS T3 ON T2.`GasStationID` = T3.`GasStationID` WHERE T3.`ProductID` = ( SELECT T1.`ProductID` FROM products AS T1 WHERE T1.`ProductID` = 2 LIMIT 1 ) ORDER BY T3.`Price` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "SELECT T1.`Consumption` FROM yearmonth AS T1 INNER JOIN ( SELECT DISTINCT T1.`CustomerID` FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.`ProductID` = T2.`ProductID` WHERE T2.`ProductID` = 5 AND T1.`Price` / T1.`Amount` > 29.00 ) AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` LIKE '201208%'\t----- bird -----\tdebit_card_specializing"
  ]
]