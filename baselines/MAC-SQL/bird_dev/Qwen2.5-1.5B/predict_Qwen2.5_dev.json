[
  [
    "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
    "SELECT MAX(T1.`Percent (%) Eligible Free (K-12)`) FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'Alameda'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.",
    "SELECT T1.`Percent (%) Eligible Free (Ages 5-17)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' AND T2.`School Type` = 'Continuation Schools' AND T1.`Low Grade` = '5' AND T1.`High Grade` = '17' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` ASC LIMIT 3;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the zip code of all the charter schools in Fresno County Office of Education.",
    "SELECT schools.`NCESDist` FROM frpm JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE frpm.`Charter School (Y/N)` = 1 AND frpm.`District Name` = 'Fresno County Office of Education' AND frpm.`County Name` = 'Fresno County Office of Education' AND schools.`County` = 'Fresno County Office of Education' AND schools.`District` = 'County Office of Education (COE)'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the unabbreviated mailing address of the school with the highest FRPM count for K-12 students?",
    "SELECT s.`County` FROM frpm f JOIN schools s ON f.`CDSCode` = s.`CDSCode` JOIN satscores sc ON f.`CDSCode` = sc.`cds` WHERE f.`School Type` = 'K-12 Schools (Public)' ORDER BY f.`FRPM Count (K-12)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.",
    "SELECT T1.`Phone` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter` = 1 AND T2.`OpenDate` > '2000-01-01'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools with an average score in Math under 400 in the SAT test are exclusively virtual?",
    "SELECT COUNT(T2.`Free Meal Count (Ages 5-17)`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Free Meal Count (Ages 5-17)` < 400 AND T1.`Charter School (Y/N)` = 0 AND T1.`StatusType` = 'Active';\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.",
    "SELECT T1.`School Name` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Magnet` = 1 AND T2.`Enrollment (K-12)` > 500;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
    "SELECT T1.`Phone` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`rtype` = 'D' AND T2.`enroll12` > 1500 AND T1.`CDSCode` = ( SELECT T1.`CDSCode` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`rtype` = 'D' AND T2.`enroll12` > 1500 GROUP BY T1.`CDSCode` ORDER BY MAX(T2.`enroll12`) LIMIT 1 )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?",
    "SELECT T1.enroll12 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' AND T1.`FRPM Count (K-12)` = ( SELECT MAX(T1.`FRPM Count (K-12)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' );\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?",
    "SELECT COUNT(T1.`Charter`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter` = 1 AND T2.`Free Meal Count` / T2.`Enrollment` > 560\t----- bird -----\tcalifornia_schools"
  ],
  [
    "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?",
    "SELECT T1.AvgScrRead, T1.FRPM Count (Ages 5-17) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.Low Grade = 'K' ORDER BY T2.AvgScrRead DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the codes of the schools with a total enrollment of over 500.",
    "SELECT T1.`CDSCode` FROM frpm AS T1 JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` GROUP BY T1.`CDSCode` HAVING SUM(T2.`enroll12`) + SUM(COALESCE(T2.`enroll12`, 0)) > 500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?",
    "SELECT MAX(T1.`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm AS T1 JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Free Meal Count (Ages 5-17)` > 0 AND T1.`Enrollment (Ages 5-17)` > 0 AND T1.`Percent (%) Eligible Free (Ages 5-17)` > ( SELECT MAX(T3.`Percent (%) Eligible Free (Ages 5-17)`) FROM frpm AS T3 JOIN satscores AS T4 ON T3.`CDSCode` = T4.`cds` WHERE T3.`Free Meal Count (Ages 5-17)` > 0 AND T3.`Enrollment (Ages 5-17)` > 0 AND T3.`Percent (%) Eligible Free (Ages 5-17)` > 0.3 AND T3.`Percent (%) Eligible Free (Ages 5-17)` IS NOT NULL ) GROUP BY T1.`Percent (%) Eligible Free (Ages 5-17)` ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please list the phone numbers of the schools with the top 3 SAT excellence rate.",
    "SELECT T1.`Charter School (Y/N)`, T1.`Charter Funding Type`, T1.`Low Grade`, T1.`High Grade`, T1.`Enrollment (K-12)`, T1.`Free Meal Count (K-12)`, T1.`Percent (%) Eligible Free (K-12)`, T1.`FRPM Count (K-12)`, T1.`Percent (%) Eligible FRPM (K-12)`, T1.`Enrollment (Ages 5-17)`, T1.`Free Meal Count (Ages 5-17)`, T1.`Percent (%) Eligible Free (Ages 5-17)`, T1.`FRPM Count (Ages 5-17)`, T1.`Percent (%) Eligible FRPM (Ages 5-17)`, T1.`2013-14 CALPADS Fall 1 Certification Status`, T2.`sname` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` IS NOT NULL AND T2.`NumTstTakr` IS NOT NULL ORDER BY T2.`NumGE1500` / T2.`NumTstTakr` DESC LIMIT 3\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the top five schools, by descending order, from the highest to the lowest, the most number of Enrollment (Ages 5-17). Please give their NCES school identification number.",
    "SELECT T1.NCESSchool FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` ORDER BY T1.`Enrollment (Ages 5-17)` DESC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which active district has the highest average score in Reading?",
    "SELECT T1.`County` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`StatusType` = 'Active' ORDER BY T2.`enroll12` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in merged Alameda have number of test takers less than 100?",
    "SELECT COUNT(s.CDSCode) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores sats ON s.CDSCode = sats.cds WHERE s.StatusType = 'Merged' AND s.County = 'Alameda' AND sats.enroll12 < 100\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the charter number of the school that the average score in Writing is 499?",
    "SELECT T1.`Charter School Number` FROM frpm AS T1 JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`AvgScrWrite` = ( SELECT MAX(T2.`AvgScrWrite`) FROM satscores AS T2 JOIN frpm AS T3 ON T2.`cds` = T3.`CDSCode` WHERE T3.`Charter School (Y/N)` = 1 AND T2.`AvgScrWrite` IS NOT NULL ) GROUP BY T1.`Charter School Number`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Contra Costa (directly funded) have number of test takers not more than 250?",
    "SELECT COUNT(T1.`NCESSchool`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Academic Year` = '2014-2015' AND T2.`County Code` = '43' AND T2.`FundingType` = 'Directly funded' AND T1.`enroll12` <= 250;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number of the school that has the highest average score in Math?",
    "SELECT T1.`Phone` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`GSserved` = 'K-8' AND T1.`AvgScrMath` = ( SELECT MAX(T2.`AvgScrMath`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`GSserved` = 'K-8' ) GROUP BY T1.`Phone`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many schools in Amador which the Low Grade is 9 and the High Grade is 12?",
    "SELECT COUNT(`GSserved`) FROM schools WHERE `County` = 'Amador' AND `GSserved` = 'K-8'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
    "SELECT COUNT(s.NCESSchool) FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode WHERE s.County = 'Los Angeles' AND f.FreeMealCountK12 > 500 AND f.PercentEligibleFreeK12 < 700;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which school in Contra Costa has the highest number of test takers?",
    "SELECT T1.`NCESSchool`, T1.`School Name` FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.`NCESSchool` = T2.`cds` WHERE T1.`County` = 'Contra Costa' AND T1.`StatusType` = 'Active' ORDER BY T2.`enroll12` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
    "SELECT T1.Street, T1.City, T1.State, T1.Zip FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)` > 30\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Give the names of the schools with the percent eligible for free meals in K-12 is more than 0.1 and test takers whose test score is greater than or equal to 1500?",
    "SELECT T2.`sname` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Academic Year` = '2014-2015' AND CAST(SUM(CASE WHEN T2.`Free Meal Count (Ages 5-17)` / T2.`Enrollment (Ages 5-17)` > 0.1 THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.`Free Meal Count (Ages 5-17)`) * 100 > 0.1 AND COUNT(T2.`NumTstTakr`) > 0\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?",
    "SELECT T1.`FundingType` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`sname` = 'Washington High' AND T1.`County` = 'Riverside' AND T2.`rtype` = 'S' AND T2.`Free Meal Count` / T2.`Enrollment` > 400 AND T1.`FundingType` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?",
    "SELECT T2.`sname`, T2.`County`, T2.`District`, T2.`StatusType`, T2.`NCESDist`, T2.`NCESSchool`, T2.`CountyName`, T2.`DistrictName`, T2.`StatusTypeName`, T2.`StatusTypeDescription`, T2.`CountyName`, T2.`DistrictName`, T2.`StatusTypeName`, T2.`StatusTypeDescription` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Monterey' AND T2.`Free Meal Count (Ages 5-17)` > 800\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.",
    "SELECT CASE WHEN schools.AdmEmail1 IS NOT NULL THEN schools.AdmEmail1 WHEN schools.AdmEmail2 IS NOT NULL THEN schools.AdmEmail2 WHEN schools.AdmEmail3 IS NOT NULL THEN schools.AdmEmail3 ELSE NULL END AS CommunicationNumber, schools.School, schools.Phone FROM satscores JOIN frpm ON satscores.cds = frpm.CDSCode JOIN schools ON frpm.CDSCode = schools.CDSCode WHERE frpm.OpenDate > '1991-12-31' OR frpm.ClosedDate < '2000-12-31'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
    "SELECT T2.`School Name`, T2.`DOCType` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`FundingType` = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > ( SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.`CDSCode` = T4.`CDSCode` WHERE T3.`FundingType` = 'Locally funded' ) GROUP BY T2.`School Name`, T2.`DOCType` HAVING MAX(T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)) > AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17))\t----- bird -----\tcalifornia_schools"
  ],
  [
    "When did the first-through-twelfth-grade school with the largest enrollment open?",
    "SELECT T1.OpenDate FROM frpm AS T1 INNER JOIN ( SELECT MAX(enroll12) AS max_enroll FROM frpm WHERE GSserved = 'K-12' ) AS T2 ON T1.CDSCode = T2.max_enroll WHERE T1.AcademicYear = '2014-2015' AND T1.GSserved = 'K-12' AND T1.OpenDate IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?",
    "SELECT T1.`City` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Low Grade` = 'K' AND T2.`High Grade` = '12' ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 5\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
    "SELECT T1.`Free Meal Count (K-12)`, T1.`Enrollment (K-12)` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` INNER JOIN frpm AS T3 ON T3.`CDSCode` = T2.`cds` WHERE T2.`sname` IN ('10th', '11th') AND T3.`GSserved` = ( SELECT T4.`GSserved` FROM frpm AS T4 INNER JOIN satscores AS T5 ON T4.`CDSCode` = T5.`cds` WHERE T4.`GSserved` = 'K-12' ORDER BY T5.`enroll12` DESC LIMIT 1 ) GROUP BY T1.`GSserved`;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?",
    "SELECT T1.`Percent (%) Eligible Free (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Ownership Code` = 66 ORDER BY T1.`Free Meal Count (K-12)` DESC LIMIT 5;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.",
    "SELECT T1.`School Name` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free rate for students between the ages of 5 and 17 at the school run by Kacey Gibson?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address of the chartered school with the fewest students enrolled in grades 1 through 12?",
    "SELECT T1.`CDSCode` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter School (Y/N)` = 1 ORDER BY T2.`Enrollment (K-12)` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Under whose administration does the school with the highest number of test takers whose total SAT Scores are greater or equal to 1500 belong to? Indicate his or her full name.",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
    "SELECT T2.`Street`, T2.`City`, T2.`Zip`, T2.`State` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN ( SELECT T1.`Percent (%) Eligible Free (K-12)` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` GROUP BY T1.`Percent (%) Eligible Free (K-12)` ORDER BY T1.`Percent (%) Eligible Free (K-12)` ASC LIMIT 1 ) AS T3 ON T2.`Percent (%) Eligible Free (K-12)` = T3.`Percent (%) Eligible Free (K-12)`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?",
    "SELECT `sname` FROM satscores INNER JOIN schools ON satscores.`cds` = schools.`CDSCode` WHERE `County` = 'Los Angeles' AND `enroll12` IS NOT NULL AND `enroll12` >= 2000 AND `enroll12` <= 3000\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?",
    "SELECT AVG(T2.enroll12) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`City` = 'Fresno' AND T1.`Academic Year` = '1980' AND T1.`OpenDate` BETWEEN '1980-01-01' AND '1980-12-31' AND T2.`enroll12` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the telephone number for the school with the lowest average score in reading in Fresno Unified?",
    "SELECT s.NCESSchool FROM schools s JOIN frpm f ON s.CDSCode = f.CDSCode JOIN satscores sc ON f.CDSCode = sc.cds WHERE s.District = 'Fresno Unified' ORDER BY sc.enroll12 ASC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which exclusively virtual schools have the top 5 highest average reading scores?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the type of education offered in the school who scored the highest average in Math?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average math score of the school with the lowest average score for all subjects, and in which county is it located?",
    "SELECT T1.`County` FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T1.`Low Grade` IN ('K', '9', '6', '7', 'P', '5') AND T1.`High Grade` IN ('12', '5', '8', '6', '3', '4') AND T1.`Enrollment (K-12)` > 0 AND T1.`Free Meal Count (K-12)` > 0 AND T1.`Percent (%) Eligible Free (K-12)` > 0 AND T1.`Percent (%) Eligible FRPM (K-12)` > 0 AND T1.`2013-14 CALPADS Fall 1 Certification Status` = 1 AND T2.`AvgScrMath` IS NOT NULL AND T2.`AvgScrRead` IS NOT NULL AND T2.`AvgScrWrite` IS NOT NULL ORDER BY (T2.`AvgScrMath` + T2.`AvgScrRead` + T2.`AvgScrWrite`) / 3 ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of the school who has the highest number of test takers whose total SAT sscores are greater or equal to 1500? Indicate the city to where the school is situated.",
    "SELECT AVG(T2.`AvgScrWrite`) FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`NumGE1500` >= 1500 AND T2.`NumGE1500` IS NOT NULL GROUP BY T2.`NumGE1500` ORDER BY T2.`NumGE1500` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores.",
    "SELECT AVG(T2.`Free Meal Count (Ages 5-17)`) AS AverageWritingScore FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter School (Y/N)` = 0 AND T1.`Charter School Number` = '1696' AND T1.`Charter Funding Type` = 'Directly funded' AND T1.`Low Grade` = 'K' AND T1.`High Grade` = '9' AND T1.`Enrollment (Ages 5-17)` > 0 AND T1.`Free Meal Count (Ages 5-17)` > 0 AND T1.`Percent (%) Eligible Free (Ages 5-17)` > 0 AND T1.`Percent (%) Eligible FRPM (Ages 5-17)` > 0 AND T2.`Free Meal Count (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which state special schools have the highest number of enrollees from grades 1 through 12?",
    "SELECT T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' AND T1.`Enrollment (K-12)` = ( SELECT MAX(T1.`Enrollment (K-12)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?",
    "SELECT CAST(COUNT(CASE WHEN T1.DOC = '54' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T1.DOC = '52' THEN 1 ELSE NULL END) FROM frpm AS T1 JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.DOC = '54' AND T2.DOC = '54' AND T2.District = 'Orange'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.",
    "SELECT s.`County`, s.`School`, s.`ClosedDate` FROM schools s JOIN frpm f ON s.`CDSCode` = f.`CDSCode` WHERE s.`StatusType` = 'Closed' GROUP BY s.`County`, s.`School` ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the postal street address for the school with the 6th highest Math average? Indicate the school's name.",
    "SELECT T1.`School Name` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Low Grade` = '6' ORDER BY T1.`Percent (%) Eligible Free (Ages 5-17)` DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.",
    "SELECT T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Low Grade` = 'K' AND T1.`High Grade` = '12' AND T1.`Enrollment (K-12)` IS NOT NULL AND T1.`Free Meal Count (K-12)` IS NOT NULL AND T1.`Percent (%) Eligible Free (K-12)` IS NOT NULL ORDER BY T1.`Percent (%) Eligible Free (K-12)` ASC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?",
    "SELECT COUNT(T1.`sname`) FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.`cds` = T2.`CDSCode` WHERE T1.`MailCity` = 'Lakeport' AND T1.`AvgScrMath` + T1.`AvgScrRead` + T1.`AvgScrWrite` >= 1500\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many test takers are there at the school/s whose mailing city address is in Fresno?",
    "SELECT COUNT(T1.enroll12) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'Fresno'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.",
    "SELECT T1.`Zip` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`AdmFName1` = 'Avetik' AND T2.`AdmLName1` = 'Atoian' AND T2.`AdmEmail1` IS NOT NULL AND T2.`AdmEmail2` IS NOT NULL AND T2.`AdmEmail3` IS NOT NULL AND T2.`AdmFName2` IS NOT NULL AND T2.`AdmLName2` IS NOT NULL AND T2.`AdmEmail2` IS NOT NULL AND T2.`AdmFName3` IS NOT NULL AND T2.`AdmLName3` IS NOT NULL AND T2.`AdmEmail3` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?",
    "SELECT COUNT(schools.`County`) / COUNT(schools.`County`) FROM schools WHERE `State` = 'CA' AND `County` = 'Colusa';\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of all the schools with a mailing state address in California, how many are active in San Joaquin?",
    "SELECT COUNT(`StatusType`) FROM schools WHERE `State` = 'CA' AND `StatusType` = 'Active' AND `City` = 'San Joaquin'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school that had the 333rd highest average writing score?",
    "SELECT T1.`NCESSchool`, T1.`NCESEnd` FROM frpm AS T1 JOIN satscores AS T2 ON T1.`CDSCode` = T2.`cds` WHERE T2.`Percent (%) Eligible Free (Ages 5-17)` = (SELECT MAX(`Percent (%) Eligible Free (Ages 5-17)`) FROM satscores) ORDER BY T2.`Percent (%) Eligible Free (Ages 5-17)` DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
    "SELECT T1.`Phone`, T1.`Ext` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Zip` = '95203-3704'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?",
    "SELECT T3.`Website` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` INNER JOIN schools AS T3 ON T2.`CDSCode` = T3.`CDSCode` WHERE T2.`AdmFName1` = 'Mike' AND T2.`AdmFName2` = 'Larson' OR T2.`AdmFName1` = 'Dante' AND T2.`AdmFName2` = 'Alvarez'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
    "SELECT T1.`Website` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Virtual` = 'P' AND T2.`Charter` = 1 AND T2.`County` = 'San Joaquin'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
    "SELECT COUNT(DISTINCT T1.`CDSCode`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Charter` = 1 AND T2.`City` = 'Hickman' AND T2.`DOC` = 52\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
    "SELECT COUNT(T1.`School Code`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter` = 0 AND T2.`County` = 'Los Angeles' AND T2.`Free Meal Count (K-12)` * 100 / T2.`Enrollment (K-12)` < 0.18\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs",
    "SELECT T1.`AdmFName1`, T1.`AdmLName1`, T1.`AdmFName2`, T1.`AdmLName2`, T1.`AdmFName3`, T1.`AdmLName3`, T1.`City` FROM schools AS T1 JOIN frpm AS T2 ON T1.`CDSCode` = T2.`Charter School Number` WHERE T2.`Charter School (Y/N)` = 1 AND T2.`Charter School Number` = '00D2' AND T1.`AdmEmail1` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total number of schools with a mailing city in Hickman belonging to the charter number 00D4?",
    "SELECT COUNT(T1.`CDSCode`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`Charter` = 1 AND T1.`CharterNum` = '00D4' AND T2.`City` = 'Hickman'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?",
    "SELECT CAST((SELECT COUNT(T1.`NCESSchool`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Santa Clara' AND T2.`Charter Funding Type` = 'Locally funded' ) AS REAL) * 100 / ( SELECT COUNT(T1.`NCESSchool`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`County` = 'Santa Clara' )\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?",
    "SELECT COUNT(`CDSCode`) FROM frpm WHERE `County` = 'Stanislaus' AND `Academic Year` BETWEEN '2000-01-01' AND '2005-12-31' AND `FundingType` = 'Directly Funded'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the total amount of Community College District closure in 1989 in the city of San Francisco?",
    "SELECT SUM(T1.enroll12) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AcademicYear = '1989' AND T2.County = 'San Francisco' AND T2.StatusType = 'Closed'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
    "SELECT T1.`County` FROM schools AS T1 INNER JOIN ( SELECT `NCESDist` FROM schools WHERE `SOC` = 11 AND `ClosedDate` BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY `NCESDist` ORDER BY COUNT(`CDSCode`) DESC LIMIT 1 ) AS T2 ON T1.`NCESDist` = T2.`NCESDist` INNER JOIN frpm AS T3 ON T1.`NCESDist` = T3.`NCESDist` WHERE T3.`County` IS NOT NULL GROUP BY T1.`County` ORDER BY COUNT(T3.`County`) DESC\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
    "SELECT DISTINCT T1.`NCESDist` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`SOC` = 31\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many active and closed District Community Day Schools are there in the county of Alpine?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the district code for the School that does not offer a magnet program in the city of Fresno?",
    "SELECT T1.`District` FROM schools AS T1 WHERE T1.`Magnet` = 0 AND T1.`City` = 'Fresno' AND T1.`District` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many students from the ages of 5 to 17 are enrolled at the State Special School school in Fremont for the 2014-2015 academic year?",
    "SELECT COUNT(T1.`Enrollment (Ages 5-17)`) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`StatusType` = 'Active' AND T1.`County` = 'Fremont' AND T1.`Educational Option Type` = 'Special Education School' AND T1.`NSLP Provision Status` = 'Provision 1' AND T1.`Academic Year` = '2014-2015' AND T1.`Charter School (Y/N)` IS NULL AND T1.`Charter Funding Type` IS NULL AND T1.`IRC` IS NULL AND T1.`Low Grade` IS NULL AND T1.`High Grade` IS NULL AND T1.`Enrollment (Ages 5-17)` IS NOT NULL\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the free or reduced price meal count for ages 5 to 17 in the Youth Authority School with a mailing street address of PO Box 1040?",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 613360?",
    "SELECT GSserved FROM schools JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` WHERE schools.`EdOpsCode` = 'SPECON' GROUP BY GSserved ORDER BY GSserved ASC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the educational level name for the schools with Breakfast Provision 2 in county code 37? Indicate the name of the school.",
    "SELECT `Educational Option Type` FROM frpm INNER JOIN schools ON frpm.`CDSCode` = schools.`CDSCode` WHERE `NSLP Provision Status` = 'Breakfast Provision 2' AND `County Code` = 37\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?",
    "SELECT T1.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`EILCode` = 'HS' AND T1.`Lunch Provision 2` = 1 AND T2.`County` = 'Merced'\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?",
    "SELECT T1.`School`, T1.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`GSserved` = 'K-9' AND T1.`County` = 'Los Angeles' AND T1.`GSserved` = 'K-9' AND T2.`Percent (%) Eligible FRPM (Ages 5-17)` IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the most common type of grade span served in the city of Adelanto?",
    "SELECT T1.`Low Grade` AS `grade_span` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'Adelanto' GROUP BY T1.`Low Grade` HAVING COUNT(T1.`Low Grade`) = ( SELECT COUNT(`Low Grade`) AS `count` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`County` = 'Adelanto' GROUP BY T1.`Low Grade` ORDER BY COUNT(`Low Grade`) DESC LIMIT 1 ) ORDER BY COUNT(T1.`Low Grade`) DESC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.",
    "SELECT COUNT(T1.`County`) FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Virtual` = 'F' GROUP BY T1.`County` ORDER BY COUNT(T1.`County`) DESC LIMIT 1\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.",
    "SELECT T1.`NCESSchool`, T1.`Latitude` FROM schools AS T1 INNER JOIN ( SELECT MAX(`Latitude`) AS `Latitude` FROM schools WHERE `Latitude` IS NOT NULL GROUP BY `StatusType` ) AS T2 ON T1.`StatusType` = T2.`Latitude` WHERE T1.`Latitude` = T2.`Latitude`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "In which city can you find the school in the state of California with the lowest latitude coordinates and what is its lowest grade? Indicate the school name.",
    "SELECT T1.`School Name` FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Latitude` = ( SELECT MIN(Latitude) FROM frpm WHERE Latitude IS NOT NULL ) ORDER BY T2.`Latitude` ASC LIMIT 1;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the grade span offered in the school with the highest longitude?",
    "SELECT T1.`GSserved` FROM frpm AS T1 JOIN schools AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`Longitude` = ( SELECT MAX(`Longitude`) FROM frpm AS T3 JOIN schools AS T4 ON T3.`CDSCode` = T4.`CDSCode` ) GROUP BY T1.`GSserved`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
    "SELECT T1.City, COUNT(T1.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.Magnet = 1 AND T2.GSserved = 'K-8' AND T1.NSLP_Provision_Status = 'Multiple Provision Types' GROUP BY T1.City\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What are the two most common first names among the school administrators? Indicate the district to which they administer.",
    "SELECT T1.`County` FROM schools AS T1 JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T2.`StatusType` = 'Active' GROUP BY T1.`County` ORDER BY COUNT(T1.`County`) DESC LIMIT 2;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.",
    "SELECT T2.`District` FROM schools AS T1 JOIN frpm AS T2 ON T1.`CDSCode` = T2.`CDSCode` WHERE T1.`AdmFName1` = 'Alusine' AND T1.`AdmEmail1` IS NOT NULL GROUP BY T2.`District`\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.",
    "SELECT AdmLName1, AdmLName2, AdmLName3 FROM schools JOIN frpm ON schools.`CDSCode` = frpm.`CDSCode` WHERE frpm.`CharterNum` = 40\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the e-mail address of the administrator of the school located in the San Bernardino county, District of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Scools?",
    "SELECT AdmEmail1 FROM frpm WHERE frpm.CDSCode = ( SELECT schools.CDSCode FROM schools WHERE schools.County = 'San Bernardino' ) AND frpm.District = ( SELECT schools.District FROM schools WHERE schools.County = 'San Bernardino' ) AND frpm.Charter = 0 AND frpm.SOC = 62 AND frpm.DOC = 54 AND frpm.LastUpdate BETWEEN '2009-01-01' AND '2010-12-31' AND frpm.AdmEmail1 IS NOT NULL;\t----- bird -----\tcalifornia_schools"
  ],
  [
    "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.",
    "error: No SQL found in the input string\t----- bird -----\tcalifornia_schools"
  ],
  [
    "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'POPLATEK PO OBRATU' AND T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts who have region in Prague are eligible for loans?",
    "SELECT COUNT(`loan_id`) FROM loan WHERE `account_id` IN ( SELECT `account_id` FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'Prague' ) ) AND `status` = 'C'\t----- bird -----\tfinancial"
  ],
  [
    "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
    "SELECT MAX(CASE WHEN `A12` IS NOT NULL THEN `A12` ELSE 0 END) AS `1995_rate`, MAX(CASE WHEN `A13` IS NOT NULL THEN `A13` ELSE 0 END) AS `1996_rate` FROM district WHERE `A12` IS NOT NULL UNION ALL SELECT MAX(CASE WHEN `A12` IS NOT NULL THEN `A12` ELSE 0 END) AS `1995_rate`, MAX(CASE WHEN `A13` IS NOT NULL THEN `A13` ELSE 0 END) AS `1996_rate` FROM district WHERE `A13` IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
    "SELECT COUNT(T1.`district_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T2.`A11` > 6000 AND T2.`A11` < 10000\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who are living in North Bohemia have average salary greater than 8000?",
    "SELECT COUNT(T1.client_id) FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN account AS T3 ON T1.district_id = T3.district_id JOIN disp AS T4 ON T3.account_id = T4.account_id JOIN loan AS T5 ON T3.account_id = T5.account_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T5.A11 > 8000;\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
    "SELECT MAX(T2.`A11`) - MIN(T2.`A11`) FROM district AS T2 ORDER BY T2.`A11` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "List out the account numbers of clients who are youngest and have highest average salary?",
    "SELECT T1.`account_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN trans AS T3 ON T1.`account_id` = T3.`account_id` INNER JOIN loan AS T4 ON T1.`account_id` = T4.`account_id` WHERE T3.`k_symbol` IS NOT NULL ORDER BY T2.`A11` DESC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many customers who choose statement of weekly issuance are Owner?",
    "SELECT COUNT(T1.`account_id`) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`operation` = 'VYDAJ' AND T1.`type` = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "List out the clients who choose statement of issuance after transaction are Disponent?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN trans AS T2 ON T1.`client_id` = T2.`client_id` INNER JOIN disp AS T3 ON T2.`account_id` = T3.`account_id` WHERE T3.`type` = 'DISPONENT'\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
    "SELECT T1.account_id FROM loan AS T1 JOIN trans AS T2 ON T1.account_id = T2.account_id JOIN order AS T3 ON T1.account_id = T3.account_id JOIN disp AS T4 ON T1.account_id = T4.account_id WHERE T2.operation = 'VYBER' AND T2.type = 'PREVOD Z UCTU' AND T3.operation = 'VYBER' AND T3.type = 'PREVOD Z UCTU' ORDER BY T1.amount ASC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
    "SELECT T1.account_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T1.account_id = T3.account_id WHERE T2.duration > 12 AND T3.date LIKE '1993-%' ORDER BY T3.amount DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Among the account opened, how many female customers who were born before 1950 and stayed in Slokolov?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN account AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T1.`birth_date` < '1950-01-01' AND T1.`district_id` = ( SELECT `district_id` FROM account ORDER BY `date` ASC LIMIT 1 ) AND T2.`district_id` = 'Slokolov'\t----- bird -----\tfinancial"
  ],
  [
    "List out the accounts who have the earliest trading date in 1995 ?",
    "SELECT T1.account_id FROM trans AS T1 WHERE T1.date >= '1995-01-01' ORDER BY T1.date ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "State different accounts who have account opening date before 1997 and own an amount of money greater than 3000USD",
    "SELECT T1.`account_id` FROM account AS T1 JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` < '1997-01-01' AND T2.`amount` > 3000\t----- bird -----\tfinancial"
  ],
  [
    "Which client issued his/her card in 1994/3/3, give his/her client id.",
    "SELECT T1.gender FROM trans AS T1 INNER JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` = '1994-03-03'\t----- bird -----\tfinancial"
  ],
  [
    "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
    "SELECT T1.`date` FROM account AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`amount` = 840 AND T2.`date` = '1998-10-14'\t----- bird -----\tfinancial"
  ],
  [
    "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
    "SELECT T1.`district_id` FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`date` = '1994-08-25' ORDER BY T1.`district_id` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
    "SELECT MAX(T1.amount) FROM trans AS T1 JOIN card AS T2 ON T1.account_id = T2.account_id JOIN disp AS T3 ON T2.disp_id = T3.disp_id JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T4.birth_date = '1971-02-28' AND T2.issued = '1996-10-21' AND T2.account_id IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "What is the gender of the oldest client who opened his/her account in the highest average salary branch?",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` ORDER BY T2.`A11` DESC, T1.`birth_date` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
    "SELECT T1.`amount` FROM loan AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'PRIJEM' ORDER BY T2.`date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many clients opened their accounts in Jesenik branch were women?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Jesenik' AND T1.`gender` = 'F'\t----- bird -----\tfinancial"
  ],
  [
    "What is the disposition id of the client who made 5100 USD transaction in 1998/9/2?",
    "SELECT T1.disp_id FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN disp AS T3 ON T2.disp_id = T3.disp_id WHERE T1.amount = 5100 AND T1.date LIKE '1998-09-2%' GROUP BY T1.disp_id HAVING COUNT(T1.trans_id) = 5 ORDER BY T1.trans_id ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts were opened in Litomerice in 1996?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Litomerice' AND strftime('%Y', T1.`date`) = '1996'\t----- bird -----\tfinancial"
  ],
  [
    "For the female client who was born in 1976/1/29, which district did she opened her account?",
    "SELECT `district_id` FROM client WHERE `gender` = 'F' AND `birth_date` = '1976-01-29' LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?",
    "SELECT T1.`birth_date` FROM client AS T1 INNER JOIN loan AS T2 ON T1.`client_id` = T2.`account_id` WHERE T2.`date` = ( SELECT `date` FROM loan WHERE `loan_id` = ( SELECT `loan_id` FROM loan WHERE `amount` = 98832 ) )\t----- bird -----\tfinancial"
  ],
  [
    "For the first client who opened his/her account in Prague, what is his/her account ID?",
    "SELECT T1.account_id FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.district_id = T3.district_id JOIN account AS T4 ON T3.account_id = T4.account_id JOIN trans AS T5 ON T3.account_id = T5.account_id WHERE T2.A3 = 'prague' ORDER BY T1.client_id ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
    "SELECT CAST(SUM(CASE WHEN `gender` = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`client_id`) FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'south Bohemia' ORDER BY `A4` DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "For the client who first applied the loan in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
    "SELECT CAST((T1.`amount` - T2.`amount`) AS REAL) / T2.`amount` * 100 FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` = '1993-03-22' AND T1.`account_id` = T2.`account_id` AND T1.`date` = '1998-12-27' AND T2.`amount` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "What is the percentage of loan amount that has been fully paid with no issue.",
    "SELECT CAST((SUM(loan.amount) * 100) / (SELECT SUM(loan.amount) FROM loan) AS REAL) / 100 FROM loan WHERE loan.status = 'A'\t----- bird -----\tfinancial"
  ],
  [
    "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
    "SELECT CAST(SUM(amount) AS REAL) / (SELECT SUM(amount) FROM loan WHERE status = 'C') FROM loan WHERE status = 'C' AND amount < 100000\t----- bird -----\tfinancial"
  ],
  [
    "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
    "SELECT T1.district_id FROM trans AS T1 JOIN order AS T2 ON T1.account_id = T2.account_id JOIN disp AS T3 ON T1.account_id = T3.account_id JOIN client AS T4 ON T3.client_id = T4.client_id JOIN district AS T5 ON T4.district_id = T5.district_id WHERE T1.date > '1993-01-01' AND T2.date > '1993-01-01' AND T2.account_id IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
    "SELECT `frequency` FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "List account ID and account opening date for accounts from 'Prachatice'.",
    "SELECT T1.`account_id`, T1.`date` FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Prachatice'\t----- bird -----\tfinancial"
  ],
  [
    "State the district and region for loan ID '4990'.",
    "SELECT T1.district_id, T1.A3 FROM loan AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.loan_id = '4990'\t----- bird -----\tfinancial"
  ],
  [
    "Provide the account ID, district and region for loan amount greater than USD300,000.",
    "SELECT T1.`loan_id`, T1.`district_id`, T1.`A3` FROM loan AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`amount` > 300000 AND T2.`district_id` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "List the loan ID, district and average salary for loan with duration of 60 months.",
    "SELECT T1.`loan_id`, T2.`district_id`, T1.`A11` FROM loan AS T1 INNER JOIN district AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`duration` = 60 AND T1.`A11` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
    "SELECT T1.district_id, T1.A13 - T2.A12 AS unemployment_rate_increment FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.status = 'D' AND T2.A12 IS NOT NULL ORDER BY T1.district_id ASC;\t----- bird -----\tfinancial"
  ],
  [
    "Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.",
    "SELECT CAST(COUNT(CASE WHEN T1.`district_id` = 1 AND T1.`date` = '1993-01-01' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A2` = 'Decin' AND T1.`date` = '1993-01-01' AND T1.`district_id` IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "List the account IDs with monthly issuance of statements.",
    "SELECT T1.`account_id` FROM trans AS T1 INNER JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN disp AS T3 ON T3.`account_id` = T2.`account_id` INNER JOIN disp AS T4 ON T4.`account_id` = T3.`account_id` WHERE T2.`frequency` = 'POPLATEK MESICNE' GROUP BY T1.`account_id` HAVING COUNT(T1.`trans_id`) = ( SELECT COUNT(T3.`trans_id`) FROM trans AS T3 INNER JOIN disp AS T4 ON T3.`account_id` = T4.`account_id` WHERE T4.`frequency` = 'POPLATEK MESICNE' ) ORDER BY T1.`date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "List the top ten districts, by descending order, from the highest to the lowest, the number of female account holders.",
    "SELECT COUNT(DISTINCT client_id) FROM account WHERE gender = 'F' GROUP BY district_id ORDER BY COUNT(DISTINCT client_id) DESC LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "Which are the top ten withdrawals (non-credit card) by district names for the month of January 1996?",
    "SELECT T1.district_id FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type = 'VYDAJ' AND T1.date LIKE '1996-01%' AND T1.`operation` IS NOT NULL ORDER BY T1.`amount` DESC LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "How many of the account holders in South Bohemia still do not own credit cards?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`operation` = 'VYBER' AND T2.`type` = 'PREVOD Z UCTU' AND T2.`amount` > 0 AND T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'south Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "Which district has highest active loan?",
    "SELECT district.A3 FROM account JOIN loan ON account.account_id = loan.account_id JOIN district ON account.district_id = district.district_id WHERE loan.status = 'C' ORDER BY loan.amount DESC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "What is the average loan amount by male borrowers?",
    "SELECT AVG(T1.amount) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.gender = 'M' GROUP BY T1.account_id\t----- bird -----\tfinancial"
  ],
  [
    "In 1996, which districts have the highest unemployment rate? List their branch location and district name.",
    "SELECT T1.`A2`, T1.`A4` FROM district AS T1 WHERE T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A13` = ( SELECT MAX(`A13`) FROM district WHERE `A13` IS NOT NULL ) ORDER BY `A13` DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?",
    "SELECT COUNT(`account_id`) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A16` = ( SELECT MAX(`A16`) FROM district WHERE `A16` IS NOT NULL ) )\t----- bird -----\tfinancial"
  ],
  [
    "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?",
    "SELECT COUNT(T1.`account_id`) FROM trans AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`operation` = 'VYBER KARTOU' AND T1.`type` = 'VYDAJ' AND T1.`balance` < 0 GROUP BY T1.`frequency` HAVING MAX(T1.`frequency`) = (SELECT MAX(T2.`frequency`) FROM trans AS T2 WHERE T2.`account_id` = T1.`account_id`) ORDER BY T1.`frequency` ASC, T1.`date` ASC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?",
    "SELECT DISTINCT T1.`loan_id` FROM loan AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'PRIJEM' AND T2.`operation` = 'VYBER' AND T2.`amount` >= 250000 AND T2.`status` = 'C' AND T2.`operation` = 'VYBER' AND T2.`type` = 'POPLATEK MESICNE' AND T2.`date` BETWEEN '1995-01-01' AND '1997-12-31' AND T2.`status` IS NOT NULL\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have running contracts in Branch location 1?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`status` = 'C' AND T1.`district_id` = 1\t----- bird -----\tfinancial"
  ],
  [
    "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'M' AND T2.`district_id` = ( SELECT `district_id` FROM district ORDER BY `A15` DESC LIMIT 1 OFFSET 1 )\t----- bird -----\tfinancial"
  ],
  [
    "How many high-level credit cards have \"disponent\" type of disposition?",
    "SELECT COUNT(T1.account_id) FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T2.type = 'gold' AND T2.type = 'disponent';\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts are there in the district of \"Pisek\"?",
    "SELECT COUNT(`account_id`) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Pisek' )\t----- bird -----\tfinancial"
  ],
  [
    "Which districts have transactions greater than USS$10,000 in 1997?",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "Which accounts placed orders for household payment in Pisek?",
    "SELECT T1.account_id FROM order AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.k_symbol = 'SIPO' AND T2.bank = 'QR' AND T2.bank_to = 'QR' AND T2.account_to = 'QR' AND T2.account = 'QR' AND T2.operation = 'VYBER' AND T2.type = 'VYDAJ' AND T2.balance = 0 AND T2.date BETWEEN '1998-06-30' AND '1998-06-30' AND T2.account_id IN ( SELECT T3.account_id FROM trans AS T3 INNER JOIN account AS T4 ON T3.account_id = T4.account_id WHERE T4.type = 'POJISTNE' AND T4.date BETWEEN '1998-06-30' AND '1998-06-30' AND T4.balance = 0 AND T4.date BETWEEN '1998-06-30' AND '1998-06-30' GROUP BY T4.account_id HAVING COUNT(T4.account_id) = 1 ) AND T1.account_id NOT IN ( SELECT T3.account_id FROM trans AS T3 INNER JOIN account AS T4 ON T3.account_id = T4.account_id WHERE T4.type = 'POJISTNE' AND T4.date BETWEEN '1998-06-30' AND '1998-06-30' AND T4.balance = 0 AND T4.date BETWEEN '1998-06-30' AND '1998-06-30' GROUP BY T4.account_id HAVING COUNT(T4.account_id) = 1 ) AND T1.district_id = ( SELECT T5.district_id FROM district AS T5 WHERE T5.A2 = 'Pisek' )\t----- bird -----\tfinancial"
  ],
  [
    "What are the accounts that have both gold and junior credit cards?",
    "SELECT DISTINCT T1.account_id FROM account AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'gold' UNION ALL SELECT DISTINCT T1.account_id FROM account AS T1 JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'junior';\t----- bird -----\tfinancial"
  ],
  [
    "How much is the average amount in credit card made by account holders in a month, in year 2021?",
    "SELECT AVG(T1.amount) FROM trans AS T1 WHERE T1.type = 'VYBER KARTOU' AND T1.date LIKE '2021-%' AND T1.operation = 'VYBER KARTOU' AND T1.amount IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "Who are the account holder identification numbers whose spent per month on the credit card is less than the average, in 1998?",
    "SELECT T2.account_id FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T1.date BETWEEN '1998-01-01' AND '1998-12-31' AND T1.amount < ( SELECT AVG(T1.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.operation = 'VYBER KARTOU' AND T1.date BETWEEN '1998-01-01' AND '1998-12-31' )\t----- bird -----\tfinancial"
  ],
  [
    "Who are the female account holders who own credit cards and also have loans?",
    "SELECT T1.`account_id` FROM account AS T1 INNER JOIN card AS T2 ON T1.`account_id` = T2.`account_id` INNER JOIN loan AS T3 ON T1.`account_id` = T3.`account_id` WHERE T2.`type` = 'classic' AND T3.`amount` > 1000 AND T3.`duration` > 12\t----- bird -----\tfinancial"
  ],
  [
    "How many female clients' accounts are in the region of South Bohemia?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`gender` = 'F' AND T2.`A3` = 'south Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "Please list the accounts whose district is Tabor that are eligible for loans.",
    "SELECT T1.`account_id` FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`status` = 'C' AND T1.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Tabor' )\t----- bird -----\tfinancial"
  ],
  [
    "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
    "SELECT DISTINCT `type` FROM loan WHERE `type` != 'OWNER' AND `type` IN ( SELECT `type` FROM loan WHERE `type` != 'OWNER' AND `district_id` = ( SELECT `district_id` FROM account WHERE `account_id` = ( SELECT `account_id` FROM loan WHERE `type` != 'OWNER' ORDER BY `A11` DESC LIMIT 1 ) ) ) ORDER BY `A11` DESC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in North Bohemia has made a transaction with the partner's bank being AB?",
    "SELECT `district_id` FROM district WHERE `A3` = 'north Bohemia'\t----- bird -----\tfinancial"
  ],
  [
    "Please list the name of the districts with accounts that made withdrawal transactions.",
    "SELECT T1.A2 FROM trans AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.type = 'VYDAJ'\t----- bird -----\tfinancial"
  ],
  [
    "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?",
    "SELECT AVG(`A3`) FROM district WHERE `A15` > 4000 AND `A5` > 0\t----- bird -----\tfinancial"
  ],
  [
    "How many 'classic' cards are eligible for loan?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN disp AS T2 ON T1.`district_id` = T2.`district_id` INNER JOIN card AS T3 ON T2.`disp_id` = T3.`disp_id` INNER JOIN client AS T4 ON T1.`district_id` = T4.`district_id` INNER JOIN loan AS T5 ON T1.`account_id` = T5.`account_id` WHERE T3.`type` = 'classic' AND T2.`district_id` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "How many male clients in 'Hl.m. Praha' district?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`district_id` = ( SELECT `district_id` FROM district WHERE `A2` = 'Hl.m. Praha' ) AND T1.`gender` = 'M'\t----- bird -----\tfinancial"
  ],
  [
    "How many percent of 'Gold' cards were issued prior to 1998?",
    "SELECT CAST((COUNT(CASE WHEN type = 'gold' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN type = 'gold' THEN 1 ELSE NULL END)) AS percent_gold_issued_before_1998 FROM card JOIN account ON card.account_id = account.account_id WHERE card.issued < '1998-01-01';\t----- bird -----\tfinancial"
  ],
  [
    "Who is the owner of the account with the largest loan amount?",
    "SELECT T1.`gender` FROM account AS T1 JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`amount` IS NOT NULL ORDER BY T2.`amount` DESC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "What is the number of committed crimes in 1995 in the district of the account with the id 532?",
    "SELECT A15 FROM district WHERE `district_id` = ( SELECT `district_id` FROM account WHERE `account_id` = 532 )\t----- bird -----\tfinancial"
  ],
  [
    "What is the district Id of the account that placed the order with the id 33333?",
    "SELECT T1.district_id FROM order AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T1.order_id = 33333\t----- bird -----\tfinancial"
  ],
  [
    "List all the withdrawals in cash transactions that the client with the id 3356 makes.",
    "SELECT T1.`type` FROM trans AS T1 INNER JOIN order AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`type` = 'VYBER' AND T2.`account_id` = 3356\t----- bird -----\tfinancial"
  ],
  [
    "Among the weekly issuance accounts, how many have a loan of under 200000?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN loan AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`amount` < 200000 AND T1.`frequency` = 'POPLATEK TYDNE'\t----- bird -----\tfinancial"
  ],
  [
    "What type of credit card does the client with the id 13539 own?",
    "SELECT T1.type FROM account AS T1 JOIN card AS T2 ON T1.`account_id` = T2.`account_id` JOIN disp AS T3 ON T1.`account_id` = T3.`account_id` JOIN client AS T4 ON T1.`client_id` = T4.`client_id` WHERE T1.`client_id` = 13539 AND T1.`account_id` = T2.`account_id` AND T1.`account_id` = T3.`account_id` AND T1.`client_id` = T4.`client_id`\t----- bird -----\tfinancial"
  ],
  [
    "What is the region of the client with the id 3541 from?",
    "SELECT `A3` FROM district WHERE `district_id` = ( SELECT `district_id` FROM client WHERE `client_id` = 3541 )\t----- bird -----\tfinancial"
  ],
  [
    "Which district has the most accounts with loan contracts finished with no problems?",
    "SELECT T1.A9 FROM loan AS T1 JOIN account AS T2 ON T1.account_id = T2.account_id JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'A' GROUP BY T2.district_id ORDER BY COUNT(T1.loan_id) DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "Who placed the order with the id 32423?",
    "SELECT T1.`account_id` FROM order AS T1 JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`order_id` = 32423\t----- bird -----\tfinancial"
  ],
  [
    "Please list all the transactions made by accounts from district 5.",
    "SELECT T1.`account_id` FROM trans AS T1 INNER JOIN order AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`account_id` = ( SELECT T3.`account_id` FROM trans AS T3 INNER JOIN order AS T4 ON T3.`account_id` = T4.`account_id` GROUP BY `account_id` ORDER BY SUM(`amount`) DESC LIMIT 1 ) AND T1.`district_id` = 5 AND T1.`account_id` NOT IN ( SELECT T5.`account_id` FROM trans AS T5 INNER JOIN order AS T6 ON T5.`account_id` = T6.`account_id` GROUP BY `account_id` ORDER BY SUM(`amount`) DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "How many of the accounts are from Jesenik district?",
    "SELECT COUNT(`account_id`) FROM account WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A9` = 'Jesenik' )\t----- bird -----\tfinancial"
  ],
  [
    "List all the clients' IDs whose junior credit cards were issued after 1996.",
    "SELECT T1.`gender` FROM client AS T1 INNER JOIN disp AS T2 ON T1.`district_id` = T2.`disp_id` INNER JOIN card AS T3 ON T2.`disp_id` = T3.`disp_id` WHERE T3.`type` = 'junior' AND T3.`issued` >= '1997-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?",
    "SELECT CAST(COUNT(CASE WHEN `gender` = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A11` > 10000 )\t----- bird -----\tfinancial"
  ],
  [
    "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
    "SELECT (SUM(T1.amount) - SUM(T2.amount)) / SUM(T2.amount) * 100 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.gender = 'M' AND T1.date BETWEEN '1996-01-01' AND '1997-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many credit card withdrawals were recorded after 1995?",
    "SELECT COUNT(T1.`account_id`) FROM trans AS T1 WHERE T1.`operation` = 'VYBER KARTOU' AND T1.`date` > '1995-01-01'\t----- bird -----\tfinancial"
  ],
  [
    "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
    "SELECT SUM(T1.A16) - SUM(T2.A16) FROM district AS T1 JOIN ( SELECT SUM(A16) AS A16 FROM district AS T1 WHERE T1.A3 = 'north Bohemia' AND T1.date = '1996' ) AS T2 ON 1 = 1\t----- bird -----\tfinancial"
  ],
  [
    "How many owner and disponent dispositions are there from account number 1 to account number 10?",
    "SELECT COUNT(T1.`account_id`) AS owner_count, COUNT(T2.`account_id`) AS disponent_count FROM disp AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`type` = 'OWNER' LIMIT 10\t----- bird -----\tfinancial"
  ],
  [
    "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
    "SELECT T1.`type` FROM trans AS T1 WHERE T1.`account_id` = ( SELECT T2.`account_id` FROM account AS T2 WHERE T2.`account_id` = 3 ) AND T1.`amount` = 3539\t----- bird -----\tfinancial"
  ],
  [
    "What year was account owner number 130 born?",
    "SELECT STRFTIME('%Y', T1.birth_date) FROM account AS T1 INNER JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`client_id` = 130 AND T1.`birth_date` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts have an owner disposition and request for a statement to be generated upon a transaction?",
    "SELECT COUNT(T1.`account_id`) FROM trans AS T1 INNER JOIN disp AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`type` = 'VYDAJ' AND T2.`type` = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "What is the amount of debt that client number 992 has, and how is this client doing with payments?",
    "SELECT T1.`operation` FROM trans AS T1 JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`client_id` = 992\t----- bird -----\tfinancial"
  ],
  [
    "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?",
    "SELECT T1.gender FROM client AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.account_id WHERE T2.account_id = ( SELECT T1.`account_id` FROM client AS T1 WHERE T1.`client_id` = 4 ) AND T2.type = 'VYDAJ'\t----- bird -----\tfinancial"
  ],
  [
    "Which kind of credit card does client number 9 possess?",
    "SELECT T1.type FROM client AS T1 JOIN disp AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`client_id` = 9\t----- bird -----\tfinancial"
  ],
  [
    "How much, in total, did client number 617 pay for all of the transactions in 1998?",
    "SELECT SUM(T2.amount) FROM trans AS T1 INNER JOIN account AS T2 ON T1.`account_id` = T2.`account_id` WHERE T1.`date` = '1998-06-30'\t----- bird -----\tfinancial"
  ],
  [
    "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.",
    "SELECT T1.`client_id` FROM client AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T1.`birth_date` BETWEEN '1983-01-01' AND '1987-12-31' AND T2.`district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "Please provide the IDs of the 3 female clients with the largest loans.",
    "SELECT T1.`gender` FROM loan AS T1 INNER JOIN client AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`gender` = 'F' ORDER BY T1.`amount` DESC LIMIT 3\t----- bird -----\tfinancial"
  ],
  [
    "How many male customers who were born between 1974 and 1976 have made a payment on their home in excess of $4000?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN trans AS T2 ON T1.`client_id` = T2.`account_id` WHERE T1.`gender` = 'M' AND T1.`birth_date` BETWEEN '1974-01-01' AND '1976-12-31' AND T2.`k_symbol` = 'SIPO' AND T2.`amount` > 4000\t----- bird -----\tfinancial"
  ],
  [
    "How many accounts in Beroun were opened after 1996?",
    "SELECT COUNT(T1.`account_id`) FROM account AS T1 INNER JOIN district AS T2 ON T1.`district_id` = T2.`district_id` WHERE T2.`A3` = 'Beroun' AND T1.`date` > '1996-12-31'\t----- bird -----\tfinancial"
  ],
  [
    "How many female customers have a junior credit card?",
    "SELECT COUNT(T1.`client_id`) FROM client AS T1 INNER JOIN card AS T2 ON T1.`client_id` = T2.`client_id` WHERE T1.`gender` = 'F' AND T2.`type` = 'junior' AND T1.`district_id` = ( SELECT `district_id` FROM client WHERE `gender` = 'F' GROUP BY `district_id` ORDER BY COUNT(`client_id`) DESC LIMIT 1 )\t----- bird -----\tfinancial"
  ],
  [
    "What proportion of customers who have accounts at the Prague branch are female?",
    "SELECT COUNT(`client_id`) FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'Prague' ) AND `gender` = 'F' * 100 / ( SELECT COUNT(`client_id`) FROM client WHERE `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'Prague' ) )\t----- bird -----\tfinancial"
  ],
  [
    "What percentage of male clients request for weekly statements to be issued?",
    "SELECT CAST(COUNT(CASE WHEN T1.gender = 'M' THEN 1 ELSE NULL END) * 100 / COUNT(T1.gender) AS REAL) FROM client AS T1 INNER JOIN trans AS T2 ON T1.client_id = T2.account_id WHERE T2.type = 'VYBER' AND T2.operation IN ('PREVOD NA UCET', 'PREVOD Z UCTU', 'VYBER KARTOU') AND T2.amount IS NOT NULL AND T2.amount != 'None'\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who choose statement of weekly issuance are User?",
    "SELECT COUNT(T1.client_id) FROM account AS T1 JOIN client AS T2 ON T1.district_id = T2.district_id JOIN disp AS T3 ON T1.account_id = T3.account_id JOIN order AS T4 ON T1.account_id = T4.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T1.type = 'USER' AND T4.type IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "Name the account numbers of female clients who are oldest and have lowest average salary?",
    "SELECT T1.account_id FROM client AS T1 JOIN district AS T2 ON T1.district_id = T2.district_id JOIN account AS T3 ON T1.account_id = T3.account_id JOIN disp AS T4 ON T1.account_id = T4.account_id WHERE T1.gender = 'F' AND T2.A11 IS NOT NULL ORDER BY T2.A11 DESC, T1.birth_date DESC LIMIT 1;\t----- bird -----\tfinancial"
  ],
  [
    "How many clients who were born in 1920 stay in east Bohemia?",
    "SELECT COUNT(`client_id`) FROM client WHERE `birth_date` = '1920-01-01' AND `district_id` = ( SELECT `district_id` FROM district WHERE `A3` = 'east Bohemia' )\t----- bird -----\tfinancial"
  ],
  [
    "How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement.",
    "error: No SQL found in the input string\t----- bird -----\tfinancial"
  ],
  [
    "What is the average amount of loan which are still on running contract with statement issuance after each transaction?",
    "SELECT AVG(T1.`amount`) FROM loan AS T1 INNER JOIN trans AS T2 ON T1.`account_id` = T2.`account_id` WHERE T2.`type` = 'VYDAJ' AND T2.`operation` = 'PREVOD Z UCTU' AND T2.`status` = 'C' AND T2.`status` IS NOT NULL;\t----- bird -----\tfinancial"
  ],
  [
    "List all ID and district for clients that can only have the right to issue permanent orders or apply for loans.",
    "SELECT T1.account_id, T1.district_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER'\t----- bird -----\tfinancial"
  ],
  [
    "Provide the IDs and age of the client with high level credit card, which is eligible for loans.",
    "SELECT `duration` FROM loan ORDER BY `amount` DESC LIMIT 1\t----- bird -----\tfinancial"
  ],
  [
    "What is the most common bond type?",
    "SELECT MAX(bond_type) FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id GROUP BY bond_type\t----- bird -----\ttoxicology"
  ],
  [
    "In the non-carcinogenic molecules, how many contain chlorine atoms?",
    "SELECT COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T1.`molecule_id` = T3.`molecule_id` INNER JOIN bond AS T4 ON T2.`bond_id` = T4.`bond_id` INNER JOIN element AS T5 ON T4.`bond_type` = T5.`element` WHERE T5.`element` = 'cl' AND T1.`label` = '-' AND T5.`element` IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the average number of oxygen atoms in single-bonded molecules.",
    "SELECT AVG(T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = '-' GROUP BY T4.label HAVING T4.label = '-' ORDER BY T1.element ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "On average how many carcinogenic molecules are single bonded?",
    "SELECT AVG(T2.`bond_id`) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule containing sodium atoms, how many are non-carcinogenic?",
    "SELECT COUNT(T1.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'na' AND T3.label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the triple-bonded molecules which are carcinogenic.",
    "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+' GROUP BY T1.molecule_id HAVING COUNT(DISTINCT T2.atom_id) > 1;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carbon in double-bond molecules?",
    "SELECT CAST(COUNT(CASE WHEN T1.element = 'c' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.element) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = ' = ' AND T1.element IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "How many triple type bonds are there?",
    "SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "In how many atoms is there no bromine?",
    "SELECT COUNT(T1.atom_id) FROM atom AS T1 WHERE T1.element != 'br'\t----- bird -----\ttoxicology"
  ],
  [
    "Of the first 100 molecules in number order, how many are carcinogenic?",
    "SELECT COUNT(`molecule_id`) FROM molecule WHERE `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify by their ID the molecules in which there is silicon.",
    "SELECT T1.molecule_id FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id JOIN connected AS T3 ON T1.molecule_id = T3.molecule_id JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T1.element = 'si'\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in the TR004_8_9 bond atoms?",
    "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T1.element = 'cl' AND T4.label = 'TR004_8_9'\t----- bird -----\ttoxicology"
  ],
  [
    "What elements are in a double type bond?",
    "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN atom AS T4 ON T3.atom_id = T4.atom_id WHERE T3.bond_type = ' = ' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology"
  ],
  [
    "Which type of label is the most numerous in atoms with hydrogen?",
    "SELECT T1.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'h' GROUP BY T1.label ORDER BY COUNT(T1.label) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Tellurium is in what type of bond?",
    "SELECT T1.bond_type FROM atom AS T1 JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` JOIN molecule AS T3 ON T2.`bond_id` = T3.`molecule_id` JOIN bond AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T1.`element` = 'te' AND T1.`bond_type` IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms are connected in single type bonds?",
    "SELECT DISTINCT T1.molecule_id FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate which atoms are connected in non-carcinogenic type molecules.",
    "SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T2.`bond_id` = T3.`molecule_id` WHERE T3.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Which element is the least numerous in non-carcinogenic molecules?",
    "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id GROUP BY T1.element ORDER BY COUNT(T1.element) ASC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "What type of bond is there between the atoms TR004_8 and TR004_20?",
    "SELECT bond_type FROM bond WHERE bond_id IN ( SELECT bond_id FROM connected WHERE atom_id = 'TR004_8' OR atom_id = 'TR004_20' )\t----- bird -----\ttoxicology"
  ],
  [
    "What type of label is not on molecules with atoms with tin?",
    "SELECT T1.label FROM atom AS T1 JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.element = 'sn' AND T1.element != 'sn' AND T3.label = '-';\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms with iodine and sulfur type elements are there in single bond molecules?",
    "SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE T1.element = 'i' AND T1.element = 's' AND T4.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all connected atoms with a triple bond.",
    "SELECT T1.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify all the atoms that are connected to the atoms of the TR181 molecule.",
    "SELECT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.molecule_id = 'TR181'\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of carcinogenic-type molecules does not contain fluorine?",
    "SELECT CAST(COUNT(CASE WHEN T1.element = 'f' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of carcinogenic molecules in triple type bonds?",
    "SELECT CAST(SUM(CASE WHEN T1.label = '+' AND T2.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.bond_id) FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
    "SELECT T1.element FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.label = 'TR000' GROUP BY T1.element ORDER BY COUNT(*) DESC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that are bonded in the molecule TR001 with the bond ID of TR001_2_6?",
    "SELECT T1.`atom_id` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN bond AS T3 ON T1.`bond_id` = T3.`bond_id` INNER JOIN molecule AS T4 ON T3.`molecule_id` = T4.`molecule_id` WHERE T4.`label` = 'TR001' AND T3.`bond_type` = 'TR001_2_6'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the difference between the number of molecules that are carcinogenic and those that are not?",
    "SELECT SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.label = '-' THEN 1 ELSE 0 END) FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_id IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atom IDs of the bond TR_000_2_5?",
    "SELECT atom_id FROM connected JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON connected.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR_000_2_5' AND bond.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond IDs that have the same atom ID 2 of TR000_2?",
    "SELECT T1.bond_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T2.atom_id2 = 'TR000_2'\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top five molecules that have double bonds in alphabetical order.",
    "SELECT T1.label FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`bond_type` = ' = ' GROUP BY T1.`bond_id` HAVING COUNT(T1.`bond_id`) = (SELECT MAX(COUNT(T1.`bond_id`)) FROM bond AS T3 INNER JOIN connected AS T4 ON T3.`bond_id` = T4.`bond_id` WHERE T3.`bond_type` = ' = ' GROUP BY T3.`bond_id`) ORDER BY COUNT(T1.`bond_id`) DESC LIMIT 5\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of double bonds in the molecule TR008?",
    "SELECT CAST(COUNT(CASE WHEN T2.`bond_type` = ' = ' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.`bond_id`) FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T1.`molecule_id` = 'TR008' AND T2.`bond_type` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of molecules that are carcinogenic?",
    "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer in percentage.",
    "SELECT CAST(SUM(CASE WHEN `element` = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(`atom_id`) FROM atom JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE molecule.`label` = 'TR206' AND `element` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of bond that molecule TR000 has when involved in any bonds?",
    "SELECT T1.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = 'TR000' AND T2.bond_type IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the toxicology and label of molecule TR060?",
    "SELECT DISTINCT T1.element, T1.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060'\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond type accounted for the majority of the bonds found in molecule TR018 and state whether or not this molecule is carcinogenic?",
    "SELECT CASE WHEN molecule.`label` = 'TR018' THEN 'Yes' ELSE 'No' END AS is_carcinogenic, majority_bond_type FROM ( SELECT MAX(COUNT(bond_type)) AS majority_bond_type FROM bond JOIN connected ON bond.`bond_id` = connected.`bond_id` JOIN atom ON connected.`atom_id` = atom.`atom_id` JOIN molecule ON atom.`molecule_id` = molecule.`molecule_id` WHERE molecule.`label` = 'TR018' ) AS bond_counts JOIN ( SELECT CASE WHEN molecule.`label` = 'TR018' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule.`label` = 'TR018' ) AS molecule_status ON bond_counts.majority_bond_type = molecule_status.is_carcinogenic\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
    "SELECT T1.molecule_id FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' GROUP BY T1.molecule_id ORDER BY COUNT(T3.bond_type) DESC, T1.label ASC LIMIT 3\t----- bird -----\ttoxicology"
  ],
  [
    "Please list top two bonds that happened with the molecule TR006 in alphabetical order.",
    "SELECT T1.`bond_id` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` INNER JOIN molecule AS T3 ON T2.`molecule_id` = T3.`molecule_id` WHERE T3.`label` = 'TR006' ORDER BY T1.`bond_id` ASC LIMIT 2\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds which involved atom 12 does molecule TR009 have?",
    "SELECT COUNT(T1.`bond_id`) FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T1.`atom_id` = 'TR009_12' OR T1.`atom_id2` = 'TR009_12'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules are carcinogenic and have the bromine element?",
    "SELECT COUNT(molecule_id) FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE label = '+' AND element = 'br';\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type and the atoms of the bond ID of TR001_6_9?",
    "SELECT T1.bond_type, T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 1 AND T2.atom_id2 = 2;\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.",
    "SELECT T1.label FROM atom AS T1 JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` JOIN molecule AS T3 ON T1.`molecule_id` = T3.`molecule_id` WHERE T2.`atom_id2` = 'TR001_10' AND T3.label = '+' ORDER BY T3.label ASC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a triple bond type?",
    "SELECT COUNT(`molecule_id`) FROM bond WHERE `bond_type` = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "How many connections does the atom 19 have?",
    "SELECT COUNT(DISTINCT label) FROM molecule WHERE molecule_id IN ( SELECT molecule_id FROM bond WHERE molecule_id IN ( SELECT bond_id FROM connected WHERE atom_id LIKE 'TR%_19' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of the toxicology of the molecule \"TR004\".",
    "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T3.`molecule_id` = T2.`molecule_id` WHERE T3.`label` = 'TR004' AND T2.`molecule_id` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are not carcinogenic?",
    "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 WHERE T1.label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Among all the atoms from 21 to 25, list all the molecules that are carcinogenic.",
    "SELECT T1.molecule_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bonds that have phosphorus and nitrogen as their atom elements?",
    "SELECT T1.bond_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN atom AS T3 ON T1.atom_id2 = T3.atom_id INNER JOIN molecule AS T4 ON T2.molecule_id = T4.molecule_id INNER JOIN molecule AS T5 ON T3.molecule_id = T5.molecule_id WHERE T2.element = 'p' AND T3.element = 'n' GROUP BY T1.bond_id\t----- bird -----\ttoxicology"
  ],
  [
    "Is the molecule with the most double bonds carcinogenic?",
    "SELECT CASE WHEN T1.label = '+' THEN 'Yes' ELSE 'No' END AS `is_carcinogenic` FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = ' = ' GROUP BY T1.molecule_id ORDER BY COUNT(T2.bond_id) DESC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the average number of bonds the atoms with the element iodine have?",
    "SELECT AVG(COUNT(bond_id)) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.element = 'i';\t----- bird -----\ttoxicology"
  ],
  [
    "List the bond type and the bond ID of the atom 45.",
    "SELECT bond_type, bond_id FROM atom JOIN bond ON atom.atom_id = bond.bond_id WHERE atom_id = '45' AND bond_type IN ('-', '=', '#')\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements of atoms that can not bond with any other atoms.",
    "SELECT DISTINCT T1.element FROM atom AS T1 WHERE T1.element NOT IN ( SELECT T2.element FROM atom AS T2 INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id WHERE T3.bond_id IS NOT NULL )\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms of the triple bond with the molecule \"TR447\"?",
    "SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN bond AS T3 ON T2.`bond_id` = T3.`bond_id` WHERE T3.`bond_type` = '#' AND T3.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR447' ) AND T1.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR447' ) AND T3.`molecule_id` = ( SELECT `molecule_id` FROM atom WHERE `molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR447' ) ) AND T1.`molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR447' )\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements of the atoms of TR144_8_19?",
    "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T3.`molecule_id` = T2.`molecule_id` WHERE T3.`label` = 'TR144_8_19' AND T2.`bond_id` IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "Of all the carcinogenic molecules, which one has the most double bonds?",
    "SELECT T1.label FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = ' = ' GROUP BY T1.label ORDER BY COUNT(*) DESC LIMIT 1;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the least common element of all carcinogenic molecules?",
    "SELECT DISTINCT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = '+' GROUP BY atom.element ORDER BY COUNT(*) ASC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "What are the atoms that can bond with the atom that has the element lead?",
    "SELECT `atom_id` FROM atom WHERE `atom_id` IN ( SELECT `atom_id` FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `bond_type` = '-' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "List the elements of all the triple bonds.",
    "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "What percentage of bonds have the most common combination of atoms' elements?",
    "SELECT CAST(COUNT(CASE WHEN T1.element = T2.element THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.element) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T3.bond_type IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "What proportion of single bonds are carcinogenic?",
    "SELECT CAST(COUNT(CASE WHEN T2.label = '+' THEN 1 ELSE NULL END) AS REAL) / COUNT(T2.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms consisting of the element carbon and hydrogen.",
    "SELECT COUNT(T1.atom_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id JOIN atom AS T4 ON T4.molecule_id = T3.molecule_id WHERE T1.element IN ('c', 'h')\t----- bird -----\ttoxicology"
  ],
  [
    "List down atom id2 for atoms with element sulfur.",
    "SELECT T2.`atom_id2` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T1.`element` = 's'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the bond type for atoms with element Tin?",
    "SELECT T1.bond_type FROM atom AS T1 JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE T1.element = 'sn' AND T4.bond_type = '-';\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are there for single bond molecules?",
    "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine.",
    "SELECT T1.molecule_id FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T1.element IN ('p', 'br') AND T1.element IS NOT NULL AND T3.bond_type = '#' GROUP BY T1.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "Write down bond id for molecules that are carcinogenic.",
    "SELECT T1.`bond_id` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = 'None' AND T1.`molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` = '+' )\t----- bird -----\ttoxicology"
  ],
  [
    "Among the single bond molecule id, which molecules are not carcinogenic?",
    "SELECT T1.molecule_id FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' AND T1.molecule_id = ( SELECT T1.molecule_id FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the composition of element chlorine in percentage among the single bond molecules?",
    "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.element) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the labels for TR000, TR001 and TR002?",
    "SELECT `label` FROM molecule WHERE `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `label` IN ('+', '-', '-') LIMIT 3 )\t----- bird -----\ttoxicology"
  ],
  [
    "List down the molecule id for non carcinogenic molecules.",
    "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
    "SELECT COUNT(`molecule_id`) FROM molecule WHERE `label` = '+' AND `molecule_id` BETWEEN 'TR000' AND 'TR030'\t----- bird -----\ttoxicology"
  ],
  [
    "List down the bond type for molecules from molecule id TR000 to TR050.",
    "SELECT T1.bond_type FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.molecule_id BETWEEN 'TR000' AND 'TR050'\t----- bird -----\ttoxicology"
  ],
  [
    "What are the elements for bond id TR001_10_11?",
    "SELECT T1.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_id` = 'TR001_10_11' AND T1.element IN ('h', 'c', 'o', 'n', 'cl', 's', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology"
  ],
  [
    "How many bond id have element iodine?",
    "SELECT COUNT(T1.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T3.`molecule_id` = T2.`bond_id` WHERE T1.`element` = 'i'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?",
    "SELECT `label` FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`element` = 'ca' AND T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Does bond id TR001_1_8 have both element of chlorine and carbon?",
    "SELECT EXISTS ( SELECT 1 FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '=' ) ) AND element = 'cl' )\t----- bird -----\ttoxicology"
  ],
  [
    "List down two molecule id of triple bond non carcinogenic molecules with element carbon.",
    "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.bond_type = '#' AND T3.label = '-' AND T3.element = 'c' AND T1.molecule_id IN ( SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '#' AND T1.label = '-' AND T1.element = 'c' )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the percentage of element chlorine in carcinogenic molecules?",
    "SELECT CAST(SUM(CASE WHEN T2.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "List the toxicology elements associated with molecule TR001.",
    "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T3.label = 'TR001'\t----- bird -----\ttoxicology"
  ],
  [
    "Give me the molecule ID of the double bond type.",
    "SELECT DISTINCT atom.molecule_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = ' = ' AND bond.molecule_id IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "Write down the atom IDs of the first and second atoms of triple bond type molecules.",
    "SELECT `atom_id`, `atom_id2` FROM connected WHERE `bond_id` IN ( SELECT `bond_id` FROM bond WHERE `bond_type` = '#' )\t----- bird -----\ttoxicology"
  ],
  [
    "What are the toxicology elements associated with bond ID TR005_16_26?",
    "SELECT DISTINCT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = 'TR005_16_26' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca');\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the single bond type molecules are non-carcinogenic?",
    "SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '-' AND T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the label for bond ID TR001_10_11?",
    "SELECT `label` FROM molecule WHERE `molecule_id` = ( SELECT `molecule_id` FROM connected WHERE `bond_id` = 'TR001_10_11' )\t----- bird -----\ttoxicology"
  ],
  [
    "Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not.",
    "SELECT bond_id FROM bond WHERE bond_type = '#' AND label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
    "SELECT T1.element FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.atom_id = 4 AND T1.label = '+' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\t----- bird -----\ttoxicology"
  ],
  [
    "What is the ratio of Hydrogen elements in molecule ID TR006? Please indicate its label.",
    "SELECT T3.label FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '+' AND T3.molecule_id = 'TR006' ORDER BY CAST(COUNT(CASE WHEN T1.element = 'h' THEN 1 ELSE NULL END) AS REAL) / COUNT(T1.element) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the chemical compound that contains Calcium is carcinogenic.",
    "SELECT T3.label FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T2.bond_id = T3.molecule_id WHERE T1.element = 'ca' AND T3.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Determine the bond type that is formed in the chemical compound containing element Tellurium.",
    "SELECT T1.bond_type FROM atom AS T1 JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE T1.element = 'te' AND T4.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Name chemical elements that form a bond TR001_10_11.",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`bond_id` = ( SELECT `bond_id` FROM connected WHERE `molecule_id` = ( SELECT `molecule_id` FROM connected WHERE `bond_id` = 'TR001_10_11' ) )\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.",
    "SELECT CAST( (SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#') AS REAL) * 100 / (SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1)\t----- bird -----\ttoxicology"
  ],
  [
    "Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.",
    "SELECT CAST(COUNT(CASE WHEN T2.bond_type = ' = ' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.bond_id) AS percent FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.molecule_id = 'TR047' AND T3.bond_type = ' = '\t----- bird -----\ttoxicology"
  ],
  [
    "Identify whether the molecule that contains atom TR001_1 is carcinogenic.",
    "SELECT CASE WHEN T1.label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM atom AS T1 INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.atom_id = 'TR001_1' AND T3.label = '+' INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id AND T1.molecule_id = T2.molecule_id INNER JOIN bond AS T4 ON T2.bond_id = T4.bond_id WHERE T4.bond_type = '-' GROUP BY T1.atom_id\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR151 carcinogenic?",
    "SELECT CASE WHEN `label` = '+' THEN 1 ELSE 0 END AS is_carcinogenic FROM molecule WHERE `molecule_id` = 'TR151'\t----- bird -----\ttoxicology"
  ],
  [
    "Which toxic element can be found in the molecule TR151?",
    "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T3.label = 'TR151' AND T1.element = 'cl';\t----- bird -----\ttoxicology"
  ],
  [
    "How many chemical compounds in the database are identified as carcinogenic.",
    "SELECT COUNT(DISTINCT `molecule_id`) FROM molecule WHERE `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.",
    "SELECT T1.atom_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T2.molecule_id BETWEEN 'TR010' AND 'TR050' AND T2.element = 'c'\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule labeled with carcinogenic compounds?",
    "SELECT COUNT(T1.`atom_id`) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN molecule AS T3 ON T2.`bond_id` = T3.`molecule_id` WHERE T3.`label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Which bond ids are double-bond with carcinogenic compound?",
    "SELECT T2.bond_id FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T1.label = '+' AND T2.bond_type = ' = ' AND T4.label = '+' AND T2.bond_id = T4.bond_id\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?",
    "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h' AND T2.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Indicate the molecule id is belonging to the TR00_1_2 bond that has the first atom named TR00_1.",
    "SELECT T1.molecule_id FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T2.`element` = 'TR00_1' AND T1.`atom_id` = 'TR00_2' AND T1.`bond_id` = ( SELECT T1.`bond_id` FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T2.`element` = 'TR00_1' AND T1.`atom_id` = 'TR00_2' ) AND T1.`bond_id` = ( SELECT MAX(T1.`bond_id`) FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id2` = T2.`atom_id` WHERE T2.`element` = 'TR00_1' AND T1.`atom_id` = 'TR00_2' ) GROUP BY T1.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "Among the atoms that contain element carbon, which one does not contain compound carcinogenic?",
    "SELECT a.atom_id FROM atom a WHERE a.element != 'c' AND a.atom_id IN ( SELECT c.atom_id2 FROM connected c WHERE c.atom_id = c.atom_id2 AND c.bond_id IN ( SELECT b.bond_id FROM bond b WHERE b.element = 'c' ) ) GROUP BY a.atom_id HAVING COUNT(DISTINCT b.element) = 0\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
    "SELECT CAST(SUM(CASE WHEN T2.label = '+' AND T1.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100.0 / COUNT(T1.molecule_id) FROM atom AS T1 JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR124 carcinogenic?",
    "SELECT `label` FROM molecule AS T1 WHERE T1.`molecule_id` = 'TR124'\t----- bird -----\ttoxicology"
  ],
  [
    "What atoms comprise TR186?",
    "SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id` INNER JOIN molecule AS T4 ON T4.`molecule_id` = T3.`molecule_id` WHERE T2.`label` = 'TR186' AND T3.`bond_id` IS NOT NULL\t----- bird -----\ttoxicology"
  ],
  [
    "What is the bond type of TR007_4_19?",
    "SELECT T1.bond_type FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id` = T2.`atom_id` INNER JOIN atom AS T3 ON T1.`atom_id2` = T3.`atom_id` INNER JOIN molecule AS T4 ON T2.`molecule_id` = T4.`molecule_id` INNER JOIN molecule AS T5 ON T3.`molecule_id` = T5.`molecule_id` WHERE T4.`label` = 'TR007_4_19' AND T5.`label` = 'TR007_4_19' AND T1.`bond_id` IS NOT NULL AND T1.`bond_type` IS NOT NULL AND T1.`bond_type` != '#' AND T1.`bond_type` != '-';\t----- bird -----\ttoxicology"
  ],
  [
    "Name the elements that comprise the atoms of bond TR001_2_4.",
    "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_2_4'\t----- bird -----\ttoxicology"
  ],
  [
    "How many double bonds does TR006 have and is it carcinogenic?",
    "SELECT T1.label FROM molecule AS T1 INNER JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.molecule_id = 'TR006' AND T2.bond_type = ' = '\t----- bird -----\ttoxicology"
  ],
  [
    "List all carcinogenic molecules and their elements.",
    "SELECT DISTINCT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE molecule.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Name all bonds with single bond types and what atoms are connected to the molecules.",
    "SELECT T1.`atom_id`, T1.`atom_id2`, T2.`bond_type` FROM connected AS T1 INNER JOIN bond AS T2 ON T1.`bond_id` = T2.`bond_id` WHERE T2.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecules have triple bonds and list all the elements they contain.",
    "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T4.molecule_id = T3.molecule_id WHERE T3.bond_type = '#'\t----- bird -----\ttoxicology"
  ],
  [
    "Name the atoms' elements that form bond TR000_2_3.",
    "SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = 'TR000_2_3';\t----- bird -----\ttoxicology"
  ],
  [
    "How many bonds are created by bonding atoms with chlorine element?",
    "SELECT COUNT(T1.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.element = 'cl'\t----- bird -----\ttoxicology"
  ],
  [
    "List out the atom id that belongs to the TR346 molecule and how many bond type can be created by this molecule?",
    "SELECT DISTINCT atom.molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = 'TR346' AND bond.bond_type IS NOT NULL GROUP BY atom.molecule_id;\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
    "SELECT COUNT(T1.molecule_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.bond_type = ' = ' AND T3.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "How many molecules without sulphur element is not having double bond?",
    "SELECT COUNT(T1.molecule_id) FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element != 's' AND T1.bond_type != ' = '\t----- bird -----\ttoxicology"
  ],
  [
    "What is the carcinogenic label for bond TR001_2_4?",
    "SELECT DISTINCT molecule_id, bond_id, label FROM molecule JOIN connected ON molecule.molecule_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR001_2_4' AND molecule.label = '+' GROUP BY molecule_id, bond_id;\t----- bird -----\ttoxicology"
  ],
  [
    "How many atoms belong to molecule id TR005?",
    "SELECT COUNT(`atom_id`) FROM atom WHERE `molecule_id` = ( SELECT `molecule_id` FROM molecule WHERE `label` = 'TR005' )\t----- bird -----\ttoxicology"
  ],
  [
    "How many single bonds are there in the list?",
    "SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"cl\" element, which of them are carcinogenic?",
    "SELECT T1.molecule_id FROM molecule AS T1 JOIN connected AS T2 ON T1.molecule_id = T2.molecule_id JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T3.element = 'cl' AND T1.label = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules which contain \"c\" element, which of them are not carcinogenic?",
    "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T1.element = 'c' AND T4.label = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules which contain the Chlorine element.",
    "SELECT COUNT(molecule_id) AS total_molecules FROM molecule\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule id of bond id TR001_1_7?",
    "SELECT T1.molecule_id FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.bond_id = 'TR001_1_7'\t----- bird -----\ttoxicology"
  ],
  [
    "How many elements are contained in bond_id TR001_3_4?",
    "SELECT COUNT(DISTINCT T1.`element`) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`bond_id` = ( SELECT `bond_id` FROM connected WHERE `atom_id` = 3 AND `atom_id2` = 4 )\t----- bird -----\ttoxicology"
  ],
  [
    "What is the type of the bond which is presenting the connection between two atoms TR000_1 and TR000_2?",
    "SELECT T1.bond_type FROM connected AS T1 JOIN bond AS T2 ON T1.bond_id = T2.bond_id JOIN molecule AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.atom_id = 'TR000_1' AND T1.atom_id2 = 'TR000_2' AND T2.bond_type IN ('-', '=', '#') AND T1.bond_type IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?",
    "SELECT `label` FROM molecule WHERE `molecule_id` = ( SELECT `atom_id` FROM atom WHERE `atom_id` = 'TR000_2' ) INTERSECT SELECT `molecule_id` FROM atom WHERE `atom_id` = 'TR000_4';\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element of toxicology for the atom with the ID of TR000_1?",
    "SELECT T1.`element` FROM atom AS T1 INNER JOIN connected AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`atom_id2` = 'TR000_1'\t----- bird -----\ttoxicology"
  ],
  [
    "Is molecule TR000 is carcinogenic or not?",
    "SELECT CASE WHEN `label` = '+' THEN 'Yes' ELSE 'No' END FROM molecule WHERE `molecule_id` = 'TR000'\t----- bird -----\ttoxicology"
  ],
  [
    "Find the percentage of atoms with single bond.",
    "SELECT CAST(COUNT(bond_type = '-') AS REAL) / COUNT(molecule_id) * 100 FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id JOIN molecule ON connected.molecule_id = molecule.molecule_id WHERE bond_type = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "How many carcinogenic molecules that consisted of Nitrogen?",
    "SELECT COUNT(DISTINCT molecule_id) FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE label = '+' AND atom.element = 'n';\t----- bird -----\ttoxicology"
  ],
  [
    "Which molecule consisted of Sulphur atom with double bond?",
    "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.molecule_id = T3.atom_id INNER JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T1.element = 's' AND T4.bond_type = ' = ' GROUP BY T1.molecule_id\t----- bird -----\ttoxicology"
  ],
  [
    "Which non-carcinogenic molecules consisted more than 5 atoms?",
    "SELECT T1.molecule_id FROM molecule AS T1 JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id JOIN connected AS T3 ON T2.atom_id = T3.atom_id JOIN bond AS T4 ON T3.bond_id = T4.bond_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T1.molecule_id) > 5;\t----- bird -----\ttoxicology"
  ],
  [
    "List all the elements with double bond, consisted in molecule TR024.",
    "SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.bond_id = T4.molecule_id WHERE T2.bond_type = '=' AND T4.label = 'TR024' AND T1.element = 'cl';\t----- bird -----\ttoxicology"
  ],
  [
    "Which carcinogenic molecule have the highest number of atoms consisted in it?",
    "SELECT T1.molecule_id FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' GROUP BY T1.molecule_id ORDER BY COUNT(T2.molecule_id) DESC LIMIT 1\t----- bird -----\ttoxicology"
  ],
  [
    "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
    "SELECT CAST((SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'h' AND T3.bond_type = '#' ) AS REAL) * 100.0 / (SELECT COUNT(DISTINCT T4.molecule_id) FROM molecule AS T4 INNER JOIN atom AS T5 ON T4.molecule_id = T5.molecule_id INNER JOIN connected AS T6 ON T5.atom_id = T6.atom_id INNER JOIN bond AS T7 ON T6.bond_id = T7.bond_id WHERE T5.element = 'h' AND T7.bond_type = '#' ) AS percentage FROM molecule AS T8 WHERE T8.element = 'h'\t----- bird -----\ttoxicology"
  ],
  [
    "How many of the molecules are carcinogenic?",
    "SELECT COUNT(`molecule_id`) FROM molecule WHERE `label` = '+'\t----- bird -----\ttoxicology"
  ],
  [
    "Among the molecules between TR004 to TR010, how many of them has single bonds?",
    "SELECT COUNT(`bond_id`) FROM bond WHERE `bond_type` = '-' AND `molecule_id` IN ( SELECT `molecule_id` FROM molecule WHERE `molecule_id` BETWEEN 'TR004' AND 'TR010' )\t----- bird -----\ttoxicology"
  ],
  [
    "In the molecule TR008, how many carbons are present?",
    "SELECT COUNT(T1.element) FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id JOIN bond AS T4 ON T4.bond_id = T2.bond_id JOIN atom AS T5 ON T5.atom_id = T4.atom_id2 WHERE T5.element = 'c' AND T3.label = 'TR008' AND T2.molecule_id IS NOT NULL;\t----- bird -----\ttoxicology"
  ],
  [
    "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
    "SELECT T1.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.`atom_id` = T2.`atom_id` WHERE T2.`atom_id` = 'TR004_7' AND T1.label != 'label' AND T1.label != 'label'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the total number of molecules with double bonded oxygen?",
    "SELECT COUNT(bond.molecule_id) FROM bond JOIN atom ON bond.molecule_id = atom.molecule_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = ' = ' AND atom.element = 'o';\t----- bird -----\ttoxicology"
  ],
  [
    "in molecules with triple bonds, how many of them are not carcinogenic?",
    "SELECT COUNT(T1.`molecule_id`) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`bond_type` = '#' AND T1.`label` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "List the element and bond type included in the molecule with molecule ID of TR016.",
    "SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.`atom_id` = T3.`atom_id` INNER JOIN bond AS T2 ON T3.`bond_id` = T2.`bond_id` INNER JOIN molecule AS T4 ON T4.`molecule_id` = T3.`molecule_id` WHERE T4.`label` = 'TR016' AND T3.`molecule_id` = (SELECT molecule_id FROM molecule WHERE label = 'TR016') AND T3.`bond_type` = '-'\t----- bird -----\ttoxicology"
  ],
  [
    "What is the atom ID of double bonded carbon in TR012 molecule?",
    "SELECT atom_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.molecule_id = connected.molecule_id AND atom.atom_id = connected.atom_id AND bond.bond_id = connected.bond_id WHERE atom.element = 'c' AND bond.bond_type = ' = ' AND molecule.label = 'TR012';\t----- bird -----\ttoxicology"
  ],
  [
    "List the atom ID of the carcinogenic molecule that contains oxygen?",
    "SELECT T1.`atom_id` FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.`molecule_id` = T2.`molecule_id` WHERE T2.`label` = '+' AND T1.`element` = 'o'\t----- bird -----\ttoxicology"
  ],
  [
    "Which are the cards that have incredibly powerful foils.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "What are the borderless cards available without powerful foils?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`borderColor` = 'borderless' AND T1.`cardKingdomFoilId` IS NULL AND T1.`cardId` = (SELECT MAX(T3.`cardId`) FROM cards AS T3 WHERE T3.`borderColor` = 'borderless' AND T3.`cardKingdomFoilId` IS NULL)\t----- bird -----\tcard_games"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "Name all cards with 2015 frame style ranking below 100 on EDHRec.",
    "SELECT `name` FROM cards WHERE `frameVersion` = '2015' AND `edhrecRank` < 100 ORDER BY `edhrecRank` ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "List all the mythic rarity print cards banned in gladiator format.",
    "SELECT `name` FROM cards INNER JOIN set_translations ON cards.`setCode` = set_translations.`setCode` INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` WHERE `rarity` = 'mythic' AND `format` = 'gladiator' AND `status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "For artifact type of cards that do not have multiple faces on the same card, state its legalities for vintage play format.",
    "SELECT T1.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`types` = 'Artifact' AND T1.`side` IS NULL AND T2.`format` = 'vintage'\t----- bird -----\tcard_games"
  ],
  [
    "List all the card id and artist with unknown power which are legal for commander play format.",
    "SELECT DISTINCT T1.`artist` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN legalities AS T3 ON T1.`uuid` = T3.`uuid` WHERE T3.`format` = 'commander' AND T3.`status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.",
    "SELECT T1.`name`, T1.`text`, T1.`hasContentWarning` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`uuid` IN ( SELECT T1.`uuid` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`artist` = 'Stephen Daniel' ) AND T1.`hasContentWarning` = 1\t----- bird -----\tcard_games"
  ],
  [
    "Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.",
    "SELECT T1.`text` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`name` = 'Sublime Epiphany'\t----- bird -----\tcard_games"
  ],
  [
    "Name the card and artist with the most ruling information. Also state if the card is a promotional printing.",
    "SELECT T1.status FROM cards AS T1 INNER JOIN ( SELECT T1.name, T1.artist, T1.status, COUNT(T2.uuid) AS count FROM rulings AS T2 JOIN cards AS T3 ON T2.uuid = T3.uuid GROUP BY T1.name, T1.artist, T1.status ) AS T2 ON T1.name = T2.name AND T1.artist = T2.artist ORDER BY T2.count DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "State the alternative languages available for card named Annul numbered 29.",
    "SELECT `translation` FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM cards WHERE `name` = 'annul' LIMIT 1 ) AND `language` = 'English' AND `translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Name all the cards which have alternative language in Japanese.",
    "SELECT `name` FROM cards WHERE `language` = 'Japanese' AND `language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of the cards availabe in Chinese Simplified.",
    "SELECT CAST((SELECT COUNT(id) FROM cards WHERE language = 'Chinese Simplified') AS REAL) * 100 / (SELECT COUNT(id) FROM cards)\t----- bird -----\tcard_games"
  ],
  [
    "List all the sets available in Italian translation. State the total number of cards per set.",
    "SELECT `code`, `baseSetSize` FROM sets WHERE `code` = ( SELECT `setCode` FROM set_translations WHERE `language` = 'Italian' )\t----- bird -----\tcard_games"
  ],
  [
    "How many types of cards does the artist Aaron Boyd illustrated about card art?",
    "SELECT COUNT(DISTINCT T1.type) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`artist` = 'Aaron Boyd'\t----- bird -----\tcard_games"
  ],
  [
    "What is the keyword found on card 'Angel of Mercy'?",
    "SELECT keywords FROM cards WHERE name = 'Angel of Mercy'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have infinite power?",
    "SELECT COUNT(*) FROM cards WHERE power = '*'\t----- bird -----\tcard_games"
  ],
  [
    "What type of promotion is of card 'Duress'?",
    "SELECT promoTypes FROM cards WHERE name = 'Duress' AND promoTypes IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the border color of card \"Ancestor's Chosen\"?",
    "SELECT `name` FROM `cards` WHERE `name` = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of the card \"Ancestor's Chosen\" as originally printed?",
    "SELECT originalType FROM cards WHERE name = 'Ancestor\\'s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
    "SELECT `language` FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM cards WHERE `name` = 'Angel of Mercy' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted have text boxes?",
    "SELECT COUNT(c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid WHERE l.status = 'restricted' AND c.isTextless = 0;\t----- bird -----\tcard_games"
  ],
  [
    "What is the description about the ruling of card \"Condemn\"?",
    "SELECT T1.`text` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`id` = T2.`id` WHERE T1.`name` = 'Condemn'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards of legalities whose status is restricted are found in a starter deck?",
    "SELECT COUNT(c.id) FROM cards c JOIN legalities l ON c.uuid = l.uuid JOIN sets s ON c.setCode = s.code JOIN set_translations st ON s.code = st.setCode JOIN rulings r ON c.uuid = r.uuid WHERE l.status = 'restricted' AND c.isStarter = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the status of card \"Cloudchaser Eagle\"?",
    "SELECT `status` FROM legalities WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Cloudchaser Eagle' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the type of card \"Benalish Knight\"?",
    "SELECT `type` FROM cards WHERE `name` = 'Benalish Knight'\t----- bird -----\tcard_games"
  ],
  [
    "What is the rule of playing card \"Benalish Knight\"?",
    "SELECT `text` FROM rulings WHERE `uuid` IN ( SELECT `uuid` FROM cards WHERE `name` = 'Benalish Knight' AND `text` IS NOT NULL AND `text` != 'None' )\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the names of the artists who illustrated the card art in Phyrexian.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`language` = 'Phyrexian'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of borderless cards?",
    "SELECT CAST((SELECT COUNT(`id`) FROM cards WHERE `borderColor` = 'borderless') AS REAL) * 100 / (SELECT COUNT(`id`) FROM cards)\t----- bird -----\tcard_games"
  ],
  [
    "How many cards that illusrtated in German have been reprinted?",
    "SELECT COUNT(T1.id) FROM cards AS T1 JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` JOIN foreign_data AS T3 ON T1.`uuid` = T3.`uuid` JOIN set_translations AS T4 ON T1.`uuid` = T4.`uuid` WHERE T2.`status` = 'Reprint' AND T3.language = 'German'\t----- bird -----\tcard_games"
  ],
  [
    "How many borderless cards are illustrated in Russian?",
    "SELECT COUNT(T1.id) FROM foreign_data AS T1 INNER JOIN set_translations AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN cards AS T3 ON T1.`uuid` = T3.`uuid` WHERE T2.`language` = 'Russian' AND T3.borderColor = 'borderless'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of cards whose language is French among the Story Spotlight cards?",
    "SELECT CAST(COUNT(CASE WHEN T1.language = 'French' AND T1.isStorySpotlight = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.isStorySpotlight) FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'French' AND T1.isStorySpotlight = 1\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there with toughness of 99?",
    "SELECT COUNT(*) FROM cards WHERE toughness = 99\t----- bird -----\tcard_games"
  ],
  [
    "Name the cards that were illustrated by Aaron Boyd.",
    "SELECT T1.`artist` FROM cards AS T1 JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`artist` = 'Aaron Boyd'\t----- bird -----\tcard_games"
  ],
  [
    "How many black border cards are only available on mtgo?",
    "SELECT COUNT(`id`) FROM cards WHERE `borderColor` = 'black' AND `availability` = 'mtgo'\t----- bird -----\tcard_games"
  ],
  [
    "List down all the card IDs with converted mana cost of 0.",
    "SELECT id FROM cards WHERE `convertedManaCost` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What are the card layout of cards with keyword of flying?",
    "SELECT `layout` FROM cards WHERE `keywords` LIKE '%flying%'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
    "SELECT COUNT(`id`) FROM cards WHERE `originalType` = 'Summon - Angel' AND `subtypes` != 'Angel'\t----- bird -----\tcard_games"
  ],
  [
    "What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.",
    "SELECT id FROM cards WHERE availability = 'arena,paper' AND borderColor = 'borderless' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL GROUP BY id HAVING COUNT(DISTINCT CASE WHEN availability = 'arena,paper' AND borderColor = 'borderless' AND cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL THEN id ELSE NULL END) > 1;\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards belong to duel deck a? List the ID.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "List the edhrecRank for cards with frame version 2015.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of artists for cards in Chinese Simplified.",
    "SELECT `language` FROM cards WHERE `multiverseid` IN ( SELECT `multiverseid` FROM set_translations WHERE `language` = 'Chinese Simplified' )\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards that only available in paper and Japanese language?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`availability` = 'paper' AND T2.`language` = 'Japanese'\t----- bird -----\tcard_games"
  ],
  [
    "How many of the banned cards are white border?",
    "SELECT COUNT(id) FROM cards WHERE status = 'Banned' AND borderColor = 'white'\t----- bird -----\tcard_games"
  ],
  [
    "List down the uuid for legacy cards and the foreign language of these cards.",
    "SELECT foreign_data.language FROM foreign_data JOIN cards ON foreign_data.uuid = cards.uuid JOIN legalities ON cards.uuid = legalities.uuid WHERE legalities.format = 'legacy';\t----- bird -----\tcard_games"
  ],
  [
    "Write down the ruling of Beacon of Immortality.",
    "SELECT `uuid` FROM cards WHERE `name` = 'Beacon of Immortality'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are having future frame version and what are the legality status of these cards?",
    "SELECT COUNT(`id`) AS `card_count`, `status` FROM cards WHERE `frameVersion` = 'future' AND `status` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards for set OGW? State the colour for these cards.",
    "SELECT `colorIdentity` FROM cards WHERE `setCode` = 'OGW' AND `colorIdentity` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
    "SELECT DISTINCT T1.language FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.setCode = '10E'\t----- bird -----\tcard_games"
  ],
  [
    "List down the name of cards with original types of Creature - Elf and the date of rulings for these cards.",
    "SELECT T1.`name`, T1.`originalType`, T1.`date`, T1.`text` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`originalType` = 'Creature - Elf'\t----- bird -----\tcard_games"
  ],
  [
    "What are the colors of cards from ID 1-20? What are the format of these cards?",
    "SELECT DISTINCT T1.format FROM cards AS T1 JOIN legalities AS T2 ON T1.uuid = T2.uuid JOIN sets AS T3 ON T1.setCode = T3.code JOIN set_translations AS T4 ON T3.code = T4.setCode JOIN rulings AS T5 ON T1.uuid = T5.uuid WHERE T1.id BETWEEN 1 AND 20 AND T1.format IS NOT NULL AND T1.format != ''\t----- bird -----\tcard_games"
  ],
  [
    "Among the Artifact cards, which are black color and comes with foreign languague translation?",
    "SELECT DISTINCT `code` FROM cards WHERE `colors` = 'B' AND `language` IN ( SELECT `language` FROM foreign_data )\t----- bird -----\tcard_games"
  ],
  [
    "Pick 3 cards with rarity of uncommon, list down name these cards according to ascending order of it's ruling date.",
    "SELECT `date` FROM rulings WHERE `uuid` IN ( SELECT `uuid` FROM cards WHERE `rarity` = 'uncommon' ) ORDER BY `date` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "On how many cards designed by John Avon is its foil non-powerful?",
    "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`artist` = T2.`name` WHERE T2.`artist` = 'John Avon' AND T1.`cardKingdomFoilId` IS NOT NULL AND T1.`cardKingdomFoilId` = T1.`cardKingdomId` AND T1.`cardKingdomFoilId` = T1.`cardKingdomFoilId`\t----- bird -----\tcard_games"
  ],
  [
    "How many white bordered cards are powerful?",
    "SELECT COUNT(`id`) FROM cards WHERE `borderColor` = 'white' AND `cardKingdomId` IS NOT NULL AND `cardKingdomFoilId` = `cardKingdomId` AND `cardKingdomId` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
    "SELECT T1.setCode FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.artist = 'UDON' AND T2.availability = 'mtgo' AND T2.hand = -1 AND T2.artist IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with a 1993 frame version and available on paper have a sensitive content warning?",
    "SELECT COUNT(*) FROM cards WHERE frameVersion = '1993' AND availability = 'paper' AND hasContentWarning = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
    "SELECT `multiverseId` FROM cards WHERE `layout` = 'normal' AND `frameVersion` = '2003' AND `borderColor` = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "How much unconverted mana do all the cards created by Rob Alexander cost in total?",
    "SELECT SUM(T1.manaCost) FROM cards AS T1 JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.artist = 'Rob Alexander'\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards available in arena.",
    "SELECT subtypes, supertypes FROM cards WHERE availability = 'arena' AND availability IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Lists the set code of all cards translated into Spanish.",
    "SELECT `setCode` FROM set_translations WHERE `language` = 'Spanish' AND `translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of legendary frame effect cards have a maximum starting maximun hand\nsize of +3?",
    "SELECT CAST(COUNT(CASE WHEN frameEffects = 'legendary' THEN id ELSE NULL END) AS REAL) * 100 / COUNT(CASE WHEN hand = '+3' THEN id ELSE NULL END) FROM cards WHERE hand = '+3' AND frameEffects = 'legendary' AND hand IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of Story Spotlight cards that also have a text box? List them by their ID.",
    "SELECT T1.id FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'English' AND T1.isStorylight = 1 AND T1.isTextless = 1\t----- bird -----\tcard_games"
  ],
  [
    "Calculate the percentage of cards in Spanish. List them by name.",
    "SELECT T1.name FROM cards AS T1 JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the name of all the languages into which the set whose number of cards is 309 is translated.",
    "SELECT T1.`language` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`setCode` WHERE T2.`baseSetSize` = 309 AND T1.`translation` = ( SELECT T2.`translation` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`setCode` WHERE T2.`baseSetSize` = 309 )\t----- bird -----\tcard_games"
  ],
  [
    "How many Brazilian Portuguese translated sets are inside the Commander block?",
    "SELECT COUNT(`id`) FROM set_translations WHERE `language` = 'Portuguese (Brazil)' AND `setCode` = ( SELECT `code` FROM sets WHERE `block` = 'Commander' )\t----- bird -----\tcard_games"
  ],
  [
    "Lists by ID all Creature-type cards with legal status.",
    "SELECT `status` FROM cards WHERE `types` = 'Creature' AND `status` = 'Legal'\t----- bird -----\tcard_games"
  ],
  [
    "Lists all types of cards in German.",
    "SELECT DISTINCT T1.types FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.multiverseid = T2.multiverseid WHERE T2.language = 'German' AND T1.multiverseid IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many null power cards contain info about the triggered ability",
    "SELECT COUNT(T1.id) FROM cards AS T1 WHERE T1.power IS NULL OR T1.power = '*' AND T1.text LIKE '%triggered ability%'\t----- bird -----\tcard_games"
  ],
  [
    "Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability\" that do not have multiple faces.",
    "SELECT COUNT(`id`) FROM cards WHERE `block` = 'pre-modern' AND `text` LIKE '%This is a triggered mana ability%' AND `side` IS NOT NULL AND `side` IS NULL AND `side` IS NULL AND `side` IS NULL\t----- bird -----\tcard_games"
  ],
  [
    "Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.",
    "SELECT id FROM cards WHERE artist = 'Erica Yang' AND format = 'pauper' AND availability = 'paper' AND format != 'legacy' AND format != 'commander'\t----- bird -----\tcard_games"
  ],
  [
    "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?",
    "SELECT T1.artist FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.text = 'Das perfekte Gegenmittel zu einer dichten Formation' AND T1.artist IS NOT NULL AND T1.artist != 'None' AND T1.artist != 'None'\t----- bird -----\tcard_games"
  ],
  [
    "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
    "SELECT `flavorText` FROM `foreign_data` WHERE `language` = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with print rarity have ruling text printed on 10/01/2009?",
    "SELECT COUNT(T1.rarity) FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`date` = '2009-01-10'\t----- bird -----\tcard_games"
  ],
  [
    "What language is the set of 180 cards that belongs to the Ravnica block translated into?",
    "SELECT T1.language FROM set_translations AS T1 JOIN sets AS T2 ON T1.setCode = T2.code JOIN cards AS T3 ON T2.code = T3.setCode WHERE T2.code = 'Ravnica' AND T3.baseSetSize = 180;\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards with format commander and legal status do not have a content warning?",
    "SELECT CAST((COUNT(CASE WHEN hasContentWarning = 0 THEN 1 ELSE NULL END) - COUNT(hasContentWarning)) AS REAL) / COUNT(hasContentWarning) * 100 FROM cards WHERE format = 'commander' AND status = 'legal' AND hasContentWarning = 0\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of cards without power are in French?",
    "SELECT CAST(COUNT(CASE WHEN power IS NULL OR power = '*' AND language = 'French' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(power IS NULL OR power = '*') FROM cards JOIN foreign_data ON cards.flavorText = foreign_data.text JOIN legalities ON cards.scryfallId = legalities.id JOIN set_translations ON cards.setCode = set_translations.setCode JOIN rulings ON cards.scryfallId = rulings.id WHERE language = 'French' AND power IS NULL OR power = '*'\t----- bird -----\tcard_games"
  ],
  [
    "What percentage of Japanese translated sets are expansion sets?",
    "SELECT CAST(COUNT(CASE WHEN `type` = 'expansion' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`setCode`) FROM set_translations WHERE `language` = 'Japanese' AND `type` IS NOT NULL AND `type` != 'expansion' AND `type` != 'none'\t----- bird -----\tcard_games"
  ],
  [
    "What kind of printing is on the card that Daren Bader created?",
    "SELECT T1.`type` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`multiverseId` = T2.`multiverseId` WHERE T1.`artist` = 'Daren Bader' AND T1.`availability` = 'mtgo,paper' AND T1.`availability` NOT IN ('arena', 'arena,paper', 'paper', 'mtgo', 'mtgo,paper')\t----- bird -----\tcard_games"
  ],
  [
    "How many color cards with no borders have been ranked higher than 12000 on EDHRec?",
    "SELECT COUNT(`id`) FROM cards WHERE `borderColor` = 'borderless' AND `edhrecRank` > 12000\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are oversized, reprinted, and printed for promotions?",
    "SELECT COUNT(*) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\t----- bird -----\tcard_games"
  ],
  [
    "Please list top three unknown power cards that have promotional types for arena league in alphabetical order.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.`power` IS NULL OR T1.`power` = '*' AND T2.`promoTypes` = 'arenaleague' ORDER BY T1.`power` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card with the multiverse number 149934?",
    "SELECT `translation` FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM legalities WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `multiverseid` = 149934 ) ) AND `language` = ( SELECT `language` FROM legalities WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `multiverseid` = 149934 ) ) AND `translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Please provide the ids of top three powerful pairs of Kingdom Foil and Kingdom Cards sorted by Kingdom Foil id in alphabetical order.",
    "SELECT T1.id, T2.id FROM cards AS T1 JOIN cards AS T2 ON T1.cardKingdomFoilId = T2.cardKingdomId WHERE T1.cardKingdomFoilId IS NOT NULL AND T2.cardKingdomId IS NOT NULL ORDER BY T1.cardKingdomFoilId ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What proportion of cards do not have a text box with a normal layout?",
    "SELECT CAST((SELECT COUNT(CASE WHEN isTextless = 1 AND layout = 'normal' THEN 1 ELSE NULL END) FROM cards) AS REAL) / (SELECT COUNT(CASE WHEN isTextless = 0 AND layout = 'normal' THEN 1 ELSE NULL END) FROM cards) * 100\t----- bird -----\tcard_games"
  ],
  [
    "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?",
    "SELECT DISTINCT T1.number FROM cards AS T1 WHERE T1.side IS NULL AND T1.subtypes LIKE '%Angel%Wizard%'\t----- bird -----\tcard_games"
  ],
  [
    "Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.",
    "SELECT T1.`code`, T1.`translation` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T1.`code` IS NULL OR T1.`code` = '' ORDER BY T1.`code` ASC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What languages are available in the set known as Archenemy on the magic card market and having the code ARC?",
    "SELECT `status` FROM legalities WHERE `uuid` = ( SELECT `uuid` FROM legalities WHERE `setCode` = ( SELECT `setCode` FROM set_translations WHERE `mcmName` = 'Archenemy' ) ) AND `setCode` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "What is the name of set number 5 and its translation?",
    "SELECT `translation` FROM set_translations JOIN sets ON set_translations.`setCode` = sets.`code` WHERE sets.id = 5 AND sets.`isFoilOnly` = 0 AND set_translations.`setCode` = sets.`code`;\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and expansion type of set number 206?",
    "SELECT T1.language, T1.block FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.id = T2.id WHERE T2.id = 206 AND T2.block IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Please list top two sets of cards with their IDs that have Italian-language cards and are located in the Shadowmoor block in alphabetical order.",
    "SELECT `id` FROM sets WHERE `block` = 'Shadowmoor' AND `language` = 'Italian' ORDER BY COUNT(`id`) DESC LIMIT 2\t----- bird -----\tcard_games"
  ],
  [
    "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
    "SELECT `id` FROM sets WHERE `isForeignOnly` = 1 AND `isFoilOnly` = 1 AND `id` IN ( SELECT `id` FROM set_translations WHERE `language` = 'Japanese' )\t----- bird -----\tcard_games"
  ],
  [
    "Which Russian set of cards contains the most cards overall?",
    "SELECT SUM(`baseSetSize`) FROM sets WHERE `code` = ( SELECT `code` FROM sets ORDER BY `baseSetSize` DESC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games?",
    "SELECT CAST(COUNT(CASE WHEN `isOnlineOnly` = 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(`isOnlineOnly`) FROM cards JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` JOIN legalities ON cards.`uuid` = legalities.`uuid` JOIN set_translations ON cards.`setCode` = set_translations.setCode JOIN rulings ON cards.`uuid` = rulings.`uuid` WHERE `language` = 'Chinese Simplified' AND `isOnlineOnly` = 1\t----- bird -----\tcard_games"
  ],
  [
    "How many sets are available just in Japanese and not in Magic: The Gathering Online?",
    "SELECT COUNT(*) FROM sets WHERE language = 'Japanese' AND mtgoCode IS NULL OR mtgoCode = ''\t----- bird -----\tcard_games"
  ],
  [
    "How many card border with black color ? List out the card id.",
    "SELECT `id` FROM cards WHERE `borderColor` = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "How many cards have frame effect as extendedart? List out the id of those cards.",
    "SELECT `id` FROM cards WHERE `frameEffects` = 'extendedart'\t----- bird -----\tcard_games"
  ],
  [
    "Among black card borders, which card has full artwork?",
    "SELECT `name` FROM cards WHERE `borderColor` = 'black' AND `isFullArt` = 1 AND `setCode` = 'MB1' AND `isFullArt` = 1\t----- bird -----\tcard_games"
  ],
  [
    "Point out the language of set id \"174\"?",
    "SELECT T1.`language` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`id` = 174 AND T2.`isFoilOnly` = 0 AND T2.`code` = (SELECT T3.`code` FROM sets AS T3 WHERE T3.`id` = 174)\t----- bird -----\tcard_games"
  ],
  [
    "List out the set name of the set code \"ALL\".",
    "SELECT `name` FROM sets WHERE `code` = 'ALL'\t----- bird -----\tcard_games"
  ],
  [
    "Which foreign language used by \"A Pedra Fellwar\"?",
    "SELECT `translation` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'A Pedra Fellwar' ) AND `language` = ( SELECT `language` FROM foreign_data WHERE `multiverseid` = ( SELECT `multiverseid` FROM cards WHERE `name` = 'A Pedra Fellwar' ) ) AND `translation` IS NOT NULL AND `translation` != 'None'\t----- bird -----\tcard_games"
  ],
  [
    "State the set code of the set with release date of 07/13/2007?",
    "SELECT `setCode` FROM rulings WHERE `date` = '2007-07-13'\t----- bird -----\tcard_games"
  ],
  [
    "Mention the base set size and set code of the set that was in block named \"Masques\" and \"Mirage\".",
    "SELECT `baseSetSize` FROM sets WHERE `block` = 'Mirage'\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion type of 'expansion'?",
    "SELECT `code` FROM sets WHERE `type` = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has boros watermark? List out the type of this card.",
    "SELECT T1.type FROM cards AS T1 JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.watermark = 'boros'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.",
    "SELECT T1.type FROM cards AS T1 JOIN set_translations AS T2 ON T1.multiverseid = T2.multiverseid WHERE T1.watermark = 'colorpie'\t----- bird -----\tcard_games"
  ],
  [
    "What is percentage of the cards with a converted Mana Cost of 10 in set of Abyssal Horror?",
    "SELECT CAST(COUNT(T1.`convertedManaCost`) AS REAL) * 100 / COUNT(T2.`convertedManaCost`) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`convertedManaCost` = 10 AND T2.`setCode` = 'Abyssal Horror' AND T2.`convertedManaCost` IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Give the code of sets have expansion commander type?",
    "SELECT `code` FROM sets WHERE `type` = 'expansion'\t----- bird -----\tcard_games"
  ],
  [
    "Name the foreign name of the card that has abzan watermark? List out the type of this card.",
    "SELECT `type` FROM cards WHERE `watermark` = 'abzan'\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the card that has azorius watermark? List out the type of this card.",
    "SELECT T1.type FROM cards AS T1 JOIN set_translations AS T2 ON T1.`multiverseid` = T2.`multiverseid` WHERE T2.`translation` = 'Azorius'\t----- bird -----\tcard_games"
  ],
  [
    "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?",
    "SELECT COUNT(id) FROM cards WHERE cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many cards available in paper have a positive starting maximum hand size?",
    "SELECT COUNT(`id`) FROM cards WHERE `availability` LIKE '%paper%' AND `hand` LIKE '%+%'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards that have a text box.",
    "SELECT `name` FROM cards WHERE `isTextless` = 0\t----- bird -----\tcard_games"
  ],
  [
    "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?",
    "SELECT `convertedManaCost` FROM cards JOIN foreign_data ON cards.`uuid` = foreign_data.`uuid` WHERE `name` = 'Ancestor`s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with a white border color, how many of them have unknown power?",
    "SELECT COUNT(`power`) FROM cards WHERE `borderColor` = 'white' AND `power` = '*'\t----- bird -----\tcard_games"
  ],
  [
    "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.",
    "SELECT `name` FROM cards WHERE `isPromo` = 1 AND `side` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?",
    "SELECT `supertypes` FROM cards WHERE `name` = 'Molimo, Maro-Sorcerer'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".",
    "SELECT T1.`setCode` FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`promoTypes` = 'bundle' AND T1.`setCode` IS NOT NULL AND T1.`language` IS NOT NULL AND T1.`translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many artists have designed a card with a black border color and is available in both \"arena\" and \"mtgo\" printing type?",
    "SELECT COUNT(T1.`artist`) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`borderColor` = 'black' AND T1.`availability` LIKE '%arena,mtgo%'\t----- bird -----\tcard_games"
  ],
  [
    "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN ( SELECT `convertedManaCost` FROM cards WHERE `name` = 'Serra Angel' ) AS T2 ON T1.`convertedManaCost` > T2.`convertedManaCost` ORDER BY T1.`convertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`frameVersion` = '2003' ORDER BY T1.`convertedManaCost` DESC LIMIT 3\t----- bird -----\tcard_games"
  ],
  [
    "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?",
    "SELECT `translation` FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM cards WHERE `name` = 'Ancestor\\'s Chosen' ) AND `language` = 'Italian' AND `translation` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "How many translations are there for the set of cards with \"Angel of Mercy\" in it?",
    "SELECT COUNT(`id`) FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM cards WHERE `name` = 'Angel of Mercy' )\t----- bird -----\tcard_games"
  ],
  [
    "Please list the names of the cards in the set \"Hauptset Zehnte Edition\".",
    "SELECT `name` FROM cards WHERE `setCode` = ( SELECT `setCode` FROM set_translations WHERE `translation` = 'Hauptset Zehnte Edition' )\t----- bird -----\tcard_games"
  ],
  [
    "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?",
    "SELECT COUNT(`id`) > 0 FROM set_translations WHERE `language` = 'Korean' AND `setCode` = ( SELECT `setCode` FROM cards WHERE `name` = 'Ancestor\\'s Chosen' )\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex?",
    "SELECT COUNT(`id`) FROM cards WHERE `artist` = 'Adam Rex' AND `setCode` = ( SELECT `setCode` FROM set_translations WHERE `translation` = 'Hauptset Zehnte Edition' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the base set of \"Hauptset Zehnte Edition\"?",
    "SELECT SUM(T1.baseSetSize) FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`translation` = 'Hauptset Zehnte Edition'\t----- bird -----\tcard_games"
  ],
  [
    "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?",
    "SELECT T1.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T1.`name` = 'Eighth Edition' AND T2.`language` = 'Simplified Chinese'\t----- bird -----\tcard_games"
  ],
  [
    "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?",
    "SELECT DISTINCT mtgoCode FROM cards WHERE name = 'Angel of Mercy' AND mtgoCode IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "When was the set of cards with \"Ancestor's Chosen\" released?",
    "SELECT `date` FROM cards JOIN set_translations ON cards.setCode = set_translations.setCode WHERE `name` = 'Ancestor''s Chosen' AND `date` IS NOT NULL AND `date` != '';\t----- bird -----\tcard_games"
  ],
  [
    "What is the expansion type of the set \"Hauptset Zehnte Edition\"?",
    "SELECT `block` FROM sets WHERE `code` = ( SELECT `code` FROM sets WHERE `translation` = 'Hauptset Zehnte Edition' )\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets in the block \"Ice Age\", how many of them have an Italian translation?",
    "SELECT COUNT(`id`) FROM set_translations WHERE `language` = 'Italian' AND `setCode` IN ( SELECT `code` FROM sets WHERE `block` = 'Ice Age' )\t----- bird -----\tcard_games"
  ],
  [
    "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
    "SELECT `isFoilOnly` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Adarkar Valkyrie' AND `isFoilOnly` = 1 ) AND `language` = 'English' AND `isFoilOnly` IS NOT NULL AND `isFoilOnly` != 'None' AND `isFoilOnly` != 'None';\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets of cards that have an Italian translation, how many of them have a base set number of under 10?",
    "SELECT COUNT(`baseSetSize`) FROM sets WHERE `code` = ( SELECT `setCode` FROM set_translations WHERE `language` = 'Italian' ) AND `baseSetSize` < 10\t----- bird -----\tcard_games"
  ],
  [
    "How many cards in the set Coldsnap have a black border color?",
    "SELECT COUNT(`id`) FROM cards WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Coldsnap' ) AND `borderColor` = 'black'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the name of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN sets AS T3 ON T1.`setCode` = T3.`code` WHERE T3.`code` = 'Coldsnap' AND T1.`convertedManaCost` = ( SELECT MAX(T2.`convertedManaCost`) FROM cards AS T2 INNER JOIN sets AS T4 ON T2.`setCode` = T4.`code` WHERE T4.`code` = 'Coldsnap' AND T2.`convertedManaCost` IS NOT NULL )\t----- bird -----\tcard_games"
  ],
  [
    "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
    "SELECT DISTINCT T1.artist FROM cards AS T1 JOIN sets AS T2 ON T1.`code` = T2.`code` JOIN foreign_data AS T3 ON T1.`uuid` = T3.`uuid` JOIN legalities AS T4 ON T1.`uuid` = T4.`uuid` JOIN set_translations AS T5 ON T2.`code` = T5.`setCode` JOIN rulings AS T6 ON T1.`uuid` = T6.`uuid` WHERE T2.`block` = 'Coldsnap' AND T1.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')\t----- bird -----\tcard_games"
  ],
  [
    "What is card number 4 in the set Coldsnap?",
    "SELECT `number` FROM cards WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Coldsnap' ) ORDER BY `number` ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
    "SELECT COUNT(T1.`power`) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`power` = '*' AND T1.`code` = ( SELECT `code` FROM cards WHERE `convertedManaCost` > 5 ORDER BY `convertedManaCost` DESC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "What is the Italian flavor text of the card \"Ancestor's Chosen\"?",
    "SELECT fd.`text` FROM foreign_data fd JOIN cards c ON fd.`setCode` = c.`setCode` JOIN set_translations st ON c.`setCode` = st.`setCode` WHERE c.`name` = 'Ancestor''s Chosen' AND fd.`language` = 'Italian' AND st.language = 'Italian'\t----- bird -----\tcard_games"
  ],
  [
    "Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text.",
    "SELECT T1.`language` FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`name` = 'Ancestor''s Chosen' AND T1.`flavorText` IS NOT NULL AND T1.`language` = 'Spanish'\t----- bird -----\tcard_games"
  ],
  [
    "What's the German type of the card \"Ancestor's Chosen\"?",
    "SELECT T1.type FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.multiverseId = T2.multiverseId WHERE T2.language = 'German' AND T1.name = 'Ancestor''s Chosen'\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian text ruling of all the cards in the set Coldsnap.",
    "SELECT T1.`text` FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN set_translations AS T3 ON T1.`multiverseid` = T3.`multiverseid` WHERE T3.`language` = 'Italian' AND T1.`name` = 'Coldsnap' AND T1.`multiverseid` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Please list the Italian names of the cards in the set Coldsnap with the highest converted mana cost.",
    "SELECT T2.`translation` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`multiverseId` = T2.`multiverseId` WHERE T2.`language` = 'Italian' AND T1.`setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Coldsnap' ) ORDER BY T1.`convertedManaCost` DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "When was the ruling for the card 'Reminisce' created?",
    "SELECT `date` FROM rulings WHERE `uuid` = ( SELECT `uuid` FROM cards WHERE `name` = 'Reminisce' )\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
    "SELECT CAST(SUM(CASE WHEN T1.`convertedManaCost` = 7 THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.`convertedManaCost`) * 100 FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T2.`translation` = 'Coldsnap'\t----- bird -----\tcard_games"
  ],
  [
    "What is the percentage of incredibly powerful cards in the set Coldsnap?",
    "SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.cardKingdomFoilId) FROM cards AS T1 JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap'\t----- bird -----\tcard_games"
  ],
  [
    "What's the code for the set which was released on 2017/7/14?",
    "SELECT `code` FROM sets WHERE `releaseDate` = '2017-07-14'\t----- bird -----\tcard_games"
  ],
  [
    "List the keyrune code for the set whose code is 'PKHC'.",
    "SELECT T1.keyruneCode FROM cards AS T1 JOIN set_translations AS T2 ON T1.multiverseid = T2.multiverseid WHERE T2.setCode = 'PKHC' AND T1.keyruneCode IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "For the set which had 'SS2' as the code, what is its magic card market id?",
    "SELECT T1.`mcmId` FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`translation` = 'SS2' AND T1.`isFoilOnly` = 0 AND T1.`code` IS NOT NULL AND T1.`code` IS NOT NULL AND T1.`code` != ''\t----- bird -----\tcard_games"
  ],
  [
    "What's the magic card market name for the set which was released on 2017/6/9?",
    "SELECT `translation` FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `originalReleaseDate` = '2017-06-09' )\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"From the Vault: Lore\", what is its expansion type?",
    "SELECT `booster` FROM sets WHERE `name` LIKE '%From the Vault: Lore%' AND `name` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "For the set \"Commander 2014 Oversized\" , give its parent code.",
    "SELECT `code` FROM sets WHERE `name` = 'Commander 2014 Oversized'\t----- bird -----\tcard_games"
  ],
  [
    "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
    "SELECT CASE WHEN `hasContentWarning` = 1 THEN 'Yes' ELSE 'No' END AS hasMissingOrDegradedPropertiesAndValues FROM cards WHERE `artist` = 'Jim Pavelec'\t----- bird -----\tcard_games"
  ],
  [
    "What was the release date for the set which card \"Evacuation\" in it?",
    "SELECT T1.`date` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`setCode` = T2.`setCode` WHERE T2.`translation` = 'Evacuation' AND T1.`releaseDate` IS NOT NULL ORDER BY T1.`date` ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the number of cards are there in the set of \"Rinascita di Alara\"?",
    "SELECT COUNT(`id`) FROM cards JOIN sets ON cards.baseSetSize = sets.baseSetSize WHERE sets.code = 'Rinascita di Alara'\t----- bird -----\tcard_games"
  ],
  [
    "List the expansion type of the set \"Huitième édition\".",
    "SELECT `type` FROM sets WHERE `code` = ( SELECT `setCode` FROM set_translations WHERE `translation` = 'Huitième édition' )\t----- bird -----\tcard_games"
  ],
  [
    "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
    "SELECT T1.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`code` = T2.`setCode` WHERE T2.`language` = 'French'\t----- bird -----\tcard_games"
  ],
  [
    "How many translations of the name of the set \"Salvat 2011\"?",
    "SELECT COUNT(`id`) FROM set_translations WHERE `setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Salvat 2011' )\t----- bird -----\tcard_games"
  ],
  [
    "Tell the Japanese name of the set which card \"Fellwar Stone\" is in it.",
    "SELECT `translation` FROM set_translations WHERE `language` = 'Japanese' AND `setCode` = ( SELECT `setCode` FROM cards WHERE `name` = 'Fellwar Stone' ) AND `translation` IS NOT NULL AND `translation` != 'None';\t----- bird -----\tcard_games"
  ],
  [
    "Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.",
    "SELECT T1.`name` FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`multiverseId` = T2.`multiverseId` WHERE T2.`setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Journey into Nyx Hero''s Path' ) AND T1.`convertedManaCost` = ( SELECT MAX(T1.`convertedManaCost`) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.`multiverseId` = T2.`multiverseId` WHERE T2.`setCode` = ( SELECT `code` FROM sets WHERE `name` = 'Journey into Nyx Hero''s Path' ) AND T1.`convertedManaCost` IS NOT NULL ) AND T1.`convertedManaCost` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "What is the release date for the set \"Ola de frío\"?",
    "SELECT `date` FROM cards JOIN set_translations ON cards.`setCode` = set_translations.`setCode` WHERE set_translations.`translation` = 'Ola de frío' AND cards.`date` IS NOT NULL AND set_translations.`setCode` = 'code';\t----- bird -----\tcard_games"
  ],
  [
    "What was the expansion type for the set which card \"Samite Pilgrim\" in it?",
    "SELECT `block` FROM sets WHERE `code` = ( SELECT `setCode` FROM cards WHERE `name` = 'Samite Pilgrim' )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.",
    "SELECT COUNT(`id`) FROM cards WHERE `setCode` = ( SELECT `setCode` FROM sets WHERE `name` = 'World Championship Decks 2004' ) AND `convertedManaCost` = '3'\t----- bird -----\tcard_games"
  ],
  [
    "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
    "SELECT T1.`translation` FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.`setCode` = T2.`code` WHERE T2.`name` = 'Mirrodin' AND T1.`language` = 'Chinese Simplified'\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
    "SELECT CAST(SUM(T2.isNonFoilOnly) AS REAL) / COUNT(T1.id) * 100 FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setCode = T2.setCode WHERE T2.language = 'Japanese' AND T2.isNonFoilOnly = 1\t----- bird -----\tcard_games"
  ],
  [
    "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
    "SELECT CAST(SUM(CASE WHEN T1.language = 'Portuguese (Brazil)' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.language) FROM cards AS T1 JOIN set_translations AS T2 ON T1.id = T2.id WHERE T2.language = 'Portuguese (Brazil)' AND T2.isOnlineOnly = 1\t----- bird -----\tcard_games"
  ],
  [
    "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
    "SELECT DISTINCT T1.availability FROM cards AS T1 WHERE T1.artist = 'Aleksi Briclot' AND T1.isTextless = 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the unique id of the set that has the highest number of cards?",
    "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?",
    "SELECT `uuid` FROM foreign_data WHERE `id` = ( SELECT `id` FROM cards WHERE `side` IS NULL ORDER BY `convertedManaCost` DESC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "What is the most common visual frame effects among the incredibly powerful foils?",
    "SELECT MAX(frameEffects) FROM cards WHERE cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL AND isFoilOnly = 0\t----- bird -----\tcard_games"
  ],
  [
    "How many cards with unknown power that can't be found in foil is in duel deck A?",
    "SELECT COUNT(*) FROM cards INNER JOIN legalities ON cards.`uuid` = legalities.`uuid` INNER JOIN sets ON cards.`setCode` = sets.`code` INNER JOIN set_translations ON sets.`code` = set_translations.`setCode` INNER JOIN rulings ON cards.`uuid` = rulings.`uuid` WHERE power IS NULL AND hasFoil = 0 AND duelDeck = 'a'\t----- bird -----\tcard_games"
  ],
  [
    "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
    "SELECT MAX(T1.`totalSetSize`) FROM sets AS T1 INNER JOIN foreign_data AS T2 ON T1.`id` = T2.`multiverseid` INNER JOIN legalities AS T3 ON T1.`id` = T3.`id` INNER JOIN rulings AS T4 ON T1.`id` = T4.`id` INNER JOIN set_translations AS T5 ON T1.`id` = T5.`id` INNER JOIN cards AS T6 ON T1.`id` = T6.`multiverseid` WHERE T5.`language` = 'English' AND T6.`type` = 'Promotional' AND T6.`type` = 'Related Supplemental Product' AND T6.`type` = 'Alchemy Modification' AND T6.`id` IS NOT NULL AND T6.`id` IS NOT NULL AND T6.`id` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "In duels, what are the top 10 cards with the highest uncoverted mana cost?",
    "SELECT T1.* FROM cards AS T1 JOIN legalities AS T2 ON T1.format = T2.format JOIN sets AS T3 ON T1.setCode = T3.code JOIN set_translations AS T4 ON T3.code = T4.setCode JOIN rulings AS T5 ON T1.scryfallId = T5.uuid WHERE T1.format = 'duel' ORDER BY T1.convertedManaCost DESC LIMIT 10\t----- bird -----\tcard_games"
  ],
  [
    "When was the oldest mythic card released and what are its legal play formats?",
    "SELECT format FROM legalities WHERE uuid = ( SELECT uuid FROM cards WHERE rarity = 'mythic' ORDER BY originalReleaseDate ASC LIMIT 1 )\t----- bird -----\tcard_games"
  ],
  [
    "How many cards did Volkan BaÇµa illustrated whose foreign language is in French?",
    "SELECT COUNT(*) FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.`uuid` = T2.`uuid` WHERE T1.language = 'French' AND T2.artist = 'Volkan Baga'\t----- bird -----\tcard_games"
  ],
  [
    "How many rare enchantment Abundance cards are there whose play format status are all legal?",
    "SELECT COUNT(*) FROM legalities WHERE `setCode` = ( SELECT `setCode` FROM cards INNER JOIN set_translations ON cards.`setCode` = set_translations.`setCode` WHERE `rarity` = 'rare' AND `types` = 'Enchantment' AND `name` = 'Abundance' )\t----- bird -----\tcard_games"
  ],
  [
    "Which of the play formats has the highest number of banned status? Indicate the play format and the name of the card.",
    "SELECT T1.`format` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.`status` = 'banned' GROUP BY T1.`format` ORDER BY COUNT(T1.`format`) DESC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "What is the language of the \"Battlebond\" set?",
    "SELECT `language` FROM set_translations WHERE `setCode` = ( SELECT `setCode` FROM sets WHERE `name` = 'Battlebond' )\t----- bird -----\tcard_games"
  ],
  [
    "Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated.",
    "SELECT T1.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` WHERE T2.status = 'Legal' GROUP BY T1.format ORDER BY COUNT(T1.id) ASC LIMIT 1\t----- bird -----\tcard_games"
  ],
  [
    "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
    "SELECT DISTINCT `status` FROM cards INNER JOIN set_translations ON cards.`uuid` = set_translations.`uuid` WHERE `artist` = 'D. Alexander Gregory' AND `format` = 'legacy' AND `hasContentWarning` = 1 AND `frameVersion` = '1997' AND `hasContentWarning` = 1 AND `status` LIKE '%Wizards of the Coast%'\t----- bird -----\tcard_games"
  ],
  [
    "Which cards are ranked 1st on EDHRec? List all of the cards name and its banned play format.",
    "SELECT T1.`name`, T2.`format` FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.`uuid` = T2.`uuid` INNER JOIN sets AS T3 ON T1.`setCode` = T3.`code` INNER JOIN set_translations AS T4 ON T3.`code` = T4.`setCode` INNER JOIN rulings AS T5 ON T1.`uuid` = T5.`uuid` WHERE T2.`status` = 'banned' AND T1.`edhrecRank` = 1 AND T4.`translation` IS NOT NULL AND T5.`text` IS NOT NULL ORDER BY T1.`edhrecRank` ASC\t----- bird -----\tcard_games"
  ],
  [
    "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
    "SELECT AVG(id) FROM cards WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31'\t----- bird -----\tcard_games"
  ],
  [
    "List the artists who illustrated cards with black borders which are available only in arena.",
    "SELECT artist FROM cards WHERE id IN ( SELECT id FROM cards WHERE borderColor = 'black' AND availability = 'arena' )\t----- bird -----\tcard_games"
  ],
  [
    "Find the uuid of cards in which the old school format is restricted or banned.",
    "SELECT `uuid` FROM cards WHERE `setCode` IN ( SELECT `setCode` FROM sets WHERE `block` = 'oldschool' ) AND `status` IN ('banned', 'restricted') AND `status` IS NOT NULL\t----- bird -----\tcard_games"
  ],
  [
    "Among the card designed by Matthew D. Wilson, how many are available only in the paper?",
    "SELECT COUNT(*) FROM cards WHERE availability = 'paper'\t----- bird -----\tcard_games"
  ],
  [
    "What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates.",
    "SELECT text FROM cards WHERE artist = 'Kev Walker' ORDER BY MAX(date) DESC\t----- bird -----\tcard_games"
  ],
  [
    "List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.",
    "SELECT DISTINCT legalities.format FROM legalities JOIN cards ON legalities.uuid = cards.uuid JOIN sets ON cards.setCode = sets.code WHERE sets.code = 'Hour of Devastation' AND cards.status IS NOT NULL;\t----- bird -----\tcard_games"
  ],
  [
    "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
    "SELECT `code` FROM sets WHERE `language` NOT LIKE '%Japanese%' INTERSECT SELECT `setCode` FROM set_translations WHERE `language` = 'Korean'\t----- bird -----\tcard_games"
  ],
  [
    "List all the frame styles and cards Allen Williams worked on and find any banned cards if there are any.",
    "error: No SQL found in the input string\t----- bird -----\tcard_games"
  ],
  [
    "Which user has a higher reputation, Harlan or Jarrod Dixon?",
    "SELECT T1.`DisplayName` FROM users AS T1 WHERE T1.`Reputation` = ( SELECT MAX(users.`Reputation`) FROM users WHERE users.`DisplayName` = 'Harlan' UNION SELECT MAX(users.`Reputation`) FROM users WHERE users.`DisplayName` = 'Jarrod Dixon' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users whose accounts were created in the year 2014.",
    "SELECT T1.DisplayName FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T2.CreationDate::year = 2014\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users last accessed the website after 2014/9/1?",
    "SELECT COUNT(T1.`Id`) FROM users AS T1 WHERE T1.`LastAccessDate` > '2014-09-01 00:00:00'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has the most number of views?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN ( SELECT MAX(`Views`) AS `max_views` FROM users ) AS T2 ON T1.`Id` = T2.`max_views`\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
    "SELECT COUNT(T1.`Id`) FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`VoteTypeId` = 1 AND T2.`BountyAmount` > 1 AND T1.`Reputation` > 100\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users with more than 10 views created their account after the year 2013?",
    "SELECT COUNT(T1.`Id`) FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` INNER JOIN comments AS T3 ON T2.`Id` = T3.`PostId` WHERE T2.`Views` > 10 AND T2.`CreationDate` > '2013-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts does the user csgillespie own?",
    "SELECT COUNT(`Id`) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the titles of the posts owned by the user csgillespie?",
    "SELECT T1.`Title` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie' AND T2.`DisplayName` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the owner of the post \"Eliciting priors from experts\"?",
    "SELECT DISTINCT T1.DisplayName FROM posts AS T1 JOIN comments AS T2 ON T1.Id = T2.PostId JOIN users AS T3 ON T1.OwnerUserId = T3.Id WHERE T2.Text = 'Eliciting priors from experts'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post that is owned by csgillespie and has the highest popularity?",
    "SELECT T2.`Title` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.`DisplayName` = 'csgillespie' ORDER BY T2.`ViewCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who is the owner of the most valuable post?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`FavoriteCount` = ( SELECT MAX(T1.`FavoriteCount`) FROM posts AS T1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total number of comments of all the posts owned by csgillespie?",
    "SELECT SUM(T1.CommentCount) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post that got the most number of answers owned by csgillespie, how many answers did it get?",
    "SELECT T1.`AnswerCount` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie' ORDER BY T1.`AnswerCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`LastEditorUserId` WHERE T2.`Title` = 'Examples for teaching: Correlation does not mean causation'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by csgillespie, how many of them are root posts?",
    "SELECT COUNT(`Id`) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the display names of all the users who owns a post that is well-finished.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`ClosedDate` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts owned by an elder user, how many of them have a score of over 19?",
    "SELECT COUNT(T1.`Id`) FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.`DisplayName` = 'Chris' ORDER BY T2.`Score` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the location of the owner of the post \"Eliciting priors from experts\"?",
    "SELECT T1.`Location` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` INNER JOIN comments AS T3 ON T2.`Id` = T3.`PostId` WHERE T3.`Text` = 'Eliciting priors from experts' AND T3.`UserId` IS NOT NULL AND T2.`Title` = 'Eliciting priors from experts' AND T2.`Id` = (SELECT MAX(Id) FROM posts WHERE Title = 'Eliciting priors from experts')\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the tag \"bayesian\" excerpted from? Please give the body of the post.",
    "SELECT T2.Text FROM tags AS T1 INNER JOIN posts AS T2 ON T1.`ExcerptPostId` = T2.`Id` WHERE T1.`TagName` = 'bayesian' AND T2.Text IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "From which post is the most popular tag excerpted from? Please give the body of the post.",
    "SELECT T1.Body FROM posts AS T1 JOIN tags AS T2 ON T1.ExcerptPostId = T2.ExcerptPostId WHERE T2.TagName = ( SELECT T2.TagName FROM tags AS T2 JOIN posts AS T1 ON T2.ExcerptPostId = T1.Id ORDER BY T2.Count DESC LIMIT 1 );\t----- bird -----\tcodebase_community"
  ],
  [
    "How many badges has the user csgillespie obtained?",
    "SELECT COUNT(`Id`) FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'csgillespie' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the names of the badges obtained by csgillespie.",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?",
    "SELECT COUNT(DISTINCT T1.`Id`) FROM badges AS T1 JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'csgillespie' AND T1.`Date` >= '2011-01-01' AND T1.`Date` < '2012-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who has obtained the most number of badges?",
    "SELECT DISTINCT T1.DisplayName FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id JOIN ( SELECT UserId, COUNT(*) AS Count FROM badges GROUP BY UserId ORDER BY Count DESC LIMIT 1 ) AS T3 ON T1.UserId = T3.UserId WHERE T1.UserId = T3.UserId\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of the posts owned by the user csgillespie?",
    "SELECT AVG(T1.Score) FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.`DisplayName` = 'csgillespie'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of badges obtained by a user with over 200 views?",
    "SELECT AVG(badges.`Count`) AS `AverageBadgeCount` FROM badges JOIN users ON badges.`UserId` = users.`Id` JOIN posts ON badges.`UserId` = posts.`OwnerUserId` JOIN comments ON badges.`UserId` = comments.`UserId` WHERE badges.`Views` > 200;\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with a score of over 20, what is the percentage of them being owned by an elder user?",
    "SELECT CAST((SELECT COUNT(DISTINCT T1.OwnerUserId) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.Age > 65 ) AS REAL) * 100 / ( SELECT COUNT(Id) FROM posts WHERE Score > 20 )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes did the user No.58 take on 2010/7/19?",
    "SELECT COUNT(T1.`Id`) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T1.`UserId` = 58 AND T2.`CreationDate` = '2010-07-19'\t----- bird -----\tcodebase_community"
  ],
  [
    "Indicate the creation date of the maximum number of votes.",
    "SELECT T1.CreationDate FROM tags AS T1 JOIN votes AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`Count` = ( SELECT MAX(T1.`Count`) FROM tags AS T1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of \"Revival\" badges.",
    "SELECT COUNT(`Id`) FROM badges WHERE `Name` = 'Revival'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title for the post which got the highest score comment?",
    "SELECT posts.Title FROM posts INNER JOIN comments ON posts.Id = comments.PostId WHERE comments.Score = ( SELECT MAX(comments.Score) FROM comments )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the post which got 1910 view counts, how many comments does it get?",
    "SELECT COUNT(`Id`) FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `ViewCount` = 1910 )\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get?",
    "SELECT T1.Score FROM posts AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`UserId` = 3025 AND T2.`VoteTypeId` = 1 AND T2.`CreationDate` = '2014-04-23 20:29:39.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the only one comment text of the post with parent id 107829.",
    "SELECT T1.Text FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id INNER JOIN badges AS T3 ON T2.OwnerUserId = T3.UserId WHERE T2.ParentId = ( SELECT ParentId FROM posts WHERE CommentCount = '1' ) AND T3.Name = 'Popular Question' AND T2.ParentId IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "User No.23853 gave a comment to a post at 9:08:18 on 2013/7/12, was that post well-finished?",
    "SELECT T1.`PostTypeId` FROM posts AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`VoteTypeId` = 2 AND T2.`CreationDate` = '2013-07-12 09:08:18.0' AND T1.`ClosedDate` IS NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "For the owner user of post No. 65041, what is his/her reputation points?",
    "SELECT T2.`Reputation` FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T1.`Id` = '65041'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?",
    "SELECT COUNT(DISTINCT posts.Id) FROM users INNER JOIN posts ON users.Id = posts.OwnerUserId WHERE users.DisplayName = 'Tiago Pasqualini'\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the display name of the user who made the vote No.6347.",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Id` = 6347\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the number of votes for the post about data visualization.",
    "SELECT COUNT(T1.`Id`) FROM votes AS T1 INNER JOIN postHistory AS T2 ON T1.`PostId` = T2.`PostId` INNER JOIN posts AS T3 ON T2.`PostId` = T3.`Id` WHERE T3.`Title` = ( SELECT T1.`Title` FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T2.`TagName` = 'data visualization' )\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user whose display name is \"DatEpicCoderGuyWhoPrograms\", what is his/her badge's name?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'DatEpicCoderGuyWhoPrograms'\t----- bird -----\tcodebase_community"
  ],
  [
    "For the user No.24, how many times is the number of his/her posts compared to his/her votes?",
    "SELECT COUNT(`Id`) / (SELECT COUNT(`Id`) FROM votes WHERE `UserId` = '24') FROM posts WHERE `OwnerUserId` = '24'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
    "SELECT `ViewCount` FROM posts WHERE `Id` = ( SELECT `Id` FROM posts WHERE `Title` = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Write the contents of comments with a score of 17.",
    "SELECT T1.Text FROM comments AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.Score = ( SELECT MAX(T1.Score) FROM comments AS T1 WHERE T1.Score IS NOT NULL ) AND T2.Score = ( SELECT MAX(T1.Score) FROM comments AS T1 WHERE T1.Score IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user has the website URL listed at 'http://stackoverflow.com'",
    "SELECT T1.`Id` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` INNER JOIN comments AS T3 ON T1.`Id` = T3.`UserId` INNER JOIN postHistory AS T4 ON T1.`Id` = T4.`UserId` INNER JOIN postLinks AS T5 ON T1.`Id` = T5.`UserId` INNER JOIN posts AS T6 ON T1.`Id` = T6.`OwnerUserId` INNER JOIN tags AS T7 ON T1.`Id` = T7.`ExcerptPostId` INNER JOIN votes AS T8 ON T1.`Id` = T8.`UserId` WHERE T1.`WebsiteUrl` = 'http://stackoverflow.com' AND T5.`UserId` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the badge name that user 'SilentGhost' obtained?",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'SilentGhost'\t----- bird -----\tcodebase_community"
  ],
  [
    "Name the user that commented 'thank you user93!'",
    "SELECT DISTINCT T1.DisplayName FROM comments AS T1 JOIN votes AS T2 ON T1.`Id` = T2.`PostId` JOIN users AS T3 ON T1.`UserId` = T3.`Id` WHERE T1.`Text` = 'thank you user93' ORDER BY T2.`Score` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made by user 'A Lion.'",
    "SELECT T1.`Id`, T1.`Text` FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Id` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'A Lion' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user?",
    "SELECT T1.`Reputation` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`Title` = 'Understanding what Dassault iSight is doing?'\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all comments made on the post titled 'How does gentle boosting differ from AdaBoost?'",
    "SELECT T1.`Text` FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`Id` = ( SELECT `Id` FROM posts WHERE `Title` = 'How does gentle boosting differ from AdaBoost?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Name 10 users with the badge name 'Necromancer.'",
    "SELECT DISTINCT users.DisplayName FROM badges JOIN users ON badges.UserId = users.Id WHERE badges.Name = 'Necromancer'\t----- bird -----\tcodebase_community"
  ],
  [
    "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
    "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN ( SELECT p.Id FROM posts p WHERE p.Title = 'Open source tools for visualizing multi-dimensional data' ) subquery ON p.Id = subquery.Id JOIN badges b ON u.Id = b.UserId WHERE b.Name = 'Editor' AND p.Title = 'Open source tools for visualizing multi-dimensional data';\t----- bird -----\tcodebase_community"
  ],
  [
    "List the title of posts which were edited by Vebjorn Ljosa.",
    "SELECT `Title` FROM posts WHERE `Id` = ( SELECT `Id` FROM postHistory WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Vebjorn Ljosa' AND `LastAccessDate` IS NOT NULL ) ) AND `LastEditorUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Vebjorn Ljosa' AND `LastAccessDate` IS NOT NULL )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the total score of the posts edited by Yevgeny and include the user's website URL.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "Write all the comments left by users who edited the post titled 'Why square the difference instead of taking the absolute value in standard deviation?'",
    "SELECT `Id`, `Score`, `Text`, `CreationDate`, `UserId`, `UserDisplayName` FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' ) AND `UserId` NOT NULL AND `PostId` IN ( SELECT `Id` FROM postHistory WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' ) ) AND `UserId` IN ( SELECT `UserId` FROM votes WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' ) ) AND `PostId` IN ( SELECT `Id` FROM postLinks WHERE `RelatedPostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Why square the difference instead of taking the absolute value in standard deviation?' ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "How much is the total bounty amount of the post titled about 'data'",
    "SELECT SUM(T2.`BountyAmount`) FROM posts AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`PostId` ORDER BY T2.`BountyAmount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user added a bounty amount of 50 to the post title mentioning variance?",
    "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id INNER JOIN tags AS T4 ON T3.Id = T4.ExcerptPostId WHERE T3.Title LIKE '%variance%' AND T2.VoteTypeId = 1 AND T2.BountyAmount = 50 AND T4.TagName = 'variance'\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the average view count of posts tagged as 'humor' and write the title and the comments of the posts alongside their scores if applicable.",
    "SELECT AVG(T2.ViewCount) FROM tags AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`Tags` WHERE T2.`Tags` LIKE '%humor%' AND T2.`Tags` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the total number of comments posted by user ID 13.",
    "SELECT COUNT(T1.`Id`) FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Id` = 13\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the highest reputation?",
    "SELECT MAX(users.`Reputation`) FROM users\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user ID has the lowest view?",
    "SELECT `UserId` FROM posts JOIN users ON posts.OwnerUserId = users.Id JOIN votes ON posts.Id = votes.PostId WHERE votes.BountyAmount IS NOT NULL ORDER BY posts.ViewCount ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with supporter badge during year 2011?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`CreationDate`::int = 2011\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users are awarded with more than 5 badges?",
    "SELECT COUNT(`UserId`) FROM badges WHERE `Name` > 5\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from New York have a teacher and supporter badge?",
    "SELECT COUNT(`Location`) FROM users WHERE `Name` = 'Teacher' AND `Name` = 'Supporter' AND `Location` = 'New York'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which user created post ID 1 and what is the reputation of this user?",
    "SELECT u.Reputation FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON p.Id = c.PostId JOIN postHistory ph ON p.Id = ph.PostId JOIN postLinks pl ON p.Id = pl.PostId WHERE p.Id = 1 AND c.Score IS NOT NULL AND c.UserId = u.Id;\t----- bird -----\tcodebase_community"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "Which users have posted the most comments. List out the user's badge?",
    "SELECT T1.BadgeId, T1.Name FROM badges AS T1 JOIN ( SELECT UserId, COUNT(Id) AS CommentCount FROM comments GROUP BY UserId ORDER BY CommentCount DESC LIMIT 1 ) AS T2 ON T1.UserId = T2.UserId\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users from India have the teacher badges?",
    "SELECT COUNT(b.`UserId`) FROM badges b JOIN users u ON b.`UserId` = u.`Id` WHERE u.`Location` = 'India' AND b.`Name` = 'Teacher'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage difference of student badges given during 2010 and 2011?",
    "SELECT CAST((COUNT(CASE WHEN YEAR(`Date`) = 2010 THEN `Name` END) * 100 / COUNT(`Name`)) AS REAL) FROM badges WHERE `Name` = 'Student' AND YEAR(`Date`) = 2010 UNION ALL SELECT CAST((COUNT(CASE WHEN YEAR(`Date`) = 2011 THEN `Name` END) * 100 / COUNT(`Name`)) AS REAL) FROM badges WHERE `Name` = 'Student' AND YEAR(`Date`) = 2011;\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?",
    "SELECT COUNT(DISTINCT `UserId`) FROM comments WHERE `PostId` = 3720\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post that are related to post ID 61217 and what is the popularity of this post?",
    "SELECT T2.`ViewCount` FROM postLinks AS T1 INNER JOIN posts AS T2 ON T1.`RelatedPostId` = T2.`Id` WHERE T2.`Id` = 61217\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score and the link type ID for post ID 395?",
    "SELECT LinkTypeId FROM postLinks WHERE PostId = 395\t----- bird -----\tcodebase_community"
  ],
  [
    "List out all post ID with score more than 60 and list out all the user ID that created these post.",
    "SELECT DISTINCT T1.UserId FROM posts AS T1 JOIN votes AS T2 ON T1.Id = T2.PostId WHERE T2.VoteTypeId = 1 AND T2.BountyAmount IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the sum of favourite count gained by user ID 686 in 2011?",
    "SELECT SUM(posts.ViewCount) FROM users AS T1 JOIN posts AS T2 ON T1.Id = T2.OwnerUserId JOIN votes AS T3 ON T2.Id = T3.PostId JOIN posts AS T4 ON T2.ParentId = T4.Id WHERE T2.CreationDate = '2011' AND T3.VoteTypeId = 1; -- Assuming VoteTypeId 1 corresponds to 'upvote'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average of the up votes and the average user age for users creating more than 10 posts?",
    "SELECT AVG(`UpVotes`), AVG(`Age`) FROM users WHERE `Id` IN ( SELECT `OwnerUserId` FROM posts WHERE `OwnerUserId` IS NOT NULL GROUP BY `OwnerUserId` HAVING COUNT(`Id`) > 10 )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users obtained the \"Announcer\" badge?",
    "SELECT COUNT(T1.`Id`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Announcer'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.",
    "SELECT DISTINCT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`CreationDate` = '2010-07-19 19:39:08'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many positive comments are there on the list?",
    "SELECT COUNT(T1.`Id`) FROM comments AS T1 WHERE T1.`Score` > 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
    "SELECT `Text` FROM comments WHERE `CreationDate` = '2010-07-19 19:16:14.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score of 10 on the list?",
    "SELECT COUNT(T1.`Id`) FROM posts AS T1 WHERE T1.`Score` = 10\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the names of badges that users who have the highest reputation obtained?",
    "SELECT badges.`Name` FROM badges INNER JOIN users ON badges.`UserId` = users.`Id` WHERE users.`Reputation` = ( SELECT MAX(users.`Reputation`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the reputation of users who had obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT T1.`Reputation` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Date` = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of badge that the user whose display name is \"Pierre\" obtained?",
    "SELECT T1.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'Pierre'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the dates that users who are located in Rochester, NY obtained their badges?",
    "SELECT T1.Date FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId JOIN posts AS T3 ON T1.Id = T3.OwnerUserId JOIN comments AS T4 ON T1.Id = T4.UserId JOIN postHistory AS T5 ON T1.Id = T5.UserId JOIN postLinks AS T6 ON T1.Id = T6.UserId JOIN votes AS T7 ON T1.Id = T7.UserId JOIN tags AS T8 ON T1.Id = T8.ExcerptPostId WHERE T1.Location = 'Rochester, NY' AND T2.Name = 'Popular Question' AND T1.Id = (SELECT UserId FROM badges WHERE Name = 'Popular Question');\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Teacher\" badge, calculate their percentage of users",
    "SELECT CAST( (SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Teacher') AS REAL) * 100 AS Percentage\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
    "SELECT CAST((SELECT COUNT(DISTINCT T4.`UserId`) FROM users AS T4 WHERE T4.`Age` BETWEEN 13 AND 18 ) AS REAL) * 100 / ( SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'Organizer' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
    "SELECT comments.Score FROM comments JOIN posts ON comments.PostId = posts.Id JOIN users ON posts.OwnerUserId = users.Id WHERE posts.CreationDate = '2010-07-19 19:19:56.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?",
    "SELECT T1.Text FROM comments AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CreationDate = '2010-07-19 19:37:33.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "List out the age of users who located in Vienna, Austria obtained the badge?",
    "SELECT `Age` FROM users WHERE `Id` IN ( SELECT `UserId` FROM badges WHERE `Name` = 'Popular Question' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many adults who obtained the badge Supporter?",
    "SELECT COUNT(`Age`) FROM users WHERE `Age` BETWEEN 19 AND 65 AND `Id` = ( SELECT `UserId` FROM badges WHERE `Name` = 'Supporter' )\t----- bird -----\tcodebase_community"
  ],
  [
    "State the number of views of users who obtained the badge on 7/19/2010 7:39:08 PM.",
    "SELECT COUNT(T1.ViewCount) FROM users AS T1 JOIN badges AS T2 ON T1.`Id` = T2.`UserId` JOIN posts AS T3 ON T1.`Id` = T3.`OwnerUserId` JOIN votes AS T4 ON T1.`Id` = T4.`UserId` JOIN comments AS T5 ON T1.`Id` = T5.`UserId` JOIN posts AS T6 ON T1.`Id` = T6.`OwnerUserId` WHERE T2.`Date` = '2010-07-19 19:39:08.0'\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the name of badges that users who have the lowest reputation obtained?",
    "SELECT DISTINCT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`Reputation` = ( SELECT MIN(users.`Reputation`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "State the name of badge that the user whose display name is \"Sharpie\" obtained.",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'Sharpie'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many elders obtained the \"Supporter\" badge?",
    "SELECT COUNT(`Id`) FROM users WHERE `DisplayName` = 'Supporter' AND `CreationDate` > '1958-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of user with the ID of 30?",
    "SELECT `Id` FROM users WHERE `Id` = 30\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were from New York?",
    "SELECT COUNT(`Id`) FROM users WHERE `Location` = 'New York'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made in 2010?",
    "SELECT COUNT(*) FROM votes WHERE YEAR(CreationDate) = 2010\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were adult?",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "Which users have the highest number of views?",
    "SELECT MAX(`Views`) FROM users\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the ratio of votes in 2010 and 2011.",
    "SELECT COUNT(votes.PostId) / COUNT(votes2.PostId) FROM votes AS votes1 JOIN votes AS votes2 ON votes1.PostId = votes2.PostId WHERE YEAR(votes1.CreationDate) = 2010 AND YEAR(votes2.CreationDate) = 2011 AND votes1.PostId IS NOT NULL AND votes2.PostId IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the name of tags used by John Stauffer's?",
    "SELECT T1.`TagName` FROM users AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T1.DisplayName = 'John Stauffer'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created by Daniel Vassallo?",
    "SELECT COUNT(`Id`) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Daniel Vassallo' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many votes were made by Harlan?",
    "SELECT COUNT(`Id`) FROM votes WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Harlan' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by slashnick has the most answers count? State the post ID.",
    "SELECT T2.`Id` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.`DisplayName` = 'slashnick' ORDER BY T2.`Score` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
    "SELECT T2.`Id` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' ORDER BY T1.DisplayName = 'Harvey Motulsky' DESC, T2.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts by Matt Parker have more than 4 votes?",
    "SELECT COUNT(T1.`Id`) FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` INNER JOIN votes AS T3 ON T2.`Id` = T3.`PostId` WHERE T1.`DisplayName` = 'Matt Parker' AND T3.`VoteTypeId` > 4\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments did Neil McGuigan get in his posts?",
    "SELECT COUNT(`Score`) FROM posts WHERE `OwnerUserId` = (SELECT `Id` FROM users WHERE `DisplayName` = 'Neil McGuigan') AND `Score` < 60\t----- bird -----\tcodebase_community"
  ],
  [
    "State all the tags used by Mark Meckes in his posts that doesn't have comments.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "List all the name of users that obtained the Organizer Badges.",
    "SELECT DISTINCT T1.DisplayName FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id JOIN comments AS T3 ON T1.UserId = T3.UserId JOIN postHistory AS T4 ON T1.UserId = T4.UserId JOIN postLinks AS T5 ON T1.UserId = T5.UserId JOIN posts AS T6 ON T1.UserId = T6.OwnerUserId JOIN tags AS T7 ON T1.UserId = T7.ExcerptPostId WHERE T1.Name = 'Organizer'\t----- bird -----\tcodebase_community"
  ],
  [
    "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
    "SELECT CAST(COUNT(CASE WHEN T1.TagName = 'r' THEN T1.Id ELSE NULL END) AS REAL) * 100 / COUNT(T1.Id) FROM tags AS T1 WHERE T1.TagName = 'r'\t----- bird -----\tcodebase_community"
  ],
  [
    "Calculate the difference in view count from post posted by mornington and view count from posts posted by Amos.",
    "SELECT SUM(posts.`ViewCount`) - ( SELECT MAX(posts.`ViewCount`) FROM posts WHERE posts.`OwnerUserId` = (SELECT `Id` FROM users WHERE `DisplayName` = 'Amos') AND posts.`OwnerUserId` = (SELECT `Id` FROM users WHERE `DisplayName` = 'Mornington') ) FROM posts WHERE posts.`OwnerUserId` = (SELECT `Id` FROM users WHERE `DisplayName` = 'Mornington') AND posts.`OwnerUserId` IS NOT NULL GROUP BY posts.`OwnerUserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users received commentator badges in 2014?",
    "SELECT COUNT(DISTINCT T1.`UserId`) FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Name` = 'commentator' AND T1.`Date` >= '2014-01-01' AND T1.`Date` < '2015-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts were created on 21st July, 2010?",
    "SELECT COUNT(*) FROM posts WHERE CreationDate BETWEEN '2010-07-21 00:00:00' AND '2010-07-21 23:59:59'\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the display names and ages of user who got the highest in views?",
    "SELECT T1.`DisplayName`, T1.`Age` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`ViewCount` = ( SELECT MAX(T3.`ViewCount`) FROM posts AS T3 )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
    "SELECT p.`CreationDate`, p.`OwnerUserId` FROM posts p JOIN users u ON p.`OwnerUserId` = u.`Id` WHERE p.`Title` = 'Detecting a given face in a database of facial images'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many negative comments were given by user ID 13?",
    "SELECT COUNT(Score) FROM comments WHERE UserId = 13 AND Score < 60\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post title which got positive comments and display names of the users who posted those comments.",
    "SELECT DISTINCT T1.DisplayName FROM posts AS T1 JOIN comments AS T2 ON T1.`Id` = T2.`PostId` JOIN users AS T3 ON T2.`UserId` = T3.`Id` WHERE T2.`Score` > 60 GROUP BY T1.`Id` ORDER BY COUNT(T2.`Id`) DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the badge names received in 2011 for the user whose location is in the North Pole.",
    "SELECT T1.`Name` FROM badges AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T2.`DisplayName` = 'Chris' AND T1.`Date` >= '2011-01-01' AND T1.`Date` < '2012-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the users' display names and available website URLs of the post with favorite count of more than 150.",
    "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 JOIN votes AS T2 ON T1.Id = T2.UserId JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.Score > 150 AND T3.Score = (SELECT MAX(T3.Score) FROM posts AS T3)\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the post history counts and last edit date of the post title \"What is the best introductory Bayesian statistics textbook?\"",
    "SELECT COUNT(T1.Id) FROM postHistory AS T1 JOIN posts AS T2 ON T1.PostId = T2.Id JOIN users AS T3 ON T2.OwnerUserId = T3.Id WHERE T2.Title = 'What is the best introductory Bayesian statistics textbook' AND T1.LastEditDate IS NOT NULL GROUP BY T2.Title\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the last accessed date and location of the users who received the outliers badge.",
    "SELECT T1.`Location` FROM users AS T1 INNER JOIN badges AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Name` = 'Outliers' AND T1.`LastAccessDate` IS NOT NULL AND T1.`LastAccessDate` != 'None' AND T1.`LastAccessDate` != 'None';\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the related post title of \"How to tell if something happened in a data set which monitors a value over time\".",
    "SELECT T2.`Title` FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.`Id` = T2.`RelatedPostId` WHERE T1.`Title` = 'How to tell if something happened in a data set which monitors a value over time'\t----- bird -----\tcodebase_community"
  ],
  [
    "List the post IDs and badge names of the user Samuel in 2013.",
    "SELECT DISTINCT b.Name FROM users u JOIN badges b ON u.Id = b.UserId JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON u.Id = c.UserId JOIN postHistory ph ON u.Id = ph.UserId JOIN postLinks pl ON u.Id = pl.PostId WHERE u.DisplayName = 'Samuel' AND b.Date >= '2013-01-01' AND b.Date < '2014-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner's display name of the most popular post?",
    "SELECT T1.`DisplayName` FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`ViewCount` = ( SELECT MAX(`ViewCount`) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "Mention the display name and location of the user who owned the excerpt post with hypothesis-testing tag.",
    "SELECT T1.DisplayName, T1.Location FROM tags AS T1 JOIN posts AS T2 ON T1.`ExcerptPostId` = T2.`Id` JOIN users AS T3 ON T2.`OwnerUserId` = T3.`Id` WHERE T1.`TagName` = 'hypothesis-testing' AND T2.`OwnerUserId` IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "Write down the related posts titles and link type IDs of the post \"What are principal component scores?\".",
    "SELECT `LinkTypeId` FROM postLinks WHERE `RelatedPostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'What are principal component scores?' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Describe the display name of the parent ID for child post with the highest score.",
    "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.ParentId = ( SELECT T1.ParentId FROM posts AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.ParentId ORDER BY T2.Score DESC LIMIT 1 ) AND T3.ParentId IS NOT NULL;\t----- bird -----\tcodebase_community"
  ],
  [
    "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
    "SELECT T1.DisplayName, T1.WebsiteUrl FROM users AS T1 JOIN votes AS T2 ON T1.Id = T2.UserId JOIN postHistory AS T3 ON T2.PostId = T3.PostId JOIN posts AS T4 ON T3.PostId = T4.Id JOIN tags AS T5 ON T4.Id = T5.ExcerptPostId WHERE T2.VoteTypeId = 8 AND T2.BountyAmount IS NOT NULL ORDER BY T2.BountyAmount DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "What are the titles of the top 5 posts with the highest popularity?",
    "SELECT T1.`Title` FROM posts AS T1 ORDER BY T1.`ViewCount` DESC LIMIT 5\t----- bird -----\tcodebase_community"
  ],
  [
    "How many tags have post count between 5,000 to 7,000?",
    "SELECT COUNT(`Id`) FROM tags WHERE `Count` BETWEEN 5000 AND 7000\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the owner user id of the most valuable post?",
    "SELECT T1.`OwnerUserId` FROM posts AS T1 INNER JOIN votes AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`VoteTypeId` = 1 ORDER BY T1.`FavoriteCount` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "How old is the most influential user?",
    "SELECT users.`Age` FROM users WHERE users.`Reputation` = ( SELECT MAX(users.`Reputation`) FROM users )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts with votes that were created in 2011 have a bounty of 50?",
    "SELECT COUNT(T1.`Id`) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T1.`BountyAmount` = 50 AND T1.`CreationDate` >= '2011-01-01' AND T1.`CreationDate` < '2012-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the id of the youngest user?",
    "SELECT MIN(Age) FROM users\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the score of the post with the most popular tag?",
    "SELECT T1.`Score` FROM posts AS T1 INNER JOIN tags AS T2 ON T1.`Id` = T2.`ExcerptPostId` WHERE T2.`Count` = ( SELECT MAX(`Count`) FROM tags )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average monthly number of links created in 2010 for posts that have no more than 2 answers?",
    "SELECT COUNT(T1.`Id`) FROM posts AS T1 JOIN comments AS T2 ON T1.`Id` = T2.`PostId` WHERE YEAR(T1.`CreationDate`) = 2010 AND T1.`AnswerCount` <= 2 AND T1.`CreationDate` IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts that were voted by user 1465, what is the id of the most valuable post?",
    "SELECT T2.Id FROM votes AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.UserId = 1465 ORDER BY T2.Score DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the title of the post with the oldest post link?",
    "SELECT T1.`Title` FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.`Id` = T2.`RelatedPostId` WHERE T2.`CreationDate` = ( SELECT MIN(`CreationDate`) FROM postLinks )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the highest amount of badges?",
    "SELECT T1.DisplayName FROM users AS T1 JOIN badges AS T2 ON T1.Id = T2.UserId JOIN tags AS T3 ON T2.UserId = T3.ExcerptPostId JOIN posts AS T4 ON T3.ExcerptPostId = T4.Id JOIN votes AS T5 ON T5.PostId = T4.Id WHERE T2.Count = ( SELECT MAX(T6.Count) FROM badges AS T6 JOIN tags AS T7 ON T6.UserId = T7.ExcerptPostId JOIN posts AS T8 ON T7.ExcerptPostId = T8.Id JOIN votes AS T9 ON T9.PostId = T8.Id )\t----- bird -----\tcodebase_community"
  ],
  [
    "When did \"chl\" cast its first vote in a post?",
    "SELECT MIN(T1.`CreationDate`) FROM votes AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` INNER JOIN posts AS T3 ON T1.`PostId` = T3.`Id` WHERE T2.DisplayName = 'chl' AND T3.`LastEditorUserId` = T2.`Id` AND T3.`LastEditorUserId` = T1.`UserId`\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the date when the youngest user made his or her first post?",
    "SELECT MIN(CreaionDate) FROM posts WHERE OwnerUserId = ( SELECT Id FROM users ORDER BY Age ASC LIMIT 1 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the display name of the user who acquired the first Autobiographer badge?",
    "SELECT DISTINCT T1.DisplayName FROM badges AS T1 JOIN users AS T2 ON T1.UserId = T2.Id JOIN comments AS T3 ON T1.UserId = T3.UserId JOIN postHistory AS T4 ON T1.UserId = T4.UserId JOIN postLinks AS T5 ON T1.UserId = T5.UserId JOIN posts AS T6 ON T1.UserId = T6.OwnerUserId JOIN tags AS T7 ON T6.Id = T7.ExcerptPostId WHERE T1.Name = 'Autobiographer' AND T1.Date = (SELECT MIN(Date) FROM badges)\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?",
    "SELECT COUNT(T1.`Id`) FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T2.`FavoriteCount` >= 4\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average number of posts voted by the oldest users?",
    "SELECT AVG(votes.`PostId`) FROM votes JOIN users ON votes.`UserId` = users.`Id` WHERE users.`CreationDate` IS NOT NULL ORDER BY users.`CreationDate` DESC LIMIT 1;\t----- bird -----\tcodebase_community"
  ],
  [
    "Who has the highest reputation? Please give the display name.",
    "SELECT MAX(users.`Reputation`) FROM users\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users whose reputations are higher than 2000 and the number of views is higher than 1000?",
    "SELECT COUNT(`Reputation`) FROM users WHERE `Reputation` > 2000 AND `Views` > 1000\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all display names of users who are adults.",
    "SELECT `DisplayName` FROM users WHERE `Age` BETWEEN 19 AND 65\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts did Jay Stevens have in 2010?",
    "SELECT COUNT(T1.`Id`) FROM posts AS T1 INNER JOIN users AS T2 ON T1.`OwnerUserId` = T2.`Id` WHERE T1.`CreaionDate` >= '2010-01-01' AND T1.`CreaionDate` < '2011-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post by Harvey Motulsky has the most views? Please give the id and title of this post.",
    "SELECT T1.Id FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' ORDER BY T1.ViewCount DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Which post has the highest score? Please give its id and title's name.",
    "SELECT MAX(`Score`) AS `Score`, `Title` AS `Title` FROM posts ORDER BY `Score` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the average score of Stephen Turner's posts?",
    "SELECT AVG(`Score`) FROM posts WHERE `OwnerUserId` = (SELECT `Id` FROM users WHERE `DisplayName` = 'Stephen Turner')\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list the users' display names whose posts had over 20000 views in 2011.",
    "SELECT DISTINCT T1.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.ViewCount > 20000 AND YEAR(T1.CreationDate) = 2011 AND T1.OwnerUserId = T2.Id AND T1.OwnerDisplayName IS NOT NULL\t----- bird -----\tcodebase_community"
  ],
  [
    "Which is the most valuable post in 2010? Please give its id and the owner's display name.",
    "SELECT T1.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Score = ( SELECT MAX(T2.Score) FROM posts AS T2 WHERE T2.CreationDate LIKE '2010-%' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the percentage of posts whose owners had a reputation of over 1000 in 2011?",
    "SELECT CAST((SELECT COUNT(Id) FROM posts WHERE CreationDate = '2011-01-01' AND Reputation > 1000 GROUP BY OwnerUserId) AS REAL) * 100 / COUNT(OwnerUserId) FROM users WHERE Reputation > 1000 AND CreationDate = '2011-01-01'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the percentage of teenage users.",
    "SELECT COUNT(CASE WHEN Age BETWEEN 13 AND 18 THEN 1 ELSE NULL END) / COUNT(Id) AS percentage FROM users\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.",
    "SELECT u.DisplayName FROM users u JOIN posts p ON u.Id = p.OwnerUserId JOIN comments c ON p.Id = c.PostId JOIN votes v ON p.Id = v.PostId WHERE c.Text = 'Computer Game Datasets' AND v.VoteTypeId = 1; -- Assuming VoteTypeId 1 corresponds to 'Upvote'\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the total number of posts with views above average.",
    "SELECT COUNT(`Id`) FROM posts WHERE `ViewCount` > ( SELECT AVG(`ViewCount`) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments were added to the post with the highest score?",
    "SELECT COUNT(T2.`Id`) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`Score` = ( SELECT MAX(`Score`) FROM posts )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
    "SELECT COUNT(T1.`Id`) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.ViewCount > 35000 AND T2.CommentCount = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the display name and location of the user, who was the last to edit the post with ID 183.",
    "SELECT T1.DisplayName, T1.Location FROM users AS T1 JOIN postHistory AS T2 ON T1.Id = T2.UserId JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T3.Id = 183 ORDER BY T2.LastEditDate DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the latest badge awarded to the user with the display name Emmett.",
    "SELECT `Name` FROM badges WHERE `UserId` = (SELECT `Id` FROM users WHERE `DisplayName` = 'Emmett') ORDER BY `Date` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of adult users who have cast over 5000 upvotes.",
    "SELECT COUNT(*) FROM users u JOIN votes v ON u.Id = v.UserId WHERE u.Age BETWEEN 19 AND 65 AND v.BountyAmount > 5000;\t----- bird -----\tcodebase_community"
  ],
  [
    "How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created.",
    "SELECT `Date` - `Date` AS `Duration` FROM badges WHERE `UserId` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'Zolomon' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts and comments left by the user, who has the latest created user account.",
    "SELECT COUNT(T1.`Id`) AS post_count, COUNT(T2.`Id`) AS comment_count FROM users AS T1 INNER JOIN posts AS T2 ON T1.`Id` = T2.`OwnerUserId` WHERE T1.`Id` = ( SELECT `Id` FROM users WHERE `CreationDate` = ( SELECT MAX(`CreationDate`) FROM users ) )\t----- bird -----\tcodebase_community"
  ],
  [
    "Provide the text of the latest comment to the post with the title 'Analysing wind data with R' and the display name of the user who left it.",
    "SELECT T1.`Text` FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`CreationDate` = ( SELECT MAX(T3.`CreationDate`) FROM comments AS T3 INNER JOIN posts AS T4 ON T3.`PostId` = T4.`Id` WHERE T4.`Title` = 'Analysing wind data with R' )\t----- bird -----\tcodebase_community"
  ],
  [
    "How many users were awarded with 'Citizen Patrol' badge?",
    "SELECT COUNT(`UserId`) FROM badges WHERE `Name` = 'Citizen Patrol'\t----- bird -----\tcodebase_community"
  ],
  [
    "Count the number of posts with a tag specified as 'careers'.",
    "SELECT COUNT(`Id`) FROM tags WHERE `TagName` = 'careers'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?",
    "SELECT `Reputation`, `Views` FROM users WHERE `DisplayName` = 'Jarrod Dixon'\t----- bird -----\tcodebase_community"
  ],
  [
    "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
    "SELECT COUNT(T2.`Id`) FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.`Id` = T2.`PostId` WHERE T1.`Title` = 'Clustering 1D data' AND T2.`PostHistoryTypeId` = 2\t----- bird -----\tcodebase_community"
  ],
  [
    "When did the user known as 'IrishStat' create his or her account?",
    "SELECT `CreationDate` FROM users WHERE `Id` = ( SELECT `Id` FROM users WHERE `DisplayName` = 'IrishStat' )\t----- bird -----\tcodebase_community"
  ],
  [
    "Identify the number of posts that offer a bounty amount over 30.",
    "SELECT COUNT(T1.`Id`) FROM votes AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T1.`BountyAmount` >= 30\t----- bird -----\tcodebase_community"
  ],
  [
    "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
    "SELECT CAST((COUNT(`Id`) - 1) AS REAL) * 100 / COUNT(`Id`) FROM posts WHERE `OwnerUserId` = ( SELECT `Id` FROM users ORDER BY `Reputation` DESC LIMIT 1 ) AND `Score` > 50\t----- bird -----\tcodebase_community"
  ],
  [
    "How many posts have a score less than 20?",
    "SELECT COUNT(*) FROM posts WHERE Score < 20\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the tags with tag ID below 15, how many of them have 20 count of posts and below?",
    "SELECT COUNT(`Count`) FROM tags WHERE `Id` < 15 AND `Count` < 20 AND `Count` = ( SELECT COUNT(`Count`) FROM tags WHERE `Id` < 15 AND `Count` < 20 )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the excerpt post ID and wiki post ID of the tag named sample?",
    "SELECT T1.`ExcerptPostId`, T1.`WikiPostId` FROM tags AS T1 INNER JOIN posts AS T2 ON T1.`ExcerptPostId` = T2.`Id` WHERE T1.`TagName` = 'sample'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".",
    "SELECT SUM(T1.Score) FROM votes AS T1 JOIN comments AS T2 ON T1.PostId = T2.Id JOIN users AS T3 ON T2.UserId = T3.Id WHERE T2.Text = 'fine, you win :)' AND T3.DisplayName = 'Chris'\t----- bird -----\tcodebase_community"
  ],
  [
    "Give the texts commented on the post about linear regression.",
    "error: No SQL found in the input string\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
    "SELECT T1.`Text` FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T2.`ViewCount` BETWEEN 100 AND 150 ORDER BY T1.`Score` DESC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "List the creation date and age of the user that commented with webiste.",
    "SELECT T2.`CreationDate` FROM comments AS T1 INNER JOIN users AS T2 ON T1.`UserId` = T2.`Id` WHERE T1.`Text` LIKE '%http://%' AND T2.`WebsiteUrl` IS NOT NULL AND T2.`WebsiteUrl` IS NOT NULL ORDER BY T2.`CreationDate` ASC LIMIT 1\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with 0 score, how many of the posts have view count lower than 5?",
    "SELECT COUNT(T1.`Id`) FROM posts AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`PostId` WHERE T2.`Score` = 0 AND T1.`ViewCount` < 5\t----- bird -----\tcodebase_community"
  ],
  [
    "In posts with 1 comment, how many of the comments have 0 score?",
    "SELECT COUNT(T1.Score) FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T2.CommentCount = 1 AND T1.Score = 0\t----- bird -----\tcodebase_community"
  ],
  [
    "Among products comments with 0 score, what is the total number of users ages 40 years old?",
    "SELECT COUNT(DISTINCT T1.`Id`) FROM users AS T1 INNER JOIN comments AS T2 ON T1.`Id` = T2.`UserId` WHERE T2.`Score` = 0 AND T1.`CreationDate` BETWEEN '2014-01-01' AND '2014-12-31' AND T1.`DisplayName` LIKE 'Chris%'\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?",
    "SELECT `Id`, `Text` FROM comments WHERE `PostId` = ( SELECT `Id` FROM posts WHERE `Title` = 'Group differences on a five point Likert item' )\t----- bird -----\tcodebase_community"
  ],
  [
    "What is the up vote number of the user that commented \"R is also lazy evaluated.\"?",
    "SELECT T1.`Score` FROM comments AS T1 INNER JOIN posts AS T2 ON T1.`PostId` = T2.`Id` WHERE T1.`Text` = 'R is also lazy evaluated.'\t----- bird -----\tcodebase_community"
  ],
  [
    "List the comments commented by the user with a username of Harvey Motulsky.",
    "SELECT DisplayName FROM users WHERE DisplayName = 'Harvey Motulsky'\t----- bird -----\tcodebase_community"
  ],
  [
    "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
    "SELECT T1.DisplayName FROM users AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.UserId INNER JOIN comments AS T3 ON T3.UserId = T1.Id WHERE T2.DownVotes = 0 AND T3.Score BETWEEN 1 AND 5\t----- bird -----\tcodebase_community"
  ],
  [
    "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
    "SELECT CAST(COUNT(DISTINCT CASE WHEN votes.VoteTypeId = 0 THEN users.Id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT users.Id) FROM users INNER JOIN votes ON users.Id = votes.UserId INNER JOIN comments ON users.Id = comments.UserId WHERE comments.Score BETWEEN 5 AND 10\t----- bird -----\tcodebase_community"
  ],
  [
    "Please list all the superpowers of 3-D Man.",
    "SELECT T1.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id WHERE T2.power_name = 'Web Creation' AND T1.hero_id IN ( SELECT hero_id FROM hero_power JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Web Creation' )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have the super power of \"Super Strength\"?",
    "SELECT COUNT(`hero_id`) FROM hero_power WHERE `power_id` = ( SELECT `id` FROM superpower WHERE `power_name` = 'Super Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
    "SELECT COUNT(T1.id) FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN hero_attribute AS T3 ON T2.hero_id = T3.hero_id INNER JOIN superhero AS T4 ON T3.hero_id = T4.id INNER JOIN alignment AS T5 ON T4.alignment_id = T5.id WHERE T1.power_name = 'Super Strength' AND T4.height_cm > 200 AND T5.value_examples = 'Neutral'\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the full names of all the superheroes with over 15 super powers.",
    "SELECT T1.`full_name` FROM superhero AS T1 JOIN hero_power AS T2 ON T1.`id` = T2.`hero_id` WHERE T2.`power_id` IN ( SELECT T3.`power_id` FROM hero_power AS T3 GROUP BY T3.`power_id` HAVING COUNT(T3.`power_id`) > 15 )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have blue eyes?",
    "SELECT COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the colour of Apocalypse's skin?",
    "SELECT T1.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T1.superhero_name = 'Apocalypse'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
    "SELECT `full_name` FROM superhero WHERE `eye_colour_id` = ( SELECT `id` FROM colour WHERE `colour` = 'Blue' ) AND `hair_colour_id` = ( SELECT `id` FROM colour WHERE `colour` = 'Blond' ) AND `alignment_id` = ( SELECT `id` FROM alignment WHERE `alignment` = 'Neutral' ) AND `eye_colour_id` IS NOT NULL AND `hair_colour_id` IS NOT NULL AND `alignment_id` IS NOT NULL AND `skin_colour_id` IS NOT NULL AND `race_id` IS NOT NULL AND `publisher_id` IS NOT NULL AND `gender_id` IS NOT NULL AND `height_cm` IS NOT NULL AND `weight_kg` IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes are published by Marvel Comics?",
    "SELECT COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Please give the full name of the tallest hero published by Marvel Comics.",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id INNER JOIN publisher AS T5 ON T1.publisher_id = T5.id WHERE T5.publisher_name = 'Marvel Comics' ORDER BY T1.height_cm DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the publisher of Sauron?",
    "SELECT publisher_name FROM superhero WHERE superhero_name = 'Sauron'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, how many of them have blue eyes?",
    "SELECT COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of the superheroes from Marvel Comics?",
    "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = ( SELECT `publisher_name` FROM publisher WHERE `publisher_name` = 'Marvel Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes from Marvel Comics, what is the percentage of those who have the super power of \"Super Strength\"?",
    "SELECT CAST(SUM(CASE WHEN T2.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN hero_attribute AS T4 ON T1.id = T4.hero_id INNER JOIN attribute AS T5 ON T4.attribute_id = T5.id WHERE T1.publisher_name = 'Marvel Comics' AND T2.power_name IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes did DC Comics publish?",
    "SELECT COUNT(`id`) FROM superhero WHERE `publisher_id` IN ( SELECT `publisher_id` FROM publisher WHERE `publisher_name` = 'DC Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher published the slowest superhero?",
    "SELECT T1.publisher_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id JOIN hero_attribute AS T4 ON T1.id = T4.hero_id JOIN attribute AS T5 ON T4.attribute_id = T5.id JOIN hero_attribute AS T6 ON T1.id = T6.hero_id JOIN attribute AS T7 ON T6.attribute_id = T7.id WHERE T7.attribute_name = 'Speed' ORDER BY T6.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many gold-eyed superheroes did Marvel Comics publish?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN colour AS T2 ON T1.hair_colour_id = T2.id JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.colour = 'Gold' AND T3.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher's name of Blue Beetle II?",
    "SELECT T1.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II';\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes with blonde hair are there?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond'\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the dumbest superhero?",
    "SELECT T1.full_name FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.attribute_id = T2.id JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T2.attribute_name = 'Intelligence' ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is Copycat's race?",
    "SELECT T1.race_id FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.superhero_name = 'Copycat'\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have durability of less than 50?",
    "SELECT COUNT(`hero_id`) FROM hero_attribute WHERE `attribute_id` = ( SELECT `id` FROM attribute WHERE `attribute_name` = 'Durability' ) AND `attribute_value` < 50\t----- bird -----\tsuperhero"
  ],
  [
    "What are the names of the superheroes with the power of death touch?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN superpower AS T2 ON T1.`id` = T2.`power_id` INNER JOIN hero_attribute AS T3 ON T1.`id` = T3.`hero_id` INNER JOIN attribute AS T4 ON T3.`attribute_id` = T4.`id` WHERE T2.`power_name` = 'Death Touch' AND T4.`attribute_name` = 'Power' AND T1.`alignment_id` IN ( SELECT T5.`alignment_id` FROM superhero AS T5 INNER JOIN superpower AS T6 ON T5.`id` = T6.`power_id` WHERE T6.`power_name` = 'Death Touch' ) GROUP BY T1.`superhero_name`\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes have a strength value of 100?",
    "SELECT COUNT(s.id) FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN hero_attribute ha2 ON s.id = ha2.hero_id JOIN attribute a2 ON ha2.attribute_id = a2.id JOIN hero_attribute ha3 ON s.id = ha3.hero_id JOIN attribute a3 ON ha3.attribute_id = a3.id WHERE g.gender = 'Female' AND a.attribute_name = 'Strength' AND a2.attribute_name = 'Strength' AND a3.attribute_name = 'Strength' AND a.attribute_value = 100;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the name of the superhero that has the most powers?",
    "SELECT superhero_name FROM superhero WHERE superhero_name IS NOT NULL GROUP BY superhero_name ORDER BY COUNT(superhero_name) DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many vampire superheroes are there?",
    "SELECT COUNT(id) FROM superhero JOIN race ON superhero.race_id = race.id WHERE race.race = 'Vampire';\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
    "SELECT CAST(SUM(CASE WHEN T1.`alignment_id` = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.`alignment_id` = T2.`id`\t----- bird -----\tsuperhero"
  ],
  [
    "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
    "SELECT DC_Superheroes - Marvel_Superheroes FROM ( SELECT SUM(CASE WHEN T1.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS DC_Superheroes FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id ) AS DC_Superheroes JOIN ( SELECT SUM(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS Marvel_Superheroes FROM publisher AS T1 JOIN superhero AS T2 ON T1.id = T2.publisher_id ) AS Marvel_Superheroes\t----- bird -----\tsuperhero"
  ],
  [
    "Give the publisher ID of Star Trek.",
    "SELECT publisher_id FROM publisher WHERE publisher_name = 'Star Trek';\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all superheroes.",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes without full name?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.full_name IS NULL\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye colour of superhero with superhero ID 75?",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`id` = 75\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the superpowers of the superhero called Deathlok.",
    "SELECT T1.power_name FROM hero_power AS T1 JOIN superpower AS T2 ON T1.power_id = T2.id JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = 'Deathlok' AND T1.hero_id = (SELECT hero_id FROM superhero WHERE superhero_name = 'Deathlok')\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average weight of all female superheroes?",
    "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T2.gender = 2 AND T1.weight_kg IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five superpowers of male superheroes.",
    "SELECT power_name FROM superpower WHERE id IN ( SELECT power_id FROM hero_power WHERE hero_id IN ( SELECT id FROM superhero WHERE gender_id = 2 ) ) LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "Give the name of the alien superheroes.",
    "SELECT `superhero_name` FROM superhero WHERE `race` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with height from 170 to 190, list the names of the superheroes with no eye color.",
    "SELECT `eye_colour_id` FROM superhero WHERE `eye_colour_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpower of hero ID 56?",
    "SELECT `power_name` FROM superpower INNER JOIN hero_power ON superpower.`id` = hero_power.`power_id` INNER JOIN superhero ON hero_power.`hero_id` = superhero.`id` WHERE superhero.`id` = 56\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full name of Demi-God superheroes.",
    "SELECT `full_name` FROM superhero WHERE `race` = 'Demi-God' LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "How many bad superheroes are there?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Bad'\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the race of the superhero who weighed 169 kg.",
    "SELECT T1.race FROM superhero AS T1 JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.weight_kg = 169;\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hair colour of the human superhero who is 185 cm tall.",
    "SELECT T1.hair_colour_id FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T1.race = 'human' AND T1.height_cm = 185 AND T1.gender_id = (SELECT id FROM gender WHERE gender = 'Male') AND T1.hair_colour_id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eye clolour of the heaviest superhero?",
    "SELECT T1.`eye_colour_id` FROM superhero AS T1 JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` ORDER BY T1.`weight_kg` DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",
    "SELECT CAST( COUNT(CASE WHEN T1.publisher_id = 13 THEN 1 ELSE NULL END) * 100 / COUNT(T1.publisher_id) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180\t----- bird -----\tsuperhero"
  ],
  [
    "Among the male superheroes, list the full names of superheroes with weight greater than the 79% average weight of all superheroes.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` WHERE T2.`gender` = 'Male' AND T1.`weight_kg` > ( SELECT 0.79 * (SELECT AVG(`weight_kg`) FROM superhero) )\t----- bird -----\tsuperhero"
  ],
  [
    "Which power do superheroes have the most of?",
    "SELECT T1.power_name FROM superpower AS T1 JOIN hero_power AS T2 ON T1.id = T2.power_id JOIN superhero AS T3 ON T3.id = T2.hero_id GROUP BY T3.id ORDER BY T1.power_name LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Indicate the attribute value of superhero Abomination.",
    "SELECT T1.attribute_value FROM hero_attribute AS T1 JOIN hero_power AS T2 ON T1.hero_id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.attribute_id = ( SELECT T4.attribute_id FROM hero_attribute AS T4 JOIN hero_power AS T5 ON T4.hero_id = T5.hero_id JOIN superpower AS T6 ON T5.power_id = T6.id WHERE T4.attribute_id = ( SELECT T7.attribute_id FROM hero_attribute AS T7 JOIN hero_power AS T8 ON T7.hero_id = T8.hero_id JOIN superpower AS T9 ON T8.power_id = T9.id WHERE T7.attribute_id = 1 ) )\t----- bird -----\tsuperhero"
  ],
  [
    "What are the superpowers of heroes with ID 1?",
    "SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero.id = 1;\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have stealth power?",
    "SELECT COUNT(T1.`id`) FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`power_id` WHERE T1.`power_name` = 'stealth'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the hero's full name with the highest attribute in strength?",
    "SELECT T1.full_name FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_name = 'Strength' ORDER BY T2.attribute_value DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average of superheroes with no skin colour?",
    "SELECT AVG(`skin_colour_id`) FROM superhero WHERE `skin_colour_id` = 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes were published by Dark Horse Comics?",
    "SELECT COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Dark Horse Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the most durability published by Dark Horse Comics?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'Dark Horse Comics' ORDER BY T1.`skin_colour_id` ASC, T1.`race_id` ASC, T1.`gender_id` ASC, T1.`eye_colour_id` ASC, T1.`hair_colour_id` ASC, T1.`alignment_id` ASC, T1.`height_cm` ASC, T1.`weight_kg` ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is the eyes colour of Abraham Sapien?",
    "SELECT T1.`eye_colour` FROM superhero AS T1 JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`full_name` = 'Abraham Sapien'\t----- bird -----\tsuperhero"
  ],
  [
    "List the name of superheroes with flight power.",
    "SELECT `superhero_name` FROM superhero WHERE `id` = ( SELECT `hero_id` FROM hero_power WHERE `power_id` = ( SELECT `id` FROM superpower WHERE `power_name` = 'Flight' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
    "SELECT T1.attribute_id FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = 'Dark Horse Comics' AND T2.gender = 'Female'\t----- bird -----\tsuperhero"
  ],
  [
    "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`hair_colour_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`skin_colour_id` = T3.`id` INNER JOIN colour AS T4 ON T1.`eye_colour_id` = T4.`id` WHERE T2.`id` = T3.`id` AND T2.`id` = T4.`id`\t----- bird -----\tsuperhero"
  ],
  [
    "Which group does superhero A-Bomb belong to?",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "What is the percentage of blue female superheroes among all female superheroes?",
    "SELECT CAST(SUM(CASE WHEN T2.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.colour) FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.gender_id WHERE T2.gender = 'Female'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the hero name and race of Charles Chandler.",
    "SELECT race FROM superhero WHERE full_name = 'Charles Chandler';\t----- bird -----\tsuperhero"
  ],
  [
    "What is the gender of Agent 13 hero?",
    "SELECT T1.gender_id FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T3 ON T2.attribute_id = T3.id JOIN gender AS T4 ON T1.gender_id = T4.id JOIN alignment AS T5 ON T1.alignment_id = T5.id WHERE T3.attribute_name = 'Gender' AND T1.superhero_name = 'Agent 13' AND T5.value_examples = 'Good'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide superheroes' names who have the adaptation power.",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "How many powers does Amazo hero have?",
    "SELECT COUNT(T1.power_id) FROM hero_power AS T1 JOIN hero_attribute AS T2 ON T1.hero_id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id JOIN superhero AS T4 ON T4.id = T1.hero_id JOIN alignment AS T5 ON T4.alignment_id = T5.id WHERE T4.superhero_name = 'Amazo' AND T2.power_id IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "List the powers of Hunter Zolomon.",
    "SELECT T1.power_name FROM hero_power AS T1 JOIN hero_attribute AS T2 ON T1.power_id = T2.hero_id JOIN hero_attribute AS T3 ON T2.attribute_id = T3.attribute_id JOIN superpower AS T4 ON T3.power_id = T4.id JOIN superhero AS T5 ON T5.id = T2.hero_id WHERE T5.full_name = 'Hunter Zolomon'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the heights of the heroes whose eye colours are amber.",
    "SELECT `height_cm` FROM superhero WHERE `eye_colour_id` = ( SELECT `eye_colour_id` FROM colour WHERE `colour` = 'Amber' )\t----- bird -----\tsuperhero"
  ],
  [
    "List the heroes' names whose eyes and hair colours are both black.",
    "SELECT T2.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.eye_colour_id = (SELECT eye_colour_id FROM colour WHERE colour = 'Black') AND T2.hair_colour_id = (SELECT hair_colour_id FROM colour WHERE colour = 'Black')\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colours of the heroes whose skin colours are gold.",
    "SELECT `full_name` FROM superhero WHERE `skin_colour_id` = ( SELECT `skin_colour_id` FROM colour WHERE `colour` = 'Gold' )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full names of vampire heroes.",
    "SELECT `full_name` FROM superhero WHERE `race_id` = ( SELECT `race_id` FROM superhero WHERE `race` = 'Vampire' ) AND `race_id` IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "Describe the names of neutral alignment superheroes.",
    "SELECT `superhero_name` FROM superhero INNER JOIN alignment ON superhero.`alignment_id` = alignment.`id` INNER JOIN hero_attribute ON superhero.`id` = hero_attribute.`hero_id` INNER JOIN attribute ON hero_attribute.`attribute_id` = attribute.`id` WHERE alignment.`Value examples` = 'Neutral'\t----- bird -----\tsuperhero"
  ],
  [
    "How many heroes have the highest attribute value in strength?",
    "SELECT COUNT(T1.hero_id) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' AND T1.attribute_value = ( SELECT MAX(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id WHERE T2.attribute_name = 'Strength' )\t----- bird -----\tsuperhero"
  ],
  [
    "What are the race and alignment of Cameron Hicks?",
    "SELECT T1.race, T1.alignment FROM superhero AS T1 JOIN race AS T3 ON T1.race_id = T3.id JOIN alignment AS T4 ON T1.alignment_id = T4.id JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN attribute AS T5 ON T2.attribute_id = T5.id JOIN hero_power AS T6 ON T1.id = T6.hero_id JOIN superpower AS T7 ON T6.power_id = T7.id\t----- bird -----\tsuperhero"
  ],
  [
    "How many percent of female heroes were published by Marvel Comics?",
    "SELECT CAST((COUNT(T1.gender_id) * 100) / COUNT(T2.publisher_name) AS REAL) / 100 FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.gender_id = 2 AND T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Find the average weight of the heroes who are aliens.",
    "SELECT AVG(T1.weight_kg) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T2.race = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.",
    "SELECT SUM(superhero.weight_kg) - ( SELECT SUM(superhero.weight_kg) FROM superhero WHERE superhero.full_name = 'Charles Chandler' ) FROM superhero WHERE superhero.full_name = 'Emil Blonsky'\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height for each superhero.",
    "SELECT AVG(T1.height_cm) FROM superhero AS T1\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's superpower?",
    "SELECT `id` FROM hero_attribute INNER JOIN hero_power ON hero_attribute.`hero_id` = hero_power.`hero_id` INNER JOIN superpower ON hero_power.`power_id` = superpower.`id` WHERE `power_name` = 'Wind Control'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the superheroes with the race of god/eternal, how many of them are male",
    "SELECT COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.`gender_id` = T2.`id` WHERE T2.`gender` = 'Male' AND T1.`race_id` = 21\t----- bird -----\tsuperhero"
  ],
  [
    "Which hero was the fastest?",
    "SELECT T1.`superhero_name` FROM hero_attribute AS T1 JOIN attribute AS T2 ON T1.`attribute_id` = T2.`id` JOIN hero_power AS T3 ON T1.`hero_id` = T3.`hero_id` JOIN superpower AS T4 ON T3.`power_id` = T4.`id` JOIN superhero AS T5 ON T1.`hero_id` = T5.`id` WHERE T2.`attribute_name` = 'Speed' ORDER BY T1.`attribute_value` DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes have a neutral alignment?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment_id = 3;\t----- bird -----\tsuperhero"
  ],
  [
    "State all of 3-D Man's attributes along with their values.",
    "SELECT `attribute_value` FROM hero_attribute WHERE `hero_id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = '3-D Man' )\t----- bird -----\tsuperhero"
  ],
  [
    "Which superheroes have blue eyes with brown hair?",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` INNER JOIN colour AS T3 ON T1.`hair_colour_id` = T3.`id` WHERE T2.`id` = 7 AND T3.`id` = 9\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher for Hawkman, Karate Kid and Speedy?",
    "SELECT `publisher_name` FROM publisher WHERE `id` = ( SELECT `publisher_id` FROM superhero WHERE `id` = ( SELECT `id` FROM superhero WHERE `superhero_name` = 'Speedy' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "How many superheroes didn't have any publisher?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.publisher_id = 1\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the percentage of superheroes with blue eyes.",
    "SELECT CAST(SUM(CASE WHEN T1.`eye_colour_id` = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.`eye_colour_id`) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T2.`colour` = 'Blue'\t----- bird -----\tsuperhero"
  ],
  [
    "Find the ratio between male superheroes and female superheroes.",
    "SELECT SUM(T1.gender_id = 1) / SUM(T1.gender_id = 2) FROM superhero AS T1\t----- bird -----\tsuperhero"
  ],
  [
    "Who is the tallest superhero?",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.attribute_value = 'Tallest' AND T2.attribute_value IS NOT NULL AND T1.height_cm IS NOT NULL ORDER BY T1.height_cm DESC LIMIT 1;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the power ID of cryokinesis?",
    "SELECT `id` FROM superpower WHERE `power_name` = 'cryokinesis'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the name of superhero with superhero ID 294.",
    "SELECT `full_name` FROM superhero WHERE `id` = 294\t----- bird -----\tsuperhero"
  ],
  [
    "List the full names of superheroes with missing weight.",
    "SELECT `full_name` FROM superhero WHERE `weight_kg` IS NULL\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the eye colour of the superhero who has Karen Beecher-Duncan as their full name.",
    "SELECT T1.colour FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.attribute_name = 'Eye Colour' AND T2.full_name = 'Karen Beecher-Duncan'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the superpowers of the superhero has Helen Parr as their full name?",
    "SELECT `id` FROM superhero WHERE `full_name` = 'Helen Parr'\t----- bird -----\tsuperhero"
  ],
  [
    "Find the race of the superhero who weighs 108kg and is 188cm tall.",
    "error: No SQL found in the input string\t----- bird -----\tsuperhero"
  ],
  [
    "What is the publisher name of the superhero ID 38?",
    "SELECT T1.publisher_name FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.id = 38;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the race of the superhero with maximum attribute value?",
    "SELECT T1.race FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T3.attribute_value = ( SELECT MAX(attribute_value) FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id ) AND T1.race IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "Give the alignment and superpowers of the superhero named Atom IV.",
    "SELECT T2.power_name FROM superhero AS T1 INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T2 ON T3.power_id = T2.id WHERE T1.full_name = 'Atom IV' AND T1.full_name IS NOT NULL\t----- bird -----\tsuperhero"
  ],
  [
    "List down at least five full names of superheroes with blue eyes.",
    "SELECT T1.`full_name` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN attribute AS T3 ON T2.`attribute_id` = T3.`id` INNER JOIN colour AS T4 ON T3.`eye_colour_id` = T4.`id` WHERE T4.`colour` = 'Blue' AND T3.`eye_colour_id` IS NOT NULL LIMIT 5\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average attribute value of all neutral superheroes.",
    "SELECT AVG(T1.`attribute_value`) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.`hero_id` = T2.`id` WHERE T2.`alignment_id` = 3\t----- bird -----\tsuperhero"
  ],
  [
    "List the skin colour of the superheroes with 100 attribute value.",
    "SELECT T1.colour FROM colour AS T1 JOIN superhero AS T2 ON T1.id = T2.skin_colour_id JOIN hero_attribute AS T3 ON T2.id = T3.hero_id JOIN hero_attribute AS T4 ON T3.id = T4.attribute_id JOIN hero_attribute AS T5 ON T4.id = T5.attribute_id JOIN hero_attribute AS T6 ON T5.id = T6.attribute_id JOIN hero_attribute AS T7 ON T6.id = T7.attribute_id JOIN hero_attribute AS T8 ON T7.id = T8.attribute_id WHERE T8.colour IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "Count the good female superheroes.",
    "SELECT COUNT(`id`) FROM superhero WHERE `alignment_id` = 1 AND `gender_id` = 2\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the names of superheroes with attribute value between 75 to 80.",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id WHERE T2.attribute_value BETWEEN 75 AND 80\t----- bird -----\tsuperhero"
  ],
  [
    "Give the race of the blue-haired male superhero.",
    "SELECT T1.race FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'blue' AND T1.gender = 'male' AND T1.hair_colour_id = T2.id AND T1.gender = 'male' AND T1.gender = 'male'\t----- bird -----\tsuperhero"
  ],
  [
    "Among the bad superheroes, what is the percentage of female superheroes?",
    "SELECT CAST(SUM(CASE WHEN T2.`alignment_id` = 2 AND T2.`gender_id` = 2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.`alignment_id`) FROM alignment AS T1 JOIN superhero AS T2 ON T1.`id` = T2.`alignment_id` WHERE T2.`alignment_id` = 2\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
    "SELECT COUNT(T1.eye_colour_id) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.id = 7 - COUNT(T1.eye_colour_id) FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.id = 1\t----- bird -----\tsuperhero"
  ],
  [
    "How strong is the Hulk?",
    "SELECT T1.attribute_value FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id WHERE T1.full_name = 'Hulk'\t----- bird -----\tsuperhero"
  ],
  [
    "List down Ajax's superpowers.",
    "SELECT T1.power_name FROM superhero AS T1 JOIN hero_power AS T2 ON T1.id = T2.hero_id JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax' AND T1.superhero_name IS NOT NULL;\t----- bird -----\tsuperhero"
  ],
  [
    "How many green-skinned villains are there in the superhero universe?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`skin_colour_id` = T2.`id` WHERE T2.`colour` = 'Green' AND T1.`alignment_id` = 3\t----- bird -----\tsuperhero"
  ],
  [
    "How many female superheroes are in Marvel Comics?",
    "SELECT COUNT(`id`) FROM superhero WHERE `gender_id` = 2 AND `publisher_id` = ( SELECT `publisher_id` FROM publisher WHERE `publisher_name` = 'Marvel Comics' )\t----- bird -----\tsuperhero"
  ],
  [
    "Identify superheroes who can control wind and list their names in alphabetical order.",
    "SELECT T1.`superhero_name` FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.`id` = T2.`power_id` INNER JOIN superhero AS T3 ON T3.`id` = T1.`hero_id` WHERE T1.`power_name` = 'Wind Control' ORDER BY T3.`superhero_name`\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the gender of the superhero who has the ability of Phoenix Force.",
    "SELECT `gender_id` FROM superhero WHERE `id` = ( SELECT `hero_id` FROM hero_power WHERE `power_id` = ( SELECT `power_id` FROM superpower WHERE `power_name` = 'Phoenix Force' ) )\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the heaviest superhero in DC Comics.",
    "SELECT `full_name` FROM superhero WHERE `publisher_id` = ( SELECT `id` FROM publisher WHERE `publisher_name` = 'DC Comics' ) ORDER BY `weight_kg` DESC LIMIT 1;\t----- bird -----\tsuperhero"
  ],
  [
    "What is the average height of a non-human superhero in Dark Horse Comics?",
    "SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.race <> 'Human' AND T3.publisher_name = 'Dark Horse Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "Count the fastest superheroes.",
    "SELECT T1.`superhero_name` FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.`id` = T2.`hero_id` INNER JOIN attribute AS T3 ON T2.`attribute_id` = T3.`id` WHERE T3.`attribute_name` = 'Speed' ORDER BY T2.`attribute_value` DESC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
    "SELECT SUM(CASE WHEN T1.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS Difference FROM publisher AS T1\t----- bird -----\tsuperhero"
  ],
  [
    "Identify the weakest attribute of the Black Panther.",
    "SELECT T1.attribute_name FROM hero_attribute AS T1 JOIN superhero AS T2 ON T1.hero_id = T2.id JOIN attribute AS T3 ON T1.attribute_id = T3.id WHERE T2.full_name = 'Black Panther' ORDER BY T1.attribute_value ASC LIMIT 1\t----- bird -----\tsuperhero"
  ],
  [
    "What is Abomination's eye colour?",
    "SELECT T2.`colour` FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.`eye_colour_id` = T2.`id` WHERE T1.`superhero_name` = 'Abomination'\t----- bird -----\tsuperhero"
  ],
  [
    "Name the tallest superhero.",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.height_cm = ( SELECT MAX(T2.height_cm) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id GROUP BY T2.hero_id )\t----- bird -----\tsuperhero"
  ],
  [
    "Name the superhero, otherwise known as Charles Chandler.",
    "SELECT T1.`id` FROM superhero AS T1 WHERE T1.`full_name` = 'Charles Chandler'\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
    "SELECT CAST(COUNT(CASE WHEN T1.`gender_id` = 2 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.`id`) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.`publisher_id` = T2.`id` WHERE T2.`publisher_name` = 'George Lucas'\t----- bird -----\tsuperhero"
  ],
  [
    "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
    "SELECT CAST(SUM(CASE WHEN T1.alignment = 'Good' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.alignment) FROM superhero AS T1 JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'\t----- bird -----\tsuperhero"
  ],
  [
    "What is the total number of superheroes that have John as their first name?",
    "SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.full_name LIKE 'John%'\t----- bird -----\tsuperhero"
  ],
  [
    "Give the hero ID of superhero with the lowest attribute value.",
    "SELECT T2.full_name FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id WHERE T1.attribute_value = ( SELECT MIN(T1.attribute_value) FROM hero_attribute AS T1 INNER JOIN superhero AS T2 ON T1.hero_id = T2.id )\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the full name of the superhero named Alien.",
    "SELECT `full_name` FROM superhero WHERE `full_name` = 'Alien'\t----- bird -----\tsuperhero"
  ],
  [
    "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.",
    "SELECT T1.full_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T1.weight_kg < 100\t----- bird -----\tsuperhero"
  ],
  [
    "List the attribute value of the superhero named Aquababy.",
    "SELECT T1.`attribute_value` FROM hero_attribute AS T1 INNER JOIN hero_power AS T2 ON T1.`hero_id` = T2.`hero_id` INNER JOIN superpower AS T3 ON T2.`power_id` = T3.`id` INNER JOIN hero_attribute AS T4 ON T4.`hero_id` = T1.`hero_id` INNER JOIN attribute AS T5 ON T4.`attribute_id` = T5.`id` WHERE T5.`attribute_name` = 'Speed'\t----- bird -----\tsuperhero"
  ],
  [
    "Provide the weight and race of the superhero with superhero ID 40.",
    "SELECT T1.`weight_kg` FROM superhero AS T1 INNER JOIN race AS T2 ON T1.`race_id` = T2.`id` WHERE T1.`id` = 40\t----- bird -----\tsuperhero"
  ],
  [
    "Calculate the average height of all neutral superheroes.",
    "SELECT AVG(T1.height_cm) FROM superhero AS T1 JOIN hero_attribute AS T2 ON T1.id = T2.hero_id JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T3.alignment_id = 1 GROUP BY T1.alignment_id\t----- bird -----\tsuperhero"
  ],
  [
    "List the hero ID of superheroes have intellegence as their power.",
    "SELECT `hero_id` FROM hero_attribute INNER JOIN attribute ON hero_attribute.`attribute_id` = attribute.`id` WHERE attribute.`id` = ( SELECT `attribute_id` FROM superpower WHERE `power_name` = 'Intelligence' )\t----- bird -----\tsuperhero"
  ],
  [
    "Give the eye colour of Blackwulf.",
    "SELECT T2.colour FROM superhero AS T1 JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.superhero_name = 'Blackwulf'\t----- bird -----\tsuperhero"
  ],
  [
    "List the power of superheroes with height greater than 80% of the average height of all superheroes.",
    "SELECT power_name FROM superpower WHERE power_id IN ( SELECT power_id FROM hero_power WHERE hero_id IN ( SELECT id FROM superhero WHERE height_cm > (SELECT AVG(height_cm) FROM superhero) * 0.8 ) )\t----- bird -----\tsuperhero"
  ],
  [
    "Please list the reference names of the drivers who are eliminated in the first period in race number 18.",
    "SELECT T1.driverRef FROM driverStandings AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId WHERE T2.number = '1' ORDER BY T2.q1 DESC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What is the surname of the driver with the best lap time in race number 19 in the second period?",
    "SELECT T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN qualifying AS T3 ON T2.`qualifyId` = T3.`qualifyId` INNER JOIN races AS T4 ON T3.`raceId` = T4.`raceId` WHERE T4.`number` = 19 AND T3.`q2` = ( SELECT MIN(T5.`q2`) FROM qualifying AS T5 WHERE T5.`raceId` = ( SELECT `raceId` FROM races WHERE `number` = 19 ) ) ORDER BY T3.`fastestLapTime` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the year during which the race is held on circuits in Shanghai.",
    "SELECT races.`year` FROM races INNER JOIN status ON races.`circuitId` = status.`circuitId` INNER JOIN results ON races.`raceId` = results.`raceId` WHERE results.`circuitId` IN ( SELECT circuitId FROM circuits WHERE location = 'Shanghai' ) AND results.`statusId` IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "Where can the introduction of the races held on Circuit de Barcelona-Catalunya be found?",
    "SELECT circuits.name FROM circuits JOIN races ON circuits.circuitId = races.circuitId JOIN seasons ON races.year = seasons.year JOIN races AS target_race ON circuits.name = target_race.name WHERE target_race.location LIKE '%Catalonia%' AND circuits.name = 'Circuit de Barcelona-Catalunya';\t----- bird -----\tformula_1"
  ],
  [
    "Please give the name of the race held on the circuits in Germany.",
    "SELECT name FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Germany' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the positions of the circuits built by the constructor Renault.",
    "SELECT T1.position FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T3.name = 'Renault';\t----- bird -----\tformula_1"
  ],
  [
    "How many races in the year 2010 are held on grand prixs outside Asia and Europe?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "Please give the names of the races held on the circuits in Spain.",
    "SELECT name FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Spain' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the location coordinates of the circuits for Australian grand prix?",
    "SELECT circuits.lat, circuits.lng FROM circuits JOIN races ON circuits.circuitId = races.circuitId WHERE races.name = 'Australian Grand Prix';\t----- bird -----\tformula_1"
  ],
  [
    "Where can I find the information about the races held on Sepang International Circuit?",
    "SELECT `url` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `name` = 'Sepang International Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time of the races held on Sepang International Circuit.",
    "SELECT T1.`time` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`name` = 'Sepang International Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "Give the coordinate position for Abu Dhabi Grand Prix.",
    "SELECT `lat`, `lng` FROM circuits WHERE `circuitId` = ( SELECT `circuitId` FROM races WHERE `name` = 'Abu Dhabi Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the constructor which got 1 point in the race No. 24 from?",
    "SELECT T1.country FROM constructors AS T1 JOIN results AS T2 ON T1.constructorId = T2.constructorId JOIN races AS T3 ON T2.raceId = T3.raceId JOIN driverStandings AS T4 ON T2.driverId = T4.driverId JOIN constructorStandings AS T5 ON T2.constructorId = T5.constructorId WHERE T3.number = 24 AND T2.position = 1 AND T4.position = 1 AND T5.position = 1\t----- bird -----\tformula_1"
  ],
  [
    "What's Bruno Senna's Q1 result in the qualifying race No. 354?",
    "SELECT q1 FROM qualifying WHERE number = 'VER' AND q1 IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?",
    "SELECT T1.`nationality` FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`q2` = '0:01:40' AND T2.`raceId` = 355;\t----- bird -----\tformula_1"
  ],
  [
    "What is his number of the driver who finished 0:01:54 in the Q3 of qualifying race No.903?",
    "SELECT T1.`number` FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` INNER JOIN constructors AS T3 ON T1.`constructorId` = T3.`constructorId` WHERE T2.`year` = ( SELECT `year` FROM seasons WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `number` = 903 ) ) AND T1.`q3` = '0:01:54' AND T3.`name` = 'Williams' AND T1.`driverId` = ( SELECT driverId FROM results WHERE raceId = ( SELECT raceId FROM races WHERE `number` = 903 ) AND constructorId = ( SELECT constructorId FROM constructors WHERE name = 'Williams' ) ) AND T1.`driverId` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "For the Bahrain Grand Prix in 2007, how many drivers not finished the game?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2007 AND T2.name = 'Bahrain Grand Prix' AND T1.time IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT `url` FROM races WHERE `year` = ( SELECT `year` FROM races WHERE `number` = 901 )\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened on 2015/11/29, how many drivers finished the game?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 592, who is the oldest?",
    "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.round = 592 AND T2.raceId = ( SELECT raceId FROM results INNER JOIN races ON results.raceId = races.raceId WHERE round = 592 ) ORDER BY T1.dob DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.",
    "SELECT T1.driverId FROM lapTimes AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.fastestLap = '0:01:27' AND T2.url IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed in race No.933, where does he come from?",
    "SELECT T1.nationality FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T3.`round` = 933 AND T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Where is Malaysian Grand Prix held? Give the location coordinates.",
    "SELECT circuits.lat, circuits.lng FROM races AS T1 JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'Malaysian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "For the constructor which got the highest point in the race No. 9 , what is its introduction website?",
    "SELECT T1.url FROM constructors AS T1 INNER JOIN ( SELECT T1.`constructorId`, MAX(T1.points) AS max_points FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.round = 9 GROUP BY T1.`constructorId` ) AS T2 ON T1.constructorId = T2.`constructorId`\t----- bird -----\tformula_1"
  ],
  [
    "What's Lucas di Grassi's Q1 result in the race No. 345?",
    "SELECT T1.`fastestLap` FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`number` = 'VER' AND T2.`raceId` = ( SELECT T3.`raceId` FROM races AS T3 WHERE T3.`number` = 345 )\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?",
    "SELECT drivers.nationality FROM drivers JOIN races ON drivers.driverId = races.driverId JOIN qualifying ON drivers.driverId = qualifying.driverId JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE qualifying.q2 = '0:01:15' AND races.round = 347 AND races.raceId = qualifying.raceId AND lapTimes.time = '0:01:15' AND drivers.driverId = ( SELECT driverId FROM qualifying WHERE q2 = '0:01:15' AND raceId = ( SELECT raceId FROM races WHERE round = 347 ) ) ORDER BY drivers.nationality ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?",
    "SELECT `code` FROM drivers WHERE `time` = '0:01:33'\t----- bird -----\tformula_1"
  ],
  [
    "What is the actual finish time for Bruce McLaren in the race No.743?",
    "SELECT T1.`time` FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`forename` = 'Bruce' AND T2.`surname` = 'McLaren' AND T1.`raceId` = ( SELECT `raceId` FROM races WHERE `number` = 743 )\t----- bird -----\tformula_1"
  ],
  [
    "Who finished second in the San Marino Grand Prix in 2006?",
    "SELECT T1.`forename` || ' ' || T1.`surname` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN races AS T3 ON T2.`raceId` = T3.`raceId` WHERE T3.`name` = 'San Marino Grand Prix' AND T3.`year` = 2006 AND T2.`position` = 2\t----- bird -----\tformula_1"
  ],
  [
    "Show me the season page of year when the race No. 901 took place.",
    "SELECT s.year FROM seasons s JOIN races r ON s.year = r.year JOIN races r2 ON r.raceId = r2.raceId WHERE r2.number = 901;\t----- bird -----\tformula_1"
  ],
  [
    "For the race happened in 2015/11/29, how many drivers finished the game?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29'\t----- bird -----\tformula_1"
  ],
  [
    "For all the drivers who finished the game in race No. 872, who is the youngest?",
    "SELECT T1.surname, T1.forename FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = 872\t----- bird -----\tformula_1"
  ],
  [
    "Who was the driver that got the best lap time in the race No. 348? Give his full name.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`time` = ( SELECT MIN(T2.`time`) FROM races AS T3 INNER JOIN lapTimes AS T4 ON T3.`raceId` = T4.`raceId` WHERE T3.`number` = 348 ) AND T1.`number` = 348 AND T1.`surname` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "For the driver who set the fastest lap speed, what is his nationality?",
    "SELECT T1.`nationality` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`time` = ( SELECT MAX(T1.`time`) FROM lapTimes AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`grid` = ( SELECT MAX(T3.`grid`) FROM results AS T3 WHERE T3.`raceId` = 348 ) )\t----- bird -----\tformula_1"
  ],
  [
    "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
    "SELECT (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) / fastestLapSpeed(raceId = 853) * 100 AS percentage FROM results WHERE raceId = 853\t----- bird -----\tformula_1"
  ],
  [
    "For the drivers who took part in the race in 1983/7/16, what's their race completion rate?",
    "SELECT COUNT(driverId) / (SELECT COUNT(driverId) FROM results WHERE date = '1983-07-16' AND time IS NOT NULL) AS percentage FROM results WHERE date = '1983-07-16' AND time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which year was the first Singapore Grand Prix?",
    "SELECT `year` FROM races WHERE `name` = 'Singapore Grand Prix' ORDER BY `year` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many races were there in 2005? Name all the races in descending order.",
    "SELECT `name` FROM races WHERE `year` = 2005 ORDER BY `name` DESC\t----- bird -----\tformula_1"
  ],
  [
    "Name the first race recorded. What are the other races that happened within the same month and year of that race.",
    "SELECT raceId, name FROM races WHERE `year` = ( SELECT `year` FROM races WHERE `date` = ( SELECT MIN(`date`) FROM races ) ) AND `month` = ( SELECT `month` FROM races WHERE `date` = ( SELECT MIN(`date`) FROM races ) )\t----- bird -----\tformula_1"
  ],
  [
    "State the name and date of the last round of race in year 1999.",
    "SELECT T1.name, T1.date FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T2.year = 1999 ORDER BY T1.round DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Which year has the most number of races?",
    "SELECT T2.year FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year INNER JOIN ( SELECT MAX(T1.round) AS max_round FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year ) AS T3 ON T1.round = T3.max_round\t----- bird -----\tformula_1"
  ],
  [
    "Name the races in year 2017 that are not hosted in year 2000.",
    "SELECT T1.`name` FROM races AS T1 WHERE T1.`year` != 2000\t----- bird -----\tformula_1"
  ],
  [
    "In which country was the first European Grand Prix hosted? Name the circuit and location.",
    "SELECT T1.circuitRef, T1.location FROM races AS T1 INNER JOIN seasons AS T2 ON T1.year = T2.year WHERE T1.name = 'European Grand Prix' ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?",
    "SELECT MAX(T1.year) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Brands Hatch' AND T2.location = 'UK' AND T1.name = 'British Grand Prix' AND T1.name IS NOT NULL AND T2.name IS NOT NULL AND T2.name != 'None'\t----- bird -----\tformula_1"
  ],
  [
    "How many seasons has Silverstone Circuit hosted the United Kindom grand prix?",
    "SELECT COUNT(T1.`raceId`) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`name` = 'Silverstone' AND T1.`name` = 'British Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Name all drivers in the 2010 Singapore Grand Prix order by their position stands.",
    "SELECT `forename`, `surname` FROM drivers WHERE `driverId` = ( SELECT `driverId` FROM results WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2010 AND `name` = 'Singapore Grand Prix' ) )\t----- bird -----\tformula_1"
  ],
  [
    "State the driver with the most points scored. Find his full name with that points.",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.points = ( SELECT MAX(points) FROM results )\t----- bird -----\tformula_1"
  ],
  [
    "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.",
    "SELECT T1.`forename`, T1.`surname`, T2.`points` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`raceId` = ( SELECT `raceId` FROM races WHERE `name` = 'Chinese Grand Prix' ) ORDER BY T2.`points` DESC LIMIT 3\t----- bird -----\tformula_1"
  ],
  [
    "What is the best lap time recorded? List the driver and race with such recorded lap time.",
    "SELECT T1.driverId, T1.raceId FROM lapTimes AS T1 JOIN results AS T2 ON T1.resultId = T2.resultId WHERE T1.time = ( SELECT MIN(T1.time) FROM lapTimes AS T1 JOIN results AS T2 ON T1.resultId = T2.resultId WHERE T1.driverId = T2.driverId GROUP BY T2.driverId )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time for Sebastian Vettel in the 2009 Chinese Grand Prix?",
    "SELECT AVG(T1.`fastestLapTime`) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`forename` = 'Sebastian' AND T2.`surname` = 'Vettel' AND T1.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2009 AND `name` = 'Chinese Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
    "SELECT COUNT(raceId) / COUNT(CASE WHEN surname = 'Hamilton' AND year >= 2010 THEN raceId ELSE NULL END) AS percentage FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE surname = 'Hamilton' AND year >= 2010;\t----- bird -----\tformula_1"
  ],
  [
    "Name the driver with the most winning. Mention his nationality and what is his average point scores.",
    "SELECT AVG(points) FROM results WHERE wins = ( SELECT MAX(wins) FROM results )\t----- bird -----\tformula_1"
  ],
  [
    "How old is the youngest Japanese driver? What is his name?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "List circuits which host 4 f1 races from year 1990 to 2000.",
    "SELECT T1.`name` FROM circuits AS T1 JOIN races AS T2 ON T1.`circuitRef` = T2.`circuitId` WHERE T2.`year` BETWEEN 1990 AND 2000 GROUP BY T1.`name` HAVING COUNT(T2.`raceId`) = 4\t----- bird -----\tformula_1"
  ],
  [
    "List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.",
    "SELECT T2.`name` FROM circuits AS T1 JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`year` = 2006 AND T1.`country` = 'USA'\t----- bird -----\tformula_1"
  ],
  [
    "Name the races along with its circuit name and location for f1 races hosted in September 2005.",
    "SELECT races.`name`, circuits.`name`, circuits.`location` FROM races JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE races.`year` = 2005 AND MONTH(races.`date`) = 9\t----- bird -----\tformula_1"
  ],
  [
    "Which race was Alex Yoong in when he was in track number less than 10?",
    "SELECT T1.raceId FROM drivers AS T1 JOIN qualifying AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId JOIN constructorResults AS T4 ON T2.raceId = T4.raceId JOIN constructorStandings AS T5 ON T4.constructorId = T5.constructorId WHERE T1.forename = 'Alex' AND T1.surname = 'Yoong' AND T2.position < 10\t----- bird -----\tformula_1"
  ],
  [
    "How many times did Michael Schumacher won from races hosted in Sepang International Circuit?",
    "SELECT COUNT(T1.resultId) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN constructors AS T3 ON T1.constructorId = T3.constructorId JOIN drivers AS T4 ON T1.driverId = T4.driverId WHERE T1.driverId = 'Michael Schumacher' AND T2.name = 'Sepang International Circuit' GROUP BY T1.resultId;\t----- bird -----\tformula_1"
  ],
  [
    "State the race and year of race in which Michael Schumacher had his fastest lap.",
    "SELECT races.raceId, races.year FROM races JOIN results ON races.raceId = results.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.surname = 'Schumacher' AND results.fastestLap IS NOT NULL ORDER BY results.milliseconds ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What is Eddie Irvine's average points scored in year 2000?",
    "SELECT AVG(points) FROM results JOIN races ON results.raceId = races.raceId JOIN drivers ON results.driverId = drivers.driverId WHERE drivers.forename = 'Eddie' AND drivers.surname = 'Irvine' AND races.year = 2000\t----- bird -----\tformula_1"
  ],
  [
    "Which was Lewis Hamilton first race? What was his points recorded for his first race event?",
    "SELECT T2.points FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.driverId = 'Lewis Hamilton' AND T1.year = (SELECT MIN(year) FROM races) ORDER BY T1.year ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List all races in 2017 and the hosting country order by date of the event.",
    "SELECT T1.`name`, T1.`date` FROM races AS T1 INNER JOIN circuits AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T1.`year` = 2017 ORDER BY T1.`date`\t----- bird -----\tformula_1"
  ],
  [
    "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.",
    "SELECT T2.name, T2.year, T2.circuitId, T2.circuitRef FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.laps = ( SELECT MAX(T1.laps) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.circuitRef = T2.circuitRef ) AND T2.circuitRef IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Among all European Grand Prix races, what is the percentage of the races were hosted in Germany?",
    "SELECT CAST(COUNT(CASE WHEN T1.country = 'Germany' THEN T1.name ELSE NULL END) AS REAL) * 100 / COUNT(T1.name) FROM races AS T1 JOIN constructors AS T2 ON T1.circuitId = T2.circuitId JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T1.country = 'Germany' AND T1.name = 'European Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What's the location coordinates of Silverstone Circuit?",
    "SELECT `lat`, `lng` FROM circuits WHERE `name` = 'Silverstone Circuit'\t----- bird -----\tformula_1"
  ],
  [
    "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?",
    "SELECT `name` FROM circuits WHERE `lat` = ( SELECT MAX(`lat`) FROM circuits WHERE `name` IN ('Silverstone Circuit', 'Hockenheimring', 'Hungaroring') )\t----- bird -----\tformula_1"
  ],
  [
    "What's the reference name of Marina Bay Street Circuit?",
    "SELECT `circuitRef` FROM circuits WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `name` = 'Marina Bay Street Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "In which country can I find the circuit with the highest altitude?",
    "SELECT T1.`country` FROM circuits AS T1 INNER JOIN ( SELECT `circuitId` FROM circuits ORDER BY `alt` DESC LIMIT 1 ) AS T2 ON T1.`circuitId` = T2.`circuitId`\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers don't have a code?",
    "SELECT COUNT(`code`) FROM drivers WHERE `code` IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which country is the oldest driver from?",
    "SELECT T2.`country` FROM drivers AS T1 JOIN constructors AS T3 ON T1.`constructorId` = T3.`constructorId` JOIN nationality AS T2 ON T1.`nationality` = T2.`nationality` WHERE T1.`dob` IS NOT NULL ORDER BY T1.`dob` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the surnames of all the Italian drivers.",
    "SELECT `surname` FROM drivers WHERE `nationality` = 'Italian'\t----- bird -----\tformula_1"
  ],
  [
    "Which website should I go to if I want to know more about Anthony Davidson?",
    "SELECT `url` FROM drivers WHERE `forename` = 'Anthony' AND `surname` = 'Davidson'\t----- bird -----\tformula_1"
  ],
  [
    "What's Lewis Hamilton's reference name?",
    "SELECT `driverRef` FROM drivers WHERE `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' )\t----- bird -----\tformula_1"
  ],
  [
    "Which circuit did the 2009 Spanish Grand Prix use?",
    "SELECT T1.`circuitRef` FROM circuits AS T1 INNER JOIN races AS T2 ON T1.`circuitId` = T2.`circuitId` WHERE T2.`year` = 2009\t----- bird -----\tformula_1"
  ],
  [
    "Please list all the years that Silverstone Circuit was used in a Formula_1 race.",
    "SELECT DISTINCT `year` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `name` = 'Silverstone Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "Please give more information about the Formula_1 races that used the Silverstone Circuit.",
    "SELECT `url` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `name` = 'Silverstone Circuit' )\t----- bird -----\tformula_1"
  ],
  [
    "What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?",
    "SELECT `time` FROM races WHERE `circuitId` = (SELECT `circuitId` FROM circuits WHERE `name` = 'Abu Dhabi Circuit')\t----- bird -----\tformula_1"
  ],
  [
    "How many Formula_1 races took place on the circuits in Italy?",
    "SELECT COUNT(raceId) FROM races WHERE circuitId IN ( SELECT circuitId FROM circuits WHERE country = 'Italy' )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.",
    "SELECT `date` FROM races WHERE `circuitId` = ( SELECT `circuitId` FROM circuits WHERE `location` = 'Barcelona' )\t----- bird -----\tformula_1"
  ],
  [
    "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.",
    "SELECT `url` FROM circuits WHERE `circuitId` = ( SELECT `circuitId` FROM races WHERE `year` = 2009 AND `name` = 'Spanish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "What's the fastest lap time ever in a race for Lewis Hamilton?",
    "SELECT T2.fastestLapTime FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN lapTimes AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T3.raceId = T2.raceId WHERE T2.fastestLapSpeed = ( SELECT T4.fastestLapSpeed FROM lapTimes AS T4 JOIN races AS T5 ON T5.raceId = T4.raceId WHERE T4.fastestLapSpeed IS NOT NULL ORDER BY T4.fastestLapSpeed DESC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Which driver ranked the first in the Australian Grand Prix in 2008? Please give his reference name.",
    "SELECT T1.driverRef FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN constructors AS T3 ON T1.constructorId = T3.constructorId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.position = 1 ORDER BY T1.position ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the Formula_1 races that Lewis Hamilton participated.",
    "SELECT `name` FROM races WHERE `raceId` IN ( SELECT `raceId` FROM results WHERE `driverId` IN ( SELECT `driverId` FROM drivers WHERE `forename` = 'Lewis' AND `surname` = 'Hamilton' ) )\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race did Lewis Hamilton rank the highest?",
    "SELECT T1.raceId FROM driverStandings AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' ORDER BY T1.position ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
    "SELECT MAX(T1.fastestLapSpeed) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Spanish Grand Prix' AND T2.year = 2009\t----- bird -----\tformula_1"
  ],
  [
    "In which years did Lewis Hamilton participate in a Formula_1 race?",
    "SELECT DISTINCT T1.year FROM races AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.`forename` = 'Lewis' AND T2.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What was Lewis Hamilton's final rank in the 2008 Australian Grand Prix?",
    "SELECT T1.positionOrder FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId = ( SELECT raceId FROM races WHERE name = 'Australian Grand Prix' AND year = 2008 ) AND T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T1.positionOrder IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver was in the no. 4 grid formation when starting the race in 2008's Australian Grand Prix? Please give his forename and surname.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN qualifying AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`grid` = 4 AND T2.`raceId` = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND T2.`grid` = 4 AND T2.`raceId` = ( SELECT raceId FROM races WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND T2.`grid` = 4\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
    "SELECT COUNT(DISTINCT T1.`driverId`) FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`name` = 'Australian Grand Prix' AND T1.`time` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?",
    "SELECT T1.`fastestLapTime` FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`forename` = 'Lewis' AND T1.`surname` = 'Hamilton' AND T2.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) AND T2.`milliseconds` IS NOT NULL AND T2.`position` = ( SELECT MAX(`position`) FROM lapTimes WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) ) AND T2.`position` = ( SELECT MAX(`position`) FROM lapTimes WHERE `raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) )\t----- bird -----\tformula_1"
  ],
  [
    "What's the finish time for the driver who ranked second in 2008's Australian Grand Prix?",
    "SELECT T1.`time` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`positionText` = '2' ORDER BY T1.`positionOrder` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?",
    "SELECT `url` FROM drivers INNER JOIN results ON drivers.`driverId` = results.`driverId` WHERE results.`raceId` = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' ) ORDER BY results.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many drivers from the USA participated in the 2008 Australian Grand Prix?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'American' AND T1.raceId = ( SELECT `raceId` FROM races WHERE `year` = 2008 AND `name` = 'Australian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers that finished the race in the 2008 Australian Grand Prix, how many of them have participated in Formula_1 races?",
    "SELECT COUNT(DISTINCT `driverId`) FROM results WHERE `statusId` IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?",
    "SELECT SUM(T2.points) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
    "SELECT CAST(REPLACE(REPLACE(T1.`time`, ':', ''), '.', '') AS REAL) / 1000 FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`forename` = 'Lewis' AND T2.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the rate of drivers completing all the laps in the 2008 Australian Grand Prix?",
    "SELECT COUNT(DISTINCT driverId) / COUNT(DISTINCT raceId) FROM lapTimes WHERE time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
    "SELECT CAST((T1.`time` - T2.`time`) * 100 / T2.`time` AS REAL) * 100 FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`name` = 'Australian Grand Prix' AND T2.`year` = 2008 AND T1.`grid` = ( SELECT MAX(T3.`grid`) FROM results AS T3 INNER JOIN races AS T4 ON T3.`raceId` = T4.`raceId` WHERE T4.`name` = 'Australian Grand Prix' AND T4.`year` = 2008 AND T3.`grid` IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "How many circuits are there in Melbourne, Australia?",
    "SELECT COUNT(`circuitId`) FROM circuits WHERE `country` = 'Australia' AND `location` = 'Melbourne'\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the US circuits.",
    "SELECT circuits.`lat`, circuits.`lng` FROM circuits INNER JOIN status AS T1 ON circuits.`statusId` = T1.`statusId` WHERE T1.`country` = 'USA'\t----- bird -----\tformula_1"
  ],
  [
    "How many British drivers were born after 1980?",
    "error: No SQL found in the input string\t----- bird -----\tformula_1"
  ],
  [
    "What are the average points of British constructors?",
    "SELECT AVG(T1.points) FROM constructors AS T1 JOIN constructorResults AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T1.`nationality` = 'British'\t----- bird -----\tformula_1"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "Please list the constructor names with 0 points at race 291.",
    "SELECT T1.`name` FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T2.`points` = 0 AND T2.`raceId` = ( SELECT raceId FROM races WHERE year = 2023 AND round = 291 )\t----- bird -----\tformula_1"
  ],
  [
    "How many Japanese constructors have 0 points in 2 races?",
    "SELECT COUNT(raceId) FROM races WHERE year = (SELECT year FROM seasons LIMIT 1) AND round = (SELECT round FROM seasons LIMIT 1) AND circuitId = (SELECT circuitId FROM races LIMIT 1) AND points = 0;\t----- bird -----\tformula_1"
  ],
  [
    "Which constructors have been ranked 1?",
    "SELECT T1.`constructorId`, T1.`name`, T1.`nationality` FROM constructors AS T1 JOIN constructorStandings AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T2.`position` = '1'\t----- bird -----\tformula_1"
  ],
  [
    "How many French constructors have a lap number of over 50?",
    "SELECT COUNT(T1.`lap`) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`nationality` = 'French' AND T1.`lap` > 50\t----- bird -----\tformula_1"
  ],
  [
    "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
    "SELECT CAST(SUM(CASE WHEN T1.nationality = 'Japanese' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.driverId) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.year BETWEEN 2007 AND 2009 AND T1.time IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "What is the average time in seconds of champion for each year?",
    "SELECT AVG(T1.time) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.statusId = 1 AND T1.time IS NOT NULL GROUP BY T2.year\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.",
    "SELECT T1.forename, T1.surname FROM driverStandings AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.position = 2 AND T1.dob > 1975\t----- bird -----\tformula_1"
  ],
  [
    "How many Italian drivers haven't finished the race?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN constructorStandings AS T2 ON T1.driverId = T2.driverId INNER JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T3.nationality = 'Italian' AND T1.time IS NULL;\t----- bird -----\tformula_1"
  ],
  [
    "Which driver has the fastest lap time? Please give their forenames and surnames.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`fastestLapTime` = ( SELECT T1.`fastestLapTime` FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`fastestLap` IS NOT NULL )\t----- bird -----\tformula_1"
  ],
  [
    "What is the fastest lap number of the champion in 2009?",
    "SELECT MAX(T1.lap) FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T2.raceId = T3.raceId WHERE T2.year = 2009 AND T2.status = 'D' AND T1.number = ( SELECT MAX(T4.number) FROM drivers AS T4 JOIN results AS T5 ON T4.driverId = T5.driverId WHERE T5.year = 2009 )\t----- bird -----\tformula_1"
  ],
  [
    "What is the average of fastest lap speed in the 2009 Spanish Grand Prix race?",
    "SELECT AVG(T1.fastestLapSpeed) FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`name` = 'Spanish Grand Prix' AND T1.`year` = 2009 AND T2.`fastestLapSpeed` IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "Which race has the shortest actual finishing time? Please give the name and year.",
    "SELECT T1.`name`, T1.`year` FROM races AS T1 INNER JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`milliseconds` = ( SELECT MIN(CAST(T1.`milliseconds` AS REAL)) FROM results AS T1 )\t----- bird -----\tformula_1"
  ],
  [
    "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
    "SELECT COUNT(DISTINCT T1.driverId) * 100 / COUNT(DISTINCT T2.driverId) FROM drivers AS T1 JOIN races AS T3 ON T1.driverId = T3.driverId JOIN seasons AS T4 ON T3.year = T4.year JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.dob < '1985-01-01' AND T2.laps > 50 AND T3.year BETWEEN 2000 AND 2005\t----- bird -----\tformula_1"
  ],
  [
    "How many French drivers who obtain the laptime less than 02:00.00?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId INNER JOIN constructorStandings AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T4 ON T2.raceId = T4.raceId INNER JOIN seasons AS T5 ON T4.year = T5.year INNER JOIN circuits AS T6 ON T4.circuitId = T6.circuitId INNER JOIN constructors AS T7 ON T6.country = T7.country INNER JOIN driverStandings AS T8 ON T1.driverId = T8.driverId WHERE T6.country = 'France' AND T2.time < '02:00.00'\t----- bird -----\tformula_1"
  ],
  [
    "List out the code for drivers who have nationality in America.",
    "SELECT T1.code FROM drivers AS T1 JOIN constructors AS T2 ON T1.driverId = T2.driverId JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'USA'\t----- bird -----\tformula_1"
  ],
  [
    "List out the Id number of races which were hold in 2009.",
    "SELECT `raceId` FROM races WHERE `year` = 2009\t----- bird -----\tformula_1"
  ],
  [
    "How many driver participated in race ID number 18?",
    "SELECT COUNT(DISTINCT T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.raceId = 18\t----- bird -----\tformula_1"
  ],
  [
    "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?",
    "SELECT COUNT(T1.`driverId`) FROM drivers AS T1 INNER JOIN ( SELECT T2.`driverId` FROM drivers AS T2 ORDER BY T2.`dob` ASC LIMIT 3 ) AS T3 ON T1.`driverId` = T3.`driverId` WHERE T1.`nationality` = 'Netherlands'\t----- bird -----\tformula_1"
  ],
  [
    "What is reference name of Robert Kubica?",
    "SELECT `driverRef` FROM drivers WHERE `driverId` = ( SELECT `driverId` FROM drivers WHERE `forename` = 'Robert' AND `surname` = 'Kubica' )\t----- bird -----\tformula_1"
  ],
  [
    "How many Australian drivers who were born in 1980?",
    "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN constructorStandings AS T2 ON T1.driverId = T2.driverId WHERE T1.dob = '1980-01-01' AND T1.nationality = 'Australian'\t----- bird -----\tformula_1"
  ],
  [
    "List out top 3 German drivers who were born from 1980-1990 and have the earliest lap time.",
    "SELECT T1.`forename`, T1.`surname`, MIN(T2.`time`) AS min_time FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN constructorStandings AS T3 ON T1.`driverId` = T3.`driverId` WHERE T1.`nationality` = 'German' AND T1.`dob` BETWEEN '1980-01-01' AND '1990-12-31' GROUP BY T1.`forename`, T1.`surname` ORDER BY min_time ASC LIMIT 3\t----- bird -----\tformula_1"
  ],
  [
    "Please state the reference name of the oldest German driver.",
    "SELECT T1.`driverRef` FROM drivers AS T1 INNER JOIN constructorStandings AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`nationality` = 'German' ORDER BY T1.`dob` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers.",
    "SELECT drivers.driverId, drivers.code FROM drivers JOIN results ON drivers.driverId = results.driverId JOIN races ON results.raceId = races.raceId JOIN lapTimes ON drivers.driverId = lapTimes.driverId WHERE drivers.dob = '1971-01-01' AND races.year = 2023 AND lapTimes.fastestLapTime IS NOT NULL\t----- bird -----\tformula_1"
  ],
  [
    "List out top 10 Spanish drivers who were born before 1982 and have the latest lap time.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN constructorStandings AS T2 ON T1.`driverId` = T2.`driverId` INNER JOIN lapTimes AS T3 ON T1.`driverId` = T3.`driverId` WHERE T1.`nationality` = 'Spanish' AND T1.`dob` < 1982 AND T3.`time` = ( SELECT MAX(`time`) FROM lapTimes AS T4 INNER JOIN drivers AS T5 ON T4.`driverId` = T5.`driverId` WHERE T5.`nationality` = 'Spanish' AND T5.`dob` < 1982 ) ORDER BY T2.`position` DESC, T1.`dob` DESC LIMIT 10\t----- bird -----\tformula_1"
  ],
  [
    "State the racing year which has the fastest lap time?",
    "SELECT T1.year FROM races AS T1 JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T2.time = ( SELECT MAX(time) FROM lapTimes )\t----- bird -----\tformula_1"
  ],
  [
    "",
    "\t----- bird -----\t"
  ],
  [
    "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
    "SELECT T1.driverId FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.round = 1 ORDER BY T2.time ASC LIMIT 5\t----- bird -----\tformula_1"
  ],
  [
    "From race no. 50 to 100, how many finishers have been disqualified?",
    "SELECT COUNT(DISTINCT driverId) FROM results WHERE raceId BETWEEN 50 AND 100 AND statusId = 2 AND time IS NULL\t----- bird -----\tformula_1"
  ],
  [
    "How many times the circuits were held in Austria? Please give their location and coordinates.",
    "SELECT circuits.`lat`, circuits.`lng` FROM circuits WHERE circuits.`country` = 'Austria'\t----- bird -----\tformula_1"
  ],
  [
    "What race number has the most finishers?",
    "SELECT raceId FROM results GROUP BY raceId ORDER BY COUNT(*) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.",
    "SELECT T1.nationality, T1.dob FROM driverStandings AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN qualifying AS T3 ON T2.raceId = T3.raceId JOIN races AS T4 ON T2.raceId = T4.raceId WHERE T3.position = 2\t----- bird -----\tformula_1"
  ],
  [
    "On what year did the youngest driver had his first qualifying race? State the name, date and time of the race.",
    "SELECT T2.`time` FROM drivers AS T1 INNER JOIN races AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`forename` = 'Max' ORDER BY T2.`qualifyId` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many American drivers have been disqualified from the race.",
    "SELECT COUNT(DISTINCT T1.driverId) FROM results AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.nationality = 'American' AND T1.statusId = ( SELECT statusId FROM status WHERE status = 'Disqualified' )\t----- bird -----\tformula_1"
  ],
  [
    "Which of the Italian constructor got the highest point to date? Give its introduction website?",
    "SELECT T1.`name`, T2.`url` FROM constructors AS T1 INNER JOIN ( SELECT `name`, `url` FROM constructors ORDER BY T1.`points` DESC LIMIT 1 ) AS T2 ON T1.`name` = T2.`name`\t----- bird -----\tformula_1"
  ],
  [
    "What is the website of the constructor who tallied the most total wins.",
    "SELECT T1.url FROM constructorStandings AS T1 JOIN constructorResults AS T2 ON T1.constructorId = T2.constructorId WHERE T2.wins = ( SELECT MAX(T3.wins) FROM constructorStandings AS T3 JOIN constructorResults AS T4 ON T3.constructorId = T4.constructorId )\t----- bird -----\tformula_1"
  ],
  [
    "Among the drivers who participated in the French Grand Prix, who has the slowest time in the 3rd lap.",
    "SELECT DISTINCT driverId FROM lapTimes JOIN races ON lapTimes.raceId = races.raceId JOIN results ON lapTimes.driverId = results.driverId JOIN qualifying ON results.driverId = qualifying.driverId JOIN constructorResults ON results.constructorId = constructorResults.constructorId JOIN constructorStandings ON results.constructorId = constructorStandings.constructorId WHERE races.name = 'French Grand Prix' ORDER BY time ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In which race did the fastest 1st lap time was recorded? Please indicate the time in milliseconds.",
    "SELECT T2.raceId FROM lapTimes AS T1 JOIN results AS T3 ON T1.resultId = T3.resultId JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T1.fastestLap = 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
    "SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2006 AND T2.name = 'United States Grand Prix' AND T1.position <= 10 GROUP BY T2.year, T2.name ORDER BY T2.year ASC, T1.position ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "List down top 5 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
    "SELECT T1.forename, T1.surname, T1.dob, T1.nationality, T1.url FROM drivers AS T1 JOIN constructorStandings AS T2 ON T1.driverId = T2.driverId JOIN pitStops AS T3 ON T1.driverId = T3.driverId JOIN races AS T4 ON T3.raceId = T4.raceId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' ORDER BY T2.avg(T3.duration) ASC LIMIT 5\t----- bird -----\tformula_1"
  ],
  [
    "Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.",
    "SELECT MAX(time) FROM results INNER JOIN races ON results.`raceId` = races.`raceId` WHERE races.`year` = 2008 AND races.`name` = 'Canadian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
    "SELECT T1.url FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN constructors AS T3 ON T1.constructorId = T3.constructorId JOIN constructorResults AS T4 ON T1.raceId = T4.raceId JOIN constructorStandings AS T5 ON T1.raceId = T5.raceId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.status = 'D' AND T1.grid = 1 AND T3.constructorRef = 'virgin' AND T4.constructorId = T5.constructorId;\t----- bird -----\tformula_1"
  ],
  [
    "What is the full name and date of birth of Austrian drivers born between 1981 and 1991?",
    "SELECT T1.forename, T1.surname, T1.dob FROM drivers AS T1 JOIN constructors AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.driverId = T3.driverId JOIN seasons AS T4 ON T3.year = T4.year JOIN constructorResults AS T5 ON T1.driverId = T5.driverId JOIN constructorStandings AS T6 ON T1.driverId = T6.driverId WHERE T2.nationality = 'Austrian' AND T1.dob BETWEEN '1981-01-01' AND '1991-12-31'\t----- bird -----\tformula_1"
  ],
  [
    "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.",
    "SELECT T1.`forename` + ' ' + T1.`surname` AS full_name, T2.`url` AS wikipedia_page_link FROM drivers AS T1 JOIN constructors AS T2 ON T1.`constructorId` = T2.`constructorId` WHERE T2.`nationality` = 'German' AND T1.`dob` BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY T1.`dob` DESC\t----- bird -----\tformula_1"
  ],
  [
    "In which location does the Hungaroring circuit located? Also, find the country and coordinates of this circuit?",
    "SELECT T1.lat, T1.lng FROM circuits AS T1 JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Hungaroring'\t----- bird -----\tformula_1"
  ],
  [
    "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
    "SELECT T1.`constructorId`, T1.`name`, T1.`nationality` FROM constructorResults AS T1 JOIN results AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`statusId` = 'D' ORDER BY T2.`points` DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "What is the average score of Lewis Hamilton among all the Turkish Grand Prix?",
    "SELECT AVG(T1.points) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T1.raceId IN ( SELECT T3.raceId FROM races AS T3 INNER JOIN seasons AS T4 ON T3.year = T4.year WHERE T3.name = 'Turkish Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "What is the annual average number of races held during the first 10 years of the 21st century?",
    "SELECT AVG(T2.`COUNT`) FROM ( SELECT circuits.`circuitRef`, COUNT(races.`raceId`) AS `COUNT` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE races.`year` >= 2000 AND races.`year` <= 2010 GROUP BY circuits.`circuitRef` ) AS T1 INNER JOIN ( SELECT circuits.`circuitRef`, COUNT(races.`raceId`) AS `COUNT` FROM races INNER JOIN circuits ON races.`circuitId` = circuits.`circuitId` WHERE races.`year` >= 2000 AND races.`year` <= 2010 GROUP BY circuits.`circuitRef` ) AS T2 ON T1.`circuitRef` = T2.`circuitRef` WHERE T1.`circuitRef` = T2.`circuitRef`\t----- bird -----\tformula_1"
  ],
  [
    "Which citizenship do the vast majority of the drivers hold?",
    "SELECT T1.`nationality` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` GROUP BY T1.`nationality` ORDER BY COUNT(T2.`driverId`) DESC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
    "SELECT COUNT(T2.resultId) FROM results AS T1 INNER JOIN constructorResults AS T2 ON T1.resultId = T2.resultId WHERE T1.position = 91\t----- bird -----\tformula_1"
  ],
  [
    "In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?",
    "SELECT raceId, name FROM races WHERE raceId = ( SELECT raceId FROM results WHERE fastestLapTime IS NOT NULL ORDER BY fastestLapSpeed DESC LIMIT 1 )\t----- bird -----\tformula_1"
  ],
  [
    "Which racetrack hosted the most recent race? Indicate the full location.",
    "SELECT MAX(`date`) FROM races\t----- bird -----\tformula_1"
  ],
  [
    "What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?",
    "SELECT T1.forename, T1.surname FROM qualifying AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.name = 'Marina Bay Street Circuit' AND T1.position = 3 AND T2.year = 2008 AND T1.position = (SELECT MIN(q3) FROM qualifying WHERE raceId = T2.raceId AND circuitId = T2.circuitId) LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 ORDER BY T1.`dob` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "How many accidents did the driver who had the highest number accidents in the Canadian Grand Prix have?",
    "SELECT COUNT(T2.`statusId`) FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`name` = 'Canadian Grand Prix' AND T2.`statusId` = ( SELECT MAX(T2.`statusId`) FROM results AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`name` = 'Canadian Grand Prix' )\t----- bird -----\tformula_1"
  ],
  [
    "How many wins was achieved by the oldest racer? Indicate his/her full name.",
    "SELECT T1.`forename`, T1.`surname` FROM drivers AS T1 INNER JOIN ( SELECT `forename`, `surname` FROM drivers ORDER BY `dob` ASC LIMIT 1 ) AS T2 ON T1.`forename` = T2.`forename` AND T1.`surname` = T2.`surname`\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time a driver had ever spent at a pit stop?",
    "SELECT MAX(T1.duration) FROM pitStops AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'British Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "Among all the lap records set on various circuits, what is the time for the fastest one?",
    "SELECT MIN(T1.time) FROM lapTimes AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.circuitId = 'suzuka_circuit' AND T2.time != 'None'\t----- bird -----\tformula_1"
  ],
  [
    "What was the longest time that Lewis Hamilton had spent at a pit stop?",
    "SELECT MAX(T1.duration) FROM pitStops AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?",
    "SELECT T1.`stop` FROM pitStops AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`forename` = 'Lewis' AND T2.`surname` = 'Hamilton' AND T1.`raceId` = ( SELECT `raceId` FROM races WHERE `name` = 'Australian Grand Prix' AND `year` = 2011 )\t----- bird -----\tformula_1"
  ],
  [
    "Please list the time each driver spent at the pit stop during the 2011 Australian Grand Prix.",
    "SELECT T1.time FROM drivers AS T1 JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T2.raceId IN ( SELECT raceId FROM races WHERE year = 2011 AND name = 'Australian Grand Prix' ) AND T1.time IS NOT NULL;\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
    "SELECT T2.`raceId` FROM drivers AS T1 INNER JOIN results AS T2 ON T1.`driverId` = T2.`driverId` WHERE T1.`forename` = 'Lewis' AND T1.`surname` = 'Hamilton' ORDER BY T2.`fastestLapTime` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Which driver created the shortest lap time ever record in a Formula_1 race? Please give his full name.",
    "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T2.time = ( SELECT MIN(T1.time) FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId )\t----- bird -----\tformula_1"
  ],
  [
    "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?",
    "SELECT T1.position FROM races AS T1 JOIN drivers AS T2 ON T1.driverId = T2.driverId JOIN lapTimes AS T3 ON T1.driverId = T3.driverId JOIN results AS T4 ON T3.driverId = T4.driverId JOIN constructorResults AS T5 ON T1.raceId = T5.raceId JOIN constructorStandings AS T6 ON T5.constructorId = T6.constructorId JOIN driverStandings AS T7 ON T1.driverId = T7.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton' AND T4.time IS NOT NULL ORDER BY T3.time ASC LIMIT 1;\t----- bird -----\tformula_1"
  ],
  [
    "What is the lap record for the Austrian Grand Prix Circuit?",
    "SELECT T2.`time` FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.`raceId` = T2.`raceId` WHERE T1.`name` = 'Austrian Grand Prix' ORDER BY T2.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the lap records for the circuits in Italy.",
    "SELECT T1.`time` FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.`raceId` = T2.`raceId` WHERE T2.`location` = 'Italy' ORDER BY T1.`time` ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?",
    "SELECT raceId FROM lapTimes WHERE `circuitId` = ( SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit' ) AND `fastestLapTime` = ( SELECT `fastestLapTime` FROM lapTimes WHERE `circuitId` = ( SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit' ) ) GROUP BY raceId HAVING COUNT(DISTINCT driverId) = ( SELECT COUNT(DISTINCT driverId) FROM lapTimes WHERE `circuitId` = ( SELECT circuitId FROM circuits WHERE name = 'Austrian Grand Prix Circuit' ) )\t----- bird -----\tformula_1"
  ],
  [
    "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
    "SELECT T1.duration FROM pitStops AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN lapTimes AS T3 ON T2.resultId = T3.resultId JOIN races AS T4 ON T2.raceId = T4.raceId WHERE T4.name = 'Austrian Grand Prix' ORDER BY T1.duration ASC LIMIT 1\t----- bird -----\tformula_1"
  ],
  [
    "Please list the location coordinates of the circuits whose lap record is 1:29.488.",
    "SELECT T1.lat, T1.lng FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitId = T2.circuitId WHERE T2.name = 'Belgian Grand Prix'\t----- bird -----\tformula_1"
  ],
  [
    "What was the average time in milliseconds Lewis Hamilton spent at a pit stop during Formula_1 races?",
    "SELECT AVG(T1.`milliseconds`) FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.`driverId` = T2.`driverId` WHERE T2.`forename` = 'Lewis' AND T2.`surname` = 'Hamilton'\t----- bird -----\tformula_1"
  ],
  [
    "What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?",
    "SELECT AVG(T1.milliseconds) FROM races AS T1 JOIN lapTimes AS T2 ON T1.raceId = T2.raceId WHERE T1.country = 'Italy'\t----- bird -----\tformula_1"
  ],
  [
    "Which player has the highest overall rating? Indicate the player's api id.",
    "SELECT `player_api_id` FROM Player_Attributes WHERE `overall_rating` = ( SELECT MAX(`overall_rating`) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the height of the tallest player? Indicate his name.",
    "SELECT T1.player_name FROM Player_Attributes AS T1 JOIN ( SELECT MAX(height) AS max_height FROM Player_Attributes ) AS T2 ON T1.height = T2.max_height WHERE T1.height IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the player with the lowest potential?",
    "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT MIN(T1.potential) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
    "SELECT COUNT(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Team_Attributes AS T2 ON T1.player_api_id = T2.team_api_id WHERE T1.overall_rating >= 60 AND T1.overall_rating < 65 AND T2.defensive_work_rate = 'low'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
    "SELECT id FROM Player WHERE player_api_id IN ( SELECT player_api_id FROM ( SELECT player_api_id, MAX(crossing) AS max_crossing FROM Player_Attributes GROUP BY player_api_id ) AS subquery ORDER BY max_crossing DESC LIMIT 5 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most goals in the 2016 season?",
    "SELECT T1.name FROM League AS T1 JOIN Team AS T2 ON T1.id = T2.id JOIN Team_Attributes AS T3 ON T2.team_api_id = T3.team_api_id JOIN Match AS T4 ON T4.away_team_api_id = T2.team_api_id WHERE T4.season = '2015/2016' GROUP BY T1.id ORDER BY SUM(T4.home_team_goal + T4.away_team_goal) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which home team had lost the fewest matches in the 2016 season?",
    "SELECT COUNT(`home_team_api_id`) FROM Match WHERE `season` = '2015/2016' AND `home_team_goal` = `away_team_goal`\t----- bird -----\teuropean_football_2"
  ],
  [
    "Indicate the full names of the top 10 players with the highest number of penalties.",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.penalties DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "In Scotland Premier League, which away team won the most during the 2010 season?",
    "SELECT T1.away_team_api_id FROM Match AS T1 INNER JOIN ( SELECT T2.away_team_api_id FROM Match AS T2 INNER JOIN ( SELECT T3.away_team_api_id FROM Match AS T3 INNER JOIN ( SELECT T4.away_team_api_id FROM Match AS T4 WHERE T4.season = '2009/2010' GROUP BY T4.away_team_api_id ORDER BY SUM(T4.away_team_goal) DESC LIMIT 1 ) AS T5 ON T3.away_team_api_id = T5.away_team_api_id ) AS T6 ON T2.away_team_api_id = T6.away_team_api_id ) AS T7 ON T1.away_team_api_id = T7.away_team_api_id\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the speed in which attacks are put together of the top 4 teams with the highest build Up Play Speed?",
    "SELECT T1.`team_api_id`, T1.`buildUpPlaySpeed`, T1.`buildUpPlaySpeedClass` FROM Team_Attributes AS T1 ORDER BY T1.`buildUpPlaySpeed` DESC LIMIT 4\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which League had the most matches end as draw in the 2016 season?",
    "SELECT L.`name` FROM League AS L JOIN Match AS M ON L.id = M.league_id WHERE M.season = '2015/2016' GROUP BY L.id HAVING MAX(SUM(home_team_goal = away_team_goal)) ORDER BY MAX(SUM(home_team_goal = away_team_goal)) DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
    "SELECT TIMESTAMPDIFF(YEAR, birthday, date) AS age FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN League ON Player.country_id = League.country_id JOIN Team ON Player.team_fifa_api_id = Team.team_fifa_api_id JOIN Match ON Player.team_fifa_api_id = Match.away_team_api_id WHERE sprint_speed >= 97 AND date >= '2013-01-01 00:00:00' AND date < '2016-01-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the name of the league with the highest matches of all time and how many matches were played in the said league.",
    "SELECT T2.name FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.match_api_id = ( SELECT MAX(T1.match_api_id) FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average height of players born between 1990 and 1995?",
    "SELECT AVG(T1.height) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday >= '1990-01-01 00:00:00' AND T2.birthday < '1996-01-01 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the players' api id who had the highest above average overall ratings in 2010.",
    "SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.date LIKE '2010-%' ORDER BY T1.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.",
    "SELECT T1.`team_fifa_api_id` FROM Team_Attributes AS T1 WHERE T1.`buildUpPlaySpeed` BETWEEN 51 AND 59 AND T1.`buildUpPlaySpeedClass` IN ('Balanced', 'Fast', 'Slow')\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the long name of teams with above-average build-up play passing in 2012.",
    "SELECT T1.team_long_name FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.team_api_id = T2.away_team_api_id INNER JOIN Team AS T3 ON T2.away_team_api_id = T3.team_api_id WHERE T1.buildUpPlayPassing > ( SELECT AVG(buildUpPlayPassing) FROM Match AS T4 INNER JOIN Team AS T5 ON T4.away_team_api_id = T5.team_api_id WHERE strftime('%Y', T4.date) = '2012' ) AND T2.season = '2012/2013' AND T1.buildUpPlayPassing IS NOT NULL AND T1.buildUpPlayPassing > ( SELECT MAX(buildUpPlayPassing) FROM Match AS T4 INNER JOIN Team AS T5 ON T4.away_team_api_id = T5.team_api_id WHERE strftime('%Y', T4.date) = '2012' );\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",
    "SELECT CAST(COUNT(CASE WHEN T1.preferred_foot = 'left' AND T2.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.player_fifa_api_id) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.birthday BETWEEN '1987-01-01 00:00:00' AND '1992-12-31 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 5 leagues in ascending order of the number of goals made in all seasons combined.",
    "SELECT league_id FROM ( SELECT home_team_api_id, SUM(home_team_goal + away_team_goal) as total_goals FROM Match GROUP BY home_team_api_id ) subquery ORDER BY total_goals ASC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "Find the average number of long-shot done by Ahmed Samir Farag.",
    "SELECT AVG(`long_shots`) FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Ahmed Samir Farag' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
    "SELECT T2.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id JOIN Match AS T3 ON T2.player_api_id = T3.away_player_11 WHERE T1.height > 180 GROUP BY T2.player_name HAVING MAX(T1.height) > 180 ORDER BY AVG(T3.heading_accuracy) DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
    "SELECT SUM(T2.chanceCreationPassing) / COUNT(T1.`team_long_name`) AS average_chance_creation_passing FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.`team_api_id` = T2.`home_team_api_id` WHERE T2.`season` = '2014/2015' AND T1.`buildUpPlayDribblingClass` = 'Normal' AND T1.`team_long_name` IS NOT NULL GROUP BY T1.`team_long_name` ORDER BY average_chance_creation_passing DESC\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
    "SELECT T1.name FROM League AS T1 JOIN Match AS T2 ON T1.id = T2.away_team_api_id JOIN Team AS T3 ON T2.away_team_api_id = T3.team_api_id WHERE T2.season = '2009/2010' GROUP BY T2.away_team_api_id HAVING AVG(T2.away_team_goal) > AVG(T2.home_team_goal)\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the short name of the football team Queens Park Rangers?",
    "SELECT T1.`team_short_name` FROM Team AS T1 WHERE T1.`team_api_id` = ( SELECT T2.`team_api_id` FROM Team AS T2 WHERE T2.`team_long_name` = 'Queens Park Rangers' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football players with a birthyear of 1970 and a birthmonth of October.",
    "SELECT T1.* FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id JOIN League AS T3 ON T1.country_id = T3.id JOIN Team AS T4 ON T1.player_fifa_api_id = T4.team_fifa_api_id JOIN Team_Attributes AS T5 ON T4.team_api_id = T5.team_api_id WHERE T2.year = '1970' AND T2.month = '10'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the attacking work rate of the football playerr Franco Zennaro?",
    "SELECT T2.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Franco Zennaro'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the ADO Den Haag team freedom of movement in the 1st two thirds of the pitch?",
    "SELECT `buildUpPlaySpeedClass` FROM Team_Attributes WHERE `team_fifa_api_id` = ( SELECT `team_fifa_api_id` FROM Team WHERE `team_long_name` = 'ADO Den Haag' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
    "SELECT T1.`player_api_id` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` INNER JOIN Match AS T3 ON T1.`player_api_id` = T3.`away_player_11` WHERE T1.`player_name` = 'Francois Affolter' AND T2.`date` = '2014-09-18 00:00:00' AND T2.`heading_accuracy` = 'right'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the overall rating of the football player Gabriel Tamas in year 2011?",
    "SELECT T1.`overall_rating` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Gabriel Tamas'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
    "SELECT COUNT(`id`) FROM Match WHERE `league_id` = ( SELECT `league_id` FROM League WHERE `name` = 'Scotland Premier League' ) AND `season` = '2015/2016'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the preferred foot when attacking of the youngest football player?",
    "SELECT T1.preferred_foot FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T2.birthday DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest potential score.",
    "SELECT T1.* FROM Player_Attributes AS T1 WHERE T1.potential = ( SELECT MAX(T2.potential) FROM Player_Attributes AS T2 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among all the players whose weight is under 130, how many of them preferred foot in attacking is left?",
    "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.weight < 130 AND T1.preferred_foot = 'left' AND T2.preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football teams that has a chance creation passing class of Risky. Inidcate its short name only.",
    "SELECT T1.team_short_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Risky';\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the defensive work rate of the football player David Wilson\n?",
    "SELECT T2.`defensive_work_rate` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` = 'David Wilson'\t----- bird -----\teuropean_football_2"
  ],
  [
    "When is the birthday of the football player who has the highest overall rating?",
    "SELECT T1.birthday FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`overall_rating` = ( SELECT MAX(`overall_rating`) FROM Player_Attributes ) AND T1.`birthday` IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of the football league in the country of Netherlands?",
    "SELECT `name` FROM League WHERE `country_id` = ( SELECT `id` FROM Country WHERE `name` = 'Netherlands' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
    "SELECT AVG(T1.`home_team_goal`) FROM Match AS T1 INNER JOIN Country AS T2 ON T1.`country_id` = T2.`id` WHERE T2.`name` = 'Poland' AND T1.`season` = '2010/2011'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who has the highest average finishing rate between the highest and shortest football player?",
    "SELECT T1.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = ( SELECT MAX(T3.finishing) FROM Player_Attributes AS T3 JOIN Player AS T4 ON T3.player_api_id = T4.player_api_id WHERE T3.height = ( SELECT MIN(T5.height) FROM Player_Attributes AS T5 JOIN Player AS T6 ON T5.player_api_id = T6.player_api_id WHERE T5.finishing = ( SELECT MAX(T3.finishing) FROM Player_Attributes AS T3 JOIN Player AS T4 ON T3.player_api_id = T4.player_api_id ) ) )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list player names which are higher than 180.",
    "SELECT T1.`player_name` FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.height > 180\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players were born after 1990?",
    "SELECT COUNT(*) FROM Player WHERE strftime('%Y', birthday) > '1990'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players whose first names are Adam and weigh more than 170?",
    "SELECT COUNT(*) FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id JOIN Team_Attributes ON Player_Attributes.team_fifa_api_id = Team_Attributes.team_fifa_api_id JOIN Team ON Team.team_api_id = Team_Attributes.team_api_id JOIN Match ON Player.player_api_id = Match.away_player_11 WHERE Player.first_name = 'Adam' AND Player.weight > 170\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which players had an overall rating of over 80 from 2008 to 2010? Please list player names.",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.overall_rating > 80 AND strftime('%Y', T1.date) BETWEEN '2008' AND '2010'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Doran's potential score?",
    "SELECT T2.potential FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Doran'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List out of players whose preferred foot is left.",
    "SELECT T1.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'left'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list all team names which the speed class is fast.",
    "SELECT T1.team_long_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Fast'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the passing class of CLB team?",
    "SELECT T2.buildUpPlaySpeedClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T2.`team_short_name` = ( SELECT T1.`team_short_name` FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'CLB' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which teams have build up play passing more than 70? Please list their short names.",
    "SELECT T1.`team_short_name` FROM Team_Attributes AS T1 INNER JOIN Match AS T2 ON T1.`team_api_id` = T2.`away_team_api_id` WHERE T1.`buildUpPlaySpeed` > 70 ORDER BY T1.`team_short_name`\t----- bird -----\teuropean_football_2"
  ],
  [
    "From 2010 to 2015, what was the average overall rating of players who are higher than 170?",
    "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN League AS T3 ON T1.league_id = T3.id INNER JOIN Team AS T4 ON T3.country_id = T4.country_id INNER JOIN Match AS T5 ON T5.away_team_api_id = T4.team_api_id WHERE T1.overall_rating > 170 AND T1.date BETWEEN strftime('%Y', date) BETWEEN '2010' AND '2015' GROUP BY T1.overall_rating\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which football player has the shortest height?",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN (SELECT MIN(`height`) AS `min_height` FROM Player ORDER BY `height` ASC) AS T2 ON T1.`height` = T2.`min_height`\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the league Italy Serie A from?",
    "SELECT `name` FROM League WHERE `country_id` = (SELECT `id` FROM Country WHERE `name` = 'Italy') AND `name` = 'Italy Serie A'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
    "SELECT T1.team_short_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id JOIN Player_Attributes AS T3 ON T1.team_api_id = T3.team_fifa_api_id JOIN Match AS T4 ON T2.team_api_id = T4.home_team_api_id JOIN Player AS T5 ON T4.home_player_11 = T5.player_api_id WHERE T1.buildUpPlaySpeed = 31 AND T1.buildUpPlayDribbling = 53 AND T1.buildUpPlayPassing = 32;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the football player Aaron Doran?",
    "SELECT AVG(`overall_rating`) FROM Player_Attributes WHERE `player_api_id` = ( SELECT `player_api_id` FROM Player WHERE `player_name` = 'Aaron Doran' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?",
    "SELECT COUNT(`id`) FROM Match WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Germany 1. Bundesliga' ) AND strftime('%Y-%m', `date`) BETWEEN '2008-08' AND '2008-10'\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the short name of the football team that had a home team goal of 10?",
    "SELECT T1.team_short_name FROM Match AS T1 JOIN Team AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T1.home_team_goal = 10 GROUP BY T1.home_team_api_id ORDER BY T1.date ASC;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List all the football player with the highest balance score and potential score of 61.",
    "SELECT T1.* FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id JOIN Match AS T3 ON T2.player_api_id = T3.away_player_11 JOIN Team AS T4 ON T3.away_team_api_id = T4.team_api_id WHERE T1.balance = (SELECT MAX(balance) FROM Player_Attributes) AND T1.potential = 61 AND T4.team_long_name = 'Widzew Łódź';\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
    "SELECT T1.`AVG(ball_control)` FROM ( SELECT AVG(T1.`ball_control`) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Abdou Diallo' ) AS T1 - SELECT T1.`AVG(ball_control)` FROM ( SELECT AVG(T1.`ball_control`) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Appindangoye' ) AS T1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the long name for the team GEN?",
    "SELECT `team_long_name` FROM Team WHERE `team_api_id` = ( SELECT `team_api_id` FROM Team WHERE `team_short_name` = 'GEN' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is older, Aaron Lennon or Abdelaziz Barrada?",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`birthday` = ( SELECT T1.`birthday` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` = 'Aaron Lennon' ) AND T1.`player_name` != 'Aaron Lennon' OR T1.`birthday` = ( SELECT T1.`birthday` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` = 'Abdelaziz Barrada' ) AND T1.`player_name` != 'Abdelaziz Barrada'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player is the tallest?",
    "SELECT T1.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IS NOT NULL ORDER BY T1.height DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
    "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'left' AND T1.attacking_work_rate = 'low'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country is the Belgium Jupiler League from?",
    "SELECT `name` FROM Country WHERE `id` = ( SELECT `country_id` FROM League WHERE `name` = 'Belgium Jupiler League' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the leagues from Germany.",
    "SELECT `name` FROM League WHERE `country_id` = ( SELECT `id` FROM Country WHERE `name` = 'Germany' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which player has the strongest overall strength?",
    "SELECT T1.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Match AS T3 ON T1.player_api_id = T3.away_player_11 WHERE T1.overall_rating = ( SELECT MAX(T4.overall_rating) FROM Player_Attributes AS T4 INNER JOIN Player AS T5 ON T4.player_api_id = T5.player_api_id INNER JOIN Match AS T6 ON T4.player_api_id = T6.away_player_11 ) AND T1.overall_rating IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",
    "SELECT COUNT(T1.id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_api_id INNER JOIN Team_Attributes AS T3 ON T1.id = T3.team_api_id WHERE T1.birthday < '1986-01-01' AND T2.defensive_work_rate = 'high' AND T3.buildUpPlaySpeedClass = 'Balanced'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which of these players performs the best in crossing actions, Alexis, Ariel Borysiuk or Arouna Kone?",
    "SELECT T1.player_api_id FROM Player_Attributes AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT MAX(potential) FROM Player_Attributes ) ORDER BY T2.overall_rating DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What's the heading accuracy of Ariel Borysiuk?",
    "SELECT T1.`heading_accuracy` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Ariel Borysiuk' AND T2.`heading_accuracy` IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players whose height is over 180, how many of them have a volley score of over 70?",
    "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id JOIN League AS T3 ON T1.league_id = T3.id JOIN Team AS T4 ON T3.country_id = T4.country_id JOIN Team_Attributes AS T5 ON T4.team_api_id = T5.team_api_id WHERE T1.height > 180 AND T1.volley > 70 AND T3.name = 'Belgium Jupiler League' AND T4.name = 'Widzew Łódź' AND T5.buildUpPlaySpeed = 'Balanced' AND T1.height IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please list the names of the players whose volley score and dribbling score are over 70.",
    "SELECT T2.`player_name` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`volleys` > 70 AND T1.`dribbling` > 70\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches in the 2008/2009 season were held in Belgium?",
    "SELECT COUNT(`id`) FROM Match WHERE `season` = '2008/2009' AND `country_id` = ( SELECT `country_id` FROM Match WHERE `season` = '2008/2009' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the long passing score of the oldest player?",
    "SELECT long_passing FROM Player_Attributes WHERE player_api_id = ( SELECT player_api_id FROM Player ORDER BY birthday ASC LIMIT 1 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many matches were held in the Belgium Jupiler League in April, 2009?",
    "SELECT COUNT(`id`) FROM Match WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Belgium Jupiler League' ) AND strftime('%Y', `date`) = '2009' AND strftime('%m', `date`) = '04'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most matches in the 2008/2009 season?",
    "SELECT `name` FROM League WHERE `id` = ( SELECT `league_id` FROM Match WHERE `season` = '2008/2009' ORDER BY `match_api_id` DESC LIMIT 1 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average overall rating of the players born before the year 1986?",
    "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T2.birthday) < '1986'\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
    "SELECT (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Ariel Borysiuk') / (SELECT overall_rating FROM Player_Attributes WHERE player_name = 'Paulin Puel') * 100 AS percentage_difference FROM Player_Attributes WHERE player_name IN ('Ariel Borysiuk', 'Paulin Puel');\t----- bird -----\teuropean_football_2"
  ],
  [
    "How much is the average build up play speed of the Heart of Midlothian team?",
    "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_short_name` = 'Heart of Midlothian' AND T2.buildUpPlaySpeed IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the average overall rating of Pietro Marino.",
    "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Pietro Marino'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Aaron Lennox's total crossing score?",
    "SELECT SUM(T2.crossing) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T1.`player_name` = 'Aaron Lennox'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is Ajax's highest chance creation passing score and what is it classified as?",
    "SELECT T2.`chanceCreationPassingClass` FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_short_name` = 'Ajax' ORDER BY T2.`chanceCreationPassing` DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which foot is preferred by Abdou Diallo?",
    "SELECT T1.preferred_foot FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id JOIN Team AS T3 ON T1.player_api_id = T3.player_api_id JOIN Match AS T4 ON T1.player_api_id = T4.away_player_11 WHERE T1.player_name = 'Abdou Diallo' LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the highest overall rating received by Dorlan Pabon?",
    "SELECT MAX(T2.overall_rating) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.player_name = 'Dorlan Pabon'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average number of goals made by Parma as the away team while playing in Italy?",
    "SELECT AVG(T1.`away_team_goal`) FROM Match AS T1 INNER JOIN Team AS T2 ON T1.`away_team_api_id` = T2.`team_api_id` WHERE T2.`team_long_name` = 'Parma'\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
    "SELECT T1.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id JOIN Match AS T3 ON T1.player_api_id = T3.away_player_11 JOIN Team AS T4 ON T3.away_team_api_id = T4.team_api_id WHERE T1.overall_rating = 77 AND T1.date = '2016-06-23' AND T2.birthday IS NOT NULL ORDER BY T2.birthday ASC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the overall rating for Aaron Mooy on 2016/2/4?",
    "SELECT T1.`overall_rating` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Aaron Mooy'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the potiential for Francesco Parravicini on 2010/8/30?",
    "SELECT T1.`potential` FROM Player_Attributes AS T1 WHERE T1.`player_api_id` = ( SELECT T2.`player_api_id` FROM Player AS T2 WHERE T2.`player_name` = 'Francesco Parravicini' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was Francesco Migliore's attacking work rate on 2015/5/1?",
    "SELECT T1.attacking_work_rate FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Francesco Migliore' AND T1.date = '2015-05-01 00:00:00' ORDER BY T1.attacking_work_rate DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the defensive work rate for Kevin Berigaud on 2013/2/22.",
    "SELECT T1.`defensive_work_rate` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Kevin Berigaud' AND T1.`date` = '2013-02-22 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
    "SELECT T1.date FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Kevin Constant' ORDER BY T1.crossing DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the build up play speed class for \"Willem II\" on 2011/2/22?",
    "SELECT T1.buildUpPlaySpeedClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id JOIN Match AS T3 ON T1.team_api_id = T3.away_team_api_id WHERE T3.date = '2011-02-22 00:00:00' AND T1.team_long_name = 'Willem II' AND T2.buildUpPlaySpeedClass IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
    "SELECT T2.buildUpPlaySpeedClass FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id JOIN Team AS T3 ON T1.country_id = T3.id JOIN Country AS T4 ON T3.country_id = T4.id WHERE T4.name = 'LEI';\t----- bird -----\teuropean_football_2"
  ],
  [
    "Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.",
    "SELECT T3.buildUpPlaySpeedClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id JOIN Match AS T3 ON T2.id = T3.away_team_api_id WHERE T3.date = '2010-02-22' AND T3.away_team_long_name = 'FC Lorient' AND T3.away_team_api_id = T1.team_api_id AND T3.away_team_long_name = 'FC Lorient';\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
    "SELECT T2.buildUpPlaySpeedClass FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` INNER JOIN Match AS T3 ON T2.`team_api_id` = T3.`home_team_api_id` WHERE T3.`date` = '2013-09-20 00:00:00' AND T2.`team_long_name` = 'PEC Zwolle' AND T2.`buildUpPlaySpeedClass` IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
    "SELECT T2.`buildUpPlaySpeedClass` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` INNER JOIN Match AS T3 ON T1.`team_api_id` = T3.`home_team_api_id` WHERE T3.`date` = '2010-02-22 00:00:00' AND T1.`team_long_name` = 'Hull City' AND T3.`away_team_api_id` = (SELECT T4.`team_api_id` FROM Team AS T4 INNER JOIN Team_Attributes AS T5 ON T4.`team_api_id` = T5.`team_api_id` WHERE T4.`team_long_name` = 'Hull City' AND T5.`date` = '2010-02-22 00:00:00' ORDER BY T5.`buildUpPlaySpeedClass` DESC LIMIT 1) GROUP BY T2.`buildUpPlaySpeedClass`\t----- bird -----\teuropean_football_2"
  ],
  [
    "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
    "SELECT T2.buildUpPlaySpeedClass FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_long_name` = 'Hannover 96' AND T1.`date` = '2015-09-10 00:00:00' AND T2.buildUpPlaySpeedClass IS NOT NULL;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
    "SELECT AVG(T1.overall_rating) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND T1.date BETWEEN '2007-02-22 00:00:00' AND '2016-04-21 00:00:00'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
    "error: No SQL found in the input string\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down 5 tallest players' name.",
    "SELECT T1.player_name FROM Player_Attributes AS T1 JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id JOIN Team AS T3 ON T1.player_fifa_api_id = T3.team_fifa_api_id JOIN League AS T4 ON T3.country_id = T4.country_id JOIN Team_Attributes AS T5 ON T3.team_api_id = T5.team_api_id WHERE T1.height IS NOT NULL ORDER BY T1.height DESC LIMIT 5\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the player api id of 10 heaviest players?",
    "SELECT T1.`player_api_id` FROM Player AS T1 ORDER BY T1.`weight` DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the name of players who are 35 years old and above.",
    "SELECT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id JOIN League AS T3 ON T1.country_id = T3.id JOIN Team AS T4 ON T1.team_fifa_api_id = T4.team_fifa_api_id JOIN Team_Attributes AS T5 ON T4.team_api_id = T5.team_api_id WHERE T2.overall_rating >= 90 AND T2.potential >= 80 AND T2.birthday IS NOT NULL AND T1.birthday IS NOT NULL AND (T2.birthday - T1.birthday) > 34\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many home team goal have been scored by Aaron Lennon?",
    "SELECT COUNT(T2.goals) FROM Player AS T1 INNER JOIN Match AS T2 ON T1.id = T2.home_player_11 WHERE T1.player_name = 'Aaron Lennon'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Sum up the away team goal scored by both Daan Smith and Filipe Ferreira.",
    "SELECT SUM(TA.away_team_goal_scored) FROM Match AS T1 JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id JOIN Player AS P1 ON T1.away_player_11 = P1.player_api_id JOIN Player AS P2 ON T1.away_player_10 = P2.player_api_id JOIN Player AS P3 ON T1.away_player_9 = P3.player_api_id JOIN Player AS P4 ON T1.away_player_8 = P4.player_api_id JOIN Player AS P5 ON T1.away_player_7 = P5.player_api_id JOIN Player AS P6 ON T1.away_player_6 = P6.player_api_id JOIN Player AS P7 ON T1.away_player_5 = P7.player_api_id JOIN Player AS P8 ON T1.away_player_4 = P8.player_api_id JOIN Player AS P9 ON T1.away_player_3 = P9.player_api_id JOIN Player AS P10 ON T1.away_player_2 = P10.player_api_id JOIN Player AS P11 ON T1.away_player_1 = P11.player_api_id WHERE P1.player_name = 'Daan Smith' AND P2.player_name = 'Filipe Ferreira' GROUP BY T2.team_api_id;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Calculate the total home team goal scored by players whose age are 30 years old and below.",
    "SELECT SUM(T1.`home_team_score`) FROM Match AS T1 INNER JOIN Team AS T2 ON T1.`home_team_api_id` = T2.`team_api_id` WHERE T1.`date` >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) AND T1.`date` <= DATE_SUB(CURRENT_DATE, INTERVAL 0 YEAR) AND T2.`team_long_name` = 'Home Team' AND T2.`team_fifa_api_id` IN ( SELECT T3.`team_fifa_api_id` FROM Team AS T3 INNER JOIN Team_Attributes AS T4 ON T3.`team_api_id` = T4.`team_api_id` WHERE T4.`buildUpPlaySpeed` = 'Fast' AND T4.`buildUpPlaySpeedClass` = 'Balanced' ) AND T2.`team_fifa_api_id` IN ( SELECT T5.`player_fifa_api_id` FROM Player_Attributes AS T5 INNER JOIN Player AS T6 ON T5.`player_api_id` = T6.`player_api_id` WHERE T6.`birthday` < 31 AND T6.`age` <= 30 ) AND T2.`team_fifa_api_id` IN ( SELECT T7.`player_fifa_api_id` FROM Player_Attributes AS T7 INNER JOIN Player AS T8 ON T7.`player_api_id` = T8.`player_api_id` WHERE T8.`birthday` < 31 AND T8.`age` <= 30 )\t----- bird -----\teuropean_football_2"
  ],
  [
    "State 10 names of the strongest players.",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY T1.overall_rating DESC LIMIT 10\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the name of players with the highest potential?",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = ( SELECT MAX(T3.potential) FROM Player_Attributes AS T3 INNER JOIN Player AS T4 ON T3.player_api_id = T4.player_api_id )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.attacking_work_rate = ( SELECT MAX(T3.attacking_work_rate) FROM Player_Attributes AS T3 INNER JOIN Player AS T4 ON T3.player_api_id = T4.player_api_id ) AND T1.attacking_work_rate IS NOT NULL AND T1.attacking_work_rate = ( SELECT MAX(T5.attacking_work_rate) FROM Player_Attributes AS T5 INNER JOIN Player AS T6 ON T5.player_api_id = T6.player_api_id )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Among the players with finishing rate of 1, pick the eldest player and state the player's name.",
    "SELECT `player_api_id` FROM Player_Attributes WHERE `finishing` = ( SELECT MAX(`finishing`) FROM Player_Attributes )\t----- bird -----\teuropean_football_2"
  ],
  [
    "State the name of players who came from Belgium.",
    "SELECT T1.`player_name` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` INNER JOIN Country AS T3 ON T1.`country_id` = T3.`id` WHERE T3.`name` = 'Belgium' AND T2.`player_api_id` IN ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Country AS T2 ON T1.`country_id` = T2.`id` WHERE T2.`name` = 'Belgium' ) AND T1.`player_api_id` NOT IN ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Country AS T2 ON T1.`country_id` = T2.`id` WHERE T2.`name` != 'Belgium' ) AND T1.`player_api_id` NOT IN ( SELECT T1.`player_api_id` FROM Player_Attributes AS T1 INNER JOIN Country AS T2 ON T1.`country_id` = T2.`id` WHERE T2.`name` != 'Belgium' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Locate players with vision scores of 90 and above, state the country of these players.",
    "SELECT T1.country_id FROM Country AS T1 INNER JOIN Player_Attributes AS T2 ON T1.id = T2.player_fifa_api_id INNER JOIN League AS T3 ON T1.id = T3.country_id INNER JOIN Team AS T4 ON T3.id = T4.country_id INNER JOIN Team_Attributes AS T5 ON T4.id = T5.team_fifa_api_id INNER JOIN Match AS T6 ON T4.id = T6.away_team_api_id WHERE T2.vision > 89\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which country's players have the heaviest average weights?",
    "SELECT T1.player_api_id, T1.player_name FROM Player_Attributes AS T1 INNER JOIN Country AS T2 ON T1.player_fifa_api_id = T2.id WHERE T2.name = ( SELECT T3.name FROM Country AS T3 ORDER BY T3.id DESC LIMIT 1 ) INNER JOIN Team AS T4 ON T3.id = T4.country_id INNER JOIN League AS T5 ON T4.id = T5.country_id INNER JOIN Match AS T6 ON T5.id = T6.country_id INNER JOIN Team_Attributes AS T7 ON T4.team_api_id = T7.team_api_id INNER JOIN Player_Attributes AS T8 ON T8.player_api_id = T6.away_player_11 WHERE T8.avg_weight = ( SELECT MAX(T9.avg_weight) FROM Player_Attributes AS T9 WHERE T9.player_api_id = T8.player_api_id ) ORDER BY T8.avg_weight DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "List down the long name for slow speed class team.",
    "SELECT T1.team_long_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlaySpeedClass = 'Slow'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are the short name of team who played safe while creating chance of passing?",
    "SELECT T1.team_short_name FROM Team_Attributes AS T1 JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id JOIN Match AS T3 ON T2.team_api_id = T3.away_team_api_id WHERE T3.stage = 'Final' AND T3.chanceCreationPassingClass = 'Safe' LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the average heights of Italy players?",
    "SELECT AVG(T1.height) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id INNER JOIN Country AS T3 ON T2.country_id = T3.id INNER JOIN League AS T4 ON T3.id = T4.id INNER JOIN Team AS T5 ON T4.id = T5.country_id INNER JOIN Team_Attributes AS T6 ON T5.team_api_id = T6.team_api_id INNER JOIN Match AS T7 ON T5.team_api_id = T7.home_team_api_id WHERE T3.name = 'Italy' AND T1.height IS NOT NULL\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the names of top three football players who are over 180 cm tall in alphabetical order.",
    "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height > 180 ORDER BY T1.height DESC LIMIT 3\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many football players born after the 1990s have the first name \"Aaron\"?",
    "SELECT COUNT(T1.`player_api_id`) FROM Player AS T1 WHERE T1.`player_name` LIKE 'Aaron%' AND T1.`birthday` > '1990'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the difference between players 6 and 23's jumping scores?",
    "SELECT `jumping` - (SELECT `jumping` FROM Player_Attributes WHERE `id` = 23) FROM Player_Attributes WHERE `id` = 6\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide top three football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
    "SELECT T1.id FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.potential = (SELECT MIN(T1.potential) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'right')\t----- bird -----\teuropean_football_2"
  ],
  [
    "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
    "SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.preferred_foot = 'left' AND T1.crossing = ( SELECT MAX(T3.crossing) FROM Player_Attributes AS T3 INNER JOIN Player AS T4 ON T3.player_api_id = T4.player_api_id WHERE T3.preferred_foot = 'left' )\t----- bird -----\teuropean_football_2"
  ],
  [
    "What percentage of players have a strength and stamina score of more than 80?",
    "SELECT CAST((SELECT COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.strength > 80 AND T1.stamina > 80 ) AS REAL) * 100 / COUNT(T1.id) FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.strength > 80 AND T1.stamina > 80\t----- bird -----\teuropean_football_2"
  ],
  [
    "In what country did the Poland Ekstraklasa take place?",
    "SELECT `name` FROM Country WHERE `name` = 'Poland'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
    "SELECT SUM(home_team_goal) + SUM(away_team_goal) FROM Match WHERE date = '2008-09-24';\t----- bird -----\teuropean_football_2"
  ],
  [
    "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
    "SELECT T1.`sprint_speed`, T1.`agility`, T1.`acceleration` FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`player_name` = 'Alexis Blin'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Does the KSV Cercle Brugge team have a slow, balanced or fast speed class?",
    "SELECT T2.`buildUpPlaySpeedClass` FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.`team_api_id` = T2.`team_api_id` WHERE T1.`team_short_name` = 'KSV Cercle Brugge' GROUP BY T2.`buildUpPlaySpeedClass` HAVING T2.`buildUpPlaySpeedClass` IN ('Slow', 'Balanced', 'Fast')\t----- bird -----\teuropean_football_2"
  ],
  [
    "In the 2015–2016 season, how many games were played in the Italian Serie A league?",
    "SELECT COUNT(`id`) FROM Match WHERE `league_id` = ( SELECT `id` FROM League WHERE `name` = 'Italian Serie A' ) AND `season` = '2015/2016'\t----- bird -----\teuropean_football_2"
  ],
  [
    "What was the highest score of the home team in the Netherlands Eredivisie league?",
    "SELECT MAX(T1.`home_team_goal`) FROM Match AS T1 INNER JOIN League AS T2 ON T1.`league_id` = T2.`id` WHERE T2.`name` = 'Netherlands Eredivisie'\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please state the finishing rate and curve score of the player who has the heaviest weight.",
    "SELECT T1.`finishing`, T1.`curve` FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.`player_api_id` = T2.`player_api_id` WHERE T2.`weight` = ( SELECT MAX(weight) FROM Player )\t----- bird -----\teuropean_football_2"
  ],
  [
    "Which league had the most games in the 2015–2016 season?",
    "SELECT T1.name FROM Country AS T1 JOIN League AS T2 ON T1.id = T2.country_id JOIN Team AS T3 ON T2.id = T3.league_id JOIN Team_Attributes AS T4 ON T3.team_api_id = T4.team_api_id JOIN Match AS T5 ON T3.team_api_id = T5.away_team_api_id WHERE T5.season = '2015/2016' GROUP BY T3.team_long_name ORDER BY COUNT(T5.id) DESC LIMIT 1;\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please provide the full name of the away team that scored the most goals.",
    "SELECT T2.team_long_name FROM Match AS T1 INNER JOIN Team AS T2 ON T1.away_team_api_id = T2.team_api_id ORDER BY T1.away_team_goal DESC LIMIT 1\t----- bird -----\teuropean_football_2"
  ],
  [
    "Please name one player whose overall strength is the greatest.",
    "SELECT MAX(`overall_rating`) FROM Player_Attributes\t----- bird -----\teuropean_football_2"
  ],
  [
    "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
    "SELECT CAST((COUNT(id) FILTER (WHERE height < 180 AND overall_rating > 70)) AS REAL) / COUNT(id) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id JOIN League ON Player_Attributes.country_id = League.country_id JOIN Team ON Player_Attributes.team_fifa_api_id = Team.team_fifa_api_id JOIN Match ON Player_Attributes.player_fifa_api_id = Match.away_player_11 WHERE height < 180 AND overall_rating > 70 GROUP BY id\t----- bird -----\teuropean_football_2"
  ],
  [
    "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
    "SELECT (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '+') - (SELECT COUNT(ID) FROM Patient WHERE SEX = 'M' AND Admission = '-') AS percentage_deviation\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient were born after 1930?",
    "SELECT CAST((SELECT COUNT(`ID`) FROM Patient WHERE `SEX` = 'F' AND YEAR(`Birthday`) > 1930) AS REAL) * 100 / (SELECT COUNT(`ID`) FROM Patient WHERE `SEX` = 'F')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between Year 1930 to 1940, how many percent of them were inpatient?",
    "SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT YEAR(Birthday)) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE YEAR(Birthday) BETWEEN 1930 AND 1940\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?",
    "SELECT COUNT(CASE WHEN Admission = '+' THEN ID ELSE NULL END) / COUNT(CASE WHEN Admission = '-' THEN ID ELSE NULL END) FROM Patient WHERE Diagnosis = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.",
    "SELECT T1.Date FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = '30609'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had.",
    "SELECT `SEX`, `Birthday` FROM Patient WHERE `ID` = 163109\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday of patient with LDH beyond normal range.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`LDH` > 500\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "State the ID and age of patient with positive degree of coagulation.",
    "SELECT T1.age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Examination Date` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with severe degree of thrombosis, list their ID, sex and dieseas the patient is diagnosed with.",
    "SELECT T1.`ID`, T1.`SEX` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Thrombosis` = 2 AND T2.`Description` IS NOT NULL AND T2.`Description` != 'None'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were born in 1937 whose total cholesterol was beyond the normal range.",
    "SELECT T1.* FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` = '1937-01-01' AND T2.`T-CHO` > 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient with albumin level lower than 3.5, list their ID, sex and diagnosis.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Description` FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ALB` < 3.5 AND T2.`ALB` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of female patient had total protein not within the normal range?",
    "SELECT CAST((COUNT(CASE WHEN `SEX` = 'F' AND `TP` < '6.0' OR `TP` > '8.5' THEN `ID` END) AS REAL) / COUNT(`ID`) * 100 FROM Patient JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE `TP` < '6.0' OR `TP` > '8.5' GROUP BY `TP`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",
    "SELECT AVG(T1.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '+' AND T1.`Birthday` >= DATE_SUB(CURDATE(), INTERVAL 50 YEAR)\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Description` = '1997' AND T2.`Admission` = '-' AND T1.`SEX` = 'F'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the age of the youngest patient when they initially arrived at the hospital?",
    "SELECT MIN(YEAR(`First Date`) - YEAR(`Birthday`)) FROM Patient JOIN Examination ON Patient.`ID` = Examination.`ID` WHERE Examination.`First Date` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many of the patients with the most serious thrombosis cases examined in 1997 are women?",
    "SELECT COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Thrombosis` = 1 AND T1.`Examination Date` LIKE '1997-%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the age gap between the youngest and oldest patient with a normal triglyceride recorded?",
    "SELECT MAX(year(Birthday)) - MIN(year(Birthday)) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Laboratory.TG >= 200 AND Laboratory.TG IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.",
    "SELECT T1.Diagnosis FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Birthday = ( SELECT MIN(BIRTHDAY) FROM Patient AS T3 JOIN Examination AS T4 ON T3.ID = T4.ID )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
    "SELECT AVG(T1.`ID` / 12) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Date` BETWEEN '1998-01-01' AND '1998-12-31' AND T2.`SEX` = 'M';\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
    "SELECT T2.`Birthday` - MAX(T1.`Date`) FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
    "SELECT SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= '8.0' THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= '6.5' THEN 1 ELSE 0 END) AS ratio FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.UA <= '8.0' AND T2.SEX = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients hadn't undergone a medical examination until at least a year following their initial hospital visit?",
    "SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE year(Examination.Examination_Date) - year(Patient.First_Date) >= 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many underage patients were examined during the course of the three-year period from 1990 to 1993?",
    "SELECT COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Birthday` < '1990-01-01' AND T2.`Birthday` > '1989-12-31' AND T1.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have elevated total bilirubin count?",
    "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 2.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
    "SELECT MAX(T1.Diagnosis) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.Diagnosis ORDER BY COUNT(T1.Diagnosis) DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of patients examined in the laboratory for the October of the year 1991?",
    "SELECT AVG(AGE) FROM ( SELECT EXTRACT(YEAR FROM Examination.`Examination Date`) - EXTRACT(YEAR FROM '1991-10-01') AS AGE FROM Examination WHERE Examination.`Examination Date` IS NOT NULL ) AS AgeCalculation\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How old was the patient who had the highest hemoglobin count at the time of the examination, and what is the doctor's diagnosis?",
    "SELECT Diagnosis FROM Examination WHERE `HGB` = ( SELECT MAX(`HGB`) FROM Examination ) ORDER BY `HGB` DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the anti-nucleus antibody concentration level for the patient id 3605340 on 1996/12/2?",
    "SELECT T1.`ANA` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ID` = 3605340 AND T1.`Examination Date` = '1996-12-02' AND T1.`ANA` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?",
    "SELECT T1.`KCT` FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` = '1995-09-04' AND T2.`Date` = '1995-09-04' AND T1.`ID` = 2927464 AND T1.`KCT` = 'N' AND T1.`Examination Date` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What was the gender of the first AORTITIS diagnosed patient?",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Description` = 'AORTITIS' ORDER BY T2.`First Date` ASC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed with SLE on 1994/2/19, what was his/her anti-Cardiolipin antibody concentration status on 1993/11/12?",
    "SELECT T1.`aCL IgM` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Description` = '1993-11-12' AND T1.`ID` = ( SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Description` = '1994-02-19' )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
    "SELECT `GPT` FROM Laboratory WHERE `Date` = '1992-06-12'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?",
    "SELECT EXTRACT(YEAR FROM AGE('1992', T1.Birthday)) - EXTRACT(YEAR FROM T1.Date) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Date = '1991-10-21' AND T2.UA = '8.4'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who first came to the hospital on 1991/6/13 who was diagnosed with SJS, what is the total number of his/her Laboratory tests in 1995?",
    "SELECT COUNT(T3.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T2.`First Date` = '1991-06-13' AND T3.`Description` = 'SJS'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
    "SELECT T1.`Description` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Examination Date` = '1997-01-27' AND T2.`Description` IS NOT NULL AND T1.`First Date` IS NOT NULL AND T1.`First Date` = '1998-05-25'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient whose birthday was 1959/3/1, what symptoms did he/she have during the examination on 1993/9/27?",
    "SELECT T2.`Symptoms` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` = '1993-09-27' AND T2.`Birthday` = '1959-03-01' AND T2.`Symptoms` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
    "SELECT (SUM(CASE WHEN YEAR(Date) = 1981 AND MONTH(Date) = 12 THEN `T-CHO` ELSE 0 END) - SUM(CASE WHEN YEAR(Date) = 1981 AND MONTH(Date) = 11 THEN `T-CHO` ELSE 0 END)) AS decrease_rate FROM Patient p JOIN Laboratory l ON p.ID = l.ID WHERE p.Birthday = '1959-02-18'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Lists all patients by ID who were diagnosed with Behcet's and had their exams between 01/01/197 and 12/31/1997.",
    "SELECT T1.`ID` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Description` LIKE '%Behcet%' AND T2.`Description` BETWEEN '1997-01-01' AND '1997-12-31' AND T2.`Description` NOT LIKE '%None%' AND T2.`Description` NOT LIKE '%None'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
    "SELECT T1.`ID` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T1.`GPT` > 30 AND T1.`ALB` < 4\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients born in 1964 were admitted to the hospital? List them by ID.",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T1.`Birthday` = '1964-01-01' AND T2.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
    "SELECT COUNT(`ID`) FROM Examination WHERE `ID` IN ( SELECT `ID` FROM Patient WHERE `Thrombosis` = 2 AND `ANA` = 'S' ) AND `aCL IgM` > ( SELECT AVG(`aCL IgM`) FROM Examination WHERE `aCL IgM` IS NOT NULL ) * 1.2\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?",
    "SELECT CAST(COUNT(CASE WHEN `U-PRO` > 0 AND `U-PRO` < 30 AND UA < 6.5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND UA < 6.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
    "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SEX) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID JOIN Diagnosis AS T3 ON T1.ID = T3.ID WHERE T2.YEAR(`FIRST DATE`) = '1981' AND T3.DIAGNOSIS = 'BEHCET' AND T2.YEAR(`FIRST DATE`) = '1981' AND T3.DIAGNOSIS = 'BEHCET'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
    "SELECT `ID` FROM Laboratory WHERE `Date` LIKE '1991-10%' AND `T-BIL` < 2.0 AND `Admission` = '-' AND `T-BIL` IS NOT NULL AND `Admission` IS NOT NULL AND `Admission` != 'None'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989?",
    "SELECT COUNT(*) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.BIRTHDAY BETWEEN '1980-01-01' AND '1989-12-31' AND T1.`ANA Pattern` = 'p'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
    "SELECT T1.`SEX` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Description` LIKE '%CRP de 2+%' AND T2.`CRE` = 1 AND T2.`LDH` = 123 AND T2.`SEX` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
    "SELECT AVG(T1.`ALB`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'F' AND T2.`PLT` > 400 AND T3.`SSA` = '1' AND T3.`SSB` = '1'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the most common sign of patients with SLE disease?",
    "SELECT MAX(T1.`Symptoms`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T2.`Symptoms` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When was the medical information on patient number 48473 first documented, and what disease did she have?",
    "SELECT T1.`Description` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ID` = 48473\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many female patients were given an APS diagnosis?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'F' AND T2.`Description` = 'APS'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who underwent testing in 1997 had protein levels outside the normal range?",
    "SELECT COUNT(T1.ID) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE YEAR(T1.Examination_Date) = 1997 AND T1.`GOT` > 6 AND T1.`GOT` < 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What proportion of patients who had signs of thrombocytopenia had SLE diagnosed?",
    "SELECT CAST(SUM(CASE WHEN T1.Diagnosis LIKE '%ITP%' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.Diagnosis LIKE '%SLE%' THEN 1 ELSE 0 END) * 100 FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Symptoms = 'thrombocytopenia'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
    "SELECT CAST(COUNT(CASE WHEN YEAR(T1.`Birthday`) = '1980' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` IS NOT NULL AND T2.`aCL IgM` IS NOT NULL AND T2.`ANA` IS NOT NULL AND T2.`ANA Pattern` IS NOT NULL AND T1.`SEX` = 'F' AND T2.`Description` = 'RA' AND T1.`Birthday` IS NOT NULL AND T2.`Date` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with BEHCET disease did not stay in the hospital for treatment?",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` INNER JOIN Laboratory AS T3 ON T1.`ID` = T3.`ID` WHERE T1.`SEX` = 'M' AND T2.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND T3.`Description` LIKE '%BEHCET%' AND T1.`Admission` = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients who were female got white blood cells that were below 3.5?",
    "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T2.WBC < 3.5;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
    "SELECT DATEDIFF(`First Date`, `Examination Date`) AS `Duration` FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.ID = 821298\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Was the patient with the number 57266's uric acid within a normal range?",
    "SELECT CASE WHEN `SEX` = 'M' THEN 'Yes' ELSE 'No' END AS `is_male` FROM Patient WHERE `ID` = 57266\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the laboratory examination of patient '48473' where his/her AST glutamic oxaloacetic transaminase (GOT) index is above the normal range.",
    "SELECT `Examination Date` FROM Examination WHERE `ID` = 48473 AND `GOT` > 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients with their sex and date of birthday, whose AST glutamic oxaloacetic transaminase (GOT) index is within normal range for loboratory examination in 1994.",
    "SELECT T1.SEX FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Date` = ( SELECT `Date` FROM Laboratory WHERE `Year` = 1994 ) AND T1.`GOT` < 60 AND T1.`aCL IgG` IS NULL AND T1.`aCL IgM` IS NULL AND T1.`ANA` IS NULL AND T1.`ANA Pattern` IS NULL AND T1.`First Date` IS NOT NULL AND T1.`Admission` IS NOT NULL AND T1.`Description` IS NOT NULL AND T1.`First Date` != '-' AND T1.`Admission` != '+' AND T1.`Admission` != '+(' AND T1.`SEX` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.",
    "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE p.SEX = 'M' AND l.GPT >= 60 AND l.GPT IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please provide the diagnosis of patients with ALT glutamic pylvic transaminase beyond the normal range by ascending order of their date of birth.",
    "SELECT T1.`Description` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` IS NULL AND T2.`aCL IgM` IS NULL AND T2.`ANA` IS NULL AND T2.`ANA Pattern` IS NULL AND T2.`GOT` IS NULL AND T2.`GPT` > 60 ORDER BY MAX(T1.`Birthday`) ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
    "SELECT AVG(LDH) FROM Patient JOIN Laboratory ON Patient.`ID` = Laboratory.`ID` WHERE LDH < 500\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
    "SELECT T1.`ID`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`LDH` BETWEEN 600 AND 800\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with alkaliphophatase (ALP) within normal range, were they treated as inpatient or outpatient?",
    "SELECT T1.`Admission` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` IS NULL AND T2.`aCL IgM` IS NULL AND T2.`ANA` IS NULL AND T2.`ANA Pattern` IS NULL AND T2.`Examination Date` IS NULL AND T1.`ALP` < 300 AND T1.`Admission` = '+' AND T1.`Admission` != '-' AND T1.`Admission` = T2.`Admission` AND T1.`ALP` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID of the patient who is born on the April 1st, 1982. Is his/her alkaliphophatase (ALP) within normal range?",
    "SELECT p.ID FROM Patient p JOIN Examination e ON p.ID = e.ID WHERE e.Birthday = '1982-04-01' AND e.ALP < 300\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List ID, sex and date of birth of patient whose total protein (TP) below the lower range of the normal index.",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`ID` IN ( SELECT T3.`ID` FROM Examination AS T3 INNER JOIN Laboratory AS T4 ON T3.`ID` = T4.`ID` WHERE T4.`TP` < 6.0 ) ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal.",
    "SELECT TP - 8.5 AS TP_deviation FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE SEX = 'F' AND TP > 8.5;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Sort in descending order all patients by birthday for male patient with albumin not within range.",
    "SELECT `ID` FROM Patient WHERE `SEX` = 'M' AND ALB < 3.5 OR ALB > 5.5 ORDER BY `Birthday` DESC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patient born in 1982, state if their albumin is within normal range.",
    "SELECT CASE WHEN T1.`ALB` BETWEEN 3.5 AND 5.5 THEN 'Yes' ELSE 'No' END AS `Is Albumin within normal range` FROM Patient AS T1 JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE YEAR(T1.`Birthday`) = 1982\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of the female patient whose uric acid (UA) beyond the normal range?",
    "SELECT CAST(COUNT(CASE WHEN T1.`UA` > 8.0 OR T1.`UA` > 6.5 AND T1.`SEX` = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` IS NULL AND T1.`SEX` = 'F'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with normal uric acid (UA), what is the average UA index based on their latest laboratory examination result?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?",
    "SELECT T1.`ID`, T1.`SEX`, T1.`Birthday` FROM Patient AS T1 INNER JOIN ( SELECT `ID` FROM Patient WHERE `UN` = 29 ) AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` IS NOT NULL AND T1.`Birthday` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide the ID, sex, birthday of all patients diagnosed with 'RA' that are within the UN normal index.",
    "SELECT ID, SEX, Birthday FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Diagnosis = 'RA' AND UN < 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients are are with creatinine index out of the normal range?",
    "SELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.CRE >= 1.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Are there more male patients with creatinine not within the normal range than female? True or False?",
    "SELECT SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index.",
    "SELECT ID, SEX, Birthday FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE T-BIL = (SELECT MAX(T-BIL) FROM Examination) ORDER BY T-BIL DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List and group all patients by sex for total bilirubin (T-BIL) level not within the normal range.",
    "SELECT T1.`SEX`, COUNT(*) AS count FROM Patient AS T1 INNER JOIN ( SELECT T1.`SEX`, COUNT(*) AS count FROM Patient AS T1 GROUP BY T1.`SEX` ) AS T2 ON T1.`SEX` = T2.`SEX` WHERE T1.`T-BIL` >= 2.0 GROUP BY T1.`SEX`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index.",
    "SELECT T1.`ID`, T1.`T-CHO` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-CHO` IS NOT NULL ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the average age of the male patient with high cholesterol?",
    "SELECT AVG(T1.Birthday) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`aCL IgG` > 250 AND T2.`Birthday` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?",
    "SELECT Diagnosis FROM Patient WHERE Diagnosis = 'SLE, SJS' AND Examination_ID IN ( SELECT ID FROM Examination WHERE Diagnosis = 'SLE, SJS' AND (GOT > 300 OR GPT > 300 OR LDH > 300 OR ALP > 300) );\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?",
    "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`T-CHO` >= 200 AND T2.`year(current_timestamp) - SUBTRACT(year(T2.Birthday), year(current_timestamp)) > 50\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all outpatient within normal range of creatinine phosphokinase. Give me the distinct ids.",
    "SELECT DISTINCT `ID` FROM Patient WHERE `Admission` = '-' AND `CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`Examination Date` IS NOT NULL AND T2.`Examination Date` BETWEEN '1936-01-01' AND '1956-12-31' AND T2.`CPK` > 250;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
    "SELECT ID, SEX, age AS age FROM Patient WHERE GLU >= 180 AND T-CHO < 250 AND TP < 6.5 AND HGB < 17 AND CRE < 1.2 AND T-CHO IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List each patient's ID and blood glucose (GLU) index that were within normal range for patient's whose data was first recorded in 1991.",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List the patient ID, sex and birthday who has abnormal white blood cell count. Group them by sex and list the patient by age in ascending order.",
    "SELECT T1.SEX, T1.ID, T1.Birthday FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.WBC < 3.5 OR T2.WBC > 9.0 GROUP BY T1.SEX ORDER BY T1.Birthday ASC\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.",
    "SELECT ID, Birthday FROM Patient WHERE Diagnosis = 'SLE' OR Diagnosis = 'SjS' OR Diagnosis = 'RA' OR Diagnosis = 'SLE, SjS' OR Diagnosis = 'MCTD' OR Diagnosis = 'PSS'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
    "SELECT ID FROM Patient WHERE SEX = 'F' AND RBC < 3.5 OR RBC > 6.0 AND Admission = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex.",
    "SELECT DISTINCT P.ID, P.SEX FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.HBG < 10 AND P.Admission = '-'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'SLE' AND T1.`Birthday` IS NOT NULL AND 10 < T1.`HGB` AND T1.`HGB` < 17 ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.",
    "SELECT ID, age FROM Patient WHERE ID IN ( SELECT ID FROM Examination GROUP BY ID HAVING COUNT(*) > 2 ) AND HCT > 52;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "From laboratory examinations in 1991, what is the average hematoclit level that is lower than the normal range.",
    "SELECT AVG(T1.`HCT`) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Examination Date` LIKE '1991%' AND T1.`HCT` < 29 AND T1.`HCT` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
    "SELECT COUNT(CASE WHEN T1.`PLT` < 100 THEN 1 ELSE NULL END) AS `lower_than_normal_range`, COUNT(CASE WHEN T1.`PLT` > 400 THEN 1 ELSE NULL END) AS `higher_than_normal_range` FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`PLT` < 100;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
    "SELECT ID FROM Examination WHERE Examination_Date LIKE '1984%' AND aCL_IgG IS NOT NULL AND aCL_IgM IS NOT NULL AND ANA IS NOT NULL AND ANA_Pattern IS NOT NULL AND GOT IS NOT NULL AND GPT IS NOT NULL AND LDH IS NOT NULL AND ALP IS NOT NULL AND First_Date IS NOT NULL AND Admission IS NOT NULL AND Diagnosis IS NOT NULL AND Sex IS NOT NULL AND Birthday IS NOT NULL AND SUBTRACT(year(current_timestamp), year(Birthday)) < 50 AND PLT BETWEEN 100 AND 400 AND Description IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
    "SELECT CAST(COUNT(CASE WHEN SUBTRACT(year(current_timestamp), year(Birthday)) > 55 AND PT > = 14 AND SEX = 'F' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE SUBTRACT(year(current_timestamp), year(Birthday)) > 55 AND PT > = 14 AND SEX = 'F' AND PT > = 14;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.",
    "SELECT T1.`SEX` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`First Date` > 1992 AND T2.`PT` < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time?",
    "SELECT COUNT(*) FROM Examination JOIN Patient ON Examination.`ID` = Patient.`ID` WHERE Examination.`Examination Date` > '1997-01-01' AND Examination.`APTT` < 45;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal activated partial prothrom bin time, how many of them have a mild thrombosis?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`Diagnosis` < 3.5 OR T2.`Diagnosis` > 9.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients born after 1980/1/1 have an abnormal fibrinogen level?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`FG` NOT BETWEEN 150 AND 450\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the disease names of the patients that have a proteinuria level higher than normal.",
    "SELECT T2.`Diagnosis` FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`U-PRO` > 30\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID.",
    "SELECT T1.`ID` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`U-PRO` BETWEEN 0 AND 30 AND T1.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with an Ig G lower than normal has the symptom of abortion?",
    "SELECT COUNT(*) FROM Examination AS T1 JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`aCL IgG` < 900 AND T2.`Symptoms` = 'abortion'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal Ig G level, how many of them have symptoms?",
    "SELECT COUNT(DISTINCT ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE IGG BETWEEN 900 AND 2000 AND Symptoms IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient who has the highest Ig A within the normal range, what is his or her diagnosis?",
    "SELECT T1.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`IGA` = ( SELECT MAX(`IGA`) FROM Examination WHERE `IGA` BETWEEN 80 AND 500 ) AND T1.`IGA` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
    "SELECT COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`First Date` >= '1990-01-01' AND T1.`IGA` BETWEEN 80 AND 500;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?",
    "SELECT MAX(T1.Diagnosis) FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.IGM NOT BETWEEN 40 AND 400 GROUP BY T1.Diagnosis\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal C-reactive protein don't have their data recorded?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 JOIN Laboratory AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CRP` LIKE '+' OR T2.`CRP` LIKE '-' OR T2.`CRP` < 1.0 AND T2.`Description` IS NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose C-reactive protein level is abnormal, how many of them aren't 18 yet?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`CRP` NOT IN ('+-', '-') AND T1.`CRP` >= 1.0 AND (YEAR(CURDATE()) - YEAR(T2.`Birthday`)) < 18 AND T2.`Birthday` NOT IN ('-', '+')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` = 'RA' AND T2.`KCT` = '+' AND T2.`aCL IgG` = 'normal' AND T2.`KCT` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diseases of the patients born after 1995-1-1 and have a normal Rhuematoid Factor.",
    "SELECT DISTINCT T1.`Description` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Birthday` > '1995-01-01' AND T2.`RA` = '-' AND T2.`RAHA` = '-' AND T2.`Rhuematoid Factor` = 'normal'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the ID of the patient whose RF is normal and who is older than 60.",
    "SELECT `ID` FROM Patient WHERE (YEAR(CURDATE()) - YEAR(`Birthday`)) > 60 AND `RF` < 20\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal RF don't have thrombosis?",
    "SELECT COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`RF` < 20 AND T2.`Thrombosis` = '0' AND T2.`RF` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal level of complement 3 have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ANA Pattern` = 'P' AND T1.`C3` > 35;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose level of Hematoclit isn't normal, which patient has the highest anti-Cardiolipin antibody concentration? Please list his or her ID.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgA` = ( SELECT MAX(`aCL IgA`) FROM Examination WHERE `aCL IgA` IS NOT NULL ) AND T2.`Hematoclit` NOT BETWEEN 29 AND 52 AND T2.`aCL IgA` = ( SELECT MAX(`aCL IgA`) FROM Examination WHERE `aCL IgA` IS NOT NULL ) AND T2.`Hematoclit` NOT BETWEEN 29 AND 52 AND T2.`Hematoclit` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
    "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`C4` > 10 AND T2.`C4` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`aCL IgG` = '-' AND T1.`aCL IgM` = '-' AND T1.`ANA` = '-' AND T1.`ANA Pattern` = '-' AND T1.`aCL IgA` = '-' AND T1.`Diagnosis` = '-' AND T1.`KCT` = '-' AND T1.`RVVT` = '-' AND T1.`LAC` = '-' AND T1.`Symptoms` = '-' AND T1.`Thrombosis` = '-' AND T2.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth.",
    "SELECT T1.Birthday FROM Patient AS T1 INNER JOIN ( SELECT T2.ID FROM Patient AS T2 WHERE T2.RNP NOT IN ('-', '+-') ) AS T3 ON T1.ID = T3.ID ORDER BY T1.Birthday ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with normal anti-SM, how many of them have the most severe degree of thrombosis?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` = '-' AND T2.`aCL IgM` = '-' AND T2.`ANA` = '-' AND T2.`ANA Pattern` = '-' AND T2.`aCL IgA` = '-' AND T2.`Diagnosis` = '-' AND T2.`KCT` = '-' AND T2.`RVVT` = '-' AND T2.`LAC` = '-' AND T2.`Symptoms` = '-' AND T2.`Thrombosis` = '1'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.",
    "SELECT T1.`ID` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`aCL IgM` != '-' AND T1.`aCL IgM` != '+-' ORDER BY T2.`Birthday` DESC LIMIT 3\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients who had the examination done after 1997/1/1 and had a normal anti-scl70.",
    "SELECT `ID` FROM Examination WHERE `Examination Date` >= '1997-01-01' AND `SC170` IN ('-', '+-') AND `SC170` IS NOT NULL AND `SC170` NOT IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal anti-scl70, how many of them are male and have the symptom of vertigo?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with a normal anti-SSA came to the hospital before 1990?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Patient AS T1 WHERE T1.`Description` = '-' AND T1.`First Date` < '1990-01-01'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID.",
    "SELECT T1.`ID` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` != '-' AND T2.`aCL IgM` != '-' AND T2.`ANA` != 'None' AND T2.`ANA Pattern` != 'None' AND T2.`aCL IgA` != '-' AND T2.`Diagnosis` != 'None' AND T2.`KCT` != '-' AND T2.`RVVT` != '-' AND T2.`LAC` != '-' AND T2.`Symptoms` != 'None' AND T2.`Thrombosis` != 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-SSB and are diagnosed with SLE in the examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`aCL IgG` = '-' AND T1.`aCL IgM` = '-' AND T1.`ANA` = '0' AND T1.`Diagnosis` = 'SLE'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose anti-SSB are normal, how many of them have other symptoms observed in their examination?",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`aCL IgG` IS NULL AND T1.`aCL IgM` IS NULL AND T1.`ANA` IS NULL AND T1.`ANA Pattern` IS NULL AND T1.`aCL IgA` IS NULL AND T1.`Diagnosis` IS NULL AND T1.`KCT` IS NULL AND T1.`RVVT` IS NULL AND T1.`LAC` IS NULL AND T1.`Symptoms` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
    "SELECT COUNT(P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'M' AND L.CENTROMEA IN ('-', '+-') AND L.SSB IN ('-', '+-')\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.",
    "SELECT DNA FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE DNA >= 8\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients have a normal anti-DNA level, yet their data are not recorded.",
    "SELECT COUNT(DISTINCT T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`aCL IgG` IS NULL AND T1.`aCL IgM` IS NULL AND T1.`ANA` IS NULL AND T1.`ANA Pattern` IS NULL AND T2.`Description` IS NULL AND T1.`aCL IgG` IS NOT NULL AND T1.`aCL IgM` IS NOT NULL AND T1.`ANA` IS NOT NULL AND T1.`ANA Pattern` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Of the patients with an abnormal level of anti-DNA-II, how many of them admitted to the hospital?",
    "SELECT COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`DNA-II` > 8 AND T2.`Admission` = '+'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the percentage of patient who has a abnormal level of glutamic oxaloacetic transaminase level, yet he or she is diagnosed with SLE?",
    "SELECT CAST(COUNT(CASE WHEN T1.`GOT` >= 60 AND T2.`Diagnosis` = 'SLE' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`GOT` >= 60 AND T1.`ID` = T2.`ID`\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have their glutamic oxaloacetic transaminase in the normal range?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`GOT` < 60\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?",
    "SELECT T1.`Birthday` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` > 60 ORDER BY T1.`Birthday` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the top three patients' birthdays with the highest glutamic pylvic transaminase in the normal range.",
    "SELECT T1.Birthday FROM Patient AS T1 JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.GPT = ( SELECT MAX(T2.GPT) FROM Examination AS T1 JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.GPT < 60 ) ORDER BY T1.Birthday DESC LIMIT 3;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with the normal glutamic pylvic transaminase level, how many of them are male?",
    "SELECT COUNT(P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.GOT < 60 AND P.SEX = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with the highest lactate dehydrogenase in the normal range, when was his or her data first recorded?",
    "SELECT MIN(P.First Date) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON E.ID = L.ID WHERE L.LDH < 500 AND L.LDH IS NOT NULL ORDER BY L.LDH DESC LIMIT 1;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.",
    "SELECT ID FROM Patient WHERE First Date = ( SELECT MAX(First Date) FROM Patient ) AND LDH >= 500;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patient with an abnormal alkaliphophatase level, how many of them are admitted to the hospital?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`Admission` = '+' AND T1.`ID` IN ( SELECT T1.`ID` FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`ALP` >= 300 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients followed at the outpatient clinic, how many of them have a normal level of alkaliphophatase?",
    "SELECT COUNT(L.`ID`) FROM Laboratory L JOIN Patient P ON L.`ID` = P.`ID` WHERE P.`Admission` = '-' AND L.`ALP` < 300;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the diagnosis of the patients whose total protein is lower than normal.",
    "SELECT DISTINCT T1.`Description` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`TP` < 6.0 ORDER BY T1.`Description` ASC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients who are diagnosed with SJS, how many of them have a normal level of total protein?",
    "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SJS' AND T2.TP > 6.0 AND T2.TP < 8.5\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the examination date of the patient whose albumin is the highest in the normal range?",
    "SELECT e.`Examination Date` FROM Examination e JOIN Patient p ON e.`ID` = p.`ID` JOIN Laboratory l ON e.`ID` = l.`ID` WHERE l.`ALB` > 3.5 AND l.`ALB` < 5.5 ORDER BY l.`ALB` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many male patients have a normal level of both albumin and total protein?",
    "SELECT COUNT(DISTINCT ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE ALB > 3.5 AND ALB < 5.5 AND TP BETWEEN 6.0 AND 8.5 AND SEX = 'M'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
    "SELECT T1.`aCL IgG` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`SEX` = 'F' AND T1.`UA` > 6.50 ORDER BY T1.`aCL IgG` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level?",
    "SELECT MAX(T1.`ANA`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`CRE` < 1.5 AND T1.`ANA` IS NOT NULL ORDER BY T1.`ANA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID whose creatinine level is normal and whose anti Cardiolipin antibody concentration level is the highest.",
    "SELECT T1.`ID` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`Diagnosis` IS NULL AND T1.`aCL IgA` IS NOT NULL AND T1.`aCL IgA` = (SELECT MAX(aCL IgA) FROM Examination WHERE Diagnosis IS NULL) ORDER BY T1.`aCL IgA` DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(`ANA Pattern`) FROM Examination WHERE `T-BIL` > 2.0 AND `ANA Pattern` LIKE '%P%'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the anti-nucleus antibody concentration of the patient whose total bilirubin is the highest in the normal range?",
    "error: No SQL found in the input string\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
    "SELECT COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`KCT` = '-' AND T1.`T-CHO` > 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients whose total cholesterol is within the normal range, how many of them have a P pattern observed in the sheet of ANA examination?",
    "SELECT COUNT(T1.`ANA Pattern`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`T-CHO` < 250 AND T2.`ANA Pattern` = 'P'\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
    "SELECT COUNT(T1.`ID`) FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`TG` < 200 AND T2.`Description` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What is the disease name of the patient who has the highest level of triglyceride within the normal range?",
    "SELECT T1.`Description` FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`aCL IgG` IS NULL AND T2.`aCL IgM` IS NULL AND T2.`ANA` IS NULL AND T2.`ANA Pattern` IS NULL AND T2.`TG` = ( SELECT MAX(TG) FROM Laboratory WHERE TG < 200 )\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the IDs of the patients with no thrombosis and an abnormal level of creatinine phosphokinase.",
    "SELECT `ID` FROM Patient WHERE `Admission` = '0' AND `CPK` < 250\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",
    "SELECT COUNT(P.ID) FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE L.CPK < 250 AND (L.CPK = '+' OR L.CPK IS NOT NULL);\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "When is the birthday of the oldest patient whose blood glucose is abnormal?",
    "SELECT p.Birthday FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE e.GOT > 180 AND e.GOT IS NOT NULL ORDER BY p.Birthday DESC LIMIT 1\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients with a normal blood glucose, how many of them don't have thrombosis?",
    "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`GLU` < 180 AND T2.`Thrombosis` = 0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients accepted to the hospital have a normal level of white blood cells?",
    "SELECT COUNT(P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.Admission = '+' AND L.WBC BETWEEN 3.5 AND 9.0;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients diagnosed with SLE have a normal white blood cell level?",
    "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T2.WBC BETWEEN 3.5 AND 9.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.",
    "SELECT `ID` FROM Patient WHERE `Admission` = '-' AND `RBC` < 3.5 OR `RBC` > 6.0\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
    "SELECT COUNT(T1.`ID`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T2.`PLT` > 100 AND T2.`PLT` < 400 AND T1.`Description` IS NOT NULL AND T1.`Description` IS NOT NULL\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.",
    "SELECT T1.`GOT`, T1.`GPT`, T1.`LDH`, T1.`ALP` FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.`ID` = T2.`ID` WHERE T2.Diagnosis = 'MCTD' AND T1.`GOT` IS NOT NULL AND T1.`GPT` IS NOT NULL AND T1.`LDH` IS NOT NULL AND T1.`ALP` IS NOT NULL AND T1.`GOT` > 100 AND T1.`GOT` < 400 AND T1.`GPT` > 100 AND T1.`GPT` < 400 AND T1.`LDH` > 100 AND T1.`LDH` < 400 AND T1.`ALP` > 100 AND T1.`ALP` < 400 AND T1.`GOT` IS NOT NULL AND T1.`GPT` IS NOT NULL AND T1.`LDH` IS NOT NULL AND T1.`ALP` IS NOT NULL;\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "For the male patients that have a normal prothrombin time, what is their average prothrombin time?",
    "SELECT AVG(T1.`PT`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.`ID` = T2.`ID` WHERE T1.`SEX` = 'M' AND T2.`PT` < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "How many patients with severe thrombosis have a normal prothrombin time?",
    "SELECT COUNT(P.ID) FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.`Thrombosis` IN (2, 1) AND L.`PT` < 14\t----- bird -----\tthrombosis_prediction"
  ],
  [
    "What's Angela Sanders's major?",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `major_id` FROM member WHERE `last_name` = 'Sanders' AND `first_name` = 'Angela' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many students in the Student_Club are from the College of Engineering?",
    "SELECT COUNT(T1.`member_id`) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`event_name` = 'Yearly Kickoff' AND T1.`college` = 'College of Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the full names of the students in the Student_Club that come from the Art and Design Department.",
    "SELECT member.first_name, member.last_name FROM member JOIN major ON member.link_to_major = major.major_id JOIN event ON member.link_to_event = event.event_id JOIN attendance ON member.member_id = attendance.link_to_member JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON member.member_id = expense.link_to_member JOIN income ON member.member_id = income.link_to_member WHERE major.department = 'Art and Design' AND event.type = 'Game' AND event.link_to_event IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
    "SELECT COUNT(T1.`member_id`) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`event_name` = 'Women\\'s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
    "SELECT member.phone FROM member JOIN attendance ON member.member_id = attendance.member_id JOIN event ON attendance.link_to_event = event.event_id JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON member.member_id = expense.link_to_member WHERE event.event_name = 'Women\\'s Soccer' AND expense.approved IS NULL ORDER BY member.phone ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students from the Student_Club who attended the event \"Women's Soccer\", how many of them want a T-shirt that's in medium size?",
    "SELECT COUNT(`member_id`) FROM member WHERE `t_shirt_size` = 'Medium'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the event that has the highest attendance of the students from the Student_Club?",
    "SELECT event_name FROM event WHERE link_to_event = ( SELECT MAX(COUNT(link_to_event)) FROM attendance INNER JOIN member ON attendance.`link_to_member` = member.`member_id` INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE major_name = 'Student_Club' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which college is the vice president of the Student_Club from?",
    "SELECT T1.college FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` JOIN event AS T3 ON T1.`link_to_event` = T3.`event_id` JOIN attendance AS T4 ON T1.`member_id` = T4.`link_to_member` JOIN budget AS T5 ON T3.`event_id` = T5.`link_to_event` JOIN expense AS T6 ON T1.`member_id` = T6.`link_to_member` JOIN income AS T7 ON T1.`member_id` = T7.`link_to_member` WHERE T1.`position` = 'Vice President';\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the event names of all the events attended by Maya Mclean.",
    "SELECT event.event_name FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event ON T2.link_to_event = event.event_id WHERE T1.first_name = 'Maya' AND T1.last_name = 'Mclean';\t----- bird -----\tstudent_club"
  ],
  [
    "How many events of the Student_Club did Sacha Harrison attend in 2019?",
    "SELECT COUNT(T2.event_id) FROM member AS T1 JOIN attendance AS T2 ON T1.member_id = T2.link_to_member JOIN event AS T3 ON T2.event_id = T3.event_id JOIN member AS T4 ON T3.event_id = T4.event_id WHERE T1.first_name = 'Sacha' AND T1.last_name = 'Harrison' AND T4.first_name = 'Sacha' AND T4.last_name = 'Harrison' AND T3.event_date >= '2019-01-01' AND T3.event_date < '2020-01-01'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the events attended by more than 10 members of the Student_Club, how many of them are meetings?",
    "SELECT COUNT(event_id) FROM event WHERE type = 'Meeting' AND event_id IN ( SELECT attendance.event_id FROM attendance JOIN member ON attendance.link_to_member = member.member_id GROUP BY attendance.event_id HAVING COUNT(member.member_id) > 10 )\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the names of all the events of the Student_Club that had an attendance of over 20 students.",
    "SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE COUNT(attendance.event_id) > 20 GROUP BY event_name\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average attendance of meetings in 2020?",
    "SELECT AVG(COUNT(event_id) / COUNT(DISTINCT event_name)) FROM event WHERE type = 'Meeting' AND YEAR(event_date) = 2020 AND event_id IN ( SELECT link_to_event FROM attendance ) AND event_id IN ( SELECT link_to_event FROM attendance WHERE link_to_member IN ( SELECT member_id FROM member WHERE position = 'President' ) )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most expensive item that was spent in support of club events?",
    "SELECT MAX(T2.cost) FROM expense AS T1 JOIN event AS T2 ON T1.`link_to_budget` = T2.`budget_id` JOIN member AS T3 ON T1.`link_to_member` = T3.`member_id` WHERE T1.`expense_description` LIKE '%club%'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have majored Environmental Engineering?\n",
    "SELECT COUNT(`member_id`) FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE major.`major_name` = 'Environmental Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of all the members of the Student_Club who attended the \"Laugh Out Loud\" event.",
    "SELECT T1.`first_name` || ' ' || T1.`last_name` AS full_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`event_name` = 'Laugh Out Loud'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of all the students who majored Law and Constitutional Studies. \n",
    "SELECT member.last_name FROM member JOIN major ON member.major_id = major.major_id JOIN event ON member.zip = event.zip_code JOIN attendance ON member.zip = attendance.zip_code JOIN budget ON member.zip = budget.zip_code JOIN expense ON member.zip = expense.zip_code JOIN income ON member.zip = income.zip_code WHERE major.department = 'College of Law and Constitutional Studies' AND member.major_id IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "What county did Sherri Ramsey grew up?",
    "SELECT DISTINCT county FROM zip_code WHERE county IS NOT NULL AND zip_code.zip_code = ( SELECT member.zip FROM member WHERE member.first_name = 'Sherri' AND member.last_name = 'Ramsey' )\t----- bird -----\tstudent_club"
  ],
  [
    "What college offers the major that Tyler Hewitt took?",
    "SELECT T1.college FROM member AS T1 JOIN major AS T2 ON T1.major_id = T2.major_id WHERE T1.first_name = 'Tyler' AND T1.last_name = 'Hewitt'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the amount of the funds that the Vice President received?",
    "SELECT T1.`amount` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`position` = 'Vice President' ORDER BY T1.`date_received` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on food in September Meeting?",
    "SELECT SUM(`cost`) FROM expense WHERE `approved` = 'true' AND `category` = 'Food' AND `event_name` = 'September Meeting' AND `link_to_member` IN ( SELECT `member_id` FROM member WHERE `position` = 'Student_Club' ) AND `link_to_budget` IN ( SELECT `budget_id` FROM budget WHERE `category` = 'Food' AND `event_status` = 'Open' AND `event_name` = 'September Meeting' ) GROUP BY `member_id` HAVING `member_id` IN ( SELECT `member_id` FROM member WHERE `position` = 'Student_Club' )\t----- bird -----\tstudent_club"
  ],
  [
    "What city and state did the President of the Student_Club grow up?",
    "SELECT T1.city, T1.state FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` JOIN event AS T3 ON T1.`link_to_event` = T3.`event_id` JOIN budget AS T4 ON T3.`event_id` = T4.`event_id` JOIN expense AS T5 ON T1.`member_id` = T5.`link_to_member` JOIN income AS T6 ON T1.`member_id` = T6.`link_to_member` WHERE T2.`position` = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the Student_Club members that grew up in Illinois state.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T2.`state` = 'Illinois'\t----- bird -----\tstudent_club"
  ],
  [
    "How much did the Student_Club members spend on advertisement in September Meeting?",
    "SELECT SUM(`spent`) FROM expense WHERE `approved` = 'true' AND `link_to_member` IN ( SELECT `member_id` FROM member WHERE `position` = 'Student_Club' ) AND `link_to_budget` IN ( SELECT `budget_id` FROM budget WHERE `category` = ( SELECT `category` FROM event WHERE `event_name` = 'September Meeting' ) ) AND `event_status` = 'Open' AND `category` = 'Advertisement' AND `event_name` = 'September Meeting' AND `link_to_budget` IN ( SELECT `budget_id` FROM budget WHERE `category` = 'Advertisement' AND `event_name` = 'September Meeting' ) AND `link_to_member` IN ( SELECT `member_id` FROM member WHERE `position` = 'Student_Club' ) AND `link_to_event` IN ( SELECT `event_id` FROM event WHERE `event_name` = 'September Meeting' ) AND `approved` IS NOT NULL AND `expense_date` = ( SELECT MAX(`expense_date`) FROM expense WHERE `approved` = 'true' AND `link_to_member` IN ( SELECT `member_id` FROM member WHERE `position` = 'Student_Club' ) AND `link_to_budget` IN ( SELECT `budget_id` FROM budget WHERE `category` = ( SELECT `category` FROM event WHERE `event_name` = 'September Meeting' ) ) AND `event_status` = 'Open' AND `category` = 'Advertisement' AND `event_name` = 'September Meeting' AND `link_to_budget` IN ( SELECT `budget_id` FROM budget WHERE `category` = 'Advertisement' AND `event_name` = 'September Meeting' ) AND `link_to_member` IN ( SELECT `member_id` FROM member WHERE `position` = 'Student_Club' ) AND `link_to_event` IN ( SELECT `event_id` FROM event WHERE `event_name` = 'September Meeting' ) AND `approved` IS NOT NULL )\t----- bird -----\tstudent_club"
  ],
  [
    "What department offers the major that Pierce and Guidi took?",
    "SELECT DISTINCT m.department FROM member m JOIN major ma ON m.major_id = ma.major_id JOIN event e ON m.member_id = e.event_id WHERE m.first_name = 'Pierce' AND m.last_name = 'Guidi';\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total budgeted amount for all category in \"October Speaker\" event?",
    "SELECT SUM(budget.amount) FROM budget JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'October Speaker' AND event.event_date LIKE '2020-10%' AND budget.category IS NOT NULL AND budget.amount IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Was each expense in October Meeting on October 8, 2019 approved?",
    "SELECT CASE WHEN approved = 'true' THEN 'Yes' ELSE 'No' END AS is_approved FROM expense WHERE event_id = ( SELECT event_id FROM event WHERE event_name = 'October Meeting' AND event_date = '2019-10-08' ) AND approved IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
    "SELECT SUM(T2.cost) / COUNT(T2.member_id) FROM expense AS T1 JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_date LIKE '2019-09%' AND T1.expense_date LIKE '2019-10%' AND T1.cost IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.",
    "SELECT SUM(budget.`spent`) AS total_spent_2019 FROM budget JOIN event AS T1 ON budget.`link_to_event` = T1.`event_id` WHERE T1.`event_name` LIKE '%Student_Club%' AND YEAR(T1.`event_date`) = 2019, (SELECT SUM(budget.`spent`) AS total_spent_2020 FROM budget JOIN event AS T1 ON budget.`link_to_event` = T1.`event_id` WHERE T1.`event_name` LIKE '%Student_Club%' AND YEAR(T1.`event_date`) = 2020)\t----- bird -----\tstudent_club"
  ],
  [
    "Give the location for \"Spring Budget Review\".",
    "SELECT `location` FROM event WHERE `event_name` = 'Spring Budget Review'\t----- bird -----\tstudent_club"
  ],
  [
    "What was the cost for the \"Posters\" on 2019/9/4?",
    "SELECT T1.`cost` FROM expense AS T1 INNER JOIN event AS T2 ON T1.`expense_id` = T2.`event_id` WHERE T2.`event_date` = '2019-09-04' AND T1.`approved` IS NOT NULL AND T1.`expense_description` = 'Posters' AND T1.`approved` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "With the biggest budget for the \"Food\", what was the remaining of it?",
    "SELECT MAX(budget.amount) - MAX(budget.remaining) FROM budget WHERE budget.category = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "What was the notes of the fundraising on 2019/9/14?",
    "SELECT T1.`notes` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN event AS T3 ON T2.`member_id` = T3.`event_id` WHERE T3.`date_received` = '2019-09-14'\t----- bird -----\tstudent_club"
  ],
  [
    "How many majors are there in \"College of Humanities and Social Sciences\"?",
    "SELECT COUNT(DISTINCT member_id) FROM member WHERE link_to_major = ( SELECT major_id FROM major WHERE department = 'College of Humanities and Social Sciences' )\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the phone number of \"Carlo Jacobs\".",
    "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'\t----- bird -----\tstudent_club"
  ],
  [
    "Tell the hometown county for \"Adela O'Gallagher\".",
    "SELECT T1.county FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Adela' AND T1.`last_name` = 'O\\'Gallagher' LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "For all the budgets for \"November Meeting\", how many of them had exceeded the budget?",
    "SELECT COUNT(budget_id) FROM budget WHERE event_status = 'Open' AND type = 'Meeting' AND event_name = 'November Meeting' AND remaining < 0 AND event_id IN ( SELECT event_id FROM event WHERE event_name = 'November Meeting' ) AND event_id IN ( SELECT event_id FROM event WHERE event_name = 'November Meeting' );\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the total number of the budget amount for \"September Speaker\" event.",
    "SELECT SUM(`amount`) FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'September Speaker' )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?",
    "SELECT event_status FROM expense WHERE expense_description = 'Post Cards, Posters' AND expense_date = '2019-08-20' AND link_to_event = ( SELECT event_id FROM event WHERE event_name = 'Football game' ) AND link_to_member IN ( SELECT member_id FROM member WHERE zip_code IN ( SELECT zip_code FROM zip_code WHERE type = 'Standard' ) ) ORDER BY event_status ASC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "What was Brent Thomason's major?",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `major_id` FROM member WHERE `first_name` = 'Brent' AND `last_name` = 'Thomason' )\t----- bird -----\tstudent_club"
  ],
  [
    "For all the club members from \"Human Development and Family Studies\" major, how many of them wear large size t-shirt?",
    "SELECT COUNT(`member_id`) FROM member WHERE `link_to_major` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Human Development and Family Studies' ) AND `t_shirt_size` = 'Large'\t----- bird -----\tstudent_club"
  ],
  [
    "What's Christof Nielson's zip code type?",
    "SELECT T2.`type` FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.`zip` = T2.`zip_code` WHERE T1.`first_name` = 'Christof' AND T1.`last_name` = 'Nielson'\t----- bird -----\tstudent_club"
  ],
  [
    "State the major name for the Vice President of the club.",
    "SELECT T1.major_name FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`position` = 'Vice President'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown state for \"Sacha Harrison\"?",
    "SELECT T1.state FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` JOIN event AS T3 ON T1.`link_to_event` = T3.`event_id` JOIN zip_code AS T4 ON T1.`zip` = T4.`zip_code` WHERE T1.`first_name` = 'Sacha' AND T1.`last_name` = 'Harrison'\t----- bird -----\tstudent_club"
  ],
  [
    "Which department was the President of the club in?",
    "SELECT T1.department FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` JOIN event AS T3 ON T1.`member_id` = T3.`link_to_member` JOIN attendance AS T4 ON T1.`member_id` = T4.`link_to_member` JOIN budget AS T5 ON T3.`event_id` = T5.`link_to_event` JOIN expense AS T6 ON T1.`member_id` = T6.`link_to_member` JOIN income AS T7 ON T1.`member_id` = T7.`link_to_member` WHERE T1.`position` = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "State the date Connor Hilton paid his/her dues.",
    "SELECT T1.`date_received` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`first_name` = 'Connor' AND T2.`last_name` = 'Hilton'\t----- bird -----\tstudent_club"
  ],
  [
    "Who was the first one paid his/her dues? Tell the full name.",
    "SELECT T1.first_name, T1.last_name FROM income AS T1 JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`date_received` = ( SELECT MIN(T1.`date_received`) FROM income AS T1 JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T1.`source` = 'Dues' AND T1.`date_received` IS NOT NULL ) ORDER BY T1.`date_received` ASC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
    "SELECT SUM(e.amount) AS yearly_kickoff_budget, SUM(o.amount) AS october_meeting_budget FROM event e JOIN expense o ON e.event_id = o.link_to_event JOIN budget b ON e.event_id = b.link_to_event WHERE e.event_name = 'Yearly Kickoff' AND b.category = 'Advertisement' GROUP BY e.event_name HAVING SUM(e.amount) > SUM(o.amount);\t----- bird -----\tstudent_club"
  ],
  [
    "What percentage was the budget for Parking to the total budget for the \"November Speaker\"?",
    "SELECT (SUM(expense.cost) / SUM(budget.amount)) * 100 FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'November Speaker' GROUP BY event.event_name;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total cost of the pizzas for all the events?",
    "SELECT SUM(T1.cost) FROM expense AS T1 JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` JOIN member AS T3 ON T1.`link_to_member` = T3.`member_id` JOIN major AS T4 ON T3.`link_to_major` = T4.`major_id` JOIN zip_code AS T5 ON T3.`zip` = T5.`zip_code` WHERE T1.`expense_description` = 'Pizza' AND T1.`link_to_event` IS NOT NULL AND T1.`link_to_event` IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "How many cities are there in Orange County, Virginia?",
    "SELECT COUNT(`city`) FROM zip_code WHERE `state` = 'Virginia' AND `county` = ( SELECT `county` FROM zip_code WHERE `state` = 'Virginia' AND `short_state` = 'OR' )\t----- bird -----\tstudent_club"
  ],
  [
    "List all of the College of Humanities and Social Sciences' departments.",
    "SELECT major_name FROM major WHERE college = 'College of Humanities and Social Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "Where is Amy Firth's hometown?",
    "SELECT DISTINCT zip_code.short_state FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Amy' AND member.last_name = 'Firth';\t----- bird -----\tstudent_club"
  ],
  [
    "What are the expenses of the budget with the lowest remaining?",
    "SELECT expense_description FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.remaining = ( SELECT MIN(remaining) FROM budget )\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members who attended the event \"October Meeting\".",
    "SELECT T1.`member_id` FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'October Meeting' )\t----- bird -----\tstudent_club"
  ],
  [
    "Which college do most of the members go to?",
    "SELECT major.college FROM member JOIN major ON member.link_to_major = major.major_id GROUP BY major.college ORDER BY COUNT(member.member_id) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What does the person with the phone number \"809-555-3360\" major in?",
    "SELECT T1.college FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`phone` = '809-555-3360' AND T1.`phone` IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the highest budget amount?",
    "SELECT MAX(amount) FROM budget\t----- bird -----\tstudent_club"
  ],
  [
    "List all the expenses incurred by the vice president.",
    "SELECT T1.`expense_description` FROM expense AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN major AS T3 ON T2.`major_id` = T3.`major_id` WHERE T3.`position` = 'Vice President'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members attended the \"Women's Soccer\" event?",
    "SELECT COUNT(T1.`member_id`) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`event_name` = 'Women\\'s Soccer'\t----- bird -----\tstudent_club"
  ],
  [
    "When did the member, Casey Mason, received the income?",
    "SELECT `date_received` FROM income WHERE `link_to_member` = ( SELECT `member_id` FROM member WHERE `first_name` = 'Casey' AND `last_name` = 'Mason' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many of the members' hometowns are from Maryland state?",
    "SELECT COUNT(`member_id`) FROM member JOIN zip_code ON member.zip = zip_code.zip_code WHERE zip_code.state = 'MD'\t----- bird -----\tstudent_club"
  ],
  [
    "How many events did the member with the phone number \"954-555-6240\" attend?",
    "SELECT COUNT(e.event_id) FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.phone = '954-555-6240';\t----- bird -----\tstudent_club"
  ],
  [
    "List all the members of the \"School of Applied Sciences, Technology and Education\" department.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` INNER JOIN event AS T3 ON T1.`link_to_event` = T3.`event_id` WHERE T2.`college` = 'School of Applied Sciences, Technology and Education' AND T3.`event_id` IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Among all the closed events, which event has the highest spend-to-budget ratio?",
    "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.event_status = 'Closed' ORDER BY budget.spent / budget.amount DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "How many student have the position of president?",
    "SELECT COUNT(`member_id`) FROM member WHERE `position` = 'President'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the highest amount of budget spend for an event?",
    "SELECT MAX(`spent`) FROM budget ORDER BY `spent` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "How many meeting events were held in 2020?",
    "SELECT COUNT(event_id) FROM event JOIN major ON event.major_id = major.major_id JOIN zip_code ON event.zip_code = zip_code.zip_code WHERE YEAR(event_date) = 2020\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total amount of money spent for food?",
    "SELECT SUM(T1.spent) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.`link_to_budget` = T2.`budget_id` WHERE T2.`category` = 'Food' AND T1.spent IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of students that have attended more than 7 events.",
    "SELECT member.first_name, member.last_name FROM attendance JOIN member ON attendance.link_to_member = member.member_id GROUP BY member_id HAVING COUNT(link_to_event) > 7\t----- bird -----\tstudent_club"
  ],
  [
    "Among the students majored in interior design, who have attended the Community Theater event?",
    "SELECT member.first_name, member.last_name FROM member JOIN attendance ON member.member_id = attendance.member_id JOIN event ON event.event_id = attendance.link_to_event JOIN major ON major.major_id = member.link_to_major JOIN event ON event.event_id = attendance.link_to_event JOIN major ON major.major_id = member.link_to_major WHERE event_name = 'Community Theater'\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of students from Georgetown, South Carolina.",
    "SELECT member.first_name, member.last_name FROM member JOIN event ON member.link_to_event = event.event_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'Georgetown' AND member.last_name = 'SC';\t----- bird -----\tstudent_club"
  ],
  [
    "How many income generated by Grant Gilmour?",
    "SELECT COUNT(T2.`amount`) FROM member AS T1 INNER JOIN income AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T1.`first_name` = 'Grant' AND T1.`last_name` = 'Gilmour'\t----- bird -----\tstudent_club"
  ],
  [
    "Which student was able to generate income more than $40?",
    "SELECT T1.first_name, T1.last_name FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` INNER JOIN major AS T3 ON T2.`link_to_major` = T3.`major_id` WHERE T1.`amount` > 40\t----- bird -----\tstudent_club"
  ],
  [
    "What is the total expense for the Yearly Kickoff?",
    "SELECT SUM(T2.cost) FROM expense AS T1 INNER JOIN event AS T2 ON T1.`link_to_budget` = T2.`budget_id` WHERE T2.`event_name` = 'Yearly Kickoff' AND T1.`approved` = 'true' AND T2.`event_name` IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has been entrusted to manage the budget for the Yearly Kickoff?",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN event AS T3 ON T2.`link_to_event` = T3.`event_id` WHERE T3.`event_name` = 'Yearly Kickoff'\t----- bird -----\tstudent_club"
  ],
  [
    "Which students manage to generate the highest income. State his/her full name along with the income source.",
    "SELECT T2.`first_name`, T2.`last_name` FROM income AS T1 INNER JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` ORDER BY T1.`amount` DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Which event has the lowest cost?",
    "SELECT event_name FROM event WHERE cost IS NOT NULL ORDER BY cost ASC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?",
    "SELECT CAST((SUM(cost) WHERE event_name = 'Yearly Kickoff') AS REAL) * 100 / SUM(cost) FROM expense JOIN event ON expense.link_to_event = event.event_id WHERE event_name = 'Yearly Kickoff'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the ratio between students majored in finance and physics?",
    "SELECT SUM(CASE WHEN T1.major_name = 'Finance' THEN 1 ELSE 0 END) / SUM(CASE WHEN T1.major_name = 'Physics' THEN 1 ELSE 0 END) FROM major AS T1 JOIN member AS T2 ON T1.major_id = T2.major_id JOIN event AS T3 ON T2.member_id = T3.event_id JOIN zip_code AS T4 ON T2.zip = T4.zip_code WHERE T1.major_name IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the top source of funds received in September 2019 based on their amount.",
    "SELECT first_name, last_name FROM member WHERE member_id = ( SELECT member_id FROM income WHERE date_received BETWEEN '2019-09-01' AND '2019-09-30' ORDER BY amount DESC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the full name and email address of the Student_Club's Secretary.",
    "SELECT T1.email FROM member AS T1 INNER JOIN major AS T2 ON T1.major_id = T2.major_id WHERE T2.position = 'Secretary' AND T2.college = 'College of Education & Human Services'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of the Student_Club have major in 'Physics Teaching'?",
    "SELECT COUNT(`member_id`) FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE major.`major_id` = ( SELECT `major_id` FROM major WHERE `major_name` = 'Physics Teaching' )\t----- bird -----\tstudent_club"
  ],
  [
    "How many members did attend the event 'Community Theater' in 2019?",
    "SELECT COUNT(member_id) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event_name = 'Community Theater' AND YEAR(event_date) = 2019\t----- bird -----\tstudent_club"
  ],
  [
    "Provide the number of events attended by Luisa Guidi. What is her major?",
    "SELECT major_name FROM major WHERE major_id = ( SELECT major_id FROM member WHERE first_name = 'Luisa' AND last_name = 'Guidi' )\t----- bird -----\tstudent_club"
  ],
  [
    "On average, how much did the Student_Club spend on food for the typical event in the past?",
    "SELECT AVG(expense.cost) FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON expense.link_to_event = event.event_id JOIN member ON expense.link_to_member = member.member_id JOIN major ON member.link_to_major = major.major_id WHERE budget.category = 'Food' AND event.event_status = 'Closed' AND expense.cost IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Name the event with the highest amount spent on advertisement.",
    "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Advertisement' ORDER BY budget.spent DESC LIMIT 1;\t----- bird -----\tstudent_club"
  ],
  [
    "Did Maya Mclean attend the 'Women's Soccer' event?",
    "SELECT COUNT(`member_id`) > 0 FROM member INNER JOIN attendance ON member.`member_id` = attendance.`link_to_member` INNER JOIN event ON attendance.`link_to_event` = event.`event_id` WHERE event_name = 'Women\\'s Soccer' AND event_date IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Among all events hold by the Student_Club in 2019, find the percentage share of events related to 'Community Service'",
    "SELECT CAST(SUM(CASE WHEN type = 'Community Service' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(event_id) FROM event WHERE event_date BETWEEN '2019-01-01' AND '2019-12-31' AND type = 'Community Service' AND link_to_event IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the cost of posters for 'September Speaker' event.",
    "SELECT T1.`cost` FROM expense AS T1 JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T2.`event_name` = 'September Speaker' AND T1.`expense_description` = 'Posters' AND T1.`link_to_budget` IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the most popular size of t-shirt ordered by the club members?",
    "SELECT MAX(COUNT(member.member_id)) FROM member JOIN event ON member.link_to_event = event.event_id JOIN attendance ON member.member_id = attendance.link_to_member JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON member.member_id = expense.link_to_member JOIN income ON member.member_id = income.link_to_member JOIN zip_code ON member.zip = zip_code.zip_code JOIN major ON member.link_to_major = major.major_id WHERE member.t_shirt_size IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Indicate the name of the closed event whose cost has exceeded the budget the most.",
    "SELECT `event_name` FROM event WHERE `event_id` = ( SELECT `event_id` FROM budget WHERE `event_status` = 'Closed' ORDER BY `remaining` DESC LIMIT 1 )\t----- bird -----\tstudent_club"
  ],
  [
    "Identify the type of expenses and their total value approved for 'October Meeting' event.",
    "SELECT SUM(T1.`cost`) FROM expense AS T1 JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` JOIN major AS T3 ON T1.`link_to_member` = T3.`major_id` JOIN member AS T4 ON T1.`link_to_member` = T4.`member_id` JOIN zip_code AS T5 ON T4.`zip` = T5.`zip_code` JOIN income AS T6 ON T1.`link_to_member` = T6.`link_to_member` WHERE T2.`event_name` = 'October Meeting'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount.",
    "SELECT `category` FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'April Speaker' ) ORDER BY `spent` ASC\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Food, which one has the highest budgeted amount?",
    "SELECT MAX(budget.`amount`) FROM budget WHERE budget.`category` = 'Food'\t----- bird -----\tstudent_club"
  ],
  [
    "Among the budgets for Advertising, list out top three which have the most budgeted amount?",
    "SELECT T1.`amount` FROM budget AS T1 INNER JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` WHERE T1.`category` = 'Advertisement' ORDER BY T1.`amount` DESC LIMIT 3\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total cost spent for Parking in the list.",
    "SELECT SUM(cost) FROM expense JOIN event ON expense.`link_to_event` = event.`event_id` WHERE expense_description = 'Parking' GROUP BY event_id ORDER BY event_id ASC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the total expense used on 8/20/2019.",
    "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?",
    "SELECT SUM(expense.cost) FROM expense JOIN member ON expense.link_to_member = member.member_id JOIN event ON expense.link_to_event = event.event_id JOIN major ON member.link_to_major = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code WHERE member.first_name = 'rec4BLdZHS2Blfp4v' AND member.last_name = 'rec4BLdZHS2Blfp4v' AND member.member_id IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "State what kind of expenses that Sacha Harrison incurred?",
    "SELECT T3.`expense_description` FROM member AS T1 INNER JOIN attendance AS T2 ON T1.`member_id` = T2.`link_to_member` INNER JOIN expense AS T3 ON T3.`expense_id` = T2.`link_to_expense` WHERE T1.`first_name` = 'Sacha' AND T1.`last_name` = 'Harrison'\t----- bird -----\tstudent_club"
  ],
  [
    "What kind of expenses incurred by members who have X-Large in size of tee shirt?",
    "SELECT expense_description FROM expense JOIN member ON expense.`link_to_member` = member.`member_id` JOIN event ON expense.`link_to_event` = event.`event_id` JOIN budget ON expense.`link_to_budget` = budget.`budget_id` JOIN income ON expense.`link_to_income` = income.`income_id` WHERE expense_description LIKE '%X-Large%' AND member.t_shirt_size = 'X-Large' AND event.event_id IN (SELECT event_id FROM event) AND budget.budget_id IN (SELECT budget_id FROM budget) AND income.income_id IN (SELECT income_id FROM income) ORDER BY expense.expense_date ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the zip code of member who incurred less than 50USD.",
    "SELECT T1.zip FROM member AS T1 JOIN income AS T2 ON T1.member_id = T2.link_to_member JOIN expense AS T3 ON T1.member_id = T3.link_to_member WHERE T2.amount < 50 AND T1.zip IS NOT NULL AND T3.cost < 50\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Phillip Cullen has joined.",
    "SELECT major_name FROM major JOIN member ON major.major_id = member.major_id WHERE member.member_id = 1;\t----- bird -----\tstudent_club"
  ],
  [
    "List out the position of members who joined major of Business.",
    "SELECT T1.`position` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Business'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members of Business have the Medium size of tee shirt?",
    "SELECT COUNT(member_id) FROM member WHERE t_shirt_size = 'Medium'\t----- bird -----\tstudent_club"
  ],
  [
    "List out the type of events which have remaining budget more than 30 USD.",
    "SELECT DISTINCT `type` FROM event WHERE `remaining` > 30 AND `event_status` = 'Open' ORDER BY `type` LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Mention the category of events which were held at MU 215.",
    "SELECT DISTINCT e.`category` FROM event e JOIN major m ON e.`location` = 'MU 215' WHERE e.`location` = 'MU 215' GROUP BY e.`category` LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What is the category of event which was taken place in 2020-03-24T12:00:00?",
    "SELECT event.type AS category FROM event JOIN major ON event.major_id = major.major_id JOIN zip_code ON event.zip_code = zip_code.zip_code JOIN member ON event.zip_code = member.zip_code WHERE event.event_date = '2020-03-24T12:00:00';\t----- bird -----\tstudent_club"
  ],
  [
    "State the name of major that Vice President has joined.",
    "SELECT `major_name` FROM major WHERE `major_id` = ( SELECT `major_id` FROM member WHERE `position` = 'Vice President' )\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of members who are major Mathematics in the list?",
    "SELECT CAST(COUNT(CASE WHEN T1.position = 'Member' AND T2.major_name = 'Mathematics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.major_id = T2.major_id JOIN event AS T3 ON T1.member_id = T3.event_id WHERE T2.major_name = 'Mathematics';\t----- bird -----\tstudent_club"
  ],
  [
    "State the category of events were held at MU 215.",
    "SELECT T1.`category` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`link_to_member` = 'MU 215'\t----- bird -----\tstudent_club"
  ],
  [
    "How many income are received with an amount of 50?",
    "SELECT COUNT(amount) FROM income WHERE amount = 50\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members, how many of them have an extra large t-shirt size?",
    "SELECT COUNT(T1.member_id) FROM member AS T1 JOIN major AS T2 ON T1.major_id = T2.major_id WHERE T1.t_shirt_size = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
    "SELECT COUNT(`major_id`) FROM major WHERE `department` = 'School of Applied Sciences, Technology and Education'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of members with a major in environmental engineering and include its department and college name.",
    "SELECT member.last_name FROM member JOIN major ON member.link_to_major = major.major_id JOIN event ON member.link_to_event = event.event_id JOIN attendance ON member.member_id = attendance.link_to_member JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON member.member_id = expense.link_to_member JOIN income ON member.member_id = income.link_to_member WHERE major.department = 'College of Engineering & Environmental Sciences' AND major.major_name = 'Environmental Engineering' AND expense.approved IS NOT NULL AND event.type = 'Game' AND event.name IN ('Women\\'s Soccer', 'Football game') AND expense.expense_date = (SELECT MAX(expense_date) FROM expense WHERE link_to_member = member.member_id);\t----- bird -----\tstudent_club"
  ],
  [
    "What are the budget category of the events located at MU 215 and a guest speaker type with a 0 budget spent?",
    "SELECT DISTINCT T1.category FROM event AS T1 JOIN major AS T3 ON T1.`event_id` = T3.`link_to_event` JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` JOIN budget AS T4 ON T1.`event_id` = T4.`link_to_event` WHERE T2.`link_to_event` = 'MU 215' AND T1.`spent` = 0 AND T3.`type` = 'Guest Speaker' AND T4.`spent` = 0 ORDER BY T1.category ASC;\t----- bird -----\tstudent_club"
  ],
  [
    "List the city and state of members enrolled under electrical and computer engineering department.",
    "SELECT T1.city, T1.state FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` JOIN event AS T3 ON T1.`link_to_event` = T3.`event_id` JOIN budget AS T4 ON T3.`event_id` = T4.`link_to_event` JOIN expense AS T5 ON T1.`member_id` = T5.`link_to_member` JOIN income AS T6 ON T1.`member_id` = T6.`link_to_member` WHERE T2.`college` = 'Electrical and Computer Engineering'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
    "SELECT T1.event_name FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` JOIN attendance AS T3 ON T1.`member_id` = T3.`link_to_member` JOIN event AS T4 ON T3.`link_to_event` = T4.`event_id` JOIN zip_code AS T5 ON T1.`zip` = T5.`zip_code` JOIN location AS T6 ON T5.`location` = T6.`location` WHERE T1.`position` = 'Vice President' AND T6.`location` = '900 E. Washington St.' AND T6.`location` IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "What is the last name and position of the student that bought pizza on 09/10/2019?",
    "SELECT T1.`last_name`, T1.`position` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`expense_description` = 'Pizza' AND T2.`expense_date` = '2019-09-10'\t----- bird -----\tstudent_club"
  ],
  [
    "List the last name of the members of the club that attended the women's soccer event.",
    "error: No SQL found in the input string\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members with t-shirt size of medium, what is the percentage of the amount 50 received by the Student_Club?",
    "SELECT CAST(SUM(CASE WHEN member.position = 'Member' THEN income.amount ELSE 0 END) AS REAL) * 100 / COUNT(member.member_id) FROM income JOIN member ON income.link_to_member = member.member_id WHERE member.t_shirt_size = 'Medium' AND member.position = 'Member' AND income.source = 'Dues'\t----- bird -----\tstudent_club"
  ],
  [
    "Which countries have zip codes with post office boxes?",
    "SELECT DISTINCT T1.state FROM zip_code AS T1 JOIN member AS T2 ON T1.zip_code = T2.zip WHERE T2.type = 'PO Box'\t----- bird -----\tstudent_club"
  ],
  [
    "What are the zip codes that have post office boxes in the country of the country of San Juan Municipio whose state is Puerto Rico?",
    "SELECT DISTINCT T1.state FROM zip_code AS T1 JOIN member AS T2 ON T1.zip = T2.zip JOIN event AS T3 ON T2.member_id = T3.event_id JOIN major AS T4 ON T2.major_id = T4.major_id JOIN attendance AS T5 ON T2.member_id = T5.link_to_member JOIN budget AS T6 ON T5.link_to_event = T6.link_to_event JOIN expense AS T7 ON T5.link_to_member = T7.link_to_member JOIN income AS T8 ON T5.link_to_member = T8.link_to_member WHERE T2.type = 'PO Box' AND T2.state = 'Puerto Rico' AND T2.city = 'San Juan Municipio' AND T2.type = 'Standard'\t----- bird -----\tstudent_club"
  ],
  [
    "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
    "SELECT event_name FROM event WHERE type = 'Game' AND event_status = 'Closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'\t----- bird -----\tstudent_club"
  ],
  [
    "Please provide links to events for members who have paid more than 50 dollar.",
    "SELECT T1.`link_to_event` FROM income AS T1 JOIN expense AS T2 ON T1.`income_id` = T2.`income_id` WHERE T2.`cost` > 50\t----- bird -----\tstudent_club"
  ],
  [
    "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
    "SELECT DISTINCT T1.`event_id`, T1.`event_name`, T1.`event_date`, T1.`type`, T1.`notes`, T1.`location` FROM event AS T1 INNER JOIN attendance AS T2 ON T1.`event_id` = T2.`link_to_event` WHERE T2.`link_to_member` IN ( SELECT T1.`member_id` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`approved` = 'true' AND T2.`expense_date` BETWEEN '2019-01-10' AND '2019-11-19' AND T2.`link_to_member` IS NOT NULL )\t----- bird -----\tstudent_club"
  ],
  [
    "Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".",
    "SELECT T1.college FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Katy' AND T2.college = 'rec1N0upiVLy5esTO'\t----- bird -----\tstudent_club"
  ],
  [
    "Please list the phone numbers of the members who majored in business at the College of Agriculture and Applied Sciences.",
    "SELECT T1.`phone` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T2.`major_name` = 'Business' AND T2.`college` = 'College of Agriculture and Applied Sciences'\t----- bird -----\tstudent_club"
  ],
  [
    "List emails of people who paid more than 20 dollars from 9/10/2019 to 11/19/2019.",
    "SELECT T1.`email` FROM member AS T1 INNER JOIN expense AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`cost` > 20 AND T2.`expense_date` BETWEEN '2019-09-10' AND '2019-11-19'\t----- bird -----\tstudent_club"
  ],
  [
    "How many members have education major in the College of Education & Human Services?",
    "SELECT COUNT(`member_id`) FROM member INNER JOIN major ON member.`link_to_major` = major.`major_id` WHERE major.`college` = 'College of Education & Human Services' AND major.`major_name` = 'education'\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the events that went over budget?",
    "SELECT CAST(SUM(budget.remaining) AS REAL) / COUNT(budget.event_id) * 100 FROM budget JOIN event ON budget.link_to_event = event.event_id JOIN major ON event.major_id = major.major_id JOIN zip_code ON member.zip = zip_code.zip_code JOIN member ON member.member_id = attendance.link_to_member JOIN expense ON expense.link_to_member = member.member_id WHERE budget.event_status = 'Closed' AND budget.remaining < 0\t----- bird -----\tstudent_club"
  ],
  [
    "Give the event ID, location, and status of events conducted from November 2019 to March 2020.",
    "SELECT event_id, location, status FROM event WHERE event_date BETWEEN '2019-11-01' AND '2020-03-31' AND location IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "List the expenses that spend more than fifty dollars on average.",
    "SELECT expense_id, expense_description, cost FROM expense WHERE cost > 50\t----- bird -----\tstudent_club"
  ],
  [
    "Find the full name of members whose t-shirt size is extra large.",
    "SELECT T1.`first_name` || ' ' || T1.`last_name` AS full_name FROM member AS T1 WHERE T1.`t_shirt_size` = 'X-Large'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the percentage of zip codes that are PO boxes.",
    "SELECT (COUNT(`type` = 'PO Box') / COUNT(`zip_code`)) * 100 FROM zip_code\t----- bird -----\tstudent_club"
  ],
  [
    "List the name and location of events that underspend its budget.",
    "SELECT event.`event_name`, event.`location` FROM event JOIN budget ON event.`event_id` = budget.`link_to_event` WHERE budget.`remaining` > 0\t----- bird -----\tstudent_club"
  ],
  [
    "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
    "SELECT event_name, event_date FROM event JOIN expense ON event.event_id = expense.event_id WHERE expense_description = 'Pizza' AND cost > 50 AND cost < 100\t----- bird -----\tstudent_club"
  ],
  [
    "What is the name and major of members who had to spend more than a hundred dollars on an expense?",
    "SELECT T1.first_name, T1.last_name, T2.major_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > 100 AND T2.link_to_budget IS NOT NULL AND T2.link_to_budget IS NOT NULL\t----- bird -----\tstudent_club"
  ],
  [
    "In the events with more than forty incomes, list the city and country in which the event is happening.",
    "SELECT DISTINCT T1.city, T1.country FROM event AS T1 JOIN zip_code AS T2 ON T1.city = T2.city JOIN member AS T3 ON T1.event_id = T3.event_id WHERE T3.amount > 40\t----- bird -----\tstudent_club"
  ],
  [
    "Among the members who incurred expenses in more than one event, who paid the most amount?",
    "SELECT T1.member_id FROM expense AS T1 JOIN event AS T2 ON T1.`link_to_event` = T2.`event_id` JOIN budget AS T3 ON T1.`link_to_budget` = T3.`budget_id` WHERE T1.`link_to_budget` IS NOT NULL GROUP BY T2.`event_id` HAVING COUNT(T2.`event_id`) > 1 ORDER BY MAX(T1.`cost`) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "What is the average amount paid by students in a position other than a member?",
    "SELECT AVG(T1.`amount`) FROM income AS T1 JOIN member AS T2 ON T1.`link_to_member` = T2.`member_id` WHERE T2.`position` != 'Member'\t----- bird -----\tstudent_club"
  ],
  [
    "List the name of events with less than average parking cost.",
    "SELECT event_name FROM event WHERE cost < ( SELECT AVG(cost) FROM expense WHERE category = 'Parking' )\t----- bird -----\tstudent_club"
  ],
  [
    "What is the percentage of the cost for the game events?",
    "SELECT CAST(SUM(cost) AS REAL) * 100 / (SELECT COUNT(event_id) FROM event WHERE type = 'Game') FROM expense JOIN event ON expense.link_to_event = event.event_id WHERE type = 'Game' AND expense.link_to_event IS NOT NULL;\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget allowed the most money for water, chips, and cookies?",
    "SELECT MAX(CAST(T2.`cost` AS REAL)) FROM expense AS T2 JOIN budget AS T3 ON T2.`link_to_budget` = T3.`budget_id` JOIN event AS T4 ON T2.`link_to_event` = T4.`event_id` WHERE T2.`expense_description` = 'Water, chips, cookies' AND T2.`link_to_budget` = T3.`budget_id` AND T2.`approved` IS NOT NULL AND T2.`remaining` > 0 AND T2.`link_to_event` = T4.`event_id` AND T2.`link_to_member` IN ( SELECT member_id FROM member WHERE T2.`link_to_member` = member.`member_id` ) GROUP BY T2.`expense_description`\t----- bird -----\tstudent_club"
  ],
  [
    "List the full name of the top five members who spend the most money in the descending order of spending.",
    "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost = ( SELECT MAX(cost) FROM expense ) ORDER BY T2.cost DESC LIMIT 5\t----- bird -----\tstudent_club"
  ],
  [
    "Give the full name and contact number of members who had to spend more than average on each expense.",
    "SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > ( SELECT AVG(cost) FROM expense )\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the difference in the percentage of members in Maine and Vermont.",
    "SELECT CAST(SUM(CASE WHEN T1.state = 'Maine' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.position) - CAST(SUM(CASE WHEN T1.state = 'Vermont' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.position) FROM member AS T1 JOIN event AS T2 ON T1.link_to_event = T2.event_id JOIN zip_code AS T3 ON T1.zip = T3.zip_code WHERE T1.position = 'Member' AND T1.state IN ('Maine', 'Vermont');\t----- bird -----\tstudent_club"
  ],
  [
    "What is the major of Garrett Gerke and which department does it belong to?",
    "SELECT T2.`department` FROM member AS T1 INNER JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` WHERE T1.`first_name` = 'Garrett' AND T1.`last_name` = 'Gerke'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
    "SELECT first_name, last_name FROM member WHERE member_id = ( SELECT member_id FROM expense WHERE expense_description = 'Water, Veggie tray, supplies' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the last names of students under the Elementary Education major and include their phone numbers.",
    "SELECT phone FROM member WHERE link_to_major = ( SELECT major_id FROM major WHERE major_name = 'Elementary Education' )\t----- bird -----\tstudent_club"
  ],
  [
    "What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category?",
    "SELECT `spent` FROM budget WHERE `link_to_event` = ( SELECT `event_id` FROM event WHERE `event_name` = 'January Speaker' )\t----- bird -----\tstudent_club"
  ],
  [
    "List the event names which were budgeted for the food.",
    "SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE budget.category = 'Food';\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
    "SELECT T1.`first_name`, T1.`last_name` FROM member AS T1 INNER JOIN income AS T2 ON T1.`member_id` = T2.`link_to_member` WHERE T2.`date_received` = '2019-09-09'\t----- bird -----\tstudent_club"
  ],
  [
    "Which budget category does the expense 'Posters' fall to?",
    "SELECT T2.`category` FROM expense AS T1 INNER JOIN budget AS T2 ON T1.`budget_id` = T2.`budget_id` WHERE T1.`expense_description` = 'Posters'\t----- bird -----\tstudent_club"
  ],
  [
    "Write the full name of the club member with the position of 'Secretary' and list which college the club member belongs to.",
    "SELECT `first_name`, `last_name` FROM member WHERE `position` = 'Secretary'\t----- bird -----\tstudent_club"
  ],
  [
    "Calculate the total amount spent on speaker gifts and list the name of the event they were spent on.",
    "SELECT T1.event_name FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event INNER JOIN budget AS T3 ON T3.budget_id = T2.link_to_budget WHERE T3.category = 'Speaker Gifts' GROUP BY T1.event_name ORDER BY SUM(T1.spent) DESC LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Where is the hometown of Garrett Girke?",
    "SELECT T1.city FROM member AS T1 JOIN major AS T2 ON T1.`link_to_major` = T2.`major_id` JOIN event AS T3 ON T1.`member_id` = T3.`link_to_member` JOIN attendance AS T4 ON T1.`member_id` = T4.`link_to_member` JOIN event AS T5 ON T1.`member_id` = T5.`link_to_member` WHERE T1.`first_name` = 'Garrett' AND T1.`last_name` = 'Girke' LIMIT 1\t----- bird -----\tstudent_club"
  ],
  [
    "Which student has the hometown of Lincolnton, North Carolina with the zip code of 28092? List their full name and position.",
    "SELECT position FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code WHERE city = 'Lincolnton' AND state = 'North Carolina'\t----- bird -----\tstudent_club"
  ],
  [
    "How many gas stations in CZE has Premium gas?",
    "SELECT COUNT(`GasStationID`) FROM gasstations WHERE `Segment` = 'Premium' AND `Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the ratio of costumers who pay in EUR against customers who pay in CZK?",
    "SELECT COUNT(CASE WHEN customers.Currency = 'EUR' THEN 1 ELSE NULL END) / COUNT(CASE WHEN customers.Currency = 'CZK' THEN 1 ELSE NULL END) FROM customers\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In 2012, who had the least consumption in LAM?",
    "SELECT T1.`Segment` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` BETWEEN '201201' AND '201212' AND T1.`CustomerID` IN ( SELECT T3.`CustomerID` FROM transactions_1k AS T3 INNER JOIN yearmonth AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T4.`Date` BETWEEN '201201' AND '201212' GROUP BY T3.`CustomerID` ORDER BY SUM(T3.`Amount`) ASC LIMIT 1 ) GROUP BY T1.`CustomerID` ORDER BY SUM(T2.`Consumption`) ASC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the average monthly consumption of customers in SME for the year 2013?",
    "SELECT AVG(yearmonth.Consumption) / 12 FROM yearmonth INNER JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Segment = 'SME' AND yearmonth.Date BETWEEN '201301' AND '201312'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customers, paying in CZK, consumed the most gas in 2011?",
    "SELECT T1.`CustomerID` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Currency` = 'CZK' AND T2.`Date` BETWEEN '201101' AND '201112' ORDER BY T2.`Consumption` DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many customers in KAM had a consumption of less than 30,000 for the year 2012?",
    "SELECT COUNT(DISTINCT T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Date BETWEEN '201201' AND '201212' AND T2.Consumption < 30000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?",
    "SELECT SUM(CASE WHEN customers.Currency = 'CZK' THEN yearmonth.Consumption ELSE 0 END) - SUM(CASE WHEN customers.Currency = 'EUR' THEN yearmonth.Consumption ELSE 0 END) FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency IS NOT NULL AND yearmonth.Date BETWEEN '2012-01-01' AND '2012-12-31';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most gas use paid in EUR?",
    "SELECT customers.Currency FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID WHERE yearmonth.Date = ( SELECT Date FROM yearmonth ORDER BY yearmonth.Consumption DESC LIMIT 1 ) GROUP BY customers.Currency ORDER BY COUNT(yearmonth.Date) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which segment had the least consumption?",
    "SELECT Segment FROM yearmonth WHERE Consumption = (SELECT MIN(Consumption) FROM yearmonth) ORDER BY Consumption ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which year recorded the most consumption of gas paid in CZK?",
    "SELECT T1.Date FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'CZK' ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the gas consumption peak month for SME customers in 2013?",
    "SELECT T1.Month FROM ( SELECT SUBSTR(T1.Date, 7, 2) AS Month FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date LIKE '2013%' ) AS T3 WHERE T3.Month = ( SELECT MAX(T2.Month) FROM ( SELECT SUBSTR(T1.Date, 7, 2) AS Month FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date LIKE '2013%' ) AS T4 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
    "SELECT T1.Consumption AS SME_Consumption, T2.Consumption AS LAM_Consumption, T3.Consumption AS KAM_Consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'SME' AND T1.Date BETWEEN '201301' AND '201312' GROUP BY T1.CustomerID HAVING T2.Segment = 'SME' UNION ALL SELECT T1.Consumption AS SME_Consumption, T2.Consumption AS LAM_Consumption, T3.Consumption AS KAM_Consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'LAM' AND T1.Date BETWEEN '201301' AND '201312' GROUP BY T1.CustomerID HAVING T2.Segment = 'LAM' UNION ALL SELECT T1.Consumption AS SME_Consumption, T2.Consumption AS LAM_Consumption, T3.Consumption AS KAM_Consumption FROM yearmonth AS T1 JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' AND T1.Date BETWEEN '201301' AND '201312' GROUP BY T1.CustomerID HAVING T2.Segment = 'KAM'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
    "SELECT Segment FROM ( SELECT Segment, (SUM(CASE WHEN Date LIKE '2013%' THEN Amount ELSE 0 END) - SUM(CASE WHEN Date LIKE '2012%' THEN Amount ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2013%' THEN Amount ELSE 0 END) * 100 AS PercentageIncrease FROM transactions_1k WHERE Date BETWEEN '2012-01-01' AND '2013-12-31' GROUP BY Segment ) AS T1 WHERE PercentageIncrease = ( SELECT MAX(PercentageIncrease) FROM ( SELECT Segment, (SUM(CASE WHEN Date LIKE '2013%' THEN Amount ELSE 0 END) - SUM(CASE WHEN Date LIKE '2012%' THEN Amount ELSE 0 END)) / SUM(CASE WHEN Date LIKE '2013%' THEN Amount ELSE 0 END) * 100 AS PercentageIncrease FROM transactions_1k WHERE Date BETWEEN '2012-01-01' AND '2013-12-31' GROUP BY Segment ) ) ORDER BY PercentageIncrease DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did customer 6 consume in total between August and November 2013?",
    "SELECT SUM(Consumption) FROM yearmonth WHERE `Date` BETWEEN '20130801' AND '20131130' AND `CustomerID` = 6\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?",
    "SELECT COUNT(`ChainID`) - ( SELECT COUNT(`ChainID`) FROM gasstations WHERE `Country` = 'SVK' ) FROM gasstations WHERE `Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much more was customer 7 consuming in April 2013 than customer 5?",
    "SELECT T1.Consumption - T2.Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2013-04' AND T2.CustomerID = 7\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Is it true that more SMEs pay in Czech koruna than in euros? If so, how many more?",
    "SELECT SUM(T1.Amount) - ( SELECT SUM(T2.Amount) FROM transactions_1k AS T2 INNER JOIN customers AS T3 ON T2.`CustomerID` = T3.`CustomerID` WHERE T3.`Segment` = 'SME' AND T2.`Currency` = 'EUR' ) AS Difference FROM transactions_1k AS T1 INNER JOIN customers AS T4 ON T1.`CustomerID` = T4.`CustomerID` WHERE T4.`Segment` = 'SME' AND T1.`Currency` = 'CZK';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?",
    "error: No SQL found in the input string\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who among KAM's customers consumed the most? How much did it consume?",
    "SELECT T1.CustomerID, T1.Consumption FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Segment = 'KAM' ORDER BY T1.Consumption DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How much did the KAM customers consume in total in May 2013?",
    "SELECT SUM(T1.Consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '201305' AND T2.Segment = 'KAM'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many percent of LAM customer consumed more than 46.73?",
    "SELECT CAST( COUNT(`ProductID`) AS REAL ) * 100 / ( SELECT COUNT(`Segment`) FROM customers WHERE `Segment` = 'LAM' ) FROM transactions_1k WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Segment` = 'LAM' ) AND `Amount` > 46.73\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country has more \"value for money\" gas stations? Please give a total number of \"value for money\" gas stations in each country.",
    "SELECT T1.Country, COUNT(T2.GasStationID) AS TotalValueForMoneyGasStations FROM gasstations AS T1 JOIN products AS T2 ON T1.Segment = T2.Segment WHERE T2.Segment = 'Value for money' GROUP BY T1.Country ORDER BY TotalValueForMoneyGasStations DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of KAM customers pay in euros?",
    "SELECT (SUM(T1.Price) / SUM(T1.Amount)) * 100 FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "In February 2012, what percentage of customers consumed more than 528.3?",
    "SELECT CAST(SUM(CASE WHEN T2.Consumption > 528.3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.CustomerID) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date LIKE '201202%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What percentage of Slovakian gas stations are premium?",
    "SELECT CAST(SUM(CASE WHEN T2.Country = 'SVK' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Country = 'CZE' THEN 1 ELSE 0 END) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN gasstations AS T3 ON T1.`GasStationID` = T3.`GasStationID` INNER JOIN transactions_1k AS T4 ON T1.`GasStationID` = T4.`GasStationID` INNER JOIN products AS T5 ON T4.`ProductID` = T5.`ProductID` WHERE T2.Country = 'SVK'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client ID consumed the most in September 2013?",
    "SELECT customers.Segment FROM customers JOIN yearmonth ON customers.CustomerID = yearmonth.CustomerID JOIN transactions_1k ON customers.CustomerID = transactions_1k.CustomerID WHERE yearmonth.Date LIKE '201309%' ORDER BY transactions_1k.Date DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which client segment consumed the least in September 2013?",
    "SELECT T1.`Segment` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` LIKE '201309%' ORDER BY T2.`Consumption` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which SME customer consumed the least in June 2012?",
    "SELECT T1.`Segment` FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '201206' ORDER BY T2.`Consumption` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the highest monthly consumption in the year 2012?",
    "SELECT MAX(T1.Consumption) FROM yearmonth AS T1 WHERE T1.Date LIKE '2012-%' AND T1.Consumption IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the biggest monthly consumption of the customers who use euro as their currency?",
    "SELECT SUM(yearmonth.Consumption) / 12 FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID WHERE customers.Currency = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products consumed in September, 2013.",
    "SELECT DISTINCT T1.`Description` FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` LIKE '201309'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the countries of the gas stations with transactions taken place in June, 2013.",
    "SELECT g.Country FROM gasstations g JOIN transactions_1k t ON g.GasStationID = t.GasStationID WHERE t.Date LIKE '201306%' AND t.Date NOT IN ( SELECT Date FROM yearmonth WHERE CustomerID = g.CustomerID ) GROUP BY g.Country ORDER BY COUNT(t.TransactionID) DESC\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the chains of the gas stations with transactions in euro.",
    "SELECT DISTINCT T1.ChainID FROM transactions_1k AS T1 JOIN products AS T2 ON T1.ProductID = T2.ProductID JOIN yearmonth AS T3 ON T1.CustomerID = T3.CustomerID JOIN customers AS T4 ON T1.CustomerID = T4.CustomerID WHERE T2.Currency = 'EUR' GROUP BY T1.ChainID HAVING COUNT(T1.TransactionID) > 0\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product description of the products bought in transactions in euro.",
    "SELECT T1.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Currency = 'EUR' AND T2.Description IS NOT NULL;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in January, 2012?",
    "SELECT AVG(`Price`) FROM transactions_1k WHERE `Date` LIKE '2012-01%' AND `Date` IS NOT NULL;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?",
    "SELECT COUNT(`CustomerID`) FROM yearmonth WHERE `CustomerID` IN ( SELECT `CustomerID` FROM customers WHERE `Currency` = 'EUR' ) AND Consumption > 1000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the product descriptions of the transactions taken place in the gas stations in the Czech Republic.",
    "SELECT T1.Description FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
    "SELECT `Date` FROM transactions_1k WHERE `GasStationID` IN ( SELECT `GasStationID` FROM gasstations WHERE `ChainID` = 11 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?",
    "SELECT COUNT(T1.TransactionID) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Country = 'CZE' AND T1.Price > 1000\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?",
    "SELECT COUNT(*) FROM transactions_1k JOIN yearmonth ON transactions_1k.CustomerID = yearmonth.CustomerID WHERE transactions_1k.Date > '2012-01-01' AND yearmonth.Country = 'CZE';\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the average total price of the transactions taken place in gas stations in the Czech Republic?",
    "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T1.GasStationID = T3.GasStationID WHERE T3.Country = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customers who paid in the euro, what is their average total price of the transactions?",
    "SELECT AVG(T1.Price) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Currency = 'EUR' GROUP BY T1.CustomerID ORDER BY AVG(T1.Price) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which customer paid the most in 2012/8/25?",
    "SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25' AND T1.Amount = (SELECT MAX(Amount) FROM transactions_1k WHERE Date = '2012-08-25') GROUP BY T1.CustomerID ORDER BY SUM(T1.Amount) DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country's gas station had the first paid cusomer in 2012/8/25?",
    "SELECT T1.`Country` FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.`GasStationID` = T2.`GasStationID` WHERE T2.`CustomerID` = ( SELECT T1.`CustomerID` FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '2012-08-25' ORDER BY T1.`Date` ASC, T1.`Time` ASC LIMIT 1 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
    "SELECT `Currency` FROM customers WHERE `CustomerID` = ( SELECT `CustomerID` FROM transactions_1k WHERE `Time` = '16:25:00' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What segment did the customer have at 2012/8/23 21:20:00?",
    "SELECT T1.`Segment` FROM yearmonth AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`Date` = '2012-08-23' AND T1.`Time` = '21:20:00' AND T2.`Date` = '2012-08-23' AND T2.`Time` = '21:20:00' AND T2.`ProductID` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "How many transactions were paid in EUR in the morning of 2012/8/26?",
    "SELECT COUNT(`Amount`) FROM transactions_1k WHERE `Date` = '2012-08-26' AND `Price` = 'EUR'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the earliest customer, what segment did he/she have?",
    "SELECT `Segment` FROM customers WHERE `Date` = (SELECT MIN(`Date`) FROM yearmonth) ORDER BY `Date` ASC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the deal happened at 2012/8/24 12:42:00, which country was it?",
    "SELECT `Country` FROM gasstations WHERE `GasStationID` = ( SELECT `GasStationID` FROM transactions_1k WHERE `Date` = '2012-08-24' )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What was the product id of the transaction happened at 2012/8/23 21:20:00?",
    "SELECT T1.ProductID FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-23' AND T1.Time = '21:20:00'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?",
    "SELECT Date, Consumption FROM ( SELECT Date, Consumption, Amount FROM transactions_1k WHERE Amount = 124.05 ) AS subquery JOIN yearmonth ON subquery.CustomerID = yearmonth.CustomerID WHERE Date LIKE '2012-01-%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?",
    "SELECT COUNT(`CustomerID`) FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.`CustomerID` = yearmonth.`CustomerID` WHERE `Date` = '2012-08-26' AND `Country` = 'CZE'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?",
    "SELECT T1.Currency FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` LIKE '201306%' AND T1.`Amount` = 214582.17 AND T1.`Currency` IS NOT NULL AND T1.`Currency` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country was the card owner of No.667467 in?",
    "SELECT T1.Country FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T1.`CardID` = '667467' AND T1.`CustomerID` IS NOT NULL AND T1.`GasStationID` IS NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What's the nationality of the customer who spent 548.4 in 2012/8/24?",
    "SELECT T1.Country FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` WHERE T2.`Date` = '2012-08-24' AND T2.`Amount` = 548.4 AND T1.`Country` IS NOT NULL;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of the customers who used EUR in 2012/8/25?",
    "SELECT CAST(COUNT(CASE WHEN T1.Currency = 'EUR' THEN 1 ELSE NULL END) * 100 / COUNT(T1.CustomerID) AS REAL) AS Percentage FROM customers AS T1 JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-25' AND T1.Currency = 'EUR' AND T1.Currency NOT NULL\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
    "SELECT SUM(CASE WHEN T1.Date = '2012-08-24' THEN T1.Consumption ELSE 0 END) / SUM(CASE WHEN T1.Date = '2012-08-24' THEN T1.Consumption ELSE 0 END) AS ConsumptionDecreaseRate FROM yearmonth AS T1 JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date = '2012-08-24' AND T2.Amount = 634.8 AND T2.Amount IS NOT NULL;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which gas station has the highest amount of revenue?",
    "SELECT GasStationID, SUM(Amount) AS Revenue FROM transactions_1k GROUP BY GasStationID ORDER BY Revenue DESC LIMIT 1\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the percentage of \"premium\" against the overall segment in \"SVK\"?",
    "SELECT CAST(SUM(CASE WHEN T1.Description = 'Premium' THEN T1.Amount ELSE 0 END) AS REAL) * 100 FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Country = 'SVK' AND T1.Description IS NOT NULL;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?",
    "SELECT SUM(T1.Amount) FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = 38508 AND T1.Date LIKE '201201%'\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which are the top five best selling products? Please state the full name of them.",
    "SELECT T2.`Description` FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.`ProductID` = T2.`ProductID` GROUP BY T2.`ProductID` ORDER BY SUM(T1.`Amount`) DESC LIMIT 5;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
    "SELECT T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.`CustomerID` = T2.`CustomerID` INNER JOIN yearmonth AS T3 ON T2.`CustomerID` = T3.`CustomerID` WHERE T1.`CustomerID` = ( SELECT T1.`CustomerID` FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.`CustomerID` = T2.`CustomerID` GROUP BY T1.`CustomerID` ORDER BY SUM(T1.Amount * T1.Price) DESC LIMIT 1 )\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "Which country had the gas station that sold the most expensive product id No.2 for one unit?",
    "SELECT T2.Country FROM products AS T1 JOIN transactions_1k AS T2 ON T1.`ProductID` = T2.`ProductID` WHERE T2.`ProductID` = 2 GROUP BY T2.Country ORDER BY MAX(T2.Price) DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ],
  [
    "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.",
    "SELECT T1.`Consumption` FROM transactions_1k AS T1 JOIN products AS T2 ON T1.`ProductID` = T2.`ProductID` WHERE T2.`Description` = 'Service charge' AND T1.`Amount` * T1.`Price` > 29.00 AND T1.`Date` LIKE '201208%' AND T1.`CustomerID` IN ( SELECT T3.`CustomerID` FROM customers AS T3 INNER JOIN yearmonth AS T4 ON T3.`CustomerID` = T4.`CustomerID` WHERE T4.`Date` LIKE '201208%' ) ORDER BY T1.`Consumption` DESC LIMIT 1;\t----- bird -----\tdebit_card_specializing"
  ]
]