[
  {
    "idx": 0,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT count(*) FROM club",
    "pred": "SELECT COUNT(*) FROM club",
    "exec_result": 1
  },
  {
    "idx": 1,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT count(*) FROM club",
    "pred": "SELECT Player_ID, Name, Country, Earnings, Events_number, Wins_count, Club_ID FROM player;",
    "exec_result": 0
  },
  {
    "idx": 2,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club ORDER BY Name ASC",
    "pred": "SELECT Name FROM club ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 3,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club ORDER BY Name ASC",
    "pred": "SELECT Name FROM club ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 4,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manager ,  Captain FROM club",
    "pred": "SELECT Manager, Captain FROM club",
    "exec_result": 1
  },
  {
    "idx": 5,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manager ,  Captain FROM club",
    "pred": "SELECT club.Name, club.Manager, club.Captain FROM club JOIN player ON club.Club_ID = player.Club_ID WHERE player.Earnings = (SELECT MAX(Earnings) FROM player)",
    "exec_result": 0
  },
  {
    "idx": 6,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
    "pred": "SELECT Name FROM club WHERE Manufacturer != 'Nike'",
    "exec_result": 1
  },
  {
    "idx": 7,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
    "pred": "SELECT Name FROM club WHERE Manufacturer != 'Nike'",
    "exec_result": 1
  },
  {
    "idx": 8,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "pred": "SELECT `Name` FROM player ORDER BY `Wins_count` ASC",
    "exec_result": 1
  },
  {
    "idx": 9,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "pred": "SELECT p.Name, p.Country, p.Earnings, p.Wins_count FROM player p JOIN club c ON p.Club_ID = c.Club_ID ORDER BY p.Wins_count ASC;",
    "exec_result": 0
  },
  {
    "idx": 10,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 11,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT `Name` FROM `player` WHERE `Earnings` = (SELECT MAX(`Earnings`) FROM `player`);",
    "exec_result": 1
  },
  {
    "idx": 12,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
    "pred": "SELECT DISTINCT Country FROM player WHERE Earnings > 1200000;",
    "exec_result": 1
  },
  {
    "idx": 13,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
    "pred": "SELECT Country FROM player WHERE Earnings > 1200000",
    "exec_result": 1
  },
  {
    "idx": 14,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT Country FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player WHERE Wins_count > 2)",
    "exec_result": 1
  },
  {
    "idx": 15,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
    "pred": "SELECT `Country`, COUNT(*) as `Number_of_Wins` FROM `player` WHERE `Wins_count` > 2 GROUP BY `Club_ID` ORDER BY `Number_of_Wins` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 16,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
    "pred": "SELECT player.Name, club.Name FROM player JOIN club ON player.Club_ID = club.Club_ID",
    "exec_result": 1
  },
  {
    "idx": 17,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
    "pred": "SELECT player.Name, club.Name FROM player JOIN club ON player.Club_ID = club.Club_ID",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
    "pred": "SELECT T1.`Name` FROM club AS T1 JOIN player AS T2 ON T1.`Club_ID` = T2.`Club_ID` WHERE T2.`Wins_count` > 2",
    "exec_result": 1
  },
  {
    "idx": 19,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
    "pred": "SELECT club.Name FROM club JOIN player ON club.Club_ID = player.Club_ID WHERE player.Wins_count > 2",
    "exec_result": 1
  },
  {
    "idx": 20,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
    "pred": "SELECT `Name` FROM `player` WHERE `Club_ID` IN (SELECT `Club_ID` FROM `club` WHERE `Manager` = 'Sam Allardyce')",
    "exec_result": 1
  },
  {
    "idx": 21,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
    "pred": "SELECT `Name` FROM player WHERE `Club_ID` IN (SELECT `Club_ID` FROM club WHERE `Manager` = 'Sam Allardyce');",
    "exec_result": 1
  },
  {
    "idx": 22,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
    "pred": "SELECT `Name`, AVG(`Earnings`) as `Average_Earnings` FROM `club` JOIN `player` ON `club`.`Club_ID` = `player`.`Club_ID` GROUP BY `Name` ORDER BY `Average_Earnings` DESC",
    "exec_result": 0
  },
  {
    "idx": 23,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
    "pred": "SELECT T1.`Name`, AVG(T2.`Earnings`) as `Average_Earnings` FROM club as T1 JOIN player as T2 ON T1.`Club_ID` = T2.`Club_ID` GROUP BY T1.`Club_ID` ORDER BY AVG(T2.`Earnings`) DESC",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
    "pred": "SELECT `Manufacturer`, COUNT(*) FROM club GROUP BY `Manufacturer`",
    "exec_result": 1
  },
  {
    "idx": 25,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
    "pred": "SELECT `Manufacturer`, COUNT(*) as `Number_of_Clubs` FROM club JOIN player ON club.`Club_ID` = player.`Club_ID` GROUP BY `Manufacturer`",
    "exec_result": 0
  },
  {
    "idx": 26,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Manufacturer`, COUNT(*) as `Count` FROM `club` GROUP BY `Manufacturer` ORDER BY `Count` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 27,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 28,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
    "pred": "SELECT `Manufacturer`, COUNT(*) as `Number_of_Clubs` FROM club GROUP BY `Manufacturer` HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 29,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
    "pred": "SELECT `Manufacturer`, COUNT(*) as `Number_of_Clubs` FROM club GROUP BY `Manufacturer` HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 30,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
    "pred": "SELECT `Country`, COUNT(*) as `Number_of_Players` FROM `player` GROUP BY `Country` HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 31,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
    "pred": "SELECT Country, COUNT(*) as Number_of_Players FROM player GROUP BY Country HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 32,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "pred": "SELECT `Name` FROM club WHERE `Club_ID` NOT IN (SELECT DISTINCT `Club_ID` FROM `player`)",
    "exec_result": 1
  },
  {
    "idx": 33,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "pred": "SELECT T1.`Name` FROM club AS T1 LEFT JOIN player AS T2 ON T1.`Club_ID` = T2.`Club_ID` WHERE T2.`Club_ID` IS NULL",
    "exec_result": 1
  },
  {
    "idx": 34,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
    "pred": "SELECT p.Name, p.Country, p.Earnings, p.Events_number, p.Wins_count, c.Name AS Club_Name FROM player p JOIN club c ON p.Club_ID = c.Club_ID WHERE p.Earnings > 1400000 AND p.Earnings < 1100000 ORDER BY p.Earnings DESC;",
    "exec_result": 0
  },
  {
    "idx": 35,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
    "pred": "SELECT club.Name FROM club WHERE club.Club_ID IN ( SELECT player.Club_ID FROM player WHERE player.Earnings > 1400000 ) AND club.Club_ID IN ( SELECT player.Club_ID FROM player WHERE player.Earnings < 1100000 )",
    "exec_result": 0
  },
  {
    "idx": 36,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT COUNT (DISTINCT Country) FROM player",
    "pred": "SELECT COUNT(DISTINCT Country) as NumberOfDistinctCountries FROM player;",
    "exec_result": 1
  },
  {
    "idx": 37,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT COUNT (DISTINCT Country) FROM player",
    "pred": "SELECT COUNT(DISTINCT Country) as Number_of_Countries FROM player",
    "exec_result": 1
  },
  {
    "idx": 38,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
    "pred": "SELECT `Earnings` FROM `player` WHERE `Country` = 'Australia' OR `Country` = 'Zimbabwe'",
    "exec_result": 1
  },
  {
    "idx": 39,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
    "pred": "SELECT `Earnings` FROM `player` WHERE `Country` = 'Australia' OR `Country` = 'Zimbabwe';",
    "exec_result": 1
  },
  {
    "idx": 40,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
    "pred": "SELECT C.customer_id, C.customer_first_name, C.customer_last_name FROM Customers C INNER JOIN Orders O ON C.customer_id = O.customer_id INNER JOIN Order_Items OI ON O.order_id = OI.order_id GROUP BY C.customer_id HAVING COUNT(O) > 2 AND COUNT(OI) >= 3",
    "exec_result": 0
  },
  {
    "idx": 41,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 42,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
    "pred": "SELECT Orders.order_id, Orders.order_status_code, COUNT(Order_Items.order_item_id) as product_count FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.order_status_code;",
    "exec_result": 1
  },
  {
    "idx": 43,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
    "pred": "SELECT Orders.order_id, COUNT(Order_Items.product_id) as product_count, Orders.order_status_code FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id, Orders.order_status_code;",
    "exec_result": 1
  },
  {
    "idx": 44,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
    "pred": "SELECT `date_order_placed` FROM `Orders` WHERE `order_id` IN ( SELECT `order_id` FROM `Order_Items` GROUP BY `order_id` HAVING COUNT(`order_item_id`) > 1 ) ORDER BY `date_order_placed` ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 45,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
    "pred": "SELECT date_order_placed as Order_Date FROM Orders WHERE (SELECT COUNT(order_id) FROM Order_Items WHERE Order_Items.order_id = Orders.order_id) > 1;",
    "exec_result": 0
  },
  {
    "idx": 46,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.customer_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 47,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name FROM Customers LEFT JOIN Orders ON Customers.customer_id = Orders.customer_id WHERE Orders.customer_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 48,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_id ,  product_name ,  product_price ,  product_color FROM Products EXCEPT SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.product_id HAVING count(*)  >=  2",
    "pred": "SELECT Products.product_id, Products.product_name, Products.product_price, Products.product_color FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_id HAVING COUNT(DISTINCT Order_Items.order_id) >= 2",
    "exec_result": 0
  },
  {
    "idx": 49,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2",
    "pred": "SELECT Products.product_id, Products.product_name, Products.product_price, Products.product_color FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id LEFT JOIN Orders ON Order_Items.order_id = Orders.order_id WHERE Orders.order_id IS NULL GROUP BY Products.product_id HAVING COUNT(Orders.order_id) < 2;",
    "exec_result": 0
  },
  {
    "idx": 50,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
    "pred": "SELECT Orders.order_id, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id HAVING COUNT(DISTINCT Order_Items.product_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 51,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
    "pred": "SELECT Orders.order_id, Orders.date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Orders.order_id HAVING COUNT(DISTINCT Order_Items.product_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 52,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Products.product_id, Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_id ORDER BY COUNT(Order_Items.order_item_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 53,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Products.product_id, Products.product_name, Products.product_price FROM ( SELECT Order_Items.product_id, COUNT(Order_Items.product_id) as product_count FROM Orders INNER JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY Order_Items.product_id ORDER BY product_count DESC LIMIT 10 ) as TopProducts INNER JOIN Products ON TopProducts.product_id = Products.product_id",
    "exec_result": 0
  },
  {
    "idx": 54,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1",
    "pred": "SELECT Orders.order_id, SUM(Products.product_price) as sum_of_prices FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id ORDER BY sum_of_prices ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 55,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1",
    "pred": "SELECT total_cost FROM ( SELECT Orders.order_id, SUM(Products.product_price) as total_cost FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id ORDER BY total_cost ASC LIMIT 1 ) as least_expensive_order;",
    "exec_result": 0
  },
  {
    "idx": 56,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `payment_method_code`, COUNT(*) as `count` FROM `Customer_Payment_Methods` GROUP BY `payment_method_code` ORDER BY `count` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 57,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT CP.payment_method_code, COUNT(C.customer_id) AS customer_count FROM Customer_Payment_Methods CP JOIN Customers C ON CP.customer_id = C.customer_id GROUP BY CP.payment_method_code ORDER BY customer_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 58,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
    "pred": "SELECT gender_code, COUNT(DISTINCT product_id) as number_of_products FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id GROUP BY gender_code;",
    "exec_result": 1
  },
  {
    "idx": 59,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
    "pred": "SELECT gender_code, COUNT(*) as number_of_products FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id GROUP BY gender_code;",
    "exec_result": 0
  },
  {
    "idx": 60,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
    "pred": "SELECT gender_code, COUNT(*) as number_of_orders FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id GROUP BY gender_code;",
    "exec_result": 1
  },
  {
    "idx": 61,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
    "pred": "SELECT gender_code, COUNT(*) AS number_of_orders FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id GROUP BY gender_code;",
    "exec_result": 1
  },
  {
    "idx": 62,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code FROM Customers INNER JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 63,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 64,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
    "pred": "SELECT Invoices.invoice_status_code, Invoices.invoice_date, Shipments.shipment_date FROM Invoices JOIN Shipments ON Invoices.invoice_number = Shipments.invoice_number;",
    "exec_result": 1
  },
  {
    "idx": 65,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
    "pred": "SELECT Customers.customer_id, Customers.login_name, Customers.login_password, Customers.phone_number, Customers.address_line_1, Customers.town_city, Customers.county, Customers.country, Customer_Payment_Methods.payment_method_code, Invoices.invoice_number, Invoices.invoice_status_code, Invoices.invoice_date, Orders.order_id, Orders.order_status_code, Orders.date_order_placed, Order_Items.product_id, Order_Items.order_item_status_code, Shipments.shipment_id, Shipments.shipment_tracking_number, Shipments.shipment_date FROM Customers JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Invoices ON Orders.order_id = Invoices.invoice_number JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id;",
    "exec_result": 0
  },
  {
    "idx": 66,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "SELECT Products.product_name, Shipments.shipment_date FROM Shipment_Items JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id JOIN Order_Items ON Shipments.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id ORDER BY Products.product_name;",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "SELECT Products.product_name, Shipments.shipment_date FROM Products JOIN Shipment_Items ON Products.product_id = Shipment_Items.product_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE Shipments.shipment_id IN ( SELECT Shipment_Items.shipment_id FROM Shipment_Items JOIN Order_Items ON Shipment_Items.order_item_id = Order_Items.order_item_id JOIN Orders ON Order_Items.order_id = Orders.order_id WHERE Orders.customer_id = ( SELECT customer_id FROM Customers WHERE email_address = 'melody.schuppe@example.org' ) );",
    "exec_result": 0
  },
  {
    "idx": 68,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
    "pred": "SELECT Order_Items.order_item_status_code, Shipments.shipment_tracking_number FROM Order_Items JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id WHERE Order_Items.order_item_status_code = 'Delivered' AND Shipments.invoice_number IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 69,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
    "pred": "SELECT Order_Items.order_item_status_code, Shipment_Items.order_item_id, Shipments.shipment_tracking_number FROM Order_Items JOIN Shipment_Items ON Order_Items.order_id = Shipment_Items.order_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE Order_Items.order_item_status_code = 'Delivered' AND Shipments.shipment_status_code = 'Delivered' AND Shipment_Items.order_item_id IN ( SELECT order_item_id FROM Order_Items JOIN Shipment_Items ON Order_Items.order_id = Shipment_Items.order_id WHERE order_item_status_code = 'Delivered' );",
    "exec_result": 0
  },
  {
    "idx": 70,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "SELECT Products.product_name, Customers.product_color FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id INNER JOIN Orders ON Order_Items.order_id = Orders.order_id INNER JOIN Shipments ON Orders.order_id = Shipments.order_id INNER JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id INNER JOIN Order_Items AS Order_Items_Ship ON Order_Items_Ship.order_item_id = Shipment_Items.order_item_id WHERE Order_Items_Ship.order_item_status_code = 'Delivered' AND Shipments.invoice_number IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 71,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "SELECT Products.product_name, Products.product_color FROM Products JOIN Shipment_Items ON Products.product_id = Shipment_Items.product_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id WHERE Shipments.shipment_tracking_number IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 72,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
    "pred": "SELECT DISTINCT Products.product_name, Products.product_price, Products.product_description FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Products.product_id IN ( SELECT product_id FROM Order_Items WHERE order_item_status_code = 'Delivered' ) AND Customers.gender_code = 'Female';",
    "exec_result": 1
  },
  {
    "idx": 73,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
    "pred": "SELECT Products.product_name, Products.product_price, Products.product_description FROM Products INNER JOIN Order_Items ON Products.product_id = Order_Items.product_id INNER JOIN Orders ON Order_Items.order_id = Orders.order_id INNER JOIN Customers ON Orders.customer_id = Customers.customer_id WHERE Customers.gender_code = 'Female'",
    "exec_result": 1
  },
  {
    "idx": 74,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
    "pred": "SELECT Orders.order_id, Invoices.invoice_status_code FROM Orders JOIN Customers ON Orders.customer_id = Customers.customer_id JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id JOIN Invoices ON Customer_Payment_Methods.customer_id = Invoices.customer_id WHERE Invoices.invoice_status_code = 'Paid' AND Orders.order_status_code != 'Delivered'",
    "exec_result": 0
  },
  {
    "idx": 75,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 76,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.order_id ,  t1.date_order_placed ,  sum(t3.product_price) from orders as t1 join order_items as t2 on t1.order_id  =  t2.order_id join products as t3 on t2.product_id  =  t3.product_id group by t1.order_id",
    "pred": "SELECT Orders.order_id, Orders.date_order_placed, SUM(Order_Items.product_price * Products.product_price) AS total_cost FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Orders.order_id, Orders.date_order_placed;",
    "exec_result": 0
  },
  {
    "idx": 77,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed ,  sum(T3.product_price) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id JOIN Products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T1.order_id",
    "pred": "SELECT Orders.order_id, Orders.date_order_placed, SUM(Products.product_price * Order_Items.quantity) as total_amount_paid FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id JOIN Shipment_Items ON Order_Items.order_item_id = Shipment_Items.order_item_id JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id JOIN Invoices ON Shipments.invoice_number = Invoices.invoice_number GROUP BY Orders.order_id;",
    "exec_result": 0
  },
  {
    "idx": 78,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Orders",
    "pred": "SELECT COUNT(DISTINCT Orders.customer_id) FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 79,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Orders",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) AS NumberOfCustomers FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 80,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
    "pred": "SELECT COUNT(DISTINCT order_item_status_code) AS number_of_item_states_in_orders FROM Order_Items;",
    "exec_result": 1
  },
  {
    "idx": 81,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
    "pred": "SELECT COUNT(DISTINCT `order_item_status_code`) FROM `Order_Items`",
    "exec_result": 1
  },
  {
    "idx": 82,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
    "pred": "SELECT COUNT(DISTINCT payment_method_code) FROM Customer_Payment_Methods",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
    "pred": "SELECT COUNT(DISTINCT payment_method_code) AS num_payment_methods FROM Customer_Payment_Methods;",
    "exec_result": 1
  },
  {
    "idx": 84,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 85,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 86,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 87,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
    "pred": "SELECT Products.product_size FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id WHERE Products.product_name LIKE '%Dell%' GROUP BY Products.product_size;",
    "exec_result": 0
  },
  {
    "idx": 88,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
    "pred": "SELECT Products.product_price, Products.product_size FROM Products JOIN ( SELECT product_id, AVG(product_price) as avg_price FROM Products GROUP BY product_id ) as AvgPrice ON Products.product_id = AvgPrice.product_id WHERE Products.product_price > AvgPrice.avg_price",
    "exec_result": 0
  },
  {
    "idx": 89,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
    "pred": "WITH MeanPrice AS ( SELECT AVG(product_price) AS MeanPrice FROM Products ) SELECT product_name, product_price, product_size FROM Products, MeanPrice WHERE product_price > MeanPrice",
    "exec_result": 0
  },
  {
    "idx": 90,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "pred": "SELECT COUNT(DISTINCT product_id) AS number_of_unique_products FROM Order_Items WHERE order_item_status_code = 'Out of Stock';",
    "exec_result": 0
  },
  {
    "idx": 91,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "pred": "SELECT COUNT(*) FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.order_item_status_code = 'Out of Stock';",
    "exec_result": 0
  },
  {
    "idx": 92,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers LEFT JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id WHERE Customer_Payment_Methods.customer_id IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 93,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
    "pred": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
    "exec_result": 1
  },
  {
    "idx": 94,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code ,  date_order_placed FROM Orders",
    "pred": "SELECT Orders.order_status_code, Orders.date_order_placed FROM Orders;",
    "exec_result": 1
  },
  {
    "idx": 95,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code ,  date_order_placed FROM Orders",
    "pred": "SELECT Orders.order_status_code, Orders.date_order_placed, Order_Items.product_id, Products.product_name, Products.product_price FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
    "pred": "SELECT `address_line_1`, `town_city`, `county` FROM Customers WHERE `country` = 'USA'",
    "exec_result": 1
  },
  {
    "idx": 97,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
    "pred": "SELECT Customers.customer_first_name, Products.product_name FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id",
    "exec_result": 1
  },
  {
    "idx": 99,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
    "pred": "SELECT Customers.customer_first_name, GROUP_CONCAT(Products.product_name) AS products_bought FROM Customers JOIN Orders ON Customers.customer_id = Orders.customer_id JOIN Order_Items ON Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Customers.customer_first_name;",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Shipment_Items",
    "pred": "SELECT COUNT(*) FROM Shipment_Items;",
    "exec_result": 1
  },
  {
    "idx": 101,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Shipment_Items",
    "pred": "SELECT COUNT(*) FROM Shipment_Items;",
    "exec_result": 1
  },
  {
    "idx": 102,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products",
    "pred": "SELECT AVG(product_price) as average_price FROM Products",
    "exec_result": 1
  },
  {
    "idx": 103,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products",
    "pred": "SELECT AVG(product_price) as average_price FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 104,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT AVG(P.product_price) AS average_price FROM Orders O JOIN Order_Items OI ON O.order_id = OI.order_id JOIN Products P ON OI.product_id = P.product_id;",
    "exec_result": 1
  },
  {
    "idx": 105,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT AVG(total_cost) / COUNT(*) as average_cost_per_order FROM ( SELECT Order_Items.product_id, SUM(Products.product_price) as total_cost FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Order_Items.product_id ) as subquery",
    "exec_result": 0
  },
  {
    "idx": 106,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 107,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "SELECT Customers.email_address, Customers.town_city, Customers.county FROM Customers WHERE Customers.gender_code = ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY COUNT(*) ASC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 108,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
    "pred": "SELECT Orders.date_order_placed FROM Orders JOIN Customer_Payment_Methods ON Orders.customer_id = Customer_Payment_Methods.customer_id GROUP BY Orders.date_order_placed HAVING COUNT(Customer_Payment_Methods.payment_method_code) >= 2",
    "exec_result": 1
  },
  {
    "idx": 109,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 110,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
    "pred": "SELECT order_status_code, COUNT(*) as count FROM Orders GROUP BY order_status_code ORDER BY count LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 111,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
    "pred": "SELECT MIN(order_status_code) as least_common_order_status FROM Orders",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
    "pred": "SELECT product_id, product_name, product_description FROM Products WHERE product_id IN ( SELECT product_id FROM Order_Items GROUP BY product_id HAVING COUNT(product_id) > 3 )",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
    "pred": "SELECT Products.product_id, Products.product_name, Products.product_description, COUNT(*) as sold_count FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Orders ON Order_Items.order_id = Orders.order_id JOIN Shipments ON Orders.order_id = Shipments.order_id JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id GROUP BY Products.product_id HAVING COUNT(*) > 3;",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
    "pred": "SELECT Invoices.invoice_date, Invoices.invoice_number FROM Invoices JOIN Shipment_Items ON Invoices.invoice_number = Shipment_Items.invoice_number JOIN Shipments ON Shipment_Items.shipment_id = Shipments.shipment_id GROUP BY Invoices.invoice_number HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
    "pred": "SELECT Invoices.invoice_number, Invoices.invoice_date, Shipment_Items.shipment_id FROM Invoices JOIN Shipment_Items ON Invoices.invoice_number = Shipment_Items.shipment_id GROUP BY Invoices.invoice_number HAVING COUNT(DISTINCT Shipment_Items.shipment_id) >= 2;",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
    "pred": "SELECT `Shipment_tracking_number`, `Shipment_date` FROM `Shipments`",
    "exec_result": 1
  },
  {
    "idx": 117,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
    "pred": "SELECT Shipments.shipment_tracking_number, Shipments.shipment_date FROM Shipments JOIN Shipment_Items ON Shipments.shipment_id = Shipment_Items.shipment_id GROUP BY Shipments.shipment_id;",
    "exec_result": 0
  },
  {
    "idx": 118,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_color ,  product_description ,  product_size FROM Products WHERE product_price  <  ( SELECT max(product_price) FROM products )",
    "pred": "SELECT Products.product_color, Products.product_description, Products.product_size FROM Products JOIN ( SELECT MAX(product_price) as max_price FROM Products ) as max_price_table ON Products.product_price = max_price_table.max_price",
    "exec_result": 0
  },
  {
    "idx": 119,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )",
    "pred": "SELECT Products.product_color, Products.product_description, Products.product_size FROM Products INNER JOIN (SELECT product_id, MAX(product_price) as max_price FROM Products GROUP BY product_id) as MaxPrice ON Products.product_id = MaxPrice.product_id WHERE Products.product_price < MaxPrice.max_price",
    "exec_result": 0
  },
  {
    "idx": 120,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director WHERE age  >  (SELECT avg(age) FROM director)",
    "pred": "SELECT `Name` FROM director WHERE Age > (SELECT AVG(Age) FROM director)",
    "exec_result": 1
  },
  {
    "idx": 121,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director ORDER BY age DESC LIMIT 1",
    "pred": "SELECT Name FROM director WHERE Age = (SELECT MAX(Age) FROM director)",
    "exec_result": 1
  },
  {
    "idx": 122,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(*) FROM channel WHERE internet LIKE \"%bbc%\"",
    "pred": "SELECT COUNT(*) FROM channel WHERE Internet LIKE '%bbc.co.uk%'",
    "exec_result": 1
  },
  {
    "idx": 123,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel",
    "pred": "SELECT COUNT(DISTINCT `Digital_terrestrial_channel`) FROM channel",
    "exec_result": 1
  },
  {
    "idx": 124,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT title FROM program ORDER BY start_year DESC",
    "pred": "SELECT Title, Start_Year FROM program ORDER BY Start_Year DESC",
    "exec_result": 0
  },
  {
    "idx": 125,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 126,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name ,  t2.age FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Name`, `Age` FROM director WHERE `Director_ID` IN ( SELECT `Director_ID` FROM director_admin WHERE `Is_first_director` = 'T' ) ORDER BY `Age` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 127,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT title FROM program ORDER BY start_year DESC LIMIT 1",
    "pred": "SELECT `Title` FROM `program` WHERE `Start_Year` = (SELECT MIN(`Start_Year`) FROM `program`)",
    "exec_result": 0
  },
  {
    "idx": 128,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id HAVING count(*)  >  1",
    "pred": "SELECT `Name`, `Internet` FROM channel WHERE `Channel_ID` IN ( SELECT `Channel_ID` FROM ( SELECT `Channel_ID`, COUNT(*) as program_count FROM program GROUP BY `Channel_ID` ) as subquery WHERE program_count > 1 )",
    "exec_result": 1
  },
  {
    "idx": 129,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  count(*) FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id",
    "pred": "SELECT channel.Name, COUNT(*) as NumberOfPrograms FROM channel JOIN program ON channel.Channel_ID = program.Channel_ID GROUP BY channel.Name",
    "exec_result": 1
  },
  {
    "idx": 130,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)",
    "pred": "SELECT COUNT(*) FROM channel WHERE Channel_ID NOT IN (SELECT Channel_ID FROM program)",
    "exec_result": 1
  },
  {
    "idx": 131,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id WHERE t1.title  =  'Dracula'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 132,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Name`, `Internet` FROM channel WHERE `Channel_ID` = ( SELECT `Channel_ID` FROM ( SELECT `Channel_ID`, COUNT(`Director_ID`) as `director_count`, ROW_NUMBER() OVER (ORDER BY COUNT(`Director_ID`) DESC) as `row_num` FROM `director_admin` GROUP BY `Channel_ID` ) AS subquery WHERE `row_num` = 1 )",
    "exec_result": 1
  },
  {
    "idx": 133,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director WHERE age BETWEEN 30 AND 60",
    "pred": "SELECT d.Name FROM director d WHERE d.Age BETWEEN 30 AND 60;",
    "exec_result": 1
  },
  {
    "idx": 134,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  <  40 INTERSECT SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  >  60",
    "pred": "SELECT DISTINCT channel.Name FROM channel WHERE channel.Channel_ID IN ( SELECT program.Channel_ID FROM program WHERE program.Start_Year = ( SELECT MIN(program.Start_Year) FROM program ) ) AND channel.Channel_ID IN ( SELECT director_admin.Channel_ID FROM director_admin WHERE director_admin.Is_first_director = 'F' AND director_admin.Director_ID IN ( SELECT director.Director_ID FROM director WHERE director.Age > ( SELECT MAX(director.Age) FROM director WHERE director.Director_ID IN ( SELECT director_admin.Director_ID FROM director_admin WHERE director_admin.Is_first_director = 'T' ) ) ) );",
    "exec_result": 1
  },
  {
    "idx": 135,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != \"Hank Baskett\"",
    "pred": "SELECT `Channel_ID`, `Name` FROM `channel` WHERE `Channel_ID` NOT IN ( SELECT `Channel_ID` FROM `director_admin` WHERE `Director_ID` = ( SELECT `Director_ID` FROM `director` WHERE `Name` = 'Hank Baskett' ) )",
    "exec_result": 0
  },
  {
    "idx": 136,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT count(*) FROM radio",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 137,
    "db_id": "tv_shows",
    "question": "",
    "gold": "select transmitter from radio order by erp_kw asc",
    "pred": "SELECT `Transmitter`, `ERP_kW` FROM `radio` ORDER BY `ERP_kW` ASC",
    "exec_result": 0
  },
  {
    "idx": 138,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT tv_show_name ,  Original_Airdate FROM tv_show",
    "pred": "SELECT `tv_show_name`, `Original_Airdate` FROM `tv_show`",
    "exec_result": 1
  },
  {
    "idx": 139,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Station_name FROM city_channel WHERE Affiliation != \"ABC\"",
    "pred": "SELECT `Station_name` FROM `city_channel` WHERE `Affiliation` <> 'ABC'",
    "exec_result": 1
  },
  {
    "idx": 140,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30",
    "pred": "SELECT `Transmitter` FROM `radio` WHERE `ERP_kW` > 150 OR `ERP_kW` < 30",
    "exec_result": 1
  },
  {
    "idx": 141,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1",
    "pred": "SELECT `Transmitter` FROM `radio` WHERE `ERP_kW` = (SELECT MAX(`ERP_kW`) FROM `radio`)",
    "exec_result": 0
  },
  {
    "idx": 142,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT avg(ERP_kW) FROM radio",
    "pred": "SELECT AVG(ERP_kW) as Average_ERP FROM radio",
    "exec_result": 1
  },
  {
    "idx": 143,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM city_channel GROUP BY Affiliation",
    "pred": "SELECT city_channel.City, COUNT(city_channel_radio.Radio_ID) as Radio_Count FROM city_channel JOIN city_channel_radio ON city_channel_radio.City_channel_ID = city_channel.ID GROUP BY city_channel.City",
    "exec_result": 0
  },
  {
    "idx": 144,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Affiliation, COUNT(*) as count FROM city_channel GROUP BY Affiliation ORDER BY count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 145,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*)  >  3",
    "pred": "SELECT `Affiliation`, COUNT(*) as `Number_of_Shares` FROM city_channel JOIN city_channel_radio ON city_channel.ID = city_channel_radio.City_channel_ID JOIN radio ON city_channel_radio.Radio_ID = radio.Radio_ID GROUP BY `Affiliation` HAVING COUNT(*) > 3",
    "exec_result": 0
  },
  {
    "idx": 146,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT City ,  Station_name FROM city_channel ORDER BY Station_name ASC",
    "pred": "SELECT c.City, ct.Station_name FROM city_channel c JOIN city_channel_tv_show ct ON c.ID = ct.City_channel_ID ORDER BY ct.Station_name ASC;",
    "exec_result": 0
  },
  {
    "idx": 147,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T3.Transmitter ,  T2.City FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID",
    "pred": "SELECT `Transmitter`, `City` FROM `city_channel_radio` JOIN `city_channel` ON `city_channel_radio`.`City_channel_ID` = `city_channel`.`ID` JOIN `radio` ON `city_channel_radio`.`Radio_ID` = `radio`.`Radio_ID`",
    "exec_result": 1
  },
  {
    "idx": 148,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T3.Transmitter ,  T2.Station_name FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID ORDER BY T3.ERP_kW DESC",
    "pred": "SELECT `Transmitter`, `Station_name` FROM `radio` JOIN `city_channel_radio` ON `radio`.`Radio_ID` = `city_channel_radio`.`Radio_ID` JOIN `city_channel` ON `city_channel_radio`.`City_channel_ID` = `city_channel`.`ID` JOIN `city_channel_tv_show` ON `city_channel`.`ID` = `city_channel_tv_show`.`City_channel_ID` JOIN `tv_show` ON `city_channel_tv_show`.`tv_show_ID` = `tv_show`.`tv_show_ID` ORDER BY `ERP_kW` DESC",
    "exec_result": 0
  },
  {
    "idx": 149,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter",
    "pred": "SELECT T1.`Transmitter`, COUNT(*) FROM radio AS T1 JOIN city_channel_radio AS T2 ON T1.`Radio_ID` = T2.`Radio_ID` GROUP BY T1.`Radio_ID`",
    "exec_result": 1
  },
  {
    "idx": 150,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)",
    "pred": "SELECT DISTINCT `Transmitter` FROM `radio` WHERE `Radio_ID` NOT IN ( SELECT `Radio_ID` FROM `city_channel_radio` )",
    "exec_result": 1
  },
  {
    "idx": 151,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
    "pred": "SELECT `Model` FROM vehicle WHERE `Top_Speed` = (SELECT MAX(`Top_Speed`) FROM vehicle WHERE `Power` > 6000)",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
    "pred": "SELECT `Model`, `Top_Speed` FROM `vehicle` WHERE `Power` > 6000 ORDER BY `Top_Speed` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver WHERE citizenship  =  'United States'",
    "pred": "SELECT D.Name FROM driver AS D WHERE D.Citizenship = 'United States'",
    "exec_result": 1
  },
  {
    "idx": 154,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver WHERE citizenship  =  'United States'",
    "pred": "SELECT `Name` FROM driver WHERE `Citizenship` = 'United States'",
    "exec_result": 1
  },
  {
    "idx": 155,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(*) as num_vehicles, Driver_ID FROM vehicle_driver GROUP BY Driver_ID ORDER BY num_vehicles DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 156,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Driver_ID, COUNT(Vehicle_ID) as Number_of_Vehicles FROM vehicle_driver GROUP BY Driver_ID ORDER BY Number_of_Vehicles DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
    "pred": "SELECT MAX(Power) as Maximum_Power, AVG(Power) as Average_Power FROM vehicle WHERE Builder = 'Zhuzhou'",
    "exec_result": 1
  },
  {
    "idx": 158,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
    "pred": "SELECT MAX(Power) AS Maximum_Power, AVG(Power) AS Average_Power FROM vehicle WHERE Builder = 'Zhuzhou'",
    "exec_result": 1
  },
  {
    "idx": 159,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Vehicle_ID FROM vehicle_driver GROUP BY Vehicle_ID ORDER BY COUNT(*) ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 160,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Vehicle_ID FROM ( SELECT Vehicle_ID, COUNT(*) as count FROM vehicle_driver GROUP BY Vehicle_ID ) as subquery WHERE count = ( SELECT MIN(count) FROM ( SELECT COUNT(*) as count FROM vehicle_driver GROUP BY Vehicle_ID ) as subquery2 )",
    "exec_result": 0
  },
  {
    "idx": 161,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
    "pred": "SELECT `Top_Speed`, `Power` FROM vehicle WHERE `Build_Year` = '2006\u20132010'",
    "exec_result": 0
  },
  {
    "idx": 162,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
    "pred": "SELECT `Top_Speed`, `Power` FROM vehicle WHERE `Build_Year` = '2012'",
    "exec_result": 0
  },
  {
    "idx": 163,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT build_year ,  model ,  builder FROM vehicle",
    "pred": "SELECT `Build_Year`, `Model`, `Builder` FROM vehicle",
    "exec_result": 1
  },
  {
    "idx": 164,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT build_year ,  model ,  builder FROM vehicle",
    "pred": "SELECT `Build_Year`, `Model`, `Builder` FROM `vehicle`",
    "exec_result": 1
  },
  {
    "idx": 165,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
    "pred": "SELECT COUNT(*) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID WHERE vehicle.Build_Year = '2012'",
    "exec_result": 1
  },
  {
    "idx": 166,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
    "pred": "SELECT COUNT(DISTINCT VD.`Driver_ID`) FROM vehicle_driver AS VD JOIN vehicle AS V ON VD.`Vehicle_ID` = V.`Vehicle_ID` WHERE V.`Build_Year` = '2012'",
    "exec_result": 1
  },
  {
    "idx": 167,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
    "pred": "SELECT COUNT(*) FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID WHERE vehicle.Builder = 'Zhuzhou' AND vehicle.Total_Production = '1' AND driver.Racing_Series = 'NASCAR'",
    "exec_result": 0
  },
  {
    "idx": 168,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
    "pred": "SELECT COUNT(*) FROM driver WHERE Racing_Series = 'NASCAR'",
    "exec_result": 1
  },
  {
    "idx": 169,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT avg(top_speed) FROM vehicle",
    "pred": "SELECT SUM(Top_Speed) / COUNT(*) AS Average_Top_Speed FROM vehicle",
    "exec_result": 1
  },
  {
    "idx": 170,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT avg(top_speed) FROM vehicle",
    "pred": "SELECT AVG(T1.`Top_Speed`) FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.`Vehicle_ID` = T2.`Vehicle_ID`",
    "exec_result": 0
  },
  {
    "idx": 171,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "select distinct t1.name from driver as t1 join vehicle_driver as t2 on t1.driver_id  =  t2.driver_id join vehicle as t3 on t2.vehicle_id  =  t3.vehicle_id where t3.power  >  5000",
    "pred": "SELECT DISTINCT Name FROM driver WHERE Driver_ID IN ( SELECT Driver_ID FROM vehicle_driver WHERE Vehicle_ID IN ( SELECT Vehicle_ID FROM vehicle WHERE Power > 5000 ) )",
    "exec_result": 0
  },
  {
    "idx": 172,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.power  >  5000",
    "pred": "SELECT driver.Name FROM driver JOIN vehicle_driver ON driver.Driver_ID = vehicle_driver.Driver_ID JOIN vehicle ON vehicle.Vehicle_ID = vehicle_driver.Vehicle_ID WHERE vehicle.Power > 5000",
    "exec_result": 1
  },
  {
    "idx": 173,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
    "pred": "SELECT Model, Total_Production FROM vehicle WHERE Total_Production > 100 AND Top_Speed > 150",
    "exec_result": 0
  },
  {
    "idx": 174,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
    "pred": "SELECT `Model` FROM vehicle WHERE `Total_Production` > 100 OR `Top_Speed` > 150;",
    "exec_result": 1
  },
  {
    "idx": 175,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
    "pred": "SELECT `Model`, `Build_Year` FROM vehicle WHERE `Model` LIKE '%DJ%'",
    "exec_result": 1
  },
  {
    "idx": 176,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
    "pred": "SELECT `Model`, `Build_Year` FROM `vehicle` WHERE `Model` LIKE '%DJ%'",
    "exec_result": 1
  },
  {
    "idx": 177,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
    "pred": "SELECT V.Model FROM vehicle AS V WHERE V.Model NOT IN (SELECT VD.Vehicle_ID FROM vehicle_driver AS VD)",
    "exec_result": 0
  },
  {
    "idx": 178,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
    "pred": "SELECT `Model` FROM vehicle WHERE `Vehicle_ID` NOT IN (SELECT `Vehicle_ID` FROM vehicle_driver)",
    "exec_result": 1
  },
  {
    "idx": 179,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
    "pred": "SELECT V.`Vehicle_ID`, V.`Model` FROM vehicle AS V WHERE V.`Vehicle_ID` IN ( SELECT VD.`Vehicle_ID` FROM vehicle_driver AS VD GROUP BY VD.`Vehicle_ID` HAVING COUNT(*) = 2 ) AND V.`Builder` = 'Ziyang';",
    "exec_result": 0
  },
  {
    "idx": 180,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
    "pred": "SELECT V.`Vehicle_ID`, V.`Model` FROM vehicle AS V JOIN ( SELECT VD.`Vehicle_ID` FROM vehicle_driver AS VD GROUP BY VD.`Vehicle_ID` HAVING COUNT(*) = 2 ) AS TwoDrivers ON V.`Vehicle_ID` = TwoDrivers.`Vehicle_ID` JOIN ( SELECT V.`Builder` FROM vehicle AS V GROUP BY V.`Builder` HAVING COUNT(*) = 1 ) AS ZiyangBuilders ON V.`Builder` = ZiyangBuilders.`Builder`",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
    "pred": "SELECT V.Vehicle_ID, V.Model FROM vehicle V JOIN vehicle_driver VD ON V.Vehicle_ID = VD.Vehicle_ID WHERE VD.Driver_ID IN ( SELECT D.Driver_ID FROM driver D WHERE D.Name = 'Jeff Gordon' ) GROUP BY V.Vehicle_ID, V.Model HAVING COUNT(*) > 2;",
    "exec_result": 0
  },
  {
    "idx": 182,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
    "pred": "SELECT V.`Vehicle_ID`, V.`Model` FROM vehicle AS V JOIN ( SELECT VD.`Vehicle_ID` FROM vehicle_driver AS VD GROUP BY VD.`Vehicle_ID` HAVING COUNT(*) > 2 ) AS VH ON V.`Vehicle_ID` = VH.`Vehicle_ID` UNION SELECT V.`Vehicle_ID`, V.`Model` FROM vehicle AS V JOIN ( SELECT VD.`Vehicle_ID` FROM vehicle_driver AS VD JOIN driver AS D ON VD.`Driver_ID` = D.`Driver_ID` WHERE D.`Name` = 'Jeff Gordon' ) AS VH ON V.`Vehicle_ID` = VH.`Vehicle_ID`",
    "exec_result": 1
  },
  {
    "idx": 183,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
    "pred": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle)",
    "exec_result": 1
  },
  {
    "idx": 184,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
    "pred": "SELECT COUNT(*) FROM vehicle WHERE Top_Speed = (SELECT MAX(Top_Speed) FROM vehicle)",
    "exec_result": 1
  },
  {
    "idx": 185,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver ORDER BY name",
    "pred": "SELECT Name FROM driver ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 186,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver ORDER BY name",
    "pred": "SELECT Name FROM driver ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
    "pred": "SELECT `Racing_Series`, COUNT(*) FROM driver GROUP BY `Racing_Series`",
    "exec_result": 1
  },
  {
    "idx": 188,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
    "pred": "SELECT `Racing_Series`, COUNT(*) as `Number_of_Drivers` FROM driver GROUP BY `Racing_Series`",
    "exec_result": 1
  },
  {
    "idx": 189,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
    "pred": "SELECT `Name`, `Citizenship` FROM driver WHERE `Driver_ID` IN ( SELECT `Driver_ID` FROM vehicle_driver WHERE `Vehicle_ID` IN ( SELECT `Vehicle_ID` FROM vehicle WHERE `Model` = 'DJ1' ) );",
    "exec_result": 1
  },
  {
    "idx": 190,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
    "pred": "SELECT `Name`, `Citizenship` FROM driver WHERE `Driver_ID` IN ( SELECT `Driver_ID` FROM vehicle_driver WHERE `Vehicle_ID` IN ( SELECT `Vehicle_ID` FROM vehicle WHERE `Model` = 'DJ1' ) );",
    "exec_result": 1
  },
  {
    "idx": 191,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
    "pred": "SELECT COUNT(DISTINCT Driver_ID) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver)",
    "exec_result": 1
  },
  {
    "idx": 192,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
    "pred": "SELECT COUNT(*) FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM vehicle_driver)",
    "exec_result": 1
  },
  {
    "idx": 193,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(*) FROM Exams",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 194,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(*) FROM Exams",
    "pred": "SELECT COUNT(*) FROM Exams JOIN Questions_in_Exams ON Exams.Exam_ID = Questions_in_Exams.Exam_ID",
    "exec_result": 0
  },
  {
    "idx": 195,
    "db_id": "online_exams",
    "question": "",
    "gold": "select distinct subject_code from exams order by subject_code asc",
    "pred": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;",
    "exec_result": 1
  },
  {
    "idx": 196,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code",
    "pred": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code ASC;",
    "exec_result": 1
  },
  {
    "idx": 197,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
    "pred": "SELECT Exams.Exam_Name, Exams.Exam_Date FROM Exams WHERE Exams.Exam_Name NOT LIKE '%Database%'",
    "exec_result": 0
  },
  {
    "idx": 198,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
    "pred": "SELECT Exam_Date, Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
    "exec_result": 1
  },
  {
    "idx": 199,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
    "pred": "SELECT Date_of_Answer FROM Student_Answers WHERE Exam_ID IN ( SELECT Exam_ID FROM Questions_in_Exams WHERE Question_ID IN ( SELECT Question_ID FROM Questions WHERE Question_Text LIKE '%data%' ) ) ORDER BY Date_of_Answer DESC",
    "exec_result": 0
  },
  {
    "idx": 200,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
    "pred": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
    "exec_result": 1
  },
  {
    "idx": 201,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "pred": "SELECT Q.`Type_of_Question_Code`, COUNT(*) as `Count` FROM Questions Q JOIN Questions_in_Exams QIE ON Q.`Question_ID` = QIE.`Question_ID` GROUP BY Q.`Type_of_Question_Code`;",
    "exec_result": 1
  },
  {
    "idx": 202,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "pred": "SELECT `Type_of_Question_Code`, COUNT(`Question_ID`) FROM Questions GROUP BY `Type_of_Question_Code`",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
    "pred": "SELECT DISTINCT `Student_Answer_Text` FROM `Student_Assessments` WHERE `Comment` = 'Normal'",
    "exec_result": 0
  },
  {
    "idx": 204,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
    "pred": "SELECT DISTINCT `Student_Answer_Text` FROM `Student_Assessments` WHERE `Assessment` = 'Excellent';",
    "exec_result": 0
  },
  {
    "idx": 205,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(DISTINCT Comments) FROM Student_Answers",
    "pred": "SELECT COUNT(DISTINCT `Comments`) AS `Number_of_Comments` FROM `Student_Answers`",
    "exec_result": 1
  },
  {
    "idx": 206,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(DISTINCT Comments) FROM Student_Answers",
    "pred": "SELECT COUNT(DISTINCT `Comments`) FROM `Student_Answers`",
    "exec_result": 1
  },
  {
    "idx": 207,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
    "pred": "SELECT `Student_Answer_Text`, COUNT(*) as `Count` FROM `Student_Answers` GROUP BY `Student_Answer_Text` ORDER BY `Count` DESC",
    "exec_result": 0
  },
  {
    "idx": 208,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
    "pred": "SELECT Student_Answers.Student_Answer_Text, COUNT(*) as Frequency FROM Student_Answers JOIN Valid_Answers ON Student_Answers.Student_ID = Valid_Answers.Question_ID GROUP BY Student_Answers.Student_Answer_Text ORDER BY Frequency DESC;",
    "exec_result": 0
  },
  {
    "idx": 209,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
    "pred": "SELECT Students.First_Name, Student_Answers.Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID WHERE Student_Answers.Satisfactory_YN = '1'",
    "exec_result": 0
  },
  {
    "idx": 210,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
    "pred": "SELECT S.First_Name, SA.Date_of_Answer FROM Students AS S JOIN Student_Answers AS SA ON S.Student_ID = SA.Student_ID WHERE SA.Satisfactory_YN = '1'",
    "exec_result": 0
  },
  {
    "idx": 211,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
    "pred": "SELECT S.Email_Adress, SA.Date_of_Answer FROM Students S JOIN Student_Answers SA ON S.Student_ID = SA.Student_ID ORDER BY SA.Date_of_Answer DESC",
    "exec_result": 1
  },
  {
    "idx": 212,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
    "pred": "SELECT Students.Email_Adress, Student_Answers.Date_of_Answer FROM Students JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID WHERE Student_Answers.Satisfactory_YN = '1' ORDER BY Student_Answers.Date_of_Answer DESC",
    "exec_result": 0
  },
  {
    "idx": 213,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
    "pred": "SELECT Valid_Answers.Valid_Answer_Text, COUNT(Student_Assessments.Valid_Answer_ID) AS Count FROM Student_Assessments JOIN Valid_Answers ON Student_Assessments.Valid_Answer_ID = Valid_Answers.Valid_Answer_ID GROUP BY Student_Assessments.Valid_Answer_ID ORDER BY Count LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 214,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
    "pred": "SELECT Valid_Answers.Valid_Answer_Text, COUNT(*) AS Frequency FROM Valid_Answers JOIN Student_Assessments ON Valid_Answers.Valid_Answer_ID = Student_Assessments.Valid_Answer_ID GROUP BY Valid_Answers.Valid_Answer_ID ORDER BY Frequency ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 215,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT S.First_Name FROM Students AS S WHERE ( SELECT COUNT(*) FROM Student_Answers AS SA WHERE S.Student_ID = SA.Student_ID GROUP BY SA.Student_ID ) >= 2",
    "exec_result": 1
  },
  {
    "idx": 216,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT S.First_Name FROM Students S WHERE ( SELECT COUNT(*) FROM Student_Answers SA WHERE SA.Student_ID = S.Student_ID GROUP BY SA.Question_ID ) >= 2",
    "exec_result": 0
  },
  {
    "idx": 217,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Valid_Answer_Text, COUNT(*) as Count FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 218,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Valid_Answer_Text, COUNT(*) as Frequency FROM Student_Assessments JOIN Valid_Answers ON Student_Assessments.Valid_Answer_ID = Valid_Answers.Valid_Answer_ID WHERE Assessment = 'Excellent' GROUP BY Valid_Answer_Text ORDER BY Frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 219,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
    "pred": "SELECT Last_Name FROM Students WHERE Gender_MFU != 'M'",
    "exec_result": 1
  },
  {
    "idx": 220,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
    "pred": "SELECT Last_Name FROM Students WHERE Gender_MFU <> 'M'",
    "exec_result": 1
  },
  {
    "idx": 221,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
    "pred": "SELECT Gender_MFU, COUNT(*) as Number_of_Students FROM Students GROUP BY Gender_MFU;",
    "exec_result": 1
  },
  {
    "idx": 222,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
    "pred": "SELECT Gender_MFU, COUNT(*) FROM Students WHERE Gender_MFU IN ('U', 'M', 'F') GROUP BY Gender_MFU;",
    "exec_result": 1
  },
  {
    "idx": 223,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
    "pred": "SELECT Last_Name FROM Students WHERE Gender_MFU IN ('M', 'F');",
    "exec_result": 1
  },
  {
    "idx": 224,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
    "pred": "SELECT Last_Name FROM Students WHERE Gender_MFU = 'F' OR Gender_MFU = 'M';",
    "exec_result": 1
  },
  {
    "idx": 225,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
    "pred": "SELECT S.First_Name FROM Students AS S WHERE S.Student_ID NOT IN ( SELECT SA.Student_ID FROM Student_Answers AS SA WHERE SA.Student_Answer_ID IS NOT NULL )",
    "exec_result": 1
  },
  {
    "idx": 226,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
    "pred": "SELECT Students.First_Name FROM Students LEFT JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID WHERE Student_Answers.Student_ID IS NULL GROUP BY Students.Student_ID;",
    "exec_result": 1
  },
  {
    "idx": 227,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
    "pred": "SELECT `Student_Answer_Text` FROM `Student_Answers` WHERE `Comments` = 'Normal' AND `Comments` = 'Absent'",
    "exec_result": 0
  },
  {
    "idx": 228,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
    "pred": "SELECT S.First_Name, S.Last_Name, SA.Student_Answer_Text FROM Students S JOIN Student_Assessments SA ON S.Student_ID = SA.Student_Answer_ID JOIN Valid_Answers VA ON SA.Valid_Answer_ID = VA.Valid_Answer_ID WHERE VA.Comments = 'Normal' AND VA.Comments = 'Absent'",
    "exec_result": 0
  },
  {
    "idx": 229,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
    "pred": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(*) > 3",
    "exec_result": 0
  },
  {
    "idx": 231,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT * FROM Students",
    "pred": "SELECT First_Name, Last_Name FROM Students;",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT * FROM Students",
    "pred": "SELECT * FROM Students;",
    "exec_result": 1
  },
  {
    "idx": 233,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Addresses",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 234,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Addresses",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 235,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT address_id ,  address_details FROM Addresses",
    "pred": "SELECT `address_id`, `address_details` FROM `Addresses`",
    "exec_result": 1
  },
  {
    "idx": 236,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT address_id ,  address_details FROM Addresses",
    "pred": "SELECT address_id, address_details FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 238,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products",
    "pred": "CREATE TABLE stadium ( stadium_id INTEGER PRIMARY KEY, stadium_name TEXT );",
    "exec_result": 0
  },
  {
    "idx": 239,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
    "pred": "SELECT Products.product_id, Products.product_type_code, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_id",
    "exec_result": 0
  },
  {
    "idx": 240,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
    "pred": "SELECT product_id, product_type_code, product_name FROM Products",
    "exec_result": 1
  },
  {
    "idx": 241,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 242,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
    "pred": "SELECT product_price FROM Products WHERE product_name = 'Monitor'",
    "exec_result": 1
  },
  {
    "idx": 243,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
    "pred": "SELECT MIN(product_price) AS Minimum_Price, AVG(product_price) AS Average_Price, MAX(product_price) AS Maximum_Price FROM Products",
    "exec_result": 1
  },
  {
    "idx": 244,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
    "pred": "SELECT MIN(product_price) AS Minimum_Price, AVG(product_price) AS Average_Price, MAX(product_price) AS Maximum_Price FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 245,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
    "pred": "SELECT AVG(product_price) AS average_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE product_type_code = 'Clothes'",
    "exec_result": 0
  },
  {
    "idx": 246,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
    "pred": "SELECT AVG(product_price) as Average_Clothes_Price FROM Products WHERE product_type_code = 'Clothes'",
    "exec_result": 1
  },
  {
    "idx": 247,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
    "pred": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware'",
    "exec_result": 1
  },
  {
    "idx": 248,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
    "pred": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware'",
    "exec_result": 1
  },
  {
    "idx": 249,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
    "pred": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_price > (SELECT AVG(Products.product_price) FROM Products)",
    "exec_result": 0
  },
  {
    "idx": 250,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
    "pred": "SELECT Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id WHERE Products.product_price > (SELECT AVG(Products.product_price) FROM Products) GROUP BY Products.product_name",
    "exec_result": 1
  },
  {
    "idx": 251,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
    "pred": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Products.product_type_code = 'Hardware' AND Products.product_price > (SELECT AVG(Products.product_price) FROM Products WHERE Products.product_type_code = 'Hardware')",
    "exec_result": 0
  },
  {
    "idx": 252,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
    "pred": "SELECT `product_name` FROM `Products` WHERE `product_type_code` = 'Hardware' AND `product_price` > (SELECT AVG(`product_price`) FROM `Products` WHERE `product_type_code` = 'Hardware')",
    "exec_result": 1
  },
  {
    "idx": 253,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 254,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 255,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
    "pred": "SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 256,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
    "pred": "SELECT product_id, product_name FROM Products WHERE product_type_code = 'Hardware' AND product_price = (SELECT MIN(product_price) FROM Products WHERE product_type_code = 'Hardware')",
    "exec_result": 1
  },
  {
    "idx": 257,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products ORDER BY product_price DESC",
    "pred": "SELECT `product_name`, `product_price` FROM `Products` ORDER BY `product_price` DESC",
    "exec_result": 0
  },
  {
    "idx": 258,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products ORDER BY product_price DESC",
    "pred": "SELECT Products.product_name, Products.product_price FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id GROUP BY Products.product_id ORDER BY Products.product_price DESC",
    "exec_result": 0
  },
  {
    "idx": 259,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
    "pred": "SELECT * FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC;",
    "exec_result": 0
  },
  {
    "idx": 260,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
    "pred": "SELECT product_name, product_price FROM Products WHERE product_type_code = 'Hardware' ORDER BY product_price ASC;",
    "exec_result": 0
  },
  {
    "idx": 261,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
    "pred": "SELECT `product_type_code`, COUNT(*) as `Number_of_Products` FROM `Products` GROUP BY `product_type_code`",
    "exec_result": 1
  },
  {
    "idx": 262,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
    "pred": "SELECT product_type_code, COUNT(product_id_temp) as product_count FROM Products JOIN Order_Items ON Products.product_id_temp = Order_Items.product_id_temp GROUP BY product_type_code;",
    "exec_result": 0
  },
  {
    "idx": 263,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
    "pred": "SELECT `product_type_code`, AVG(`product_price`) as `average_price` FROM `Products` GROUP BY `product_type_code`",
    "exec_result": 1
  },
  {
    "idx": 264,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
    "pred": "SELECT Products.product_type_code, AVG(Order_Items.order_quantity * Products.product_price) AS average_price FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id GROUP BY Products.product_type_code;",
    "exec_result": 0
  },
  {
    "idx": 265,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
    "pred": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING COUNT(product_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
    "pred": "SELECT product_type_code, COUNT(*) as product_count FROM Products GROUP BY product_type_code HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 267,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) as product_count FROM Products GROUP BY product_type_code ORDER BY product_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 268,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) as count FROM Products GROUP BY product_type_code ORDER BY count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 269,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 270,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers",
    "pred": "SELECT COUNT(*) FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 271,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id ,  customer_name FROM Customers",
    "pred": "SELECT `customer_id`, `customer_name` FROM `Customers`",
    "exec_result": 1
  },
  {
    "idx": 272,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id ,  customer_name FROM Customers",
    "pred": "SELECT Customers.customer_id, Customers.customer_name FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id",
    "exec_result": 0
  },
  {
    "idx": 273,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "SELECT Customers.customer_address, Customers.customer_phone, Customers.customer_email FROM Customers INNER JOIN Addresses ON Customers.address_id = Addresses.address_id WHERE Customers.customer_name = 'Jeromy'",
    "exec_result": 1
  },
  {
    "idx": 274,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "SELECT `customer_address`, `customer_phone`, `customer_email` FROM `Customers` WHERE `customer_name` = 'Jeromy'",
    "exec_result": 1
  },
  {
    "idx": 275,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
    "pred": "SELECT `payment_method_code`, COUNT(*) FROM `Customers` GROUP BY `payment_method_code`",
    "exec_result": 1
  },
  {
    "idx": 276,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
    "pred": "SELECT `payment_method_code`, COUNT(`customer_id`) as `customer_count` FROM `Customers` GROUP BY `payment_method_code`;",
    "exec_result": 1
  },
  {
    "idx": 277,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `payment_method_code`, COUNT(*) as `Number_of_Customers` FROM `Customers` GROUP BY `payment_method_code` ORDER BY `Number_of_Customers` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 278,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 279,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
    "pred": "SELECT C.`customer_name`, COUNT(DISTINCT O.`order_id`) as `Number_of_Orders` FROM Customers as C JOIN Customer_Orders as O ON C.`customer_id` = O.`customer_id` JOIN Order_Items as OI ON O.`order_id` = OI.`order_id` JOIN Products as P ON OI.`product_id` = P.`product_id` WHERE P.`product_type_code` = 'Hardware' AND P.`product_name` = 'Yellow Topping' GROUP BY C.`customer_id` ORDER BY COUNT(DISTINCT O.`order_id`) LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 280,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
    "pred": "SELECT customer_name FROM Customers WHERE customer_id IN ( SELECT customer_id FROM ( SELECT customer_id, payment_method_code, COUNT(*) as count FROM Customers GROUP BY customer_id, payment_method_code ) WHERE count = ( SELECT MIN(count) FROM ( SELECT customer_id, payment_method_code, COUNT(*) as count FROM Customers GROUP BY customer_id, payment_method_code ) ) )",
    "exec_result": 0
  },
  {
    "idx": 281,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "SELECT `payment_method_code`, `customer_number` FROM `Customers` WHERE `customer_name` = 'Jeromy'",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "SELECT `payment_method_code`, `customer_number` FROM Customers WHERE `customer_name` = 'Jeromy'",
    "exec_result": 1
  },
  {
    "idx": 283,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT DISTINCT payment_method_code FROM Customers",
    "pred": "SELECT DISTINCT payment_method_code FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 284,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT DISTINCT payment_method_code FROM Customers",
    "pred": "SELECT DISTINCT `payment_method_code` FROM `Customers`",
    "exec_result": 1
  },
  {
    "idx": 285,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
    "pred": "SELECT `product_id`, `product_type_code` FROM `Products` ORDER BY `product_name`",
    "exec_result": 1
  },
  {
    "idx": 286,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
    "pred": "SELECT Products.product_id, Products.product_type_code, Products.product_name FROM Products JOIN Order_Items ON Products.product_id = Order_Items.product_id JOIN Customer_Orders ON Order_Items.order_id = Customer_Orders.order_id JOIN Customers ON Customer_Orders.customer_id = Customers.customer_id WHERE Products.product_type_code = 'Clothes' GROUP BY Products.product_id, Products.product_name ORDER BY Products.product_name;",
    "exec_result": 0
  },
  {
    "idx": 287,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) as product_count FROM Products GROUP BY product_type_code ORDER BY product_count LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 288,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) as count FROM Products GROUP BY product_type_code ORDER BY count LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 289,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customer_orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 290,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customer_orders",
    "pred": "SELECT COUNT(*) FROM Customer_Orders",
    "exec_result": 1
  },
  {
    "idx": 291,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
    "pred": "SELECT `order_id`, `order_date`, `order_status_code` FROM `Customer_Orders` JOIN `Customers` ON `Customer_Orders`.`customer_id` = `Customers`.`customer_id` WHERE `customer_name` = 'Jeromy';",
    "exec_result": 1
  },
  {
    "idx": 292,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
    "pred": "SELECT Customers.customer_id, Customer_Orders.order_date, Customer_Orders.order_status_code FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customers.customer_name = 'Jeromy'",
    "exec_result": 0
  },
  {
    "idx": 293,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
    "pred": "SELECT Customers.customer_name, Customers.customer_id, COUNT(Customer_Orders.order_id) as number_of_orders FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id",
    "exec_result": 1
  },
  {
    "idx": 294,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
    "pred": "SELECT Customers.customer_name, Customers.customer_id, COUNT(Customer_Orders.order_id) as number_of_orders FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 295,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id GROUP BY Customers.customer_id ORDER BY COUNT(Customer_Orders.order_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 296,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Customers.customer_id, Customers.customer_name, Customers.customer_phone, Customers.customer_email FROM Customers JOIN (SELECT customer_id, COUNT(*) as order_count FROM Customer_Orders GROUP BY customer_id ORDER BY order_count DESC LIMIT 1) as most_orders ON Customers.customer_id = most_orders.customer_id",
    "exec_result": 1
  },
  {
    "idx": 297,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
    "pred": "SELECT `order_status_code`, COUNT(*) as `Number of Orders` FROM `Customer_Orders` GROUP BY `order_status_code`;",
    "exec_result": 1
  },
  {
    "idx": 298,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
    "pred": "SELECT `order_status_code`, COUNT(*) as `order_count` FROM `Customer_Orders` GROUP BY `order_status_code`;",
    "exec_result": 1
  },
  {
    "idx": 299,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `order_status_code`, COUNT(*) as `count` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY `count` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 300,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `order_status_code`, COUNT(*) as `count` FROM `Customer_Orders` GROUP BY `order_status_code` ORDER BY `count` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 301,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
    "pred": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders)",
    "exec_result": 1
  },
  {
    "idx": 302,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
    "pred": "SELECT COUNT(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders)",
    "exec_result": 1
  },
  {
    "idx": 303,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT Products.product_name FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 304,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT Products.product_name FROM Products LEFT JOIN Order_Items ON Products.product_id = Order_Items.product_id WHERE Order_Items.product_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 305,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(*) FROM Order_Items JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor'",
    "exec_result": 0
  },
  {
    "idx": 306,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(*) FROM Order_Items AS OI JOIN Products AS P ON OI.product_id = P.product_id WHERE P.product_type_code = 'Monitor'",
    "exec_result": 0
  },
  {
    "idx": 307,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_name = 'Monitor';",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers INNER JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id INNER JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id INNER JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_type_code = 'Clothes' AND Products.product_name = 'Monitor';",
    "exec_result": 0
  },
  {
    "idx": 309,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id;",
    "exec_result": 1
  },
  {
    "idx": 310,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
    "pred": "SELECT COUNT(DISTINCT customer_id) FROM Customer_Orders",
    "exec_result": 1
  },
  {
    "idx": 311,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
    "pred": "SELECT customer_id FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Customer_Orders)",
    "exec_result": 1
  },
  {
    "idx": 312,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
    "pred": "SELECT Customers.customer_id FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.order_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 313,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
    "pred": "SELECT `CO`.`order_date`, `CO`.`order_id` FROM `Customer_Orders` AS `CO` JOIN `Order_Items` AS `OI` ON `CO`.`order_id` = `OI`.`order_id` GROUP BY `CO`.`order_id` HAVING SUM(`OI`.`order_quantity`) > 6 OR COUNT(`OI`.`product_id`) > 3",
    "exec_result": 1
  },
  {
    "idx": 314,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 315,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT count(*) FROM building",
    "pred": "SELECT COUNT(*) FROM building",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT count(*) FROM building",
    "pred": "SELECT COUNT(*) FROM building",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "pred": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "exec_result": 1
  },
  {
    "idx": 318,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "pred": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "exec_result": 1
  },
  {
    "idx": 319,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Address FROM building ORDER BY Completed_Year DESC",
    "pred": "SELECT `Address`, `Completed_Year` FROM `building` ORDER BY `Completed_Year` DESC",
    "exec_result": 0
  },
  {
    "idx": 320,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Address FROM building ORDER BY Completed_Year DESC",
    "pred": "SELECT `Address` FROM `building` ORDER BY `Completed_Year` DESC",
    "exec_result": 1
  },
  {
    "idx": 321,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
    "pred": "SELECT MAX(Number_of_Stories) as Max_Number_of_Stories FROM building WHERE Completed_Year != 1980;",
    "exec_result": 1
  },
  {
    "idx": 322,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
    "pred": "SELECT MAX(Number_of_Stories) FROM building WHERE Completed_Year <> 1980",
    "exec_result": 1
  },
  {
    "idx": 323,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT avg(Population) FROM region",
    "pred": "SELECT SUM(Population) / COUNT(Region_ID) AS Average_Population FROM region",
    "exec_result": 0
  },
  {
    "idx": 324,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT avg(Population) FROM region",
    "pred": "SELECT AVG(Population) FROM region WHERE Name = 'Lombardy'",
    "exec_result": 0
  },
  {
    "idx": 325,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Name ASC",
    "pred": "SELECT Name FROM region ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Name ASC",
    "pred": "SELECT r.Name, r.Capital, r.Area, r.Population FROM region r JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Completed_Year = (SELECT MAX(b2.Completed_Year) FROM building b2 WHERE b2.Region_ID = r.Region_ID);",
    "exec_result": 0
  },
  {
    "idx": 327,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region WHERE Area  >  10000",
    "pred": "SELECT `Capital` FROM `region` WHERE `Area` > 10000",
    "exec_result": 1
  },
  {
    "idx": 328,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region WHERE Area  >  10000",
    "pred": "SELECT `Region_ID`, `Name`, `Capital` FROM `region` WHERE `Area` > 10000",
    "exec_result": 0
  },
  {
    "idx": 329,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
    "pred": "SELECT R.`Capital` FROM region AS R WHERE R.`Population` = (SELECT MAX(Population) FROM region)",
    "exec_result": 1
  },
  {
    "idx": 330,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 331,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
    "pred": "CREATE TABLE singer ( Song_Name TEXT, Song_release_year INTEGER );",
    "exec_result": 0
  },
  {
    "idx": 332,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
    "pred": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 333,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT T1.`Name`, T2.`Name` FROM building AS T1 JOIN region AS T2 ON T1.`Region_ID` = T2.`Region_ID`",
    "exec_result": 1
  },
  {
    "idx": 334,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT B.`Name`, R.`Name` FROM building AS B JOIN region AS R ON B.`Region_ID` = R.`Region_ID`",
    "exec_result": 1
  },
  {
    "idx": 335,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT R.`Name` FROM region AS R JOIN building AS B ON R.`Region_ID` = B.`Region_ID` GROUP BY R.`Region_ID` HAVING COUNT(B.`Building_ID`) > 1",
    "exec_result": 1
  },
  {
    "idx": 336,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
    "pred": "SELECT R.Name FROM region AS R JOIN building AS B ON R.Region_ID = B.Region_ID GROUP BY R.Name HAVING COUNT(B.Building_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 337,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Capital` FROM `region` WHERE `Region_ID` = (SELECT `Region_ID` FROM `building` GROUP BY `Region_ID` ORDER BY COUNT(*) DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 338,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 339,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT B.`Address`, R.`Capital` FROM building AS B JOIN region AS R ON B.`Region_ID` = R.`Region_ID`",
    "exec_result": 1
  },
  {
    "idx": 340,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT B.`Name`, B.`Address`, R.`Name` FROM building AS B JOIN region AS R ON B.`Region_ID` = R.`Region_ID`",
    "exec_result": 0
  },
  {
    "idx": 341,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
    "pred": "SELECT `Number_of_Stories` FROM `building` WHERE `Region_ID` = (SELECT `Region_ID` FROM `region` WHERE `Name` = 'Abruzzo')",
    "exec_result": 1
  },
  {
    "idx": 342,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
    "pred": "SELECT `Number_of_Stories` FROM `building` WHERE `Region_ID` = (SELECT `Region_ID` FROM `region` WHERE `Name` = 'Abruzzo')",
    "exec_result": 1
  },
  {
    "idx": 343,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 344,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
    "pred": "SELECT `Completed_Year`, COUNT(*) FROM building GROUP BY `Completed_Year`",
    "exec_result": 1
  },
  {
    "idx": 345,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Completed_Year` FROM `building` GROUP BY `Completed_Year` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 346,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT MAX(Completed_Year) FROM building",
    "exec_result": 0
  },
  {
    "idx": 347,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
    "pred": "SELECT `Name` FROM `region` WHERE `Region_ID` NOT IN (SELECT `Region_ID` FROM `building`)",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
    "pred": "SELECT R.Name FROM region R WHERE R.Region_ID NOT IN (SELECT B.Region_ID FROM building B)",
    "exec_result": 1
  },
  {
    "idx": 349,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
    "pred": "SELECT * FROM building WHERE Number_of_Stories > 20 AND Number_of_Stories < 15",
    "exec_result": 0
  },
  {
    "idx": 350,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
    "pred": "SELECT Building_ID, Completed_Year FROM building WHERE Number_of_Stories > 20 AND Number_of_Stories < 15",
    "exec_result": 0
  },
  {
    "idx": 351,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT DISTINCT Address FROM building",
    "pred": "SELECT DISTINCT `Address` FROM `building`",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT DISTINCT Address FROM building",
    "pred": "SELECT DISTINCT `Address` FROM `building`",
    "exec_result": 1
  },
  {
    "idx": 353,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
    "pred": "SELECT `Name`, `Completed_Year`, `Number_of_Stories` FROM `building` ORDER BY `Number_of_Stories` DESC",
    "exec_result": 0
  },
  {
    "idx": 354,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
    "pred": "SELECT `Name`, `Number_of_Stories`, `Completed_Year` FROM `building` ORDER BY `Number_of_Stories` DESC",
    "exec_result": 0
  },
  {
    "idx": 355,
    "db_id": "government_shift",
    "question": "",
    "gold": "select channel_details from channels order by channel_details",
    "pred": "SELECT * FROM Channels ORDER BY Channel_Details ASC",
    "exec_result": 0
  },
  {
    "idx": 356,
    "db_id": "government_shift",
    "question": "",
    "gold": "select channel_details from channels order by channel_details",
    "pred": "SELECT Channels.Channel_Details FROM Channels JOIN Customers_and_Services ON Channels.Channel_ID = Customers_and_Services.Channel_ID ORDER BY Channels.Channel_Details;",
    "exec_result": 0
  },
  {
    "idx": 357,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM services",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 358,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM services",
    "pred": "SELECT Customers.Customer_Details, COUNT(Services.Service_ID) as Service_Count FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers.Customer_Details;",
    "exec_result": 0
  },
  {
    "idx": 359,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Analytical_Layer_Type_Code`, COUNT(*) as count FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code` ORDER BY count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 360,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Analytical_Layer_Type_Code`, COUNT(*) as count FROM `Analytical_Layer` GROUP BY `Analytical_Layer_Type_Code` ORDER BY count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 361,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch';",
    "exec_result": 1
  },
  {
    "idx": 362,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch';",
    "exec_result": 1
  },
  {
    "idx": 363,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id group by t1.service_details having count(*)  >  3",
    "pred": "SELECT Services.Service_Details, COUNT(*) as Service_Usage_Count FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Services.Service_Details HAVING COUNT(*) > 3",
    "exec_result": 0
  },
  {
    "idx": 364,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_details HAVING count(*)  >  3",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID GROUP BY Services.Service_ID HAVING COUNT(Customers_and_Services.Customer_ID) > 3",
    "exec_result": 1
  },
  {
    "idx": 365,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.customer_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT C.Customer_Details, COUNT(CS.Service_ID) as Service_Usage_Count FROM Customers C JOIN Customers_and_Services CS ON C.Customer_ID = CS.Customer_ID GROUP BY C.Customer_ID ORDER BY Service_Usage_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 366,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "SELECT Customers.Customer_Details, COUNT(Customers_and_Services.Customer_ID) as Service_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY Service_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 367,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "SELECT Customers.Customer_Details, COUNT(DISTINCT Customers_and_Services.Customers_and_Services_ID) as Service_Usage_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_Details ORDER BY Service_Usage_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 368,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "SELECT Customers.Customer_Details, COUNT(DISTINCT Customers_and_Services.Customers_and_Services_ID) as Service_Usage_Count FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID GROUP BY Customers.Customer_ID ORDER BY Service_Usage_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 369,
    "db_id": "government_shift",
    "question": "",
    "gold": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
    "pred": "SELECT C.* FROM Customers C WHERE C.Customer_ID NOT IN ( SELECT CS.Customer_ID FROM Customers_and_Services CS )",
    "exec_result": 0
  },
  {
    "idx": 370,
    "db_id": "government_shift",
    "question": "",
    "gold": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
    "pred": "SELECT Customers.Customer_ID, Customers.Customer_Details FROM Customers WHERE Customers.Customer_ID NOT IN ( SELECT Customers_and_Services.Customer_ID FROM Customers_and_Services )",
    "exec_result": 0
  },
  {
    "idx": 371,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
    "pred": "SELECT C.Customer_Details, COUNT(CS.Service_ID) as Service_Usage FROM Customers C JOIN Customers_and_Services CUS ON C.Customer_ID = CUS.Customer_ID JOIN Services S ON S.Service_ID = CUS.Service_ID GROUP BY C.Customer_ID ORDER BY Service_Usage ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 372,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
    "pred": "SELECT Customers.Customer_Details, Services.Service_Details, COUNT(*) as Frequency FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers.Customer_Details, Services.Service_Details HAVING COUNT(*) = (SELECT MIN(Frequency) FROM ( SELECT COUNT(*) as Frequency FROM Customers_and_Services JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID GROUP BY Customers.Customer_Details, Services.Service_Details ) AS subquery)",
    "exec_result": 0
  },
  {
    "idx": 373,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
    "pred": "SELECT COUNT(DISTINCT Customers_and_Services_Details) FROM Customers_and_Services",
    "exec_result": 1
  },
  {
    "idx": 374,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
    "pred": "SELECT COUNT(DISTINCT Services.Service_ID) FROM Customers_and_Services JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID;",
    "exec_result": 1
  },
  {
    "idx": 375,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
    "pred": "SELECT * FROM Customers WHERE Customer_Details LIKE '%Kutch%'",
    "exec_result": 0
  },
  {
    "idx": 376,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
    "pred": "SELECT Customers.* FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers_and_Services.Customers_and_Services_Details LIKE '%Kutch%';",
    "exec_result": 0
  },
  {
    "idx": 377,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE (Customers.Customer_Details = 'Hardy Kutch' OR Customer_Interactions.Services_and_Channels_Details = 'good')",
    "exec_result": 0
  },
  {
    "idx": 378,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customers_and_Services_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID JOIN Customers ON Customer_Interactions.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch' AND Customer_Interactions.Customers_and_Services_Details = 'Satisfied' AND Integration_Platform.Integration_Platform_Details = 'Success';",
    "exec_result": 0
  },
  {
    "idx": 379,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customers_and_Services_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Name = 'Hardy Kutch' AND Customer_Interactions.Status_Code = 'Bad'",
    "exec_result": 0
  },
  {
    "idx": 380,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
    "pred": "CREATE TABLE Customer_Interactions ( Customer_Interaction_ID INTEGER PRIMARY KEY, Channel_ID INTEGER, Customer_ID INTEGER, Service_ID INTEGER, Status_Code TEXT, Services_and_Channels_Details TEXT, FOREIGN KEY(Customer_ID) REFERENCES Customers(Customer_ID), FOREIGN KEY(Service_ID) REFERENCES Services(Service_ID), FOREIGN KEY(Channel_ID) REFERENCES Channels(Channel_ID) ); INSERT INTO Customer_Interactions (Customer_Interaction_ID, Channel_ID, Customer_ID, Service_ID, Status_Code, Services_and_Channels_Details) SELECT Customer_Interaction_ID, Channel_ID, Customer_ID, Service_ID, Status_Code, Services_and_Channels_Details FROM YourTableName WHERE Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') AND Services_and_Channels_Details = 'Bad';",
    "exec_result": 0
  },
  {
    "idx": 381,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.service_details from services as t1 join customer_interactions as t2 on t1.service_id  =  t2.service_id join channels as t3 on t2.channel_id  =  t3.channel_id where t3.channel_details  =  \"15 ij\"",
    "pred": "SELECT Services.Service_Details, Channels.Channel_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID WHERE Channels.Channel_Details = '15 ij'",
    "exec_result": 0
  },
  {
    "idx": 382,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customer_interactions AS t2 ON t1.service_id  =  t2.service_id JOIN channels AS t3 ON t2.channel_id  =  t3.channel_id WHERE t3.channel_details  =  \"15 ij\"",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID WHERE Channels.Channel_Details = '15 ij';",
    "exec_result": 1
  },
  {
    "idx": 383,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id where t2.status_code  =  \"stuck\" and services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Customers.Customer_Details, Services.Service_Details, Channels.Channel_Details, Analytical_Layer.Analytical_Layer_Type_Code FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customers_and_Services_ID JOIN Services ON Customer_Interactions.Service_ID = Services.Service_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID JOIN Analytical_Layer ON Customers_and_Services.Customers_and_Services_ID = Analytical_Layer.Customers_and_Services_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Customer_Interactions.Status_Code = 'Stuck' AND Analytical_Layer.Pattern_Recognition = 'Bad';",
    "exec_result": 0
  },
  {
    "idx": 384,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.status_code  =  \"Stuck\" AND services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Services ON Customer_Interactions.Service_ID = Services.Service_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID JOIN Analytical_Layer ON Customers_and_Services.Customers_and_Services_ID = Analytical_Layer.Customers_and_Services_ID_ID WHERE Customer_Interactions.Status_Code = 'Stuck' AND Analytical_Layer.Pattern_Recognition = 'Bad';",
    "exec_result": 0
  },
  {
    "idx": 385,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
    "pred": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details = 'Success'",
    "exec_result": 1
  },
  {
    "idx": 386,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
    "pred": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details = 'Success'",
    "exec_result": 1
  },
  {
    "idx": 387,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id join integration_platform as t3 where t3.integration_platform_details  =  \"fail\"",
    "pred": "SELECT Customers.Customer_Details, Customers_and_Services.Customers_and_Services_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Integration_Platform ON Customers_and_Services.Customers_and_Services_ID = Integration_Platform.Customers_and_Services_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail';",
    "exec_result": 0
  },
  {
    "idx": 388,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id JOIN integration_platform AS t3 WHERE t3.integration_platform_details  =  \"Fail\"",
    "pred": "SELECT Customers.Customer_Details FROM Customers JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail';",
    "exec_result": 0
  },
  {
    "idx": 389,
    "db_id": "government_shift",
    "question": "",
    "gold": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
    "pred": "SELECT Services.Service_ID, Services.Service_Details FROM Services LEFT JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Service_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 390,
    "db_id": "government_shift",
    "question": "",
    "gold": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
    "pred": "SELECT Services.Service_Details FROM Services WHERE Services.Service_ID NOT IN ( SELECT Customers_and_Services.Service_ID FROM Customers_and_Services )",
    "exec_result": 1
  },
  {
    "idx": 391,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
    "pred": "SELECT Analytical_Layer.`Analytical_Layer_Type_Code`, COUNT(*) as `Usage_Count` FROM Analytical_Layer JOIN Customers_and_Services ON Analytical_Layer.`Customers_and_Services_ID` = Customers_and_Services.`Customers_and_Services_ID` GROUP BY Analytical_Layer.`Analytical_Layer_Type_Code`;",
    "exec_result": 1
  },
  {
    "idx": 392,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
    "pred": "SELECT Analytical_Layer.Analytical_Layer_Type_Code, COUNT(Analytical_Layer.Analytical_Layer_Type_Code) as Count FROM Analytical_Layer JOIN Customers_and_Services ON Analytical_Layer.Customers_and_Services_ID = Customers_and_Services.Customers_and_Services_ID GROUP BY Analytical_Layer.Analytical_Layer_Type_Code;",
    "exec_result": 1
  },
  {
    "idx": 393,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id where t2.customers_and_services_details  =  \"unsatisfied\"",
    "pred": "SELECT Services.* FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers_and_Services_Details = 'Unsatisfied' ON Customers_and_Services.Customers_and_Services_Details = 'Unsatisfied'",
    "exec_result": 0
  },
  {
    "idx": 394,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id WHERE t2.customers_and_services_details  =  \"Unsatisfied\"",
    "pred": "-- First, create a temporary table to hold the result of the first query CREATE TEMPORARY TABLE temp_services AS SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customers_and_Services_Details ON Customers_and_Services.Customers_and_Services_ID = Customers_and_Services_Details.Customers_and_Services_ID WHERE Customers_and_Services_Details.Customers_and_Services_Details = 'Unsatisfied'; -- Then, create a table to hold the result of the second query CREATE TABLE Customers_and_Services_Details ( Customers_and_Services_ID INT, Customers_and_Services_Details TEXT ); -- Insert the result of the second query into the temporary table INSERT INTO Customers_and_Services_Details (Customers_and_Services_ID, Customers_and_Services_Details) SELECT Customers_and_Services_ID, Customers_and_Services_Details FROM Customers_and_Services; -- Finally, select the result of the first query from the temporary table SELECT * FROM temp_services;",
    "exec_result": 0
  },
  {
    "idx": 395,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT count(*) FROM vehicles",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 396,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT count(*) FROM vehicles",
    "pred": "SELECT COUNT(*) FROM Vehicles",
    "exec_result": 1
  },
  {
    "idx": 397,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles ORDER BY model_year DESC",
    "pred": "SELECT name FROM Vehicles ORDER BY Model_year DESC",
    "exec_result": 1
  },
  {
    "idx": 398,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles ORDER BY model_year DESC",
    "pred": "SELECT Vehicles.name FROM Vehicles ORDER BY Vehicles.Model_year DESC;",
    "exec_result": 1
  },
  {
    "idx": 399,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT DISTINCT type_of_powertrain FROM vehicles",
    "pred": "SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles`",
    "exec_result": 1
  },
  {
    "idx": 400,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT DISTINCT type_of_powertrain FROM vehicles",
    "pred": "SELECT DISTINCT `Type_of_powertrain` FROM `Vehicles`",
    "exec_result": 1
  },
  {
    "idx": 401,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
    "pred": "SELECT `name`, `Type_of_powertrain`, `Annual_fuel_cost` FROM `Vehicles` WHERE `Model_year` IN (2013, 2014)",
    "exec_result": 1
  },
  {
    "idx": 402,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
    "pred": "SELECT Vehicles.name, Vehicles.Type_of_powertrain, Vehicles.Model_year, Vehicles.Annual_fuel_cost FROM Vehicles WHERE Vehicles.Model_year IN (2013, 2014)",
    "exec_result": 0
  },
  {
    "idx": 403,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
    "pred": "SELECT V.`Type_of_powertrain` FROM Vehicles AS V WHERE V.`Model_year` IN (2014, 2013) GROUP BY V.`Type_of_powertrain`",
    "exec_result": 0
  },
  {
    "idx": 404,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
    "pred": "SELECT V.Type_of_powertrain FROM Vehicles V JOIN Renting_history R ON V.id = R.vehicles_id WHERE V.Model_year IN (2013, 2014) GROUP BY V.Type_of_powertrain HAVING COUNT(DISTINCT V.id) = 2;",
    "exec_result": 0
  },
  {
    "idx": 405,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
    "pred": "SELECT `Type_of_powertrain`, COUNT(*) FROM Vehicles GROUP BY `Type_of_powertrain`",
    "exec_result": 1
  },
  {
    "idx": 406,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
    "pred": "SELECT `Type_of_powertrain`, COUNT(*) as `Number_of_Vehicles` FROM `Vehicles` GROUP BY `Type_of_powertrain`;",
    "exec_result": 1
  },
  {
    "idx": 407,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Type_of_powertrain, COUNT(*) as Number_of_Vehicles FROM Vehicles GROUP BY Type_of_powertrain ORDER BY Number_of_Vehicles DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 408,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Type_of_powertrain`, COUNT(*) as `Count` FROM `Vehicles` GROUP BY `Type_of_powertrain` ORDER BY `Count` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 409,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
    "pred": "SELECT MIN(Annual_fuel_cost) AS Minimum_Annual_Fuel_Cost, MAX(Annual_fuel_cost) AS Maximum_Annual_Fuel_Cost, AVG(Annual_fuel_cost) AS Average_Annual_Fuel_Cost FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 410,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
    "pred": "SELECT MIN(Annual_fuel_cost) AS Minimum_Fuel_Cost, MAX(Annual_fuel_cost) AS Maximum_Fuel_Cost, AVG(Annual_fuel_cost) AS Average_Fuel_Cost FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 411,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
    "pred": "SELECT `name`, `Model_year` FROM `Vehicles` WHERE `Combined_fuel_economy_rate` <= `Highway_fuel_economy_rate`",
    "exec_result": 1
  },
  {
    "idx": 412,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
    "pred": "SELECT V.name, V.Model_year FROM Vehicles V WHERE V.City_fuel_economy_rate <= V.Highway_fuel_economy_rate",
    "exec_result": 1
  },
  {
    "idx": 413,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
    "pred": "SELECT V.`Type_of_powertrain`, AVG(V.`Annual_fuel_cost`) FROM Vehicles AS V JOIN Renting_history AS R ON V.`id` = R.`vehicles_id` WHERE V.`Type_of_powertrain` IN ( SELECT Vehicles.`Type_of_powertrain` FROM Vehicles GROUP BY Vehicles.`Type_of_powertrain` HAVING COUNT(Vehicles.`id`) >= 2 ) GROUP BY V.`Type_of_powertrain`",
    "exec_result": 0
  },
  {
    "idx": 414,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
    "pred": "SELECT V.Type_of_powertrain, AVG(R.Annual_fuel_cost) AS Average_Annual_Fuel_Cost FROM Vehicles V JOIN Renting_history R ON V.id = R.vehicles_id GROUP BY V.Type_of_powertrain",
    "exec_result": 0
  },
  {
    "idx": 415,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age ,  membership_credit FROM customers",
    "pred": "SELECT `name`, `age`, `membership_credit` FROM `Customers`",
    "exec_result": 1
  },
  {
    "idx": 416,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age ,  membership_credit FROM customers",
    "pred": "SELECT `name`, `age`, `membership_credit` FROM `Customers`",
    "exec_result": 1
  },
  {
    "idx": 417,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
    "pred": "SELECT `name`, `age` FROM `Customers` WHERE `membership_credit` = (SELECT MAX(`membership_credit`) FROM `Customers`)",
    "exec_result": 1
  },
  {
    "idx": 418,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
    "pred": "SELECT name, age FROM Customers WHERE membership_credit = (SELECT MAX(membership_credit) FROM Customers);",
    "exec_result": 1
  },
  {
    "idx": 419,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
    "pred": "SELECT AVG(age) as average_age FROM Customers WHERE membership_credit > (SELECT AVG(membership_credit) FROM Customers);",
    "exec_result": 1
  },
  {
    "idx": 420,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
    "pred": "SELECT AVG(age) as average_age FROM Customers WHERE membership_credit > (SELECT AVG(membership_credit) FROM Customers)",
    "exec_result": 1
  },
  {
    "idx": 421,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT * FROM discount",
    "pred": "SELECT * FROM Discount",
    "exec_result": 1
  },
  {
    "idx": 422,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT * FROM discount",
    "pred": "SELECT Customers.name, Customers.age, Customers.membership_credit, Discount.name AS discount_name, Discount.membership_credit AS discount_membership_credit FROM Renting_history JOIN Customers ON Renting_history.customer_id = Customers.id JOIN Discount ON Renting_history.discount_id = Discount.id JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id ORDER BY discount_membership_credit ASC;",
    "exec_result": 0
  },
  {
    "idx": 423,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
    "pred": "SELECT V.name, RH.total_hours FROM Renting_history RH JOIN Vehicles V ON RH.vehicles_id = V.id GROUP BY RH.vehicles_id;",
    "exec_result": 0
  },
  {
    "idx": 424,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
    "pred": "SELECT V.name, RH.total_hours FROM Vehicles AS V JOIN Renting_history AS RH ON V.id = RH.vehicles_id ORDER BY V.name;",
    "exec_result": 0
  },
  {
    "idx": 425,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
    "pred": "SELECT V.name FROM Vehicles V LEFT JOIN Renting_history R ON V.id = R.vehicles_id WHERE R.vehicles_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 426,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
    "pred": "SELECT V.name FROM Vehicles V LEFT JOIN Renting_history R ON V.id = R.vehicles_id WHERE R.vehicles_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 427,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
    "pred": "SELECT C.name FROM Customers AS C JOIN Renting_history AS RH ON C.id = RH.customer_id GROUP BY C.id HAVING COUNT(RH.id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 428,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
    "pred": "SELECT Customers.name FROM Customers JOIN Renting_history ON Customers.id = Renting_history.customer_id GROUP BY Customers.id HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 429,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `name`, `Model_year` FROM `Vehicles` WHERE `id` = ( SELECT `vehicles_id` FROM `Renting_history` GROUP BY `vehicles_id` ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 430,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT V.name, V.Model_year FROM Vehicles AS V JOIN ( SELECT vehicles_id, COUNT(*) as count FROM Renting_history GROUP BY vehicles_id ORDER BY count DESC LIMIT 1 ) AS R ON V.id = R.vehicles_id",
    "exec_result": 1
  },
  {
    "idx": 431,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC",
    "pred": "SELECT V.`name`, RH.`total_hours` FROM Vehicles AS V JOIN Renting_history AS RH ON V.`id` = RH.`vehicles_id` ORDER BY RH.`total_hours` DESC",
    "exec_result": 0
  },
  {
    "idx": 432,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC",
    "pred": "SELECT V.name, SUM(R.total_hours) as total_hours FROM Renting_history as R JOIN Vehicles as V ON R.vehicles_id = V.id GROUP BY R.vehicles_id ORDER BY total_hours DESC",
    "exec_result": 0
  },
  {
    "idx": 433,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT D.name, COUNT(*) as num_records FROM Renting_history as R JOIN Discount as D ON R.discount_id = D.id GROUP BY D.name ORDER BY num_records DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 434,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT D.name FROM Discount D JOIN Renting_history R ON D.id = R.discount_id GROUP BY D.name ORDER BY COUNT(R.id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 435,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30",
    "pred": "SELECT Vehicles.name, Vehicles.Type_of_powertrain FROM Renting_history JOIN Vehicles ON Renting_history.vehicles_id = Vehicles.id WHERE Renting_history.total_hours > 30",
    "exec_result": 1
  },
  {
    "idx": 436,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30",
    "pred": "SELECT V.name, V.Type_of_powertrain FROM Vehicles V JOIN Renting_history R ON V.id = R.vehicles_id GROUP BY V.id HAVING SUM(R.total_hours) > 30",
    "exec_result": 1
  },
  {
    "idx": 437,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain",
    "pred": "SELECT V.name AS Vehicle_Name, V.Type_of_powertrain AS Powertrain_Type, AVG(V.City_fuel_economy_rate) AS Average_City_Fuel_Economy_Rate, AVG(V.Highway_fuel_economy_rate) AS Average_Highway_Fuel_Economy_Rate FROM Vehicles AS V GROUP BY V.Type_of_powertrain",
    "exec_result": 0
  },
  {
    "idx": 438,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain",
    "pred": "SELECT Type_of_powertrain, AVG(City_fuel_economy_rate) AS Average_City_Fuel_Economy_Rate, AVG(Highway_fuel_economy_rate) AS Average_Highway_Fuel_Economy_Rate FROM Vehicles GROUP BY Type_of_powertrain;",
    "exec_result": 1
  },
  {
    "idx": 439,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT avg(amount_of_loan) FROM Student_Loans",
    "pred": "SELECT AVG(amount_of_loan) as Average_Amount FROM Student_Loans",
    "exec_result": 1
  },
  {
    "idx": 440,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT avg(amount_of_loan) FROM Student_Loans",
    "pred": "SELECT AVG(amount_of_loan) as average_amount_of_loan FROM Student_Loans",
    "exec_result": 1
  },
  {
    "idx": 441,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2",
    "pred": "SELECT Students.student_id, Students.bio_data, COUNT(*) as num_classes FROM Students JOIN Classes ON Students.student_id = Classes.student_id GROUP BY Students.student_id HAVING COUNT(*) >= 2 UNION SELECT Students.student_id, Students.bio_data, COUNT(*) as num_detentions FROM Students JOIN Detention ON Students.student_id = Detention.student_id WHERE Detention.detention_id IS NULL GROUP BY Students.student_id HAVING COUNT(*) < 2;",
    "exec_result": 0
  },
  {
    "idx": 442,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2",
    "pred": "SELECT Students.student_id, Students.bio_data FROM Students JOIN ( SELECT student_id, COUNT(*) as class_count FROM Classes GROUP BY student_id HAVING COUNT(*) >= 2 ) T1 ON Students.student_id = T1.student_id JOIN ( SELECT student_id, COUNT(*) as detention_count FROM Detention GROUP BY student_id ) T2 ON Students.student_id = T2.student_id WHERE T1.class_count >= 2 AND T2.detention_count < 2",
    "exec_result": 0
  },
  {
    "idx": 443,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'",
    "pred": "SELECT Teachers.* FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Classes.class_details LIKE '%data%' AND NOT (Classes.class_details LIKE 'net%')",
    "exec_result": 0
  },
  {
    "idx": 444,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'",
    "pred": "SELECT Teachers.teacher_details FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id WHERE Teachers.teacher_id IN ( SELECT Teachers.teacher_id FROM Teachers WHERE Teachers.teacher_details LIKE '%data%' AND NOT Teachers.teacher_details LIKE 'net%' )",
    "exec_result": 0
  },
  {
    "idx": 445,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)",
    "pred": "SELECT Students.student_id, Students.bio_data, Students.student_details FROM Students LEFT JOIN Detention ON Students.student_id = Detention.student_id WHERE Detention.student_id IS NULL AND NOT EXISTS (SELECT 1 FROM Student_Loans WHERE Students.student_id = Student_Loans.student_id);",
    "exec_result": 1
  },
  {
    "idx": 446,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)",
    "pred": "SELECT Students.student_id, Students.bio_data, Students.student_details, Addresses.address_details FROM Students LEFT JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id LEFT JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id LEFT JOIN Detention ON Students.student_id = Detention.student_id LEFT JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Detention.detention_id IS NULL AND Student_Loans.student_loan_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 447,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )",
    "pred": "SELECT Students.student_id, Students.bio_data, Students.student_details, Student_Loans.date_of_loan, Student_Loans.amount_of_loan FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id JOIN Achievements ON Students.student_id = Achievements.student_id GROUP BY Students.student_id HAVING COUNT(DISTINCT Achievements.achievement_id) >= 2",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )",
    "pred": "SELECT S.student_id, S.bio_data, S.student_details, L.date_of_loan, L.amount_of_loan FROM Students S JOIN Student_Loans L ON S.student_id = L.student_id JOIN Achievements A ON S.student_id = A.student_id GROUP BY S.student_id HAVING COUNT(A.achievement_id) >= 2",
    "exec_result": 0
  },
  {
    "idx": 449,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.`teacher_id`, T1.`teacher_details`, COUNT(T2.`class_id`) as `Number_of_Courses` FROM `Classes` as T1 JOIN `Teachers` as T2 ON T1.`teacher_id` = T2.`teacher_id` GROUP BY T1.`teacher_id`, T1.`teacher_details` ORDER BY COUNT(T2.`class_id`) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 450,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Teachers.teacher_id, Teachers.teacher_details, COUNT(Classes.teacher_id) as num_courses FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id GROUP BY Teachers.teacher_id ORDER BY num_courses DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 451,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 452,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code",
    "pred": "SELECT DISTINCT Detention.detention_summary FROM Detention",
    "exec_result": 0
  },
  {
    "idx": 453,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code",
    "pred": "SELECT Students.student_id, Students.bio_data, Students.student_details, Addresses.address_details, Ref_Address_Types.address_type_description FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id JOIN Ref_Address_Types ON Addresses.address_type_code = Ref_Address_Types.address_type_code",
    "exec_result": 0
  },
  {
    "idx": 454,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code",
    "pred": "SELECT Students.bio_data, Ref_Address_Types.address_type_description, Students_Addresses.date_from, Students_Addresses.date_to FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code;",
    "exec_result": 0
  },
  {
    "idx": 455,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "SELECT Students.`bio_data`, Addresses.`address_details` FROM Students JOIN Students_Addresses ON Students.`student_id` = Students_Addresses.`student_id` JOIN Addresses ON Students_Addresses.`address_id` = Addresses.`address_id` WHERE Students_Addresses.`address_type_code` = 'Home';",
    "exec_result": 0
  },
  {
    "idx": 456,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "SELECT Students.student_id, Students.bio_data, Students.student_details, Addresses.address_details, Transcripts.date_of_transcript, Transcripts.transcript_details, Behaviour_Monitoring.behaviour_monitoring_details, Detention.datetime_detention_start, Detention.datetime_detention_end, Detention.detention_summary, Achievements.date_achievement, Achievements.achievement_details FROM Students JOIN Students_Addresses ON Students.student_id = Students_Addresses.student_id JOIN Addresses ON Students_Addresses.address_id = Addresses.address_id JOIN Transcripts ON Students.student_id = Transcripts.student_id JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id JOIN Detention ON Students.student_id = Detention.student_id JOIN Achievements ON Students.student_id = Achievements.student_id;",
    "exec_result": 0
  },
  {
    "idx": 457,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "SELECT Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id",
    "exec_result": 1
  },
  {
    "idx": 458,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "SELECT Students.bio_data, Transcripts.date_of_transcript FROM Students JOIN Transcripts ON Students.student_id = Transcripts.student_id;",
    "exec_result": 1
  },
  {
    "idx": 459,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT B.student_id, E.event_type_description, COUNT(*) as count FROM Behaviour_Monitoring B JOIN Ref_Event_Types E ON B.event_type_code = E.event_type_code GROUP BY B.student_id, E.event_type_description ORDER BY count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 460,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT behaviour_monitoring_details, COUNT(*) as count FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 461,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )",
    "pred": "SELECT Students.bio_data, Students.student_details, COUNT(Behaviour_Monitoring.student_id) as count FROM Students INNER JOIN Behaviour_Monitoring ON Students.student_id = Behaviour_Monitoring.student_id GROUP BY Students.student_id;",
    "exec_result": 0
  },
  {
    "idx": 462,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )",
    "pred": "SELECT S.student_id, S.bio_data, S.student_details, BM.behaviour_monitoring_details, A.achievement_details FROM Students S JOIN ( SELECT student_id, COUNT(*) as count FROM Transcripts GROUP BY student_id ORDER BY count DESC LIMIT 1 ) T ON S.student_id = T.student_id JOIN ( SELECT student_id, COUNT(*) as count FROM Behaviour_Monitoring GROUP BY student_id HAVING count = 3 ) BM ON S.student_id = BM.student_id JOIN ( SELECT student_id, COUNT(*) as count FROM Achievements GROUP BY student_id ORDER BY count DESC LIMIT 1 ) A ON S.student_id = A.student_id",
    "exec_result": 0
  },
  {
    "idx": 463,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details NOT IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 )",
    "pred": "SELECT S.student_id, S.bio_data, S.student_details FROM Students S JOIN ( SELECT student_id, COUNT(DISTINCT behaviour_monitoring_details) as count FROM Behaviour_Monitoring GROUP BY student_id ) B ON S.student_id = B.student_id WHERE B.count = ( SELECT MAX(count) FROM ( SELECT student_id, COUNT(DISTINCT behaviour_monitoring_details) as count FROM Behaviour_Monitoring GROUP BY student_id ) );",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 ) except select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details not in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 )",
    "pred": "SELECT S.bio_data, COUNT(BM.behaviour_monitoring_details) as count_details FROM Students S JOIN Behaviour_Monitoring BM ON S.student_id = BM.student_id GROUP BY S.bio_data ORDER BY count_details DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "SELECT S.bio_data, T.date_of_transcript FROM Students S JOIN Student_Events SE ON S.student_id = SE.student_id JOIN Transcripts T ON SE.event_id = T.transcript_id WHERE SE.event_id IN ( SELECT event_id FROM Student_Events WHERE event_type_code = 'Registration' );",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "SELECT Students.bio_data, Student_Events.event_date FROM Students JOIN Student_Events ON Students.student_id = Student_Events.student_id GROUP BY Students.student_id;",
    "exec_result": 1
  },
  {
    "idx": 467,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Ref_Event_Types.event_type_description, COUNT(Student_Events.event_id) as num_students FROM Student_Events JOIN Ref_Event_Types ON Student_Events.event_type_code = Ref_Event_Types.event_type_code GROUP BY Student_Events.event_type_code ORDER BY num_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 468,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 469,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code",
    "pred": "SELECT Achievements.`achievement_details`, Ref_Achievement_Type.`achievement_type_description` FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.`achievement_type_code` = Ref_Achievement_Type.`achievement_type_code`",
    "exec_result": 1
  },
  {
    "idx": 470,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code",
    "pred": "SELECT Achievements.`achievement_details`, Ref_Achievement_Type.`achievement_type_description` FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.`achievement_type_code` = Ref_Achievement_Type.`achievement_type_code`",
    "exec_result": 1
  },
  {
    "idx": 471,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )",
    "pred": "SELECT COUNT(DISTINCT Teachers.teacher_id) AS Number_of_teachers FROM Teachers JOIN Classes ON Teachers.teacher_id = Classes.teacher_id JOIN Students ON Classes.student_id = Students.student_id LEFT JOIN Achievements ON Students.student_id = Achievements.student_id AND Achievements.achievement_type_code = 'Scholastic' WHERE Achievements.student_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 472,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )",
    "pred": "SELECT COUNT(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id = T2.teacher_id JOIN Students AS T3 ON T2.student_id = T3.student_id LEFT JOIN Achievements AS T4 ON T3.student_id = T4.student_id AND T4.achievement_type_code = 'Scholastic' WHERE T4.student_id IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 473,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_transcript ,  transcript_details FROM Transcripts",
    "pred": "SELECT `date_of_transcript`, `transcript_details` FROM `Transcripts`",
    "exec_result": 1
  },
  {
    "idx": 474,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_transcript ,  transcript_details FROM Transcripts",
    "pred": "SELECT Transcripts.date_of_transcript, Transcripts.transcript_details, Students.bio_data, Students.student_details, Ref_Event_Types.event_type_description, Ref_Achievement_Type.achievement_type_description, Ref_Detention_Type.detention_type_description FROM Transcripts JOIN Students ON Transcripts.student_id = Students.student_id JOIN Ref_Event_Types ON Transcripts.event_type_code = Ref_Event_Types.event_type_code JOIN Ref_Achievement_Type ON Transcripts.achievement_type_code = Ref_Achievement_Type.achievement_type_code JOIN Ref_Detention_Type ON Transcripts.detention_type_code = Ref_Detention_Type.detention_type_code",
    "exec_result": 0
  },
  {
    "idx": 475,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements",
    "pred": "SELECT `achievement_type_code`, `achievement_details`, `date_achievement` FROM `Achievements` WHERE `student_id` IN ( SELECT `student_id` FROM `Students` WHERE `bio_data` = 'Leonard' )",
    "exec_result": 0
  },
  {
    "idx": 476,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements",
    "pred": "SELECT Ref_Achievement_Type.achievement_type_code, Achievements.achievement_details, Achievements.date_achievement FROM Achievements INNER JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code",
    "exec_result": 1
  },
  {
    "idx": 477,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention",
    "pred": "SELECT `datetime_detention_start`, `datetime_detention_end` FROM `Detention`",
    "exec_result": 1
  },
  {
    "idx": 478,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention",
    "pred": "SELECT Detention.datetime_detention_start, Detention.datetime_detention_end FROM Detention JOIN Ref_Detention_Type ON Detention.detention_type_code = Ref_Detention_Type.detention_type_code;",
    "exec_result": 1
  },
  {
    "idx": 479,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'",
    "pred": "SELECT `bio_data` FROM `Students` WHERE `bio_data` LIKE '%Suite%'",
    "exec_result": 0
  },
  {
    "idx": 480,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'",
    "pred": "SELECT `student_id`, `bio_data` FROM `Students` WHERE `student_details` LIKE '%Suite%'",
    "exec_result": 0
  },
  {
    "idx": 481,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "SELECT T1.teacher_name, T2.student_name FROM ( SELECT T1.teacher_name FROM ( SELECT `teacher_name` FROM `Teachers` WHERE `teacher_id` IN ( SELECT `teacher_id` FROM `Classes` GROUP BY `teacher_id` HAVING COUNT(DISTINCT `student_id`) > 1 ) ) AS T1 JOIN ( SELECT `student_name` FROM `Students` WHERE `student_id` IN ( SELECT `student_id` FROM `Classes` GROUP BY `student_id` HAVING COUNT(DISTINCT `teacher_id`) > 1 ) ) AS T2 ON T1.teacher_name = T2.student_name )",
    "exec_result": 0
  },
  {
    "idx": 482,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "SELECT T1.teacher_details, T2.student_details FROM Classes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id",
    "exec_result": 0
  },
  {
    "idx": 483,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(*) as total_courses, teacher_id FROM Classes GROUP BY teacher_id ORDER BY total_courses DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 484,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.`teacher_id`, COUNT(*) as `number_of_courses` FROM Classes as T1 JOIN Teachers as T2 ON T1.`teacher_id` = T2.`teacher_id` GROUP BY T1.`teacher_id` ORDER BY `number_of_courses` DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 485,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT student_id FROM Classes WHERE student_id IN ( SELECT student_id FROM Classes GROUP BY student_id ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 486,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT student_id, COUNT(*) as num_courses FROM Classes GROUP BY student_id ORDER BY num_courses DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 487,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT S.`student_id`, S.`bio_data` FROM Students AS S JOIN ( SELECT C.`student_id` FROM Classes AS C GROUP BY C.`student_id` HAVING COUNT(*) = 2 ) AS T ON S.`student_id` = T.`student_id`",
    "exec_result": 0
  },
  {
    "idx": 488,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "SELECT S.student_id, S.bio_data, S.student_details, COUNT(C.class_id) as num_courses FROM Students S JOIN Classes C ON S.student_id = C.student_id GROUP BY S.student_id HAVING COUNT(C.class_id) = 2;",
    "exec_result": 0
  },
  {
    "idx": 489,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT RD.detention_type_code, RD.detention_type_description, COUNT(*) as count FROM Detention D JOIN Ref_Detention_Type RD ON D.detention_type_code = RD.detention_type_code GROUP BY D.detention_type_code HAVING count = ( SELECT COUNT(*) FROM Detention GROUP BY detention_type_code ORDER BY count DESC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 490,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT d.detention_type_code, r.detention_type_description FROM Detention d JOIN Ref_Detention_Type r ON d.detention_type_code = r.detention_type_code GROUP BY d.detention_type_code ORDER BY COUNT(*) ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 491,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )",
    "pred": "SELECT S.bio_data, S.student_details, SL.amount_of_loan FROM Students S JOIN Student_Loans SL ON S.student_id = SL.student_id WHERE SL.amount_of_loan > (SELECT AVG(amount_of_loan) FROM Student_Loans)",
    "exec_result": 0
  },
  {
    "idx": 492,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )",
    "pred": "SELECT Students.bio_data, Students.student_details, Student_Loans.amount_of_loan FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan > (SELECT AVG(amount_of_loan) FROM Student_Loans)",
    "exec_result": 0
  },
  {
    "idx": 493,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 494,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1",
    "pred": "SELECT MIN(date_of_loan) as Earliest_Date_of_Loan FROM Student_Loans",
    "exec_result": 1
  },
  {
    "idx": 495,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1",
    "pred": "SELECT S.student_id, S.bio_data, S.student_details, L.amount_of_loan FROM Students S JOIN Student_Loans L ON S.student_id = L.student_id WHERE L.amount_of_loan = (SELECT MIN(amount_of_loan) FROM Student_Loans)",
    "exec_result": 0
  },
  {
    "idx": 496,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1",
    "pred": "SELECT Students.student_id, Students.bio_data, Students.student_details, Student_Loans.amount_of_loan FROM Students JOIN Student_Loans ON Students.student_id = Student_Loans.student_id WHERE Student_Loans.amount_of_loan = (SELECT MIN(amount_of_loan) FROM Student_Loans)",
    "exec_result": 0
  },
  {
    "idx": 497,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1",
    "pred": "SELECT Transcripts.date_of_transcript FROM Transcripts JOIN ( SELECT student_id, MAX(amount_of_loan) as max_loan FROM Student_Loans GROUP BY student_id ) AS MaxLoan ON Transcripts.student_id = MaxLoan.student_id WHERE MaxLoan.max_loan = Student_Loans.amount_of_loan;",
    "exec_result": 0
  },
  {
    "idx": 498,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1",
    "pred": "SELECT T1.`date_of_transcript` FROM Transcripts AS T1 JOIN (SELECT student_id, MAX(amount_of_loan) AS max_loan FROM Student_Loans GROUP BY student_id) AS T2 ON T1.`student_id` = T2.`student_id` WHERE T1.`amount_of_loan` = T2.`max_loan`",
    "exec_result": 0
  },
  {
    "idx": 499,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1",
    "pred": "SELECT T1.`teacher_details` FROM Teachers AS T1 JOIN Classes AS T2 ON T1.`teacher_id` = T2.`teacher_id` JOIN Students AS T3 ON T2.`student_id` = T3.`student_id` JOIN Transcripts AS T4 ON T3.`student_id` = T4.`student_id` WHERE T4.`date_of_transcript` = (SELECT MIN(T4.`date_of_transcript`) FROM Transcripts AS T4)",
    "exec_result": 1
  },
  {
    "idx": 500,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1",
    "pred": "SELECT T1.* FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id = T2.teacher_id JOIN Students AS T3 ON T2.student_id = T3.student_id JOIN Transcripts AS T4 ON T3.student_id = T4.student_id WHERE T4.date_of_transcript = (SELECT MIN(T4.date_of_transcript) FROM Transcripts AS T4)",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select student_id ,  sum(amount_of_loan) from student_loans group by student_id",
    "pred": "SELECT SL.student_id, COUNT(*) AS total_loan FROM Student_Loans AS SL GROUP BY SL.student_id;",
    "exec_result": 0
  },
  {
    "idx": 502,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT student_id ,  sum(amount_of_loan) FROM Student_Loans GROUP BY student_id",
    "pred": "SELECT S.student_id, SUM(T.amount_of_loan) AS total_amount_of_loan FROM Students S JOIN Student_Loans T ON S.student_id = T.student_id GROUP BY S.student_id;",
    "exec_result": 1
  },
  {
    "idx": 503,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
    "pred": "SELECT S.student_id, S.bio_data, COUNT(C.class_id) as course_count FROM Students S LEFT JOIN Classes C ON S.student_id = C.student_id GROUP BY S.student_id;",
    "exec_result": 0
  },
  {
    "idx": 504,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
    "pred": "SELECT S.`student_id`, S.`bio_data`, COUNT(SE.`event_id`) AS `number_of_courses` FROM `Students` AS S LEFT JOIN `Student_Events` AS SE ON S.`student_id` = SE.`student_id` LEFT JOIN `Classes` AS C ON S.`student_id` = C.`student_id` GROUP BY S.`student_id`",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) FROM Detention",
    "pred": "SELECT COUNT(*) FROM Detention",
    "exec_result": 1
  },
  {
    "idx": 506,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) FROM Detention",
    "pred": "SELECT COUNT(*) FROM Students JOIN Detention ON Students.student_id = Detention.student_id",
    "exec_result": 1
  },
  {
    "idx": 507,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT address_type_description FROM Ref_Address_Types WHERE address_type_code = ( SELECT address_type_code FROM ( SELECT address_type_code, COUNT(*) as count FROM Students_Addresses GROUP BY address_type_code ORDER BY count DESC LIMIT 1 ) );",
    "exec_result": 0
  },
  {
    "idx": 508,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Ref_Address_Types.address_type_code, Ref_Address_Types.address_type_description, COUNT(Students_Addresses.address_id) AS count_addresses FROM Students_Addresses INNER JOIN Ref_Address_Types ON Students_Addresses.address_type_code = Ref_Address_Types.address_type_code GROUP BY Students_Addresses.address_type_code, Ref_Address_Types.address_type_description ORDER BY count_addresses DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 509,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id",
    "pred": "SELECT S.`bio_data`, S.`student_details` FROM Students AS S WHERE S.`student_id` NOT IN ( SELECT DISTINCT T.`student_id` FROM Transcripts AS T )",
    "exec_result": 0
  },
  {
    "idx": 510,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id",
    "pred": "SELECT S.`student_id`, S.`bio_data`, S.`student_details` FROM Students S LEFT JOIN Student_Events SE ON S.`student_id` = SE.`student_id` LEFT JOIN Student_Loans SL ON S.`student_id` = SL.`student_id` WHERE SE.`event_id` IS NULL AND SL.`student_id` IS NULL",
    "exec_result": 0
  },
  {
    "idx": 511,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )",
    "pred": "SELECT S.student_id, SA.address_details, T.date_of_transcript, T2.date_of_transcript AS second_transcript_date FROM Students AS S JOIN Students_Addresses AS SA ON S.student_id = SA.student_id JOIN Transcripts AS T ON S.student_id = T.student_id JOIN Transcripts AS T2 ON S.student_id = T2.student_id WHERE T.date_of_transcript < T2.date_of_transcript GROUP BY S.student_id, SA.address_details, T.date_of_transcript, T2.date_of_transcript HAVING COUNT(*) = 2",
    "exec_result": 0
  },
  {
    "idx": 512,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )",
    "pred": "SELECT S.student_id, S.bio_data, A.address_details, T.date_of_transcript, COUNT(T.transcript_id) AS num_transcripts FROM Students S JOIN Students_Addresses SA ON S.student_id = SA.student_id JOIN Addresses A ON SA.address_id = A.address_id JOIN Transcripts T ON S.student_id = T.student_id GROUP BY S.student_id, A.address_details, T.date_of_transcript HAVING COUNT(T.transcript_id) = 2",
    "exec_result": 0
  },
  {
    "idx": 513,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start FROM Detention",
    "pred": "SELECT D.`datetime_detention_start` FROM `Detention` AS D WHERE D.`detention_type_code` = 'On break'",
    "exec_result": 0
  },
  {
    "idx": 514,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start FROM Detention",
    "pred": "SELECT `datetime_detention_start` FROM `Detention`",
    "exec_result": 1
  },
  {
    "idx": 515,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Author",
    "pred": "SELECT Name FROM Author",
    "exec_result": 1
  },
  {
    "idx": 516,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Author",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 517,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client",
    "pred": "SELECT `Name`, `Address` FROM `Client`",
    "exec_result": 1
  },
  {
    "idx": 518,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client",
    "pred": "SELECT `Name`, `Address` FROM `Client`",
    "exec_result": 1
  },
  {
    "idx": 519,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title ,  isbn ,  SalePrice FROM Book",
    "pred": "SELECT Book.Title, Book.ISBN, Book.SalePrice FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN WHERE Books_Order.amount = (SELECT MAX(amount) FROM Books_Order WHERE ISBN = Book.ISBN);",
    "exec_result": 0
  },
  {
    "idx": 520,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title ,  isbn ,  SalePrice FROM Book",
    "pred": "SELECT Book.Title, Book.ISBN, Book.SalePrice FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN WHERE Books_Order.amount = (SELECT MAX(amount) FROM Books_Order WHERE ISBN = Book.ISBN);",
    "exec_result": 0
  },
  {
    "idx": 521,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 522,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book",
    "pred": "SELECT A.Name, COUNT(B.ISBN) FROM Author A JOIN Author_Book B ON A.idAuthor = B.Author GROUP BY A.Name",
    "exec_result": 0
  },
  {
    "idx": 523,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 524,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT COUNT(DISTINCT Name) as NumberOfAuthors FROM Author;",
    "exec_result": 1
  },
  {
    "idx": 525,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Client",
    "pred": "SELECT COUNT(*) FROM Client",
    "exec_result": 1
  },
  {
    "idx": 526,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Client",
    "pred": "SELECT COUNT(DISTINCT IdClient) FROM Client;",
    "exec_result": 1
  },
  {
    "idx": 527,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client ORDER BY name",
    "pred": "SELECT `Name`, `Address` FROM `Client` ORDER BY `Name` ASC",
    "exec_result": 1
  },
  {
    "idx": 528,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client ORDER BY name",
    "pred": "SELECT Name, Address FROM Client ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 529,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn",
    "pred": "SELECT Book.Title, Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor;",
    "exec_result": 1
  },
  {
    "idx": 530,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn",
    "pred": "SELECT Book.Title, Author.Name FROM Author_Book JOIN Book ON Author_Book.ISBN = Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor GROUP BY Book.Title, Author.Name",
    "exec_result": 1
  },
  {
    "idx": 531,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient",
    "exec_result": 1
  },
  {
    "idx": 532,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT Orders.IdOrder, Client.Name FROM Orders JOIN Client ON Orders.IdClient = Client.IdClient",
    "exec_result": 1
  },
  {
    "idx": 533,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor",
    "pred": "SELECT A.`Name`, COUNT(*) FROM Author AS A JOIN Author_Book AS AB ON A.`idAuthor` = AB.`Author` GROUP BY A.`idAuthor`",
    "exec_result": 1
  },
  {
    "idx": 534,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor",
    "pred": "SELECT A.Name, COUNT(B.ISBN) as BookCount FROM Author A JOIN Author_Book AB ON A.idAuthor = AB.Author JOIN Book B ON AB.ISBN = B.ISBN GROUP BY A.Name;",
    "exec_result": 1
  },
  {
    "idx": 535,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT B.`Title`, COUNT(*) FROM Books_Order AS BO JOIN Book AS B ON BO.`ISBN` = B.`ISBN` GROUP BY BO.`ISBN`",
    "exec_result": 0
  },
  {
    "idx": 536,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT B.ISBN, COUNT(*) as Order_Count FROM Book B JOIN Books_Order BO ON B.ISBN = BO.ISBN GROUP BY B.ISBN;",
    "exec_result": 1
  },
  {
    "idx": 537,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT B.ISBN, SUM(BO.amount) as TotalAmount FROM Books_Order BO JOIN Book B ON BO.ISBN = B.ISBN GROUP BY B.ISBN;",
    "exec_result": 1
  },
  {
    "idx": 538,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT BO.ISBN, SUM(BO.amount) as TotalAmountOrdered FROM Books_Order BO JOIN Book B ON BO.ISBN = B.ISBN GROUP BY BO.ISBN;",
    "exec_result": 1
  },
  {
    "idx": 539,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT B.Title, COUNT(*) as OrderCount FROM Books_Order AS BO JOIN Book AS B ON BO.ISBN = B.ISBN GROUP BY BO.ISBN ORDER BY OrderCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 540,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT B.Title, COUNT(*) as NumberOfOrders FROM Books_Order AS BO JOIN Book AS B ON BO.ISBN = B.ISBN GROUP BY BO.ISBN ORDER BY NumberOfOrders DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 541,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1",
    "pred": "SELECT `Title`, `PurchasePrice` FROM `Book` WHERE `PurchasePrice` = (SELECT MAX(`PurchasePrice`) FROM `Book`)",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1",
    "pred": "SELECT Title, PurchasePrice FROM Book WHERE ISBN IN ( SELECT ISBN FROM Books_Order GROUP BY ISBN ORDER BY SUM(amount) DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 543,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT B.Title FROM Book AS B JOIN Books_Order AS BO ON B.ISBN = BO.ISBN WHERE BO.amount > 0",
    "exec_result": 1
  },
  {
    "idx": 544,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN JOIN Orders o ON o.IdOrder = bo.IdOrder WHERE o.DateExped < CURRENT_DATE GROUP BY b.Title",
    "exec_result": 0
  },
  {
    "idx": 545,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT Name FROM Client WHERE IdClient IN ( SELECT IdClient FROM Orders WHERE IdOrder IN ( SELECT IdOrder FROM Books_Order ) );",
    "exec_result": 0
  },
  {
    "idx": 546,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT C.Name FROM Client AS C JOIN Orders AS O ON C.IdClient = O.IdClient;",
    "exec_result": 1
  },
  {
    "idx": 547,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient",
    "pred": "SELECT T1.`Name`, COUNT(*) FROM Client AS T1 JOIN Orders AS T2 ON T1.`IdClient` = T2.`IdClient` GROUP BY T1.`IdClient`",
    "exec_result": 1
  },
  {
    "idx": 548,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient",
    "pred": "SELECT Client.Name, COUNT(Orders.IdOrder) as NumberOfOrders FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.Name;",
    "exec_result": 1
  },
  {
    "idx": 549,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Client.IdClient, Client.Name, COUNT(Orders.IdOrder) as NumberOfOrders FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.IdClient ORDER BY NumberOfOrders DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 550,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT C.Name FROM Client C JOIN Orders O ON C.IdClient = O.IdClient GROUP BY C.IdClient ORDER BY COUNT(O.IdOrder) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 551,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient",
    "pred": "SELECT C.Name, SUM(BO.amount) as TotalAmount FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder JOIN Book B ON BO.ISBN = B.ISBN GROUP BY C.Name;",
    "exec_result": 1
  },
  {
    "idx": 552,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient",
    "pred": "SELECT C.Name, SUM(BO.amount) as Total_Books_Ordered FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name;",
    "exec_result": 1
  },
  {
    "idx": 553,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1",
    "pred": "SELECT C.Name, SUM(BO.amount) as TotalAmount FROM Client C JOIN Orders O ON C.IdClient = O.IdClient JOIN Books_Order BO ON O.IdOrder = BO.IdOrder JOIN Book B ON BO.ISBN = B.ISBN GROUP BY C.Name ORDER BY TotalAmount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 554,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1",
    "pred": "SELECT C.Name FROM Client AS C JOIN Orders AS O ON C.IdClient = O.IdClient JOIN Books_Order AS BO ON O.IdOrder = BO.IdOrder GROUP BY C.Name ORDER BY SUM(BO.amount) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT Book.Title FROM Book WHERE Book.ISBN NOT IN (SELECT ISBN FROM Books_Order)",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT B.Title FROM Book B WHERE B.ISBN NOT IN ( SELECT BO.ISBN FROM Books_Order BO )",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT Client.Name FROM Client LEFT JOIN Orders ON Client.IdClient = Orders.IdClient WHERE Orders.IdOrder IS NULL",
    "exec_result": 1
  },
  {
    "idx": 558,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT C.Name FROM Client C LEFT JOIN Orders O ON C.IdClient = O.IdClient WHERE O.IdOrder IS NULL",
    "exec_result": 1
  },
  {
    "idx": 559,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice) ,  min(saleprice) FROM Book",
    "pred": "SELECT MAX(SalePrice) as Maximum_Sale_Price, MIN(SalePrice) as Minimum_Sale_Price FROM Book",
    "exec_result": 1
  },
  {
    "idx": 560,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice) ,  min(saleprice) FROM Book",
    "pred": "SELECT MAX(SalePrice) AS MaximumSalePrice, MIN(SalePrice) AS MinimumSalePrice FROM Book",
    "exec_result": 1
  },
  {
    "idx": 561,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book",
    "pred": "SELECT AVG(SalePrice) as Average_Sale_Price FROM Book",
    "exec_result": 0
  },
  {
    "idx": 562,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book",
    "pred": "SELECT AVG(PurchasePrice) AS Average_Purchase_Price, AVG(SalePrice) AS Average_Sale_Price FROM Book",
    "exec_result": 1
  },
  {
    "idx": 563,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice - purchaseprice) FROM Book",
    "pred": "SELECT MAX(SalePrice - PurchasePrice) as Maximum_Difference FROM Book",
    "exec_result": 1
  },
  {
    "idx": 564,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice - purchaseprice) FROM Book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 565,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)",
    "pred": "SELECT Book.Title FROM Book WHERE Book.SalePrice > (SELECT AVG(Book.SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 566,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)",
    "pred": "SELECT Book.Title FROM Book WHERE Book.SalePrice > (SELECT AVG(Book.SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 567,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by saleprice asc limit 1",
    "pred": "SELECT Book.Title FROM Book WHERE SalePrice = (SELECT MIN(SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 568,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by saleprice asc limit 1",
    "pred": "SELECT Book.Title FROM Book WHERE Book.SalePrice = (SELECT MIN(Book.SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 569,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by purchaseprice  desc limit 1",
    "pred": "SELECT Book.Title FROM Book WHERE PurchasePrice = (SELECT MAX(PurchasePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 570,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by purchaseprice  desc limit 1",
    "pred": "SELECT Title FROM Book WHERE PurchasePrice = (SELECT MAX(PurchasePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 571,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"",
    "pred": "SELECT AVG(SalePrice) as Average_Sale_Price FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'George Orwell';",
    "exec_result": 1
  },
  {
    "idx": 572,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"",
    "pred": "SELECT AVG(SalePrice) as Average_Sale_Price FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'George Orwell';",
    "exec_result": 1
  },
  {
    "idx": 573,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"",
    "pred": "SELECT `SalePrice` FROM `Book` WHERE `Author` IN (SELECT `idAuthor` FROM `Author` WHERE `Name` = 'Plato')",
    "exec_result": 0
  },
  {
    "idx": 574,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"",
    "pred": "SELECT `SalePrice` FROM `Book` INNER JOIN `Author_Book` ON `Book`.`ISBN` = `Author_Book`.`ISBN` INNER JOIN `Author` ON `Author_Book`.`Author` = `Author`.`idAuthor` WHERE `Author`.`Name` = 'Plato'",
    "exec_result": 1
  },
  {
    "idx": 575,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1",
    "pred": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'George Orwell' ORDER BY Book.SalePrice ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 576,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1",
    "pred": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'George Orwell' ORDER BY Book.SalePrice ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 577,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)",
    "pred": "SELECT Book.Title FROM Book WHERE Author = 1 AND SalePrice < (SELECT AVG(SalePrice) FROM Book)",
    "exec_result": 0
  },
  {
    "idx": 578,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)",
    "pred": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name = 'Plato' AND Book.SalePrice < (SELECT AVG(SalePrice) FROM Book)",
    "exec_result": 1
  },
  {
    "idx": 579,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT `Name` FROM `Author` JOIN `Author_Book` ON `Author`.`idAuthor` = `Author_Book`.`Author` JOIN `Book` ON `Author_Book`.`ISBN` = `Book`.`ISBN` WHERE `Book`.`Title` = 'Pride and Prejudice'",
    "exec_result": 1
  },
  {
    "idx": 581,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"",
    "pred": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name LIKE '%Plato%';",
    "exec_result": 1
  },
  {
    "idx": 582,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"",
    "pred": "SELECT Book.Title FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor WHERE Author.Name LIKE '%Plato%';",
    "exec_result": 1
  },
  {
    "idx": 583,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT COUNT(*) FROM Orders JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';",
    "exec_result": 1
  },
  {
    "idx": 584,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT COUNT(*) FROM Books_Order JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice'",
    "exec_result": 1
  },
  {
    "idx": 585,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"",
    "pred": "SELECT `Orders`.`IdOrder` FROM `Orders` JOIN `Books_Order` ON `Orders`.`IdOrder` = `Books_Order`.`IdOrder` WHERE `Books_Order`.`ISBN` IN ( SELECT `ISBN` FROM `Book` WHERE `Title` = 'Pride and Prejudice' ) OR `Books_Order`.`ISBN` IN ( SELECT `ISBN` FROM `Book` WHERE `Title` = 'The Little Prince' )",
    "exec_result": 0
  },
  {
    "idx": 586,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"",
    "pred": "SELECT DISTINCT Orders.IdOrder FROM Orders JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title IN ('Pride and Prejudice', 'The Little Prince') GROUP BY Orders.IdOrder HAVING COUNT(DISTINCT Book.Title) = 2;",
    "exec_result": 1
  },
  {
    "idx": 587,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT B.ISBN FROM Books_Order AS BO1 JOIN Books_Order AS BO2 ON BO1.ISBN = BO2.ISBN JOIN Book AS B ON B.ISBN = BO1.ISBN WHERE BO1.IdClient = (SELECT IdClient FROM Client WHERE Name = 'Peter Doe') AND BO2.IdClient = (SELECT IdClient FROM Client WHERE Name = 'James Smith') GROUP BY B.ISBN HAVING COUNT(DISTINCT BO1.IdOrder) > 1",
    "exec_result": 0
  },
  {
    "idx": 588,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT Books_Order.ISBN FROM Books_Order JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder JOIN Client ON Orders.IdClient = Client.IdClient WHERE Client.Name = 'Peter Doe' AND Client.Name = 'James Smith'",
    "exec_result": 0
  },
  {
    "idx": 589,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT Book.Title FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder WHERE Orders.IdClient = '0000005' AND Orders.IdClient != '0000002'",
    "exec_result": 0
  },
  {
    "idx": 590,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT Book.Title FROM Book JOIN Books_Order ON Book.ISBN = Books_Order.ISBN JOIN Orders ON Books_Order.IdOrder = Orders.IdOrder JOIN Client ON Orders.IdClient = Client.IdClient WHERE Client.Name = 'Peter Doe' AND Client.Name != 'James Smith'",
    "exec_result": 0
  },
  {
    "idx": 591,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT DISTINCT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';",
    "exec_result": 1
  },
  {
    "idx": 592,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title = 'Pride and Prejudice';",
    "exec_result": 1
  },
  {
    "idx": 593,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(*) FROM book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 594,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book ORDER BY Title ASC",
    "pred": "SELECT Title FROM book ORDER BY Title ASC;",
    "exec_result": 1
  },
  {
    "idx": 595,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book ORDER BY Pages DESC",
    "pred": "SELECT Title FROM book ORDER BY Pages DESC",
    "exec_result": 1
  },
  {
    "idx": 596,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  Release FROM book",
    "pred": "SELECT `Type`, `Release` FROM `book`",
    "exec_result": 1
  },
  {
    "idx": 597,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT max(Chapters) ,  min(Chapters) FROM book",
    "pred": "SELECT MAX(Chapters) AS Maximum_Chapters, MIN(Chapters) AS Minimum_Chapters FROM book",
    "exec_result": 1
  },
  {
    "idx": 598,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book WHERE TYPE != \"Poet\"",
    "pred": "SELECT Title FROM book WHERE Type != 'Poet'",
    "exec_result": 1
  },
  {
    "idx": 599,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT avg(Rating) FROM review",
    "pred": "SELECT AVG(Rating) AS Average_Rating FROM review",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID",
    "pred": "SELECT `Title`, `Rating` FROM `book` JOIN `review` ON `book`.`Book_ID` = `review`.`Book_ID`",
    "exec_result": 1
  },
  {
    "idx": 601,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Chapters DESC LIMIT 1",
    "pred": "SELECT `Rating` FROM `review` WHERE `Book_ID` = (SELECT `Book_ID` FROM `book` WHERE `Chapters` = (SELECT MAX(`Chapters`) FROM `book`))",
    "exec_result": 1
  },
  {
    "idx": 602,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T2.Rank FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Pages ASC LIMIT 1",
    "pred": "SELECT r.Rank FROM book b JOIN review r ON b.Book_ID = r.Book_ID WHERE b.Pages = (SELECT MIN(b2.Pages) FROM book b2)",
    "exec_result": 1
  },
  {
    "idx": 603,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rank LIMIT 1",
    "pred": "SELECT Title FROM book JOIN review ON book.Book_ID = review.Book_ID WHERE review.Rank = (SELECT MAX(Rank) FROM review)",
    "exec_result": 0
  },
  {
    "idx": 604,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT avg(T2.Readers_in_Million) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T1.Type  =  \"Novel\"",
    "pred": "SELECT AVG(r.`Readers_in_Million`) as `Average_Readers_in_Million` FROM `book` b JOIN `review` r ON b.`Book_ID` = r.`Book_ID` WHERE b.`Type` = 'Novel'",
    "exec_result": 1
  },
  {
    "idx": 605,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  COUNT(*) FROM book GROUP BY TYPE",
    "pred": "SELECT `Type`, COUNT(*) FROM `book` GROUP BY `Type`",
    "exec_result": 1
  },
  {
    "idx": 606,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Type`, COUNT(*) as `Count` FROM `book` GROUP BY `Type` ORDER BY `Count` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 607,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book GROUP BY TYPE HAVING COUNT(*)  >=  3",
    "pred": "SELECT b.Type FROM book AS b JOIN review AS r ON b.Book_ID = r.Book_ID GROUP BY b.Type HAVING COUNT(r.Review_ID) >= 3;",
    "exec_result": 1
  },
  {
    "idx": 608,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rating ASC",
    "pred": "SELECT b.Title FROM book b JOIN review r ON b.Book_ID = r.Book_ID ORDER BY r.Rating ASC",
    "exec_result": 1
  },
  {
    "idx": 609,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title ,  T1.audio FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Readers_in_Million DESC",
    "pred": "SELECT `Title`, `Audio`, `Readers_in_Million` FROM `book` JOIN `review` ON `book`.`Book_ID` = `review`.`Book_ID` ORDER BY `Readers_in_Million` DESC",
    "exec_result": 0
  },
  {
    "idx": 610,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)",
    "pred": "SELECT COUNT(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)",
    "exec_result": 1
  },
  {
    "idx": 611,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book WHERE Chapters  >  75 INTERSECT SELECT TYPE FROM book WHERE Chapters  <  50",
    "pred": "SELECT `Type` FROM book WHERE `Chapters` > 75 AND `Chapters` < 50",
    "exec_result": 0
  },
  {
    "idx": 612,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(DISTINCT TYPE) FROM book",
    "pred": "SELECT COUNT(DISTINCT Type) FROM book",
    "exec_result": 1
  },
  {
    "idx": 613,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  title FROM book EXCEPT SELECT T1.type ,  T1.title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID;",
    "pred": "SELECT Type, Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)",
    "exec_result": 1
  },
  {
    "idx": 614,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT count(*) FROM customer",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 615,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT count(*) FROM customer",
    "pred": "SELECT COUNT(*) FROM customer",
    "exec_result": 1
  },
  {
    "idx": 616,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC",
    "pred": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC",
    "exec_result": 1
  },
  {
    "idx": 617,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC",
    "pred": "SELECT `Name` FROM `customer` ORDER BY `Level_of_Membership` ASC",
    "exec_result": 1
  },
  {
    "idx": 618,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  Card_Credit FROM customer",
    "pred": "SELECT `Nationality`, `Card_Credit` FROM `customer`",
    "exec_result": 1
  },
  {
    "idx": 619,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  Card_Credit FROM customer",
    "pred": "SELECT `Nationality`, `Card_Credit` FROM `customer`",
    "exec_result": 1
  },
  {
    "idx": 620,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"",
    "pred": "SELECT `Name` FROM `customer` WHERE `Nationality` IN ('England', 'Australia')",
    "exec_result": 1
  },
  {
    "idx": 621,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"",
    "pred": "SELECT `Name` FROM `customer` WHERE `Nationality` IN ('England', 'Australia')",
    "exec_result": 1
  },
  {
    "idx": 622,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1",
    "pred": "SELECT AVG(Card_Credit) as Average_Card_Credit FROM customer WHERE Level_of_Membership > 1",
    "exec_result": 1
  },
  {
    "idx": 623,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1",
    "pred": "SELECT AVG(Card_Credit) FROM customer WHERE Level_of_Membership > 1",
    "exec_result": 1
  },
  {
    "idx": 624,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1",
    "pred": "SELECT `Card_Credit` FROM `customer` WHERE `Level_of_Membership` = (SELECT MAX(`Level_of_Membership`) FROM `customer`)",
    "exec_result": 1
  },
  {
    "idx": 625,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1",
    "pred": "SELECT `Customer_ID`, `Card_Credit` FROM `customer` WHERE `Level_of_Membership` = (SELECT MAX(`Level_of_Membership`) FROM `customer`)",
    "exec_result": 0
  },
  {
    "idx": 626,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality;",
    "exec_result": 1
  },
  {
    "idx": 627,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) as Number_of_Customers FROM customer GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 628,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) as NumberOfCustomers FROM customer GROUP BY Nationality ORDER BY NumberOfCustomers DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 629,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) as NumberOfCustomers FROM customer GROUP BY Nationality ORDER BY NumberOfCustomers DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 630,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75",
    "pred": "SELECT DISTINCT `Nationality` FROM `customer` WHERE `Card_Credit` < 50 INTERSECT SELECT DISTINCT `Nationality` FROM `customer` WHERE `Card_Credit` > 75",
    "exec_result": 1
  },
  {
    "idx": 631,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75",
    "pred": "SELECT Nationality FROM customer WHERE Card_Credit > 50 AND Card_Credit < 75 GROUP BY Nationality HAVING COUNT(DISTINCT Customer_ID) = 2;",
    "exec_result": 0
  },
  {
    "idx": 632,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 633,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID",
    "pred": "SELECT customer.Name, customer_order.Dish_Name FROM customer_order JOIN customer ON customer_order.Customer_ID = customer.Customer_ID;",
    "exec_result": 1
  },
  {
    "idx": 634,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC",
    "pred": "SELECT customer.Name, customer_order.Dish_Name, customer_order.Quantity FROM customer_order JOIN customer ON customer_order.Customer_ID = customer.Customer_ID ORDER BY customer_order.Quantity DESC",
    "exec_result": 0
  },
  {
    "idx": 635,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC",
    "pred": "SELECT customer.Name, customer_order.Dish_Name, SUM(customer_order.Quantity) AS Total_Quantity FROM customer_order JOIN customer ON customer_order.Customer_ID = customer.Customer_ID GROUP BY customer_order.Dish_Name ORDER BY Total_Quantity DESC",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name",
    "pred": "SELECT `Name`, SUM(`Quantity`) as `Total_Quantity` FROM `customer_order` JOIN `customer` ON `customer_order`.`Customer_ID` = `customer`.`Customer_ID` GROUP BY `customer`.`Customer_ID`",
    "exec_result": 1
  },
  {
    "idx": 637,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "select t1.name ,  sum(t2.quantity) from customer as t1 join customer_order as t2 on t1.customer_id  =  t2.customer_id group by t1.name",
    "pred": "SELECT `customer`.`Name`, SUM(`customer_order`.`Quantity`) as `Total_Quantity` FROM `customer_order` JOIN `customer` ON `customer_order`.`Customer_ID` = `customer`.`Customer_ID` GROUP BY `customer`.`Name`",
    "exec_result": 1
  },
  {
    "idx": 638,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1",
    "pred": "SELECT c.`Customer_ID`, c.`Name`, SUM(co.`Quantity`) as `Total_Quantity` FROM `customer` c JOIN `customer_order` co ON c.`Customer_ID` = co.`Customer_ID` GROUP BY c.`Customer_ID`, c.`Name` HAVING `Total_Quantity` > 1",
    "exec_result": 0
  },
  {
    "idx": 639,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1",
    "pred": "SELECT customer.Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID GROUP BY customer.Customer_ID HAVING SUM(customer_order.Quantity) > 1",
    "exec_result": 1
  },
  {
    "idx": 640,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT DISTINCT Manager FROM branch",
    "pred": "SELECT DISTINCT Manager FROM branch",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT DISTINCT Manager FROM branch",
    "pred": "SELECT DISTINCT Manager FROM branch",
    "exec_result": 1
  },
  {
    "idx": 642,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)",
    "pred": "SELECT customer.Name FROM customer LEFT JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID WHERE customer_order.Customer_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 643,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)",
    "pred": "SELECT `Name` FROM `customer` WHERE `Customer_ID` NOT IN (SELECT DISTINCT `Customer_ID` FROM `customer_order`)",
    "exec_result": 1
  },
  {
    "idx": 644,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT count(*) FROM member",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 645,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member ORDER BY Age ASC",
    "pred": "SELECT Name FROM member ORDER BY Age ASC",
    "exec_result": 1
  },
  {
    "idx": 646,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name ,  Nationality FROM member",
    "pred": "SELECT `Name`, `Nationality` FROM member WHERE `Age` = (SELECT MIN(Age) FROM member)",
    "exec_result": 0
  },
  {
    "idx": 647,
    "db_id": "club_leader",
    "question": "",
    "gold": "select name from member where nationality != \"england\"",
    "pred": "SELECT `Name` FROM member WHERE `Nationality` <> 'England'",
    "exec_result": 0
  },
  {
    "idx": 648,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member WHERE Age  =  19 OR Age  =  20",
    "pred": "SELECT `Name` FROM member WHERE Age IN (19, 20)",
    "exec_result": 1
  },
  {
    "idx": 649,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member ORDER BY Age DESC LIMIT 1",
    "pred": "SELECT Name FROM member WHERE Age = (SELECT MAX(Age) FROM member)",
    "exec_result": 1
  },
  {
    "idx": 650,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) FROM member GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) as Count FROM member GROUP BY Nationality ORDER BY Count DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 652,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(Nationality) >= 2",
    "exec_result": 1
  },
  {
    "idx": 653,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID",
    "pred": "SELECT `Name`, `Club_Name` FROM club_leader JOIN club ON club_leader.`Club_ID` = club.`Club_ID` JOIN member ON club_leader.`Member_ID` = member.`Member_ID` WHERE `Year_Join` = (SELECT MIN(`Year_Join`) FROM club_leader)",
    "exec_result": 0
  },
  {
    "idx": 654,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Overall_Ranking  <  100",
    "pred": "SELECT m.Name FROM club c JOIN club_leader cl ON c.Club_ID = cl.Club_ID JOIN member m ON cl.Member_ID = m.Member_ID WHERE c.Overall_Ranking > 100",
    "exec_result": 0
  },
  {
    "idx": 655,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T1.Year_Join  <  2018",
    "pred": "SELECT `Member_ID`, `Name` FROM `member` WHERE `Member_ID` IN (SELECT `Member_ID` FROM `club_leader` WHERE `Year_Join` < '2018');",
    "exec_result": 0
  },
  {
    "idx": 656,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Club_Name  =  \"Houston\"",
    "pred": "SELECT `Team_Leader` FROM club WHERE Club_Name = 'Houston'",
    "exec_result": 0
  },
  {
    "idx": 657,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader)",
    "pred": "SELECT `Name` FROM member WHERE `Member_ID` NOT IN (SELECT `Member_ID` FROM club_leader)",
    "exec_result": 1
  },
  {
    "idx": 658,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality FROM member WHERE Age  >  22 INTERSECT SELECT Nationality FROM member WHERE Age  <  19",
    "pred": "SELECT DISTINCT T1.`Nationality` FROM member AS T1 JOIN club_leader AS T2 ON T1.`Member_ID` = T2.`Member_ID` WHERE T1.`Age` > 22 AND T1.`Age` < 20;",
    "exec_result": 0
  },
  {
    "idx": 659,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM club_leader AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id",
    "pred": "SELECT AVG(T1.`Age`) FROM member AS T1 JOIN club_leader AS T2 ON T1.`Member_ID` = T2.`Member_ID` JOIN club AS T3 ON T2.`Club_ID` = T3.`Club_ID`",
    "exec_result": 1
  },
  {
    "idx": 660,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT club_name FROM club WHERE club_name LIKE '%state%'",
    "pred": "SELECT Club_Name FROM club WHERE Club_Name LIKE '%state%'",
    "exec_result": 1
  },
  {
    "idx": 661,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Subset_Name FROM Collection_Subsets;",
    "pred": "SELECT Collection_Subset_ID, COUNT(*) as Document_Count FROM Collection_Subset_Members GROUP BY Collection_Subset_ID;",
    "exec_result": 0
  },
  {
    "idx": 662,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Subset_Name FROM Collection_Subsets;",
    "pred": "SELECT DISTINCT CS.`Collection_Subset_Name` FROM Collection_Subsets AS CS JOIN Collection_Subset_Members AS CSM ON CS.`Collection_Subset_ID` = CSM.`Collection_Subset_ID`",
    "exec_result": 0
  },
  {
    "idx": 663,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";",
    "pred": "SELECT Collection_Subsets.Document_Subset_Details FROM Collection_Subsets JOIN Document_Subsets ON Collection_Subsets.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Collection_Subsets.Collection_Subset_Name = 'Top collection';",
    "exec_result": 0
  },
  {
    "idx": 664,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";",
    "pred": "SELECT Collections.Collection_Name, Collections.Collection_Description FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Subset_Members ON Document_Subset_Members.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Subsets.Document_Subset_Name = 'Top collection';",
    "exec_result": 0
  },
  {
    "idx": 665,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Name FROM Document_Subsets;",
    "pred": "SELECT Document_Subsets.Document_Subset_Name FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID;",
    "exec_result": 0
  },
  {
    "idx": 666,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Name FROM Document_Subsets;",
    "pred": "SELECT Document_Subset_Name FROM Document_Subsets",
    "exec_result": 1
  },
  {
    "idx": 667,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000'",
    "exec_result": 1
  },
  {
    "idx": 668,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name LIKE '%Best for 2000%'",
    "exec_result": 1
  },
  {
    "idx": 669,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects;",
    "pred": "SELECT Document_Object_ID FROM Document_Objects;",
    "exec_result": 1
  },
  {
    "idx": 670,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects;",
    "pred": "SELECT Document_Objects.Document_Object_ID, Document_Subsets.Document_Subset_Name FROM Document_Subset_Members JOIN Document_Objects ON Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID",
    "exec_result": 0
  },
  {
    "idx": 671,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'",
    "pred": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin'",
    "exec_result": 1
  },
  {
    "idx": 672,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'",
    "pred": "SELECT `Document_Object_ID` FROM `Document_Objects` WHERE `Owner` = 'Marlin'",
    "exec_result": 0
  },
  {
    "idx": 673,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 674,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 675,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 676,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'",
    "pred": "SELECT D.Owner FROM Document_Objects D JOIN Documents_in_Collections DC ON D.Document_Object_ID = DC.Document_Object_ID WHERE D.Owner = 'Marlin'",
    "exec_result": 0
  },
  {
    "idx": 677,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID",
    "pred": "SELECT D.`Description` FROM Document_Objects AS D JOIN Document_Subset_Members AS DS ON D.`Document_Object_ID` = DS.`Document_Object_ID` JOIN Document_Subsets AS DS2 ON DS.`Document_Subset_ID` = DS2.`Document_Subset_ID` WHERE DS2.`Document_Subset_Name` = 'Best for 2007'",
    "exec_result": 0
  },
  {
    "idx": 678,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID",
    "pred": "SELECT D.`Description` FROM Document_Objects AS D JOIN Collections AS C ON D.`Parent_Document_Object_ID` = C.`Collection_ID`",
    "exec_result": 0
  },
  {
    "idx": 679,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";",
    "pred": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin'",
    "exec_result": 1
  },
  {
    "idx": 680,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 681,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Objects D WHERE D.`Parent_Document_Object_ID` NOT IN ( SELECT D2.`Parent_Document_Object_ID` FROM Document_Objects D2 WHERE D2.`Document_Object_ID` <> D.`Document_Object_ID` ) GROUP BY D.`Document_Object_ID` HAVING COUNT(*) = 1",
    "exec_result": 0
  },
  {
    "idx": 682,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Document_Object_ID NOT IN ( SELECT Parent_Document_Object_ID FROM Document_Objects )",
    "exec_result": 1
  },
  {
    "idx": 683,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;",
    "pred": "SELECT Document_Objects.Document_Object_ID, COUNT(*) as Child_Documents FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID",
    "exec_result": 0
  },
  {
    "idx": 684,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;",
    "pred": "SELECT Document_Objects.Parent_Document_Object_ID, COUNT(*) as Child_Documents_Count FROM Document_Objects LEFT JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Parent_Document_Object_ID",
    "exec_result": 0
  },
  {
    "idx": 685,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections;",
    "pred": "SELECT Collection_Name FROM Collections",
    "exec_result": 1
  },
  {
    "idx": 686,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections;",
    "pred": "SELECT D.`Document_Subset_Name` FROM Document_Objects AS D JOIN Document_Subset_Members AS SM ON D.`Document_Object_ID` = SM.`Related_Document_Object_ID` JOIN Document_Subsets AS S ON SM.`Document_Subset_ID` = S.`Document_Subset_ID`",
    "exec_result": 0
  },
  {
    "idx": 687,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";",
    "pred": "SELECT Collections.Collection_Name, Collections.Collection_Description FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Collection_Subset_Members ON Collections.Collection_ID = Collection_Subset_Members.Collection_ID WHERE Collection_Subset_Members.Document_Subset_ID = ( SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2005' );",
    "exec_result": 0
  },
  {
    "idx": 688,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";",
    "pred": "SELECT Collections.Collection_Description FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Description = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 689,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 690,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";",
    "pred": "SELECT Collections.Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collections.Collection_Name = 'Nice';",
    "exec_result": 0
  },
  {
    "idx": 691,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;",
    "pred": "SELECT Collection_Name FROM Collections WHERE Collection_ID NOT IN (SELECT Parent_Collection_ID FROM Collections WHERE Parent_Collection_ID IS NOT NULL)",
    "exec_result": 1
  },
  {
    "idx": 692,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;",
    "pred": "SELECT Collections.Collection_Name FROM Collections WHERE Collections.Collection_ID NOT IN ( SELECT Collections.Collection_ID FROM Collections JOIN Collections AS C ON Collections.Parent_Collection_ID = C.Collection_ID )",
    "exec_result": 0
  },
  {
    "idx": 693,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Objects AS D JOIN ( SELECT DIC.`Document_Object_ID` FROM Documents_in_Collections AS DIC GROUP BY DIC.`Document_Object_ID` HAVING COUNT(*) > 1 ) AS C ON D.`Document_Object_ID` = C.`Document_Object_ID`",
    "exec_result": 0
  },
  {
    "idx": 694,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;",
    "pred": "SELECT D1.`Document_Object_ID` FROM Documents_in_Collections AS D1 JOIN Document_Objects AS D2 ON D1.`Document_Object_ID` = D2.`Document_Object_ID` GROUP BY D1.`Document_Object_ID` HAVING COUNT(DISTINCT D2.`Document_Object_ID`) > 1",
    "exec_result": 0
  },
  {
    "idx": 695,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best');",
    "exec_result": 0
  },
  {
    "idx": 696,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 697,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Objects AS D JOIN Documents_in_Collections AS DC ON D.`Document_Object_ID` = DC.`Document_Object_ID` WHERE D.`Owner` = 'Ransom'",
    "exec_result": 0
  },
  {
    "idx": 698,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'",
    "pred": "SELECT Document_Objects.Document_Object_ID FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Document_Objects.Owner = 'Ransom';",
    "exec_result": 0
  },
  {
    "idx": 699,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;",
    "pred": "SELECT DSM.Document_Subset_ID, DSM.Document_Subset_ID AS Document_Subset_Name, COUNT(DISTINCT DC.Collection_ID) AS Number_of_Collections FROM Document_Subset_Members AS DSM JOIN Documents_in_Collections AS DC ON DSM.Document_Object_ID = DC.Document_Object_ID GROUP BY DSM.Document_Subset_ID, DSM.Document_Subset_ID;",
    "exec_result": 0
  },
  {
    "idx": 700,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;",
    "pred": "SELECT DSM.`Document_Subset_ID`, DSM.`Document_Subset_Name`, COUNT(DOC.`Document_Object_ID`) AS `Number_of_Collections` FROM Document_Subset_Members AS DSMM JOIN Document_Subsets AS DSM ON DSMM.`Document_Subset_ID` = DSM.`Document_Subset_ID` JOIN Documents_in_Collections AS DOC ON DSMM.`Document_Object_ID` = DOC.`Document_Object_ID` GROUP BY DSM.`Document_Subset_ID`;",
    "exec_result": 0
  },
  {
    "idx": 701,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT D.`Document_Object_ID`, COUNT(*) as `Number_of_Children` FROM Document_Objects D JOIN Documents_in_Collections DC ON D.`Document_Object_ID` = DC.`Document_Object_ID` GROUP BY D.`Document_Object_ID` ORDER BY `Number_of_Children` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 702,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT `Document_Objects`.`Document_Object_ID`, COUNT(*) as `Number_of_Children` FROM `Documents_in_Collections` JOIN `Document_Objects` ON `Documents_in_Collections`.`Document_Object_ID` = `Document_Objects`.`Document_Object_ID` GROUP BY `Document_Objects`.`Document_Object_ID`;",
    "exec_result": 0
  },
  {
    "idx": 703,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT Document_Objects.Document_Object_ID, COUNT(*) as Related_Documents_Count FROM Document_Objects JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID ORDER BY Related_Documents_Count LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 704,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select document_object_id , count(*) from document_subset_members group by document_object_id order by count(*) asc limit 1;",
    "pred": "SELECT Document_Objects.Document_Object_ID FROM Documents_in_Collections JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID, Document_Objects.Parent_Document_Object_ID, Document_Objects.Owner, Document_Objects.Description, Document_Objects.Other_Details HAVING COUNT(*) = ( SELECT COUNT(*) FROM Document_Subset_Members WHERE Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID ORDER BY COUNT(*) ASC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 705,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select document_object_id , count(*) from document_subset_members group by document_object_id having count(*) between 2 and 4;",
    "pred": "SELECT Document_Objects.Document_Object_ID, COUNT(Documents_in_Collections.Document_Object_ID) as Number_of_Related_Documents FROM Document_Objects LEFT JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID HAVING COUNT(Documents_in_Collections.Document_Object_ID) BETWEEN 2 AND 4",
    "exec_result": 0
  },
  {
    "idx": 706,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING count(*) BETWEEN 2 AND 4;",
    "pred": "SELECT D.`Document_Object_ID`, COUNT(*) as `Number_of_Related_Documents` FROM Document_Objects D JOIN Documents_in_Collections DC ON D.`Document_Object_ID` = DC.`Document_Object_ID` JOIN Document_Objects RD ON DC.`Document_Object_ID` = RD.`Parent_Document_Object_ID` WHERE D.`Document_Object_ID` IN ( SELECT DSM.`Related_Document_Object_ID` FROM Document_Subset_Members DSM JOIN Document_Subsets DS ON DSM.`Document_Subset_ID` = DS.`Document_Subset_ID` GROUP BY DSM.`Related_Document_Object_ID` HAVING COUNT(*) BETWEEN 2 AND 4 ) GROUP BY D.`Document_Object_ID`",
    "exec_result": 0
  },
  {
    "idx": 707,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';",
    "pred": "SELECT D.Owner FROM Document_Objects AS D JOIN Documents_in_Collections AS DC ON D.Document_Object_ID = DC.Document_Object_ID JOIN Collections AS C ON DC.Collection_ID = C.Collection_ID WHERE D.Owner = 'Braeden'",
    "exec_result": 1
  },
  {
    "idx": 708,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';",
    "pred": "SELECT DISTINCT Document_Objects.Owner FROM Documents_in_Collections JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID JOIN Document_Subset_Members ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID WHERE Document_Objects.Owner = 'Braeden' AND Document_Objects.Parent_Document_Object_ID IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 709,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'",
    "pred": "SELECT Document_Subset_Name FROM Document_Subset_Members JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID JOIN Collections ON Collections.Collection_ID = Document_Subset_Members.Collection_ID WHERE Document_Objects.Owner = 'Braeden'",
    "exec_result": 0
  },
  {
    "idx": 710,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'",
    "pred": "SELECT DISTINCT DS.`Document_Subset_Name` FROM `Document_Subset_Members` AS DSM JOIN `Document_Subsets` AS DS ON DSM.`Document_Subset_ID` = DS.`Document_Subset_ID` JOIN `Collections` AS C ON DSM.`Collection_ID` = C.`Collection_ID` AND C.`Owner` = 'Braeden'",
    "exec_result": 0
  },
  {
    "idx": 711,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;",
    "pred": "SELECT Document_Subset_ID_old, Document_Subset_Name, COUNT(*) as NumberOfDocuments FROM Document_Subset_Members JOIN Document_Objects ON Document_Objects.Document_Object_ID = Document_Subset_Members.Related_Document_Object_ID JOIN Document_Subsets ON Document_Subsets.Document_Subset_ID = Document_Subset_Members.Document_Subset_ID_old GROUP BY Document_Subset_ID_old, Document_Subset_Name;",
    "exec_result": 0
  },
  {
    "idx": 712,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;",
    "pred": "SELECT DSM.`Document_Subset_ID`, DSM.`Document_Subset_Name`, COUNT(DISTINCT DO.`Document_Object_ID`) AS `Number_of_Documents` FROM Document_Subset_Members AS DSMM JOIN Document_Subsets AS DSM ON DSMM.`Document_Subset_ID` = DSM.`Document_Subset_ID` JOIN Document_Objects AS DO ON DSMM.`Related_Document_Object_ID` = DO.`Document_Object_ID` GROUP BY DSM.`Document_Subset_ID`, DSM.`Document_Subset_Name`",
    "exec_result": 1
  },
  {
    "idx": 713,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;",
    "pred": "SELECT Document_Subset_ID_old, Document_Subset_Name, COUNT(DISTINCT Document_Object_ID) as Number_of_Documents FROM Document_Subset_Members JOIN Document_Objects ON Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID GROUP BY Document_Subset_ID_old, Document_Subset_Name ORDER BY Number_of_Documents DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;",
    "pred": "SELECT DSM.`Document_Subset_ID`, DSN.`Document_Subset_Name`, COUNT(DO.`Document_Object_ID`) AS `Number_of_Documents` FROM `Document_Subset_Members` AS DSM JOIN `Document_Objects` AS DO ON DSM.`Document_Object_ID` = DO.`Document_Object_ID` JOIN `Document_Subsets` AS DSN ON DSM.`Document_Subset_ID` = DSN.`Document_Subset_ID` GROUP BY DSM.`Document_Subset_ID` ORDER BY COUNT(DO.`Document_Object_ID`) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 715,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Subset_Members AS MSM JOIN Document_Subsets AS DS ON MSM.`Document_Subset_ID` = DS.`Document_Subset_ID` JOIN Document_Objects AS D ON MSM.`Related_Document_Object_ID` = D.`Document_Object_ID` WHERE DS.`Document_Subset_Name` = 'Best for 2000';",
    "exec_result": 0
  },
  {
    "idx": 716,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Subset_Members AS MS JOIN Document_Subsets AS DS ON MS.`Document_Subset_ID` = DS.`Document_Subset_ID` JOIN Document_Objects AS D ON MS.`Related_Document_Object_ID` = D.`Document_Object_ID` WHERE DS.`Document_Subset_Name` = 'Best for 2000'",
    "exec_result": 0
  },
  {
    "idx": 717,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T3.Document_Subset_Name ,  T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subset_Members  AS T2 ON T1.Related_Document_Object_ID = T2.Document_Object_ID JOIN Document_Subsets AS T3 ON T2.Document_Subset_ID =  T3.Document_Subset_ID",
    "pred": "SELECT Document_Subsets.Document_Subset_Name, Document_Objects.Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID",
    "exec_result": 0
  },
  {
    "idx": 718,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select distinct t3.document_subset_name ,  t1.document_object_id from document_subset_members as t1 join document_subset_members  as t2 on t1.related_document_object_id = t2.document_object_id join document_subsets as t3 on t2.document_subset_id =  t3.document_subset_id",
    "pred": "SELECT DSM.Document_Subset_ID, DSM.Document_Subset_Name, D.Document_Object_ID FROM Document_Subsets AS DSM JOIN Document_Objects AS D ON DSM.Document_Object_ID = D.Parent_Document_Object_ID GROUP BY DSM.Document_Subset_ID",
    "exec_result": 0
  },
  {
    "idx": 719,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.collection_name from collections as t1 join documents_in_collections as t2 on t1.collection_id = t2.collection_id join document_objects as t3 on t2.document_object_id  =  t3.document_object_id where t3.owner  =  'ransom'",
    "pred": "SELECT Collections.Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Owner = 'Ransom'",
    "exec_result": 0
  },
  {
    "idx": 720,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Document_Objects AS T3 ON T2.Document_object_id  =  T3.Document_object_id WHERE T3.owner  =  'Ransom'",
    "pred": "SELECT Collections.Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Owner = 'Ransom';",
    "exec_result": 1
  },
  {
    "idx": 721,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID",
    "pred": "SELECT Document_Objects.Document_Object_ID, COUNT(*) as Number_of_Collections FROM Documents_in_Collections JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID GROUP BY Document_Objects.Document_Object_ID;",
    "exec_result": 1
  },
  {
    "idx": 722,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID",
    "pred": "SELECT D.`Document_Object_ID`, COUNT(*) as `Number_of_Collections` FROM Documents_in_Collections AS D JOIN Collections AS C ON D.`Collection_ID` = C.`Collection_ID` GROUP BY D.`Document_Object_ID`",
    "exec_result": 1
  },
  {
    "idx": 723,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Documents_in_Collections AS di JOIN Collections AS c ON di.Collection_ID = c.Collection_ID JOIN Collection_Subset_Members AS csm ON c.Collection_ID = csm.Collection_ID WHERE c.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 724,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Documents_in_Collections JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'",
    "exec_result": 1
  },
  {
    "idx": 725,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT Document_Objects.Document_Object_ID FROM Documents_in_Collections INNER JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 726,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Document_Objects.Document_Object_ID) FROM Documents_in_Collections JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 727,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT C.`Collection_Name`, C.`Collection_ID`, COUNT(DISTINCT D.`Document_Object_ID`) as `Number_of_Documents` FROM Collections as C JOIN Documents_in_Collections as D ON C.`Collection_ID` = D.`Collection_ID` GROUP BY C.`Collection_ID` ORDER BY `Number_of_Documents` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 728,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Collection_Name, Collection_ID, COUNT(*) as Number_of_Documents FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collections.Collection_Name = 'Best' GROUP BY Collection_ID ORDER BY Number_of_Documents DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 729,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Subsets AS DS JOIN Document_Subset_Members AS DSM ON DS.`Document_Subset_ID` = DSM.`Document_Subset_ID` JOIN Document_Objects AS D ON DSM.`Related_Document_Object_ID` = D.`Document_Object_ID` JOIN Documents_in_Collections AS DC ON D.`Document_Object_ID` = DC.`Document_Object_ID` JOIN Collections AS C ON DC.`Collection_ID` = C.`Collection_ID` WHERE DS.`Document_Subset_Name` = 'Best for 2000' AND C.`Collection_Name` = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 730,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";",
    "pred": "SELECT Document_Object_ID FROM ( SELECT Document_Objects.Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Subsets.Document_Subset_Name = 'Best for 2000' ) INTERSECT SELECT Document_Object_ID FROM ( SELECT Document_Objects.Document_Object_ID FROM Collection_Subset_Members JOIN Collection_Subsets ON Collection_Subset_Members.Collection_Subset_ID = Collection_Subsets.Collection_Subset_ID JOIN Document_Objects ON Collection_Subset_Members.Related_Document_Object_ID = Document_Objects.Document_Object_ID WHERE Collection_Subsets.Collection_Subset_Name = 'Best' );",
    "exec_result": 0
  },
  {
    "idx": 731,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Objects AS D JOIN Documents_in_Collections AS DC ON D.`Document_Object_ID` = DC.`Document_Object_ID` JOIN Collections AS C ON DC.`Collection_ID` = C.`Collection_ID` WHERE C.`Collection_Name` = 'Best' AND NOT EXISTS ( SELECT 1 FROM Document_Subset_Members AS DS JOIN Document_Subsets AS DS2 ON DS.`Document_Subset_ID` = DS2.`Document_Subset_ID` WHERE DS2.`Document_Subset_Name` = 'Best for 2000' AND DS.`Document_Object_ID` = D.`Document_Object_ID` )",
    "exec_result": 1
  },
  {
    "idx": 732,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Objects AS D WHERE D.`Owner` = 'Braeden' AND D.`Description` = 'Braeden Collection' AND D.`Document_Object_ID` NOT IN ( SELECT DS.`Document_Subset_ID` FROM Document_Subsets AS DS WHERE DS.`Document_Subset_Name` = 'Best for 2000' )",
    "exec_result": 0
  },
  {
    "idx": 733,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";",
    "pred": "SELECT D.`Document_Object_ID` FROM Document_Subsets AS DS JOIN Document_Subset_Members AS DSM ON DS.`Document_Subset_ID` = DSM.`Document_Subset_ID` JOIN Document_Objects AS D ON DSM.`Document_Object_ID` = D.`Document_Object_ID` JOIN Collections AS C ON DSM.`Collection_ID` = C.`Collection_ID` WHERE DS.`Document_Subset_Name` = 'Best for 2000' OR C.`Collection_Name` = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 734,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";",
    "pred": "SELECT DISTINCT D.`Document_Object_ID` FROM Document_Subset_Members AS MS JOIN Document_Subsets AS DS ON MS.`Document_Subset_ID` = DS.`Document_Subset_ID` JOIN Document_Objects AS D ON MS.`Document_Object_ID` = D.`Document_Object_ID` WHERE DS.`Document_Subset_Name` = 'Best for 2000' OR D.`Collection_Name` = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 735,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT C.`Collection_Name` FROM Collections AS C JOIN Documents_in_Collections AS D ON C.`Collection_ID` = D.`Collection_ID` WHERE D.`Document_Object_ID` IN ( SELECT D.`Document_Object_ID` FROM Document_Objects AS D WHERE D.`Description` = 'Best' )",
    "exec_result": 0
  },
  {
    "idx": 736,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT Collections.Collection_Name FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID JOIN Document_Objects ON Documents_in_Collections.Document_Object_ID = Document_Objects.Document_Object_ID WHERE Document_Objects.Description = 'Best';",
    "exec_result": 0
  },
  {
    "idx": 737,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 738,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT Collections.Collection_ID) FROM Collections JOIN Documents_in_Collections ON Collections.Collection_ID = Documents_in_Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 739,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT Collection_Subset_Name FROM Collection_Subset_Members JOIN Collections ON Collection_Subset_Members.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best';",
    "exec_result": 0
  },
  {
    "idx": 740,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT Collection_Subset_Name FROM Collection_Subset_Members JOIN Collections ON Collection_Subset_Members.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 741,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM songs WHERE name LIKE \"%Love%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 742,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name FROM songs ORDER BY name",
    "pred": "SELECT `name` FROM `songs` ORDER BY `name` ASC",
    "exec_result": 1
  },
  {
    "idx": 743,
    "db_id": "sing_contest",
    "question": "",
    "gold": "select name , language from songs",
    "pred": "SELECT `name`, `language` FROM songs",
    "exec_result": 1
  },
  {
    "idx": 744,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT max(voice_sound_quality) ,  min(voice_sound_quality) FROM performance_score",
    "pred": "SELECT MAX(voice_sound_quality) AS Maximum_Voice_Sound_Quality, MIN(voice_sound_quality) AS Minimum_Voice_Sound_Quality FROM performance_score;",
    "exec_result": 1
  },
  {
    "idx": 745,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.voice_sound_quality ,  T1.rhythm_tempo ,  T1.stage_presence FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id  =  T2.id WHERE T2.name  =  'Freeway'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 746,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT id ,  LANGUAGE ,  original_artist FROM songs WHERE name != 'Love'",
    "pred": "SELECT id, language, original_artist FROM songs WHERE name != 'Love'",
    "exec_result": 1
  },
  {
    "idx": 747,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name ,  original_artist FROM songs WHERE english_translation  =  'All the streets of love'",
    "pred": "SELECT `name`, `original_artist` FROM songs WHERE `english_translation` = 'All the streets of love';",
    "exec_result": 1
  },
  {
    "idx": 748,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT DISTINCT T2.stage_presence FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id WHERE T1.language  =  'English'",
    "pred": "SELECT DISTINCT `stage_presence` FROM `performance_score` INNER JOIN `songs` ON `performance_score`.`songs_id` = `songs`.`id` WHERE `songs`.`language` = 'English'",
    "exec_result": 1
  },
  {
    "idx": 749,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.Name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
    "pred": "SELECT participants.id, participants.name FROM participants JOIN ( SELECT participant_id FROM performance_score GROUP BY participant_id HAVING COUNT(songs_id) >= 2 ) AS performances ON participants.id = performances.participant_id",
    "exec_result": 1
  },
  {
    "idx": 750,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.Name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id ORDER BY count(*)",
    "pred": "SELECT participants.id, participants.name, participants.popularity FROM participants JOIN (SELECT performance_score.participant_id, COUNT(*) as song_count FROM performance_score GROUP BY performance_score.participant_id) as song_counts ON participants.id = song_counts.participant_id ORDER BY song_counts.song_count DESC;",
    "exec_result": 0
  },
  {
    "idx": 751,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id WHERE T2.voice_sound_quality  =  5 OR T2.rhythm_tempo  =  5",
    "pred": "SELECT id, name FROM participants WHERE id IN ( SELECT participant_id FROM performance_score WHERE voice_sound_quality = 5 OR rhythm_tempo = 5 )",
    "exec_result": 1
  },
  {
    "idx": 752,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.voice_sound_quality FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id  =  T2.id WHERE T2.name  =  ' The Balkan Girls ' AND T2.language  =  'English'",
    "pred": "SELECT `voice_sound_quality` FROM `performance_score` INNER JOIN `songs` ON `performance_score`.`songs_id` = `songs`.`id` WHERE `songs`.`name` = 'The Balkan Girls' AND `songs`.`language` = 'English';",
    "exec_result": 0
  },
  {
    "idx": 753,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT songs.id, songs.name FROM songs JOIN performance_score ON songs.id = performance_score.songs_id GROUP BY songs.id ORDER BY COUNT(performance_score.participant_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 754,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM performance_score WHERE stage_presence  <  7 OR stage_presence  >  9",
    "pred": "SELECT COUNT(*) FROM performance_score WHERE stage_presence < 7 OR stage_presence > 9",
    "exec_result": 1
  },
  {
    "idx": 755,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM songs WHERE id NOT IN ( SELECT songs_id FROM performance_score );",
    "pred": "SELECT COUNT(*) FROM songs s LEFT JOIN performance_score ps ON s.id = ps.songs_id WHERE ps.songs_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 756,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT avg(T2.rhythm_tempo) ,  T1.language FROM songs AS T1 JOIN performance_score AS T2 ON T2.songs_id  =  T1.id GROUP BY T1.language",
    "pred": "SELECT language, AVG(rhythm_tempo) as average_rhythm_score FROM songs JOIN performance_score ON songs.id = performance_score.songs_id GROUP BY language",
    "exec_result": 1
  },
  {
    "idx": 757,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'",
    "pred": "SELECT DISTINCT name FROM participants WHERE id IN ( SELECT participant_id FROM performance_score WHERE songs_id IN ( SELECT id FROM songs WHERE language = 'English' ) );",
    "exec_result": 0
  },
  {
    "idx": 758,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'Croatian' INTERSECT SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'",
    "pred": "SELECT `name`, `popularity` FROM `participants` WHERE `id` IN ( SELECT `participant_id` FROM `performance_score` WHERE `songs_id` IN ( SELECT `id` FROM `songs` WHERE `language` = 'Croatian' ) ) AND `id` IN ( SELECT `participant_id` FROM `performance_score` WHERE `songs_id` IN ( SELECT `id` FROM `songs` WHERE `language` = 'English' ) )",
    "exec_result": 1
  },
  {
    "idx": 759,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name FROM songs WHERE name LIKE \"%Is%\"",
    "pred": "SELECT `name` FROM `songs` WHERE `name` LIKE '%Is%'",
    "exec_result": 1
  },
  {
    "idx": 760,
    "db_id": "sing_contest",
    "question": "",
    "gold": "select t2.original_artist from performance_score as t1 join songs as t2 on t2.id  =  t1.songs_id where t1.rhythm_tempo  >  5 order by t1.voice_sound_quality desc",
    "pred": "SELECT `original_artist`, AVG(`voice_sound_quality`) as `avg_voice_sound_quality` FROM `songs` JOIN `performance_score` ON `songs`.`id` = `performance_score`.`songs_id` WHERE `songs`.`rhythm_tempo` > 5 GROUP BY `original_artist` ORDER BY `avg_voice_sound_quality` DESC",
    "exec_result": 0
  },
  {
    "idx": 761,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City",
    "pred": "SELECT COUNT(*) FROM City",
    "exec_result": 1
  },
  {
    "idx": 762,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City",
    "pred": "SELECT S.Song_Name, S.Song_release_year FROM my_database.Singer AS S WHERE S.Age = (SELECT MIN(S.Age) FROM my_database.Singer AS S)",
    "exec_result": 0
  },
  {
    "idx": 763,
    "db_id": "address_1",
    "question": "",
    "gold": "select distinct state from city",
    "pred": "SELECT DISTINCT state FROM City",
    "exec_result": 1
  },
  {
    "idx": 764,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT DISTINCT state FROM City",
    "pred": "SELECT DISTINCT state FROM City;",
    "exec_result": 1
  },
  {
    "idx": 765,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country) FROM City",
    "pred": "SELECT COUNT(DISTINCT country) FROM City;",
    "exec_result": 1
  },
  {
    "idx": 766,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country) FROM City",
    "pred": "SELECT Major, AVG(Age) FROM Student GROUP BY Major",
    "exec_result": 0
  },
  {
    "idx": 767,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name ,  city_code ,  state ,  country FROM City",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name ,  city_code ,  state ,  country FROM City",
    "pred": "SELECT city_name, city_code, state, country FROM City;",
    "exec_result": 1
  },
  {
    "idx": 769,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"",
    "pred": "SELECT `latitude`, `longitude` FROM `City` WHERE `city_name` = 'Baltimore';",
    "exec_result": 1
  },
  {
    "idx": 770,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"",
    "pred": "SELECT `latitude`, `longitude` FROM `City` WHERE `city_name` = 'Baltimore';",
    "exec_result": 1
  },
  {
    "idx": 771,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE state  =  \"PA\"",
    "pred": "SELECT `city_name` FROM `City` WHERE `state` = 'PA'",
    "exec_result": 1
  },
  {
    "idx": 772,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE state  =  \"PA\"",
    "pred": "SELECT city_name FROM City WHERE state = 'PA'",
    "exec_result": 1
  },
  {
    "idx": 773,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"",
    "pred": "SELECT COUNT(*) FROM City WHERE country = 'CANADA'",
    "exec_result": 1
  },
  {
    "idx": 774,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"",
    "pred": "SELECT COUNT(*) FROM City WHERE country = 'Canada'",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude",
    "pred": "SELECT `city_name` FROM `City` WHERE `country` = 'USA' ORDER BY `latitude`",
    "exec_result": 1
  },
  {
    "idx": 776,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude",
    "pred": "SELECT city_name FROM City WHERE country = 'USA' ORDER BY latitude;",
    "exec_result": 1
  },
  {
    "idx": 777,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state ,  count(*) FROM City GROUP BY state",
    "pred": "-- Show all states and number of cities in each state. SELECT c.state, COUNT(c.city_code) as city_count FROM City c GROUP BY c.state;",
    "exec_result": 0
  },
  {
    "idx": 778,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state ,  count(*) FROM City GROUP BY state",
    "pred": "SELECT state, COUNT(city_code) as number_of_cities FROM City GROUP BY state;",
    "exec_result": 1
  },
  {
    "idx": 779,
    "db_id": "address_1",
    "question": "",
    "gold": "select country ,  count(*) from city group by country",
    "pred": "SELECT `Major`, COUNT(`StuID`) as `Number_of_Students` FROM Student GROUP BY `Major`",
    "exec_result": 0
  },
  {
    "idx": 780,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM City GROUP BY country",
    "pred": "SELECT country, COUNT(city_code) as num_cities FROM City GROUP BY country",
    "exec_result": 1
  },
  {
    "idx": 781,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT City.state FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code GROUP BY City.state HAVING COUNT(DISTINCT City.city_code) >= 2",
    "exec_result": 0
  },
  {
    "idx": 782,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT state FROM City WHERE city_code IN ( SELECT city2_code FROM Direct_distance GROUP BY city2_code HAVING COUNT(city1_code) >= 2 )",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT City.state, COUNT(*) as city_count FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code GROUP BY City.state ORDER BY city_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 784,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT state FROM City GROUP BY state ORDER BY COUNT(city_code) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 785,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Country, COUNT(city_code) as NumberOfCities FROM City GROUP BY Country ORDER BY NumberOfCities LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 786,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT `country`, COUNT(`city_code`) as `number_of_cities` FROM `City` GROUP BY `country` ORDER BY `number_of_cities` LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 787,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"",
    "pred": "SELECT `Fname`, `LName` FROM `Student` WHERE `city_code` IN (SELECT `city_code` FROM `City` WHERE `state` = 'MD')",
    "exec_result": 1
  },
  {
    "idx": 788,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"",
    "pred": "SELECT Fname, LName FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE state = 'MD');",
    "exec_result": 1
  },
  {
    "idx": 789,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"",
    "pred": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country = 'China')",
    "exec_result": 0
  },
  {
    "idx": 790,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"",
    "pred": "SELECT COUNT(*) FROM Student WHERE city_code IN (SELECT city_code FROM City WHERE country = 'China')",
    "exec_result": 0
  },
  {
    "idx": 791,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"",
    "pred": "SELECT `Fname`, `Major` FROM `Student` WHERE `city_code` = (SELECT `city_code` FROM `City` WHERE `city_name` = 'Baltimore')",
    "exec_result": 1
  },
  {
    "idx": 792,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"",
    "pred": "SELECT `Fname`, `Major` FROM `Student` WHERE `city_code` = (SELECT `city_code` FROM `City` WHERE `city_name` = 'Baltimore');",
    "exec_result": 1
  },
  {
    "idx": 793,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 794,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country",
    "pred": "SELECT C.city_name, COUNT(S.StuID) as `Number_of_Students` FROM Student S JOIN City C ON S.city_code = C.city_code GROUP BY C.city_name;",
    "exec_result": 0
  },
  {
    "idx": 795,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 796,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code",
    "pred": "SELECT City.city_name, COUNT(Student.StuID) as NumberOfStudents FROM Student JOIN Direct_distance ON Student.city_code = Direct_distance.city1_code JOIN City ON Direct_distance.city2_code = City.city_code GROUP BY City.city_name;",
    "exec_result": 0
  },
  {
    "idx": 797,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT City.state, COUNT(Student.StuID) as num_students FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY City.state ORDER BY num_students DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 798,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `City`.`state`, COUNT(`Student`.`StuID`) as `Number of Students` FROM `Student` JOIN `City` ON `Student`.`city_code` = `City`.`city_code` GROUP BY `City`.`state` ORDER BY `Number of Students` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 799,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1",
    "pred": "SELECT City.country, COUNT(Student.StuID) as NumberOfStudents FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY City.country HAVING COUNT(Student.StuID) = ( SELECT MIN(NumberOfStudents) FROM ( SELECT COUNT(Student.StuID) as NumberOfStudents FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY City.country ) )",
    "exec_result": 0
  },
  {
    "idx": 800,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1",
    "pred": "SELECT City.country, COUNT(Student.StuID) as student_count FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY City.country ORDER BY student_count ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 801,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3",
    "pred": "SELECT S.`Fname`, S.`LName`, S.`Age`, S.`Sex`, S.`Major`, S.`Advisor`, S.`city_code` FROM Student S WHERE S.`Age` = (SELECT MIN(Age) FROM Student)",
    "exec_result": 0
  },
  {
    "idx": 802,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3",
    "pred": "SELECT C.city_name FROM City C WHERE (SELECT COUNT(*) FROM Student S WHERE S.city_code = C.city_code) >= 3;",
    "exec_result": 1
  },
  {
    "idx": 803,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5",
    "pred": "SELECT `state`, COUNT(*) as `Number_of_Students` FROM `Student` GROUP BY `state` HAVING COUNT(*) > 5",
    "exec_result": 0
  },
  {
    "idx": 804,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5",
    "pred": "SELECT City.state, COUNT(Student.StuID) as student_count FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY City.state HAVING COUNT(Student.StuID) > 5",
    "exec_result": 0
  },
  {
    "idx": 805,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"",
    "pred": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')",
    "exec_result": 1
  },
  {
    "idx": 806,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"",
    "pred": "SELECT StuID FROM Student WHERE city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')",
    "exec_result": 1
  },
  {
    "idx": 807,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'",
    "pred": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN (SELECT city_code FROM City WHERE state = 'PA')",
    "exec_result": 1
  },
  {
    "idx": 808,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'",
    "pred": "SELECT StuID FROM Student WHERE Sex = 'F' AND city_code IN (SELECT city_code FROM City WHERE state = 'PA');",
    "exec_result": 1
  },
  {
    "idx": 809,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"",
    "pred": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA')",
    "exec_result": 1
  },
  {
    "idx": 810,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"",
    "pred": "SELECT StuID FROM Student WHERE Sex = 'M' AND city_code NOT IN (SELECT city_code FROM City WHERE country = 'USA');",
    "exec_result": 1
  },
  {
    "idx": 811,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"",
    "pred": "SELECT distance FROM Direct_distance WHERE city1_code = 'BAL' AND city2_code = 'CHI'",
    "exec_result": 1
  },
  {
    "idx": 812,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"",
    "pred": "SELECT `distance` FROM `Direct_distance` WHERE `city1_code` = 'BAL' AND `city2_code` = 'CHI'",
    "exec_result": 1
  },
  {
    "idx": 813,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"",
    "pred": "SELECT Direct_distance.distance FROM Direct_distance JOIN City ON Direct_distance.city2_code = City.city_code WHERE City.city_name = 'Newark' AND City.city_name = 'Boston'",
    "exec_result": 0
  },
  {
    "idx": 814,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"",
    "pred": "SELECT distance FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston') AND city2_code = (SELECT city_code FROM City WHERE city_name = 'Newark');",
    "exec_result": 1
  },
  {
    "idx": 815,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance",
    "pred": "SELECT AVG(distance) AS Average_Distance, MIN(distance) AS Min_Distance, MAX(distance) AS Max_Distance FROM Direct_distance JOIN City ON Direct_distance.city2_code = City.city_code AND Direct_distance.city1_code = City.city_code;",
    "exec_result": 0
  },
  {
    "idx": 816,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 817,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT city1_code FROM Direct_distance WHERE distance = ( SELECT MAX(distance) FROM Direct_distance );",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)",
    "pred": "SELECT city1_code, city2_code FROM Direct_distance WHERE distance > (SELECT AVG(distance) FROM Direct_distance)",
    "exec_result": 1
  },
  {
    "idx": 820,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)",
    "pred": "SELECT city_code FROM City WHERE city_code IN ( SELECT city2_code FROM Direct_distance WHERE distance > ( SELECT AVG(distance) FROM Direct_distance ) )",
    "exec_result": 0
  },
  {
    "idx": 821,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000",
    "pred": "SELECT city1_code, city2_code FROM Direct_distance WHERE distance < 1000",
    "exec_result": 1
  },
  {
    "idx": 822,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000",
    "pred": "SELECT City.city_code FROM Direct_distance JOIN City ON Direct_distance.city2_code = City.city_code WHERE Direct_distance.distance < 1000",
    "exec_result": 0
  },
  {
    "idx": 823,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"",
    "pred": "SELECT SUM( SELECT (6371 * acos( cos(radians(t1.latitude)) * cos(radians(t2.latitude)) * cos(radians(t2.longitude) - radians(t1.longitude)) + sin(radians(t1.latitude)) * sin(radians(t2.latitude)) )) FROM City t1, City t2 WHERE t1.city_name = 'BAL' AND t2.city_name = 'San Francisco' ) AS total_distance",
    "exec_result": 0
  },
  {
    "idx": 824,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"",
    "pred": "SELECT SUM(distance) as Total_Distance FROM Direct_distance JOIN City ON Direct_distance.city2_code = City.city_code WHERE city_name = 'BAL';",
    "exec_result": 0
  },
  {
    "idx": 825,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"",
    "pred": "SELECT SUM(distance) / COUNT(*) as average_distance FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston')",
    "exec_result": 0
  },
  {
    "idx": 826,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"",
    "pred": "SELECT AVG(distance) as Average_Distance FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston') AND city2_code != (SELECT city_code FROM City WHERE city_name = 'Boston')",
    "exec_result": 1
  },
  {
    "idx": 827,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1",
    "pred": "SELECT city_name FROM City WHERE city_code = ( SELECT city_code FROM City WHERE latitude = ( SELECT MIN(latitude) FROM City WHERE city_name = 'Chicago' ) )",
    "exec_result": 0
  },
  {
    "idx": 828,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1",
    "pred": "SELECT city_name FROM City WHERE city_code = ( SELECT city2_code FROM Direct_distance WHERE distance = ( SELECT MIN(distance) FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Chicago') ) )",
    "exec_result": 0
  },
  {
    "idx": 829,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT city_name FROM City WHERE city_code = ( SELECT city2_code FROM Direct_distance WHERE distance = ( SELECT MAX(distance) FROM Direct_distance WHERE city1_code = ( SELECT city_code FROM City WHERE city_name = 'Boston' ) ) );",
    "exec_result": 1
  },
  {
    "idx": 830,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT City.city_name FROM City WHERE city_code = ( SELECT city2_code FROM Direct_distance WHERE distance = ( SELECT MAX(distance) FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston') ) )",
    "exec_result": 1
  },
  {
    "idx": 831,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code",
    "pred": "SELECT city_code, SUM(distance) as total_distance FROM Direct_distance GROUP BY city_code;",
    "exec_result": 0
  },
  {
    "idx": 832,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code",
    "pred": "SELECT T1.`city_code`, SUM(T2.`distance`) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.`city_code` = T2.`city1_code` OR T1.`city_code` = T2.`city2_code` GROUP BY T1.`city_code`",
    "exec_result": 0
  },
  {
    "idx": 833,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 834,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code",
    "pred": "SELECT City.city_name, AVG(Direct_distance.distance) as average_distance FROM City JOIN Direct_distance ON City.city_code = Direct_distance.city1_code GROUP BY City.city_name",
    "exec_result": 0
  },
  {
    "idx": 835,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"",
    "pred": "SELECT SUM(distance) as 'Distance' FROM Direct_distance WHERE city1_code = (SELECT city_code FROM Student WHERE Fname = 'Linda' AND LName = 'Smith') AND city2_code = (SELECT city_code FROM Student WHERE Fname = 'Tracy' AND LName = 'Kim');",
    "exec_result": 1
  },
  {
    "idx": 836,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"",
    "pred": "SELECT (6371 * acos(cos(radians(latitude1)) * cos(radians(latitude2)) * cos(radians(longitude2) - radians(longitude1)) + sin(radians(latitude1)) * sin(radians(latitude2)))) AS distance FROM (SELECT latitude AS latitude1, longitude AS longitude1, (SELECT latitude FROM City WHERE city_name = 'Toronto') AS latitude2, (SELECT longitude FROM City WHERE city_name = 'Toronto') AS longitude2 FROM Student, City WHERE Fname = 'Tracy' AND LName = 'Kim' AND Student.city_code = City.city_code)",
    "exec_result": 0
  },
  {
    "idx": 837,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT Fname, LName FROM Student WHERE Age = ( SELECT MAX(Age) FROM Student WHERE Age < (SELECT Age FROM Student WHERE Fname = 'Linda' AND LName = 'Smith') ) AND Fname <> 'Linda' AND LName <> 'Smith'",
    "exec_result": 0
  },
  {
    "idx": 838,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1",
    "pred": "SELECT S.Fname, S.LName FROM Student S JOIN City C ON S.city_code = C.city_code WHERE ( SELECT C1.city_code FROM ( SELECT C1.city_code, (6371 * acos(cos(radians(C.latitude)) * cos(radians(C1.latitude)) * cos(radians(C1.longitude) - radians(C.longitude)) + sin(radians(C.latitude)) * sin(radians(C1.latitude)))) AS distance FROM City C JOIN Direct_distance D ON C.city_code = D.city_2_code WHERE C.city_name = 'Linda Smith' ) AS subquery ORDER BY distance ASC LIMIT 1 ) = S.city_code",
    "exec_result": 0
  },
  {
    "idx": 839,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"",
    "pred": "SELECT City.state FROM City JOIN Student ON City.city_code = Student.city_code WHERE Student.Fname = 'Linda';",
    "exec_result": 1
  },
  {
    "idx": 840,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"",
    "pred": "SELECT City.state FROM City JOIN Student ON City.city_code = Student.city_code WHERE Student.Fname = 'Linda'",
    "exec_result": 1
  },
  {
    "idx": 841,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT * FROM Sailors WHERE age  >  30",
    "pred": "SELECT * FROM Sailors WHERE age > 30",
    "exec_result": 1
  },
  {
    "idx": 842,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT * FROM Sailors WHERE age  >  30",
    "pred": "SELECT name FROM Sailors WHERE age > 30",
    "exec_result": 0
  },
  {
    "idx": 843,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  <  30",
    "pred": "SELECT `name`, `age` FROM `Sailors` WHERE `age` < 30",
    "exec_result": 1
  },
  {
    "idx": 844,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  <  30",
    "pred": "SELECT name, age FROM Sailors WHERE age < 30",
    "exec_result": 1
  },
  {
    "idx": 845,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1",
    "pred": "SELECT Boats.name FROM Boats INNER JOIN Reserves ON Boats.bid = Reserves.bid WHERE Reserves.sid = (SELECT sid FROM Sailors WHERE sid = 1);",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1",
    "pred": "SELECT bid FROM Reserves WHERE sid = 1;",
    "exec_result": 1
  },
  {
    "idx": 847,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;",
    "exec_result": 1
  },
  {
    "idx": 848,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 102;",
    "exec_result": 1
  },
  {
    "idx": 849,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves",
    "pred": "SELECT DISTINCT bid FROM Reserves",
    "exec_result": 1
  },
  {
    "idx": 850,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves",
    "pred": "SELECT bid FROM Reserves WHERE sid IN (SELECT sid FROM Sailors WHERE age = (SELECT MIN(age) FROM Sailors))",
    "exec_result": 0
  },
  {
    "idx": 851,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "pred": "SELECT name FROM Sailors WHERE name LIKE '%e%';",
    "exec_result": 1
  },
  {
    "idx": 852,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "pred": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "exec_result": 1
  },
  {
    "idx": 853,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);",
    "pred": "SELECT DISTINCT sid FROM Sailors WHERE age > (SELECT MAX(age) FROM Sailors)",
    "exec_result": 0
  },
  {
    "idx": 854,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);",
    "pred": "SELECT sid FROM Sailors WHERE age < (SELECT MIN(age) FROM Sailors)",
    "exec_result": 0
  },
  {
    "idx": 855,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);",
    "pred": "SELECT DISTINCT S1.name FROM Sailors AS S1 WHERE S1.age > (SELECT MAX(S2.rating) FROM Sailors AS S2 WHERE S2.rating > 7)",
    "exec_result": 0
  },
  {
    "idx": 856,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);",
    "pred": "SELECT S1.name FROM Sailors AS S1 JOIN Reserves AS R1 ON S1.sid = R1.sid JOIN Boats AS B1 ON R1.bid = B1.bid WHERE S1.age > (SELECT S2.age FROM Sailors AS S2 WHERE S2.rating > 7) GROUP BY S1.name;",
    "exec_result": 1
  },
  {
    "idx": 857,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors WHERE Sailors.sid IN (SELECT Reserves.sid FROM Reserves GROUP BY Reserves.sid HAVING COUNT(DISTINCT Reserves.bid) > 0)",
    "exec_result": 0
  },
  {
    "idx": 858,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid GROUP BY Sailors.sid HAVING COUNT(DISTINCT Reserves.bid) > 0",
    "exec_result": 0
  },
  {
    "idx": 859,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1",
    "pred": "SELECT S.sid, S.name FROM Sailors AS S JOIN ( SELECT R.sid FROM Reserves AS R GROUP BY R.sid HAVING COUNT(DISTINCT R.bid) > 1 ) AS T ON S.sid = T.sid",
    "exec_result": 1
  },
  {
    "idx": 860,
    "db_id": "boat_1",
    "question": "",
    "gold": "select distinct t1.name ,  t1.sid from sailors as t1 join reserves as t2 on t1.sid  =  t2.sid group by t2.sid having count(*)  >=  2",
    "pred": "SELECT S1.name FROM Sailors AS S1 JOIN (SELECT sid, COUNT(*) as cnt FROM Reserves GROUP BY sid HAVING COUNT(*) >= 2) AS S2 ON S1.sid = S2.sid",
    "exec_result": 0
  },
  {
    "idx": 861,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue') GROUP BY Sailors.sid ORDER BY COUNT(DISTINCT Boats.color) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 862,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT DISTINCT sid FROM Reserves INNER JOIN Boats ON Reserves.bid = Boats.bid WHERE color IN ('red', 'blue');",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue')",
    "exec_result": 1
  },
  {
    "idx": 864,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');",
    "exec_result": 1
  },
  {
    "idx": 865,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue')",
    "exec_result": 0
  },
  {
    "idx": 866,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT sid FROM Sailors WHERE age = (SELECT MIN(age) FROM Sailors) AND name IN (SELECT name FROM Boats WHERE color = 'red' OR color = 'blue');",
    "exec_result": 0
  },
  {
    "idx": 867,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue')",
    "exec_result": 0
  },
  {
    "idx": 868,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue');",
    "exec_result": 0
  },
  {
    "idx": 869,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves",
    "pred": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves)",
    "exec_result": 1
  },
  {
    "idx": 870,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves",
    "pred": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves)",
    "exec_result": 1
  },
  {
    "idx": 871,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL",
    "exec_result": 1
  },
  {
    "idx": 872,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT S.sid, S.name FROM Sailors AS S WHERE S.sid NOT IN (SELECT R.sid FROM Reserves AS R)",
    "exec_result": 1
  },
  {
    "idx": 873,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT sid FROM Reserves)",
    "exec_result": 1
  },
  {
    "idx": 874,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL",
    "exec_result": 1
  },
  {
    "idx": 875,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103;",
    "exec_result": 1
  },
  {
    "idx": 876,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103",
    "exec_result": 1
  },
  {
    "idx": 877,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT name FROM Sailors WHERE rating > (SELECT MAX(rating) FROM Sailors WHERE name != 'Luis')",
    "exec_result": 0
  },
  {
    "idx": 878,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT name FROM Sailors WHERE rating > (SELECT MAX(rating) FROM Sailors WHERE name <> 'Luis')",
    "exec_result": 0
  },
  {
    "idx": 879,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > ( SELECT Sailors.rating FROM Sailors WHERE Sailors.name = 'Luis' )",
    "exec_result": 0
  },
  {
    "idx": 880,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "SELECT name FROM Sailors WHERE rating > (SELECT MAX(rating) FROM Sailors WHERE name != 'Luis')",
    "exec_result": 0
  },
  {
    "idx": 881,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating > 2",
    "exec_result": 1
  },
  {
    "idx": 882,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2",
    "pred": "SELECT Sailors.sid, Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Sailors.rating >= 3",
    "exec_result": 1
  },
  {
    "idx": 883,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )",
    "pred": "SELECT `name`, `age` FROM Sailors WHERE `age` = (SELECT MAX(age) FROM Sailors)",
    "exec_result": 1
  },
  {
    "idx": 884,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )",
    "pred": "SELECT `name`, `age` FROM `Sailors` WHERE `age` = (SELECT MAX(`age`) FROM `Sailors`);",
    "exec_result": 1
  },
  {
    "idx": 885,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM Sailors",
    "pred": "SELECT COUNT(*) FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 886,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM Sailors",
    "pred": "SELECT COUNT(*) FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 887,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(age) FROM Sailors WHERE rating  =  7",
    "pred": "SELECT AVG(Sailors.age) FROM Sailors WHERE Sailors.rating = 7",
    "exec_result": 1
  },
  {
    "idx": 888,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(age) FROM Sailors WHERE rating  =  7",
    "pred": "SELECT SUM(age) / COUNT(*) AS average_age FROM Sailors WHERE rating = 7",
    "exec_result": 1
  },
  {
    "idx": 889,
    "db_id": "boat_1",
    "question": "",
    "gold": "select count(*) from sailors where name like 'd%'",
    "pred": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%'",
    "exec_result": 1
  },
  {
    "idx": 890,
    "db_id": "boat_1",
    "question": "",
    "gold": "select count(*) from sailors where name like 'd%'",
    "pred": "SELECT COUNT(*) FROM Sailors WHERE name LIKE 'D%'",
    "exec_result": 1
  },
  {
    "idx": 891,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(rating) ,  MAX(age) FROM Sailors",
    "pred": "SELECT AVG(rating) as Average_Rating, MAX(age) as Max_Age FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 892,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(rating) ,  MAX(age) FROM Sailors",
    "pred": "SELECT AVG(rating) as Average_Rating, MAX(age) as Largest_Age FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 893,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid",
    "pred": "SELECT Boats.name, COUNT(*) as NumberOfReservations FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid GROUP BY Boats.name",
    "exec_result": 0
  },
  {
    "idx": 894,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid",
    "pred": "SELECT Boats.name, COUNT(*) as number_of_reservations FROM Boats LEFT JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.name",
    "exec_result": 0
  },
  {
    "idx": 895,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50",
    "pred": "SELECT COUNT(*) FROM Reserves WHERE bid > 50",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50",
    "pred": "SELECT COUNT(*) FROM Reserves WHERE bid > 50",
    "exec_result": 0
  },
  {
    "idx": 897,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1",
    "pred": "SELECT Boats.name, COUNT(*) as Number_of_Reservations FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 898,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1",
    "pred": "SELECT Boats.name, COUNT(*) as reservations_count FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid GROUP BY Boats.bid HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 899,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid",
    "pred": "SELECT Boats.name, COUNT(*) as num_reservations FROM Reserves JOIN Sailors ON Reserves.sid = Sailors.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Sailors.sid > 1 GROUP BY Boats.name",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid",
    "pred": "SELECT Boats.name, COUNT(*) FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.sid > 1 GROUP BY Reserves.bid, Boats.name;",
    "exec_result": 0
  },
  {
    "idx": 901,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating",
    "pred": "SELECT Sailors.rating, AVG(Sailors.age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating;",
    "exec_result": 1
  },
  {
    "idx": 902,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating",
    "pred": "SELECT Sailors.rating, AVG(Sailors.age) FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' GROUP BY Sailors.rating",
    "exec_result": 1
  },
  {
    "idx": 903,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age",
    "pred": "SELECT name, rating, age FROM Sailors ORDER BY rating ASC, age ASC",
    "exec_result": 1
  },
  {
    "idx": 904,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age",
    "pred": "SELECT name, rating, age FROM Sailors ORDER BY rating, age",
    "exec_result": 1
  },
  {
    "idx": 905,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats",
    "pred": "SELECT COUNT(*) FROM Boats",
    "exec_result": 1
  },
  {
    "idx": 906,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats",
    "pred": "SELECT COUNT(*) FROM Boats",
    "exec_result": 1
  },
  {
    "idx": 907,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats WHERE color  =  'red'",
    "pred": "SELECT COUNT(*) FROM Boats WHERE color = 'red'",
    "exec_result": 1
  },
  {
    "idx": 908,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats WHERE color  =  'red'",
    "pred": "SELECT COUNT(*) FROM Boats WHERE color = 'red'",
    "exec_result": 1
  },
  {
    "idx": 909,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30",
    "pred": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.age BETWEEN 20 AND 30",
    "exec_result": 1
  },
  {
    "idx": 910,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30",
    "pred": "SELECT Boats.name FROM Boats JOIN Reserves ON Boats.bid = Reserves.bid JOIN Sailors ON Reserves.sid = Sailors.sid WHERE Sailors.age BETWEEN 20 AND 30",
    "exec_result": 1
  },
  {
    "idx": 911,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')",
    "pred": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > (SELECT AVG(Sailors.rating) FROM Sailors INNER JOIN Reserves ON Sailors.sid = Reserves.sid INNER JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red')",
    "exec_result": 1
  },
  {
    "idx": 912,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')",
    "pred": "SELECT Sailors.name FROM Sailors WHERE Sailors.rating > ( SELECT MAX(Reserves.bid) FROM Reserves JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color = 'red' )",
    "exec_result": 0
  },
  {
    "idx": 913,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT max(rating) FROM Sailors",
    "pred": "SELECT MAX(rating) as Highest_Rating FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 914,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT max(rating) FROM Sailors",
    "pred": "SELECT MAX(rating) as Maximum_Rating FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 915,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon';",
    "exec_result": 1
  },
  {
    "idx": 916,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon';",
    "exec_result": 1
  },
  {
    "idx": 917,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors ORDER BY rating DESC",
    "pred": "SELECT `name`, `age` FROM `Sailors` ORDER BY `rating` DESC",
    "exec_result": 1
  },
  {
    "idx": 918,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors ORDER BY rating DESC",
    "pred": "SELECT name, age FROM Sailors ORDER BY rating DESC",
    "exec_result": 1
  },
  {
    "idx": 919,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1",
    "pred": "SELECT `Model` FROM `headphone` WHERE `Price` = (SELECT MAX(`Price`) FROM `headphone`)",
    "exec_result": 1
  },
  {
    "idx": 920,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1",
    "pred": "SELECT `Model` FROM `headphone` WHERE `Price` = (SELECT MAX(`Price`) FROM `headphone`)",
    "exec_result": 1
  },
  {
    "idx": 921,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT DISTINCT model FROM headphone ORDER BY model",
    "pred": "SELECT DISTINCT `Model` FROM `headphone` ORDER BY `Model` ASC;",
    "exec_result": 1
  },
  {
    "idx": 922,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT DISTINCT model FROM headphone ORDER BY model",
    "pred": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC;",
    "exec_result": 1
  },
  {
    "idx": 923,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Class`, COUNT(*) as count FROM `headphone` GROUP BY `Class` ORDER BY count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 924,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Class, COUNT(*) as NumberOfHeadphones FROM headphone GROUP BY Class ORDER BY NumberOfHeadphones DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2",
    "pred": "SELECT `Class`, COUNT(*) FROM `headphone` WHERE `Class` IN ( SELECT `Class` FROM `headphone` GROUP BY `Class` HAVING COUNT(*) > 2 ) GROUP BY `Class`;",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2",
    "pred": "SELECT `Class` FROM headphone WHERE `Class` NOT IN ( SELECT `Class` FROM headphone GROUP BY `Class` HAVING COUNT(*) > 2 )",
    "exec_result": 0
  },
  {
    "idx": 927,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS",
    "pred": "SELECT `Class`, COUNT(*) FROM `headphone` WHERE `Price` > 200 GROUP BY `Class`",
    "exec_result": 1
  },
  {
    "idx": 928,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS",
    "pred": "SELECT `Class`, SUM(`Price`) FROM `headphone` WHERE `Price` > 200 GROUP BY `Class`",
    "exec_result": 0
  },
  {
    "idx": 929,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT earpads) FROM headphone",
    "pred": "SELECT COUNT(DISTINCT Earpads) as Number_of_Earpads FROM headphone;",
    "exec_result": 1
  },
  {
    "idx": 930,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT earpads) FROM headphone",
    "pred": "SELECT COUNT(DISTINCT `Earpads`) FROM `headphone`",
    "exec_result": 1
  },
  {
    "idx": 931,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT `Earpads`, COUNT(*) as `Count` FROM `headphone` GROUP BY `Earpads` ORDER BY `Count` DESC LIMIT 2",
    "exec_result": 0
  },
  {
    "idx": 932,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT `Earpads`, COUNT(*) as `Number_of_Headphones` FROM headphone GROUP BY `Earpads` ORDER BY `Number_of_Headphones` DESC LIMIT 2;",
    "exec_result": 0
  },
  {
    "idx": 933,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1",
    "pred": "SELECT `Model`, `Class`, `Construction` FROM headphone WHERE Price = (SELECT MIN(Price) FROM headphone)",
    "exec_result": 1
  },
  {
    "idx": 934,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1",
    "pred": "SELECT `Model`, `Class`, `Construction` FROM headphone WHERE Price = (SELECT MIN(Price) FROM headphone)",
    "exec_result": 1
  },
  {
    "idx": 935,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction",
    "pred": "SELECT `Class`, AVG(`Price`) AS `Average_Price` FROM `headphone` GROUP BY `Class`",
    "exec_result": 0
  },
  {
    "idx": 936,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction",
    "pred": "SELECT `Construction`, AVG(`Price`) FROM `headphone` GROUP BY `Construction`",
    "exec_result": 1
  },
  {
    "idx": 937,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'",
    "pred": "SELECT DISTINCT H1.`Class` FROM headphone AS H1 JOIN headphone AS H2 ON H1.`Class` = H2.`Class` WHERE H1.`Earpads` = 'Bowls' AND H2.`Earpads` = 'Comfort Pads'",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'",
    "pred": "SELECT DISTINCT H.`Class` FROM headphone AS H JOIN stock AS S ON H.`Headphone_ID` = S.`Headphone_ID` JOIN store AS ST ON S.`Store_ID` = ST.`Store_ID` WHERE H.`Earpads` = 'Bowls' AND ST.`Parking` = 'n/a'",
    "exec_result": 0
  },
  {
    "idx": 939,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'",
    "pred": "SELECT `Earpads` FROM `headphone` WHERE `Construction` = 'Hand-Crafted Mahogany / Aluminum';",
    "exec_result": 0
  },
  {
    "idx": 940,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'",
    "pred": "SELECT `Earpads` FROM `headphone` WHERE `Construction` = 'Hand-Crafted Mahogany / Aluminum'",
    "exec_result": 0
  },
  {
    "idx": 941,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)",
    "pred": "SELECT `Model` FROM `headphone` WHERE `Price` < (SELECT AVG(`Price`) FROM `headphone`)",
    "exec_result": 1
  },
  {
    "idx": 942,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)",
    "pred": "SELECT `Model` FROM `headphone` WHERE `Price` < (SELECT AVG(`Price`) FROM `headphone`)",
    "exec_result": 1
  },
  {
    "idx": 943,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store ORDER BY date_opened",
    "pred": "SELECT `Name`, `Date_Opened` FROM `store` ORDER BY `Date_Opened`",
    "exec_result": 0
  },
  {
    "idx": 944,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store ORDER BY date_opened",
    "pred": "SELECT `Name`, `Date_Opened` FROM `store` ORDER BY `Date_Opened`",
    "exec_result": 0
  },
  {
    "idx": 945,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'",
    "pred": "SELECT `Name`, `Parking` FROM `store` WHERE `Neighborhood` = 'Tarzana'",
    "exec_result": 1
  },
  {
    "idx": 946,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'",
    "pred": "SELECT `Name`, `Parking` FROM `store` WHERE `Neighborhood` = 'Tarzana'",
    "exec_result": 1
  },
  {
    "idx": 947,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT neighborhood) FROM store",
    "pred": "SELECT COUNT(DISTINCT Neighborhood) as Number_of_Neighborhoods FROM store",
    "exec_result": 1
  },
  {
    "idx": 948,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT neighborhood) FROM store",
    "pred": "SELECT COUNT(DISTINCT `Neighborhood`) FROM `store`",
    "exec_result": 1
  },
  {
    "idx": 949,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood",
    "pred": "SELECT `Neighborhood`, COUNT(*) as `Number_of_Stores` FROM `store` GROUP BY `Neighborhood`",
    "exec_result": 1
  },
  {
    "idx": 950,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood",
    "pred": "SELECT `Neighborhood`, COUNT(*) as `Number_of_Stores` FROM `store` GROUP BY `Neighborhood`",
    "exec_result": 1
  },
  {
    "idx": 951,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT S.`Name`, COUNT(*) as `Number_of_Headphones` FROM store AS S JOIN stock AS STO ON S.`Store_ID` = STO.`Store_ID` JOIN headphone AS H ON STO.`Headphone_ID` = H.`Headphone_ID` GROUP BY S.`Store_ID` ORDER BY `Number_of_Headphones` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 952,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT T1.`Name`, SUM(T2.`Quantity`) FROM store AS T1 JOIN stock AS T2 ON T1.`Store_ID` = T2.`Store_ID` GROUP BY T1.`Store_ID`",
    "exec_result": 0
  },
  {
    "idx": 953,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)",
    "pred": "SELECT store.Name FROM store WHERE store.Store_ID NOT IN ( SELECT stock.Store_ID FROM stock INNER JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID )",
    "exec_result": 1
  },
  {
    "idx": 954,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)",
    "pred": "SELECT store.Name FROM store WHERE store.Store_ID NOT IN ( SELECT stock.Store_ID FROM stock INNER JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID )",
    "exec_result": 1
  },
  {
    "idx": 955,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)",
    "pred": "SELECT H.Model FROM headphone H WHERE H.Model NOT IN (SELECT S.Headphone_ID FROM stock S)",
    "exec_result": 0
  },
  {
    "idx": 956,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)",
    "pred": "SELECT DISTINCT H.`Model` FROM headphone AS H WHERE H.`Headphone_ID` NOT IN (SELECT S.`Headphone_ID` FROM stock AS S)",
    "exec_result": 1
  },
  {
    "idx": 957,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT `headphone`.`Model`, SUM(`stock`.`Quantity`) as `Total_Quantity` FROM `stock` JOIN `headphone` ON `stock`.`Headphone_ID` = `headphone`.`Headphone_ID` GROUP BY `headphone`.`Model` ORDER BY `Total_Quantity` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 958,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT H.`Model`, SUM(S.`Quantity`) as Total_Quantity FROM headphone as H JOIN stock as S ON H.`Headphone_ID` = S.`Headphone_ID` GROUP BY H.`Headphone_ID` ORDER BY Total_Quantity DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 959,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'",
    "pred": "SELECT COUNT(*) FROM stock WHERE Store_ID = (SELECT Store_ID FROM store WHERE Name = 'Woodman') AND Headphone_ID = (SELECT Headphone_ID FROM headphone)",
    "exec_result": 0
  },
  {
    "idx": 960,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'",
    "pred": "SELECT SUM(T1.`Quantity`) FROM stock AS T1 JOIN store AS T2 ON T1.`Store_ID` = T2.`Store_ID` JOIN headphone AS T3 ON T1.`Headphone_ID` = T3.`Headphone_ID` WHERE T2.`Name` = 'Woodman'",
    "exec_result": 1
  },
  {
    "idx": 961,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id",
    "pred": "SELECT `Neighborhood` FROM `store` WHERE `Store_ID` NOT IN (SELECT `Store_ID` FROM `stock`)",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id",
    "pred": "SELECT store.Neighborhood FROM store WHERE store.Store_ID NOT IN (SELECT stock.Store_ID FROM stock JOIN headphone ON stock.Headphone_ID = headphone.Headphone_ID) GROUP BY store.Neighborhood",
    "exec_result": 0
  },
  {
    "idx": 963,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 964,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT `Author`.`name`, `Affiliation`.`address` FROM `Author` JOIN `Author_list` ON `Author`.`author_id` = `Author_list`.`author_id` JOIN `Affiliation` ON `Author_list`.`affiliation_id` = `Affiliation`.`affiliation_id` WHERE `Author_list`.`affiliation_id` = ( SELECT `affiliation_id` FROM `Author_list` GROUP BY `affiliation_id` ORDER BY COUNT(`author_id`) DESC LIMIT 1 )",
    "exec_result": 0
  },
  {
    "idx": 965,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 966,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper",
    "pred": "SELECT COUNT(*) FROM Paper",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Affiliation",
    "pred": "SELECT COUNT(*) FROM Affiliation",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Affiliation",
    "pred": "SELECT COUNT(*) FROM Affiliation",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000'",
    "exec_result": 0
  },
  {
    "idx": 970,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL 2000'",
    "exec_result": 0
  },
  {
    "idx": 971,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009",
    "pred": "SELECT COUNT(*) FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Paper.year = 2009 AND Affiliation.name = 'Columbia University';",
    "exec_result": 1
  },
  {
    "idx": 972,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year = 2009",
    "exec_result": 0
  },
  {
    "idx": 973,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT name ,  address FROM Affiliation",
    "pred": "SELECT `name`, `address` FROM `Affiliation`",
    "exec_result": 1
  },
  {
    "idx": 974,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT name ,  address FROM Affiliation",
    "pred": "SELECT `name`, `address` FROM `Affiliation`",
    "exec_result": 1
  },
  {
    "idx": 975,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR",
    "pred": "SELECT Venue, Year FROM Paper ORDER BY Year",
    "exec_result": 1
  },
  {
    "idx": 976,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR",
    "pred": "SELECT DISTINCT venue, year FROM Paper ORDER BY year;",
    "exec_result": 1
  },
  {
    "idx": 977,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"",
    "pred": "SELECT Paper.`title`, Paper.`paper_id` FROM Paper INNER JOIN Author_list ON Paper.`paper_id` = Author_list.`paper_id` INNER JOIN Author ON Author_list.`author_id` = Author.`author_id` INNER JOIN Affiliation ON Author_list.`affiliation_id` = Affiliation.`affiliation_id` WHERE Affiliation.`name` = 'Harvard University';",
    "exec_result": 1
  },
  {
    "idx": 978,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Harvard University';",
    "exec_result": 1
  },
  {
    "idx": 979,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"",
    "pred": "SELECT Paper.`paper_id`, Paper.`title` FROM Paper JOIN Author_list ON Paper.`paper_id` = Author_list.`paper_id` JOIN Author ON Author_list.`author_id` = Author.`author_id` WHERE Author.`name` = 'Mckeown'",
    "exec_result": 0
  },
  {
    "idx": 980,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"",
    "pred": "SELECT `title`, `Author_list`.`paper_id` FROM `Paper` INNER JOIN `Author_list` ON `Paper`.`paper_id` = `Author_list`.`paper_id` INNER JOIN `Author` ON `Author_list`.`author_id` = `Author`.`author_id` WHERE `Author`.`name` = 'McKeown'",
    "exec_result": 0
  },
  {
    "idx": 981,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"",
    "pred": "SELECT Paper.paper_id, Paper.title FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name IN ('Stanford University', 'Columbia University');",
    "exec_result": 0
  },
  {
    "idx": 982,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name IN ('Stanford University', 'Columbia University');",
    "exec_result": 0
  },
  {
    "idx": 983,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT Paper.paper_id, Paper.title FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = 'Mckeown, Kathleen' AND Author.name = 'Rambow, Owen'",
    "exec_result": 1
  },
  {
    "idx": 984,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name IN ('Mckeown, Kathleen', 'Rambow, Owen')",
    "exec_result": 0
  },
  {
    "idx": 985,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"",
    "pred": "SELECT Paper.`title`, Paper.`paper_id` FROM Paper WHERE Paper.`paper_id` NOT IN ( SELECT Author_list.`paper_id` FROM Author_list WHERE Author_list.`author_id` IN ( SELECT Author.`author_id` FROM Author WHERE Author.`name` = 'Mckeown' ) AND Author_list.`affiliation_id` IN ( SELECT Affiliation.`affiliation_id` FROM Affiliation WHERE Affiliation.`name` = 'Rambow' ) )",
    "exec_result": 0
  },
  {
    "idx": 986,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = 'Mckeown' AND Author.name != 'Rambow'",
    "exec_result": 0
  },
  {
    "idx": 987,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT Paper.`title`, Paper.`paper_id` FROM Paper JOIN Author_list ON Paper.`paper_id` = Author_list.`paper_id` JOIN Author ON Author_list.`author_id` = Author.`author_id` WHERE Author.`name` IN ('Mckeown, Kathleen', 'Rambow, Owen')",
    "exec_result": 0
  },
  {
    "idx": 988,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name IN ('Mckeown, Kathleen', 'Rambow, Owen');",
    "exec_result": 0
  },
  {
    "idx": 989,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC",
    "pred": "SELECT A.`name`, COUNT(*) as `Number_of_Papers` FROM Author AS A JOIN Author_list AS AL ON A.`author_id` = AL.`author_id` JOIN Paper AS P ON AL.`paper_id` = P.`paper_id` GROUP BY A.`name` ORDER BY COUNT(*) DESC",
    "exec_result": 0
  },
  {
    "idx": 990,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC",
    "pred": "SELECT A.name, COUNT(AL.paper_id) as num_papers FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id GROUP BY A.name ORDER BY num_papers DESC;",
    "exec_result": 0
  },
  {
    "idx": 991,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC",
    "pred": "SELECT Affiliation.name, COUNT(Author_list.author_id) as num_papers FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Affiliation.name ORDER BY num_papers ASC;",
    "exec_result": 0
  },
  {
    "idx": 992,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC",
    "pred": "SELECT Affiliation.name, COUNT(Author_list.author_id) as num_papers FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Affiliation.name ORDER BY num_papers DESC",
    "exec_result": 0
  },
  {
    "idx": 993,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50",
    "pred": "SELECT A.`name` FROM Author AS A JOIN Author_list AS AL ON A.`author_id` = AL.`author_id` JOIN Paper AS P ON AL.`paper_id` = P.`paper_id` GROUP BY A.`name` HAVING COUNT(P.`paper_id`) > 50",
    "exec_result": 1
  },
  {
    "idx": 994,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50",
    "pred": "SELECT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id GROUP BY A.name HAVING COUNT(P.paper_id) > 50",
    "exec_result": 1
  },
  {
    "idx": 995,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1",
    "pred": "SELECT A.`name` FROM Author AS A WHERE (SELECT COUNT(*) FROM Author_list AS AL WHERE A.`author_id` = AL.`author_id`) = 1",
    "exec_result": 1
  },
  {
    "idx": 996,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1",
    "pred": "SELECT A.name FROM Author A WHERE (SELECT COUNT(*) FROM Author_list AL WHERE AL.author_id = A.author_id) = 1;",
    "exec_result": 1
  },
  {
    "idx": 997,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Venue, Year, COUNT(*) as Publication_Count FROM Paper GROUP BY Venue, Year ORDER BY Publication_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 998,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Venue, Year, COUNT(*) as Publications FROM Paper GROUP BY Venue, Year ORDER BY Publications DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 999,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1",
    "pred": "SELECT `venue`, COUNT(*) as `publications_count` FROM `Paper` GROUP BY `venue` ORDER BY `publications_count` LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1000,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1",
    "pred": "SELECT Affiliation.name, COUNT(*) as publication_count FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Affiliation.name ORDER BY publication_count LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1001,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE cited_paper_id  =  \"A00-1002\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'A00-1002'",
    "exec_result": 0
  },
  {
    "idx": 1002,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE cited_paper_id  =  \"A00-1002\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id = 'A00-1002'",
    "exec_result": 1
  },
  {
    "idx": 1003,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE paper_id  =  \"D12-1027\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id = 'D12-1027'",
    "exec_result": 0
  },
  {
    "idx": 1004,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE paper_id  =  \"D12-1027\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE paper_id = 'D12-1027'",
    "exec_result": 1
  },
  {
    "idx": 1005,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1006,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Paper.paper_id, COUNT(Citation.cited_paper_id) as num_citations FROM Paper JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.paper_id ORDER BY num_citations DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1007,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Paper.title, COUNT(*) as cnt FROM Paper JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.title ORDER BY cnt DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1008,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Paper.title FROM Paper WHERE Paper.paper_id IN ( SELECT Citation.cited_paper_id FROM Citation ) GROUP BY Paper.title ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1009,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10",
    "pred": "SELECT Paper.title, COUNT(Citation.cited_paper_id) as num_citations FROM Paper JOIN Citation ON Paper.paper_id = Citation.paper_id GROUP BY Paper.paper_id ORDER BY num_citations DESC LIMIT 10",
    "exec_result": 0
  },
  {
    "idx": 1010,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10",
    "pred": "SELECT P.title, COUNT(C.cited_paper_id) as num_citations FROM Paper P JOIN Citation C ON P.paper_id = C.paper_id GROUP BY P.paper_id ORDER BY num_citations DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 1011,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT COUNT(*) FROM Citation JOIN Author_list ON Citation.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Mckeown, Kathleen';",
    "exec_result": 1
  },
  {
    "idx": 1012,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE paper_id IN ( SELECT paper_id FROM Author_list WHERE author_id = ( SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen' ) );",
    "exec_result": 1
  },
  {
    "idx": 1013,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1014,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT COUNT(*) FROM Citation JOIN Author_list ON Citation.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name = 'Mckeown, Kathleen';",
    "exec_result": 1
  },
  {
    "idx": 1015,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.`name`, COUNT(*) as `Number of Citations` FROM Author as A JOIN Author_list as AL ON A.`author_id` = AL.`author_id` JOIN Paper as P ON AL.`paper_id` = P.`paper_id` JOIN Citation as C ON P.`paper_id` = C.`paper_id` GROUP BY A.`author_id` ORDER BY `Number of Citations` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1016,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.name, COUNT(c.paper_id) as num_citations FROM Author a JOIN Author_list al ON a.author_id = al.author_id JOIN Paper p ON al.paper_id = p.paper_id JOIN Citation c ON p.paper_id = c.paper_id GROUP BY a.author_id ORDER BY num_citations DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1017,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT Venue, Year FROM Paper INNER JOIN Author_list ON Paper.paper_id = Author_list.paper_id INNER JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Mckeown, Kathleen'",
    "exec_result": 1
  },
  {
    "idx": 1018,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT Venue, Year FROM Paper WHERE Paper.paper_id IN ( SELECT Paper_id FROM Author_list WHERE Author_list.author_id IN ( SELECT author_id FROM Author WHERE name = 'Mckeown, Kathleen' ) )",
    "exec_result": 1
  },
  {
    "idx": 1019,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = \"columbia university\"",
    "pred": "SELECT Venue, Year FROM Paper INNER JOIN Author_list ON Paper.paper_id = Author_list.paper_id INNER JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Columbia University';",
    "exec_result": 0
  },
  {
    "idx": 1020,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = \"columbia university\"",
    "pred": "SELECT Venue, Year FROM Paper INNER JOIN Author_list ON Paper.paper_id = Author_list.paper_id INNER JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Affiliation.name = 'Columbia University';",
    "exec_result": 0
  },
  {
    "idx": 1021,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.`name`, COUNT(*) as `Number_of_Papers` FROM Author AS A JOIN Author_list AS AL ON A.`author_id` = AL.`author_id` JOIN Paper AS P ON AL.`paper_id` = P.`paper_id` WHERE P.`year` = 2009 GROUP BY A.`author_id` ORDER BY `Number_of_Papers` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1022,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1023,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT Affiliation.name, COUNT(Author_list.author_id) as paper_count FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.year = 2009 GROUP BY Affiliation.name ORDER BY paper_count DESC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 1024,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT Affiliation.name, COUNT(DISTINCT Paper.paper_id) as num_papers FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.year = 2009 GROUP BY Affiliation.name ORDER BY num_papers DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1025,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = \"columbia university\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'Columbia University' AND year < 2009",
    "exec_result": 1
  },
  {
    "idx": 1026,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = \"columbia university\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'Carnegie Mellon University' AND year >= 2009",
    "exec_result": 1
  },
  {
    "idx": 1027,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE \"Stanford University\"",
    "pred": "SELECT COUNT(*) FROM Author_list JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.name = 'Stanford University' AND Paper.year BETWEEN 2000 AND 2009",
    "exec_result": 1
  },
  {
    "idx": 1028,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE \"Stanford University\"",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'Stanford University' AND year BETWEEN 2000 AND 2009",
    "exec_result": 0
  },
  {
    "idx": 1029,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT title, COUNT(*) as author_count FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id GROUP BY Paper.paper_id ORDER BY author_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1030,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `title` FROM Paper WHERE `paper_id` = ( SELECT `paper_id` FROM ( SELECT `paper_id`, COUNT(`author_id`) AS `author_count` FROM Author_list GROUP BY `paper_id` ORDER BY `author_count` DESC LIMIT 1 ) )",
    "exec_result": 1
  },
  {
    "idx": 1031,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "SELECT COUNT(*) FROM Author_list WHERE author_id = (SELECT author_id FROM Author WHERE name = 'Kathleen McKeown')",
    "exec_result": 1
  },
  {
    "idx": 1032,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1033,
    "db_id": "aan_1",
    "question": "",
    "gold": "select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = \"mckeown ,  kathleen\" group by t2.author_id order by count(*) desc limit 1",
    "pred": "SELECT A.name, COUNT(*) as num_papers FROM Author_list AS AL JOIN Author AS A ON AL.author_id = A.author_id JOIN Paper AS P ON AL.paper_id = P.paper_id WHERE A.name = 'Mckeown, Kathleen' GROUP BY A.name ORDER BY num_papers DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1034,
    "db_id": "aan_1",
    "question": "",
    "gold": "select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = \"mckeown ,  kathleen\" group by t2.author_id order by count(*) desc limit 1",
    "pred": "SELECT A.name FROM Author A WHERE A.author_id IN ( SELECT AL.author_id FROM Author_list AL WHERE AL.affiliation_id IN ( SELECT Affiliation.affiliation_id FROM Affiliation WHERE Affiliation.name = 'Mckeown, Kathleen' ) ) GROUP BY A.author_id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1035,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id FROM Paper WHERE title LIKE \"%translation%\"",
    "pred": "SELECT paper_id FROM Paper WHERE title LIKE '%translation%'",
    "exec_result": 1
  },
  {
    "idx": 1036,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id FROM Paper WHERE title LIKE \"%translation%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1037,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)",
    "pred": "SELECT Paper.paper_id, Paper.title FROM Paper WHERE Paper.paper_id NOT IN (SELECT Citation.cited_paper_id FROM Citation)",
    "exec_result": 1
  },
  {
    "idx": 1038,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)",
    "pred": "SELECT Paper.paper_id, Paper.title FROM Paper WHERE Paper.paper_id NOT IN (SELECT Citation.cited_paper_id FROM Citation)",
    "exec_result": 1
  },
  {
    "idx": 1039,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE \"%China%\" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Affiliation.name, COUNT(DISTINCT Paper.paper_id) as num_papers FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Affiliation.address LIKE '%China%' GROUP BY Affiliation.name ORDER BY num_papers DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1040,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE \"%China%\" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1041,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR",
    "pred": "SELECT Year, COUNT(DISTINCT Paper_id) as Number_of_Papers FROM Paper GROUP BY Year",
    "exec_result": 0
  },
  {
    "idx": 1042,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR",
    "pred": "SELECT Venue, Year, COUNT(*) as NumberOfPapers FROM Paper GROUP BY Venue, Year",
    "exec_result": 1
  },
  {
    "idx": 1043,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id",
    "pred": "SELECT Affiliation.name, COUNT(DISTINCT Paper.paper_id) as total_papers FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Affiliation.name",
    "exec_result": 0
  },
  {
    "idx": 1044,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id",
    "pred": "SELECT Affiliation.name, COUNT(DISTINCT Paper.paper_id) as NumberOfPapers FROM Affiliation JOIN Author_list ON Affiliation.affiliation_id = Author_list.affiliation_id JOIN Paper ON Author_list.paper_id = Paper.paper_id GROUP BY Affiliation.name;",
    "exec_result": 0
  },
  {
    "idx": 1045,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50",
    "pred": "SELECT Paper.title FROM Paper JOIN ( SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(cited_paper_id) > 50 ) AS Citations ON Paper.paper_id = Citations.paper_id",
    "exec_result": 0
  },
  {
    "idx": 1046,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50",
    "pred": "SELECT title FROM Paper WHERE paper_id IN ( SELECT paper_id FROM Citation GROUP BY paper_id HAVING COUNT(cited_paper_id) > 50 )",
    "exec_result": 0
  },
  {
    "idx": 1047,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)",
    "pred": "SELECT COUNT(DISTINCT Author.name) as num_authors FROM Author WHERE Author.author_id NOT IN ( SELECT DISTINCT Author_list.author_id FROM Author_list LEFT JOIN Citation ON Author_list.paper_id = Citation.cited_paper_id GROUP BY Author_list.author_id HAVING COUNT(Citation.cited_paper_id) > 50 )",
    "exec_result": 0
  },
  {
    "idx": 1048,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)",
    "pred": "SELECT COUNT(DISTINCT Author.name) as num_authors FROM Author WHERE Author.author_id NOT IN ( SELECT Author_list.author_id FROM Author_list INNER JOIN Paper ON Author_list.paper_id = Paper.paper_id WHERE Paper.citations > 50 )",
    "exec_result": 0
  },
  {
    "idx": 1049,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"NAACL\" AND T2.year  =  2009)",
    "pred": "SELECT DISTINCT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue IN ('ACL', 'NAACL') AND P.year = 2009;",
    "exec_result": 0
  },
  {
    "idx": 1050,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"NAACL\" AND T2.year  =  2009)",
    "pred": "SELECT DISTINCT A.name FROM Author A JOIN Author_list AL ON A.author_id = AL.author_id JOIN Paper P ON AL.paper_id = P.paper_id JOIN Affiliation AF ON AL.affiliation_id = AF.affiliation_id WHERE P.year = 2009 AND (P.venue = 'NAACL' OR P.venue = 'ACL');",
    "exec_result": 0
  },
  {
    "idx": 1051,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\")",
    "pred": "SELECT A.name FROM Author A WHERE A.author_id NOT IN ( SELECT AL.author_id FROM Author_list AL JOIN Affiliation AA ON AL.affiliation_id = AA.affiliation_id WHERE AA.name = 'Google Inc.' AND AL.venue = 'ACL' );",
    "exec_result": 0
  },
  {
    "idx": 1052,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\")",
    "pred": "SELECT DISTINCT A.name FROM Author A WHERE A.author_id NOT IN ( SELECT AL.author_id FROM Author_list AL WHERE AL.affiliation_id = ( SELECT Affiliation.affiliation_id FROM Affiliation WHERE Affiliation.name = 'Google Inc.' ) AND AL.paper_id IN ( SELECT Paper.paper_id FROM Paper WHERE Paper.venue = 'ACL' ) );",
    "exec_result": 0
  },
  {
    "idx": 1053,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM conference",
    "pred": "SELECT COUNT(*) FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1054,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM conference",
    "pred": "SELECT COUNT(*) FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1055,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT conference_name FROM conference",
    "pred": "SELECT DISTINCT `Conference_Name` FROM `conference`",
    "exec_result": 1
  },
  {
    "idx": 1056,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT conference_name FROM conference",
    "pred": "SELECT `Conference_Name` FROM `conference` WHERE `Conference_Name` NOT LIKE '%(defunct%)%'",
    "exec_result": 1
  },
  {
    "idx": 1057,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  YEAR ,  LOCATION FROM conference",
    "pred": "SELECT `Conference_Name`, `Year`, `Location` FROM `conference`",
    "exec_result": 1
  },
  {
    "idx": 1058,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  YEAR ,  LOCATION FROM conference",
    "pred": "SELECT `Conference_Name`, `Year`, `Location` FROM `conference`",
    "exec_result": 1
  },
  {
    "idx": 1059,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name",
    "pred": "SELECT `Conference_Name`, COUNT(*) as `Number_of_Conferences` FROM `conference` JOIN `conference_participation` ON `conference`.`Conference_ID` = `conference_participation`.`Conference_ID` GROUP BY `Conference_Name`",
    "exec_result": 0
  },
  {
    "idx": 1060,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name",
    "pred": "SELECT `Conference_Name`, COUNT(*) as `Number of Occurrences` FROM `conference` JOIN `conference_participation` ON `conference`.`Conference_ID` = `conference_participation`.`Conference_ID` GROUP BY `Conference_Name`",
    "exec_result": 0
  },
  {
    "idx": 1061,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR",
    "pred": "SELECT `Year`, COUNT(*) FROM conference GROUP BY `Year`",
    "exec_result": 1
  },
  {
    "idx": 1062,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR",
    "pred": "SELECT COUNT(*) as Number_of_Conferences, Year FROM conference GROUP BY Year",
    "exec_result": 1
  },
  {
    "idx": 1063,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1",
    "pred": "SELECT Year FROM conference GROUP BY Year ORDER BY COUNT(*) LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1064,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1",
    "pred": "SELECT MIN(Year) FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1065,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2",
    "pred": "SELECT T1.`Location` FROM institution AS T1 JOIN staff AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` JOIN conference_participation AS T3 ON T2.`staff_ID` = T3.`staff_ID` JOIN conference AS T4 ON T3.`Conference_ID` = T4.`Conference_ID` GROUP BY T1.`Location` HAVING COUNT(DISTINCT T4.`Conference_ID`) >= 2",
    "exec_result": 0
  },
  {
    "idx": 1066,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2",
    "pred": "SELECT T1.`Location` FROM institution AS T1 JOIN staff AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` JOIN conference_participation AS T3 ON T2.`staff_ID` = T3.`staff_ID` JOIN conference AS T4 ON T3.`Conference_ID` = T4.`Conference_ID` GROUP BY T1.`Location` HAVING COUNT(DISTINCT T4.`Conference_ID`) >= 2",
    "exec_result": 0
  },
  {
    "idx": 1067,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION ,  founded FROM institution",
    "pred": "SELECT `Institution_Name`, `Location`, `Founded` FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1068,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION ,  founded FROM institution",
    "pred": "SELECT `Institution_Name`, `Location`, `Founded` FROM `institution`",
    "exec_result": 1
  },
  {
    "idx": 1069,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900",
    "pred": "SELECT COUNT(*) FROM institution WHERE `Founded` BETWEEN 1850 AND 1900;",
    "exec_result": 1
  },
  {
    "idx": 1070,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900",
    "pred": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900",
    "exec_result": 1
  },
  {
    "idx": 1071,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1",
    "pred": "SELECT `Institution_Name`, `Location` FROM institution ORDER BY `Founded` DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1072,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1",
    "pred": "SELECT `Institution_Name`, `Location` FROM institution ORDER BY `Founded` DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1073,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.institution_name ,  count(*) FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1800 GROUP BY T2.institution_id",
    "pred": "SELECT T1.`Institution_Name`, COUNT(*) FROM institution AS T1 JOIN staff AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` WHERE T2.`Founded` > 1800 GROUP BY T1.`Institution_ID`",
    "exec_result": 0
  },
  {
    "idx": 1074,
    "db_id": "conference",
    "question": "",
    "gold": "select t1.institution_name ,  count(*) from institution as t1 join staff as t2 on t1.institution_id  =  t2.institution_id where t1.founded  >  1800 group by t2.institution_id",
    "pred": "SELECT institution.Institution_ID, institution.Institution_Name, COUNT(staff.staff_ID) as Number_of_Staff FROM institution JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE institution.Founded > 1800 GROUP BY institution.Institution_ID",
    "exec_result": 0
  },
  {
    "idx": 1075,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)",
    "pred": "SELECT institution.Institution_Name FROM institution LEFT JOIN staff ON institution.Institution_ID = staff.Institution_ID WHERE staff.Institution_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1076,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1077,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)",
    "pred": "SELECT `name` FROM `staff` WHERE `Age` > (SELECT AVG(`Age`) FROM `staff`)",
    "exec_result": 1
  },
  {
    "idx": 1078,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)",
    "pred": "SELECT `name` FROM `staff` WHERE `Age` > (SELECT AVG(`Age`) FROM `staff`);",
    "exec_result": 1
  },
  {
    "idx": 1079,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT max(age) ,  min(age) FROM staff",
    "pred": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM staff WHERE Nationality = 'United States'",
    "exec_result": 0
  },
  {
    "idx": 1080,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT max(age) ,  min(age) FROM staff",
    "pred": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM staff;",
    "exec_result": 1
  },
  {
    "idx": 1081,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  \"Canada\"",
    "pred": "SELECT `Conference_Name` FROM `conference` INNER JOIN `conference_participation` ON `conference`.`Conference_ID` = `conference_participation`.`Conference_ID` INNER JOIN `staff` ON `conference_participation`.`staff_ID` = `staff`.`staff_ID` WHERE `staff`.`Nationality` = 'Canada'",
    "exec_result": 1
  },
  {
    "idx": 1082,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  \"Canada\"",
    "pred": "SELECT DISTINCT c.Conference_Name FROM conference c JOIN conference_participation cp ON c.Conference_ID = cp.Conference_ID JOIN staff s ON cp.staff_ID = s.staff_ID WHERE s.Nationality = 'Canada'",
    "exec_result": 1
  },
  {
    "idx": 1083,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'",
    "pred": "SELECT T1.`name` FROM staff AS T1 JOIN conference_participation AS T2 ON T1.`staff_ID` = T2.`staff_ID` WHERE T2.`role` = 'Speaker' AND T2.`role` = 'Sponsor' GROUP BY T1.`staff_ID` HAVING COUNT(DISTINCT T2.`role`) = 2",
    "exec_result": 0
  },
  {
    "idx": 1084,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'",
    "pred": "SELECT staff.name FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID WHERE conference_participation.role IN ('Speaker', 'Sponsor') GROUP BY staff.name HAVING COUNT(DISTINCT conference_participation.role) = 2;",
    "exec_result": 1
  },
  {
    "idx": 1085,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'",
    "pred": "SELECT s.name FROM staff AS s JOIN institution AS i ON s.Institution_ID = i.Institution_ID JOIN conference_participation AS cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IN (SELECT Conference_ID FROM conference WHERE Conference_Name IN ('ACL', 'Naccl')) GROUP BY s.name;",
    "exec_result": 0
  },
  {
    "idx": 1086,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'",
    "pred": "SELECT DISTINCT staff.name FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE conference.Conference_Name IN ('ACL', 'NACCL')",
    "exec_result": 0
  },
  {
    "idx": 1087,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004",
    "pred": "SELECT staff.name FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE conference.Year IN (2003, 2004)",
    "exec_result": 1
  },
  {
    "idx": 1088,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004",
    "pred": "SELECT staff.name FROM staff JOIN conference_participation ON staff.staff_ID = conference_participation.staff_ID JOIN conference ON conference_participation.Conference_ID = conference.Conference_ID WHERE conference.Year BETWEEN 2003 AND 2004;",
    "exec_result": 1
  },
  {
    "idx": 1089,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id",
    "pred": "SELECT T1.`Conference_Name`, T1.`Year`, COUNT(*) FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` GROUP BY T1.`Conference_ID`",
    "exec_result": 1
  },
  {
    "idx": 1090,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id",
    "pred": "SELECT T1.`Conference_Name`, T1.`Year`, COUNT(DISTINCT T2.`staff_ID`) AS `Number_of_Participants` FROM conference AS T1 JOIN conference_participation AS T2 ON T1.`Conference_ID` = T2.`Conference_ID` GROUP BY T1.`Conference_ID`",
    "exec_result": 1
  },
  {
    "idx": 1091,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT C.`Conference_Name`, COUNT(*) as Attendants_Count FROM conference_participation AS CP JOIN conference AS C ON CP.`Conference_ID` = C.`Conference_ID` GROUP BY C.`Conference_ID` ORDER BY Attendants_Count DESC LIMIT 2",
    "exec_result": 0
  },
  {
    "idx": 1092,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT c.`Conference_Name` FROM conference AS c JOIN ( SELECT cp.`Conference_ID`, COUNT(*) AS `Attendance` FROM conference_participation AS cp GROUP BY cp.`Conference_ID` ORDER BY `Attendance` DESC LIMIT 2 ) AS top_conferences ON c.`Conference_ID` = top_conferences.`Conference_ID`",
    "exec_result": 1
  },
  {
    "idx": 1093,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  \"ACL\")",
    "pred": "SELECT `name`, `nationality` FROM staff WHERE `Institution_ID` IN ( SELECT `Institution_ID` FROM institution WHERE `Institution_Name` = 'Illinois State University' ) AND `staff_ID` NOT IN ( SELECT `staff_ID` FROM conference_participation WHERE `Conference_ID` IN ( SELECT `Conference_ID` FROM conference WHERE `Conference_Name` = 'ACL' ) )",
    "exec_result": 0
  },
  {
    "idx": 1094,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  \"ACL\")",
    "pred": "SELECT `name`, `nationality` FROM staff WHERE Institution_ID = (SELECT Institution_ID FROM institution WHERE Institution_Name = 'Illinois State University') AND staff_ID NOT IN (SELECT staff_ID FROM conference_participation WHERE Conference_ID = (SELECT Conference_ID FROM conference WHERE Conference_Name = 'ACL'));",
    "exec_result": 0
  },
  {
    "idx": 1095,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)",
    "pred": "SELECT `Institution_Name`, `Location` FROM institution WHERE `Institution_ID` NOT IN ( SELECT `Institution_ID` FROM `conference_participation` WHERE `Conference_ID` IN ( SELECT `Conference_ID` FROM `conference` WHERE `Year` = 2004 ) )",
    "exec_result": 0
  },
  {
    "idx": 1096,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)",
    "pred": "SELECT `Institution_Name`, `Location` FROM institution WHERE `Institution_ID` NOT IN ( SELECT DISTINCT `Institution_ID` FROM conference_participation WHERE `Conference_ID` IN ( SELECT `Conference_ID` FROM conference WHERE `Year` = 2004 ) )",
    "exec_result": 0
  },
  {
    "idx": 1097,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1",
    "pred": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1098,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1",
    "pred": "SELECT `pilot_name` FROM `PilotSkills` ORDER BY `age` ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1099,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age",
    "exec_result": 1
  },
  {
    "idx": 1100,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age < (SELECT AVG(age) FROM PilotSkills) ORDER BY age ASC",
    "exec_result": 1
  },
  {
    "idx": 1101,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT * FROM PilotSkills WHERE age  <  30",
    "pred": "SELECT `pilot_name` FROM `PilotSkills` WHERE `age` < 30",
    "exec_result": 0
  },
  {
    "idx": 1102,
    "db_id": "pilot_1",
    "question": "",
    "gold": "select * from pilotskills where age  <  30",
    "pred": "SELECT * FROM PilotSkills WHERE age < 30",
    "exec_result": 1
  },
  {
    "idx": 1103,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age < 35",
    "exec_result": 1
  },
  {
    "idx": 1104,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'",
    "pred": "SELECT PilotSkills.pilot_name, Hangar.location FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age < 35 AND Hangar.plane_name = 'Piper Cub'",
    "exec_result": 0
  },
  {
    "idx": 1105,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'",
    "pred": "SELECT location FROM Hangar WHERE plane_name = 'F-14 Fighter';",
    "exec_result": 1
  },
  {
    "idx": 1106,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'",
    "pred": "SELECT Hangar.location FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.plane_name = 'F-14 Fighter'",
    "exec_result": 0
  },
  {
    "idx": 1107,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM hangar",
    "pred": "SELECT COUNT(DISTINCT location) as NumberOfDifferentLocations FROM Hangar",
    "exec_result": 1
  },
  {
    "idx": 1108,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM hangar",
    "pred": "SELECT COUNT(DISTINCT location) FROM Hangar",
    "exec_result": 1
  },
  {
    "idx": 1109,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32",
    "pred": "SELECT plane_name FROM PilotSkills WHERE pilot_name = 'Jones' AND age = 32;",
    "exec_result": 1
  },
  {
    "idx": 1110,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32",
    "pred": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Jones' AND PilotSkills.age = 32;",
    "exec_result": 1
  },
  {
    "idx": 1111,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  >  40",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1112,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  >  40",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40",
    "exec_result": 1
  },
  {
    "idx": 1113,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1114,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'",
    "pred": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE pilot_name LIKE '%B-52%' AND age < 35",
    "exec_result": 0
  },
  {
    "idx": 1115,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age = (SELECT MIN(age) FROM PilotSkills);",
    "exec_result": 1
  },
  {
    "idx": 1116,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1",
    "pred": "SELECT ps.pilot_name FROM PilotSkills ps JOIN Hangar h ON ps.plane_name = h.plane_name WHERE h.location = 'Piper Cub' ORDER BY ps.age ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1117,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT plane_name FROM Hangar WHERE location = ( SELECT location FROM Hangar GROUP BY location ORDER BY COUNT(*) DESC LIMIT 1 );",
    "exec_result": 0
  },
  {
    "idx": 1118,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Hangar.plane_name, COUNT(PilotSkills.plane_name) as flight_count FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name ORDER BY flight_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1119,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1",
    "pred": "SELECT plane_name FROM Hangar WHERE plane_name NOT IN (SELECT plane_name FROM PilotSkills) ORDER BY plane_name LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1120,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1",
    "pred": "SELECT plane_name FROM Hangar WHERE plane_name NOT IN (SELECT plane_name FROM PilotSkills)",
    "exec_result": 0
  },
  {
    "idx": 1121,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Chicago')",
    "exec_result": 1
  },
  {
    "idx": 1122,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'",
    "pred": "SELECT COUNT(*) FROM PilotSkills PS JOIN Hangar H ON PS.plane_name = H.plane_name WHERE H.location = 'Chicago'",
    "exec_result": 1
  },
  {
    "idx": 1123,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41",
    "pred": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age = 41;",
    "exec_result": 1
  },
  {
    "idx": 1124,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41",
    "pred": "SELECT Hangar.plane_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Smith' AND PilotSkills.age = 41",
    "exec_result": 1
  },
  {
    "idx": 1125,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT plane_name) FROM pilotskills",
    "pred": "SELECT COUNT(DISTINCT plane_name) FROM Hangar",
    "exec_result": 0
  },
  {
    "idx": 1126,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT plane_name) FROM pilotskills",
    "pred": "SELECT COUNT(DISTINCT plane_name) FROM PilotSkills",
    "exec_result": 1
  },
  {
    "idx": 1127,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'",
    "pred": "SELECT COUNT(*) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.pilot_name = 'Smith'",
    "exec_result": 1
  },
  {
    "idx": 1128,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'",
    "pred": "SELECT COUNT(DISTINCT pilot_name) FROM PilotSkills INNER JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE pilot_name = 'Smith'",
    "exec_result": 1
  },
  {
    "idx": 1129,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE age  >  40",
    "pred": "SELECT COUNT(*) FROM Hangar WHERE plane_name IN (SELECT pilot_name FROM PilotSkills WHERE age > 40)",
    "exec_result": 0
  },
  {
    "idx": 1130,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE age  >  40",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40",
    "exec_result": 1
  },
  {
    "idx": 1131,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;",
    "exec_result": 1
  },
  {
    "idx": 1132,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age BETWEEN 30 AND 40 ORDER BY age ASC;",
    "exec_result": 1
  },
  {
    "idx": 1133,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills ORDER BY age DESC",
    "pred": "SELECT `pilot_name` FROM PilotSkills ORDER BY age DESC",
    "exec_result": 1
  },
  {
    "idx": 1134,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills ORDER BY age DESC",
    "pred": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC;",
    "exec_result": 1
  },
  {
    "idx": 1135,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar ORDER BY plane_name",
    "pred": "SELECT Hangar.`location` FROM Hangar ORDER BY Hangar.`plane_name`",
    "exec_result": 1
  },
  {
    "idx": 1136,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar ORDER BY plane_name",
    "pred": "SELECT Hangar.location, COUNT(*) as NumberOfPlanes FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.location ORDER BY NumberOfPlanes DESC;",
    "exec_result": 0
  },
  {
    "idx": 1137,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name",
    "pred": "SELECT DISTINCT plane_name FROM PilotSkills ORDER BY plane_name;",
    "exec_result": 1
  },
  {
    "idx": 1138,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name",
    "pred": "SELECT DISTINCT plane_name FROM Hangar ORDER BY plane_name ASC;",
    "exec_result": 0
  },
  {
    "idx": 1139,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30;",
    "exec_result": 0
  },
  {
    "idx": 1140,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > 40 OR age < 30",
    "exec_result": 0
  },
  {
    "idx": 1141,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30",
    "pred": "SELECT pilot_name, age FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age > 35 UNION SELECT pilot_name, age FROM PilotSkills WHERE plane_name = 'F-14 Fighter' AND age < 30;",
    "exec_result": 1
  },
  {
    "idx": 1142,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30",
    "pred": "SELECT pilot_name, age FROM PilotSkills WHERE plane_name = 'Piper Cub' AND age > 35 UNION SELECT pilot_name, age FROM PilotSkills WHERE plane_name = 'F-14 Fighter' AND age < 30",
    "exec_result": 1
  },
  {
    "idx": 1143,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' AND pilot_name NOT IN (SELECT pilot_name FROM PilotSkills WHERE plane_name = 'B-52 Bomber')",
    "exec_result": 1
  },
  {
    "idx": 1144,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT T1.`pilot_name` FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.`plane_name` = T2.`plane_name` WHERE T2.`location` = 'Piper Cub' AND T1.`plane_name` != 'B-52 Bomber'",
    "exec_result": 0
  },
  {
    "idx": 1145,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'B-52 Bomber')",
    "exec_result": 0
  },
  {
    "idx": 1146,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT P.pilot_name, P.plane_name, P.age FROM PilotSkills P JOIN Hangar H ON P.plane_name = H.plane_name WHERE H.location IN ('Seattle', 'Chicago', 'Boston', 'Austin') GROUP BY P.pilot_name, P.plane_name, P.age HAVING COUNT(DISTINCT P.plane_name) = 2",
    "exec_result": 0
  },
  {
    "idx": 1147,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) FROM pilotskills",
    "pred": "SELECT AVG(age) AS average_age, MIN(age) AS smallest_age FROM PilotSkills;",
    "exec_result": 1
  },
  {
    "idx": 1148,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) FROM pilotskills",
    "pred": "SELECT AVG(age) as average_age, MIN(age) as min_age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name",
    "exec_result": 0
  },
  {
    "idx": 1149,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  \"Boston\"",
    "pred": "SELECT DISTINCT PilotSkills.pilot_name FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE Hangar.location IN ('Austin', 'Boston');",
    "exec_result": 0
  },
  {
    "idx": 1150,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  \"Boston\"",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Austin' OR location = 'Boston')",
    "exec_result": 0
  },
  {
    "idx": 1151,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'F-14 Fighter')",
    "exec_result": 1
  },
  {
    "idx": 1152,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE plane_name IN ('Piper Cub', 'F-14 Fighter');",
    "exec_result": 1
  },
  {
    "idx": 1153,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT Hangar.plane_name, AVG(PilotSkills.age) as average_age FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name;",
    "exec_result": 0
  },
  {
    "idx": 1154,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT `plane_name`, AVG(`age`) FROM `PilotSkills` GROUP BY `plane_name`",
    "exec_result": 1
  },
  {
    "idx": 1155,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT Hangar.location, COUNT(PilotSkills.plane_name) FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name GROUP BY Hangar.location;",
    "exec_result": 0
  },
  {
    "idx": 1156,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT `plane_name`, COUNT(*) FROM `Hangar` GROUP BY `plane_name`",
    "exec_result": 0
  },
  {
    "idx": 1157,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name",
    "pred": "SELECT Hangar.`plane_name`, MAX(PilotSkills.`age`) AS `oldest_age` FROM Hangar JOIN PilotSkills ON Hangar.`plane_name` = PilotSkills.`plane_name` GROUP BY Hangar.`plane_name` ORDER BY Hangar.`plane_name`",
    "exec_result": 0
  },
  {
    "idx": 1158,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name",
    "pred": "SELECT Hangar.plane_name, MAX(PilotSkills.age) AS oldest_age, PilotSkills.pilot_name FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY Hangar.plane_name ORDER BY Hangar.plane_name;",
    "exec_result": 0
  },
  {
    "idx": 1159,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT pilot_name, MIN(age) as oldest_age FROM PilotSkills GROUP BY plane_name",
    "exec_result": 0
  },
  {
    "idx": 1160,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT H.`plane_name`, P.`pilot_name`, P.`age` FROM PilotSkills AS P JOIN Hangar AS H ON P.`plane_name` = H.`plane_name` ORDER BY P.`age` DESC",
    "exec_result": 0
  },
  {
    "idx": 1161,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name",
    "pred": "SELECT pilot_name, MAX(age) FROM PilotSkills GROUP BY pilot_name",
    "exec_result": 1
  },
  {
    "idx": 1162,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name",
    "pred": "SELECT pilot_name, MAX(age) as max_age FROM PilotSkills GROUP BY pilot_name;",
    "exec_result": 1
  },
  {
    "idx": 1163,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location",
    "pred": "SELECT T1.`pilot_name`, COUNT(*) as `Number of Pilots`, AVG(T1.`age`) as `Average Age` FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.`plane_name` = T2.`plane_name` GROUP BY T1.`pilot_name`",
    "exec_result": 0
  },
  {
    "idx": 1164,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location",
    "pred": "SELECT location, COUNT(pilot_name), AVG(age) FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name GROUP BY location;",
    "exec_result": 1
  },
  {
    "idx": 1165,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE pilot_name IN ( SELECT pilot_name FROM ( SELECT pilot_name FROM PilotSkills WHERE plane_name IN ( SELECT plane_name FROM Hangar ) GROUP BY pilot_name HAVING AVG(age) < 35 ) )",
    "exec_result": 0
  },
  {
    "idx": 1166,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35",
    "pred": "SELECT Hangar.plane_name, COUNT(PilotSkills.pilot_name) as num_pilots FROM Hangar JOIN PilotSkills ON Hangar.plane_name = PilotSkills.plane_name WHERE PilotSkills.age < 35 GROUP BY Hangar.plane_name;",
    "exec_result": 0
  },
  {
    "idx": 1167,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)",
    "pred": "SELECT Hangar.location, PilotSkills.pilot_name, PilotSkills.plane_name, PilotSkills.age FROM PilotSkills JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.age = (SELECT MIN(age) FROM PilotSkills)",
    "exec_result": 0
  },
  {
    "idx": 1168,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)",
    "pred": "SELECT location FROM Hangar WHERE plane_name = (SELECT pilot_name FROM PilotSkills ORDER BY age ASC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 1169,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\"",
    "pred": "SELECT pilot_name, age FROM PilotSkills WHERE plane_name IN (SELECT plane_name FROM Hangar WHERE location = 'Austin')",
    "exec_result": 1
  },
  {
    "idx": 1170,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\"",
    "pred": "SELECT pilot_name, age FROM PilotSkills INNER JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE location = 'Austin';",
    "exec_result": 1
  },
  {
    "idx": 1171,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name",
    "pred": "SELECT ps1.`pilot_name` FROM PilotSkills AS ps1 JOIN Hangar AS h1 ON ps1.`plane_name` = h1.`plane_name` WHERE ps1.`age` > (SELECT ps2.`age` FROM PilotSkills AS ps2 WHERE ps2.`plane_name` = 'Piper Cub') ORDER BY ps1.`pilot_name`",
    "exec_result": 0
  },
  {
    "idx": 1172,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age > (SELECT age FROM PilotSkills WHERE plane_name = 'Piper Cub') ORDER BY pilot_name ASC;",
    "exec_result": 1
  },
  {
    "idx": 1173,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age < (SELECT age FROM PilotSkills WHERE plane_name = 'F-14 Fighter')",
    "exec_result": 0
  },
  {
    "idx": 1174,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age < (SELECT MIN(age) FROM PilotSkills WHERE plane_name = 'F-14')",
    "exec_result": 0
  },
  {
    "idx": 1175,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'",
    "pred": "SELECT DISTINCT plane_name FROM Hangar WHERE plane_name LIKE '%Bomber%'",
    "exec_result": 0
  },
  {
    "idx": 1176,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'",
    "pred": "SELECT plane_name FROM Hangar WHERE plane_name LIKE '%Bomber%';",
    "exec_result": 0
  },
  {
    "idx": 1177,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > (SELECT age FROM PilotSkills WHERE plane_name = 'Piper Cub')",
    "exec_result": 1
  },
  {
    "idx": 1178,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')",
    "pred": "SELECT COUNT(*) FROM PilotSkills WHERE age > ( SELECT age FROM PilotSkills WHERE pilot_name = 'Piper Cub' )",
    "exec_result": 0
  },
  {
    "idx": 1179,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM district ORDER BY Area_km DESC LIMIT 1",
    "pred": "SELECT Name FROM district WHERE Area_km = (SELECT MAX(Area_km) FROM district)",
    "exec_result": 1
  },
  {
    "idx": 1180,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT area_km ,  Government_website FROM district ORDER BY Population LIMIT 1",
    "pred": "SELECT `Area_km`, `Government_website` FROM `district` WHERE `Population` = (SELECT MIN(`Population`) FROM `district`)",
    "exec_result": 1
  },
  {
    "idx": 1181,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  population FROM district WHERE area_km  >  (SELECT avg(area_km) FROM district)",
    "pred": "SELECT `Name`, `Points` FROM spokesman WHERE `Points` = (SELECT MAX(`Points`) FROM spokesman)",
    "exec_result": 0
  },
  {
    "idx": 1182,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT max(area_km) ,  avg(area_km) FROM district",
    "pred": "SELECT MAX(Area_km) as Biggest_Area, AVG(Area_km) as Average_Area FROM district",
    "exec_result": 1
  },
  {
    "idx": 1183,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT sum(population) FROM district ORDER BY area_km DESC LIMIT 3",
    "pred": "SELECT SUM(d.`Population`) FROM district AS d JOIN ( SELECT sd.`District_ID` FROM spokesman_district AS sd JOIN spokesman AS sp ON sd.`Spokesman_ID` = sp.`Spokesman_ID` WHERE sp.`Speach_title` = 'Public Health' ) AS top_speakers ON d.`District_ID` = top_speakers.`District_ID` ORDER BY d.`Area_km` DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1184,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  Government_website ,  district_id FROM district ORDER BY Population",
    "pred": "SELECT T1.`District_ID`, T1.`Name`, T1.`Government_website` FROM district AS T1 ORDER BY T1.`Population`",
    "exec_result": 1
  },
  {
    "idx": 1185,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM district WHERE Government_website LIKE \"%gov%\"",
    "pred": "SELECT D.Name FROM district AS D JOIN spokesman_district AS SD ON D.District_ID = SD.District_ID JOIN spokesman AS S ON SD.Spokesman_ID = S.Spokesman_ID WHERE D.Government_website LIKE '%gov%'",
    "exec_result": 0
  },
  {
    "idx": 1186,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT district_id ,  name FROM district WHERE area_km  >  3000 OR population  >  4000",
    "pred": "SELECT `District_ID`, `Name` FROM `district` WHERE `Population` > 4000 OR `Area_km` > 3000",
    "exec_result": 1
  },
  {
    "idx": 1187,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  speach_title FROM spokesman",
    "pred": "SELECT `Name`, `Speach_title` FROM spokesman",
    "exec_result": 1
  },
  {
    "idx": 1188,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT avg(points) ,  avg(age) FROM spokesman WHERE rank_position  =  1",
    "pred": "SELECT AVG(Points) AS Average_Points, AVG(Age) AS Average_Age FROM spokesman WHERE Rank_position = 1",
    "exec_result": 1
  },
  {
    "idx": 1189,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  points FROM spokesman WHERE age  <  40",
    "pred": "SELECT `Name`, `Points` FROM spokesman WHERE Age < 40",
    "exec_result": 1
  },
  {
    "idx": 1190,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman ORDER BY age DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1191,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman WHERE points  <  (SELECT avg(points) FROM spokesman)",
    "pred": "SELECT `Name` FROM spokesman WHERE `Points` < (SELECT AVG(`Points`) FROM spokesman);",
    "exec_result": 1
  },
  {
    "idx": 1192,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.`Name`, COUNT(*) FROM district AS T1 JOIN spokesman_district AS T2 ON T1.`District_ID` = T2.`District_ID` JOIN spokesman AS T3 ON T2.`Spokesman_ID` = T3.`Spokesman_ID` GROUP BY T1.`District_ID` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1193,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID WHERE t2.start_year  <  2004",
    "pred": "SELECT `Name` FROM spokesman WHERE Spokesman_ID IN ( SELECT Spokesman_ID FROM spokesman_district WHERE Start_year < '2004' )",
    "exec_result": 1
  },
  {
    "idx": 1194,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name ,  count(*) FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID",
    "pred": "SELECT D.`Name`, COUNT(*) FROM district AS D JOIN spokesman_district AS SD ON D.`District_ID` = SD.`District_ID` GROUP BY D.`District_ID`",
    "exec_result": 1
  },
  {
    "idx": 1195,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  1 INTERSECT SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  2",
    "pred": "SELECT D.`Name` FROM district AS D WHERE EXISTS ( SELECT 1 FROM spokesman_district AS SD1 WHERE SD1.`District_ID` = D.`District_ID` AND EXISTS ( SELECT 1 FROM spokesman_district AS SD2 WHERE SD2.`District_ID` = D.`District_ID` AND SD2.`Start_year` = ( SELECT MIN(SD3.`Start_year`) FROM spokesman_district AS SD3 WHERE SD3.`Spokesman_ID` = SD1.`Spokesman_ID` ) ) AND ( SELECT COUNT(*) FROM spokesman_district AS SD4 WHERE SD4.`District_ID` = D.`District_ID` AND SD4.`Start_year` = ( SELECT MIN(SD5.`Start_year`) FROM spokesman_district AS SD5 WHERE SD5.`Spokesman_ID` IN ( SELECT SD6.`Spokesman_ID` FROM spokesman_district AS SD6 WHERE SD6.`District_ID` = D.`District_ID` ) ) ) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 1196,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID HAVING count(*)  >  1",
    "pred": "SELECT D.`Name` FROM `district` AS D JOIN (SELECT `District_ID` FROM `spokesman_district` GROUP BY `District_ID` HAVING COUNT(`Spokesman_ID`) > 1) AS SD ON D.`District_ID` = SD.`District_ID`",
    "exec_result": 1
  },
  {
    "idx": 1197,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT count(*) FROM district WHERE district_id NOT IN (SELECT district_id FROM spokesman_district)",
    "pred": "SELECT COUNT(DISTINCT T1.`District_ID`) FROM district AS T1 LEFT JOIN spokesman_district AS T2 ON T1.`District_ID` = T2.`District_ID` WHERE T2.`District_ID` IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1198,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman WHERE Spokesman_ID NOT IN (SELECT Spokesman_ID FROM spokesman_district)",
    "pred": "SELECT `Name` FROM spokesman WHERE `Spokesman_ID` NOT IN (SELECT `Spokesman_ID` FROM spokesman_district)",
    "exec_result": 1
  },
  {
    "idx": 1199,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT sum(population) ,  avg(population) FROM district WHERE district_id IN (SELECT district_id FROM spokesman_district)",
    "pred": "SELECT SUM(Districts.Population), AVG(Districts.Population) FROM district AS Districts JOIN (SELECT Districts.District_ID FROM district AS Districts JOIN spokesman_district AS SpokesmanDistricts ON Districts.District_ID = SpokesmanDistricts.District_ID GROUP BY Districts.District_ID) AS SpokesmanDistricts ON Districts.District_ID = SpokesmanDistricts.District_ID",
    "exec_result": 1
  },
  {
    "idx": 1200,
    "db_id": "art_1",
    "question": "",
    "gold": "select title from sculptures order by year desc limit 1",
    "pred": "SELECT title FROM Sculptures WHERE year = (SELECT MAX(year) FROM Sculptures)",
    "exec_result": 1
  },
  {
    "idx": 1201,
    "db_id": "art_1",
    "question": "",
    "gold": "select title from sculptures order by year desc limit 1",
    "pred": "SELECT title FROM Sculptures ORDER BY year DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1202,
    "db_id": "art_1",
    "question": "",
    "gold": "select title ,  location from paintings order by year limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1203,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1204,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\"",
    "pred": "SELECT `title` FROM `Sculptures` WHERE `location` = 'Gallery 226'",
    "exec_result": 1
  },
  {
    "idx": 1205,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\"",
    "pred": "SELECT title FROM Sculptures WHERE location = 'Gallery 226';",
    "exec_result": 1
  },
  {
    "idx": 1206,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM paintings",
    "pred": "SELECT Paintings.title, Paintings.location FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID",
    "exec_result": 1
  },
  {
    "idx": 1207,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM paintings",
    "pred": "SELECT title, location FROM Paintings WHERE title IN (SELECT title FROM Paintings WHERE location = 'Gallery 241')",
    "exec_result": 0
  },
  {
    "idx": 1208,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM sculptures",
    "pred": "SELECT `title`, `location` FROM `Sculptures`",
    "exec_result": 1
  },
  {
    "idx": 1209,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM sculptures",
    "pred": "SELECT title, location FROM Sculptures WHERE location IS NOT NULL;",
    "exec_result": 0
  },
  {
    "idx": 1210,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT medium FROM paintings WHERE paintingID  =  80",
    "pred": "SELECT `medium` FROM `Paintings` WHERE `paintingID` = 80;",
    "exec_result": 1
  },
  {
    "idx": 1211,
    "db_id": "art_1",
    "question": "",
    "gold": "select medium from paintings where paintingid  =  80",
    "pred": "SELECT Paintings.medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.paintingID = 80;",
    "exec_result": 1
  },
  {
    "idx": 1212,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850",
    "pred": "SELECT fname, lname FROM Artists WHERE birthYear > 1850",
    "exec_result": 1
  },
  {
    "idx": 1213,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850",
    "pred": "SELECT CONCAT(fname, ' ', lname) AS full_name FROM Artists WHERE birthYear > 1850",
    "exec_result": 0
  },
  {
    "idx": 1214,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  YEAR FROM sculptures WHERE LOCATION != \"Gallery 226\"",
    "pred": "SELECT `title`, `year` FROM `Sculptures` WHERE `location` != 'Gallery 226'",
    "exec_result": 1
  },
  {
    "idx": 1215,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  YEAR FROM sculptures WHERE LOCATION != \"Gallery 226\"",
    "pred": "SELECT title, year FROM Sculptures WHERE location != 'Gallery 226'",
    "exec_result": 1
  },
  {
    "idx": 1216,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900",
    "pred": "SELECT DISTINCT a.fname, a.lname FROM Artists a JOIN Sculptures s ON a.artistID = s.sculptorID WHERE s.year < 1900",
    "exec_result": 1
  },
  {
    "idx": 1217,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900",
    "pred": "SELECT DISTINCT A.fname, A.lname FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID WHERE S.year < 1900",
    "exec_result": 1
  },
  {
    "idx": 1218,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920",
    "pred": "SELECT DISTINCT birthYear FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE substr(strftime('%Y', Sculptures.year), 1, 4) > 1920",
    "exec_result": 0
  },
  {
    "idx": 1219,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920",
    "pred": "SELECT birthYear FROM Artists WHERE artistID IN ( SELECT artistID FROM Sculptures WHERE year > 1920 )",
    "exec_result": 0
  },
  {
    "idx": 1220,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "SELECT fname, lname FROM Artists WHERE birthYear = (SELECT MIN(birthYear) FROM Artists)",
    "exec_result": 0
  },
  {
    "idx": 1221,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1222,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1",
    "pred": "SELECT MIN(deathYear - birthYear) AS age_of_shortest_life FROM Artists;",
    "exec_result": 1
  },
  {
    "idx": 1223,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1224,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "SELECT A.fname, A.birthYear FROM Artists A JOIN Paintings P ON A.artistID = P.painterID JOIN Sculptures S ON A.artistID = S.sculptorID WHERE A.deathYear IS NULL GROUP BY A.artistID ORDER BY A.birthYear DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1225,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "SELECT `fname`, `birthYear` - `deathYear` AS `age` FROM `Artists` WHERE `deathYear` = (SELECT MIN(`birthYear`) FROM `Artists`);",
    "exec_result": 0
  },
  {
    "idx": 1226,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT COUNT(*) FROM Paintings WHERE location = 'Gallery 240'",
    "exec_result": 1
  },
  {
    "idx": 1227,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1228,
    "db_id": "art_1",
    "question": "",
    "gold": "select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1",
    "pred": "SELECT COUNT(*) FROM Paintings WHERE painterID IN ( SELECT artistID FROM Artists WHERE deathYear = (SELECT MAX(deathYear) FROM Artists) )",
    "exec_result": 1
  },
  {
    "idx": 1229,
    "db_id": "art_1",
    "question": "",
    "gold": "select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1",
    "pred": "SELECT COUNT(*) FROM Paintings WHERE painterID = (SELECT artistID FROM Artists WHERE birthYear = (SELECT MAX(birthYear) FROM Artists));",
    "exec_result": 1
  },
  {
    "idx": 1230,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"",
    "pred": "SELECT `Paintings`.`title`, `Paintings`.`year` FROM `Paintings` JOIN `Artists` ON `Paintings`.`painterID` = `Artists`.`artistID` WHERE `Artists`.`fname` = 'Mary'",
    "exec_result": 1
  },
  {
    "idx": 1231,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"",
    "pred": "SELECT P.title, P.year FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.fname = 'Mary'",
    "exec_result": 1
  },
  {
    "idx": 1232,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850",
    "pred": "SELECT `width_mm` FROM Paintings WHERE `year` < 1850 AND `painterID` IN ( SELECT `artistID` FROM Artists WHERE `birthYear` < 1850 )",
    "exec_result": 0
  },
  {
    "idx": 1233,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850",
    "pred": "SELECT Paintings.width_mm FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.birthYear < 1850",
    "exec_result": 1
  },
  {
    "idx": 1234,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"",
    "pred": "SELECT Paintings.location, Paintings.medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo'",
    "exec_result": 1
  },
  {
    "idx": 1235,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"",
    "pred": "SELECT Paintings.location, Paintings.medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.fname = 'Pablo'",
    "exec_result": 1
  },
  {
    "idx": 1236,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID",
    "pred": "SELECT A.fname, A.lname FROM Artists A WHERE EXISTS ( SELECT 1 FROM Paintings P1 WHERE P1.painterID = A.artistID ) AND EXISTS ( SELECT 1 FROM Sculptures S1 WHERE S1.sculptorID = A.artistID )",
    "exec_result": 1
  },
  {
    "idx": 1237,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID",
    "pred": "SELECT CONCAT(Artists.fname, ' ', Artists.lname) as Full_Name FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID UNION SELECT CONCAT(Artists.fname, ' ', Artists.lname) as Full_Name FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID",
    "exec_result": 0
  },
  {
    "idx": 1238,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  \"lithograph\"",
    "pred": "SELECT fname, lname FROM Artists WHERE artistID IN ( SELECT artistID FROM Paintings WHERE medium = 'oil' AND paintingID IN ( SELECT paintingID FROM Paintings WHERE medium = 'lithograph' ) )",
    "exec_result": 0
  },
  {
    "idx": 1239,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  \"lithograph\"",
    "pred": "SELECT fname, lname FROM Artists WHERE artistID IN ( SELECT artistID FROM Paintings WHERE medium = 'oil' INTERSECT SELECT artistID FROM Sculptures WHERE medium = 'lithograph' )",
    "exec_result": 0
  },
  {
    "idx": 1240,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"",
    "pred": "SELECT Artists.birthYear FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.year = 1884 AND Paintings.mediumOn = 'canvas'",
    "exec_result": 1
  },
  {
    "idx": 1241,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"",
    "pred": "SELECT `birthYear` FROM `Artists` WHERE `artistID` IN ( SELECT `painterID` FROM `Paintings` WHERE `birthYear` = 1884 )",
    "exec_result": 0
  },
  {
    "idx": 1242,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT DISTINCT fname FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE medium = 'oil' AND location = 'Gallery 241'",
    "exec_result": 1
  },
  {
    "idx": 1243,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT `fname` FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.location = 'Gallery 241' AND Paintings.medium = 'oil'",
    "exec_result": 1
  },
  {
    "idx": 1244,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT `medium`, COUNT(*) as `Number of Works` FROM ( SELECT `medium` FROM `Paintings` UNION ALL SELECT `medium` FROM `Sculptures` ) as `All Mediums` GROUP BY `All Mediums`.`medium`",
    "exec_result": 0
  },
  {
    "idx": 1245,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT medium, COUNT(*) as number_of_works FROM Paintings GROUP BY medium;",
    "exec_result": 1
  },
  {
    "idx": 1246,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT `medium`, AVG(`height_mm`) as `average_height` FROM `Paintings` GROUP BY `medium`",
    "exec_result": 1
  },
  {
    "idx": 1247,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT `medium`, AVG(`height_mm`) as `average_height` FROM `Paintings` GROUP BY `medium`",
    "exec_result": 1
  },
  {
    "idx": 1248,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION",
    "pred": "SELECT Paintings.location, COUNT(*) FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Artists.birthYear < 1900 GROUP BY Paintings.location;",
    "exec_result": 0
  },
  {
    "idx": 1249,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION",
    "pred": "SELECT COUNT(*) FROM Paintings WHERE year < 1900 AND location IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1250,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"",
    "pred": "SELECT Paintings.title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.year > 1910 AND Paintings.medium = 'oil'",
    "exec_result": 1
  },
  {
    "idx": 1251,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"",
    "pred": "SELECT Paintings.title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.medium = 'oil' AND Paintings.year > 1910",
    "exec_result": 1
  },
  {
    "idx": 1252,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT artistID FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE Paintings.location = 'Gallery 240' AND Paintings.medium = 'oil';",
    "exec_result": 1
  },
  {
    "idx": 1253,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT DISTINCT painterID FROM Paintings WHERE medium = 'oil' AND location = 'Gallery 240';",
    "exec_result": 1
  },
  {
    "idx": 1254,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")",
    "pred": "SELECT DISTINCT P1.title FROM Paintings P1 JOIN Paintings P2 ON P1.painterID = P2.painterID WHERE P1.height_mm > P2.height_mm AND P1.medium = 'canvas'",
    "exec_result": 0
  },
  {
    "idx": 1255,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")",
    "pred": "SELECT DISTINCT P1.title FROM Paintings P1 JOIN Paintings P2 ON P1.painterID = P2.painterID WHERE P1.height_mm > P2.height_mm AND P2.medium = 'canvas'",
    "exec_result": 0
  },
  {
    "idx": 1256,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")",
    "pred": "SELECT DISTINCT P.paintingID FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.location = 'Gallery 240' AND P.year < (SELECT P2.year FROM Paintings P2 WHERE P2.location = 'Gallery 240')",
    "exec_result": 0
  },
  {
    "idx": 1257,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")",
    "pred": "SELECT DISTINCT P1.paintingID FROM Paintings P1 JOIN Paintings P2 ON P1.paintingID = P2.paintingID WHERE P2.location = 'Gallery 240' AND P1.year > P2.year",
    "exec_result": 0
  },
  {
    "idx": 1258,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "SELECT MAX(year) FROM Paintings",
    "exec_result": 0
  },
  {
    "idx": 1259,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1260,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"",
    "pred": "SELECT fname, lname FROM Artists WHERE artistID IN ( SELECT sculptorID FROM Sculptures WHERE title LIKE '%female%' )",
    "exec_result": 1
  },
  {
    "idx": 1261,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"",
    "pred": "SELECT CONCAT(fname, ' ', lname) as FullName FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID WHERE title LIKE '%female%'",
    "exec_result": 0
  },
  {
    "idx": 1262,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY title",
    "pred": "SELECT DISTINCT title FROM Paintings ORDER BY title ASC;",
    "exec_result": 1
  },
  {
    "idx": 1263,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY title",
    "pred": "SELECT DISTINCT title FROM Paintings ORDER BY title ASC;",
    "exec_result": 1
  },
  {
    "idx": 1264,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY height_mm",
    "pred": "SELECT title FROM Paintings ORDER BY height_mm ASC, width_mm ASC;",
    "exec_result": 1
  },
  {
    "idx": 1265,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY height_mm",
    "pred": "SELECT title FROM Paintings ORDER BY height_mm ASC",
    "exec_result": 1
  },
  {
    "idx": 1266,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950",
    "pred": "SELECT P.title AS painting_title, S.title AS sculpture_title FROM Paintings P JOIN Sculptures S ON P.painterID = S.painterID JOIN Artists A ON P.painterID = A.artistID WHERE A.birthYear BETWEEN 1900 AND 1950 UNION SELECT P.title AS painting_title, S.title AS sculpture_title FROM Paintings P JOIN Sculptures S ON P.painterID = S.painterID JOIN Artists A ON P.painterID = A.artistID WHERE A.deathYear BETWEEN 1900 AND 1950;",
    "exec_result": 0
  },
  {
    "idx": 1267,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950",
    "pred": "SELECT P.title AS Painting_Name, S.title AS Sculpture_Name FROM Paintings P JOIN Sculptures S ON P.painterID = S.painterID JOIN Artists A ON A.artistID = P.painterID WHERE P.year BETWEEN 1900 AND 1950 UNION SELECT P.title AS Painting_Name, S.title AS Sculpture_Name FROM Paintings P JOIN Sculptures S ON P.painterID = S.painterID JOIN Artists A ON A.artistID = P.painterID WHERE S.year BETWEEN 1900 AND 1950",
    "exec_result": 0
  },
  {
    "idx": 1268,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222",
    "pred": "CREATE TABLE Sculptures ( sculptureID INTEGER PRIMARY KEY, title TEXT, year INTEGER, medium TEXT, location TEXT, sculptorID INTEGER, FOREIGN KEY(sculptorID) REFERENCES Artists(artistID) );",
    "exec_result": 0
  },
  {
    "idx": 1269,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222",
    "pred": "SELECT P.title AS painting_title, S.title AS sculpture_title, A.fname AS artist_name FROM Paintings P JOIN Sculptures S ON P.painterID = S.sculptorID JOIN Artists A ON P.painterID = A.artistID WHERE P.painterID = 222;",
    "exec_result": 0
  },
  {
    "idx": 1270,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.artistID FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.year < 1900 GROUP BY A.artistID ORDER BY COUNT(P.paintingID) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1271,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT artistID FROM ( SELECT artistID, COUNT(*) as painting_count, MIN(year) as earliest_year FROM ( SELECT artistID, paintingID, year FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID UNION ALL SELECT artistID, sculptureID, year FROM Artists JOIN Sculptures ON Artists.artistID = Sculptures.sculptorID ) WHERE year < 1900 GROUP BY artistID ) WHERE painting_count = ( SELECT MAX(painting_count) FROM ( SELECT COUNT(*) as painting_count FROM Artists JOIN Paintings ON Artists.artistID = Paintings.painterID WHERE year < 1900 GROUP BY artistID ) )",
    "exec_result": 0
  },
  {
    "idx": 1272,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1273,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1274,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800",
    "pred": "SELECT title FROM Paintings WHERE (width_mm < 600 OR height_mm > 800)",
    "exec_result": 1
  },
  {
    "idx": 1275,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800",
    "pred": "SELECT title FROM Paintings WHERE width_mm < 600 AND height_mm > 800",
    "exec_result": 0
  },
  {
    "idx": 1276,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930",
    "pred": "SELECT location FROM Paintings WHERE (year < 1885 OR year > 1930) GROUP BY location HAVING COUNT(DISTINCT paintingID) > 1",
    "exec_result": 0
  },
  {
    "idx": 1277,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930",
    "pred": "SELECT location FROM Paintings WHERE year < 1885 OR year > 1930 UNION SELECT location FROM Sculptures WHERE year < 1885 OR year > 1930",
    "exec_result": 0
  },
  {
    "idx": 1278,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000",
    "pred": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;",
    "exec_result": 1
  },
  {
    "idx": 1279,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000",
    "pred": "SELECT paintingID FROM Paintings WHERE height_mm > 500 AND height_mm < 2000;",
    "exec_result": 1
  },
  {
    "idx": 1280,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\"",
    "pred": "SELECT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.medium = 'oil' AND P.mediumOn = 'canvas'",
    "exec_result": 0
  },
  {
    "idx": 1281,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\"",
    "pred": "SELECT DISTINCT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.medium = 'oil' AND P.mediumOn = 'canvas'",
    "exec_result": 0
  },
  {
    "idx": 1282,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930",
    "pred": "SELECT DISTINCT location FROM Paintings WHERE year < 1885 OR year > 1930",
    "exec_result": 0
  },
  {
    "idx": 1283,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930",
    "pred": "SELECT DISTINCT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.year < 1885 AND P.year > 1930",
    "exec_result": 0
  },
  {
    "idx": 1284,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT AVG(P.height_mm) AS average_height, AVG(P.width_mm) AS average_width FROM Paintings AS P JOIN Sculptures AS S ON P.painterID = S.sculptorID WHERE P.medium = 'oil' AND P.location = 'Gallery 241';",
    "exec_result": 0
  },
  {
    "idx": 1285,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT AVG(Paintings.height_mm) AS AverageHeight, AVG(Paintings.width_mm) AS AverageWidth FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.medium = 'oil' AND Paintings.location = 'Gallery 241'",
    "exec_result": 1
  },
  {
    "idx": 1286,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900",
    "pred": "SELECT MAX(height_mm) as max_height, paintingID as painting_id FROM Paintings WHERE year < 1900",
    "exec_result": 1
  },
  {
    "idx": 1287,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900",
    "pred": "SELECT height_mm, paintingID FROM Paintings WHERE year < 1900 ORDER BY height_mm DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1288,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR",
    "pred": "SELECT year, MAX(height_mm) as max_height, MAX(width_mm) as max_width FROM Paintings GROUP BY year",
    "exec_result": 1
  },
  {
    "idx": 1289,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR",
    "pred": "SELECT year, MAX(height_mm) as largest_height, MAX(width_mm) as largest_width FROM Paintings GROUP BY year",
    "exec_result": 1
  },
  {
    "idx": 1290,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title",
    "pred": "SELECT AVG(Paintings.height_mm) AS AverageHeight, AVG(Paintings.width_mm) AS AverageWidth, Artists.lname AS PainterName FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID GROUP BY Artists.lname ORDER BY PainterName;",
    "exec_result": 0
  },
  {
    "idx": 1291,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title",
    "pred": "SELECT AVG(Paintings.height_mm) as AverageHeight, AVG(Paintings.width_mm) as AverageWidth, Artists.lname as PainterName FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID GROUP BY Artists.lname ORDER BY PainterName;",
    "exec_result": 0
  },
  {
    "idx": 1292,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2",
    "pred": "SELECT A.fname, COUNT(*) FROM Artists A JOIN Paintings P1 ON A.artistID = P1.painterID JOIN Paintings P2 ON A.artistID = P2.painterID GROUP BY A.artistID HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 1293,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2",
    "pred": "SELECT A.fname, COUNT(P.paintingID) FROM Artists A JOIN Paintings P ON A.artistID = P.painterID GROUP BY A.artistID HAVING COUNT(P.paintingID) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1294,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <=  3",
    "pred": "SELECT A.artistID, A.lname, A.fname, A.birthYear, A.deathYear FROM Artists A WHERE ( SELECT COUNT(*) FROM Paintings B WHERE B.painterID = A.artistID ) <= 3 AND ( SELECT COUNT(*) FROM Sculptures C WHERE C.sculptorID = A.artistID ) <= 3",
    "exec_result": 0
  },
  {
    "idx": 1295,
    "db_id": "art_1",
    "question": "",
    "gold": "select t1.deathyear from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid having count(*)  <  4",
    "pred": "SELECT A.lname, A.fname, A.birthYear, A.deathYear FROM Artists A JOIN Paintings P ON A.artistID = P.painterID JOIN Sculptures S ON A.artistID = S.sculptorID WHERE (SELECT COUNT(*) FROM Paintings WHERE painterID = A.artistID) < 4 AND (SELECT COUNT(*) FROM Sculptures WHERE sculptorID = A.artistID) < 4",
    "exec_result": 0
  },
  {
    "idx": 1296,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1",
    "pred": "SELECT A.deathYear FROM Artists A JOIN Sculptures S ON A.artistID = S.sculptorID GROUP BY A.artistID ORDER BY COUNT(S.sculptureID) LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1297,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1",
    "pred": "SELECT `deathYear` FROM `Artists` WHERE `artistID` IN ( SELECT `painterID` FROM `Paintings` WHERE `painterID` IN ( SELECT `painterID` FROM `Sculptures` ) ) ORDER BY `deathYear` ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1298,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1",
    "pred": "SELECT paintingID, height_mm FROM Paintings WHERE location = 'Gallery 240' ORDER BY width_mm DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1299,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1",
    "pred": "SELECT `height_mm`, `paintingID` FROM Paintings WHERE `location` = 'Gallery 240' ORDER BY `height_mm` DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1300,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')",
    "pred": "SELECT P.paintingID FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE A.location = 'Gallery 240' AND P.location <> 'Gallery 240'",
    "exec_result": 0
  },
  {
    "idx": 1301,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')",
    "pred": "SELECT paintingID FROM Paintings WHERE year < (SELECT MIN(year) FROM Paintings WHERE location = 'Gallery 240')",
    "exec_result": 1
  },
  {
    "idx": 1302,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)",
    "pred": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900)",
    "exec_result": 1
  },
  {
    "idx": 1303,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)",
    "pred": "SELECT paintingID FROM Paintings WHERE height_mm > (SELECT MAX(height_mm) FROM Paintings WHERE year > 1900)",
    "exec_result": 1
  },
  {
    "idx": 1304,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT A.fname, A.lname, COUNT(P.paintingID) as painting_count FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.medium = 'oil' GROUP BY A.artistID ORDER BY painting_count DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1305,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT A.fname, A.lname, COUNT(P.paintingID) as painting_count FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.medium = 'oil' GROUP BY A.artistID ORDER BY painting_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1306,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR",
    "pred": "SELECT `paintingID`, `location`, `title` FROM `Paintings` WHERE `medium` = 'oil' ORDER BY `year`",
    "exec_result": 1
  },
  {
    "idx": 1307,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR",
    "pred": "SELECT Paintings.paintingID, Paintings.title, Paintings.year, Paintings.location, Paintings.medium FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.medium = 'oil' ORDER BY Paintings.year;",
    "exec_result": 0
  },
  {
    "idx": 1308,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title",
    "pred": "SELECT `year`, `location`, `title` FROM `Paintings` WHERE `height_mm` > 1000 ORDER BY `title`",
    "exec_result": 1
  },
  {
    "idx": 1309,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title",
    "pred": "SELECT `year`, `location`, `title` FROM `Paintings` WHERE `height_mm` > 1000 ORDER BY `title` ASC;",
    "exec_result": 1
  },
  {
    "idx": 1310,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID",
    "pred": "SELECT `fname`, `lname` FROM Artists WHERE artistID IN ( SELECT artistID FROM Paintings WHERE paintingID IN ( SELECT paintingID FROM Sculptures WHERE sculptureID NOT IN ( SELECT sculptureID FROM Sculptures WHERE location IS NOT NULL ) ) ) AND artistID NOT IN ( SELECT artistID FROM Sculptures WHERE location IS NOT NULL )",
    "exec_result": 0
  },
  {
    "idx": 1311,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID",
    "pred": "SELECT `fname`, `lname` FROM Artists WHERE `artistID` IN ( SELECT `painterID` FROM Paintings WHERE `painterID` IN ( SELECT `artistID` FROM Sculptures WHERE `sculptorID` IN ( SELECT `artistID` FROM Artists ) ) ) AND `artistID` IN ( SELECT `painterID` FROM Paintings WHERE `painterID` IN ( SELECT `artistID` FROM Sculptures WHERE `sculptorID` IN ( SELECT `artistID` FROM Artists ) ) )",
    "exec_result": 0
  },
  {
    "idx": 1312,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != \"canvas\"",
    "pred": "SELECT DISTINCT P.location FROM Paintings P JOIN Artists A ON P.painterID = A.artistID WHERE P.year < 1885 AND P.mediumOn = 'canvas' AND P.location IN (SELECT location FROM Paintings WHERE year < 1885 AND mediumOn = 'canvas')",
    "exec_result": 0
  },
  {
    "idx": 1313,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != \"canvas\"",
    "pred": "SELECT Paintings.title FROM Paintings JOIN Artists ON Paintings.painterID = Artists.artistID WHERE Paintings.year < 1885 AND Paintings.mediumOn != 'canvas'",
    "exec_result": 0
  },
  {
    "idx": 1314,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(*) FROM race",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1315,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(*) FROM race",
    "pred": "SELECT COUNT(*) FROM race",
    "exec_result": 1
  },
  {
    "idx": 1316,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1317,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC",
    "pred": "SELECT D.`Driver_Name`, W.`Winning_team` FROM driver AS D JOIN race AS R ON D.`Driver_ID` = R.`Driver_ID` JOIN ( SELECT R2.`Winning_driver`, R2.`Winning_team` FROM race AS R2 WHERE R2.`Report` = 'Report' ) AS W ON D.`Driver_ID` = W.`Winning_driver` ORDER BY W.`Winning_team`;",
    "exec_result": 0
  },
  {
    "idx": 1318,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'",
    "pred": "SELECT d.Driver_Name FROM driver AS d JOIN race AS r ON d.Driver_ID = r.Driver_ID WHERE r.Pole_Position <> 'Junior Strous' GROUP BY d.Driver_Name HAVING COUNT(*) = 1;",
    "exec_result": 0
  },
  {
    "idx": 1319,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'",
    "pred": "SELECT D.Driver_Name, D.Driver_ID FROM driver AS D JOIN race AS R ON D.Driver_ID = R.Driver_ID WHERE R.Pole_Position <> 'Junior Strous'",
    "exec_result": 0
  },
  {
    "idx": 1320,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC",
    "pred": "SELECT `Constructor` FROM `driver` ORDER BY `Age` ASC;",
    "exec_result": 1
  },
  {
    "idx": 1321,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC",
    "pred": "SELECT DISTINCT `Constructor` FROM `driver` ORDER BY `Age` ASC",
    "exec_result": 1
  },
  {
    "idx": 1322,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20",
    "pred": "SELECT DISTINCT Entrant FROM driver WHERE Age >= 20;",
    "exec_result": 1
  },
  {
    "idx": 1323,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20",
    "pred": "SELECT Entrant FROM driver WHERE Age >= 20",
    "exec_result": 1
  },
  {
    "idx": 1324,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT max(Age) ,  min(Age) FROM driver",
    "pred": "SELECT MAX(Age) AS Maximum_Age, MIN(Age) AS Minimum_Age FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1325,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT max(Age) ,  min(Age) FROM driver",
    "pred": "SELECT MAX(Age) as Maximum_Age, MIN(Age) as Minimum_Age FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1326,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20",
    "pred": "SELECT COUNT(DISTINCT `Engine`) FROM driver WHERE `Age` > 30 OR `Age` < 20",
    "exec_result": 1
  },
  {
    "idx": 1327,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20",
    "pred": "SELECT COUNT(DISTINCT Engine) as Number_of_Different_Engines FROM driver WHERE Age >= 20 OR Age <= 30",
    "exec_result": 0
  },
  {
    "idx": 1328,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1329,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "pred": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "exec_result": 1
  },
  {
    "idx": 1330,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID",
    "pred": "SELECT driver.Driver_Name, race.Race_Name FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID;",
    "exec_result": 1
  },
  {
    "idx": 1331,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID",
    "pred": "SELECT driver.Driver_Name, race.Road FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID;",
    "exec_result": 0
  },
  {
    "idx": 1332,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID",
    "pred": "SELECT D.Driver_Name, COUNT(*) FROM driver AS D JOIN race AS R ON D.Driver_ID = R.Driver_ID GROUP BY D.Driver_Name;",
    "exec_result": 1
  },
  {
    "idx": 1333,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID",
    "pred": "SELECT driver.Driver_Name, COUNT(race.Race_Name) as Number_of_Races FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_ID;",
    "exec_result": 1
  },
  {
    "idx": 1334,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1335,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Age FROM driver WHERE Driver_ID IN ( SELECT Driver_ID FROM race GROUP BY Driver_ID ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 1336,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT driver.Driver_Name, driver.Age FROM driver JOIN race ON driver.Driver_ID = race.Driver_ID GROUP BY driver.Driver_ID HAVING COUNT(race.Race_Name) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1337,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT d.Driver_Name, d.Age FROM driver d JOIN ( SELECT r.Driver_ID, COUNT(*) as race_count FROM race r GROUP BY r.Driver_ID HAVING COUNT(*) > 1 ) r ON d.Driver_ID = r.Driver_ID",
    "exec_result": 1
  },
  {
    "idx": 1338,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26",
    "pred": "SELECT race.Race_Name FROM race JOIN driver ON race.Driver_ID = driver.Driver_ID WHERE driver.Age >= 26;",
    "exec_result": 1
  },
  {
    "idx": 1339,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26",
    "pred": "SELECT Race_Name FROM race WHERE Driver_ID IN ( SELECT Driver_ID FROM driver WHERE Age >= 26 )",
    "exec_result": 1
  },
  {
    "idx": 1340,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != \"Bugatti\"",
    "pred": "SELECT `Driver_Name` FROM `driver` WHERE `Constructor` != 'Bugatti'",
    "exec_result": 1
  },
  {
    "idx": 1341,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != \"Bugatti\"",
    "pred": "SELECT Driver_Name FROM driver WHERE Constructor <> 'Bugatti'",
    "exec_result": 1
  },
  {
    "idx": 1342,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR",
    "pred": "SELECT D.`Constructor`, COUNT(*) FROM driver AS D JOIN race AS R ON D.`Driver_ID` = R.`Driver_ID` GROUP BY D.`Constructor`",
    "exec_result": 0
  },
  {
    "idx": 1343,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR",
    "pred": "SELECT `Constructor`, COUNT(`Driver_ID`) as `Number_of_Drivers` FROM driver GROUP BY `Constructor`;",
    "exec_result": 1
  },
  {
    "idx": 1344,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Engine`, COUNT(*) as `Count` FROM `driver` GROUP BY `Engine` ORDER BY `Count` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1345,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1346,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2",
    "pred": "SELECT D.`Engine` FROM driver AS D JOIN race AS R ON D.`Driver_ID` = R.`Driver_ID` GROUP BY D.`Engine` HAVING COUNT(DISTINCT R.`Driver_ID`) > 1",
    "exec_result": 1
  },
  {
    "idx": 1347,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2",
    "pred": "SELECT Engine, COUNT(DISTINCT Driver_ID) as Number_of_Drivers FROM driver GROUP BY Engine HAVING COUNT(DISTINCT Driver_ID) > 1",
    "exec_result": 0
  },
  {
    "idx": 1348,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)",
    "pred": "SELECT D.Driver_Name FROM driver D WHERE D.Driver_ID NOT IN (SELECT R.Driver_ID FROM race R)",
    "exec_result": 1
  },
  {
    "idx": 1349,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)",
    "pred": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT DISTINCT Driver_ID FROM race)",
    "exec_result": 1
  },
  {
    "idx": 1350,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30",
    "pred": "SELECT D.`Constructor` FROM driver AS D WHERE D.`Age` < 20 INTERSECT SELECT D.`Constructor` FROM driver AS D WHERE D.`Age` > 30",
    "exec_result": 1
  },
  {
    "idx": 1351,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30",
    "pred": "SELECT d.Constructor, COUNT(*) FROM driver AS d JOIN race AS r ON d.Driver_ID = r.Driver_ID WHERE d.Age < 20 AND d.Age > 30 GROUP BY d.Constructor;",
    "exec_result": 0
  },
  {
    "idx": 1352,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1",
    "pred": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING COUNT(DISTINCT Winning_driver) > 1",
    "exec_result": 1
  },
  {
    "idx": 1353,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1",
    "pred": "SELECT Winning_team, COUNT(*) as num_wins FROM race GROUP BY Winning_team HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 1354,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"Carl Skerlong\" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT D.`Driver_Name` FROM driver AS D JOIN race AS R ON D.`Driver_ID` = R.`Driver_ID` WHERE R.`Pole_Position` = 'James Hinchcliffe' AND R.`Pole_Position` = 'Carl Skerlong' AND R.`Race_Name` IN ( SELECT R.`Race_Name` FROM race AS R WHERE R.`Pole_Position` = 'Carl Skerlong' GROUP BY R.`Race_Name` HAVING COUNT(DISTINCT R.`Pole_Position`) = 2 ) AND D.`Age` < (SELECT D.`Age` FROM driver AS D WHERE D.`Pole_Position` = 'Carl Skerlong')",
    "exec_result": 0
  },
  {
    "idx": 1355,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"Carl Skerlong\" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT D.`Driver_Name` FROM driver AS D JOIN race AS R ON D.`Driver_ID` = R.`Driver_ID` WHERE R.`Pole_Position` = 'James Hinchcliffe' AND R.`Pole_Position` = 'Carl Skerlong'",
    "exec_result": 0
  },
  {
    "idx": 1356,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT D.`Driver_Name` FROM driver AS D WHERE D.`Driver_ID` NOT IN ( SELECT R.`Driver_ID` FROM race AS R WHERE R.`Pole_Position` = 'James Hinchcliffe' AND R.`Fastest_Lap` = 'Jonathan Summerton' )",
    "exec_result": 0
  },
  {
    "idx": 1357,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "SELECT Driver_Name FROM driver WHERE Driver_Name != 'James Hinchcliffe'",
    "exec_result": 0
  },
  {
    "idx": 1358,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(*) FROM languages",
    "pred": "SELECT COUNT(*) FROM languages",
    "exec_result": 1
  },
  {
    "idx": 1359,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(*) FROM languages",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1360,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages ORDER BY name ASC",
    "pred": "SELECT name FROM languages ORDER BY name ASC",
    "exec_result": 1
  },
  {
    "idx": 1361,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages ORDER BY name ASC",
    "pred": "SELECT name FROM languages ORDER BY name ASC;",
    "exec_result": 1
  },
  {
    "idx": 1362,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE name LIKE \"%ish%\"",
    "pred": "SELECT languages.name FROM languages JOIN official_languages ON official_languages.language_id = languages.id JOIN countries ON countries.id = official_languages.country_id WHERE countries.name LIKE '%ish%'",
    "exec_result": 0
  },
  {
    "idx": 1363,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE name LIKE \"%ish%\"",
    "pred": "SELECT languages.name FROM languages JOIN official_languages ON official_languages.language_id = languages.id JOIN countries ON countries.id = official_languages.country_id WHERE languages.name LIKE '%ish%'",
    "exec_result": 0
  },
  {
    "idx": 1364,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY overall_score DESC",
    "pred": "SELECT c.name, s.name, s.age, s.country_id, c.overall_score, c.health_score, c.education_score, c.economics_score, c.politics_score FROM singers s JOIN official_languages ol ON s.id = ol.country_id JOIN languages l ON ol.language_id = l.id JOIN countries c ON s.country_id = c.id WHERE s.age = (SELECT MIN(age) FROM singers) ORDER BY c.overall_score DESC;",
    "exec_result": 0
  },
  {
    "idx": 1365,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY overall_score DESC",
    "pred": "SELECT countries.name, countries.overall_score FROM countries ORDER BY countries.overall_score DESC",
    "exec_result": 0
  },
  {
    "idx": 1366,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(justice_score) FROM countries",
    "pred": "SELECT AVG(justice_score) as average_justice_score FROM countries",
    "exec_result": 1
  },
  {
    "idx": 1367,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(justice_score) FROM countries",
    "pred": "SELECT AVG(justice_score) FROM countries",
    "exec_result": 1
  },
  {
    "idx": 1368,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != \"Norway\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1369,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != \"Norway\"",
    "pred": "SELECT MAX(health_score) AS Max_Health_Score, MIN(health_score) AS Min_Health_Score FROM countries WHERE name != 'Norway'",
    "exec_result": 1
  },
  {
    "idx": 1370,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(DISTINCT language_id) FROM official_languages",
    "pred": "SELECT COUNT(DISTINCT language_id) AS num_languages FROM official_languages",
    "exec_result": 1
  },
  {
    "idx": 1371,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(DISTINCT language_id) FROM official_languages",
    "pred": "SELECT COUNT(DISTINCT language_id) FROM official_languages",
    "exec_result": 1
  },
  {
    "idx": 1372,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY education_score DESC",
    "pred": "SELECT `name` FROM `countries` ORDER BY `education_score` DESC",
    "exec_result": 1
  },
  {
    "idx": 1373,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY education_score DESC",
    "pred": "SELECT countries.name, countries.education_score FROM countries ORDER BY countries.education_score DESC",
    "exec_result": 0
  },
  {
    "idx": 1374,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1",
    "pred": "SELECT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id WHERE languages.name = 'Polish' AND countries.politics_score = (SELECT MAX(politics_score) FROM countries WHERE languages.name = 'Polish')",
    "exec_result": 0
  },
  {
    "idx": 1375,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1376,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1377,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id",
    "pred": "SELECT countries.name, languages.name FROM official_languages INNER JOIN countries ON official_languages.country_id = countries.id INNER JOIN languages ON official_languages.language_id = languages.id;",
    "exec_result": 1
  },
  {
    "idx": 1378,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name",
    "pred": "SELECT L.`name`, COUNT(*) FROM languages AS L JOIN official_languages AS OL ON L.`id` = OL.`language_id` GROUP BY L.`id`",
    "exec_result": 1
  },
  {
    "idx": 1379,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name",
    "pred": "SELECT L.name, COUNT(*) as count FROM languages AS L JOIN official_languages AS OL ON L.id = OL.language_id GROUP BY L.name;",
    "exec_result": 1
  },
  {
    "idx": 1380,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT L.name AS official_language, COUNT(C.id) AS number_of_countries FROM official_languages AS OL JOIN languages AS L ON OL.language_id = L.id JOIN countries AS C ON OL.country_id = C.id GROUP BY L.name ORDER BY number_of_countries DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1381,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT languages.name FROM languages JOIN official_languages ON official_languages.language_id = languages.id GROUP BY languages.name ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1382,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2",
    "pred": "SELECT L.name AS official_languages FROM languages AS L WHERE L.id IN ( SELECT OL.language_id FROM official_languages AS OL GROUP BY OL.language_id HAVING COUNT(DISTINCT OL.country_id) >= 2 )",
    "exec_result": 1
  },
  {
    "idx": 1383,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2",
    "pred": "SELECT L1.name AS official_language FROM languages AS L1 WHERE ( SELECT COUNT(*) FROM official_languages AS OL WHERE OL.language_id = L1.id ) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1384,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  \"English\"",
    "pred": "SELECT AVG(countries.overall_score) FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id WHERE languages.name = 'English'",
    "exec_result": 1
  },
  {
    "idx": 1385,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  \"English\"",
    "pred": "SELECT AVG(countries.overall_score) FROM countries INNER JOIN official_languages ON countries.id = official_languages.country_id INNER JOIN languages ON official_languages.language_id = languages.id WHERE languages.name = 'English'",
    "exec_result": 1
  },
  {
    "idx": 1386,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3",
    "pred": "SELECT languages.name, COUNT(*) as count FROM official_languages JOIN languages ON official_languages.language_id = languages.id GROUP BY official_languages.language_id ORDER BY count DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1387,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3",
    "pred": "SELECT languages.name FROM official_languages JOIN countries ON official_languages.country_id = countries.id JOIN languages ON official_languages.language_id = languages.id GROUP BY languages.name ORDER BY COUNT(countries.id) DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1388,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC",
    "pred": "SELECT languages.name, AVG(countries.overall_score) as average_overall_score FROM official_languages JOIN countries ON official_languages.country_id = countries.id JOIN languages ON official_languages.language_id = languages.id GROUP BY languages.name ORDER BY average_overall_score DESC",
    "exec_result": 0
  },
  {
    "idx": 1389,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC",
    "pred": "SELECT languages.name, AVG(countries.overall_score) as average_score FROM official_languages JOIN countries ON official_languages.country_id = countries.id JOIN languages ON official_languages.language_id = languages.id GROUP BY languages.name ORDER BY average_score DESC",
    "exec_result": 0
  },
  {
    "idx": 1390,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id GROUP BY countries.id ORDER BY COUNT(official_languages.language_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1391,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT countries.name FROM countries JOIN official_languages ON official_languages.country_id = countries.id GROUP BY countries.name ORDER BY COUNT(official_languages.language_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1392,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)",
    "pred": "SELECT languages.name FROM languages WHERE languages.id NOT IN (SELECT official_languages.language_id FROM official_languages)",
    "exec_result": 1
  },
  {
    "idx": 1393,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)",
    "pred": "SELECT languages.name FROM languages WHERE languages.id NOT IN ( SELECT official_languages.language_id FROM official_languages );",
    "exec_result": 1
  },
  {
    "idx": 1394,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)",
    "pred": "SELECT countries.name FROM countries WHERE countries.id NOT IN (SELECT official_languages.country_id FROM official_languages)",
    "exec_result": 1
  },
  {
    "idx": 1395,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)",
    "pred": "SELECT countries.name FROM countries WHERE countries.id NOT IN (SELECT official_languages.country_id FROM official_languages)",
    "exec_result": 1
  },
  {
    "idx": 1396,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90",
    "pred": "SELECT languages.name FROM languages JOIN official_languages ON official_languages.language_id = languages.id JOIN countries ON countries.id = official_languages.country_id WHERE countries.overall_score > 95 AND countries.overall_score < 90;",
    "exec_result": 0
  },
  {
    "idx": 1397,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90",
    "pred": "SELECT languages.name FROM languages JOIN official_languages ON official_languages.language_id = languages.id JOIN countries ON countries.id = official_languages.country_id WHERE countries.overall_score > 95 AND countries.overall_score < 90",
    "exec_result": 0
  },
  {
    "idx": 1398,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT country ,  town_city FROM Addresses;",
    "pred": "SELECT DISTINCT county_state_province, town_city FROM Addresses;",
    "exec_result": 0
  },
  {
    "idx": 1399,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT country ,  town_city FROM Addresses;",
    "pred": "SELECT Addresses.country, Addresses.town_city FROM Addresses INNER JOIN Properties ON Addresses.address_id = Properties.property_address_id",
    "exec_result": 0
  },
  {
    "idx": 1400,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;",
    "pred": "SELECT Properties.`property_address_id`, Addresses.`county_state_province` FROM Properties JOIN Addresses ON Properties.`property_address_id` = Addresses.`address_id`",
    "exec_result": 0
  },
  {
    "idx": 1401,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;",
    "pred": "SELECT P.property_address_id, A.county_state_province FROM Properties P JOIN Addresses A ON P.property_address_id = A.address_id GROUP BY P.property_address_id, A.county_state_province;",
    "exec_result": 0
  },
  {
    "idx": 1402,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';",
    "pred": "SELECT Features.feature_description FROM Features WHERE EXISTS ( SELECT 1 FROM Property_Features WHERE Property_Features.feature_id = Features.feature_id AND Property_Features.feature_name = 'rooftop' );",
    "exec_result": 0
  },
  {
    "idx": 1403,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1404,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT feature_name, feature_description FROM Features WHERE feature_id IN ( SELECT feature_id FROM Property_Features GROUP BY feature_id ORDER BY COUNT(*) DESC LIMIT 1 )",
    "exec_result": 1
  },
  {
    "idx": 1405,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1406,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT min(room_count) FROM Properties;",
    "pred": "SELECT MIN(room_count) as Minimum_Rooms FROM Rooms JOIN Properties ON Rooms.property_id = Properties.property_id",
    "exec_result": 1
  },
  {
    "idx": 1407,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT min(room_count) FROM Properties;",
    "pred": "SELECT MIN(room_count) as Lowest_Room_Count FROM Properties;",
    "exec_result": 1
  },
  {
    "idx": 1408,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;",
    "pred": "SELECT COUNT(*) FROM Properties WHERE parking_lots = 1 OR garage_yn = 1;",
    "exec_result": 1
  },
  {
    "idx": 1409,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;",
    "pred": "SELECT COUNT(*) FROM Properties WHERE parking_lots = 1 OR garage_yn = 1",
    "exec_result": 1
  },
  {
    "idx": 1410,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE \"%Mother\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1411,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE \"%Mother\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1412,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT U.first_name, COUNT(P.property_id) as num_properties FROM Users U JOIN Properties P ON U.user_id = P.owner_user_id GROUP BY U.first_name ORDER BY num_properties DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1413,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT U.first_name FROM Users U JOIN Properties P ON U.user_id = P.owner_user_id GROUP BY U.first_name ORDER BY COUNT(P.property_id) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1414,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';",
    "pred": "SELECT AVG(room_count) as average_room_count FROM Properties WHERE property_id IN ( SELECT property_id FROM Property_Features WHERE feature_id IN ( SELECT feature_id FROM Features WHERE feature_name = 'garden' ) )",
    "exec_result": 0
  },
  {
    "idx": 1415,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';",
    "pred": "SELECT AVG(Properties.room_count) as average_rooms FROM Properties INNER JOIN Property_Features ON Properties.property_id = Property_Features.property_id INNER JOIN Features ON Property_Features.feature_id = Features.feature_id WHERE Features.feature_name = 'garden';",
    "exec_result": 1
  },
  {
    "idx": 1416,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';",
    "pred": "SELECT DISTINCT t1.town_city FROM Addresses AS t1 JOIN Properties AS t2 ON t1.address_id = t2.property_address_id JOIN Property_Features AS t3 ON t2.property_id = t3.property_id JOIN Features AS t4 ON t3.feature_id = t4.feature_id WHERE t4.feature_name = 'swimming pool';",
    "exec_result": 1
  },
  {
    "idx": 1417,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';",
    "pred": "SELECT DISTINCT A.town_city FROM Properties AS P JOIN Addresses AS A ON P.property_address_id = A.address_id JOIN Property_Features AS F ON P.property_id = F.property_id JOIN Features AS FEAT ON F.feature_id = FEAT.feature_id WHERE FEAT.feature_name = 'swimming pool';",
    "exec_result": 1
  },
  {
    "idx": 1418,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;",
    "pred": "SELECT property_id, vendor_requested_price FROM Properties ORDER BY vendor_requested_price ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1419,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1420,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(room_count) FROM Properties;",
    "pred": "SELECT AVG(room_count) as average_rooms FROM Properties;",
    "exec_result": 1
  },
  {
    "idx": 1421,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(room_count) FROM Properties;",
    "pred": "SELECT AVG(T1.room_count) as average_rooms FROM ( SELECT Properties.property_id, Properties.room_count FROM Properties JOIN Rooms ON Properties.property_id = Rooms.property_id ) as T1",
    "exec_result": 0
  },
  {
    "idx": 1422,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(DISTINCT room_size) FROM Rooms;",
    "pred": "SELECT COUNT(DISTINCT room_size) as room_sizes_count FROM Rooms",
    "exec_result": 1
  },
  {
    "idx": 1423,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(DISTINCT room_size) FROM Rooms;",
    "pred": "SELECT COUNT(DISTINCT `room_size`) as `Number_of_Different_Room_Sizes` FROM `Rooms`",
    "exec_result": 1
  },
  {
    "idx": 1424,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;",
    "pred": "SELECT U.user_id, U.login_name, S.search_string FROM Users U JOIN ( SELECT user_id, search_string FROM User_Searches GROUP BY user_id HAVING COUNT(search_string) >= 2 ) S ON U.user_id = S.user_id",
    "exec_result": 0
  },
  {
    "idx": 1425,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;",
    "pred": "SELECT U.user_id, U.login_name, US.search_seq FROM Users U JOIN ( SELECT user_id, search_seq FROM User_Searches GROUP BY user_id HAVING COUNT(*) >= 2 ) US ON U.user_id = US.user_id",
    "exec_result": 0
  },
  {
    "idx": 1426,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT max(search_datetime) FROM User_Searches;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1427,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT max(search_datetime) FROM User_Searches;",
    "pred": "SELECT MAX(search_datetime) as most_recent_search FROM User_Searches;",
    "exec_result": 1
  },
  {
    "idx": 1428,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;",
    "pred": "SELECT Users.first_name, Users.last_name, User_Searches.search_datetime, User_Searches.search_string FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id ORDER BY User_Searches.search_string DESC;",
    "exec_result": 0
  },
  {
    "idx": 1429,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;",
    "pred": "SELECT `search_string`, `search_datetime` FROM `User_Searches` ORDER BY `search_datetime` DESC, `search_string` DESC",
    "exec_result": 0
  },
  {
    "idx": 1430,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );",
    "pred": "SELECT P.zip_postcode FROM Properties P WHERE P.property_id NOT IN ( SELECT UPH.property_id FROM User_Property_History UPH WHERE UPH.user_id IN ( SELECT U.user_id FROM Users U WHERE U.is_seller = 0 ) ) AND P.property_id IN ( SELECT PF.property_id FROM Property_Features PF WHERE PF.feature_id IN ( SELECT F.feature_id FROM Features F WHERE F.feature_name = 'garage_yn' AND F.feature_1 = '1' ) ) AND P.property_id NOT IN ( SELECT P.property_id FROM Properties P WHERE P.property_id IN ( SELECT UPH.property_id FROM User_Property_History UPH WHERE UPH.user_id IN ( SELECT U.user_id FROM Users U WHERE U.is_seller = 0 ) ) ) GROUP BY P.zip_postcode HAVING COUNT(DISTINCT P.property_id) <= 2",
    "exec_result": 0
  },
  {
    "idx": 1431,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );",
    "pred": "SELECT zip_postcode FROM Properties WHERE property_id NOT IN ( SELECT property_id FROM User_Property_History WHERE user_id IN ( SELECT user_id FROM Users WHERE is_buyer = '1' ) ) AND property_id IN ( SELECT property_id FROM User_Property_History GROUP BY property_id HAVING COUNT(user_id) <= 2 )",
    "exec_result": 0
  },
  {
    "idx": 1432,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1433,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;",
    "pred": "SELECT U.user_id, U.user_category_code FROM Users U WHERE U.user_id IN ( SELECT US.user_id FROM User_Searches US GROUP BY US.user_id HAVING COUNT(DISTINCT US.search_seq) = 1 )",
    "exec_result": 1
  },
  {
    "idx": 1434,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;",
    "pred": "SELECT Users.age_category_code FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id WHERE User_Searches.search_datetime = (SELECT MIN(User_Searches.search_datetime) FROM User_Searches)",
    "exec_result": 1
  },
  {
    "idx": 1435,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;",
    "pred": "SELECT U.age_category_code FROM Users U JOIN ( SELECT user_id, MIN(search_datetime) as earliest_search FROM User_Searches GROUP BY user_id ) US ON U.user_id = US.user_id ORDER BY US.earliest_search ASC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1436,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name",
    "pred": "SELECT `login_name` FROM `Users` WHERE `user_category_code` = 'Senior Citizen' ORDER BY `first_name` ASC;",
    "exec_result": 1
  },
  {
    "idx": 1437,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name",
    "pred": "SELECT `login_name` FROM `Users` WHERE `age_category_code` = '25-60' AND `user_category_code` = 'Senior Citizen' ORDER BY `first_name`;",
    "exec_result": 0
  },
  {
    "idx": 1438,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;",
    "pred": "SELECT COUNT(DISTINCT Users.user_id) AS total_searches FROM User_Searches INNER JOIN Users ON User_Searches.user_id = Users.user_id WHERE Users.is_buyer = 1;",
    "exec_result": 1
  },
  {
    "idx": 1439,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;",
    "pred": "SELECT COUNT(*) FROM Users JOIN User_Searches ON Users.user_id = User_Searches.user_id WHERE Users.is_buyer = 1;",
    "exec_result": 1
  },
  {
    "idx": 1440,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT date_registered FROM Users WHERE login_name  =  'ratione';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1441,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT date_registered FROM Users WHERE login_name  =  'ratione';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1442,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;",
    "pred": "SELECT Users.first_name, Users.middle_name, Users.last_name, Users.login_name FROM Users WHERE Users.is_seller = '1'",
    "exec_result": 1
  },
  {
    "idx": 1443,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;",
    "pred": "SELECT `first_name`, `middle_name`, `last_name`, `login_name` FROM Users WHERE `is_seller` = 1;",
    "exec_result": 1
  },
  {
    "idx": 1444,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1445,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';",
    "pred": "SELECT Addresses.line_1_number_building, Addresses.line_2_number_street, Addresses.town_city FROM Users INNER JOIN Addresses ON Users.user_address_id = Addresses.address_id WHERE Users.user_category_code = 'Senior Citizen';",
    "exec_result": 1
  },
  {
    "idx": 1446,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1447,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;",
    "pred": "SELECT COUNT(*) FROM Properties WHERE property_id IN ( SELECT property_id FROM Property_Features GROUP BY property_id HAVING COUNT(feature_id) >= 2 );",
    "exec_result": 0
  },
  {
    "idx": 1448,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;",
    "pred": "SELECT property_id, COUNT(*) as num_photos FROM Property_Photos GROUP BY property_id",
    "exec_result": 1
  },
  {
    "idx": 1449,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;",
    "pred": "SELECT P.property_id, COUNT(PP.photo_seq) as photo_count FROM Properties P JOIN Property_Photos PP ON P.property_id = PP.property_id GROUP BY P.property_id;",
    "exec_result": 1
  },
  {
    "idx": 1450,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;",
    "pred": "SELECT Users.user_id, COUNT(Properties.property_id) as num_photos FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Users.user_id;",
    "exec_result": 1
  },
  {
    "idx": 1451,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;",
    "pred": "SELECT Users.user_id, COUNT(Properties.property_id) as num_properties FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Users.user_id;",
    "exec_result": 1
  },
  {
    "idx": 1452,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';",
    "pred": "SELECT SUM(price_max) as total_max_price FROM Properties INNER JOIN Users ON Properties.owner_user_id = Users.user_id WHERE Users.user_category_code IN ('Single Mother', 'Student')",
    "exec_result": 1
  },
  {
    "idx": 1453,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';",
    "pred": "SELECT SUM(price_max) as total_max_price FROM Properties INNER JOIN Users ON Properties.owner_user_id = Users.user_id WHERE Users.user_category_code IN ('Single Mother', 'Student')",
    "exec_result": 1
  },
  {
    "idx": 1454,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;",
    "pred": "SELECT Users.date_registered, Properties.property_name FROM User_Property_History JOIN Users ON User_Property_History.user_id = Users.user_id JOIN Properties ON User_Property_History.property_id = Properties.property_id ORDER BY User_Property_History.datestamp;",
    "exec_result": 0
  },
  {
    "idx": 1455,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;",
    "pred": "SELECT `datestamp`, `property_name` FROM `User_Property_History` JOIN `Properties` ON `User_Property_History`.`property_id` = `Properties`.`property_id` ORDER BY `datestamp`;",
    "exec_result": 1
  },
  {
    "idx": 1456,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT property_type_description, property_type_code FROM Ref_Property_Types WHERE property_type_description = 'house'",
    "exec_result": 0
  },
  {
    "idx": 1457,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1458,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';",
    "pred": "SELECT * FROM Ref_Age_Categories WHERE age_category_code = 'Over 60'",
    "exec_result": 0
  },
  {
    "idx": 1459,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1460,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1461,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size",
    "pred": "SELECT `room_size`, COUNT(*) as `Number_of_Rooms` FROM `Rooms` GROUP BY `room_size`",
    "exec_result": 1
  },
  {
    "idx": 1462,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1463,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';",
    "pred": "SELECT U.country FROM Users U JOIN Addresses A ON U.user_address_id = A.address_id WHERE U.first_name = 'Robbie'",
    "exec_result": 0
  },
  {
    "idx": 1464,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;",
    "pred": "SELECT Users.first_name, Users.middle_name, Users.last_name FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id WHERE Properties.property_address_id = ( SELECT address_id FROM Addresses WHERE line_1_number_building = '929 Hermiston Vista Suite 955' );",
    "exec_result": 0
  },
  {
    "idx": 1465,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;",
    "pred": "SELECT CONCAT(Users.first_name, ' ', Users.last_name) as Full_Name FROM Users JOIN Properties ON Users.user_id = Properties.owner_user_id GROUP BY Users.user_id HAVING COUNT(DISTINCT Properties.property_id) > 0;",
    "exec_result": 0
  },
  {
    "idx": 1466,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;",
    "pred": "SELECT `search_string` FROM `User_Searches` WHERE `user_id` NOT IN ( SELECT DISTINCT `owner_user_id` FROM `Properties` )",
    "exec_result": 1
  },
  {
    "idx": 1467,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1468,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;",
    "pred": "SELECT U.last_name, U.user_id FROM Users U JOIN Properties P ON U.user_id = P.owner_user_id JOIN User_Property_History UP ON P.property_id = UP.property_id JOIN ( SELECT user_id, COUNT(DISTINCT property_id) as property_count, SUM(CASE WHEN search_seq <= 2 THEN 1 ELSE 0 END) as search_count FROM User_Searches GROUP BY user_id HAVING COUNT(DISTINCT property_id) >= 2 AND SUM(CASE WHEN search_seq <= 2 THEN 1 ELSE 0 END) <= 2 ) AS S ON U.user_id = S.user_id",
    "exec_result": 0
  },
  {
    "idx": 1469,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1470,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(*) FROM bike WHERE weight  >  780",
    "pred": "SELECT COUNT(*) FROM bike WHERE weight > 780",
    "exec_result": 1
  },
  {
    "idx": 1471,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT product_name ,  weight FROM bike ORDER BY price ASC",
    "pred": "SELECT `product_name`, `weight` FROM `bike` ORDER BY `price` ASC",
    "exec_result": 1
  },
  {
    "idx": 1472,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT heat ,  name ,  nation FROM cyclist",
    "pred": "SELECT heat, name, nation FROM cyclist;",
    "exec_result": 1
  },
  {
    "idx": 1473,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT max(weight) ,  min(weight) FROM bike",
    "pred": "SELECT MAX(weight) AS Maximum_Weight, MIN(weight) AS Minimum_Weight FROM bike;",
    "exec_result": 1
  },
  {
    "idx": 1474,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT avg(price) FROM bike WHERE material  =  'Carbon CC'",
    "pred": "SELECT AVG(price) FROM bike WHERE material = 'Carbon CC'",
    "exec_result": 1
  },
  {
    "idx": 1475,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM cyclist WHERE nation != 'Russia'",
    "pred": "SELECT `name`, `result` FROM `cyclist` WHERE `nation` != 'Russia'",
    "exec_result": 1
  },
  {
    "idx": 1476,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id WHERE T2.purchase_year  >  2015",
    "pred": "SELECT DISTINCT bike.id, bike.product_name FROM bike INNER JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id WHERE cyclists_own_bikes.purchase_year > 2015",
    "exec_result": 1
  },
  {
    "idx": 1477,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id GROUP BY T1.id HAVING count(*)  >=  4",
    "pred": "SELECT bike.id, bike.product_name FROM bike WHERE bike.id IN ( SELECT cyclists_own_bikes.bike_id FROM cyclists_own_bikes GROUP BY cyclists_own_bikes.bike_id HAVING COUNT(DISTINCT cyclists_own_bikes.cyclist_id) >= 4 )",
    "exec_result": 1
  },
  {
    "idx": 1478,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT cyclist.id, cyclist.name FROM cyclist JOIN ( SELECT cyclist_id, COUNT(bike_id) as bike_count FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY bike_count DESC LIMIT 1 ) AS most_bikes ON cyclist.id = most_bikes.cyclist_id;",
    "exec_result": 1
  },
  {
    "idx": 1479,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.nation  =  'Russia' OR T1.nation  =  'Great Britain'",
    "pred": "SELECT DISTINCT bike.product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE (cyclist.nation = 'Russia' OR cyclist.nation = 'Great Britain');",
    "exec_result": 1
  },
  {
    "idx": 1480,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(DISTINCT heat) FROM cyclist",
    "pred": "SELECT COUNT(DISTINCT heat) as Number_of_Different_Heats FROM cyclist;",
    "exec_result": 1
  },
  {
    "idx": 1481,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(*) FROM cyclist WHERE id NOT IN ( SELECT cyclist_id FROM cyclists_own_bikes WHERE purchase_year  >  2015 )",
    "pred": "SELECT COUNT(DISTINCT cyclist.id) FROM cyclist LEFT JOIN cyclists_own_bikes ON cyclist.id = cyclists_own_bikes.cyclist_id WHERE cyclists_own_bikes.bike_id IS NULL AND cyclists_own_bikes.purchase_year > 2015",
    "exec_result": 0
  },
  {
    "idx": 1482,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.result  <  '4:21.558'",
    "pred": "SELECT DISTINCT bike.product_name FROM bike JOIN cyclists_own_bikes ON bike.id = cyclists_own_bikes.bike_id JOIN cyclist ON cyclists_own_bikes.cyclist_id = cyclist.id WHERE cyclist.result > '4:21.558';",
    "exec_result": 0
  },
  {
    "idx": 1483,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Bradley Wiggins' INTERSECT SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Antonio Tauler'",
    "pred": "SELECT `product_name`, `price` FROM bike WHERE id IN ( SELECT bike_id FROM cyclists_own_bikes WHERE cyclist_id IN ( SELECT id FROM cyclist WHERE name IN ('Bradley Wiggins', 'Antonio Tauler') ) )",
    "exec_result": 0
  },
  {
    "idx": 1484,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT name ,  nation ,  RESULT FROM cyclist EXCEPT SELECT T1.name ,  T1.nation ,  T1.result FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id",
    "pred": "SELECT `name`, `nation`, `result` FROM `cyclist` WHERE `id` NOT IN (SELECT `cyclist_id` FROM `cyclists_own_bikes`)",
    "exec_result": 1
  },
  {
    "idx": 1485,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT product_name FROM bike WHERE material LIKE \"%fiber%\"",
    "pred": "SELECT product_name FROM bike WHERE material LIKE '%fiber%';",
    "exec_result": 1
  },
  {
    "idx": 1486,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT cyclist_id ,  count(*) FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY cyclist_id",
    "pred": "SELECT cyclist.id, cyclist.name, COUNT(cyclists_own_bikes.bike_id) as num_bikes FROM cyclist JOIN cyclists_own_bikes ON cyclist.id = cyclists_own_bikes.cyclist_id GROUP BY cyclist.id ORDER BY cyclist.id;",
    "exec_result": 0
  },
  {
    "idx": 1487,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY price DESC LIMIT 1",
    "pred": "SELECT g.Flavor, g.Price FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON i.Receipt = r.ReceiptNumber JOIN customers AS c ON r.CustomerId = c.Id WHERE g.Food = 'Cake' AND c.LastName = 'STENZ' GROUP BY g.Flavor, g.Price ORDER BY g.Price DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1488,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY price DESC LIMIT 1",
    "pred": "SELECT Id, Flavor FROM goods WHERE Food = 'Cake' AND Price = (SELECT MAX(Price) FROM goods WHERE Food = 'Cake')",
    "exec_result": 0
  },
  {
    "idx": 1489,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cookie\" ORDER BY price LIMIT 1",
    "pred": "SELECT Flavor, Price FROM goods WHERE Food = 'Cookie' ORDER BY Price ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1490,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cookie\" ORDER BY price LIMIT 1",
    "pred": "SELECT Id, Flavor FROM goods WHERE Food = 'Cookie' AND Price = (SELECT MIN(Price) FROM goods WHERE Food = 'Cookie')",
    "exec_result": 0
  },
  {
    "idx": 1491,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
    "pred": "SELECT Id FROM goods WHERE Flavor = 'Apple'",
    "exec_result": 1
  },
  {
    "idx": 1492,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
    "pred": "SELECT Id FROM goods WHERE Flavor = 'Apple'",
    "exec_result": 1
  },
  {
    "idx": 1493,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  <  3",
    "pred": "SELECT Id FROM goods WHERE Price < 3;",
    "exec_result": 1
  },
  {
    "idx": 1494,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  <  3",
    "pred": "SELECT Id FROM goods WHERE Price < 3",
    "exec_result": 1
  },
  {
    "idx": 1495,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  \"Lemon\" AND T1.Food  =  \"Cake\"",
    "pred": "SELECT DISTINCT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'Chocolate' AND goods.Food = 'Cake'",
    "exec_result": 0
  },
  {
    "idx": 1496,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  \"Lemon\" AND T1.Food  =  \"Cake\"",
    "pred": "SELECT DISTINCT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE goods.Flavor = 'Lemon' AND goods.Food = 'Cake';",
    "exec_result": 1
  },
  {
    "idx": 1497,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food",
    "pred": "SELECT g.Flavor, COUNT(DISTINCT r.CustomerId) as NumberOfCustomers FROM goods as g JOIN items as i ON g.Id = i.Item JOIN receipts as r ON i.Receipt = r.ReceiptNumber GROUP BY g.Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1498,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food",
    "pred": "SELECT goods.Food, COUNT(DISTINCT receipts.CustomerId) AS NumberOfCustomers FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id GROUP BY goods.Food;",
    "exec_result": 1
  },
  {
    "idx": 1499,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15",
    "pred": "SELECT c.Id FROM customers AS c JOIN receipts AS r ON c.Id = r.CustomerId JOIN items AS i ON r.Receipt = i.Receipt GROUP BY c.Id HAVING COUNT(i.Item) >= 15",
    "exec_result": 0
  },
  {
    "idx": 1500,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15",
    "pred": "SELECT DISTINCT customers.Id FROM customers JOIN receipts ON customers.Id = receipts.CustomerId GROUP BY customers.Id HAVING COUNT(DISTINCT receipts.ReceiptNumber) >= 15",
    "exec_result": 1
  },
  {
    "idx": 1501,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10",
    "pred": "SELECT customers.LastName FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.Receipt = items.Receipt GROUP BY customers.LastName HAVING COUNT(items.Item) > 10",
    "exec_result": 0
  },
  {
    "idx": 1502,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10",
    "pred": "SELECT `LastName` FROM customers JOIN ( SELECT `CustomerId`, COUNT(*) as `Count` FROM receipts GROUP BY `CustomerId` ) AS `Receipts` ON `Customers`.`Id` = `Receipts`.`CustomerId` WHERE `Count` > 10",
    "exec_result": 1
  },
  {
    "idx": 1503,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) FROM goods WHERE food  =  \"Cake\"",
    "pred": "SELECT COUNT(DISTINCT items.Item) AS NumberOfCakes FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake'",
    "exec_result": 0
  },
  {
    "idx": 1504,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) FROM goods WHERE food  =  \"Cake\"",
    "pred": "SELECT COUNT(DISTINCT Flavor) as NumberOfCakes FROM goods WHERE Food = 'Cake'",
    "exec_result": 1
  },
  {
    "idx": 1505,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Croissant\"",
    "pred": "SELECT Flavor FROM goods WHERE Food = 'Croissant'",
    "exec_result": 1
  },
  {
    "idx": 1506,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Croissant\"",
    "pred": "SELECT Flavor FROM goods WHERE Food = 'Croissant';",
    "exec_result": 1
  },
  {
    "idx": 1507,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15",
    "pred": "SELECT DISTINCT items.Item FROM items INNER JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE receipts.CustomerId = '15';",
    "exec_result": 1
  },
  {
    "idx": 1508,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15",
    "pred": "SELECT DISTINCT items.Item FROM items JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE receipts.CustomerId = '15';",
    "exec_result": 1
  },
  {
    "idx": 1509,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food",
    "pred": "SELECT goods.Flavor, AVG(goods.Price) AS AveragePrice, MAX(goods.Price) AS MaxPrice, MIN(goods.Price) AS MinPrice FROM goods GROUP BY goods.Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1510,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food",
    "pred": "SELECT Flavor, AVG(Price) AS AveragePrice, MIN(Price) AS MinPrice, MAX(Price) AS MaxPrice FROM goods GROUP BY Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1511,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cake\" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cookie\"",
    "pred": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Food = 'Cake' OR g.Food = 'Cookie' GROUP BY r.ReceiptNumber HAVING COUNT(DISTINCT g.Id) = 2",
    "exec_result": 0
  },
  {
    "idx": 1512,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cake\" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cookie\"",
    "pred": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.Receipt = i.Receipt;",
    "exec_result": 0
  },
  {
    "idx": 1513,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  \"Croissant\" AND T4.LastName  =  'LOGAN'",
    "pred": "SELECT r.ReceiptNumber FROM receipts r JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id JOIN customers c ON r.CustomerId = c.Id WHERE g.Food = 'Croissant' AND c.LastName = 'LOGAN';",
    "exec_result": 0
  },
  {
    "idx": 1514,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  \"Croissant\" AND T4.LastName  =  'LOGAN'",
    "pred": "SELECT `receipts`.`ReceiptNumber` FROM `receipts` JOIN `customers` ON `receipts`.`CustomerId` = `customers`.`Id` JOIN `items` ON `items`.`Item` = `goods`.`Id` JOIN `goods` ON `goods`.`Id` = `items`.`Item` WHERE `customers`.`LastName` = 'Logan' AND `goods`.`Food` = 'Croissant'",
    "exec_result": 0
  },
  {
    "idx": 1515,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1",
    "pred": "SELECT ReceiptNumber, Date FROM receipts INNER JOIN items ON receipts.ReceiptNumber = items.Receipt INNER JOIN goods ON items.Item = goods.Id WHERE Price = (SELECT MAX(Price) FROM goods)",
    "exec_result": 0
  },
  {
    "idx": 1516,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1",
    "pred": "SELECT `ReceiptNumber`, `Date` FROM `receipts` INNER JOIN `items` ON `receipts`.`ReceiptNumber` = `items`.`Receipt` INNER JOIN `goods` ON `items`.`Item` = `goods`.`Id` WHERE `Price` = (SELECT MAX(`Price`) FROM `goods`);",
    "exec_result": 0
  },
  {
    "idx": 1517,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1",
    "pred": "SELECT goods.Item, COUNT(*) as NumberOfPurchases FROM receipts JOIN items ON receipts.Receipt = items.Receipt JOIN goods ON items.Item = goods.Id GROUP BY goods.Item ORDER BY NumberOfPurchases LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1518,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1",
    "pred": "SELECT goods.Item, COUNT(items.Item) as ItemCount FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id GROUP BY goods.Item ORDER BY ItemCount LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1519,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) ,  food FROM goods GROUP BY food",
    "pred": "SELECT goods.Flavor, COUNT(items.Item) as NumberOfGoods FROM goods JOIN items ON goods.Id = items.Item GROUP BY goods.Flavor",
    "exec_result": 0
  },
  {
    "idx": 1520,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) ,  food FROM goods GROUP BY food",
    "pred": "SELECT c.LastName, c.FirstName, COUNT(g.Id) as NumberOfGoods FROM customers c JOIN items i ON c.Id = i.CustomerId JOIN goods g ON i.Item = g.Id GROUP BY c.Id;",
    "exec_result": 0
  },
  {
    "idx": 1521,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) ,  food FROM goods GROUP BY food",
    "pred": "SELECT Flavor, AVG(Price) as AveragePrice FROM goods GROUP BY Flavor",
    "exec_result": 0
  },
  {
    "idx": 1522,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) ,  food FROM goods GROUP BY food",
    "pred": "SELECT Flavor, AVG(Price) as AveragePrice FROM goods GROUP BY Flavor",
    "exec_result": 0
  },
  {
    "idx": 1523,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apricot\" AND price  <  5",
    "pred": "SELECT goods.Id FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Flavor = 'Apricot' AND goods.Price < 5;",
    "exec_result": 0
  },
  {
    "idx": 1524,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apricot\" AND price  <  5",
    "pred": "SELECT Id FROM goods WHERE Flavor = 'Apricot' AND Price < 5",
    "exec_result": 1
  },
  {
    "idx": 1525,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Cake\" AND price  >  10",
    "pred": "SELECT goods.Flavor FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Food = 'Cake' AND goods.Price > 10 GROUP BY goods.Flavor",
    "exec_result": 1
  },
  {
    "idx": 1526,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Cake\" AND price  >  10",
    "pred": "SELECT goods.Flavor FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Food = 'Cake' AND goods.Price > 10 GROUP BY goods.Flavor",
    "exec_result": 1
  },
  {
    "idx": 1527,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)",
    "pred": "SELECT DISTINCT goods.Id, goods.Price FROM goods WHERE goods.Price < (SELECT AVG(goods.Price) FROM goods)",
    "exec_result": 1
  },
  {
    "idx": 1528,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)",
    "pred": "SELECT DISTINCT Id, Price FROM goods WHERE Price < (SELECT AVG(Price) FROM goods)",
    "exec_result": 1
  },
  {
    "idx": 1529,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT DISTINCT goods.Id FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON receipts.ReceiptNumber = items.Receipt WHERE goods.Food = 'Tart' AND goods.Price < (SELECT Price FROM goods WHERE Food = 'Tart')",
    "exec_result": 0
  },
  {
    "idx": 1530,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT DISTINCT Id FROM goods WHERE Flavor = 'Chocolate' AND Food = 'Tart' AND Price < (SELECT MIN(Price) FROM goods WHERE Flavor = 'Tart')",
    "exec_result": 0
  },
  {
    "idx": 1531,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13",
    "pred": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13",
    "exec_result": 0
  },
  {
    "idx": 1532,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13",
    "pred": "SELECT DISTINCT r.ReceiptNumber FROM receipts r JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 13",
    "exec_result": 0
  },
  {
    "idx": 1533,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15",
    "pred": "SELECT `Date` FROM `receipts` INNER JOIN `items` ON `receipts`.`ReceiptNumber` = `items`.`Receipt` INNER JOIN `goods` ON `items`.`Item` = `goods`.`Id` WHERE `goods`.`Price` > 15 GROUP BY `Date` HAVING COUNT(DISTINCT `ReceiptNumber`) = 1",
    "exec_result": 0
  },
  {
    "idx": 1534,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15",
    "pred": "SELECT `Date` FROM `receipts` WHERE `CustomerId` IN ( SELECT `Id` FROM `customers` WHERE `LastName` = 'STENZ' AND `FirstName` = 'SIXTA' ) AND `ReceiptNumber` IN ( SELECT `Receipt` FROM `items` WHERE `Item` = ( SELECT `Id` FROM `goods` WHERE `Price` > 15 ) )",
    "exec_result": 0
  },
  {
    "idx": 1535,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE id LIKE \"%APP%\"",
    "pred": "SELECT Id FROM goods WHERE Flavor = 'Apple'",
    "exec_result": 0
  },
  {
    "idx": 1536,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE id LIKE \"%APP%\"",
    "pred": "SELECT Id FROM goods WHERE Id LIKE '%APP%';",
    "exec_result": 1
  },
  {
    "idx": 1537,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  price FROM goods WHERE id LIKE \"%70%\"",
    "pred": "SELECT goods.Flavor, goods.Price FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Id LIKE '%70%'",
    "exec_result": 0
  },
  {
    "idx": 1538,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  price FROM goods WHERE id LIKE \"%70%\"",
    "pred": "SELECT Id, Price FROM goods WHERE Id = '70'",
    "exec_result": 0
  },
  {
    "idx": 1539,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT LastName FROM customers ORDER BY LastName",
    "pred": "SELECT DISTINCT LastName FROM customers ORDER BY LastName ASC;",
    "exec_result": 1
  },
  {
    "idx": 1540,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT LastName FROM customers ORDER BY LastName",
    "pred": "SELECT LastName FROM customers ORDER BY LastName ASC;",
    "exec_result": 1
  },
  {
    "idx": 1541,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods ORDER BY id",
    "pred": "SELECT goods.Id AS ItemId FROM goods ORDER BY goods.Id;",
    "exec_result": 1
  },
  {
    "idx": 1542,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods ORDER BY id",
    "pred": "SELECT g.Id FROM goods g JOIN items i ON g.Id = i.Item GROUP BY g.Id ORDER BY g.Id;",
    "exec_result": 0
  },
  {
    "idx": 1543,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Apple\" AND T2.food  =  \"Pie\" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12",
    "pred": "JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Flavor = 'Apple' OR r.CustomerId = 12 GROUP BY r.ReceiptNumber HAVING COUNT(DISTINCT g.Flavor) > 1",
    "exec_result": 0
  },
  {
    "idx": 1544,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Apple\" AND T2.food  =  \"Pie\" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12",
    "pred": "SELECT `ReceiptNumber` FROM `receipts` JOIN `items` ON `receipts`.`ReceiptNumber` = `items`.`Receipt` WHERE `items`.`Item` = 'Apple' OR `receipts`.`CustomerId` = 12;",
    "exec_result": 0
  },
  {
    "idx": 1545,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)",
    "pred": "SELECT * FROM receipts WHERE Date = (SELECT MAX(Date) FROM receipts)",
    "exec_result": 0
  },
  {
    "idx": 1546,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)",
    "pred": "SELECT ReceiptNumber, Date FROM receipts ORDER BY Date DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1547,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)",
    "pred": "SELECT r.ReceiptNumber, r.Date FROM receipts r JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id WHERE r.Date = (SELECT MIN(Date) FROM receipts) OR g.Price > 10;",
    "exec_result": 0
  },
  {
    "idx": 1548,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)",
    "pred": "SELECT r.ReceiptNumber FROM receipts r INNER JOIN items i ON r.Receipt = i.Receipt INNER JOIN goods g ON i.Item = g.Id WHERE g.Price > 10 OR r.Date = (SELECT MIN(Date) FROM receipts)",
    "exec_result": 0
  },
  {
    "idx": 1549,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" OR food  =  \"Cake\" AND price BETWEEN 3 AND 7",
    "pred": "SELECT goods.Id, goods.Flavor, goods.Food, goods.Price FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Food = 'Cookie' OR goods.Food = 'Cake' AND goods.Price BETWEEN 3 AND 7;",
    "exec_result": 0
  },
  {
    "idx": 1550,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" OR food  =  \"Cake\" AND price BETWEEN 3 AND 7",
    "pred": "SELECT goods.Id, goods.Flavor, goods.Price FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake' AND goods.Price BETWEEN 3 AND 7",
    "exec_result": 0
  },
  {
    "idx": 1551,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1",
    "pred": "SELECT `FirstName`, `LastName` FROM customers JOIN receipts ON customers.`Id` = receipts.`CustomerId` JOIN items ON receipts.`ReceiptNumber` = items.`Receipt` WHERE items.`Ordinal` = ( SELECT MIN(`Ordinal`) FROM items JOIN receipts ON items.`Receipt` = receipts.`ReceiptNumber` JOIN customers ON receipts.`CustomerId` = customers.`Id` )",
    "exec_result": 0
  },
  {
    "idx": 1552,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1",
    "pred": "SELECT CONCAT(FirstName, ' ', LastName) AS FullName FROM customers WHERE Id = (SELECT MIN(CustomerId) FROM receipts)",
    "exec_result": 0
  },
  {
    "idx": 1553,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) FROM goods WHERE flavor  =  \"Blackberry\" OR flavor  =  \"Blueberry\"",
    "pred": "SELECT AVG(Price) as AveragePrice FROM goods WHERE Flavor IN ('Blackberry', 'Blueberry');",
    "exec_result": 1
  },
  {
    "idx": 1554,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) FROM goods WHERE flavor  =  \"Blackberry\" OR flavor  =  \"Blueberry\"",
    "pred": "SELECT AVG(Price) as AveragePrice FROM goods WHERE Flavor IN ('Blackberry', 'Blueberry')",
    "exec_result": 1
  },
  {
    "idx": 1555,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) FROM goods WHERE flavor  =  \"Cheese\"",
    "pred": "SELECT MIN(Price) FROM goods WHERE Flavor = 'Chocolate'",
    "exec_result": 0
  },
  {
    "idx": 1556,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) FROM goods WHERE flavor  =  \"Cheese\"",
    "pred": "SELECT goods.Flavor, goods.Food, goods.Price FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber WHERE goods.Flavor = 'Cheese' AND goods.Price = ( SELECT MIN(Price) FROM goods WHERE goods.Flavor = 'Cheese' )",
    "exec_result": 0
  },
  {
    "idx": 1557,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor",
    "pred": "SELECT g.Flavor, MAX(g.Price) AS Highest_Price, MIN(g.Price) AS Lowest_Price, AVG(g.Price) AS Average_Price FROM goods AS g JOIN items AS i ON g.Id = i.Item JOIN receipts AS r ON i.Receipt = r.ReceiptNumber WHERE r.Date IN ( SELECT MAX(r2.Date) FROM receipts AS r2 WHERE r.Date = r2.Date ) GROUP BY g.Flavor ORDER BY g.Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1558,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor",
    "pred": "SELECT goods.Flavor, MAX(receipts.Date) AS MaxDate, MIN(receipts.Date) AS MinDate, AVG(goods.Price) AS AveragePrice FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id GROUP BY goods.Flavor",
    "exec_result": 0
  },
  {
    "idx": 1559,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food",
    "pred": "SELECT `Flavor`, MIN(`Price`) AS `Lowest_Price`, MAX(`Price`) AS `Highest_Price` FROM `goods` GROUP BY `Flavor` ORDER BY `Flavor`;",
    "exec_result": 0
  },
  {
    "idx": 1560,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food",
    "pred": "SELECT Flavor, MIN(Price) AS Minimum_Price, MAX(Price) AS Maximum_Price FROM goods GROUP BY Flavor ORDER BY Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1561,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT Date, COUNT(*) as ReceiptCount FROM receipts JOIN customers ON receipts.CustomerId = customers.Id GROUP BY Date ORDER BY ReceiptCount DESC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 1562,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT `Date`, COUNT(*) as `NumberOfReceipts` FROM receipts JOIN customers ON receipts.`CustomerId` = customers.`Id` GROUP BY `Date` ORDER BY `NumberOfReceipts` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1563,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.FirstName, c.LastName, COUNT(i.Item) as NumberOfItems FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id ORDER BY NumberOfItems DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1564,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `CustomerId`, COUNT(*) as `NumberOfPurchases` FROM `receipts` GROUP BY `CustomerId` ORDER BY `NumberOfPurchases` DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1565,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date",
    "pred": "SELECT Date, COUNT(DISTINCT CustomerId) FROM receipts GROUP BY Date",
    "exec_result": 1
  },
  {
    "idx": 1566,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date",
    "pred": "SELECT Date, COUNT(DISTINCT CustomerId) as NumberOfCustomers FROM receipts GROUP BY Date",
    "exec_result": 1
  },
  {
    "idx": 1567,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  \"Apple\" AND T1.food  =  \"Tart\"",
    "pred": "SELECT `FirstName`, `LastName` FROM customers WHERE Id IN ( SELECT `CustomerId` FROM receipts WHERE `Date` IN ( SELECT `Date` FROM receipts WHERE `ReceiptNumber` IN ( SELECT `ReceiptNumber` FROM items WHERE `Item` = ( SELECT `Id` FROM goods WHERE `Flavor` = 'Apple' AND `Food` = 'Tart' ) ) ) )",
    "exec_result": 0
  },
  {
    "idx": 1568,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  \"Apple\" AND T1.food  =  \"Tart\"",
    "pred": "SELECT CONCAT(FirstName, ' ', LastName) AS FullName FROM customers INNER JOIN receipts ON customers.Id = receipts.CustomerId INNER JOIN items ON receipts.ReceiptNumber = items.Receipt INNER JOIN goods ON items.Item = goods.Id WHERE goods.Food = 'Tart' AND goods.Flavor = 'Apple';",
    "exec_result": 0
  },
  {
    "idx": 1569,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')",
    "pred": "SELECT Id FROM goods WHERE Food = 'Croissant' AND Price < (SELECT Price FROM goods WHERE Food = 'Cookie')",
    "exec_result": 0
  },
  {
    "idx": 1570,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')",
    "pred": "SELECT goods.Id FROM goods WHERE goods.Food = 'Croissant' AND goods.Price < (SELECT goods.Price FROM goods WHERE goods.Food = 'Chocolate')",
    "exec_result": 0
  },
  {
    "idx": 1571,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cake\" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT goods.Id FROM goods WHERE goods.Food = 'Tart' AND goods.Price >= (SELECT AVG(goods.Price) FROM goods WHERE goods.Food = 'Cake')",
    "exec_result": 0
  },
  {
    "idx": 1572,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cake\" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "SELECT goods.Id FROM goods WHERE goods.Food = 'Tart' AND goods.Price >= (SELECT AVG(goods.Price) FROM goods WHERE goods.Food = 'Chocolate')",
    "exec_result": 0
  },
  {
    "idx": 1573,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)",
    "pred": "WITH AveragePrice AS ( SELECT AVG(Price) AS AveragePrice FROM goods ) SELECT Id FROM goods WHERE Price > 2 * (SELECT AveragePrice FROM AveragePrice);",
    "exec_result": 0
  },
  {
    "idx": 1574,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)",
    "pred": "SELECT Id FROM goods WHERE Price > 2 * (SELECT AVG(Price) FROM goods)",
    "exec_result": 0
  },
  {
    "idx": 1575,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor ,  food FROM goods ORDER BY price",
    "pred": "SELECT goods.Id, goods.Flavor, goods.Food, goods.Price FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE customers.LastName = 'STENZ' AND customers.FirstName = 'SIXTA' ORDER BY goods.Price;",
    "exec_result": 0
  },
  {
    "idx": 1576,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor ,  food FROM goods ORDER BY price",
    "pred": "SELECT goods.Id, goods.Flavor, goods.Food FROM goods JOIN items ON goods.Id = items.Item JOIN receipts ON items.Receipt = receipts.ReceiptNumber JOIN customers ON receipts.CustomerId = customers.Id WHERE customers.LastName = 'STENZ' AND customers.FirstName = 'SIXTA' ORDER BY goods.Price;",
    "exec_result": 0
  },
  {
    "idx": 1577,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY flavor",
    "pred": "SELECT goods.Id, goods.Flavor FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake' ORDER BY goods.Flavor",
    "exec_result": 0
  },
  {
    "idx": 1578,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY flavor",
    "pred": "SELECT goods.Id, goods.Flavor FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Food = 'Cake' ORDER BY goods.Flavor;",
    "exec_result": 0
  },
  {
    "idx": 1579,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Chocolate\" GROUP BY item HAVING count(*)  <=  10",
    "pred": "SELECT goods.Item, goods.Flavor, COUNT(*) as NumberOfPurchases FROM goods INNER JOIN items ON goods.Id = items.Item INNER JOIN receipts ON items.Receipt = receipts.ReceiptNumber INNER JOIN customers ON receipts.CustomerId = customers.Id WHERE goods.Flavor = 'Chocolate' AND customers.Id NOT IN ( SELECT receipts.CustomerId FROM receipts INNER JOIN items ON receipts.Receipt = items.Receipt GROUP BY receipts.CustomerId HAVING COUNT(DISTINCT items.Item) > 10 ) GROUP BY goods.Item, goods.Flavor",
    "exec_result": 0
  },
  {
    "idx": 1580,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Chocolate\" GROUP BY item HAVING count(*)  <=  10",
    "pred": "SELECT goods.Item, COUNT(items.Item) as ItemCount FROM goods JOIN items ON goods.Id = items.Item WHERE goods.Flavor = 'Chocolate' GROUP BY goods.Item HAVING COUNT(items.Item) <= 10",
    "exec_result": 0
  },
  {
    "idx": 1581,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT flavor FROM goods WHERE food  =  \"Cake\" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  \"Tart\"",
    "pred": "SELECT Flavor FROM goods WHERE Food = 'Cake' AND Flavor NOT IN (SELECT Flavor FROM goods WHERE Food = 'Tart');",
    "exec_result": 1
  },
  {
    "idx": 1582,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT flavor FROM goods WHERE food  =  \"Cake\" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  \"Tart\"",
    "pred": "SELECT Flavor FROM goods WHERE Food = 'Tart' AND Flavor NOT IN (SELECT Flavor FROM goods WHERE Food = 'Cake');",
    "exec_result": 0
  },
  {
    "idx": 1583,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3",
    "pred": "SELECT g.Flavor, COUNT(i.Item) as ItemCount FROM goods as g JOIN items as i ON g.Id = i.Item GROUP BY g.Flavor ORDER BY ItemCount DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1584,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3",
    "pred": "SELECT g.Flavor, COUNT(*) as PurchaseCount FROM goods as g JOIN items as i ON g.Id = i.Item JOIN receipts as r ON r.ReceiptNumber = i.Receipt GROUP BY g.Flavor ORDER BY PurchaseCount DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1585,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150",
    "pred": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id HAVING SUM(g.Price) > 150",
    "exec_result": 0
  },
  {
    "idx": 1586,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150",
    "pred": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.ReceiptNumber = i.Receipt JOIN goods g ON i.Item = g.Id WHERE g.Price > 150 GROUP BY c.Id HAVING COUNT(DISTINCT g.Id) = 6;",
    "exec_result": 0
  },
  {
    "idx": 1587,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5",
    "pred": "SELECT customers.Id, AVG(goods.Price) as AverageSpending FROM customers JOIN receipts ON customers.Id = receipts.CustomerId JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id GROUP BY customers.Id HAVING AVG(goods.Price) > 5",
    "exec_result": 0
  },
  {
    "idx": 1588,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5",
    "pred": "SELECT c.Id FROM customers c JOIN receipts r ON c.Id = r.CustomerId JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY c.Id HAVING AVG(g.Price) > 5;",
    "exec_result": 0
  },
  {
    "idx": 1589,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
    "pred": "SELECT r.Date, g.Flavor, SUM(g.Price) as TotalPrice FROM receipts r JOIN items i ON r.Receipt = i.Receipt JOIN goods g ON i.Item = g.Id GROUP BY r.Date, g.Flavor, g.Price HAVING SUM(g.Price) > 100 ORDER BY r.Date, TotalPrice DESC;",
    "exec_result": 0
  },
  {
    "idx": 1590,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
    "pred": "SELECT Date FROM receipts JOIN items ON receipts.ReceiptNumber = items.Receipt JOIN goods ON items.Item = goods.Id WHERE Price * (SELECT COUNT(*) FROM items WHERE goods.Id = items.Item) > 100 GROUP BY Date HAVING COUNT(DISTINCT goods.Id) > 1",
    "exec_result": 0
  },
  {
    "idx": 1591,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1592,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver",
    "pred": "SELECT COUNT(DISTINCT driver.Driver_ID) AS Total_Drivers FROM driver JOIN team_driver ON driver.Driver_ID = team_driver.Driver_ID;",
    "exec_result": 1
  },
  {
    "idx": 1593,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make",
    "pred": "SELECT T.`Make`, COUNT(*) FROM team AS T JOIN team_driver AS TD ON T.`Team_ID` = TD.`Team_ID` JOIN driver AS D ON TD.`Driver_ID` = D.`Driver_ID` WHERE D.`Points` > 150 GROUP BY T.`Make`",
    "exec_result": 0
  },
  {
    "idx": 1594,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make",
    "pred": "SELECT t.`Make`, COUNT(*) as `Count` FROM team as t JOIN team_driver as td ON t.`Team_ID` = td.`Team_ID` JOIN driver as d ON td.`Driver_ID` = d.`Driver_ID` WHERE d.`Points` > 150 GROUP BY t.`Make`",
    "exec_result": 0
  },
  {
    "idx": 1595,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(age) ,  Make FROM driver GROUP BY make",
    "pred": "SELECT `Make`, AVG(`Age`) as `Average_Age` FROM `driver` GROUP BY `Make`",
    "exec_result": 1
  },
  {
    "idx": 1596,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(age) ,  Make FROM driver GROUP BY make",
    "pred": "SELECT `Make`, AVG(`Age`) as `Average_Age` FROM `driver` GROUP BY `Make`",
    "exec_result": 1
  },
  {
    "idx": 1597,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(Laps) FROM driver WHERE age  <  20",
    "pred": "SELECT AVG(`Laps`) as `Average_Laps` FROM `driver` WHERE `Age` < 20",
    "exec_result": 1
  },
  {
    "idx": 1598,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(Laps) FROM driver WHERE age  <  20",
    "pred": "SELECT AVG(`Laps`) FROM `driver` WHERE `Age` < 20",
    "exec_result": 1
  },
  {
    "idx": 1599,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner",
    "pred": "SELECT T.`Manager`, T.`Sponsor` FROM team AS T ORDER BY T.`Car_Owner`;",
    "exec_result": 1
  },
  {
    "idx": 1600,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner",
    "pred": "SELECT T.Manager, T.Sponsor, D.Car_Owner FROM team AS T JOIN team_driver AS TD ON T.Team_ID = TD.Team_ID JOIN driver AS D ON TD.Driver_ID = D.Driver_ID ORDER BY D.Car_Owner",
    "exec_result": 0
  },
  {
    "idx": 1601,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make FROM team GROUP BY team HAVING count(*)  >  1",
    "pred": "SELECT T1.`Make`, COUNT(*) FROM team AS T1 JOIN team_driver AS T2 ON T1.`Team_ID` = T2.`Team_ID` GROUP BY T1.`Team_ID` HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 1602,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make FROM team GROUP BY team HAVING count(*)  >  1",
    "pred": "SELECT Make, COUNT(*) as Team_Count FROM team_driver JOIN team ON team_driver.Team_ID = team.Team_ID GROUP BY Make;",
    "exec_result": 0
  },
  {
    "idx": 1603,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM team WHERE Car_Owner  =  \"Buddy Arrington\"",
    "pred": "SELECT Make FROM team WHERE Car_Owner = 'Buddy Arrington' AND Team = 'Henderson Motorsports';",
    "exec_result": 0
  },
  {
    "idx": 1604,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM team WHERE Car_Owner  =  \"Buddy Arrington\"",
    "pred": "SELECT Make FROM team WHERE Car_Owner = 'Buddy Arrington'",
    "exec_result": 1
  },
  {
    "idx": 1605,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(Points) ,  min(Points) FROM driver",
    "pred": "SELECT MAX(Points) AS Maximum_Points, MIN(Points) AS Minimum_Points FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1606,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(Points) ,  min(Points) FROM driver",
    "pred": "SELECT MAX(Points) AS Highest_Points, MIN(Points) AS Lowest_Points FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1607,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Points  <  150",
    "pred": "SELECT COUNT(*) FROM driver WHERE Points < '150';",
    "exec_result": 1
  },
  {
    "idx": 1608,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Points  <  150",
    "pred": "SELECT COUNT(*) FROM driver WHERE Points < 150",
    "exec_result": 1
  },
  {
    "idx": 1609,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Age ASC",
    "pred": "SELECT `Driver` FROM `driver` ORDER BY `Age` ASC",
    "exec_result": 1
  },
  {
    "idx": 1610,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Age ASC",
    "pred": "SELECT `Driver` FROM `driver` ORDER BY `Age` ASC",
    "exec_result": 1
  },
  {
    "idx": 1611,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Points DESC",
    "pred": "SELECT `Driver` FROM `driver` ORDER BY `Points` DESC",
    "exec_result": 1
  },
  {
    "idx": 1612,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Points DESC",
    "pred": "SELECT d.Driver, SUM(td.Points) as Total_Points FROM driver as d JOIN team_driver as td ON d.Driver_ID = td.Driver_ID GROUP BY d.Driver_ID ORDER BY Total_Points DESC",
    "exec_result": 0
  },
  {
    "idx": 1613,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country",
    "pred": "SELECT d.`Driver`, c.`Country` FROM driver as d JOIN country as c ON d.`Country` = c.`Country_Id`",
    "exec_result": 1
  },
  {
    "idx": 1614,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country",
    "pred": "SELECT `Driver`, `Country` FROM `driver`",
    "exec_result": 0
  },
  {
    "idx": 1615,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
    "pred": "SELECT MAX(Points) FROM driver WHERE Country = 4",
    "exec_result": 1
  },
  {
    "idx": 1616,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
    "pred": "SELECT MAX(Points) FROM driver WHERE Country = 2",
    "exec_result": 0
  },
  {
    "idx": 1617,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  \"English\"",
    "pred": "SELECT AVG(D.Age) as Average_Age FROM country AS C JOIN driver AS D ON C.Country_Id = D.Country WHERE C.Official_native_language = 'English'",
    "exec_result": 1
  },
  {
    "idx": 1618,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  \"English\"",
    "pred": "SELECT AVG(d.Age) as Average_Age FROM driver as d JOIN team_driver as td ON d.Driver_ID = td.Driver_ID JOIN team as t ON td.Team_ID = t.Team_ID WHERE t.Official_native_language = 'English'",
    "exec_result": 0
  },
  {
    "idx": 1619,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150",
    "pred": "SELECT DISTINCT country.Country FROM country JOIN driver ON country.Country_Id = driver.Country WHERE driver.Points > 150",
    "exec_result": 1
  },
  {
    "idx": 1620,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150",
    "pred": "SELECT DISTINCT country.Country FROM country JOIN driver ON country.Country_Id = driver.Country WHERE driver.Points > 150",
    "exec_result": 1
  },
  {
    "idx": 1621,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1",
    "pred": "SELECT `Capital` FROM `country` WHERE `Country_Id` = (SELECT `Country` FROM `driver` WHERE `Points` = (SELECT MAX(`Points`) FROM `driver`));",
    "exec_result": 1
  },
  {
    "idx": 1622,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1",
    "pred": "SELECT `Country`, `Capital` FROM `country` WHERE `Country_Id` = (SELECT `Country` FROM `driver` WHERE `Points` = (SELECT MAX(`Points`) FROM `driver`));",
    "exec_result": 0
  },
  {
    "idx": 1623,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make ,  COUNT(*) FROM driver GROUP BY Make",
    "pred": "SELECT `Make`, COUNT(*) as `Number_of_Drivers` FROM `team` INNER JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` GROUP BY `Make`",
    "exec_result": 0
  },
  {
    "idx": 1624,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make ,  COUNT(*) FROM driver GROUP BY Make",
    "pred": "SELECT `Make`, COUNT(*) FROM `team` JOIN `team_driver` ON `team`.`Team_ID` = `team_driver`.`Team_ID` GROUP BY `Make`",
    "exec_result": 0
  },
  {
    "idx": 1625,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T.`Make`, COUNT(*) as `Number_of_Drivers` FROM team as T JOIN team_driver as TD ON T.`Team_ID` = TD.`Team_ID` GROUP BY T.`Make` ORDER BY `Number_of_Drivers` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1626,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Make, COUNT(*) as NumberOfDrivers FROM team_driver INNER JOIN team ON team_driver.Team_ID = team.Team_ID GROUP BY Make ORDER BY NumberOfDrivers DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1627,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3",
    "pred": "SELECT D.`Make` FROM driver AS D JOIN team_driver AS TD ON D.`Driver_ID` = TD.`Driver_ID` GROUP BY D.`Make` HAVING COUNT(D.`Driver_ID`) >= 3",
    "exec_result": 1
  },
  {
    "idx": 1628,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3",
    "pred": "SELECT Make FROM ( SELECT Make, COUNT(*) as Driver_Count FROM team_driver INNER JOIN team ON team_driver.Team_ID = team.Team_ID GROUP BY Make ) as T1 WHERE Driver_Count >= 3",
    "exec_result": 0
  },
  {
    "idx": 1629,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)",
    "pred": "SELECT T.`Team` FROM team AS T LEFT JOIN team_driver AS TD ON T.`Team_ID` = TD.`Team_ID` WHERE TD.`Driver_ID` IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1630,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)",
    "pred": "SELECT team.Team FROM team LEFT JOIN team_driver ON team.Team_ID = team_driver.Team_ID WHERE team_driver.Team_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1631,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Dodge\" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Chevrolet\"",
    "pred": "SELECT DISTINCT country.Country FROM country WHERE country.Country IN ( SELECT country.Country FROM country WHERE country.Country IN ( SELECT team_driver.Team_ID FROM team_driver WHERE team_driver.Driver_ID IN ( SELECT driver.Driver_ID FROM driver WHERE driver.Make = 'Dodge' ) ) AND country.Country IN ( SELECT team_driver.Team_ID FROM team_driver WHERE team_driver.Driver_ID IN ( SELECT driver.Driver_ID FROM driver WHERE driver.Make = 'Chevrolet' ) ) )",
    "exec_result": 0
  },
  {
    "idx": 1632,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Dodge\" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Chevrolet\"",
    "pred": "SELECT DISTINCT country.Country FROM country JOIN team ON country.Country_Id = team.Country WHERE team.Make IN ('Dodge', 'Chevrolet')",
    "exec_result": 0
  },
  {
    "idx": 1633,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT sum(Points) ,  avg(Points) FROM driver",
    "pred": "SELECT SUM(CAST(Points AS INT)) AS Total_Points, AVG(CAST(Points AS INT)) AS Average_Points FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1634,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT sum(Points) ,  avg(Points) FROM driver",
    "pred": "SELECT SUM(CAST(Points AS INTEGER)) AS Total_Points, AVG(CAST(Points AS FLOAT)) AS Average_Points FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1635,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)",
    "pred": "SELECT country.Country FROM country WHERE country.Country_Id NOT IN (SELECT DISTINCT country.Country_Id FROM driver)",
    "exec_result": 0
  },
  {
    "idx": 1636,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)",
    "pred": "SELECT `Country` FROM `country` WHERE `Country_Id` NOT IN (SELECT DISTINCT `Country` FROM `driver`)",
    "exec_result": 1
  },
  {
    "idx": 1637,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T.`Manager`, T.`Sponsor`, COUNT(TD.`Driver_ID`) AS `Number_of_Drivers` FROM `team` AS T JOIN `team_driver` AS TD ON T.`Team_ID` = TD.`Team_ID` GROUP BY T.`Manager`, T.`Sponsor` ORDER BY COUNT(TD.`Driver_ID`) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1638,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.`Manager`, T1.`Sponsor` FROM team AS T1 JOIN (SELECT `Team_ID`, COUNT(*) AS `Num_Drivers` FROM team_driver GROUP BY `Team_ID` ORDER BY `Num_Drivers` DESC LIMIT 1) AS T2 ON T1.`Team_ID` = T2.`Team_ID`",
    "exec_result": 1
  },
  {
    "idx": 1639,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2",
    "pred": "SELECT T.Manager, D.Car_Owner FROM team AS T JOIN ( SELECT TD.Team_ID FROM team_driver AS TD GROUP BY TD.Team_ID HAVING COUNT(*) >= 2 ) AS SubQuery ON T.Team_ID = SubQuery.Team_ID JOIN driver AS D ON T.Manager = D.Driver_ID AND D.Car_Owner IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1640,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2",
    "pred": "SELECT T.`Team`, TD.`Manager`, TD.`Car_Owner` FROM team AS T JOIN team_driver AS TD ON T.`Team_ID` = TD.`Team_ID` JOIN driver AS D ON TD.`Driver_ID` = D.`Driver_ID`",
    "exec_result": 0
  },
  {
    "idx": 1641,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(*) FROM institution",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1642,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(*) FROM institution",
    "pred": "SELECT i.Name, i.Team, i.City, i.Province, i.Founded, i.Affiliation, i.Enrollment, i.Endowment, i.Stadium, i.Capacity, c.Nickname, c.Joined, c.Number_of_Championships FROM institution i LEFT JOIN Championship c ON i.Institution_ID = c.Institution_ID",
    "exec_result": 0
  },
  {
    "idx": 1643,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Name ASC",
    "pred": "SELECT Name FROM institution ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1644,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Name ASC",
    "pred": "SELECT `Name`, `Team`, `City`, `Province`, `Founded`, `Affiliation`, `Enrollment`, `Endowment`, `Stadium`, `Capacity` FROM `institution` WHERE `Institution_ID` IN (SELECT `Institution_ID` FROM `Championship`);",
    "exec_result": 0
  },
  {
    "idx": 1645,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Founded ASC",
    "pred": "SELECT Name FROM institution ORDER BY `Founded` ASC",
    "exec_result": 1
  },
  {
    "idx": 1646,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Founded ASC",
    "pred": "SELECT `Name`, `Founded` FROM institution WHERE `Founded` = (SELECT MIN(`Founded`) FROM institution)",
    "exec_result": 0
  },
  {
    "idx": 1647,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT City ,  Province FROM institution",
    "pred": "SELECT i1.City, i1.Province FROM institution i1 JOIN institution i2 ON i1.Institution_ID = i2.Institution_ID WHERE i2.Institution_ID IN ( SELECT Institution_ID FROM Championship )",
    "exec_result": 0
  },
  {
    "idx": 1648,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT City ,  Province FROM institution",
    "pred": "SELECT `Name`, `Founded` FROM institution WHERE `Institution_ID` IN (SELECT `Institution_ID` FROM Championship WHERE `Number_of_Championships` > 0)",
    "exec_result": 0
  },
  {
    "idx": 1649,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT max(Enrollment) ,  min(Enrollment) FROM institution",
    "pred": "SELECT MAX(Enrollment) AS Maximum_Enrollment, MIN(Enrollment) AS Minimum_Enrollment FROM institution;",
    "exec_result": 1
  },
  {
    "idx": 1650,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT max(Enrollment) ,  min(Enrollment) FROM institution",
    "pred": "SELECT MAX(Enrollment) as Maximum_Enrollment, MIN(Enrollment) as Minimum_Enrollment FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1651,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution WHERE City != \"Vancouver\"",
    "pred": "SELECT Affiliation FROM institution WHERE City != 'Vancouver'",
    "exec_result": 1
  },
  {
    "idx": 1652,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution WHERE City != \"Vancouver\"",
    "pred": "SELECT `Affiliation` FROM `institution` WHERE `City` != 'Vancouver'",
    "exec_result": 1
  },
  {
    "idx": 1653,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Capacity DESC",
    "pred": "SELECT `Stadium` FROM `institution` ORDER BY `Capacity` DESC",
    "exec_result": 1
  },
  {
    "idx": 1654,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Capacity DESC",
    "pred": "SELECT `Stadium` FROM `institution` ORDER BY `Capacity` DESC",
    "exec_result": 1
  },
  {
    "idx": 1655,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1656,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1",
    "pred": "SELECT `Stadium` FROM institution WHERE `Enrollment` = (SELECT MAX(`Enrollment`) FROM institution)",
    "exec_result": 1
  },
  {
    "idx": 1657,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID",
    "pred": "SELECT institution.Name, Championship.Nickname FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID;",
    "exec_result": 1
  },
  {
    "idx": 1658,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID",
    "pred": "SELECT institution.Name AS Institution_Name, institution.Team AS Institution_Team, institution.City AS Institution_City, institution.Province AS Institution_Province, institution.Founded AS Institution_Founded, institution.Affiliation AS Institution_Affiliation, institution.Enrollment AS Institution_Enrollment, institution.Endowment AS Institution_Endowment, institution.Stadium AS Institution_Stadium, institution.Capacity AS Institution_Capacity, championship.Nickname AS Championship_Nickname, championship.Joined AS Championship_Joined, championship.Number_of_Championships AS Championship_Number_of_Championships FROM institution JOIN championship ON institution.Institution_ID = championship.Institution_ID;",
    "exec_result": 0
  },
  {
    "idx": 1659,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1",
    "pred": "SELECT Nickname FROM Championship WHERE Institution_ID = (SELECT MIN(Institution_ID) FROM institution)",
    "exec_result": 0
  },
  {
    "idx": 1660,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1",
    "pred": "SELECT Nickname FROM Championship WHERE Institution_ID = (SELECT Institution_ID FROM institution ORDER BY Enrollment ASC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 1661,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC",
    "pred": "SELECT i.`Name`, i.`Founded` FROM institution i JOIN championship c ON i.`Institution_ID` = c.`Institution_ID` ORDER BY c.`Number_of_Championships` DESC",
    "exec_result": 0
  },
  {
    "idx": 1662,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC",
    "pred": "SELECT i.`Name`, SUM(c.`Number_of_Championships`) as `Total_Championships` FROM institution i JOIN championship c ON i.`Institution_ID` = c.`Institution_ID` GROUP BY i.`Name` ORDER BY `Total_Championships` DESC",
    "exec_result": 0
  },
  {
    "idx": 1663,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1",
    "pred": "SELECT `Name` FROM institution WHERE `Institution_ID` IN (SELECT `Institution_ID` FROM Championship)",
    "exec_result": 0
  },
  {
    "idx": 1664,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1",
    "pred": "SELECT T1.`Name` FROM institution AS T1 JOIN Championship AS T2 ON T1.`Institution_ID` = T2.`Institution_ID` WHERE T2.`Number_of_Championships` = (SELECT MAX(T2.`Number_of_Championships`) FROM Championship AS T2)",
    "exec_result": 0
  },
  {
    "idx": 1665,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  \"Public\"",
    "pred": "SELECT COUNT(*) FROM Championship WHERE Institution_ID IN (SELECT Institution_ID FROM Institution WHERE Affiliation = 'Public')",
    "exec_result": 0
  },
  {
    "idx": 1666,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  \"Public\"",
    "pred": "SELECT COUNT(*) FROM Championship WHERE Institution_ID IN (SELECT Institution_ID FROM institution WHERE Affiliation = 'Public')",
    "exec_result": 0
  },
  {
    "idx": 1667,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation",
    "pred": "SELECT Affiliation, COUNT(*) as NumberOfInstitutions FROM institution GROUP BY Affiliation;",
    "exec_result": 1
  },
  {
    "idx": 1668,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation",
    "pred": "SELECT Affiliation, COUNT(*) as Number_of_Institutions FROM institution GROUP BY Affiliation;",
    "exec_result": 1
  },
  {
    "idx": 1669,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Affiliation, COUNT(*) as count FROM institution GROUP BY Affiliation ORDER BY count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1670,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Affiliation, COUNT(*) as Affiliation_Count FROM institution GROUP BY Affiliation ORDER BY Affiliation_Count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1671,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1",
    "pred": "SELECT `Founded` FROM institution WHERE `Founded` IN ( SELECT `Founded` FROM institution GROUP BY `Founded` HAVING COUNT(*) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 1672,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1",
    "pred": "SELECT `Founded`, COUNT(*) as `Number_of_Institutions` FROM institution WHERE `Founded` IN ( SELECT `Founded` FROM institution GROUP BY `Founded` HAVING COUNT(*) > 1 ) GROUP BY `Founded`",
    "exec_result": 1
  },
  {
    "idx": 1673,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC",
    "pred": "SELECT `institution`.`Name`, `institution`.`Capacity` FROM `institution` JOIN `Championship` ON `institution`.`Institution_ID` = `Championship`.`Institution_ID` ORDER BY `institution`.`Capacity` DESC",
    "exec_result": 0
  },
  {
    "idx": 1674,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC",
    "pred": "SELECT c.Nickname, i.Capacity FROM Championship c JOIN Institution i ON c.Institution_ID = i.Institution_ID ORDER BY i.Capacity DESC;",
    "exec_result": 0
  },
  {
    "idx": 1675,
    "db_id": "institution_sports",
    "question": "",
    "gold": "select sum(enrollment) from institution where city  =  \"vancouver\" or city  =  \"calgary\"",
    "pred": "SELECT SUM(Enrollment) FROM institution WHERE City = 'Vancouver' OR City = 'Calgary';",
    "exec_result": 0
  },
  {
    "idx": 1676,
    "db_id": "institution_sports",
    "question": "",
    "gold": "select sum(enrollment) from institution where city  =  \"vancouver\" or city  =  \"calgary\"",
    "pred": "SELECT `Enrollment` FROM `institution` WHERE `City` = 'Vancouver' OR `City` = 'Calgary'",
    "exec_result": 0
  },
  {
    "idx": 1677,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950",
    "pred": "SELECT DISTINCT T1.`Province` FROM institution AS T1 JOIN institution AS T2 ON T1.`Founded` < T2.`Founded` AND T1.`Institution_ID` = T2.`Institution_ID`",
    "exec_result": 0
  },
  {
    "idx": 1678,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950",
    "pred": "SELECT DISTINCT Province FROM institution JOIN Championship ON institution.Institution_ID = Championship.Institution_ID WHERE institution.Founded < 1920 AND Championship.Joined > 1950",
    "exec_result": 0
  },
  {
    "idx": 1679,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(DISTINCT Province) FROM institution",
    "pred": "SELECT COUNT(DISTINCT Province) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1680,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(DISTINCT Province) FROM institution",
    "pred": "SELECT COUNT(DISTINCT Province) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1681,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT * FROM warehouses",
    "pred": "SELECT Warehouses.Code, Warehouses.Location, Warehouses.Capacity FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code, Warehouses.Location, Warehouses.Capacity",
    "exec_result": 1
  },
  {
    "idx": 1682,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT * FROM warehouses",
    "pred": "SELECT * FROM Warehouses;",
    "exec_result": 1
  },
  {
    "idx": 1683,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'",
    "pred": "SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Warehouse` = (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'New York')",
    "exec_result": 1
  },
  {
    "idx": 1684,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'",
    "pred": "SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Warehouse` = (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'New York');",
    "exec_result": 1
  },
  {
    "idx": 1685,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes WHERE Value  >  150",
    "pred": "SELECT Boxes.Contents FROM Boxes JOIN Warehouses ON Boxes.`Warehouse` = Warehouses.`Code` WHERE Boxes.`Value` > 150",
    "exec_result": 1
  },
  {
    "idx": 1686,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes WHERE Value  >  150",
    "pred": "SELECT `Contents` FROM `Boxes` WHERE `Value` > 150",
    "exec_result": 1
  },
  {
    "idx": 1687,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1688,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1689,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  sum(value) FROM boxes",
    "pred": "SELECT AVG(Warehouses.Capacity) as Average_Capacity, SUM(Boxes.Value) as Total_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse",
    "exec_result": 0
  },
  {
    "idx": 1690,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  sum(value) FROM boxes",
    "pred": "SELECT AVG(Value) AS Average_Value, SUM(Value) AS Total_Value FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1691,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(capacity) ,  sum(capacity) FROM warehouses",
    "pred": "SELECT AVG(Capacity) AS Average_Capacity, SUM(Capacity) AS Total_Capacity FROM Warehouses;",
    "exec_result": 1
  },
  {
    "idx": 1692,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(capacity) ,  sum(capacity) FROM warehouses",
    "pred": "SELECT AVG(Capacity) AS Average_Capacity, SUM(Capacity) AS Total_Capacity FROM Warehouses",
    "exec_result": 1
  },
  {
    "idx": 1693,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, AVG(Value) as Average_Value, MAX(Value) as Maximum_Value FROM Boxes GROUP BY Contents",
    "exec_result": 1
  },
  {
    "idx": 1694,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, AVG(Value) as Average_Value, MAX(Value) as Maximum_Value FROM Boxes GROUP BY Contents",
    "exec_result": 1
  },
  {
    "idx": 1695,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1",
    "pred": "SELECT `Contents`, SUM(`Value`) as `Total_Value` FROM `Boxes` WHERE `Warehouse` IN (SELECT `Code` FROM `Warehouses`) GROUP BY `Contents` ORDER BY `Total_Value` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1696,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1",
    "pred": "SELECT Contents FROM Boxes ORDER BY Value DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1697,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) FROM boxes",
    "pred": "SELECT AVG(Value) FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1698,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) FROM boxes",
    "pred": "SELECT AVG(Value) FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1699,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes",
    "pred": "SELECT DISTINCT Contents FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1700,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes",
    "pred": "SELECT DISTINCT `Contents` FROM `Boxes`",
    "exec_result": 1
  },
  {
    "idx": 1701,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) FROM boxes",
    "pred": "SELECT COUNT(DISTINCT `Contents`) FROM `Boxes`",
    "exec_result": 1
  },
  {
    "idx": 1702,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) FROM boxes",
    "pred": "SELECT COUNT(DISTINCT `Contents`) FROM `Boxes`",
    "exec_result": 1
  },
  {
    "idx": 1703,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM warehouses",
    "pred": "SELECT DISTINCT Location FROM Warehouses",
    "exec_result": 0
  },
  {
    "idx": 1704,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM warehouses",
    "pred": "SELECT DISTINCT Location FROM Warehouses",
    "exec_result": 0
  },
  {
    "idx": 1705,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Location IN ('Chicago', 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1706,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT Boxes.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Warehouses.Location IN ('Chicago', 'New York');",
    "exec_result": 1
  },
  {
    "idx": 1707,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT SUM(Value) as TotalValue FROM Boxes INNER JOIN Warehouses ON Boxes.`Warehouse` = Warehouses.`Code` WHERE Warehouses.`Location` IN ('Chicago', 'New York');",
    "exec_result": 1
  },
  {
    "idx": 1708,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT Warehouses.Location, SUM(Boxes.Value) as TotalValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Warehouses.Location IN ('Chicago', 'New York') GROUP BY Warehouses.Location;",
    "exec_result": 0
  },
  {
    "idx": 1709,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT Warehouses.Location, Boxes.Contents FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE (Warehouses.Location = 'Chicago' OR Warehouses.Location = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1710,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT DISTINCT B1.Contents FROM Boxes B1, Boxes B2, Warehouses W1, Warehouses W2 WHERE B1.Warehouse = W1.Code AND B2.Warehouse = W2.Code AND W1.Location = 'Chicago' AND W2.Location = 'New York' AND B1.Contents IN (SELECT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'Chicago') AND Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'New York'))",
    "exec_result": 0
  },
  {
    "idx": 1711,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT `Contents` FROM `Boxes` WHERE `Warehouse` NOT IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1712,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT `Contents` FROM `Boxes` WHERE `Warehouse` = 'New York' AND `Contents` NOT IN (SELECT `Contents` FROM `Boxes` WHERE `Warehouse` = 'Chicago');",
    "exec_result": 0
  },
  {
    "idx": 1713,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents != 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1714,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents != 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1715,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'",
    "pred": "SELECT Warehouses.Code, Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors')",
    "exec_result": 0
  },
  {
    "idx": 1716,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'",
    "pred": "SELECT DISTINCT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents IN ('Rocks', 'Scissors')",
    "exec_result": 1
  },
  {
    "idx": 1717,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' OR Boxes.Contents = 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1718,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents = 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1719,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value",
    "pred": "SELECT T1.`Code`, T1.`Contents`, T1.`Value` FROM Boxes AS T1 ORDER BY T1.`Value`",
    "exec_result": 0
  },
  {
    "idx": 1720,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value",
    "pred": "SELECT `Code`, `Contents` FROM `Boxes` ORDER BY `Value`",
    "exec_result": 1
  },
  {
    "idx": 1721,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1",
    "pred": "SELECT `Code`, `Contents` FROM `Boxes` WHERE `Value` = (SELECT MIN(`Value`) FROM `Boxes`)",
    "exec_result": 1
  },
  {
    "idx": 1722,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1",
    "pred": "SELECT Code, Contents FROM Boxes WHERE Value = (SELECT MIN(Value) FROM Boxes)",
    "exec_result": 1
  },
  {
    "idx": 1723,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)",
    "pred": "SELECT DISTINCT `Contents` FROM `Boxes` WHERE `Value` > (SELECT AVG(`Value`) FROM `Boxes`)",
    "exec_result": 1
  },
  {
    "idx": 1724,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)",
    "pred": "SELECT `Contents` FROM `Boxes` WHERE `Value` > (SELECT AVG(`Value`) FROM `Boxes`)",
    "exec_result": 1
  },
  {
    "idx": 1725,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS",
    "pred": "SELECT DISTINCT b.Contents FROM Boxes b JOIN Warehouses w ON b.Warehouse = w.Code ORDER BY b.Contents ASC;",
    "exec_result": 1
  },
  {
    "idx": 1726,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS",
    "pred": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents ASC;",
    "exec_result": 1
  },
  {
    "idx": 1727,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')",
    "pred": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Value > (SELECT Boxes.Value FROM Boxes WHERE Boxes.Contents = 'Rocks')",
    "exec_result": 0
  },
  {
    "idx": 1728,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')",
    "pred": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Value > (SELECT MAX(Boxes2.Value) FROM Boxes AS Boxes2 WHERE Boxes2.Contents = 'Rocks')",
    "exec_result": 0
  },
  {
    "idx": 1729,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')",
    "pred": "SELECT `Code`, `Contents` FROM `Boxes` WHERE `Value` > (SELECT `Value` FROM `Boxes` WHERE `Contents` = 'Scissors')",
    "exec_result": 1
  },
  {
    "idx": 1730,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')",
    "pred": "SELECT W.Code, B.Code FROM Warehouses W JOIN Boxes B ON W.Code = B.Warehouse WHERE B.Contents = 'Scissors' AND B.Value > ( SELECT B2.Value FROM Boxes B2 WHERE B2.Contents = 'Scissors' AND B2.Warehouse = W.Code )",
    "exec_result": 0
  },
  {
    "idx": 1731,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1",
    "pred": "SELECT SUM(Value) FROM Boxes WHERE Warehouse = (SELECT Code FROM Warehouses ORDER BY Capacity DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 1732,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1",
    "pred": "SELECT SUM(Boxes.Value) as TotalValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Warehouses.Capacity = (SELECT MAX(Capacity) FROM Warehouses)",
    "exec_result": 0
  },
  {
    "idx": 1733,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150",
    "pred": "SELECT Warehouses.Code, AVG(Boxes.Value) as AverageValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150",
    "exec_result": 1
  },
  {
    "idx": 1734,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150",
    "pred": "SELECT Warehouses.Code, AVG(Boxes.Value) as Average_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150",
    "exec_result": 1
  },
  {
    "idx": 1735,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT `Contents`, SUM(`Value`) AS `Total Value`, COUNT(*) AS `Number of Boxes` FROM `Boxes` GROUP BY `Contents`",
    "exec_result": 1
  },
  {
    "idx": 1736,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT `Contents`, COUNT(*) as `Number of Boxes`, SUM(`Value`) as `Total Value` FROM Boxes GROUP BY `Contents`",
    "exec_result": 1
  },
  {
    "idx": 1737,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION",
    "pred": "SELECT Location, SUM(Capacity) as Total_Capacity, AVG(Capacity) as Average_Capacity, MAX(Capacity) as Maximum_Capacity FROM Warehouses GROUP BY Location",
    "exec_result": 1
  },
  {
    "idx": 1738,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION",
    "pred": "SELECT Location, SUM(Capacity) as Total_Capacity, AVG(Capacity) as Average_Capacity, MAX(Capacity) as Maximum_Capacity FROM Warehouses GROUP BY Location",
    "exec_result": 1
  },
  {
    "idx": 1739,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) FROM warehouses",
    "pred": "SELECT SUM(Capacity) FROM Warehouses",
    "exec_result": 1
  },
  {
    "idx": 1740,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) FROM warehouses",
    "pred": "SELECT SUM(Capacity) as Total_Capacity FROM Warehouses;",
    "exec_result": 1
  },
  {
    "idx": 1741,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location",
    "pred": "SELECT Warehouses.Location, MAX(Boxes.Value) as Max_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location",
    "exec_result": 1
  },
  {
    "idx": 1742,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location",
    "pred": "SELECT Warehouses.Location, MAX(Boxes.Value) as Max_Value FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location",
    "exec_result": 1
  },
  {
    "idx": 1743,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT Warehouse ,  count(*) FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(*) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1744,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "select warehouse ,  count(*) from boxes group by warehouse",
    "pred": "SELECT Warehouses.Location, COUNT(Boxes.Code) as NumberOfBoxes FROM Warehouses LEFT JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;",
    "exec_result": 0
  },
  {
    "idx": 1745,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'",
    "pred": "SELECT COUNT(DISTINCT Warehouses.Location) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks'",
    "exec_result": 1
  },
  {
    "idx": 1746,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'",
    "pred": "SELECT COUNT(DISTINCT Warehouse) FROM Boxes WHERE Contents = 'Rocks'",
    "exec_result": 1
  },
  {
    "idx": 1747,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code",
    "pred": "SELECT Boxes.Code, Warehouses.Location FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1748,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code",
    "pred": "SELECT Warehouses.Code, Warehouses.Location, Boxes.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse",
    "exec_result": 0
  },
  {
    "idx": 1749,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'",
    "pred": "SELECT `Code` FROM `Boxes` WHERE `Warehouse` IN (SELECT `Code` FROM `Warehouses` WHERE `Location` = 'Chicago')",
    "exec_result": 1
  },
  {
    "idx": 1750,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'",
    "pred": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Warehouses.Location = 'Chicago'",
    "exec_result": 0
  },
  {
    "idx": 1751,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.`Code`, COUNT(*) FROM Warehouses JOIN Boxes ON Warehouses.`Code` = Boxes.`Warehouse` GROUP BY Warehouses.`Code`",
    "exec_result": 1
  },
  {
    "idx": 1752,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Location, COUNT(Boxes.Code) as Boxes_Count FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Location;",
    "exec_result": 0
  },
  {
    "idx": 1753,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1754,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) as NumberOfContents FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1755,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity",
    "pred": "SELECT Warehouses.Code FROM Warehouses WHERE Warehouses.Capacity < (SELECT MAX(Capacity) FROM Warehouses)",
    "exec_result": 0
  },
  {
    "idx": 1756,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity",
    "pred": "SELECT Warehouses.Code FROM Warehouses JOIN ( SELECT Warehouse, COUNT(*) as BoxesCount FROM Boxes GROUP BY Warehouse ) as BoxesCounts ON Warehouses.Code = BoxesCounts.Warehouse WHERE BoxesCounts.BoxesCount > Warehouses.Capacity",
    "exec_result": 1
  },
  {
    "idx": 1757,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'",
    "pred": "SELECT SUM(Value) FROM Boxes WHERE Warehouse NOT IN (SELECT Code FROM Warehouses WHERE Location = 'Chicago')",
    "exec_result": 1
  },
  {
    "idx": 1758,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'",
    "pred": "SELECT SUM(Value) as TotalValue FROM Boxes WHERE Warehouse NOT IN (SELECT Code FROM Warehouses WHERE Location = 'Chicago')",
    "exec_result": 1
  },
  {
    "idx": 1759,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name ,  city ,  state FROM University ORDER BY university_name",
    "pred": "SELECT `University_Name`, `City`, `State` FROM university WHERE `University_ID` IN (SELECT `University_ID` FROM overall_ranking);",
    "exec_result": 1
  },
  {
    "idx": 1760,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name ,  city ,  state FROM University ORDER BY university_name",
    "pred": "SELECT `University_Name`, `City`, `State` FROM `university` ORDER BY `University_Name` ASC;",
    "exec_result": 1
  },
  {
    "idx": 1761,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'",
    "pred": "SELECT COUNT(*) FROM university WHERE (State = 'Illinois' OR State = 'Ohio')",
    "exec_result": 1
  },
  {
    "idx": 1762,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'",
    "pred": "SELECT COUNT(*) FROM university WHERE State = 'Illinois' OR State = 'Ohio'",
    "exec_result": 1
  },
  {
    "idx": 1763,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University",
    "pred": "SELECT MIN(Enrollment) as Minimum_Enrollment FROM university",
    "exec_result": 0
  },
  {
    "idx": 1764,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University",
    "pred": "SELECT MAX(Enrollment) AS Maximum_Enrollment, AVG(Enrollment) AS Average_Enrollment, MIN(Enrollment) AS Minimum_Enrollment FROM university;",
    "exec_result": 1
  },
  {
    "idx": 1765,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT team_name FROM University WHERE enrollment  >  (SELECT avg(enrollment) FROM University)",
    "pred": "SELECT `Team_Name` FROM university WHERE `Enrollment` > (SELECT AVG(`Enrollment`) FROM university)",
    "exec_result": 1
  },
  {
    "idx": 1766,
    "db_id": "university_rank",
    "question": "",
    "gold": "select team_name from university where enrollment  >  (select avg(enrollment) from university)",
    "pred": "SELECT u.Team_Name FROM university u JOIN overall_ranking or ON u.University_ID = or.University_ID WHERE or.Enrollment > (SELECT AVG(or.Enrollment) FROM overall_ranking or JOIN university u ON u.University_ID = or.University_ID)",
    "exec_result": 0
  },
  {
    "idx": 1767,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT DISTINCT home_conference FROM University",
    "pred": "SELECT DISTINCT Home_Conference FROM university",
    "exec_result": 1
  },
  {
    "idx": 1768,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT DISTINCT home_conference FROM University",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1769,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference ,  count(*) FROM University GROUP BY home_conference",
    "pred": "SELECT `Home_Conference`, COUNT(*) FROM university GROUP BY `Home_Conference`",
    "exec_result": 1
  },
  {
    "idx": 1770,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference ,  count(*) FROM University GROUP BY home_conference",
    "pred": "SELECT `Home_Conference`, COUNT(*) as `Number_of_Universities` FROM university WHERE `Home_Conference` IN ( SELECT `Home_Conference` FROM university GROUP BY `Home_Conference` HAVING COUNT(*) > 1 ) GROUP BY `Home_Conference`",
    "exec_result": 0
  },
  {
    "idx": 1771,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `State`, COUNT(*) as `Number_of_Universities` FROM `university` GROUP BY `State` ORDER BY `Number_of_Universities` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1772,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT State, COUNT(*) as UniversityCount FROM university GROUP BY State ORDER BY UniversityCount DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1773,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000",
    "pred": "SELECT `Home_Conference`, AVG(`Enrollment`) as `Average_Enrollment` FROM `university` GROUP BY `Home_Conference` HAVING `Average_Enrollment` > 2000",
    "exec_result": 0
  },
  {
    "idx": 1774,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000",
    "pred": "SELECT `Home_Conference` FROM `university` WHERE `Enrollment` > 2000",
    "exec_result": 0
  },
  {
    "idx": 1775,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1",
    "pred": "SELECT `Home_Conference` FROM `university` WHERE `Enrollment` = (SELECT MIN(`Enrollment`) FROM `university`)",
    "exec_result": 1
  },
  {
    "idx": 1776,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1",
    "pred": "SELECT `Home_Conference`, COUNT(*) as `Number_of_Enrollment` FROM university GROUP BY `Home_Conference` ORDER BY `Number_of_Enrollment` ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1777,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT major_name ,  major_code FROM Major ORDER BY major_code",
    "pred": "SELECT `Major_Name`, `Major_Code` FROM `major` ORDER BY `Major_Code`",
    "exec_result": 1
  },
  {
    "idx": 1778,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT major_name ,  major_code FROM Major ORDER BY major_code",
    "pred": "SELECT `Major_Name`, `Major_Code` FROM `major` ORDER BY `Major_Code`",
    "exec_result": 1
  },
  {
    "idx": 1779,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'",
    "pred": "SELECT `Major_Name`, `Major_Code` FROM major WHERE Major_ID IN (SELECT Major_ID FROM major_ranking WHERE University_ID = (SELECT University_ID FROM university WHERE University_Name = 'Augustana College'))",
    "exec_result": 0
  },
  {
    "idx": 1780,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'",
    "pred": "SELECT major.Major_Name, major_ranking.Rank FROM major_ranking JOIN major ON major_ranking.Major_ID = major.Major_ID JOIN university ON major_ranking.University_ID = university.University_ID WHERE university.University_Name = 'Augustana College';",
    "exec_result": 1
  },
  {
    "idx": 1781,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'",
    "pred": "error",
    "exec_result": 0
  },
  {
    "idx": 1782,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'",
    "pred": "SELECT `University_Name`, `City`, `State` FROM university WHERE `University_ID` = ( SELECT `University_ID` FROM major_ranking WHERE `Rank` = 1 )",
    "exec_result": 0
  },
  {
    "idx": 1783,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT u.University_Name FROM university u JOIN ( SELECT mr.University_ID, COUNT(*) as major_count FROM major_ranking mr GROUP BY mr.University_ID ) m ON u.University_ID = m.University_ID WHERE m.major_count = ( SELECT MAX(major_count) FROM ( SELECT COUNT(*) as major_count FROM major_ranking GROUP BY University_ID ) )",
    "exec_result": 0
  },
  {
    "idx": 1784,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT u.University_Name FROM major_ranking AS mr JOIN university AS u ON mr.University_ID = u.University_ID GROUP BY u.University_ID ORDER BY COUNT(mr.Major_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1785,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1",
    "pred": "SELECT university.University_Name FROM university LEFT JOIN major_ranking ON university.University_ID = major_ranking.University_ID WHERE major_ranking.Rank = 1 AND major_ranking.Major_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1786,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1",
    "pred": "SELECT university.University_Name FROM university WHERE university.University_ID NOT IN ( SELECT major_ranking.University_ID FROM major_ranking WHERE major_ranking.Rank = 1 )",
    "exec_result": 1
  },
  {
    "idx": 1787,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'",
    "pred": "SELECT university.University_Name FROM university JOIN major_ranking ON university.University_ID = major_ranking.University_ID WHERE major_ranking.Major_ID IN ( SELECT major_ID FROM major WHERE major_Name IN ('Accounting', 'Urban Education') ) GROUP BY university.University_Name HAVING COUNT(DISTINCT major_ranking.Major_ID) = 2;",
    "exec_result": 1
  },
  {
    "idx": 1788,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'",
    "pred": "SELECT university.University_Name FROM university WHERE university.University_ID IN ( SELECT major_ranking.University_ID FROM major_ranking WHERE major_ranking.Major_ID IN ( SELECT major.Major_ID FROM major WHERE major.Major_Name = 'Accounting' ) ) AND university.University_ID IN ( SELECT major_ranking.University_ID FROM major_ranking WHERE major_ranking.Major_ID IN ( SELECT major.Major_ID FROM major WHERE major.Major_Name = 'Urban Education' ) )",
    "exec_result": 1
  },
  {
    "idx": 1789,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'",
    "pred": "SELECT `university`.`University_Name`, `overall_ranking`.`Rank` FROM `university` JOIN `overall_ranking` ON `overall_ranking`.`University_ID` = `university`.`University_ID` WHERE `university`.`State` = 'Wisconsin'",
    "exec_result": 1
  },
  {
    "idx": 1790,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'",
    "pred": "SELECT university.University_Name, major_ranking.Rank FROM university JOIN major_ranking ON university.University_ID = major_ranking.University_ID WHERE university.State = 'Wisconsin' ORDER BY major_ranking.Rank;",
    "exec_result": 0
  },
  {
    "idx": 1791,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1792,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1793,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point",
    "pred": "SELECT `University_Name` FROM `university` JOIN `overall_ranking` ON `university`.`University_ID` = `overall_ranking`.`University_ID` ORDER BY `overall_ranking`.`Reputation_point` ASC;",
    "exec_result": 1
  },
  {
    "idx": 1794,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point",
    "pred": "SELECT university.University_Name, overall_ranking.Reputation_point FROM overall_ranking JOIN university ON overall_ranking.University_ID = university.University_ID ORDER BY overall_ranking.Reputation_point ASC;",
    "exec_result": 0
  },
  {
    "idx": 1795,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  \"Accounting\"",
    "pred": "SELECT university.University_Name FROM university JOIN major_ranking ON university.University_ID = major_ranking.University_ID WHERE major_ranking.Rank >= 3;",
    "exec_result": 0
  },
  {
    "idx": 1796,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  \"Accounting\"",
    "pred": "SELECT u.University_Name FROM university u JOIN overall_ranking or1 ON u.University_ID = or1.University_ID JOIN major_ranking mr1 ON u.University_ID = mr1.University_ID WHERE or1.Rank <= 3 AND mr1.Rank <= 3;",
    "exec_result": 0
  },
  {
    "idx": 1797,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5",
    "pred": "SELECT SUM(university.Enrollment) FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID WHERE overall_ranking.Rank <= 5",
    "exec_result": 0
  },
  {
    "idx": 1798,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5",
    "pred": "SELECT SUM(overall_ranking.Total) FROM overall_ranking JOIN university ON overall_ranking.University_ID = university.University_ID WHERE overall_ranking.Rank <= 5",
    "exec_result": 0
  },
  {
    "idx": 1799,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3",
    "pred": "SELECT university.University_Name, overall_ranking.Citation_point, major.Major_Name FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID JOIN major_ranking ON university.University_ID = major_ranking.University_ID JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE overall_ranking.Reputation_point > 0.0 ORDER BY overall_ranking.Reputation_point DESC, major.Major_Name ASC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1800,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3",
    "pred": "SELECT `University_Name`, `Citation_point` FROM `university` JOIN `overall_ranking` ON `university`.`University_ID` = `overall_ranking`.`University_ID` WHERE `overall_ranking`.`Reputation_point` = ( SELECT MAX(`Reputation_point`) FROM `overall_ranking` );",
    "exec_result": 0
  },
  {
    "idx": 1801,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2",
    "pred": "SELECT University_Name FROM university WHERE Enrollment < 3000 GROUP BY University_Name HAVING COUNT(*) > 2",
    "exec_result": 0
  },
  {
    "idx": 1802,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2",
    "pred": "SELECT State FROM university WHERE Enrollment < 3000 GROUP BY State HAVING COUNT(University_ID) > 2",
    "exec_result": 1
  },
  {
    "idx": 1803,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'null'",
    "pred": "SELECT Title FROM Movies WHERE Rating IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1804,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'null'",
    "pred": "SELECT Movies.Title FROM Movies WHERE Movies.Rating IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1805,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G'",
    "pred": "SELECT Title FROM Movies WHERE Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1806,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G'",
    "pred": "SELECT Movies.Title FROM Movies WHERE Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1807,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE MovieTheaters.Name = 'Odeon'",
    "exec_result": 1
  },
  {
    "idx": 1808,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT Movies.Title FROM Movies INNER JOIN MovieTheaters ON MovieTheaters.Movie = Movies.Code WHERE MovieTheaters.Name = 'Odeon';",
    "exec_result": 1
  },
  {
    "idx": 1809,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Title",
    "exec_result": 1
  },
  {
    "idx": 1810,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT Movies.Title, MovieTheaters.Name FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie",
    "exec_result": 1
  },
  {
    "idx": 1811,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies WHERE rating  =  'G'",
    "pred": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1812,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies WHERE rating  =  'G'",
    "pred": "SELECT COUNT(*) FROM Movies WHERE Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1813,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(*) FROM Movies",
    "exec_result": 0
  },
  {
    "idx": 1814,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(*) FROM Movies",
    "exec_result": 0
  },
  {
    "idx": 1815,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(DISTINCT Movie) FROM MovieTheaters",
    "exec_result": 1
  },
  {
    "idx": 1816,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(DISTINCT Movie) as NumberOfMovies FROM MovieTheaters",
    "exec_result": 1
  },
  {
    "idx": 1817,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT name) FROM movietheaters",
    "pred": "SELECT COUNT(DISTINCT Movie) FROM MovieTheaters",
    "exec_result": 0
  },
  {
    "idx": 1818,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT name) FROM movietheaters",
    "pred": "SELECT COUNT(DISTINCT Code) FROM MovieTheaters",
    "exec_result": 1
  },
  {
    "idx": 1819,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT rating FROM movies WHERE title LIKE '%Citizen%'",
    "pred": "SELECT `Rating` FROM Movies WHERE Title LIKE '%Citizen%'",
    "exec_result": 1
  },
  {
    "idx": 1820,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT rating FROM movies WHERE title LIKE '%Citizen%'",
    "pred": "SELECT Rating FROM Movies WHERE Title LIKE '%Citizen%'",
    "exec_result": 1
  },
  {
    "idx": 1821,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'",
    "pred": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating IN ('G', 'PG')",
    "exec_result": 0
  },
  {
    "idx": 1822,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'",
    "pred": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating IN ('G', 'PG')",
    "exec_result": 0
  },
  {
    "idx": 1823,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'",
    "pred": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name IN ('Odeon', 'Imperial')",
    "exec_result": 1
  },
  {
    "idx": 1824,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'",
    "pred": "SELECT Movies.Title FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Name = 'Odeon' OR MovieTheaters.Name = 'Imperial';",
    "exec_result": 1
  },
  {
    "idx": 1825,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'",
    "pred": "SELECT Movies.Title FROM Movies WHERE Movies.Code IN ( SELECT MovieTheaters.Movie FROM MovieTheaters WHERE MovieTheaters.Name IN ('Odeon', 'Imperial') )",
    "exec_result": 0
  },
  {
    "idx": 1826,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'",
    "pred": "SELECT Movies.Title FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE MovieTheaters.Name IN ('Odeon', 'Imperial') GROUP BY Movies.Title HAVING COUNT(DISTINCT MovieTheaters.Name) = 2;",
    "exec_result": 1
  },
  {
    "idx": 1827,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT Movies.Title FROM Movies WHERE Movies.Code NOT IN ( SELECT MovieTheaters.Movie FROM MovieTheaters WHERE MovieTheaters.Name = 'Odeon' )",
    "exec_result": 1
  },
  {
    "idx": 1828,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT Movies.Title FROM Movies WHERE Movies.Code NOT IN (SELECT MovieTheaters.Movie FROM MovieTheaters WHERE MovieTheaters.Name = 'Odeon')",
    "exec_result": 1
  },
  {
    "idx": 1829,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY title",
    "pred": "SELECT Title FROM Movies ORDER BY Title ASC",
    "exec_result": 1
  },
  {
    "idx": 1830,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY title",
    "pred": "SELECT Title FROM Movies ORDER BY Title ASC",
    "exec_result": 1
  },
  {
    "idx": 1831,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY rating",
    "pred": "SELECT Title, Rating FROM Movies ORDER BY Rating",
    "exec_result": 0
  },
  {
    "idx": 1832,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY rating",
    "pred": "SELECT Title, Rating FROM Movies ORDER BY Rating",
    "exec_result": 0
  },
  {
    "idx": 1833,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Name`, COUNT(*) as `Number of Movies` FROM MovieTheaters JOIN Movies ON MovieTheaters.`Movie` = Movies.`Code` GROUP BY MovieTheaters.`Name` ORDER BY `Number of Movies` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1834,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1835,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT M.Title, COUNT(*) as NumberOfTheaters FROM Movies as M JOIN MovieTheaters as MT ON M.Code = MT.Movie GROUP BY M.Title ORDER BY NumberOfTheaters DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1836,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Movies.Title, COUNT(MovieTheaters.Code) as NumberOfTheaters FROM Movies JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie GROUP BY Movies.Title ORDER BY NumberOfTheaters DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1837,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies GROUP BY rating",
    "pred": "SELECT Rating, COUNT(*) FROM Movies GROUP BY Rating",
    "exec_result": 1
  },
  {
    "idx": 1838,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies GROUP BY rating",
    "pred": "SELECT Rating, COUNT(*) FROM Movies GROUP BY Rating",
    "exec_result": 1
  },
  {
    "idx": 1839,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating",
    "pred": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1840,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating",
    "pred": "SELECT COUNT(*) FROM Movies WHERE Rating IS NOT NULL",
    "exec_result": 0
  },
  {
    "idx": 1841,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies)",
    "exec_result": 0
  },
  {
    "idx": 1842,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1",
    "pred": "SELECT DISTINCT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies)",
    "exec_result": 0
  },
  {
    "idx": 1843,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1844,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1845,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'",
    "pred": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1846,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'",
    "pred": "SELECT MovieTheaters.Name FROM MovieTheaters JOIN Movies ON MovieTheaters.Movie = Movies.Code WHERE Movies.Rating = 'G'",
    "exec_result": 1
  },
  {
    "idx": 1847,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1848,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies",
    "pred": "SELECT Title FROM Movies;",
    "exec_result": 1
  },
  {
    "idx": 1849,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT rating FROM movies",
    "pred": "SELECT DISTINCT Rating FROM Movies",
    "exec_result": 1
  },
  {
    "idx": 1850,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT rating FROM movies",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1851,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT * FROM movies WHERE rating  =  'null'",
    "pred": "SELECT * FROM Movies WHERE Rating IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1852,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT * FROM movies WHERE rating  =  'null'",
    "pred": "SELECT * FROM Movies WHERE Rating IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1853,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')",
    "pred": "SELECT Movies.Title FROM Movies WHERE Movies.Code NOT IN (SELECT MovieTheaters.Movie FROM MovieTheaters)",
    "exec_result": 0
  },
  {
    "idx": 1854,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')",
    "pred": "SELECT Movies.Title FROM Movies WHERE Movies.Code NOT IN (SELECT MovieTheaters.Movie FROM MovieTheaters)",
    "exec_result": 0
  },
  {
    "idx": 1855,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1",
    "pred": "SELECT Client.Name, SUM(Package.Weight) as TotalWeight FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Client.Name ORDER BY TotalWeight DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1856,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1",
    "pred": "SELECT Client.Name FROM Client JOIN Package ON Client.AccountNumber = Package.Recipient GROUP BY Package.PackageNumber ORDER BY SUM(Package.Weight) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1857,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT SUM(Weight) as TotalWeight FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong')",
    "exec_result": 0
  },
  {
    "idx": 1858,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT SUM(Weight) as TotalWeight FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong')",
    "exec_result": 0
  },
  {
    "idx": 1859,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT POSITION FROM Employee WHERE Name  =  \"Amy Wong\";",
    "pred": "SELECT Position FROM Employee WHERE Name = 'Amy Wong'",
    "exec_result": 1
  },
  {
    "idx": 1860,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT POSITION FROM Employee WHERE Name  =  \"Amy Wong\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1861,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Salary ,  POSITION FROM Employee WHERE Name  =  \"Turanga Leela\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1862,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Salary ,  POSITION FROM Employee WHERE Name  =  \"Turanga Leela\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1863,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT avg(Salary) FROM Employee WHERE POSITION  =  \"Intern\";",
    "pred": "SELECT AVG(Salary) FROM Employee WHERE Position = 'Intern'",
    "exec_result": 1
  },
  {
    "idx": 1864,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT avg(Salary) FROM Employee WHERE POSITION  =  \"Intern\";",
    "pred": "SELECT AVG(Salary) as Average_Salary FROM Employee WHERE Position = 'Intern'",
    "exec_result": 1
  },
  {
    "idx": 1865,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  \"Physician\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1866,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  \"Physician\";",
    "pred": "SELECT Level FROM Has_Clearance JOIN Employee ON Has_Clearance.Employee = Employee.EmployeeID WHERE Employee.Position = 'Physician';",
    "exec_result": 1
  },
  {
    "idx": 1867,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT `PackageNumber` FROM `Package` WHERE `Sender` = (SELECT `AccountNumber` FROM `Client` WHERE `Name` = 'Leo Wong');",
    "exec_result": 1
  },
  {
    "idx": 1868,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT COUNT(*) FROM Package JOIN Client ON Package.Sender = Client.AccountNumber WHERE Client.Name = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1869,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t1.packagenumber from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber where t2.name = \"leo wong\";",
    "pred": "SELECT `PackageNumber` FROM `Package` WHERE `Recipient` = 'Leo Wong'",
    "exec_result": 1
  },
  {
    "idx": 1870,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\";",
    "pred": "SELECT `PackageNumber` FROM `Package` WHERE `Recipient` = (SELECT `AccountNumber` FROM `Client` WHERE `Name` = 'Leo Wong');",
    "exec_result": 1
  },
  {
    "idx": 1871,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT * FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') OR Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong')",
    "exec_result": 0
  },
  {
    "idx": 1872,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT PackageNumber FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') OR Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong');",
    "exec_result": 1
  },
  {
    "idx": 1873,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = \"Ogden Wernstrom\" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT COUNT(*) FROM Package WHERE Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong') AND Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Ogden Wernstrom');",
    "exec_result": 1
  },
  {
    "idx": 1874,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = \"Ogden Wernstrom\" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Ogden Wernstrom') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Leo Wong')",
    "exec_result": 1
  },
  {
    "idx": 1875,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"John Zoidfarb\";",
    "pred": "SELECT Package.Contents FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Client ON Package.Recipient = Client.AccountNumber WHERE Client.Name = 'John Zoidberg';",
    "exec_result": 1
  },
  {
    "idx": 1876,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"John Zoidfarb\";",
    "pred": "SELECT `Contents` FROM `Package` INNER JOIN `Shipment` ON `Package`.`Shipment` = `Shipment`.`ShipmentID` INNER JOIN `Client` ON `Package`.`Sender` = `Client`.`AccountNumber` WHERE `Client`.`Name` = 'John Zoidberg';",
    "exec_result": 0
  },
  {
    "idx": 1877,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE \"John\";",
    "pred": "SELECT `PackageNumber`, `Weight` FROM `Package` WHERE `Sender` = (SELECT `AccountNumber` FROM `Client` WHERE `Name` = 'John A. Zoidberg') ORDER BY `Weight` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1878,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE \"John\";",
    "pred": "SELECT `PackageNumber`, `Weight` FROM `Package` WHERE `Sender` IN (SELECT `AccountNumber` FROM `Client` WHERE `Name` = 'John') ORDER BY `Weight` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1879,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;",
    "pred": "SELECT `PackageNumber`, `Weight` FROM `Package` ORDER BY `Weight` ASC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 1880,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;",
    "pred": "SELECT `PackageNumber`, `Weight` FROM `Package` ORDER BY `Weight` ASC LIMIT 3;",
    "exec_result": 1
  },
  {
    "idx": 1881,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT C.`Name`, COUNT(*) as `Number_of_Packages` FROM Package as P JOIN Client as C ON P.`Sender` = C.`AccountNumber` GROUP BY C.`Name` ORDER BY `Number_of_Packages` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1882,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT C.`Name`, COUNT(*) as NumberOfPackages FROM Client as C JOIN Package as P ON C.`AccountNumber` = P.`Sender` GROUP BY C.`AccountNumber` ORDER BY NumberOfPackages DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1883,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;",
    "pred": "SELECT C.`Name`, COUNT(*) as `Number of Packages` FROM `Package` as P JOIN `Client` as C ON P.`Recipient` = C.`AccountNumber` GROUP BY C.`AccountNumber` ORDER BY COUNT(*) LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1884,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;",
    "pred": "SELECT MIN(PackageNumber) as smallest_package_number, Name as sender_name FROM Package JOIN Client ON Package.Sender = Client.AccountNumber GROUP BY Package.Sender",
    "exec_result": 0
  },
  {
    "idx": 1885,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;",
    "pred": "SELECT C.`Name` FROM Client AS C JOIN Package AS P ON C.`AccountNumber` = P.`Sender` GROUP BY C.`AccountNumber` HAVING COUNT(DISTINCT P.`PackageNumber`) > 1",
    "exec_result": 0
  },
  {
    "idx": 1886,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;",
    "pred": "SELECT C.`Name` FROM Client C JOIN Package P ON C.`AccountNumber` = P.`Sender` GROUP BY C.`AccountNumber` HAVING COUNT(DISTINCT P.`PackageNumber`) > 1",
    "exec_result": 0
  },
  {
    "idx": 1887,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Coordinates FROM Planet WHERE Name  =  \"Mars\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1888,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Coordinates FROM Planet WHERE Name  =  \"Mars\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1889,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name ,  Coordinates FROM Planet ORDER BY Name",
    "pred": "SELECT Name, Coordinates FROM Planet ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 1890,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name ,  Coordinates FROM Planet ORDER BY Name",
    "pred": "SELECT Name, Coordinates FROM Planet ORDER BY Name ASC;",
    "exec_result": 1
  },
  {
    "idx": 1891,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = \"Phillip J. Fry\";",
    "pred": "SELECT `ShipmentID` FROM `Shipment` WHERE `Manager` IN (SELECT `EmployeeID` FROM `Employee` WHERE `Name` = 'Phillip J. Fry')",
    "exec_result": 1
  },
  {
    "idx": 1892,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = \"Phillip J. Fry\";",
    "pred": "SELECT Shipment.ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'Phillip J. Fry';",
    "exec_result": 1
  },
  {
    "idx": 1893,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Date FROM Shipment;",
    "pred": "SELECT `Date` FROM `Shipment`",
    "exec_result": 1
  },
  {
    "idx": 1894,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Date FROM Shipment;",
    "pred": "SELECT `Date` FROM `Shipment`",
    "exec_result": 1
  },
  {
    "idx": 1895,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  \"Mars\";",
    "pred": "SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1896,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  \"Mars\";",
    "pred": "SELECT Shipment.ShipmentID FROM Shipment JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars'",
    "exec_result": 1
  },
  {
    "idx": 1897,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" AND T3.Name = \"Turanga Leela\";",
    "pred": "SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = 'Mars' AND `Manager` = (SELECT `EmployeeID` FROM `Employee` WHERE `Name` = 'Turanga Leela')",
    "exec_result": 0
  },
  {
    "idx": 1898,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" AND T3.Name = \"Turanga Leela\";",
    "pred": "SELECT Shipment.ShipmentID FROM Shipment JOIN Employee ON Shipment.Manager = Employee.EmployeeID WHERE Employee.Name = 'Turanga Leela' AND Shipment.Planet = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1899,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" OR T3.Name = \"Turanga Leela\";",
    "pred": "SELECT `ShipmentID` FROM `Shipment` WHERE `Planet` = 'Mars' OR `Manager` = (SELECT `EmployeeID` FROM `Employee` WHERE `Name` = 'Turanga Leela')",
    "exec_result": 1
  },
  {
    "idx": 1900,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" OR T3.Name = \"Turanga Leela\";",
    "pred": "SELECT Shipment.ShipmentID FROM Employee INNER JOIN Shipment ON Employee.EmployeeID = Shipment.Manager WHERE Employee.Name = 'Turanga Leela' AND Shipment.Planet = 'Mars';",
    "exec_result": 0
  },
  {
    "idx": 1901,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;",
    "pred": "SELECT P.Name, COUNT(S.ShipmentID) as Total_Shipments FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet GROUP BY P.Name",
    "exec_result": 1
  },
  {
    "idx": 1902,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;",
    "pred": "SELECT P.Name, COUNT(S.ShipmentID) as NumberOfShipments FROM Shipment S JOIN Planet P ON S.Planet = P.PlanetID GROUP BY P.Name",
    "exec_result": 1
  },
  {
    "idx": 1903,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT P.Name FROM Shipment AS S JOIN Planet AS P ON S.Planet = P.PlanetID GROUP BY P.Name ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1904,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1905,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;",
    "pred": "SELECT E.`Name`, COUNT(*) FROM Employee AS E JOIN Shipment AS S ON E.`EmployeeID` = S.`Manager` GROUP BY E.`EmployeeID`",
    "exec_result": 1
  },
  {
    "idx": 1906,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;",
    "pred": "SELECT E.Name AS Manager, COUNT(S.ShipmentID) AS NumberOfShipments FROM Employee AS E JOIN Shipment AS S ON E.EmployeeID = S.Manager GROUP BY E.Name;",
    "exec_result": 1
  },
  {
    "idx": 1907,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT SUM(Weight) as TotalWeight FROM Package WHERE Recipient = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1908,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT SUM(Weight) as TotalWeight FROM Package WHERE Recipient = 'Mars'",
    "exec_result": 0
  },
  {
    "idx": 1909,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;",
    "pred": "SELECT P.Name, SUM(P.Weight) AS TotalWeight FROM Package P INNER JOIN Shipment S ON P.Shipment = S.ShipmentID INNER JOIN Planet Pt ON S.Planet = Pt.PlanetID GROUP BY P.Name;",
    "exec_result": 0
  },
  {
    "idx": 1910,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;",
    "pred": "SELECT P.Name, SUM(Pkg.Weight) as TotalWeight FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet JOIN Package Pkg ON S.ShipmentID = Pkg.Shipment GROUP BY P.Name;",
    "exec_result": 1
  },
  {
    "idx": 1911,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;",
    "pred": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet JOIN Has_Clearance HC ON P.PlanetID = HC.Planet WHERE HC.Level > 2",
    "exec_result": 0
  },
  {
    "idx": 1912,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;",
    "pred": "SELECT P.Name FROM Planet P JOIN Shipment S ON P.PlanetID = S.Planet JOIN ( SELECT P.Shipment, SUM(P.Weight) AS TotalWeight FROM Package P GROUP BY P.Shipment ) T ON S.ShipmentID = T.Shipment WHERE T.TotalWeight > 30",
    "exec_result": 1
  },
  {
    "idx": 1913,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = \"Zapp Brannigan\" AND T4.Name = \"Omicron Persei 8\";",
    "pred": "SELECT `PackageNumber` FROM `Package` WHERE `Recipient` = 'Zapp Brannigan' AND `Sender` = 'Omicron Persei 8'",
    "exec_result": 0
  },
  {
    "idx": 1914,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = \"Zapp Brannigan\" AND T4.Name = \"Omicron Persei 8\";",
    "pred": "SELECT COUNT(*) FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'Zapp Brannigan') AND Recipient = (SELECT AccountNumber FROM Client WHERE Name = 'Omicron Persei 8');",
    "exec_result": 0
  },
  {
    "idx": 1915,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  \"Zapp Brannigan\" OR T4.Name  =  \"Omicron Persei 8\";",
    "pred": "SELECT `PackageNumber` FROM `Package` WHERE `Recipient` = 'Omicron Persei 8' OR `Sender` = 'Zapp Brannigan';",
    "exec_result": 0
  },
  {
    "idx": 1916,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  \"Zapp Brannigan\" OR T4.Name  =  \"Omicron Persei 8\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1917,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;",
    "pred": "SELECT `PackageNumber`, `Weight` FROM `Package` WHERE `Weight` BETWEEN 10 AND 30",
    "exec_result": 1
  },
  {
    "idx": 1918,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1919,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT Name FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = 'Mars' )",
    "exec_result": 0
  },
  {
    "idx": 1920,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT E.Name FROM Employee E WHERE E.EmployeeID NOT IN ( SELECT HC.Employee FROM Has_Clearance HC WHERE HC.Planet = 'Mars' );",
    "exec_result": 0
  },
  {
    "idx": 1921,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  \"Omega III\";",
    "pred": "SELECT E.Name FROM Employee AS E JOIN Has_Clearance AS HC ON E.EmployeeID = HC.Employee JOIN Planet AS P ON HC.Planet = P.PlanetID WHERE P.Name = 'Omega III'",
    "exec_result": 1
  },
  {
    "idx": 1922,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  \"Omega III\";",
    "pred": "SELECT E.Name FROM Employee AS E JOIN Has_Clearance AS HC ON E.EmployeeID = HC.Employee JOIN Planet AS P ON HC.Planet = P.PlanetID WHERE P.Name = 'Omega III';",
    "exec_result": 1
  },
  {
    "idx": 1923,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;",
    "pred": "SELECT P.Name FROM Planet P WHERE ( SELECT COUNT(*) FROM Employee E WHERE E.Position = 'Robot' AND E.EmployeeID IN ( SELECT EC.Employee FROM Has_Clearance EC WHERE EC.Planet = P.PlanetID ) ) = 1",
    "exec_result": 0
  },
  {
    "idx": 1924,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;",
    "pred": "SELECT P.Name FROM Planet P JOIN Has_Clearance HC ON P.PlanetID = HC.PlanetID JOIN Employee E ON HC.EmployeeID = E.EmployeeID WHERE E.Position = 'Robot';",
    "exec_result": 0
  },
  {
    "idx": 1925,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000",
    "pred": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 1926,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000",
    "pred": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000;",
    "exec_result": 1
  },
  {
    "idx": 1927,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)",
    "pred": "SELECT `Name` FROM `Employee` WHERE `Salary` > (SELECT AVG(`Salary`) FROM `Employee`) OR `Salary` > 5000;",
    "exec_result": 1
  },
  {
    "idx": 1928,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)",
    "pred": "SELECT E.Name FROM Employee E WHERE E.Salary > (SELECT AVG(Salary) FROM Employee) AND E.Salary > 5000",
    "exec_result": 0
  },
  {
    "idx": 1929,
    "db_id": "planet_1",
    "question": "",
    "gold": "select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = \"mars\" );",
    "pred": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = 'Mars' )",
    "exec_result": 1
  },
  {
    "idx": 1930,
    "db_id": "planet_1",
    "question": "",
    "gold": "select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = \"mars\" );",
    "pred": "SELECT COUNT(*) FROM Employee WHERE EmployeeID NOT IN ( SELECT Employee FROM Has_Clearance WHERE Planet = 'Mars' )",
    "exec_result": 1
  },
  {
    "idx": 1931,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM game",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1932,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM game",
    "pred": "SELECT COUNT(*) FROM game",
    "exec_result": 1
  },
  {
    "idx": 1933,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC",
    "pred": "SELECT `Title`, `Developers` FROM `game` ORDER BY `Units_sold_Millions` DESC",
    "exec_result": 1
  },
  {
    "idx": 1934,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC",
    "pred": "SELECT Title, Developers FROM game ORDER BY Units_sold_Millions DESC",
    "exec_result": 1
  },
  {
    "idx": 1935,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'",
    "pred": "SELECT AVG(Units_sold_Millions) as Average_Units_Sold_Millions FROM game WHERE Developers != 'Nintendo'",
    "exec_result": 1
  },
  {
    "idx": 1936,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'",
    "pred": "SELECT AVG(Units_sold_Millions) as Average_Units_Sold_Millions FROM game WHERE Developers != 'Nintendo'",
    "exec_result": 1
  },
  {
    "idx": 1937,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Market_district FROM platform",
    "pred": "SELECT `Platform_name`, `Market_district` FROM `platform`",
    "exec_result": 1
  },
  {
    "idx": 1938,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Market_district FROM platform",
    "pred": "SELECT platform.`Platform_name`, platform.`Market_district` FROM platform",
    "exec_result": 1
  },
  {
    "idx": 1939,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1",
    "pred": "SELECT `Platform_ID`, `Platform_name` FROM `platform` WHERE `Download_rank` = 1",
    "exec_result": 1
  },
  {
    "idx": 1940,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1",
    "pred": "SELECT `Platform_ID`, `Platform_name` FROM `platform` WHERE `Download_rank` = 1",
    "exec_result": 1
  },
  {
    "idx": 1941,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player",
    "pred": "SELECT MAX(Rank_of_the_year) AS Maximum_Rank, MIN(Rank_of_the_year) AS Minimum_Rank FROM player;",
    "exec_result": 1
  },
  {
    "idx": 1942,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player",
    "pred": "SELECT MAX(Rank_of_the_year) AS Maximum_Rank, MIN(Rank_of_the_year) AS Minimum_Rank FROM player",
    "exec_result": 1
  },
  {
    "idx": 1943,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3",
    "pred": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year < 3",
    "exec_result": 1
  },
  {
    "idx": 1944,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3",
    "pred": "SELECT COUNT(*) FROM player WHERE Rank_of_the_year <= 3",
    "exec_result": 1
  },
  {
    "idx": 1945,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "pred": "SELECT `Player_name` FROM `player` ORDER BY `Player_name` ASC;",
    "exec_result": 1
  },
  {
    "idx": 1946,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "pred": "SELECT `Player_name` FROM `player` ORDER BY `Player_name` ASC",
    "exec_result": 1
  },
  {
    "idx": 1947,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC",
    "pred": "SELECT `Player_name`, `College` FROM `player` ORDER BY `Rank_of_the_year` DESC",
    "exec_result": 1
  },
  {
    "idx": 1948,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC",
    "pred": "SELECT player.Player_name, player.College FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID WHERE game_player.If_active = 'T' ORDER BY player.Rank_of_the_year DESC;",
    "exec_result": 0
  },
  {
    "idx": 1949,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  \"Super Mario World\"",
    "pred": "SELECT player.Player_name, player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game.Game_ID = game_player.Game_ID WHERE game.Title = 'Super Mario World';",
    "exec_result": 1
  },
  {
    "idx": 1950,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  \"Super Mario World\"",
    "pred": "SELECT player.Player_name, player.Rank_of_the_year FROM player JOIN game_player ON player.Player_ID = game_player.Player_ID JOIN game ON game_player.Game_ID = game.Game_ID WHERE game.Title = 'Super Mario World';",
    "exec_result": 1
  },
  {
    "idx": 1951,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT DISTINCT `Developers` FROM game INNER JOIN platform ON game.`Platform_ID` = platform.`Platform_ID` INNER JOIN game_player ON game.`Game_ID` = game_player.`Game_ID` INNER JOIN player ON game_player.`Player_ID` = player.`Player_ID` WHERE `College` = 'Auburn'",
    "exec_result": 1
  },
  {
    "idx": 1952,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT DISTINCT Developers FROM game WHERE Game_ID IN ( SELECT Game_ID FROM game_player WHERE Player_ID IN ( SELECT Player_ID FROM player WHERE College = 'Auburn' ) );",
    "exec_result": 1
  },
  {
    "idx": 1953,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT AVG(Units_sold_Millions) as Average_Units_Sold_Millions FROM game_player JOIN game ON game_player.Game_ID = game.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.Position = 'Guard'",
    "exec_result": 1
  },
  {
    "idx": 1954,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT AVG(`Units_sold_Millions`) as `Average_Units_Sold` FROM game_player JOIN game ON game_player.Game_ID = game.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.Position = 'Guard'",
    "exec_result": 1
  },
  {
    "idx": 1955,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID",
    "pred": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID",
    "exec_result": 1
  },
  {
    "idx": 1956,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID",
    "pred": "SELECT game.Title, platform.Platform_name FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID",
    "exec_result": 1
  },
  {
    "idx": 1957,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  \"Asia\" OR T2.Market_district  =  \"USA\"",
    "pred": "SELECT game.Title FROM game JOIN platform ON game.Platform_ID = platform.Platform_ID WHERE platform.Market_district IN ('USA', 'Asia');",
    "exec_result": 1
  },
  {
    "idx": 1958,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  \"Asia\" OR T2.Market_district  =  \"USA\"",
    "pred": "SELECT Title FROM game WHERE Platform_ID IN ( SELECT Platform_ID FROM platform WHERE Market_district IN ('USA', 'Asia') )",
    "exec_result": 1
  },
  {
    "idx": 1959,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise",
    "pred": "SELECT `Platform_name`, COUNT(`Game_ID`) as `Number_of_Games` FROM `game` INNER JOIN `platform` ON `game`.`Platform_ID` = `platform`.`Platform_ID` GROUP BY `Platform_name`",
    "exec_result": 0
  },
  {
    "idx": 1960,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise",
    "pred": "SELECT Rank_of_the_year, COUNT(*) as Number_of_Games FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID GROUP BY Rank_of_the_year",
    "exec_result": 0
  },
  {
    "idx": 1961,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.`Franchise`, COUNT(*) as `Number_of_Games` FROM game AS T1 GROUP BY T1.`Franchise` ORDER BY `Number_of_Games` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1962,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT g.Franchise, COUNT(gp.Game_ID) as Game_Count FROM game g JOIN game_player gp ON g.Game_ID = gp.Game_ID GROUP BY g.Franchise ORDER BY Game_Count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1963,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2",
    "pred": "SELECT T1.`Franchise` FROM game AS T1 JOIN game AS T2 ON T1.`Franchise` = T2.`Franchise` GROUP BY T1.`Franchise` HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1964,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT franchise FROM game WHERE franchise IN ( SELECT franchise FROM game GROUP BY franchise HAVING COUNT(*) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 1965,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)",
    "pred": "SELECT P.`Player_name` FROM player AS P WHERE P.`Player_ID` NOT IN (SELECT GP.`Player_ID` FROM game_player AS GP)",
    "exec_result": 1
  },
  {
    "idx": 1966,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)",
    "pred": "SELECT DISTINCT player.Player_name FROM player WHERE player.Player_ID NOT IN (SELECT DISTINCT game_player.Player_ID FROM game_player)",
    "exec_result": 1
  },
  {
    "idx": 1967,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Oklahoma\" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT game.Title FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = 'Oklahoma' INTERSECT SELECT game.Title FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = 'Auburn'",
    "exec_result": 1
  },
  {
    "idx": 1968,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Oklahoma\" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT game.Title FROM game JOIN game_player ON game.Game_ID = game_player.Game_ID JOIN player ON game_player.Player_ID = player.Player_ID WHERE player.College = 'Oklahoma' OR player.College = 'Auburn';",
    "exec_result": 0
  },
  {
    "idx": 1969,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT Franchise FROM game",
    "pred": "SELECT DISTINCT `Franchise` FROM `game`",
    "exec_result": 1
  },
  {
    "idx": 1970,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT Franchise FROM game",
    "pred": "SELECT DISTINCT `Franchise` FROM `game`;",
    "exec_result": 1
  },
  {
    "idx": 1971,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT game.Title FROM game WHERE game.Game_ID NOT IN ( SELECT game_player.Game_ID FROM game_player WHERE game_player.If_active = 'T' AND game_player.Player_ID IN ( SELECT player.Player_ID FROM player WHERE player.Position = 'Guard' ) )",
    "exec_result": 1
  },
  {
    "idx": 1972,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "SELECT game.Title FROM game WHERE game.Game_ID NOT IN ( SELECT game_player.Game_ID FROM game_player WHERE game_player.If_active = 'T' AND game_player.Player_ID IN ( SELECT player.Player_ID FROM player WHERE player.Position = 'Guard' ) )",
    "exec_result": 1
  },
  {
    "idx": 1973,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Year_Profits_billion DESC",
    "pred": "SELECT `Name`, `Year_Profits_billion` FROM `press` ORDER BY `Year_Profits_billion` DESC",
    "exec_result": 0
  },
  {
    "idx": 1974,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Year_Profits_billion DESC",
    "pred": "SELECT `Name`, `Year_Profits_billion` FROM `press` ORDER BY `Year_Profits_billion` DESC",
    "exec_result": 0
  },
  {
    "idx": 1975,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1",
    "pred": "SELECT p.Name FROM press AS p JOIN book AS b ON p.Press_ID = b.Press_ID GROUP BY p.Press_ID HAVING SUM(b.Sale_Amount) > 15 OR AVG(p.Month_Profits_billion) > 1 OR AVG(p.Year_Profits_billion) > 1",
    "exec_result": 0
  },
  {
    "idx": 1976,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1977,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press",
    "pred": "SELECT AVG(`Year_Profits_billion`) AS `Average_Profit`, MAX(`Year_Profits_billion`) AS `Maximum_Profit` FROM press",
    "exec_result": 1
  },
  {
    "idx": 1978,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press",
    "pred": "SELECT `Press_ID`, AVG(`Year_Profits_billion`) AS `Average_Yearly_Profit`, MAX(`Year_Profits_billion`) AS `Max_Yearly_Profit` FROM `press` GROUP BY `Press_ID`",
    "exec_result": 0
  },
  {
    "idx": 1979,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1",
    "pred": "SELECT `Name` FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press)",
    "exec_result": 1
  },
  {
    "idx": 1980,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1",
    "pred": "SELECT `Name` FROM press WHERE `Month_Profits_billion` = (SELECT MAX(`Month_Profits_billion`) FROM press)",
    "exec_result": 1
  },
  {
    "idx": 1981,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1982,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)",
    "pred": "SELECT P.`Name` FROM press AS P JOIN (SELECT Press_ID, AVG(Month_Profits_billion) AS AvgMonthProfits FROM press GROUP BY Press_ID) AS AvgProfits ON P.`Press_ID` = AvgProfits.`Press_ID` WHERE AvgProfits.`AvgMonthProfits` = (SELECT MIN(AvgMonthProfits) FROM (SELECT Press_ID, AVG(Month_Profits_billion) AS AvgMonthProfits FROM press GROUP BY Press_ID));",
    "exec_result": 0
  },
  {
    "idx": 1983,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) FROM author WHERE age  <  30",
    "pred": "SELECT COUNT(*) FROM author WHERE Age < 30",
    "exec_result": 1
  },
  {
    "idx": 1984,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) FROM author WHERE age  <  30",
    "pred": "SELECT COUNT(*) FROM author WHERE Age < 30",
    "exec_result": 1
  },
  {
    "idx": 1985,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(age) ,  gender FROM author GROUP BY gender",
    "pred": "SELECT `Gender`, AVG(`Age`) as `Average_Age` FROM `author` GROUP BY `Gender`",
    "exec_result": 1
  },
  {
    "idx": 1986,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(age) ,  gender FROM author GROUP BY gender",
    "pred": "SELECT `Gender`, AVG(`Age`) as `Average_Age` FROM `author` GROUP BY `Gender`",
    "exec_result": 1
  },
  {
    "idx": 1987,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender",
    "pred": "SELECT Gender, COUNT(*) FROM author WHERE Age > 30 GROUP BY Gender",
    "exec_result": 1
  },
  {
    "idx": 1988,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender",
    "pred": "SELECT Gender, COUNT(*) FROM author WHERE Age > 30 GROUP BY Gender;",
    "exec_result": 1
  },
  {
    "idx": 1989,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title FROM book ORDER BY release_date DESC",
    "pred": "SELECT Title FROM book ORDER BY Release_date DESC",
    "exec_result": 1
  },
  {
    "idx": 1990,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title FROM book ORDER BY release_date DESC",
    "pred": "SELECT `Title` FROM `book` ORDER BY `Release_date` DESC",
    "exec_result": 1
  },
  {
    "idx": 1991,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  book_series FROM book GROUP BY book_series",
    "pred": "SELECT `Book_Series`, COUNT(*) FROM `book` GROUP BY `Book_Series`",
    "exec_result": 1
  },
  {
    "idx": 1992,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  book_series FROM book GROUP BY book_series",
    "pred": "SELECT Book_Series, COUNT(*) as Count FROM book GROUP BY Book_Series",
    "exec_result": 1
  },
  {
    "idx": 1993,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5",
    "pred": "SELECT `Title`, `Release_date` FROM book ORDER BY `Sale_Amount` DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 1994,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5",
    "pred": "SELECT `Title`, `Release_date` FROM `book` ORDER BY `Sale_Amount` DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 1995,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500",
    "pred": "SELECT Book_Series FROM book WHERE Sale_Amount > 1000 AND Sale_Amount < 500 GROUP BY Book_Series HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 1996,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500",
    "pred": "SELECT Book_Series FROM book WHERE Sale_Amount > '1000' INTERSECT SELECT Book_Series FROM book WHERE Sale_Amount < '500'",
    "exec_result": 1
  },
  {
    "idx": 1997,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'",
    "pred": "SELECT DISTINCT a.Name FROM author a JOIN book b ON a.Author_ID = b.Author_ID WHERE b.Book_Series = 'MM' AND b.Book_ID IN ( SELECT Book_ID FROM book WHERE Book_Series = 'LT' );",
    "exec_result": 0
  },
  {
    "idx": 1998,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'",
    "pred": "SELECT DISTINCT author.Name FROM author JOIN book ON author.Author_ID = book.Author_ID WHERE book.Book_Series IN ('MM', 'LT')",
    "exec_result": 0
  },
  {
    "idx": 1999,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name ,  age FROM author WHERE author_id NOT IN (SELECT author_id FROM book)",
    "pred": "SELECT `Name`, `Age` FROM author WHERE `Author_ID` NOT IN (SELECT DISTINCT `Author_ID` FROM book)",
    "exec_result": 1
  },
  {
    "idx": 2000,
    "db_id": "book_press",
    "question": "",
    "gold": "select name from author where author_id not in (select author_id from book)",
    "pred": "SELECT Name FROM author WHERE Author_ID NOT IN (SELECT Author_ID FROM book)",
    "exec_result": 1
  },
  {
    "idx": 2001,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1",
    "pred": "SELECT `Name` FROM author WHERE `Author_ID` IN ( SELECT `Author_ID` FROM book GROUP BY `Author_ID` HAVING COUNT(`Author_ID`) > 1 )",
    "exec_result": 1
  },
  {
    "idx": 2002,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1",
    "pred": "SELECT `Name` FROM author WHERE Author_ID IN ( SELECT `Author_ID` FROM book GROUP BY `Author_ID` HAVING COUNT(`Author_ID`) > 1 )",
    "exec_result": 1
  },
  {
    "idx": 2003,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3",
    "pred": "SELECT b.Title, a.Name, p.Name FROM book AS b JOIN author AS a ON b.Author_ID = a.Author_ID JOIN press AS p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 2004,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3",
    "pred": "SELECT b.Title, a.Name, p.Name FROM book AS b JOIN author AS a ON b.Author_ID = a.Author_ID JOIN press AS p ON b.Press_ID = p.Press_ID ORDER BY b.Sale_Amount DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 2005,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id",
    "pred": "SELECT P.`Name`, SUM(B.`Sale_Amount`) as Total_Book_Sale_Amount FROM press as P JOIN book as B ON P.`Press_ID` = B.`Press_ID` GROUP BY P.`Name`",
    "exec_result": 1
  },
  {
    "idx": 2006,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id",
    "pred": "SELECT P.`Name`, SUM(B.`Sale_Amount`) as `Total_Book_Sale_Amount` FROM book AS B JOIN press AS P ON B.`Press_ID` = P.`Press_ID` GROUP BY B.`Press_ID`",
    "exec_result": 1
  },
  {
    "idx": 2007,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name",
    "pred": "SELECT press.Name, COUNT(book.Book_ID) FROM book JOIN press ON book.Press_ID = press.Press_ID WHERE book.Sale_Amount > 1000 GROUP BY press.Name",
    "exec_result": 1
  },
  {
    "idx": 2008,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name",
    "pred": "SELECT P.`Name`, COUNT(*) FROM press AS P JOIN book AS B ON P.`Press_ID` = B.`Press_ID` WHERE B.`Sale_Amount` > 1000 GROUP BY P.`Press_ID`",
    "exec_result": 1
  },
  {
    "idx": 2009,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2010,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1",
    "pred": "SELECT `Name` FROM author WHERE `Author_ID` = (SELECT `Author_ID` FROM book WHERE `Sale_Amount` = (SELECT MAX(`Sale_Amount`) FROM book))",
    "exec_result": 1
  },
  {
    "idx": 2011,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Name`, `Gender` FROM author WHERE `Author_ID` = (SELECT `Author_ID` FROM book GROUP BY `Author_ID` ORDER BY COUNT(`Book_ID`) DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 2012,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Name`, `Gender` FROM author WHERE `Age` = (SELECT MAX(`Age`) FROM author)",
    "exec_result": 0
  },
  {
    "idx": 2013,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'",
    "pred": "SELECT a.Name FROM author AS a WHERE a.Author_ID NOT IN ( SELECT b.Author_ID FROM book AS b WHERE b.Press_ID = ( SELECT p.Press_ID FROM press AS p WHERE p.Name = 'Accor' ) )",
    "exec_result": 1
  },
  {
    "idx": 2014,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'",
    "pred": "SELECT DISTINCT author.Name FROM author LEFT JOIN book ON author.Author_ID = book.Author_ID LEFT JOIN press ON book.Press_ID = press.Press_ID WHERE press.Name = 'Accor' AND book.Author_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 2015,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2",
    "pred": "SELECT `Name`, `Year_Profits_billion` FROM press WHERE `Press_ID` IN ( SELECT `Press_ID` FROM book GROUP BY `Press_ID` HAVING COUNT(`Book_ID`) > 2 )",
    "exec_result": 1
  },
  {
    "idx": 2016,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2",
    "pred": "SELECT P.`Name`, P.`Year_Profits_billion` FROM press AS P JOIN book AS B ON P.`Press_ID` = B.`Press_ID` GROUP BY P.`Press_ID` HAVING COUNT(DISTINCT B.`Book_ID`) > 2",
    "exec_result": 1
  },
  {
    "idx": 2017,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Authors",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2018,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Authors",
    "pred": "SELECT author_name FROM Authors",
    "exec_result": 1
  },
  {
    "idx": 2019,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name ,  other_details FROM Authors",
    "pred": "SELECT Authors.author_name, Authors.other_details FROM Authors;",
    "exec_result": 1
  },
  {
    "idx": 2020,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT other_details FROM Authors WHERE author_name  =  \"Addison Denesik\"",
    "pred": "SELECT `other_details` FROM `Authors` WHERE `author_name` = 'Addison Denesik'",
    "exec_result": 1
  },
  {
    "idx": 2021,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2022,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents WHERE document_id  =  4",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2023,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents WHERE document_name  =  \"Travel to Brazil\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2024,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Documents WHERE author_name  =  \"Era Kerluke\"",
    "pred": "SELECT COUNT(*) FROM Documents WHERE author_name = 'Era Kerluke'",
    "exec_result": 1
  },
  {
    "idx": 2025,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_name ,  document_description FROM Documents",
    "pred": "SELECT Documents.document_name, Documents.document_description FROM Documents;",
    "exec_result": 1
  },
  {
    "idx": 2026,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_id ,  document_name FROM Documents WHERE author_name  =  \"Bianka Cummings\"",
    "pred": "SELECT Documents.document_id, Documents.document_name FROM Documents JOIN Authors ON Documents.author_name = Authors.author_name WHERE Authors.author_name = 'Bianka Cummings'",
    "exec_result": 1
  },
  {
    "idx": 2027,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T2.author_name ,  T2.other_details FROM Documents AS T1 JOIN Authors AS T2 ON T1.author_name  =  T2.author_name WHERE document_name  =  \"Travel to China\"",
    "pred": "SELECT Authors.author_name, Authors.other_details FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name WHERE Documents.document_name = 'Travel to China'",
    "exec_result": 1
  },
  {
    "idx": 2028,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name ,  count(*) FROM Documents GROUP BY author_name",
    "pred": "SELECT Authors.author_name, COUNT(*) as num_documents FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.author_name",
    "exec_result": 1
  },
  {
    "idx": 2029,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents GROUP BY author_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Authors.author_name, COUNT(*) as num_documents FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.author_name ORDER BY num_documents DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2030,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents GROUP BY author_name HAVING count(*)  >=  2",
    "pred": "SELECT Authors.author_name FROM Authors JOIN Documents ON Authors.author_name = Documents.author_name GROUP BY Authors.author_name HAVING COUNT(Documents.document_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 2031,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Business_processes",
    "pred": "SELECT COUNT(*) FROM Business_Processes",
    "exec_result": 1
  },
  {
    "idx": 2032,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT next_process_id ,  process_name ,  process_description FROM Business_processes WHERE process_id  =  9",
    "pred": "SELECT B.`process_id`, B.`process_name`, B.`process_description` FROM Business_Processes AS B WHERE B.`process_id` = 9",
    "exec_result": 1
  },
  {
    "idx": 2033,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_name FROM Business_processes WHERE process_id  =  (SELECT next_process_id FROM Business_processes WHERE process_id  =  9)",
    "pred": "SELECT process_name FROM Business_Processes WHERE next_process_id = 9;",
    "exec_result": 1
  },
  {
    "idx": 2034,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Process_outcomes",
    "pred": "SELECT Documents.document_name, COUNT(Documents_Processes.process_outcome_code) as Number_of_Outcomes FROM Documents JOIN Documents_Processes ON Documents.document_id = Documents_Processes.document_id GROUP BY Documents.document_name;",
    "exec_result": 0
  },
  {
    "idx": 2035,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_outcome_code ,  process_outcome_description FROM Process_outcomes",
    "pred": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes;",
    "exec_result": 1
  },
  {
    "idx": 2036,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_outcome_description FROM Process_outcomes WHERE process_outcome_code  =  \"working\"",
    "pred": "SELECT `process_outcome_description` FROM `Process_Outcomes` WHERE `process_outcome_code` = 'working'",
    "exec_result": 1
  },
  {
    "idx": 2037,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Process_status",
    "pred": "SELECT COUNT(DISTINCT Documents_Processes.process_status_code) as NumberOfProcessStatuses FROM Documents_Processes INNER JOIN Process_Status ON Documents_Processes.process_status_code = Process_Status.process_status_code;",
    "exec_result": 0
  },
  {
    "idx": 2038,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_status_code ,  process_status_description FROM Process_status",
    "pred": "SELECT process_status_code, process_status_description FROM Process_Status;",
    "exec_result": 1
  },
  {
    "idx": 2039,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_status_description FROM Process_status WHERE process_status_code  =  \"ct\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2040,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2041,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM Staff",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2042,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_details FROM Staff WHERE staff_id  =  100",
    "pred": "SELECT Staff.staff_id, Staff.staff_details, Ref_Staff_Roles.staff_role_description FROM Staff JOIN Staff_in_Processes ON Staff.staff_id = Staff_in_Processes.staff_id JOIN Ref_Staff_Roles ON Staff_in_Processes.staff_role_code = Ref_Staff_Roles.staff_role_code WHERE Staff.staff_id = 100",
    "exec_result": 0
  },
  {
    "idx": 2043,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Ref_staff_roles",
    "pred": "SELECT COUNT(DISTINCT staff_role_code) AS Number_of_Staff_Roles FROM Staff_in_Processes",
    "exec_result": 0
  },
  {
    "idx": 2044,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_code ,  staff_role_description FROM Ref_staff_roles",
    "pred": "SELECT `staff_role_code`, `staff_role_description` FROM `Ref_Staff_Roles`",
    "exec_result": 1
  },
  {
    "idx": 2045,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_description FROM Ref_staff_roles WHERE staff_role_code  =  \"HR\"",
    "pred": "SELECT `staff_role_description` FROM `Ref_Staff_Roles` WHERE `staff_role_code` = 'HR'",
    "exec_result": 1
  },
  {
    "idx": 2046,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(DISTINCT document_id) FROM Documents_processes",
    "pred": "SELECT COUNT(*) FROM Documents_Processes",
    "exec_result": 1
  },
  {
    "idx": 2047,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT DISTINCT process_id FROM Documents_processes",
    "pred": "SELECT D.`document_id`, B.`process_id` FROM Documents AS D JOIN Documents_Processes AS DP ON D.`document_id` = DP.`document_id` JOIN Business_Processes AS B ON DP.`process_id` = B.`process_id`",
    "exec_result": 0
  },
  {
    "idx": 2048,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_processes",
    "pred": "SELECT D.`document_id` FROM Documents D LEFT JOIN Documents_Processes DP ON D.`document_id` = DP.`document_id` WHERE DP.`process_id` IS NULL",
    "exec_result": 1
  },
  {
    "idx": 2049,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_id FROM Business_processes EXCEPT SELECT process_id FROM Documents_processes",
    "pred": "SELECT DISTINCT bp.process_id FROM Staff_in_Processes AS spp LEFT JOIN Business_Processes AS bp ON spp.process_id = bp.process_id WHERE bp.process_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 2050,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T2.process_outcome_description ,  T3.process_status_description FROM Documents_processes AS T1 JOIN Process_outcomes AS T2 ON T1.process_outcome_code  =  T2.process_outcome_code JOIN Process_Status AS T3 ON T1.process_status_code  =  T3.process_status_code WHERE T1.document_id  =  0",
    "pred": "SELECT Process_Outcomes.process_outcome_description, Process_Status.process_status_description FROM Documents_Processes JOIN Process_Outcomes ON Documents_Processes.process_outcome_code = Process_Outcomes.process_outcome_code JOIN Process_Status ON Documents_Processes.process_status_code = Process_Status.process_status_code WHERE Documents_Processes.document_id = 0;",
    "exec_result": 1
  },
  {
    "idx": 2051,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T3.process_name FROM Documents_processes AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id JOIN Business_processes AS T3 ON T1.process_id  =  T3.process_id WHERE T2.document_name  =  \"Travel to Brazil\"",
    "pred": "SELECT Business_Processes.process_name FROM Business_Processes INNER JOIN Documents_Processes ON Business_Processes.process_id = Documents_Processes.process_id INNER JOIN Documents ON Documents_Processes.document_id = Documents.document_id WHERE Documents.document_name = 'Travel to Brazil';",
    "exec_result": 1
  },
  {
    "idx": 2052,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_id ,  count(*) FROM Documents_processes GROUP BY process_id",
    "pred": "SELECT B.`process_id`, COUNT(*) as `Number_of_Documents` FROM Business_Processes AS B JOIN Documents_Processes AS DP ON B.`process_id` = DP.`process_id` JOIN Documents AS D ON DP.`document_id` = D.`document_id` GROUP BY B.`process_id`",
    "exec_result": 1
  },
  {
    "idx": 2053,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Staff_in_processes WHERE document_id  =  0 AND process_id  =  9",
    "pred": "SELECT COUNT(DISTINCT staff_id) FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9",
    "exec_result": 1
  },
  {
    "idx": 2054,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_processes GROUP BY staff_id",
    "pred": "SELECT T1.`staff_id`, COUNT(*) FROM Staff AS T1 JOIN Staff_in_Processes AS T2 ON T1.`staff_id` = T2.`staff_id` JOIN Documents_Processes AS T3 ON T2.`process_id` = T3.`process_id` GROUP BY T1.`staff_id`",
    "exec_result": 0
  },
  {
    "idx": 2055,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_code ,  count(*) FROM Staff_in_processes GROUP BY staff_role_code",
    "pred": "SELECT Ref_Staff_Roles.`staff_role_code`, COUNT(*) FROM Staff JOIN Staff_in_Processes ON Staff.`staff_id` = Staff_in_Processes.`staff_id` JOIN Documents_Processes ON Staff_in_Processes.`document_id` = Documents_Processes.`document_id` JOIN Business_Processes ON Documents_Processes.`process_id` = Business_Processes.`process_id` JOIN Ref_Staff_Roles ON Staff_in_Processes.`staff_role_code` = Ref_Staff_Roles.`staff_role_code` GROUP BY Ref_Staff_Roles.`staff_role_code`;",
    "exec_result": 1
  },
  {
    "idx": 2056,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_role_code) FROM Staff_in_processes WHERE staff_id  =  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2057,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Agencies",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2058,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Agencies",
    "pred": "SELECT COUNT(*) FROM Agencies",
    "exec_result": 1
  },
  {
    "idx": 2059,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  agency_details FROM Agencies",
    "pred": "SELECT `agency_id`, `agency_details` FROM `Agencies`",
    "exec_result": 1
  },
  {
    "idx": 2060,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  agency_details FROM Agencies",
    "pred": "SELECT agency_id, agency_details FROM Agencies;",
    "exec_result": 1
  },
  {
    "idx": 2061,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Clients",
    "pred": "SELECT COUNT(DISTINCT client_id) FROM Clients",
    "exec_result": 1
  },
  {
    "idx": 2062,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Clients",
    "pred": "SELECT COUNT(*) FROM Clients",
    "exec_result": 1
  },
  {
    "idx": 2063,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients",
    "pred": "SELECT Clients.client_id, Clients.client_details FROM Clients INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id;",
    "exec_result": 1
  },
  {
    "idx": 2064,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients",
    "pred": "SELECT client_id, client_details FROM Clients;",
    "exec_result": 1
  },
  {
    "idx": 2065,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id",
    "pred": "SELECT A.`agency_id`, COUNT(*) FROM Clients AS A JOIN Agencies AS B ON A.`agency_id` = B.`agency_id` GROUP BY A.`agency_id`",
    "exec_result": 1
  },
  {
    "idx": 2066,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id",
    "pred": "SELECT Clients.agency_id, COUNT(*) as num_clients FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id GROUP BY Clients.agency_id;",
    "exec_result": 1
  },
  {
    "idx": 2067,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Agencies.agency_id, Agencies.agency_details, COUNT(Clients.client_id) as num_clients FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id GROUP BY Agencies.agency_id ORDER BY num_clients DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2068,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.agency_id, A.agency_details FROM Clients AS C JOIN Staff AS S ON C.agency_id = S.agency_id GROUP BY C.agency_id, C.agency_details HAVING COUNT(C.client_id) = ( SELECT COUNT(client_id) FROM Clients WHERE agency_id = C.agency_id GROUP BY agency_id ORDER BY COUNT(client_id) DESC LIMIT 1 );",
    "exec_result": 0
  },
  {
    "idx": 2069,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2",
    "pred": "SELECT A.`agency_id`, A.`agency_details` FROM Agencies AS A JOIN ( SELECT C.`agency_id` FROM Clients AS C GROUP BY C.`agency_id` HAVING COUNT(*) >= 2 ) AS B ON A.`agency_id` = B.`agency_id`",
    "exec_result": 1
  },
  {
    "idx": 2070,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2",
    "pred": "SELECT A.agency_id, A.agency_details FROM Agencies A WHERE ( SELECT COUNT(*) FROM Clients B WHERE A.agency_id = B.agency_id ) >= 2",
    "exec_result": 1
  },
  {
    "idx": 2071,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'",
    "pred": "SELECT Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Clients.client_details = 'Mac'",
    "exec_result": 1
  },
  {
    "idx": 2072,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'",
    "pred": "SELECT Clients.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Clients.client_details = 'Mac';",
    "exec_result": 0
  },
  {
    "idx": 2073,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2074,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT Clients.client_details, Agencies.agency_details FROM Clients INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id;",
    "exec_result": 1
  },
  {
    "idx": 2075,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code",
    "pred": "SELECT `sic_code`, COUNT(*) as `Number_of_Clients` FROM `Clients` GROUP BY `sic_code`;",
    "exec_result": 1
  },
  {
    "idx": 2076,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code",
    "pred": "SELECT `sic_code`, COUNT(*) as `Number_of_Clients` FROM `Clients` GROUP BY `sic_code`",
    "exec_result": 1
  },
  {
    "idx": 2077,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  \"Bad\";",
    "pred": "SELECT Clients.client_id, Clients.client_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Agencies.agency_details LIKE '%Bad%' AND Clients.sic_code = 'Bad';",
    "exec_result": 0
  },
  {
    "idx": 2078,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  \"Bad\";",
    "pred": "SELECT `client_details` FROM `Clients` WHERE `sic_code` = 'Bad';",
    "exec_result": 0
  },
  {
    "idx": 2079,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT Agencies.`agency_id`, Agencies.`agency_details` FROM Agencies JOIN Clients ON Agencies.`agency_id` = Clients.`agency_id`",
    "exec_result": 1
  },
  {
    "idx": 2080,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT Agencies.agency_id, Agencies.agency_details FROM Agencies JOIN Clients ON Agencies.agency_id = Clients.agency_id",
    "exec_result": 1
  },
  {
    "idx": 2081,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients",
    "pred": "SELECT DISTINCT agency_id FROM Agencies WHERE agency_id NOT IN (SELECT DISTINCT agency_id FROM Clients)",
    "exec_result": 1
  },
  {
    "idx": 2082,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients",
    "pred": "SELECT agency_id FROM Agencies WHERE agency_id NOT IN (SELECT DISTINCT agency_id FROM Clients)",
    "exec_result": 1
  },
  {
    "idx": 2083,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Invoices",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2084,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Invoices",
    "pred": "SELECT COUNT(*) FROM Invoices",
    "exec_result": 1
  },
  {
    "idx": 2085,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices",
    "pred": "SELECT Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details FROM Invoices JOIN Clients ON Invoices.client_id = Clients.client_id;",
    "exec_result": 1
  },
  {
    "idx": 2086,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices",
    "pred": "SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM `Invoices`",
    "exec_result": 1
  },
  {
    "idx": 2087,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id",
    "exec_result": 1
  },
  {
    "idx": 2088,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) as invoice_count FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Clients.client_id;",
    "exec_result": 0
  },
  {
    "idx": 2089,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `client_id_new`, `client_details`, COUNT(`invoice_id`) as `Number_of_Invoices` FROM `Clients` JOIN `Invoices` ON `Clients`.`client_id` = `Invoices`.`client_id` GROUP BY `client_id_new` ORDER BY `Number_of_Invoices` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2090,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Clients.client_id, Clients.client_details, COUNT(Invoices.invoice_id) as invoice_count FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id ORDER BY invoice_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2091,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2",
    "pred": "SELECT Clients.client_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id HAVING COUNT(Invoices.client_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 2092,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2",
    "pred": "SELECT Clients.client_id FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id HAVING COUNT(Invoices.invoice_id) > 2",
    "exec_result": 0
  },
  {
    "idx": 2093,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status",
    "pred": "SELECT `invoice_status`, COUNT(*) FROM `Invoices` GROUP BY `invoice_status`",
    "exec_result": 1
  },
  {
    "idx": 2094,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status",
    "pred": "SELECT `invoice_status`, COUNT(*) as `Number_of_Invoices` FROM `Invoices` GROUP BY `invoice_status`;",
    "exec_result": 1
  },
  {
    "idx": 2095,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT invoice_status, COUNT(*) as invoice_count FROM Invoices GROUP BY invoice_status ORDER BY invoice_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2096,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `invoice_status`, COUNT(*) as `invoice_count` FROM Invoices JOIN Clients ON Invoices.`client_id` = Clients.`client_id` GROUP BY `invoice_status` ORDER BY `invoice_count` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2097,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id",
    "pred": "SELECT Invoices.`invoice_status`, Invoices.`invoice_details`, Clients.`client_id`, Clients.`client_details`, Agencies.`agency_id`, Agencies.`agency_details` FROM Invoices JOIN Clients ON Invoices.`client_id` = Clients.`client_id` JOIN Agencies ON Clients.`agency_id` = Agencies.`agency_id`",
    "exec_result": 1
  },
  {
    "idx": 2098,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id",
    "pred": "SELECT `invoice_status`, `invoice_details`, `Clients`.`client_id`, `Clients`.`client_details`, `Agencies`.`agency_id`, `Agencies`.`agency_details` FROM Invoices JOIN Clients ON Invoices.`client_id` = Clients.`client_id` JOIN Agencies ON Clients.`agency_id` = Agencies.`agency_id`",
    "exec_result": 1
  },
  {
    "idx": 2099,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  other_details FROM meetings",
    "pred": "SELECT `meeting_type`, `meeting_outcome`, `purpose_of_meeting`, `other_details` FROM `Meetings`;",
    "exec_result": 0
  },
  {
    "idx": 2100,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  other_details FROM meetings",
    "pred": "SELECT `meeting_type`, `other_details` FROM `Meetings`",
    "exec_result": 1
  },
  {
    "idx": 2101,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  purpose_of_meeting FROM meetings",
    "pred": "SELECT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`",
    "exec_result": 1
  },
  {
    "idx": 2102,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  purpose_of_meeting FROM meetings",
    "pred": "SELECT DISTINCT `meeting_outcome`, `purpose_of_meeting` FROM `Meetings`",
    "exec_result": 1
  },
  {
    "idx": 2103,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'",
    "pred": "SELECT `payment_id`, `payment_details` FROM `Payments` JOIN `Invoices` ON `Payments`.`invoice_id` = `Invoices`.`invoice_id` WHERE `Invoices`.`invoice_status` = 'Working'",
    "exec_result": 1
  },
  {
    "idx": 2104,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'",
    "pred": "SELECT `payment_id`, `payment_details` FROM `Payments` INNER JOIN `Invoices` ON `Payments`.`invoice_id` = `Invoices`.`invoice_id` WHERE `Invoices`.`invoice_status` = 'Working';",
    "exec_result": 1
  },
  {
    "idx": 2105,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT `invoice_id`, `invoice_status` FROM `Invoices` WHERE `invoice_id` NOT IN (SELECT `invoice_id` FROM `Payments`)",
    "exec_result": 1
  },
  {
    "idx": 2106,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT `invoice_id`, `invoice_status` FROM `Invoices` WHERE `invoice_id` NOT IN (SELECT `invoice_id` FROM `Payments`)",
    "exec_result": 1
  },
  {
    "idx": 2107,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Payments",
    "pred": "SELECT COUNT(*) FROM Payments",
    "exec_result": 1
  },
  {
    "idx": 2108,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Payments",
    "pred": "SELECT COUNT(*) FROM Payments",
    "exec_result": 1
  },
  {
    "idx": 2109,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT payment_id ,  invoice_id ,  payment_details FROM Payments",
    "pred": "SELECT `payment_id`, `invoice_id`, `payment_details` FROM `Payments`",
    "exec_result": 1
  },
  {
    "idx": 2110,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT payment_id ,  invoice_id ,  payment_details FROM Payments",
    "pred": "SELECT `payment_id`, `invoice_id`, `payment_details` FROM `Payments`",
    "exec_result": 1
  },
  {
    "idx": 2111,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT `invoice_id`, `invoice_status` FROM `Invoices`",
    "exec_result": 0
  },
  {
    "idx": 2112,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT DISTINCT P.`invoice_id`, I.`invoice_status` FROM `Payments` P JOIN `Invoices` I ON P.`invoice_id` = I.`invoice_id`",
    "exec_result": 1
  },
  {
    "idx": 2113,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id",
    "pred": "SELECT `invoice_id`, COUNT(*) as `Number_of_Payments` FROM `Payments` GROUP BY `invoice_id`",
    "exec_result": 1
  },
  {
    "idx": 2114,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id",
    "pred": "SELECT `invoice_id`, COUNT(`payment_id`) as `Number_of_Payments` FROM `Payments` GROUP BY `invoice_id`;",
    "exec_result": 1
  },
  {
    "idx": 2115,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `invoice_id`, `invoice_status`, `invoice_details` FROM Invoices WHERE (SELECT COUNT(*) FROM Payments WHERE Payments.`invoice_id` = Invoices.`invoice_id`) = (SELECT MAX(payment_count) FROM (SELECT COUNT(*) AS payment_count FROM Payments GROUP BY `invoice_id`));",
    "exec_result": 1
  },
  {
    "idx": 2116,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT I.`invoice_id`, I.`invoice_status`, I.`invoice_details`, COUNT(P.`payment_id`) as `Number_of_Payments` FROM Invoices as I JOIN Payments as P ON I.`invoice_id` = P.`invoice_id` GROUP BY I.`invoice_id` ORDER BY `Number_of_Payments` DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2117,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2118,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "SELECT COUNT(*) FROM Staff",
    "exec_result": 1
  },
  {
    "idx": 2119,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id",
    "pred": "SELECT Agencies.agency_id, COUNT(Staff.staff_id) FROM Agencies JOIN Staff ON Agencies.agency_id = Staff.agency_id GROUP BY Agencies.agency_id",
    "exec_result": 1
  },
  {
    "idx": 2120,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id",
    "pred": "SELECT A.agency_id, COUNT(S.staff_id) as number_of_staff FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id GROUP BY A.agency_id;",
    "exec_result": 1
  },
  {
    "idx": 2121,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.agency_id, A.agency_details, COUNT(S.staff_id) as staff_count FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id GROUP BY A.agency_id ORDER BY staff_count DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 2122,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT A.agency_id, A.agency_details FROM Agencies A JOIN Staff S ON A.agency_id = S.agency_id JOIN Clients C ON A.agency_id = C.agency_id JOIN Staff_in_Meetings SM ON S.staff_id = SM.staff_id GROUP BY A.agency_id HAVING COUNT(SM.staff_id) = ( SELECT COUNT(staff_id) FROM Staff WHERE agency_id = A.agency_id GROUP BY agency_id ORDER BY COUNT(staff_id) DESC LIMIT 1 );",
    "exec_result": 0
  },
  {
    "idx": 2123,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome",
    "pred": "SELECT `meeting_outcome`, COUNT(*) FROM `Meetings` GROUP BY `meeting_outcome`",
    "exec_result": 1
  },
  {
    "idx": 2124,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome",
    "pred": "SELECT `meeting_outcome`, COUNT(*) as `count` FROM `Meetings` GROUP BY `meeting_outcome`;",
    "exec_result": 1
  },
  {
    "idx": 2125,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id",
    "exec_result": 1
  },
  {
    "idx": 2126,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Meetings.meeting_id) as num_meetings FROM Clients JOIN Meetings ON Clients.client_id = Meetings.client_id GROUP BY Clients.client_id;",
    "exec_result": 1
  },
  {
    "idx": 2127,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type",
    "pred": "SELECT `meeting_type`, COUNT(*) FROM `Meetings` GROUP BY `meeting_type`",
    "exec_result": 1
  },
  {
    "idx": 2128,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type",
    "pred": "SELECT `meeting_type`, COUNT(*) as `Number_of_Meetings` FROM `Meetings` GROUP BY `meeting_type`;",
    "exec_result": 1
  },
  {
    "idx": 2129,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT M.`meeting_id`, M.`meeting_outcome`, M.`meeting_type`, C.`client_details` FROM Meetings AS M JOIN Clients AS C ON M.`client_id` = C.`client_id`",
    "exec_result": 1
  },
  {
    "idx": 2130,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT Meetings.meeting_id, Meetings.meeting_outcome, Meetings.meeting_type, Clients.client_details FROM Meetings INNER JOIN Clients ON Meetings.client_id = Clients.client_id",
    "exec_result": 1
  },
  {
    "idx": 2131,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id",
    "pred": "SELECT T1.`meeting_id`, COUNT(*) FROM Meetings AS T1 JOIN Staff_in_Meetings AS T2 ON T1.`meeting_id` = T2.`meeting_id` GROUP BY T1.`meeting_id`",
    "exec_result": 1
  },
  {
    "idx": 2132,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id",
    "pred": "SELECT `meeting_id`, COUNT(*) as `Number_of_Staff` FROM `Staff_in_Meetings` GROUP BY `meeting_id`",
    "exec_result": 1
  },
  {
    "idx": 2133,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT T1.`staff_id`, COUNT(*) FROM Staff AS T1 JOIN Staff_in_Meetings AS T2 ON T1.`staff_id` = T2.`staff_id` JOIN Meetings AS T3 ON T2.`meeting_id` = T3.`meeting_id` WHERE T3.`billable_yn` = '1' GROUP BY T1.`staff_id` HAVING COUNT(*) = (SELECT MIN(count) FROM (SELECT COUNT(*) as count FROM Staff JOIN Staff_in_Meetings ON Staff.`staff_id` = Staff_in_Meetings.`staff_id` JOIN Meetings ON Staff_in_Meetings.`meeting_id` = Meetings.`meeting_id` WHERE Meetings.`billable_yn` = '1' GROUP BY Staff.`staff_id`))",
    "exec_result": 0
  },
  {
    "idx": 2134,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;",
    "pred": "SELECT S.`staff_id` FROM Staff AS S JOIN ( SELECT SM.`staff_id` FROM Staff_in_Meetings AS SM JOIN Meetings AS M ON SM.`meeting_id` = M.`meeting_id` WHERE M.`meeting_outcome` = 'Summary' GROUP BY SM.`staff_id` HAVING COUNT(DISTINCT M.`meeting_id`) = ( SELECT COUNT(DISTINCT M.`meeting_id`) FROM Staff_in_Meetings AS SM JOIN Meetings AS M ON SM.`meeting_id` = M.`meeting_id` GROUP BY SM.`staff_id` ORDER BY COUNT(DISTINCT M.`meeting_id`) ASC LIMIT 1 ) ) AS L ON S.`staff_id` = L.`staff_id`",
    "exec_result": 0
  },
  {
    "idx": 2135,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_id) FROM Staff_in_meetings",
    "pred": "SELECT COUNT(*) FROM Staff_in_Meetings",
    "exec_result": 1
  },
  {
    "idx": 2136,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_id) FROM Staff_in_meetings",
    "pred": "SELECT COUNT(DISTINCT staff_id) FROM Staff_in_Meetings",
    "exec_result": 1
  },
  {
    "idx": 2137,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )",
    "pred": "SELECT COUNT(*) FROM Staff WHERE staff_id NOT IN ( SELECT DISTINCT staff_id FROM Staff_in_Meetings )",
    "exec_result": 1
  },
  {
    "idx": 2138,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )",
    "pred": "SELECT COUNT(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_Meetings )",
    "exec_result": 1
  },
  {
    "idx": 2139,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT Clients.client_id, Clients.client_details FROM Clients JOIN Invoices ON Clients.agency_id = Invoices.client_id OR Clients.agency_id = Invoices.client_id JOIN Meetings ON Clients.agency_id = Meetings.client_id OR Clients.agency_id = Meetings.client_id WHERE Clients.agency_id IN (SELECT agency_id FROM Meetings) OR Clients.agency_id IN (SELECT agency_id FROM Invoices)",
    "exec_result": 0
  },
  {
    "idx": 2140,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT Clients.client_id, Clients.client_details, Clients.sic_code, Invoices.invoice_id, Invoices.invoice_status, Invoices.invoice_details, Meetings.meeting_id, Meetings.meeting_outcome, Meetings.meeting_type, Meetings.billable_yn, Meetings.start_date_time, Meetings.end_date_time, Meetings.purpose_of_meeting, Meetings.other_details, Payments.payment_id, Payments.payment_details FROM Clients JOIN Invoices ON Clients.client_id = Invoices.client_id JOIN Meetings ON Clients.client_id = Meetings.client_id JOIN Payments ON Invoices.invoice_id = Payments.invoice_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id WHERE Clients.agency_id IN (SELECT agency_id FROM Agencies WHERE agency_details LIKE '%White, Corwin and Rath%') OR Clients.agency_id IN (SELECT agency_id FROM Agencies WHERE agency_details LIKE '%West, Grady and Durgan%') OR Clients.agency_id IN (SELECT agency_id FROM Agencies WHERE agency_details LIKE '%Upton, Hayes and Schumm%') OR Clients.agency_id IN (SELECT agency_id FROM Agencies WHERE agency_details LIKE '%Renner LLC%') OR Clients.agency_id IN (SELECT agency_id FROM Agencies WHERE agency_details LIKE '%Muller, Klein and Kunde%') OR Clients.agency_id IN (SELECT agency_id FROM Agencies WHERE agency_details LIKE '%Hickle-Durgan%') OR Clients.sic_code = 'Mutual' OR Clients.sic_code = 'Bad'",
    "exec_result": 0
  },
  {
    "idx": 2141,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE \"%s%\" GROUP BY staff_id HAVING count(*)  >=  1",
    "pred": "SELECT staff_id, staff_details FROM Staff WHERE staff_details LIKE '%s%' GROUP BY staff_id, staff_details;",
    "exec_result": 1
  },
  {
    "idx": 2142,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE \"%s%\" GROUP BY staff_id HAVING count(*)  >=  1",
    "pred": "SELECT S.`Staff_ID`, S.`Staff_Details` FROM Staff AS S JOIN Staff_in_Meetings AS SM ON S.`Staff_ID` = SM.`Staff_ID` JOIN Meetings AS M ON SM.`Meeting_ID` = M.`Meeting_ID` WHERE S.`Staff_Details` LIKE '%s%' GROUP BY S.`Staff_ID` HAVING COUNT(DISTINCT M.`Meeting_ID`) > 0;",
    "exec_result": 0
  },
  {
    "idx": 2143,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT Clients.`client_id`, Clients.`sic_code`, Clients.`agency_id` FROM Clients JOIN Invoices ON Clients.`agency_id` = Invoices.`client_id` JOIN Meetings ON Clients.`agency_id` = Meetings.`client_id` WHERE Meetings.`meeting_id` IN ( SELECT Meeting_id FROM Staff_in_Meetings WHERE staff_id IN ( SELECT staff_id FROM Staff WHERE agency_id IN ( SELECT agency_id FROM Clients WHERE `agency_id` = Invoices.`client_id` ) ) )",
    "exec_result": 0
  },
  {
    "idx": 2144,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT Clients.client_id, Clients.sic_code, Clients.agency_id FROM Clients JOIN Invoices ON Clients.agency_id = Invoices.client_id JOIN Meetings ON Clients.agency_id = Meetings.client_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id WHERE ( SELECT COUNT(*) FROM Meetings WHERE Clients.agency_id = Meetings.client_id ) = 1 AND ( SELECT COUNT(*) FROM Invoices WHERE Clients.agency_id = Invoices.client_id ) > 0",
    "exec_result": 0
  },
  {
    "idx": 2145,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id",
    "pred": "SELECT Meetings.start_date_time, Meetings.end_date_time, Clients.client_details, Staff.staff_details FROM Meetings INNER JOIN Clients ON Meetings.client_id = Clients.client_id INNER JOIN Staff ON Meetings.agency_id = Staff.agency_id;",
    "exec_result": 0
  },
  {
    "idx": 2146,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id",
    "pred": "SELECT Meetings.start_date_time, Meetings.end_date_time, Clients.client_details, Staff.staff_details FROM Meetings JOIN Clients ON Meetings.client_id = Clients.client_id JOIN Staff_in_Meetings ON Meetings.meeting_id = Staff_in_Meetings.meeting_id JOIN Staff ON Staff_in_Meetings.staff_id = Staff.staff_id",
    "exec_result": 1
  }
]