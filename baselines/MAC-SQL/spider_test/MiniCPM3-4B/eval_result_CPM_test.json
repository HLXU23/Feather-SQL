[
  {
    "idx": 0,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT count(*) FROM club",
    "pred": "SELECT COUNT(*) FROM club",
    "exec_result": 1
  },
  {
    "idx": 1,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT count(*) FROM club",
    "pred": "SELECT COUNT(*) FROM club",
    "exec_result": 1
  },
  {
    "idx": 2,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club ORDER BY Name ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 3,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club ORDER BY Name ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 4,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manager ,  Captain FROM club",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 5,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manager ,  Captain FROM club",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 6,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 7,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Manufacturer != \"Nike\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 8,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 9,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Wins_count ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 10,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 11,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 12,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 13,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT DISTINCT Country FROM player WHERE Earnings  >  1200000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 14,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 15,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Wins_count  >  2 ORDER BY Earnings DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 16,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 17,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID",
    "pred": "SELECT T1.Name AS Player_Name, T2.Name AS Club_Name FROM player AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID",
    "exec_result": 1
  },
  {
    "idx": 18,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 19,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Wins_count  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 20,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 21,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T2.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.Manager  =  \"Sam Allardyce\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 22,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 23,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID GROUP BY T1.Club_ID ORDER BY avg(T2.Earnings) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 24,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
    "pred": "SELECT Manufacturer, COUNT(DISTINCT Club_ID) FROM club GROUP BY Manufacturer",
    "exec_result": 1
  },
  {
    "idx": 25,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer ,  COUNT(*) FROM club GROUP BY Manufacturer",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 26,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Manufacturer, COUNT(*) FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 27,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Manufacturer, COUNT(*) FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 28,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
    "pred": "SELECT DISTINCT T1.Manufacturer FROM club AS T1 INNER JOIN player AS T2 ON T1.Club_ID = T2.Club_ID GROUP BY T1.Manufacturer HAVING COUNT(T1.Manufacturer) > 1",
    "exec_result": 0
  },
  {
    "idx": 29,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Manufacturer FROM club GROUP BY Manufacturer HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 30,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 31,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player GROUP BY Country HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 32,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 33,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 34,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 35,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 36,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT COUNT (DISTINCT Country) FROM player",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 37,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT COUNT (DISTINCT Country) FROM player",
    "pred": "SELECT COUNT(DISTINCT Country) FROM player",
    "exec_result": 1
  },
  {
    "idx": 38,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 39,
    "db_id": "soccer_3",
    "question": "",
    "gold": "SELECT Earnings FROM player WHERE Country  =  \"Australia\" OR Country  =  \"Zimbabwe\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 40,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 41,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2 INTERSECT SELECT T1.customer_id ,  T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING count(*)  >= 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 42,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 43,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.order_status_code ,  count(*) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 44,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 45,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT min(date_order_placed) FROM Orders UNION SELECT T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  1",
    "pred": "SELECT MIN(date_order_placed) AS earliest_order_date FROM Orders UNION ALL SELECT date_order_placed FROM Orders JOIN Order_Items ON Orders.order_id = Order_Items.order_id WHERE Order_Items.order_item_status_code = 'Delivered' AND Order_Items.order_item_id IN ( SELECT order_item_id FROM Order_Items WHERE order_item_status_code = 'Delivered' GROUP BY order_item_id HAVING COUNT(*) > 1 )",
    "exec_result": 0
  },
  {
    "idx": 46,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 47,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT customer_first_name ,  customer_middle_initial ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 48,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_id ,  product_name ,  product_price ,  product_color FROM Products EXCEPT SELECT T1.product_id ,  T1.product_name ,  T1.product_price ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.product_id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 49,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 50,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 51,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 52,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 53,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 54,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 55,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 56,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(*) AS `count`, Customer_Payment_Methods.payment_method_code FROM Customer_Payment_Methods GROUP BY payment_method_code ORDER BY `count` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 57,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT Payment_method_code FROM Customer_Payment_Methods GROUP BY Payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT payment_method_code, COUNT(*) AS num_customers FROM Customer_Payment_Methods GROUP BY payment_method_code ORDER BY num_customers DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 58,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 59,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.gender_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 60,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 61,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.gender_code ,  count(*) FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.gender_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 62,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "SELECT Customers.customer_first_name, Customers.customer_middle_initial, Customers.customer_last_name, Customer_Payment_Methods.payment_method_code FROM Customers INNER JOIN Customer_Payment_Methods ON Customers.customer_id = Customer_Payment_Methods.customer_id",
    "exec_result": 1
  },
  {
    "idx": 63,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T1.customer_middle_initial ,  T1.customer_last_name ,  T2.Payment_method_code FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 64,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 65,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 66,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 67,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T4.shipment_date FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 68,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
    "pred": "SELECT Order_Items.order_item_status_code, Shipments.shipment_tracking_number FROM Order_Items JOIN Shipments ON Order_Items.order_id = Shipments.order_id",
    "exec_result": 0
  },
  {
    "idx": 69,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_item_status_code ,  T3.shipment_tracking_number FROM Order_items AS T1 JOIN Shipment_Items AS T2 ON T1.order_item_id  =  T2.order_item_id JOIN Shipments AS T3 ON T2.shipment_id  =  T3.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 70,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 71,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 72,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 73,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT DISTINCT T1.product_name ,  T1.product_price ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T2.order_id  =  T3.order_id JOIN Customers AS T4 ON T3.customer_id  =  T4.customer_id WHERE T4.gender_code  =  'Female'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 74,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 75,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 76,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select t1.order_id ,  t1.date_order_placed ,  sum(t3.product_price) from orders as t1 join order_items as t2 on t1.order_id  =  t2.order_id join products as t3 on t2.product_id  =  t3.product_id group by t1.order_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 77,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.order_id ,  T1.date_order_placed ,  sum(T3.product_price) FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id JOIN Products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T1.order_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 78,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 79,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 80,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
    "pred": "SELECT COUNT(DISTINCT oi.order_item_status_code) FROM Order_Items oi",
    "exec_result": 1
  },
  {
    "idx": 81,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT order_item_status_code) FROM Order_items",
    "pred": "SELECT COUNT(DISTINCT order_item_status_code) FROM Order_Items",
    "exec_result": 1
  },
  {
    "idx": 82,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
    "pred": "SELECT COUNT(DISTINCT `payment_method_code`) FROM Customer_Payment_Methods",
    "exec_result": 1
  },
  {
    "idx": 83,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(DISTINCT Payment_method_code) FROM Customer_Payment_Methods",
    "pred": "SELECT COUNT(DISTINCT Payment_Method_Code) FROM Customer_Payment_Methods;",
    "exec_result": 1
  },
  {
    "idx": 84,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
    "pred": "SELECT login_name, login_password FROM Customers WHERE customer_id IN (SELECT customer_id FROM Customers WHERE SUBSTR(login_name, 1, 2) = '+12')",
    "exec_result": 0
  },
  {
    "idx": 85,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT login_name ,  login_password FROM Customers WHERE phone_number LIKE '+12%'",
    "pred": "SELECT login_name, login_password FROM Customers WHERE login_name LIKE '+12%'",
    "exec_result": 0
  },
  {
    "idx": 86,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 87,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_size FROM Products WHERE product_name LIKE '%Dell%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 88,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 89,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_price ,  product_size FROM Products WHERE product_price  >  ( SELECT avg(product_price) FROM Products )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 90,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 91,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 92,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 93,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payment_Methods )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 94,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code ,  date_order_placed FROM Orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 95,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code ,  date_order_placed FROM Orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 96,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 97,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT address_line_1 ,  town_city ,  county FROM Customers WHERE Country  =  'USA'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 98,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 99,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.customer_first_name ,  T4.product_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN Order_items AS T3 ON T2.order_id  =  T3.order_id JOIN Products AS T4 ON T3.product_id  =  T4.product_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 100,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Shipment_Items",
    "pred": "SELECT COUNT(*) FROM Shipment_Items",
    "exec_result": 1
  },
  {
    "idx": 101,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT count(*) FROM Shipment_Items",
    "pred": "SELECT COUNT(*) FROM Shipments",
    "exec_result": 0
  },
  {
    "idx": 102,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products",
    "pred": "SELECT AVG(product_price) FROM Products",
    "exec_result": 1
  },
  {
    "idx": 103,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 104,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 105,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT avg(T1.product_price) FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 106,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 107,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 108,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 109,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 110,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
    "pred": "SELECT order_status_code FROM Orders GROUP BY order_status_code HAVING COUNT(*) = 1",
    "exec_result": 0
  },
  {
    "idx": 111,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT order_status_code FROM Orders GROUP BY order_status_code ORDER BY count(*) LIMIT 1",
    "pred": "SELECT order_status_code, COUNT(*) as count FROM Orders GROUP BY order_status_code ORDER BY count ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 112,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 113,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.product_id ,  T1.product_description FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id HAVING count(*)  >  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 114,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 115,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT T1.invoice_date ,  T1.invoice_number FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 116,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 117,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT shipment_tracking_number ,  shipment_date FROM Shipments",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 118,
    "db_id": "e_commerce",
    "question": "",
    "gold": "SELECT product_color ,  product_description ,  product_size FROM Products WHERE product_price  <  ( SELECT max(product_price) FROM products )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 119,
    "db_id": "e_commerce",
    "question": "",
    "gold": "select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 120,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director WHERE age  >  (SELECT avg(age) FROM director)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 121,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director ORDER BY age DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 122,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(*) FROM channel WHERE internet LIKE \"%bbc%\"",
    "pred": "SELECT COUNT(*) FROM channel WHERE `Internet` LIKE '%bbc%'",
    "exec_result": 1
  },
  {
    "idx": 123,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(DISTINCT Digital_terrestrial_channel) FROM channel",
    "pred": "SELECT COUNT(DISTINCT Digital_terrestrial_channel) FROM channel WHERE Digital_terrestrial_channel IS NOT NULL",
    "exec_result": 1
  },
  {
    "idx": 124,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT title FROM program ORDER BY start_year DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 125,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 126,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name ,  t2.age FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id GROUP BY t1.director_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 127,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT title FROM program ORDER BY start_year DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 128,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id HAVING count(*)  >  1",
    "pred": "SELECT C.Name, C.Internet FROM channel AS C JOIN program AS P ON C.Channel_ID = P.Channel_ID GROUP BY C.Channel_ID HAVING COUNT(P.Program_ID) > 1",
    "exec_result": 1
  },
  {
    "idx": 129,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  count(*) FROM channel AS t1 JOIN program AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id",
    "pred": "SELECT C.Name, COUNT(P.Program_ID) FROM channel AS C JOIN program AS P ON C.Channel_ID = P.Channel_ID GROUP BY C.Channel_ID",
    "exec_result": 1
  },
  {
    "idx": 130,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)",
    "pred": "SELECT COUNT(*) FROM channel WHERE Channel_ID NOT IN (SELECT DISTINCT Channel_ID FROM program)",
    "exec_result": 1
  },
  {
    "idx": 131,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t2.name FROM program AS t1 JOIN director AS t2 ON t1.director_id  =  t2.director_id WHERE t1.title  =  'Dracula'",
    "pred": "SELECT D.Name FROM director D JOIN program P ON D.Director_ID = P.Director_ID WHERE P.Title = 'Dracula'",
    "exec_result": 1
  },
  {
    "idx": 132,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.internet FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id GROUP BY t1.channel_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 133,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT name FROM director WHERE age BETWEEN 30 AND 60",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 134,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  <  40 INTERSECT SELECT t1.name FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.age  >  60",
    "pred": "SELECT DISTINCT T1.Name FROM channel AS T1 JOIN director_admin AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T2.Is_first_director = 'T' AND T2.Director_ID IN ( SELECT Director_ID FROM director WHERE Age < 40 ) AND T2.Director_ID IN ( SELECT Director_ID FROM director WHERE Age > 60 )",
    "exec_result": 1
  },
  {
    "idx": 135,
    "db_id": "bbc_channels",
    "question": "",
    "gold": "SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != \"Hank Baskett\"",
    "pred": "SELECT DISTINCT channel.Channel_ID, channel.Name FROM channel LEFT JOIN director_admin ON channel.Channel_ID = director_admin.Channel_ID WHERE director_admin.Director_ID NOT IN (SELECT Director_ID FROM director WHERE Name = 'Hank Baskett')",
    "exec_result": 1
  },
  {
    "idx": 136,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT count(*) FROM radio",
    "pred": "SELECT COUNT(*) FROM radio;",
    "exec_result": 1
  },
  {
    "idx": 137,
    "db_id": "tv_shows",
    "question": "",
    "gold": "select transmitter from radio order by erp_kw asc",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 138,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT tv_show_name ,  Original_Airdate FROM tv_show",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 139,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Station_name FROM city_channel WHERE Affiliation != \"ABC\"",
    "pred": "SELECT DISTINCT T1.Station_name FROM city_channel AS T1 WHERE T1.Affiliation != 'ABC'",
    "exec_result": 1
  },
  {
    "idx": 140,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30",
    "pred": "SELECT DISTINCT r.Transmitter FROM radio r INNER JOIN city_channel_radio ccr ON r.Radio_ID = ccr.Radio_ID WHERE r.ERP > 150 OR r.ERP < 30",
    "exec_result": 0
  },
  {
    "idx": 141,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1",
    "pred": "SELECT Transmitter FROM radio WHERE ERP_kW = (SELECT MAX(ERP_kW) FROM radio)",
    "exec_result": 0
  },
  {
    "idx": 142,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT avg(ERP_kW) FROM radio",
    "pred": "SELECT AVG(ERP_kW) FROM radio",
    "exec_result": 1
  },
  {
    "idx": 143,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM city_channel GROUP BY Affiliation",
    "pred": "SELECT Affiliation, COUNT(*) FROM city_channel GROUP BY Affiliation",
    "exec_result": 1
  },
  {
    "idx": 144,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation FROM city_channel GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Affiliation`, COUNT(*) AS `Count` FROM city_channel GROUP BY `Affiliation` ORDER BY `Count` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 145,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Affiliation FROM city_channel GROUP BY Affiliation HAVING COUNT(*)  >  3",
    "pred": "SELECT DISTINCT T1.Affiliation FROM city_channel AS T1 JOIN city_channel_radio AS T2 ON T1.ID = T2.City_channel_ID WHERE T2.Is_online = 'T' GROUP BY T1.Affiliation HAVING COUNT(*) > 3",
    "exec_result": 0
  },
  {
    "idx": 146,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT City ,  Station_name FROM city_channel ORDER BY Station_name ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 147,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T3.Transmitter ,  T2.City FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 148,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T3.Transmitter ,  T2.Station_name FROM city_channel_radio AS T1 JOIN city_channel AS T2 ON T1.City_channel_ID  =  T2.ID JOIN radio AS T3 ON T1.Radio_ID  =  T3.Radio_ID ORDER BY T3.ERP_kW DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 149,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 150,
    "db_id": "tv_shows",
    "question": "",
    "gold": "SELECT Transmitter FROM radio WHERE Radio_ID NOT IN (SELECT Radio_ID FROM city_channel_radio)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 151,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 152,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE power  >  6000 ORDER BY top_speed DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 153,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver WHERE citizenship  =  'United States'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 154,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver WHERE citizenship  =  'United States'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 155,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Driver_ID, COUNT(DISTINCT Vehicle_ID) AS Total_Vehicles_Driven FROM vehicle_driver GROUP BY Driver_ID ORDER BY Total_Vehicles_Driven DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 156,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT d.Driver_ID, COUNT(vd.Vehicle_ID) AS Total_Vehicles FROM driver AS d JOIN vehicle_driver AS vd ON d.Driver_ID = vd.Driver_ID GROUP BY d.Driver_ID ORDER BY Total_Vehicles DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 157,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 158,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 159,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT v.Vehicle_ID FROM vehicle v JOIN vehicle_driver vd ON v.Vehicle_ID = vd.Vehicle_ID GROUP BY v.Vehicle_ID HAVING COUNT(*) = 1",
    "exec_result": 0
  },
  {
    "idx": 160,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 161,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 162,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT top_speed ,  power FROM vehicle WHERE build_year  =  1996",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 163,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT build_year ,  model ,  builder FROM vehicle",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 164,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT build_year ,  model ,  builder FROM vehicle",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 165,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 166,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 167,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 168,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Racing_Series  =  'NASCAR'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 169,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT avg(top_speed) FROM vehicle",
    "pred": "SELECT AVG(T1.Top_Speed) FROM vehicle AS T1",
    "exec_result": 1
  },
  {
    "idx": 170,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT avg(top_speed) FROM vehicle",
    "pred": "SELECT AVG(T1.Top_Speed) FROM vehicle AS T1",
    "exec_result": 1
  },
  {
    "idx": 171,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "select distinct t1.name from driver as t1 join vehicle_driver as t2 on t1.driver_id  =  t2.driver_id join vehicle as t3 on t2.vehicle_id  =  t3.vehicle_id where t3.power  >  5000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 172,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT DISTINCT T1.Name FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.power  >  5000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 173,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 174,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 175,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 176,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model ,  build_year FROM vehicle WHERE model LIKE '%DJ%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 177,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 178,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT model FROM vehicle EXCEPT SELECT T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 179,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 180,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 181,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 182,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 183,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 184,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM vehicle WHERE top_speed  =  (SELECT max(top_speed) FROM vehicle)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 185,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver ORDER BY name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 186,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT name FROM driver ORDER BY name",
    "pred": "SELECT DISTINCT d.Name FROM driver d ORDER BY d.Name",
    "exec_result": 1
  },
  {
    "idx": 187,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 188,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) ,  racing_series FROM driver GROUP BY racing_series",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 189,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 190,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT T1.name ,  T1.citizenship FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.driver_id  =  T2.driver_id JOIN vehicle AS T3 ON T2.vehicle_id  =  T3.vehicle_id WHERE T3.model  =  'DJ1'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 191,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 192,
    "db_id": "vehicle_driver",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM vehicle_driver )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 193,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(*) FROM Exams",
    "pred": "SELECT COUNT(*) FROM Exams",
    "exec_result": 1
  },
  {
    "idx": 194,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(*) FROM Exams",
    "pred": "SELECT COUNT(*) FROM Exams",
    "exec_result": 1
  },
  {
    "idx": 195,
    "db_id": "online_exams",
    "question": "",
    "gold": "select distinct subject_code from exams order by subject_code asc",
    "pred": "SELECT DISTINCT Exam_ID FROM Exams ORDER BY Exam_ID ASC",
    "exec_result": 0
  },
  {
    "idx": 196,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Subject_Code FROM Exams ORDER BY Subject_Code",
    "pred": "SELECT DISTINCT Exam_ID FROM Exams ORDER BY Exam_ID ASC",
    "exec_result": 0
  },
  {
    "idx": 197,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 198,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date ,  Exam_Name FROM Exams WHERE Subject_Code != 'Database'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 199,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 200,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Exam_Date FROM Exams WHERE Subject_Code LIKE '%data%' ORDER BY Exam_Date DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 201,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 202,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code ,  COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "pred": "SELECT Type_of_Question_Code, COUNT(*) FROM Questions GROUP BY Type_of_Question_Code",
    "exec_result": 1
  },
  {
    "idx": 203,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
    "pred": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments = 'Normal'",
    "exec_result": 1
  },
  {
    "idx": 204,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT DISTINCT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 205,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(DISTINCT Comments) FROM Student_Answers",
    "pred": "SELECT COUNT(DISTINCT Comments) FROM Student_Answers",
    "exec_result": 1
  },
  {
    "idx": 206,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT count(DISTINCT Comments) FROM Student_Answers",
    "pred": "SELECT COUNT(DISTINCT Comments) FROM Student_Answers",
    "exec_result": 1
  },
  {
    "idx": 207,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 208,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY COUNT(*) DESC",
    "pred": "SELECT Student_Answer_Text, COUNT(*) AS Frequency FROM Student_Answers GROUP BY Student_Answer_Text ORDER BY Frequency DESC",
    "exec_result": 0
  },
  {
    "idx": 209,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 210,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID",
    "pred": "SELECT Students.First_Name, Student_Answers.Date_of_Answer FROM Students INNER JOIN Student_Answers ON Students.Student_ID = Student_Answers.Student_ID",
    "exec_result": 1
  },
  {
    "idx": 211,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 212,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.Email_Adress ,  T1.Date_of_Answer FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID ORDER BY T1.Date_of_Answer DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 213,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 214,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Assessment FROM Student_Assessments GROUP BY Assessment ORDER BY COUNT(*) ASC LIMIT 1",
    "pred": "SELECT Assessment, COUNT(*) AS Frequency FROM Student_Assessments GROUP BY Assessment ORDER BY Frequency ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 215,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 216,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT T2.First_Name FROM Student_Answers AS T1 JOIN Students AS T2 ON T1.Student_ID  =  T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.First_Name FROM Students AS T1 INNER JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID GROUP BY T1.Student_ID HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 217,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Valid_Answer_Text, COUNT(*) as Frequency FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY Frequency DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 218,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Valid_Answer_Text FROM Valid_Answers GROUP BY Valid_Answer_Text ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Valid_Answer_Text`, COUNT(*) AS `Frequency` FROM Valid_Answers GROUP BY `Valid_Answer_Text` ORDER BY `Frequency` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 219,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 220,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU != \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 221,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 222,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Gender_MFU ,  COUNT(*) FROM Students GROUP BY Gender_MFU",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 223,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 224,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Last_Name FROM Students WHERE Gender_MFU  =  \"F\" OR Gender_MFU  =  \"M\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 225,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
    "pred": "SELECT DISTINCT T1.First_Name FROM Students AS T1 LEFT JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID WHERE T2.Student_Answer_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 226,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT First_Name FROM Students WHERE Student_ID NOT IN (SELECT Student_ID FROM Student_Answers)",
    "pred": "SELECT DISTINCT T1.First_Name FROM Students AS T1 LEFT JOIN Student_Answers AS T2 ON T1.Student_ID = T2.Student_ID WHERE T2.Student_Answer_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 227,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 228,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Normal\" INTERSECT SELECT Student_Answer_Text FROM Student_Answers WHERE Comments  =  \"Absent\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 229,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 230,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING count(*)  >=  3",
    "pred": "SELECT Type_of_Question_Code FROM Questions WHERE Type_of_Question_Code IN (SELECT Type_of_Question_Code FROM Questions GROUP BY Type_of_Question_Code HAVING COUNT(*) >= 3)",
    "exec_result": 0
  },
  {
    "idx": 231,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT * FROM Students",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 232,
    "db_id": "online_exams",
    "question": "",
    "gold": "SELECT * FROM Students",
    "pred": "SELECT S.Student_ID, S.First_Name, S.Middle_Name, S.Last_Name, S.Gender_MFU, S.Student_Address, S.Email_Adress, S.Cell_Mobile_Phone, S.Home_Phone FROM Students S",
    "exec_result": 1
  },
  {
    "idx": 233,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Addresses",
    "pred": "SELECT COUNT(*) FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 234,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Addresses",
    "pred": "SELECT COUNT(*) FROM Addresses;",
    "exec_result": 1
  },
  {
    "idx": 235,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT address_id ,  address_details FROM Addresses",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 236,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT address_id ,  address_details FROM Addresses",
    "pred": "SELECT Addresses.address_id, Addresses.address_details FROM Addresses",
    "exec_result": 1
  },
  {
    "idx": 237,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products",
    "pred": "SELECT COUNT(*) FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 238,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products",
    "pred": "SELECT COUNT(*) FROM Products;",
    "exec_result": 1
  },
  {
    "idx": 239,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 240,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code ,  product_name FROM Products",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 241,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
    "pred": "SELECT product_price FROM Products WHERE product_name = 'Monitor'",
    "exec_result": 1
  },
  {
    "idx": 242,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_price FROM Products WHERE product_name  =  \"Monitor\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 243,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 244,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT min(product_price) ,  avg(product_price) ,  max(product_price) FROM Products",
    "pred": "SELECT MIN(product_price), AVG(product_price), MAX(product_price) FROM Products",
    "exec_result": 1
  },
  {
    "idx": 245,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
    "pred": "SELECT AVG(P.product_price) FROM Products P WHERE P.product_type_code = 'Clothes';",
    "exec_result": 1
  },
  {
    "idx": 246,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Clothes\"",
    "pred": "SELECT AVG(P.product_price) FROM Products P WHERE P.product_type_code = 'Clothes';",
    "exec_result": 1
  },
  {
    "idx": 247,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
    "pred": "SELECT COUNT(*) FROM Products WHERE product_type_code = 'Hardware'",
    "exec_result": 1
  },
  {
    "idx": 248,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Products WHERE product_type_code  =  \"Hardware\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 249,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 250,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_price  >  (SELECT avg(product_price) FROM Products)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 251,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 252,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" AND product_price  >  (SELECT avg(product_price) FROM Products WHERE product_type_code  =  \"Hardware\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 253,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
    "pred": "SELECT product_name FROM Products WHERE product_type_code = 'Clothes' ORDER BY product_price DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 254,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Clothes\" ORDER BY product_price DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 255,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 256,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 257,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products ORDER BY product_price DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 258,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products ORDER BY product_price DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 259,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 260,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products WHERE product_type_code  =  \"Hardware\" ORDER BY product_price ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 261,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 262,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  count(*) FROM Products GROUP BY product_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 263,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 264,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code ,  avg(product_price) FROM Products GROUP BY product_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 265,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.product_type_code FROM Products AS T1 GROUP BY T1.product_type_code HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 266,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 267,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) FROM Products GROUP BY product_type_code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 268,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT product_type_code, COUNT(*) as frequency FROM Products GROUP BY product_type_code ORDER BY frequency DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 269,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers",
    "pred": "SELECT COUNT(*) FROM Customers;",
    "exec_result": 1
  },
  {
    "idx": 270,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 271,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id ,  customer_name FROM Customers",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 272,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id ,  customer_name FROM Customers",
    "pred": "SELECT customer_id, customer_name FROM Customers",
    "exec_result": 1
  },
  {
    "idx": 273,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 274,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_address ,  customer_phone ,  customer_email FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 275,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 276,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  count(*) FROM Customers GROUP BY payment_method_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 277,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT payment_method_code, COUNT(*) as count FROM Customers GROUP BY payment_method_code ORDER BY count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 278,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT payment_method_code, COUNT(*) as count FROM Customers GROUP BY payment_method_code ORDER BY count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 279,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 280,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_name FROM Customers WHERE payment_method_code  =  ( SELECT payment_method_code FROM Customers GROUP BY payment_method_code ORDER BY count(*) ASC LIMIT 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 281,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "SELECT Customers.payment_method_code, Customers.customer_number FROM Customers WHERE Customers.customer_name = 'Jeromy'",
    "exec_result": 1
  },
  {
    "idx": 282,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT payment_method_code ,  customer_number FROM Customers WHERE customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 283,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT DISTINCT payment_method_code FROM Customers",
    "pred": "SELECT DISTINCT payment_method_code FROM Customers",
    "exec_result": 1
  },
  {
    "idx": 284,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT DISTINCT payment_method_code FROM Customers",
    "pred": "SELECT DISTINCT payment_method_code FROM Customers",
    "exec_result": 1
  },
  {
    "idx": 285,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 286,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_id ,  product_type_code FROM Products ORDER BY product_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 287,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 288,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT product_type_code FROM Products GROUP BY product_type_code ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 289,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customer_orders",
    "pred": "SELECT COUNT(*) FROM Customer_Orders;",
    "exec_result": 1
  },
  {
    "idx": 290,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customer_orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 291,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 292,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_id ,  order_date ,  order_status_code FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Jeromy\"",
    "pred": "SELECT o.order_id, o.order_date, o.order_status_code FROM Customer_Orders AS o JOIN Customers AS c ON o.customer_id = c.customer_id WHERE c.customer_name = 'Jeromy'",
    "exec_result": 1
  },
  {
    "idx": 293,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 294,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T2.customer_name ,  T1.customer_id ,  count(*) FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 295,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT c.customer_id, c.customer_name, c.customer_phone, c.customer_email FROM Customers c INNER JOIN ( SELECT customer_id, COUNT(*) as order_count FROM Customer_Orders GROUP BY customer_id ORDER BY order_count DESC LIMIT 1 ) t ON c.customer_id = t.customer_id",
    "exec_result": 1
  },
  {
    "idx": 296,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.customer_id ,  T2.customer_name ,  T2.customer_phone ,  T2.customer_email FROM Customer_orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 297,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
    "pred": "SELECT Customer_Orders.order_status_code, COUNT(*) FROM Customer_Orders GROUP BY Customer_Orders.order_status_code",
    "exec_result": 1
  },
  {
    "idx": 298,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code ,  count(*) FROM Customer_orders GROUP BY order_status_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 299,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT order_status_code, COUNT(*) as frequency FROM Customer_Orders GROUP BY order_status_code ORDER BY frequency DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 300,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT order_status_code FROM Customer_orders GROUP BY order_status_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT order_status_code, COUNT(*) as frequency FROM Customer_Orders GROUP BY order_status_code ORDER BY frequency DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 301,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 302,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(*) FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Customer_orders)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 303,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT DISTINCT P.product_name FROM Products P LEFT JOIN Order_Items OI ON P.product_id = OI.product_id WHERE OI.product_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 304,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS t1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id",
    "pred": "SELECT DISTINCT P.product_name FROM Products P LEFT JOIN Order_Items OI ON P.product_id = OI.product_id WHERE OI.product_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 305,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 306,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT sum(order_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 307,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(*) FROM Customers C JOIN Customer_Orders CO ON C.customer_id = CO.customer_id JOIN Order_Items OI ON CO.order_id = OI.order_id JOIN Products P ON OI.product_id = P.product_id WHERE P.product_name = 'Monitor';",
    "exec_result": 1
  },
  {
    "idx": 308,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT T3.customer_id) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Customer_orders AS T3 ON T3.order_id  =  T1.order_id WHERE T2.product_name  =  \"Monitor\"",
    "pred": "SELECT COUNT(DISTINCT Customers.customer_id) FROM Customers JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id JOIN Order_Items ON Customer_Orders.order_id = Order_Items.order_id JOIN Products ON Order_Items.product_id = Products.product_id WHERE Products.product_type_code = 'Monitor';",
    "exec_result": 0
  },
  {
    "idx": 309,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 310,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT count(DISTINCT customer_id) FROM Customer_orders",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 311,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
    "pred": "SELECT DISTINCT Customers.customer_id FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.customer_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 312,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Customer_orders",
    "pred": "SELECT DISTINCT Customers.customer_id FROM Customers LEFT JOIN Customer_Orders ON Customers.customer_id = Customer_Orders.customer_id WHERE Customer_Orders.customer_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 313,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 314,
    "db_id": "customers_and_orders",
    "question": "",
    "gold": "SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T2.order_quantity  >  6 UNION SELECT T1.order_date ,  T1.order_id FROM Customer_Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >  3;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 315,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT count(*) FROM building",
    "pred": "SELECT COUNT(*) FROM building;",
    "exec_result": 1
  },
  {
    "idx": 316,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT count(*) FROM building",
    "pred": "SELECT COUNT(*) FROM building;",
    "exec_result": 1
  },
  {
    "idx": 317,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 318,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM building ORDER BY Number_of_Stories ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 319,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Address FROM building ORDER BY Completed_Year DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 320,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Address FROM building ORDER BY Completed_Year DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 321,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 322,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT max(Number_of_Stories) FROM building WHERE Completed_Year != \"1980\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 323,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT avg(Population) FROM region",
    "pred": "SELECT AVG(Region.Population) FROM Region",
    "exec_result": 1
  },
  {
    "idx": 324,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT avg(Population) FROM region",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 325,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Name ASC",
    "pred": "SELECT Name FROM region ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 326,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Name ASC",
    "pred": "SELECT Name FROM region ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 327,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region WHERE Area  >  10000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 328,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region WHERE Area  >  10000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 329,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 330,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Capital FROM region ORDER BY Population DESC LIMIT 1",
    "pred": "SELECT r.Capital FROM region r ORDER BY r.Population DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 331,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 332,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region ORDER BY Area DESC LIMIT 5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 333,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 334,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT T1.Name, T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID = T2.Region_ID",
    "exec_result": 1
  },
  {
    "idx": 335,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 336,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.Name FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 337,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 338,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T2.capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID GROUP BY T1.Region_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT T1.Name, T1.Capital FROM region AS T1 INNER JOIN building AS T2 ON T1.Region_ID = T2.Region_ID ORDER BY COUNT(T2.Building_ID) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 339,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 340,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Address ,  T2.Capital FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID",
    "pred": "SELECT b.Name, b.Address, r.Name FROM building AS b JOIN region AS r ON b.Region_ID = r.Region_ID",
    "exec_result": 0
  },
  {
    "idx": 341,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 342,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT T1.Number_of_Stories FROM building AS T1 JOIN region AS T2 ON T1.Region_ID  =  T2.Region_ID WHERE T2.Name  =  \"Abruzzo\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 343,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 344,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year ,  COUNT(*) FROM building GROUP BY Completed_Year",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 345,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 346,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building GROUP BY Completed_Year ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT MAX(Completed_Year) FROM building",
    "exec_result": 0
  },
  {
    "idx": 347,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
    "pred": "SELECT DISTINCT r.Name FROM region r LEFT JOIN building b ON r.Region_ID = b.Region_ID WHERE b.Region_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 348,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Name FROM region WHERE Region_ID NOT IN (SELECT Region_ID FROM building)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 349,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 350,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building WHERE Number_of_Stories  >  20 INTERSECT SELECT Completed_Year FROM building WHERE Number_of_Stories  <  15",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 351,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT DISTINCT Address FROM building",
    "pred": "SELECT DISTINCT Address FROM building",
    "exec_result": 1
  },
  {
    "idx": 352,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT DISTINCT Address FROM building",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 353,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 354,
    "db_id": "region_building",
    "question": "",
    "gold": "SELECT Completed_Year FROM building ORDER BY Number_of_Stories DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 355,
    "db_id": "government_shift",
    "question": "",
    "gold": "select channel_details from channels order by channel_details",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 356,
    "db_id": "government_shift",
    "question": "",
    "gold": "select channel_details from channels order by channel_details",
    "pred": "SELECT DISTINCT Channel_Details FROM Channels ORDER BY Channel_Details ASC",
    "exec_result": 1
  },
  {
    "idx": 357,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM services",
    "pred": "SELECT COUNT(DISTINCT Service_ID) FROM Services",
    "exec_result": 1
  },
  {
    "idx": 358,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM services",
    "pred": "SELECT COUNT(*) FROM Services;",
    "exec_result": 1
  },
  {
    "idx": 359,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `Analytical_Layer_Type_Code`, COUNT(*) AS Frequency FROM Analytical_Layer GROUP BY `Analytical_Layer_Type_Code` ORDER BY Frequency DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 360,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code FROM analytical_layer GROUP BY analytical_layer_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Analytical_Layer_Type_Code FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 361,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
    "pred": "SELECT Services.Service_Details FROM Services INNER JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID INNER JOIN Customers ON Customers_and_Services.Customer_ID = Customers.Customer_ID WHERE Customers.Customer_Details = 'Hardy Kutch'",
    "exec_result": 1
  },
  {
    "idx": 362,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t1.customer_details  =  \"Hardy Kutch\"",
    "pred": "SELECT T2.Service_Details FROM Customers AS T1 INNER JOIN Customers_and_Services AS T2 ON T1.Customer_ID = T2.Customer_ID WHERE T1.Customer_Details = 'Hardy Kutch'",
    "exec_result": 0
  },
  {
    "idx": 363,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id group by t1.service_details having count(*)  >  3",
    "pred": "SELECT Service_Details FROM Services WHERE Service_ID IN (SELECT Service_ID FROM Customers_and_Services GROUP BY Service_ID HAVING COUNT(*) > 3)",
    "exec_result": 1
  },
  {
    "idx": 364,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_details HAVING count(*)  >  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 365,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.customer_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 366,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 367,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 368,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id group by t1.customer_details order by count(*) desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 369,
    "db_id": "government_shift",
    "question": "",
    "gold": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
    "pred": "SELECT Customers.Customer_Details FROM Customers LEFT JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID WHERE Customers_and_Services.Customer_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 370,
    "db_id": "government_shift",
    "question": "",
    "gold": "select customer_details from customers where customer_id not in (select customer_id from customers_and_services)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 371,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 372,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customers_and_services as t2 on t1.customer_id  =  t2.customer_id where t2.service_id  =  (select service_id from services group by service_id order by count(*) asc limit 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 373,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
    "pred": "SELECT COUNT(DISTINCT Customers_and_Services_Details) FROM Customers_and_Services",
    "exec_result": 1
  },
  {
    "idx": 374,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(DISTINCT customers_and_services_details) FROM customers_and_services",
    "pred": "SELECT COUNT(DISTINCT Customers.Customer_ID) + COUNT(DISTINCT Services.Service_ID) FROM Customers, Services",
    "exec_result": 0
  },
  {
    "idx": 375,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
    "pred": "SELECT Customer_Details FROM Customers WHERE Customer_Details LIKE '%Kutch%'",
    "exec_result": 1
  },
  {
    "idx": 376,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Kutch%\"",
    "pred": "SELECT Customers.Customer_Details FROM Customers WHERE Customers.Customer_Details LIKE '%Kutch%'",
    "exec_result": 1
  },
  {
    "idx": 377,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
    "pred": "SELECT DISTINCT Services.Service_Details FROM Services LEFT JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID LEFT JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID LEFT JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE (Customers.Customer_Details = 'Hardy Kutch' AND Customers_and_Services.Customer_ID = Customers.Customer_ID) OR Integration_Platform.Integration_Platform_Details = 'good'",
    "exec_result": 0
  },
  {
    "idx": 378,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" OR t4.services_and_channels_details  =  \"good\"",
    "pred": "SELECT DISTINCT S.Service_Details FROM Services AS S WHERE S.Service_ID IN ( SELECT DISTINCT CS.Service_ID FROM Customers AS C JOIN Customers_and_Services AS CS ON C.Customer_ID = CS.Customer_ID WHERE C.Customer_Details = 'Hardy Kutch' ) UNION ALL SELECT DISTINCT S.Service_Details FROM Services AS S JOIN Customer_Interactions AS CI ON S.Service_ID = CI.Service_ID JOIN Integration_Platform AS IP ON CI.Customer_Interaction_ID = IP.Customer_Interaction_ID WHERE IP.Integration_Platform_Details = 'good';",
    "exec_result": 0
  },
  {
    "idx": 379,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
    "pred": "SELECT DISTINCT Services.Service_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Integration_Platform.Customer_Interaction_ID = Customer_Interactions.Customer_Interaction_ID WHERE Customers.Customer_Details = 'Hardy Kutch' AND Integration_Platform.Integration_Platform_Details = 'bad'",
    "exec_result": 0
  },
  {
    "idx": 380,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t3.service_details FROM customers AS t1 JOIN customers_and_services AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id JOIN customer_interactions AS t4 ON t3.service_id  =  t4.service_id WHERE t1.customer_details  =  \"Hardy Kutch\" AND t4.services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Services.Service_Details FROM Services JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID WHERE Customers.Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'Hardy Kutch') AND Customer_Interactions.Status_Code = 'bad' GROUP BY Services.Service_Details HAVING COUNT(Services.Service_Details) > 1;",
    "exec_result": 0
  },
  {
    "idx": 381,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.service_details from services as t1 join customer_interactions as t2 on t1.service_id  =  t2.service_id join channels as t3 on t2.channel_id  =  t3.channel_id where t3.channel_details  =  \"15 ij\"",
    "pred": "SELECT Services.Service_Details FROM Services INNER JOIN Customer_Interactions ON Services.Service_ID = Customer_Interactions.Service_ID WHERE Channel_ID = '15 ij'",
    "exec_result": 0
  },
  {
    "idx": 382,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customer_interactions AS t2 ON t1.service_id  =  t2.service_id JOIN channels AS t3 ON t2.channel_id  =  t3.channel_id WHERE t3.channel_details  =  \"15 ij\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 383,
    "db_id": "government_shift",
    "question": "",
    "gold": "select t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id where t2.status_code  =  \"stuck\" and services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Customers.Customer_Details, Customers_and_Services.Service_Details, Channels.Channel_Details, Customer_Interactions.Status_Code, Integration_Platform.Integration_Platform_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Customer_Interactions ON Customers_and_Services.Customers_and_Services_ID = Customer_Interactions.Customers_and_Services_ID JOIN Channels ON Customer_Interactions.Channel_ID = Channels.Channel_ID JOIN Services ON Customers_and_Services.Service_ID = Services.Service_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Customer_Interactions.Status_Code = 'Stuck' AND Channels.Channel_Details = 'bad' AND Services.Service_Details = 'bad'",
    "exec_result": 0
  },
  {
    "idx": 384,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.status_code  =  \"Stuck\" AND services_and_channels_details  =  \"bad\"",
    "pred": "SELECT Customers.Customer_Details FROM Customers JOIN Customers_and_Services ON Customers.Customer_ID = Customers_and_Services.Customer_ID JOIN Customer_Interactions ON Customers_and_Services.Customer_ID = Customer_Interactions.Customer_ID JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Customer_Interactions.Status_Code = 'Stuck' AND Customer_Interactions.Services_and_Channels_Details = 'bad'",
    "exec_result": 0
  },
  {
    "idx": 385,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
    "pred": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details = 'Success'",
    "exec_result": 1
  },
  {
    "idx": 386,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT count(*) FROM integration_platform WHERE integration_platform_details  =  \"Success\"",
    "pred": "SELECT COUNT(*) FROM Integration_Platform WHERE Integration_Platform_Details = 'Success'",
    "exec_result": 1
  },
  {
    "idx": 387,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.customer_details from customers as t1 join customer_interactions as t2 on t1.customer_id  =  t2.customer_id join integration_platform as t3 where t3.integration_platform_details  =  \"fail\"",
    "pred": "SELECT Customers.Customer_Details FROM Customers INNER JOIN Integration_Platform ON Customers.Customer_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail'",
    "exec_result": 1
  },
  {
    "idx": 388,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.customer_details FROM customers AS t1 JOIN customer_interactions AS t2 ON t1.customer_id  =  t2.customer_id JOIN integration_platform AS t3 WHERE t3.integration_platform_details  =  \"Fail\"",
    "pred": "SELECT Customers.Customer_Details FROM Customers INNER JOIN Customer_Interactions ON Customers.Customer_ID = Customer_Interactions.Customer_ID INNER JOIN Integration_Platform ON Customer_Interactions.Customer_Interaction_ID = Integration_Platform.Customer_Interaction_ID WHERE Integration_Platform.Integration_Platform_Details = 'Fail'",
    "exec_result": 0
  },
  {
    "idx": 389,
    "db_id": "government_shift",
    "question": "",
    "gold": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
    "pred": "SELECT DISTINCT Services.Service_Details FROM Services LEFT JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Service_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 390,
    "db_id": "government_shift",
    "question": "",
    "gold": "select service_details from services except select t2.service_details from customers_and_services as t1 join services as t2 on t1.service_id  =  t2.service_id",
    "pred": "SELECT DISTINCT Services.Service_Details FROM Services LEFT JOIN Customers_and_Services ON Services.Service_ID = Customers_and_Services.Service_ID WHERE Customers_and_Services.Customer_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 391,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
    "pred": "SELECT Analytical_Layer_Type_Code, COUNT(*) FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 392,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT analytical_layer_type_code ,  count(*) FROM analytical_layer GROUP BY analytical_layer_type_code",
    "pred": "SELECT Analytical_Layer_Type_Code, COUNT(*) FROM Analytical_Layer GROUP BY Analytical_Layer_Type_Code",
    "exec_result": 1
  },
  {
    "idx": 393,
    "db_id": "government_shift",
    "question": "",
    "gold": "select distinct t1.service_details from services as t1 join customers_and_services as t2 on t1.service_id  =  t2.service_id where t2.customers_and_services_details  =  \"unsatisfied\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 394,
    "db_id": "government_shift",
    "question": "",
    "gold": "SELECT DISTINCT t1.service_details FROM services AS t1 JOIN customers_and_services AS t2 ON t1.service_id  =  t2.service_id WHERE t2.customers_and_services_details  =  \"Unsatisfied\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 395,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT count(*) FROM vehicles",
    "pred": "SELECT COUNT(*) FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 396,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT count(*) FROM vehicles",
    "pred": "SELECT COUNT(*) FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 397,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles ORDER BY model_year DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 398,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles ORDER BY model_year DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 399,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT DISTINCT type_of_powertrain FROM vehicles",
    "pred": "SELECT DISTINCT Type_of_powertrain FROM Vehicles",
    "exec_result": 1
  },
  {
    "idx": 400,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT DISTINCT type_of_powertrain FROM vehicles",
    "pred": "SELECT DISTINCT Type_of_powertrain FROM Vehicles",
    "exec_result": 1
  },
  {
    "idx": 401,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 402,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  type_of_powertrain ,  annual_fuel_cost FROM vehicles WHERE model_year  =  2013 OR model_year  =  2014",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 403,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 404,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2014 INTERSECT SELECT type_of_powertrain FROM vehicles WHERE model_year  =  2013",
    "pred": "SELECT DISTINCT Vehicles.Type_of_powertrain FROM Vehicles WHERE Vehicles.Model_year = 2013 OR Vehicles.Model_year = 2014",
    "exec_result": 0
  },
  {
    "idx": 405,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
    "pred": "SELECT Type_of_powertrain, COUNT(*) FROM Vehicles GROUP BY Type_of_powertrain",
    "exec_result": 1
  },
  {
    "idx": 406,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  count(*) FROM vehicles GROUP BY type_of_powertrain",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 407,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Type_of_powertrain, COUNT(*) FROM Vehicles GROUP BY Type_of_powertrain ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 408,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain FROM vehicles GROUP BY type_of_powertrain ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Type_of_powertrain, COUNT(*) AS Type_of_powertrain_Count FROM Vehicles GROUP BY Type_of_powertrain ORDER BY Type_of_powertrain_Count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 409,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
    "pred": "SELECT MIN(Annual_fuel_cost) AS Min_Annual_Fuel_Cost, MAX(Annual_fuel_cost) AS Max_Annual_Fuel_Cost, AVG(Annual_fuel_cost) AS Avg_Annual_Fuel_Cost FROM Vehicles;",
    "exec_result": 1
  },
  {
    "idx": 410,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT min(annual_fuel_cost) ,  max(annual_fuel_cost) ,  avg(annual_fuel_cost) FROM vehicles",
    "pred": "SELECT MIN(Annual_fuel_cost) AS min_cost, MAX(Annual_fuel_cost) AS max_cost, AVG(Annual_fuel_cost) AS avg_cost FROM Vehicles",
    "exec_result": 1
  },
  {
    "idx": 411,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 412,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  model_year FROM vehicles WHERE city_fuel_economy_rate  <=  highway_fuel_economy_rate",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 413,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 414,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT type_of_powertrain ,  avg(annual_fuel_cost) FROM vehicles GROUP BY type_of_powertrain HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 415,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age ,  membership_credit FROM customers",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 416,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age ,  membership_credit FROM customers",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 417,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 418,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name ,  age FROM customers ORDER BY membership_credit DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 419,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
    "pred": "SELECT AVG(Customers.age) FROM Customers WHERE Customers.membership_credit > (SELECT AVG(membership_credit) FROM Customers)",
    "exec_result": 1
  },
  {
    "idx": 420,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(age) FROM customers WHERE membership_credit  >  (SELECT avg(membership_credit) FROM customers)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 421,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT * FROM discount",
    "pred": "SELECT * FROM Discount",
    "exec_result": 1
  },
  {
    "idx": 422,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT * FROM discount",
    "pred": "SELECT * FROM Discount",
    "exec_result": 1
  },
  {
    "idx": 423,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 424,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T1.total_hours) FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 425,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
    "pred": "SELECT Vehicles.name FROM Vehicles WHERE NOT EXISTS ( SELECT 1 FROM Renting_history WHERE Renting_history.vehicles_id = Vehicles.id )",
    "exec_result": 1
  },
  {
    "idx": 426,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT name FROM vehicles WHERE id NOT IN (SELECT vehicles_id FROM renting_history)",
    "pred": "SELECT DISTINCT Vehicles.name FROM Vehicles LEFT JOIN Renting_history ON Vehicles.id = Renting_history.vehicles_id WHERE Renting_history.id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 427,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 428,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.id GROUP BY T2.id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 429,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 430,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.model_year FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 431,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 432,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T2.id ORDER BY sum(T1.total_hours) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 433,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT D.name, COUNT(*) FROM Discount AS D JOIN Renting_history AS R ON D.id = R.discount_id GROUP BY D.id ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 434,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name FROM renting_history AS T1 JOIN discount AS T2 ON T1.discount_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT D.name FROM Discount D JOIN Renting_history R ON D.id = R.discount_id GROUP BY D.id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 435,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 436,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT T2.name ,  T2.Type_of_powertrain FROM renting_history AS T1 JOIN vehicles AS T2 ON T1.vehicles_id  =  T2.id GROUP BY T1.vehicles_id HAVING sum(T1.total_hours)  >  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 437,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 438,
    "db_id": "vehicle_rent",
    "question": "",
    "gold": "SELECT avg(City_fuel_economy_rate) ,  avg(Highway_fuel_economy_rate) , Type_of_powertrain FROM vehicles GROUP BY Type_of_powertrain",
    "pred": "SELECT Type_of_powertrain, AVG(City_fuel_economy_rate) AS Avg_City_Fuel_Economy_Rate, AVG(Highway_fuel_economy_rate) AS Avg_Highway_Fuel_Economy_Rate FROM Vehicles GROUP BY Type_of_powertrain",
    "exec_result": 1
  },
  {
    "idx": 439,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT avg(amount_of_loan) FROM Student_Loans",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 440,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT avg(amount_of_loan) FROM Student_Loans",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 441,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 442,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  >=  2 UNION SELECT T1.bio_data ,  T1.student_id FROM Students AS T1 JOIN Detention AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  <  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 443,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 444,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE '%data%' EXCEPT SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.class_details LIKE 'net%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 445,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 446,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select bio_data from students where student_id not in (select t1.student_id from students as t1 join detention as t2 on t1.student_id  =  t2.student_id union select t1.student_id from students as t1 join student_loans as t2 on t1.student_id  =  t2.student_id)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 447,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 448,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT amount_of_loan ,  date_of_loan FROM Student_Loans WHERE student_id IN ( SELECT student_id FROM Achievements GROUP BY student_id HAVING count(*)  >=  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 449,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 450,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T1.teacher_id FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 451,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code",
    "pred": "SELECT DISTINCT Detention_Summary FROM Detention",
    "exec_result": 0
  },
  {
    "idx": 452,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT distinct(T1.detention_type_description) FROM Ref_Detention_Type AS T1 JOIN Detention AS T2 ON T1.detention_type_code  =  T2.detention_type_code",
    "pred": "SELECT DISTINCT Detention.detention_summary FROM Detention",
    "exec_result": 0
  },
  {
    "idx": 453,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 454,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT DISTINCT T1.student_details ,  T3.address_type_description FROM Students AS T1 JOIN Students_Addresses AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Address_Types AS T3 ON T2.address_type_code  =  T3.address_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 455,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 456,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_details ,  T3.bio_data FROM Addresses AS T1 JOIN Students_Addresses AS T2 ON T1.address_id  =  T2.address_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 457,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 458,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.date_of_transcript FROM Students AS T1 JOIN Transcripts AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 459,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 460,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) ,  behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 461,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 462,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) INTERSECT SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details HAVING count(*)  =  3 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 463,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 ) EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Behaviour_Monitoring AS T2 ON T1.student_id  =  T2.student_id WHERE T2.behaviour_monitoring_details NOT IN ( SELECT behaviour_monitoring_details FROM Behaviour_Monitoring GROUP BY behaviour_monitoring_details ORDER BY count(*) DESC LIMIT 1 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 464,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 ) except select t1.bio_data from students as t1 join behaviour_monitoring as t2 on t1.student_id  =  t2.student_id where t2.behaviour_monitoring_details not in ( select behaviour_monitoring_details from behaviour_monitoring group by behaviour_monitoring_details order by count(*) desc limit 1 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 465,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 466,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T2.event_date FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 467,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 468,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  T2.event_type_code ,  T3.event_type_description FROM Students AS T1 JOIN Student_Events AS T2 ON T1.student_id  =  T2.student_id JOIN Ref_Event_Types AS T3 ON T2.event_type_code  =  T3.event_type_code GROUP BY T2.event_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 469,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 470,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.achievement_details ,  T2.achievement_type_description FROM Achievements AS T1 JOIN Ref_Achievement_Type AS T2 ON T1.achievement_type_code  =  T2.achievement_type_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 471,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 472,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.teacher_id) FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.student_id NOT IN ( SELECT student_id FROM Achievements )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 473,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_transcript ,  transcript_details FROM Transcripts",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 474,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_transcript ,  transcript_details FROM Transcripts",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 475,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 476,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT achievement_type_code ,  achievement_details ,  date_achievement FROM Achievements",
    "pred": "SELECT Ref_Achievement_Type.achievement_type_code, Achievements.achievement_details, Achievements.date_achievement FROM Achievements JOIN Ref_Achievement_Type ON Achievements.achievement_type_code = Ref_Achievement_Type.achievement_type_code",
    "exec_result": 1
  },
  {
    "idx": 477,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 478,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start ,  datetime_detention_end FROM Detention",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 479,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 480,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT bio_data FROM Students WHERE student_details LIKE '%Suite%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 481,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 482,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details ,  T3.student_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Students AS T3 ON T2.student_id  =  T3.student_id",
    "pred": "SELECT T1.`teacher_details`, S.`student_details` FROM Teachers AS T1 INNER JOIN Classes AS C ON T1.`teacher_id` = C.`teacher_id` INNER JOIN Students AS S ON C.`student_id` = S.`student_id`;",
    "exec_result": 1
  },
  {
    "idx": 483,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(DISTINCT T2.class_id) AS max_courses, T1.teacher_id FROM Teachers AS T1 INNER JOIN Classes AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY max_courses DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 484,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  teacher_id FROM Classes GROUP BY teacher_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 485,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT COUNT(DISTINCT c.class_id) AS max_courses, s.student_id FROM Classes c JOIN Students s ON c.student_id = s.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT c.class_id) = ( SELECT MAX(cnt) FROM ( SELECT COUNT(DISTINCT class_id) AS cnt FROM Classes GROUP BY student_id ) subquery );",
    "exec_result": 0
  },
  {
    "idx": 486,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(*) ,  student_id FROM Classes GROUP BY student_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 487,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 488,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.student_details FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 489,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Detention_Type_Code, Detention_Type_Description FROM Ref_Detention_Type WHERE Detention_Type_Code IN (SELECT Detention_Type_Code FROM Detention GROUP BY Detention_Type_Code HAVING COUNT(*) = 1)",
    "exec_result": 1
  },
  {
    "idx": 490,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Detention_Type_Code, Detention_Type_Description FROM Ref_Detention_Type WHERE Detention_Type_Code IN (SELECT Detention_Type_Code FROM Detention GROUP BY Detention_Type_Code HAVING COUNT(*) = 1)",
    "exec_result": 1
  },
  {
    "idx": 491,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 492,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data ,  T1.student_details FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id WHERE T2.amount_of_loan  >  ( SELECT avg(amount_of_loan) FROM Student_Loans )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 493,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1",
    "pred": "SELECT MIN(date_of_loan) FROM Student_Loans",
    "exec_result": 1
  },
  {
    "idx": 494,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_of_loan FROM Student_Loans ORDER BY date_of_loan ASC LIMIT 1",
    "pred": "SELECT MIN(date_of_loan) FROM Student_Loans",
    "exec_result": 1
  },
  {
    "idx": 495,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 496,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 497,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 498,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.date_of_transcript FROM Transcripts AS T1 JOIN Student_Loans AS T2 ON T1.student_id  =  T2.student_id ORDER BY T2.amount_of_loan DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 499,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 500,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.teacher_details FROM Teachers AS T1 JOIN Classes AS T2 ON T1.teacher_id  =  T2.teacher_id JOIN Transcripts AS T3 ON T2.student_id  =  T3.student_id ORDER BY T3.date_of_transcript ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 501,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "select student_id ,  sum(amount_of_loan) from student_loans group by student_id",
    "pred": "SELECT Student_Loans.student_id, SUM(Student_Loans.amount_of_loan) AS TotalLoan FROM Student_Loans GROUP BY Student_Loans.student_id;",
    "exec_result": 1
  },
  {
    "idx": 502,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT student_id ,  sum(amount_of_loan) FROM Student_Loans GROUP BY student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 503,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 504,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.student_id ,  T1.bio_data ,  count(*) FROM Students AS T1 JOIN Classes AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 505,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) FROM Detention",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 506,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT count(DISTINCT student_id) FROM Detention",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 507,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Ref_Address_Types.address_type_code, Ref_Address_Types.address_type_description FROM Ref_Address_Types JOIN (SELECT address_type_code FROM Students_Addresses GROUP BY address_type_code ORDER BY COUNT(*) DESC LIMIT 1) AS T ON Ref_Address_Types.address_type_code = T.address_type_code",
    "exec_result": 1
  },
  {
    "idx": 508,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.address_type_code ,  T2.address_type_description FROM Students_Addresses AS T1 JOIN Ref_Address_Types AS T2 WHERE T1.address_type_code  =  T2.address_type_code GROUP BY T1.address_type_code ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Ref_Address_Types.address_type_code, Ref_Address_Types.address_type_description FROM Ref_Address_Types GROUP BY Ref_Address_Types.address_type_code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 509,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 510,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT T1.bio_data FROM Students AS T1 JOIN Student_Events AS T2 WHERE T1.student_id  =  T2.student_id EXCEPT SELECT T1.bio_data FROM Students AS T1 JOIN Student_Loans AS T2 WHERE T1.student_id  =  T2.student_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 511,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 512,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT date_from ,  date_to FROM Students_Addresses WHERE student_id IN ( SELECT student_id FROM Transcripts GROUP BY student_id HAVING count(*)  =  2 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 513,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start FROM Detention",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 514,
    "db_id": "cre_Students_Information_Systems",
    "question": "",
    "gold": "SELECT datetime_detention_start FROM Detention",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 515,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Author",
    "pred": "SELECT DISTINCT Author FROM Author_Book",
    "exec_result": 0
  },
  {
    "idx": 516,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Author",
    "pred": "SELECT Name FROM Author",
    "exec_result": 1
  },
  {
    "idx": 517,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 518,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 519,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title ,  isbn ,  SalePrice FROM Book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 520,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title ,  isbn ,  SalePrice FROM Book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 521,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book",
    "pred": "SELECT COUNT(*) FROM Book",
    "exec_result": 1
  },
  {
    "idx": 522,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book",
    "pred": "SELECT COUNT(*) FROM Book",
    "exec_result": 1
  },
  {
    "idx": 523,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT COUNT(DISTINCT Author) FROM Book;",
    "exec_result": 1
  },
  {
    "idx": 524,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT COUNT(DISTINCT Author) FROM Book;",
    "exec_result": 1
  },
  {
    "idx": 525,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Client",
    "pred": "SELECT COUNT(*) FROM Client;",
    "exec_result": 1
  },
  {
    "idx": 526,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Client",
    "pred": "SELECT COUNT(*) FROM Client;",
    "exec_result": 1
  },
  {
    "idx": 527,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client ORDER BY name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 528,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name ,  address FROM Client ORDER BY name",
    "pred": "SELECT Name, Address FROM Client ORDER BY Name",
    "exec_result": 1
  },
  {
    "idx": 529,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn",
    "pred": "SELECT Book.Title, Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor",
    "exec_result": 1
  },
  {
    "idx": 530,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.title ,  T1.name FROM Author AS T1 JOIN Author_Book AS T2 ON T2.Author  =  T1.idAuthor JOIN Book AS T3 ON T2.isbn  =  T3.isbn",
    "pred": "SELECT Book.Title, Author.Name FROM Book JOIN Author_Book ON Book.ISBN = Author_Book.ISBN JOIN Author ON Author_Book.Author = Author.idAuthor",
    "exec_result": 1
  },
  {
    "idx": 531,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT Orders.IdOrder, Client.Name FROM Orders INNER JOIN Client ON Orders.IdClient = Client.IdClient",
    "exec_result": 1
  },
  {
    "idx": 532,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.idOrder ,  T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT Orders.IdOrder, Clients.Name FROM Orders INNER JOIN Clients ON Orders.IdClient = Clients.IdClient;",
    "exec_result": 0
  },
  {
    "idx": 533,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 534,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_Book AS T2 ON T1.idAuthor  =  T2.Author GROUP BY T1.idAuthor",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 535,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT Book.ISBN, COUNT(Books_Order.IdOrder) FROM Book LEFT JOIN Books_Order ON Book.ISBN = Books_Order.ISBN GROUP BY Book.ISBN",
    "exec_result": 0
  },
  {
    "idx": 536,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  count(*) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT B.ISBN, SUM(BO.amount) FROM Books_Order AS BO JOIN Book AS B ON BO.ISBN = B.ISBN GROUP BY B.ISBN",
    "exec_result": 0
  },
  {
    "idx": 537,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 538,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT isbn ,  sum(amount) FROM Books_Order GROUP BY isbn",
    "pred": "SELECT ISBN, SUM(amount) AS TotalAmount FROM Books_Order GROUP BY ISBN",
    "exec_result": 1
  },
  {
    "idx": 539,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT b.Title FROM Book b INNER JOIN (SELECT b.ISBN, COUNT(*) as cnt FROM Books_Order bo INNER JOIN Book b ON b.ISBN = bo.ISBN GROUP BY b.ISBN) t ON b.ISBN = t.ISBN ORDER BY t.cnt DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 540,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title FROM Books_Order AS T1 JOIN Book AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT b.Title FROM Book b JOIN Books_Order bo ON b.ISBN = bo.ISBN GROUP BY b.Title ORDER BY COUNT(bo.amount) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 541,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 542,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.title ,  T2.PurchasePrice FROM Books_Order AS T1 JOIN BOOk AS T2 ON T1.isbn  =  T2.isbn GROUP BY T1.isbn ORDER BY sum(amount) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 543,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 544,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT DISTINCT T1.Title FROM Book AS T1 INNER JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN INNER JOIN Orders AS T3 ON T2.IdOrder = T3.IdOrder",
    "exec_result": 1
  },
  {
    "idx": 545,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT C.Name FROM Client AS C JOIN Orders AS O ON C.IdClient = O.IdClient",
    "exec_result": 1
  },
  {
    "idx": 546,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "SELECT DISTINCT Name FROM Client WHERE IdClient IN (SELECT DISTINCT IdClient FROM Orders)",
    "exec_result": 0
  },
  {
    "idx": 547,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 548,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  count(*) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 549,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Client.Name FROM Client JOIN Orders ON Client.IdClient = Orders.IdClient GROUP BY Client.IdClient ORDER BY COUNT(*) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 550,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient GROUP BY T1.idClient ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT C.Name FROM Client C JOIN Orders O ON C.IdClient = O.IdClient GROUP BY C.IdClient ORDER BY COUNT(O.IdOrder) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 551,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 552,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name ,  sum(T3.amount) FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 553,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 554,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.name FROM Orders AS T1 JOIN Client AS T2 ON T1.idClient  =  T2.idClient JOIN Books_Order AS T3 ON T3.idOrder  =  T1.idOrder GROUP BY T1.idClient ORDER BY sum(T3.amount) DESC LIMIT 1",
    "pred": "SELECT C.Name FROM Client C JOIN Books_Order BO ON C.IdClient = BO.IdOrder GROUP BY C.IdClient ORDER BY SUM(BO.amount) DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 555,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT T1.Title FROM Book AS T1 LEFT JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.ISBN IS NULL",
    "exec_result": 1
  },
  {
    "idx": 556,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book EXCEPT SELECT T1.title FROM book AS T1 JOIN books_order AS T2 ON T1.isbn  =  T2.isbn",
    "pred": "SELECT T1.Title FROM Book AS T1 LEFT JOIN Books_Order AS T2 ON T1.ISBN = T2.ISBN WHERE T2.ISBN IS NULL",
    "exec_result": 1
  },
  {
    "idx": 557,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 558,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT name FROM Client EXCEPT SELECT T1.name FROM Client AS T1 JOIN Orders AS T2 ON T1.idClient  =  T2.idClient",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 559,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice) ,  min(saleprice) FROM Book",
    "pred": "SELECT MAX(SalePrice) AS max_sale_price, MIN(SalePrice) AS min_sale_price FROM Book",
    "exec_result": 1
  },
  {
    "idx": 560,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice) ,  min(saleprice) FROM Book",
    "pred": "SELECT MAX(SalePrice) AS MaxSalePrice, MIN(SalePrice) AS MinSalePrice FROM Book",
    "exec_result": 1
  },
  {
    "idx": 561,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book",
    "pred": "SELECT AVG(PurchasePrice) AS AveragePurchasePrice, AVG(SalePrice) AS AverageSalePrice FROM Book",
    "exec_result": 1
  },
  {
    "idx": 562,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(purchaseprice) ,  avg(saleprice) FROM Book",
    "pred": "SELECT AVG(PurchasePrice) AS AveragePurchasePrice, AVG(SalePrice) AS AverageSalePrice FROM Book",
    "exec_result": 1
  },
  {
    "idx": 563,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice - purchaseprice) FROM Book",
    "pred": "SELECT MAX(SalePrice) - MIN(PurchasePrice) FROM Book",
    "exec_result": 0
  },
  {
    "idx": 564,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT max(saleprice - purchaseprice) FROM Book",
    "pred": "SELECT MAX(SalePrice) - MIN(PurchasePrice) FROM Book",
    "exec_result": 0
  },
  {
    "idx": 565,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 566,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT title FROM book WHERE saleprice  >  (SELECT avg(saleprice) FROM book)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 567,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by saleprice asc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 568,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by saleprice asc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 569,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by purchaseprice  desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 570,
    "db_id": "book_1",
    "question": "",
    "gold": "select title from book order by purchaseprice  desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 571,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"",
    "pred": "SELECT AVG(B.SalePrice) FROM Book B JOIN Author_Book AB ON B.ISBN = AB.ISBN JOIN Author A ON A.idAuthor = AB.Author WHERE A.Name = 'George Orwell'",
    "exec_result": 1
  },
  {
    "idx": 572,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT avg(saleprice) FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 573,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"",
    "pred": "SELECT SalePrice FROM Book WHERE Author = (SELECT idAuthor FROM Author WHERE Name = 'Plato')",
    "exec_result": 0
  },
  {
    "idx": 574,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT saleprice FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\"",
    "pred": "SELECT SalePrice FROM Book WHERE Author = (SELECT idAuthor FROM Author WHERE Name = 'Plato')",
    "exec_result": 0
  },
  {
    "idx": 575,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1",
    "pred": "SELECT Title FROM Book WHERE Author = (SELECT idAuthor FROM Author WHERE Name = 'George Orwell') ORDER BY SalePrice ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 576,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"George Orwell\" ORDER BY T1.saleprice LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 577,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 578,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name  =  \"Plato\" AND T1.saleprice  <  (SELECT avg(saleprice) FROM Book)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 579,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT Author FROM Book WHERE Title = 'Pride and Prejudice'",
    "exec_result": 0
  },
  {
    "idx": 580,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT Author FROM Author_Book WHERE Author = (SELECT Author FROM Book WHERE Title = 'Pride and Prejudice')",
    "exec_result": 0
  },
  {
    "idx": 581,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 582,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T1.title FROM Book AS T1 JOIN Author_book AS T2 ON T1.isbn  =  T2.isbn JOIN Author AS T3 ON T2.Author  =  T3.idAuthor WHERE T3.name LIKE \"%Plato%\"",
    "pred": "SELECT Title FROM Book WHERE Author IN (SELECT idAuthor FROM Author WHERE Name LIKE '%Plato%')",
    "exec_result": 0
  },
  {
    "idx": 583,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT COUNT(*) FROM Books_Order WHERE ISBN IN (SELECT ISBN FROM Book WHERE Title = 'Pride and Prejudice')",
    "exec_result": 1
  },
  {
    "idx": 584,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT count(*) FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 585,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"",
    "pred": "SELECT DISTINCT Orders.IdOrder FROM Orders INNER JOIN Books_Order ON Orders.IdOrder = Books_Order.IdOrder INNER JOIN Book ON Books_Order.ISBN = Book.ISBN WHERE Book.Title IN ('Pride and Prejudice', 'The Little Prince')",
    "exec_result": 0
  },
  {
    "idx": 586,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"Pride and Prejudice\" INTERSECT SELECT idOrder FROM Book AS T1 JOIN Books_Order AS T2 ON T1.isbn  =  T2.isbn WHERE T1.title  =  \"The Little Prince\"",
    "pred": "SELECT DISTINCT T1.IdOrder FROM Books_Order AS T1 JOIN Book AS T2 ON T1.ISBN = T2.ISBN JOIN Author_Book AS T3 ON T2.Author = T3.Author WHERE T2.Title = 'Pride and Prejudice' OR T2.Title = 'The Little Prince';",
    "exec_result": 0
  },
  {
    "idx": 587,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT DISTINCT `Books_Order`.ISBN FROM `Books_Order` AS BO INNER JOIN Orders AS O ON BO.IdOrder = O.IdOrder INNER JOIN Client AS C ON O.IdClient = C.IdClient WHERE C.Name = 'Peter Doe' OR C.Name = 'James Smith'",
    "exec_result": 0
  },
  {
    "idx": 588,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"Peter Doe\" INTERSECT SELECT T2.isbn FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT DISTINCT B.ISBN FROM Books_Order AS BO INNER JOIN Orders AS O ON BO.IdOrder = O.IdOrder INNER JOIN Client AS C ON O.IdClient = C.IdClient WHERE C.Name = 'Peter Doe' OR C.Name = 'James Smith'",
    "exec_result": 0
  },
  {
    "idx": 589,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT B.Title FROM Book B JOIN Books_Order BO ON B.ISBN = BO.ISBN JOIN Orders O ON BO.IdOrder = O.IdOrder WHERE O.IdClient = (SELECT IdClient FROM Client WHERE Name = 'Peter Doe') AND O.IdClient <> (SELECT IdClient FROM Client WHERE Name = 'James Smith')",
    "exec_result": 0
  },
  {
    "idx": 590,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"Peter Doe\" EXCEPT SELECT T4.title FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN book AS T4 ON T2.ISBN  =  T4.isbn WHERE T3.name  =  \"James Smith\"",
    "pred": "SELECT B.Title FROM Book B JOIN Books_Order BO ON B.ISBN = BO.ISBN JOIN Orders O ON BO.IdOrder = O.IdOrder WHERE O.IdClient = (SELECT IdClient FROM Client WHERE Name = 'Peter Doe') AND O.IdClient <> (SELECT IdClient FROM Client WHERE Name = 'James Smith')",
    "exec_result": 0
  },
  {
    "idx": 591,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 592,
    "db_id": "book_1",
    "question": "",
    "gold": "SELECT T3.name FROM Orders AS T1 JOIN Books_Order AS T2 ON T1.idOrder  =  T2.idOrder JOIN Client AS T3 ON T1.idClient  =  T3.idClient JOIN Book AS T4 ON T4.isbn  =  T2.isbn WHERE T4.title  =  \"Pride and Prejudice\"",
    "pred": "SELECT DISTINCT C.Name FROM Client AS C INNER JOIN Books_Order AS B ON C.IdClient = B.IdOrder INNER JOIN Book AS BO ON B.ISBN = BO.ISBN INNER JOIN Author_Book AS A ON BO.ISBN = A.ISBN INNER JOIN Author AS AU ON AU.idAuthor = A.Author WHERE AU.Name = 'Jane Austen' AND BO.Title = 'Pride and Prejudice'",
    "exec_result": 0
  },
  {
    "idx": 593,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(*) FROM book",
    "pred": "SELECT COUNT(*) FROM book",
    "exec_result": 1
  },
  {
    "idx": 594,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book ORDER BY Title ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 595,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book ORDER BY Pages DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 596,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  Release FROM book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 597,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT max(Chapters) ,  min(Chapters) FROM book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 598,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT Title FROM book WHERE TYPE != \"Poet\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 599,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT avg(Rating) FROM review",
    "pred": "SELECT AVG(Rating) FROM review",
    "exec_result": 1
  },
  {
    "idx": 600,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 601,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T2.Rating FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Chapters DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 602,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T2.Rank FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T1.Pages ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 603,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rank LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 604,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT avg(T2.Readers_in_Million) FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T1.Type  =  \"Novel\"",
    "pred": "SELECT AVG(review.Readers_in_Million) FROM review JOIN book ON review.Book_ID = book.Book_ID WHERE book.Type = 'Novel';",
    "exec_result": 1
  },
  {
    "idx": 605,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  COUNT(*) FROM book GROUP BY TYPE",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 606,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Type, COUNT(*) FROM book GROUP BY Type ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 607,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book GROUP BY TYPE HAVING COUNT(*)  >=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 608,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Rating ASC",
    "pred": "SELECT Title FROM book ORDER BY (SELECT Rating FROM review WHERE book.Book_ID = review.Book_ID) DESC",
    "exec_result": 0
  },
  {
    "idx": 609,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT T1.Title ,  T1.audio FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Readers_in_Million DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 610,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)",
    "pred": "SELECT COUNT(*) FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM review)",
    "exec_result": 1
  },
  {
    "idx": 611,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE FROM book WHERE Chapters  >  75 INTERSECT SELECT TYPE FROM book WHERE Chapters  <  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 612,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT count(DISTINCT TYPE) FROM book",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 613,
    "db_id": "book_review",
    "question": "",
    "gold": "SELECT TYPE ,  title FROM book EXCEPT SELECT T1.type ,  T1.title FROM book AS T1 JOIN review AS T2 ON T1.Book_ID  =  T2.Book_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 614,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT count(*) FROM customer",
    "pred": "SELECT COUNT(*) FROM customer;",
    "exec_result": 1
  },
  {
    "idx": 615,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT count(*) FROM customer",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 616,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 617,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer ORDER BY Level_of_Membership ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 618,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  Card_Credit FROM customer",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 619,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  Card_Credit FROM customer",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 620,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 621,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Name FROM customer WHERE Nationality  =  \"England\" OR Nationality  =  \"Australia\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 622,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 623,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT avg(Card_Credit) FROM customer WHERE Level_of_Membership  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 624,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 625,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Card_Credit FROM customer ORDER BY Level_of_Membership DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 626,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 627,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM customer GROUP BY Nationality",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 628,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) AS Frequency FROM customer GROUP BY Nationality ORDER BY Frequency DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 629,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 630,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 631,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT Nationality FROM customer WHERE Card_Credit  <  50 INTERSECT SELECT Nationality FROM customer WHERE Card_Credit  >  75",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 632,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID",
    "pred": "SELECT customer.Name, customer_order.Dish_Name FROM customer JOIN customer_order ON customer.Customer_ID = customer_order.Customer_ID",
    "exec_result": 1
  },
  {
    "idx": 633,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID",
    "pred": "SELECT c.Name, do.Dish_Name FROM customer AS c JOIN customer_order AS do ON c.Customer_ID = do.Customer_ID",
    "exec_result": 1
  },
  {
    "idx": 634,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 635,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  T2.Dish_Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID ORDER BY T2.Quantity DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 636,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name ,  sum(T2.Quantity) FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 637,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "select t1.name ,  sum(t2.quantity) from customer as t1 join customer_order as t2 on t1.customer_id  =  t2.customer_id group by t1.name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 638,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 639,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT T1.Name FROM customer AS T1 JOIN customer_order AS T2 ON T1.Customer_ID  =  T2.Customer_ID GROUP BY T1.Name HAVING sum(T2.Quantity)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 640,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT DISTINCT Manager FROM branch",
    "pred": "SELECT DISTINCT Manager FROM branch",
    "exec_result": 1
  },
  {
    "idx": 641,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT DISTINCT Manager FROM branch",
    "pred": "SELECT DISTINCT Manager FROM branch",
    "exec_result": 1
  },
  {
    "idx": 642,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 643,
    "db_id": "restaurant_bills",
    "question": "",
    "gold": "SELECT name FROM customer WHERE Customer_ID NOT IN (SELECT Customer_ID FROM customer_order)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 644,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT count(*) FROM member",
    "pred": "SELECT COUNT(*) FROM member",
    "exec_result": 1
  },
  {
    "idx": 645,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member ORDER BY Age ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 646,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name ,  Nationality FROM member",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 647,
    "db_id": "club_leader",
    "question": "",
    "gold": "select name from member where nationality != \"england\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 648,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member WHERE Age  =  19 OR Age  =  20",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 649,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member ORDER BY Age DESC LIMIT 1",
    "pred": "SELECT Name FROM member WHERE Age = (SELECT MAX(Age) FROM member)",
    "exec_result": 1
  },
  {
    "idx": 650,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality",
    "pred": "SELECT Nationality, COUNT(*) FROM member GROUP BY Nationality",
    "exec_result": 1
  },
  {
    "idx": 651,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality ,  COUNT(*) FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Nationality, COUNT(*) FROM member GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 652,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality FROM member GROUP BY Nationality HAVING COUNT(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 653,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 654,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Overall_Ranking  <  100",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 655,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name ,  T2.Club_Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T1.Year_Join  <  2018",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 656,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT T3.Name FROM club_leader AS T1 JOIN club AS T2 ON T1.Club_ID  =  T2.Club_ID JOIN member AS T3 ON T1.Member_ID  =  T3.Member_ID WHERE T2.Club_Name  =  \"Houston\"",
    "pred": "SELECT T2.`Team_Leader` FROM club AS T1 INNER JOIN club_leader AS T2 ON T1.`Club_ID` = T2.`Club_ID` WHERE T1.`Club_Name` = 'Houston'",
    "exec_result": 0
  },
  {
    "idx": 657,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM club_leader)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 658,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT Nationality FROM member WHERE Age  >  22 INTERSECT SELECT Nationality FROM member WHERE Age  <  19",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 659,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM club_leader AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id",
    "pred": "SELECT AVG(Age) FROM member WHERE Member_ID IN (SELECT Member_ID FROM club_leader)",
    "exec_result": 1
  },
  {
    "idx": 660,
    "db_id": "club_leader",
    "question": "",
    "gold": "SELECT club_name FROM club WHERE club_name LIKE '%state%'",
    "pred": "SELECT Club_Name FROM club WHERE Club_Name LIKE '%state%'",
    "exec_result": 1
  },
  {
    "idx": 661,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Subset_Name FROM Collection_Subsets;",
    "pred": "SELECT DISTINCT T2.Collection_Subset_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subsets AS T2 ON T1.Collection_Subset_ID = T2.Collection_Subset_ID",
    "exec_result": 0
  },
  {
    "idx": 662,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Subset_Name FROM Collection_Subsets;",
    "pred": "SELECT Collection_Subset_Name FROM Collection_Subsets",
    "exec_result": 1
  },
  {
    "idx": 663,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";",
    "pred": "SELECT Collection_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = 'Top collection'",
    "exec_result": 0
  },
  {
    "idx": 664,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collecrtion_Subset_Details FROM Collection_Subsets WHERE Collection_Subset_Name = \"Top collection\";",
    "pred": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Top collection'",
    "exec_result": 0
  },
  {
    "idx": 665,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Name FROM Document_Subsets;",
    "pred": "SELECT Document_Subset_Name FROM Document_Subsets",
    "exec_result": 1
  },
  {
    "idx": 666,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Name FROM Document_Subsets;",
    "pred": "SELECT Document_Subset_Name FROM Document_Subsets",
    "exec_result": 1
  },
  {
    "idx": 667,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 668,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Subset_Details FROM Document_Subsets WHERE Document_Subset_Name = \"Best for 2000\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 669,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects;",
    "pred": "SELECT Document_Object_ID FROM Collection_Subset_Members JOIN Document_Objects ON Collection_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID;",
    "exec_result": 0
  },
  {
    "idx": 670,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects;",
    "pred": "SELECT Document_Object_ID FROM Document_Objects",
    "exec_result": 1
  },
  {
    "idx": 671,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin'",
    "exec_result": 0
  },
  {
    "idx": 672,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Parent_Document_Object_ID FROM Document_Objects WHERE OWNER  =  'Marlin'",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Marlin'",
    "exec_result": 0
  },
  {
    "idx": 673,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'",
    "pred": "SELECT Owner FROM Document_Objects WHERE Description = 'Braeden Collection'",
    "exec_result": 1
  },
  {
    "idx": 674,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT OWNER FROM Document_Objects WHERE Description  =  'Braeden Collection'",
    "pred": "SELECT DISTINCT Document_Objects.Owner FROM Document_Objects INNER JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID INNER JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID WHERE Collections.Collection_Name = 'Braeden Collection'",
    "exec_result": 0
  },
  {
    "idx": 675,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'",
    "pred": "SELECT `Owner` FROM Document_Objects WHERE `Document_Object_ID` = (SELECT `Document_Object_ID` FROM Documents_in_Collections WHERE `Collection_ID` = (SELECT `Collection_ID` FROM Collections WHERE `Owner` = 'Marlin'))",
    "exec_result": 0
  },
  {
    "idx": 676,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Owner FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID WHERE T1.Owner  =  'Marlin'",
    "pred": "SELECT DISTINCT Owner FROM Document_Objects WHERE Owner = 'Marlin'",
    "exec_result": 0
  },
  {
    "idx": 677,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 678,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Description FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID",
    "pred": "SELECT DISTINCT Description FROM Document_Objects WHERE Parent_Document_Object_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 679,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 680,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Document_Objects WHERE OWNER = \"Marlin\";",
    "pred": "SELECT COUNT(*) FROM Document_Objects WHERE Owner = 'Marlin'",
    "exec_result": 1
  },
  {
    "idx": 681,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 682,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID FROM Document_Objects EXCEPT SELECT Parent_Document_Object_ID FROM Document_Objects",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Parent_Document_Object_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 683,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 684,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 685,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 686,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections;",
    "pred": "SELECT Collection_Name FROM Collections",
    "exec_result": 1
  },
  {
    "idx": 687,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";",
    "pred": "SELECT Collection_Description FROM Collections WHERE Collection_Name = 'Best'",
    "exec_result": 1
  },
  {
    "idx": 688,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Description FROM Collections WHERE Collection_Name = \"Best\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 689,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";",
    "pred": "SELECT Parent_Collection_ID FROM Collections WHERE Collection_Name = 'Nice'",
    "exec_result": 0
  },
  {
    "idx": 690,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Nice\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 691,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 692,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Collection_Name FROM Collections EXCEPT SELECT T2.Collection_Name FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID;",
    "pred": "SELECT DISTINCT C.Collection_Name FROM Collections C WHERE NOT EXISTS ( SELECT 1 FROM Collections C2 WHERE C2.Parent_Collection_ID = C.Collection_ID )",
    "exec_result": 1
  },
  {
    "idx": 693,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 694,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID HAVING count(*)  >  1;",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Parent_Document_Object_ID IS NOT NULL GROUP BY Document_Object_ID HAVING COUNT(*) > 1",
    "exec_result": 0
  },
  {
    "idx": 695,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 696,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Collections AS T2 ON T1.Parent_Collection_ID = T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Collections WHERE Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 697,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Ransom'",
    "exec_result": 0
  },
  {
    "idx": 698,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_object_id from document_subset_members as t1 join document_objects as t2 on t1.document_object_id  =  t2.document_object_id where t2.owner  =  'ransom'",
    "pred": "SELECT Document_Object_ID FROM Document_Objects WHERE Owner = 'Ransom'",
    "exec_result": 0
  },
  {
    "idx": 699,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 700,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Collection_Subset_ID ,  T1.Collection_Subset_Name ,  count(*) FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID GROUP BY T2.Collection_Subset_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 701,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 702,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID ,  count(*) FROM Document_Objects AS T1 JOIN Document_Objects AS T2 ON T1.Parent_Document_Object_ID = T2.Document_Object_ID GROUP BY T2.Document_Object_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 703,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID ORDER BY count(*) ASC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 704,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select document_object_id , count(*) from document_subset_members group by document_object_id order by count(*) asc limit 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 705,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select document_object_id , count(*) from document_subset_members group by document_object_id having count(*) between 2 and 4;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 706,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT Document_Object_ID , count(*) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING count(*) BETWEEN 2 AND 4;",
    "pred": "SELECT Document_Object_ID, COUNT(Related_Document_Object_ID) FROM Document_Subset_Members GROUP BY Document_Object_ID HAVING COUNT(Related_Document_Object_ID) BETWEEN 2 AND 4",
    "exec_result": 1
  },
  {
    "idx": 707,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 708,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT OWNER FROM Document_Subset_Members AS T1 JOIN Document_Objects AS T2 ON T1.Related_Document_Object_ID  =  T2.Document_Object_ID WHERE T2.Owner  =  'Braeden';",
    "pred": "SELECT DISTINCT Document_Objects.Owner FROM Document_Objects INNER JOIN Documents_in_Collections ON Document_Objects.Document_Object_ID = Documents_in_Collections.Document_Object_ID INNER JOIN Collections ON Documents_in_Collections.Collection_ID = Collections.Collection_ID INNER JOIN Collection_Subset_Members ON Collections.Collection_ID = Collection_Subset_Members.Related_Collection_ID INNER JOIN Document_Subset_Members ON Collection_Subset_Members.Related_Collection_ID = Document_Subset_Members.Related_Document_Object_ID INNER JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID WHERE Document_Objects.Owner = 'Braeden'",
    "exec_result": 0
  },
  {
    "idx": 709,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'",
    "pred": "SELECT Document_Subset_Name FROM Document_Subsets ds INNER JOIN Document_Subset_Members ds_members ON ds.Document_Subset_ID = ds_members.Document_Subset_ID INNER JOIN Document_Objects do ON ds_members.Related_Document_Object_ID = do.Document_Object_ID INNER JOIN Collections c ON do.Owner = c.Collection_Name WHERE c.Collection_Name = 'Braeden'",
    "exec_result": 0
  },
  {
    "idx": 710,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Subset_Name FROM Document_Subsets AS T1 JOIN Document_Subset_Members AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Document_Objects AS T3 ON T2.Document_Object_ID  =  T3.Document_Object_ID WHERE T3.owner  =  'Braeden'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 711,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 712,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Document_Subset_ID ,  T2.Document_Subset_Name , count(DISTINCT T1.Document_Object_ID) FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID GROUP BY T1.Document_Subset_ID;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 713,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 714,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.document_subset_id ,  t2.document_subset_name , count(distinct t1.document_object_id) from document_subset_members as t1 join document_subsets as t2 on t1.document_subset_id =  t2.document_subset_id group by t1.document_subset_id order by count(*) desc limit 1;",
    "pred": "SELECT Document_Subset_ID, Document_Subset_Name, COUNT(Document_Object_ID) AS NumOfDocs FROM Document_Subset_Members INNER JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID GROUP BY Document_Subset_ID, Document_Subset_Name ORDER BY NumOfDocs DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 715,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 716,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID WHERE T2.Document_Subset_Name = \"Best for 2000\";",
    "pred": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000')",
    "exec_result": 1
  },
  {
    "idx": 717,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T3.Document_Subset_Name ,  T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subset_Members  AS T2 ON T1.Related_Document_Object_ID = T2.Document_Object_ID JOIN Document_Subsets AS T3 ON T2.Document_Subset_ID =  T3.Document_Subset_ID",
    "pred": "SELECT Document_Subset_Name, Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID;",
    "exec_result": 0
  },
  {
    "idx": 718,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select distinct t3.document_subset_name ,  t1.document_object_id from document_subset_members as t1 join document_subset_members  as t2 on t1.related_document_object_id = t2.document_object_id join document_subsets as t3 on t2.document_subset_id =  t3.document_subset_id",
    "pred": "SELECT Document_Subset_Name, Document_Subset_ID, Document_Object_ID FROM Document_Subset_Members JOIN Document_Subsets ON Document_Subset_Members.Document_Subset_ID = Document_Subsets.Document_Subset_ID JOIN Document_Objects ON Document_Subset_Members.Document_Object_ID = Document_Objects.Document_Object_ID;",
    "exec_result": 0
  },
  {
    "idx": 719,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "select t1.collection_name from collections as t1 join documents_in_collections as t2 on t1.collection_id = t2.collection_id join document_objects as t3 on t2.document_object_id  =  t3.document_object_id where t3.owner  =  'ransom'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 720,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID JOIN Document_Objects AS T3 ON T2.Document_object_id  =  T3.Document_object_id WHERE T3.owner  =  'Ransom'",
    "pred": "SELECT C.Collection_Name FROM Collections C INNER JOIN Documents_in_Collections DC ON C.Collection_ID = DC.Collection_ID INNER JOIN Document_Objects DO ON DC.Document_Object_ID = DO.Document_Object_ID WHERE DO.Owner = 'Ransom'",
    "exec_result": 1
  },
  {
    "idx": 721,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID",
    "pred": "SELECT Document_Object_ID, COUNT(Collection_ID) AS NumCollections FROM Documents_in_Collections GROUP BY Document_Object_ID",
    "exec_result": 1
  },
  {
    "idx": 722,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) ,  T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID GROUP BY T2.Document_Object_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 723,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Document_Objects DO INNER JOIN Documents_in_Collections DSC ON DO.Document_Object_ID = DSC.Document_Object_ID INNER JOIN Collections COL ON DSC.Collection_ID = COL.Collection_ID WHERE COL.Collection_Name = 'Best'",
    "exec_result": 1
  },
  {
    "idx": 724,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Document_Objects DO INNER JOIN Documents_in_Collections DC ON DO.Document_Object_ID = DC.Document_Object_ID INNER JOIN Collections COL ON DC.Collection_ID = COL.Collection_ID WHERE COL.Collection_Name = 'Best'",
    "exec_result": 1
  },
  {
    "idx": 725,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 1
  },
  {
    "idx": 726,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 727,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 728,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT T1.Collection_Name ,  T1.Collection_ID ,  count(*) FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" GROUP BY T1.Collection_ID ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 729,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";",
    "pred": "SELECT Document_Object_ID FROM Document_Subset_Members WHERE Document_Subset_ID = (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000') AND Related_Document_Object_ID IN (SELECT Document_Object_ID FROM Documents_in_Collections WHERE Collection_ID = (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best'))",
    "exec_result": 1
  },
  {
    "idx": 730,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" AND T4.Collection_Name = \"Best\";",
    "pred": "SELECT DISTINCT DO.Document_Object_ID FROM Document_Subset_Members DSM JOIN Document_Objects DO ON DSM.Related_Document_Object_ID = DO.Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Best for 2000' UNION SELECT DISTINCT DO.Document_Object_ID FROM Collections CO JOIN Documents_in_Collections DIC ON CO.Collection_ID = DIC.Collection_ID JOIN Document_Objects DO ON DIC.Document_Object_ID = DO.Document_Object_ID WHERE CO.Collection_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 731,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"",
    "pred": "SELECT DO.Document_Object_ID FROM Document_Objects AS DO JOIN Documents_in_Collections AS DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections AS C ON DIC.Collection_ID = C.Collection_ID JOIN Collection_Subset_Members AS CS ON C.Collection_ID = CS.Related_Collection_ID JOIN Collection_Subsets AS CSB ON CS.Collection_Subset_ID = CSB.Document_Subset_ID WHERE C.Collection_Name = 'Best' AND CSB.Document_Subset_Name != 'Best for 2000'",
    "exec_result": 0
  },
  {
    "idx": 732,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T2.Document_Object_ID FROM Collections AS T1 JOIN Documents_in_Collections AS T2 ON T1.Collection_ID = T2.Collection_ID WHERE T1.Collection_Name = \"Best\" EXCEPT SELECT DISTINCT T3.Document_Object_ID FROM Document_Subset_Members AS T3 JOIN Document_Subsets AS T4 ON T3.Document_Subset_ID =  T4.Document_Subset_ID WHERE T4.Document_Subset_Name = \"Best for 2000\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 733,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";",
    "pred": "SELECT DO.Document_Object_ID FROM Document_Subset_Members DSM JOIN Document_Objects DO ON DSM.Document_Object_ID = DO.Document_Object_ID WHERE DSM.Document_Subset_ID IN (SELECT Document_Subset_ID FROM Document_Subsets WHERE Document_Subset_Name = 'Best for 2000') UNION SELECT DO.Document_Object_ID FROM Collection_Subset_Members CSM JOIN Document_Objects DO ON CSM.Related_Document_Object_ID = DO.Document_Object_ID WHERE CSM.Collection_Subset_ID IN (SELECT Collection_Subset_ID FROM Collection_Subsets WHERE Collection_Subset_Name = 'Best')",
    "exec_result": 0
  },
  {
    "idx": 734,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Document_Object_ID FROM Document_Subset_Members AS T1 JOIN Document_Subsets AS T2 ON T1.Document_Subset_ID =  T2.Document_Subset_ID JOIN Documents_in_Collections AS T3 ON T1.Document_Object_ID  =  T3.Document_Object_ID JOIN Collections AS T4 ON T3.Collection_ID  =  T4.Collection_ID WHERE T2.Document_Subset_Name = \"Best for 2000\" OR T4.Collection_Name = \"Best\";",
    "pred": "SELECT DISTINCT DO.Document_Object_ID FROM Document_Subset_Members DSM JOIN Document_Objects DO ON DSM.Related_Document_Object_ID = DO.Document_Object_ID JOIN Document_Subsets DS ON DSM.Document_Subset_ID = DS.Document_Subset_ID WHERE DS.Document_Subset_Name = 'Best for 2000' UNION SELECT DO.Document_Object_ID FROM Collections CO JOIN Documents_in_Collections DIC ON CO.Collection_ID = DIC.Collection_ID JOIN Document_Objects DO ON DIC.Document_Object_ID = DO.Document_Object_ID WHERE CO.Collection_Name = 'Best';",
    "exec_result": 0
  },
  {
    "idx": 735,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT C.Collection_Name FROM Collections C WHERE C.Collection_ID IN ( SELECT CS.Related_Collection_ID FROM Collection_Subset_Members CS WHERE CS.Collection_Subset_ID IN ( SELECT DSM.Document_Subset_ID FROM Document_Subset_Members DSM WHERE DSM.Related_Document_Object_ID IN ( SELECT DO.Document_Object_ID FROM Document_Objects DO JOIN Documents_in_Collections DIC ON DO.Document_Object_ID = DIC.Document_Object_ID JOIN Collections CO ON DIC.Collection_ID = CO.Collection_ID WHERE CO.Collection_Name = 'Best' ) ) );",
    "exec_result": 0
  },
  {
    "idx": 736,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T4.Collection_Name FROM Collection_Subset_Members AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Related_Collection_ID = T2.Collection_ID JOIN Collections AS T3 ON T1.Collection_ID = T3.Collection_ID JOIN Collections AS T4 ON T2.Collection_ID = T4.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT C.Collection_Name FROM Collections C, Collection_Subset_Members CS, Collection_Subsets CS2 WHERE C.Collection_ID = CS.Collection_ID AND CS.Related_Collection_ID = CS2.Collection_Subset_ID AND CS2.Collection_Subset_Name = 'Best'",
    "exec_result": 0
  },
  {
    "idx": 737,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(*) FROM Collection_Subset_Members WHERE Related_Collection_ID IN (SELECT Collection_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 1
  },
  {
    "idx": 738,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.Related_Collection_ID) FROM Collection_Subset_Members AS T1 JOIN Collections AS T2 ON T1.Collection_ID  =  T2.Collection_ID WHERE T2.Collection_Name = \"Best\";",
    "pred": "SELECT COUNT(DISTINCT c.Collection_ID) FROM Collections c WHERE c.Collection_Name = 'Best';",
    "exec_result": 0
  },
  {
    "idx": 739,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "SELECT Collection_Subset_Name FROM Collection_Subsets WHERE Collection_Subset_ID IN (SELECT Collection_Subset_ID FROM Collections WHERE Collection_Name = 'Best')",
    "exec_result": 0
  },
  {
    "idx": 740,
    "db_id": "cre_Doc_and_collections",
    "question": "",
    "gold": "SELECT DISTINCT T1.Collection_Subset_Name FROM Collection_Subsets AS T1 JOIN Collection_Subset_Members AS T2 ON T1.Collection_Subset_ID =  T2.Collection_Subset_ID JOIN Collections AS T3 ON T2.Collection_ID =  T3.Collection_ID WHERE T3.Collection_Name = \"Best\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 741,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM songs WHERE name LIKE \"%Love%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 742,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name FROM songs ORDER BY name",
    "pred": "SELECT `name` FROM songs ORDER BY `name` ASC",
    "exec_result": 1
  },
  {
    "idx": 743,
    "db_id": "sing_contest",
    "question": "",
    "gold": "select name , language from songs",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 744,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT max(voice_sound_quality) ,  min(voice_sound_quality) FROM performance_score",
    "pred": "SELECT MAX(voice_sound_quality), MIN(voice_sound_quality) FROM performance_score",
    "exec_result": 1
  },
  {
    "idx": 745,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.voice_sound_quality ,  T1.rhythm_tempo ,  T1.stage_presence FROM performance_score AS T1 JOIN participants AS T2 ON T1.participant_id  =  T2.id WHERE T2.name  =  'Freeway'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 746,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT id ,  LANGUAGE ,  original_artist FROM songs WHERE name != 'Love'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 747,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name ,  original_artist FROM songs WHERE english_translation  =  'All the streets of love'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 748,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT DISTINCT T2.stage_presence FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id WHERE T1.language  =  'English'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 749,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.Name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 750,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.Name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id GROUP BY T1.id ORDER BY count(*)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 751,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id WHERE T2.voice_sound_quality  =  5 OR T2.rhythm_tempo  =  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 752,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.voice_sound_quality FROM performance_score AS T1 JOIN songs AS T2 ON T1.songs_id  =  T2.id WHERE T2.name  =  ' The Balkan Girls ' AND T2.language  =  'English'",
    "pred": "SELECT `voice_sound_quality` FROM performance_score JOIN songs ON performance_score.songs_id = songs.id WHERE songs.name = 'The Balkan Girls' AND songs.language = 'English'",
    "exec_result": 0
  },
  {
    "idx": 753,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM songs AS T1 JOIN performance_score AS T2 ON T1.id  =  T2.songs_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT s.id, s.name FROM songs s JOIN performance_score ps ON s.id = ps.songs_id GROUP BY s.id, s.name HAVING COUNT(ps.participant_id) = (SELECT COUNT(ps2.participant_id) FROM performance_score ps2 WHERE ps2.songs_id = s.id)",
    "exec_result": 0
  },
  {
    "idx": 754,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM performance_score WHERE stage_presence  <  7 OR stage_presence  >  9",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 755,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT count(*) FROM songs WHERE id NOT IN ( SELECT songs_id FROM performance_score );",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 756,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT avg(T2.rhythm_tempo) ,  T1.language FROM songs AS T1 JOIN performance_score AS T2 ON T2.songs_id  =  T1.id GROUP BY T1.language",
    "pred": "SELECT s.language, AVG(ps.rhythm_tempo) AS average_rhythm_score FROM songs AS s JOIN performance_score AS ps ON s.id = ps.songs_id GROUP BY s.language",
    "exec_result": 1
  },
  {
    "idx": 757,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 758,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'Croatian' INTERSECT SELECT T1.name ,  T1.popularity FROM participants AS T1 JOIN performance_score AS T2 ON T2.participant_id  =  T1.id JOIN songs AS T3 ON T3.id  =  T2.songs_id WHERE T3.language  =  'English'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 759,
    "db_id": "sing_contest",
    "question": "",
    "gold": "SELECT name FROM songs WHERE name LIKE \"%Is%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 760,
    "db_id": "sing_contest",
    "question": "",
    "gold": "select t2.original_artist from performance_score as t1 join songs as t2 on t2.id  =  t1.songs_id where t1.rhythm_tempo  >  5 order by t1.voice_sound_quality desc",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 761,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City",
    "pred": "SELECT COUNT(*) FROM City",
    "exec_result": 1
  },
  {
    "idx": 762,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City",
    "pred": "SELECT COUNT(*) FROM City",
    "exec_result": 1
  },
  {
    "idx": 763,
    "db_id": "address_1",
    "question": "",
    "gold": "select distinct state from city",
    "pred": "SELECT DISTINCT state FROM City",
    "exec_result": 1
  },
  {
    "idx": 764,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT DISTINCT state FROM City",
    "pred": "SELECT DISTINCT state FROM City",
    "exec_result": 1
  },
  {
    "idx": 765,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country) FROM City",
    "pred": "SELECT COUNT(DISTINCT Country) FROM City",
    "exec_result": 1
  },
  {
    "idx": 766,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(DISTINCT country) FROM City",
    "pred": "SELECT COUNT(DISTINCT Country) FROM City",
    "exec_result": 1
  },
  {
    "idx": 767,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name ,  city_code ,  state ,  country FROM City",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 768,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name ,  city_code ,  state ,  country FROM City",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 769,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 770,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT latitude ,  longitude FROM City WHERE city_name  =  \"Baltimore\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 771,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE state  =  \"PA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 772,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE state  =  \"PA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 773,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"",
    "pred": "SELECT COUNT(*) FROM City WHERE Country = 'Canada'",
    "exec_result": 0
  },
  {
    "idx": 774,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City WHERE country  =  \"CANADA\"",
    "pred": "SELECT COUNT(*) FROM City WHERE Country = 'Canada'",
    "exec_result": 0
  },
  {
    "idx": 775,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 776,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city_name FROM City WHERE country  =  \"USA\" ORDER BY latitude",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 777,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state ,  count(*) FROM City GROUP BY state",
    "pred": "SELECT DISTINCT T1.state, COUNT(T1.city_code) FROM City AS T1 JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code OR T1.city_code = T2.city1_code GROUP BY T1.state",
    "exec_result": 0
  },
  {
    "idx": 778,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state ,  count(*) FROM City GROUP BY state",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 779,
    "db_id": "address_1",
    "question": "",
    "gold": "select country ,  count(*) from city group by country",
    "pred": "SELECT Country, COUNT(DISTINCT City.city_code) FROM City GROUP BY Country",
    "exec_result": 1
  },
  {
    "idx": 780,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country ,  count(*) FROM City GROUP BY country",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 781,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2",
    "pred": "-- Execute the corrected SQL query SELECT DISTINCT T1.state FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code OR T1.city_code = T2.city1_code GROUP BY T1.state HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 782,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.state FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code OR T1.city_code = T2.city1_code GROUP BY T1.state HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 783,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT state, COUNT(*) FROM City GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 784,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM City GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT state FROM City GROUP BY state ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 785,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1",
    "pred": "SELECT Country, COUNT(*) FROM City GROUP BY Country ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 786,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT country FROM City GROUP BY country ORDER BY count(*) ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 787,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 788,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Lname FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"MD\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 789,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"",
    "pred": "SELECT COUNT(*) FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.country = 'CHINA'",
    "exec_result": 1
  },
  {
    "idx": 790,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.country  =  \"CHINA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 791,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 792,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.Fname ,  T2.Major FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.city_name  =  \"Baltimore\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 793,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 794,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 795,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 796,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name ,  count(*) FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 797,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT DISTINCT T2.state, COUNT(*) FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code GROUP BY T2.state ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 798,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 799,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1",
    "pred": "SELECT Country, COUNT(*) AS NumberOfStudents FROM Student JOIN City ON Student.city_code = City.city_code GROUP BY Country ORDER BY NumberOfStudents ASC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 800,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.country FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.country ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 801,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 802,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.city_name FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.city_code HAVING count(*)  >=  3",
    "pred": "SELECT DISTINCT T1.city_name FROM City AS T1 INNER JOIN (SELECT T2.city_code FROM Student AS T2 GROUP BY T2.city_code HAVING COUNT(*) >= 3) AS T3 ON T1.city_code = T3.city_code",
    "exec_result": 1
  },
  {
    "idx": 803,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 804,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T1.state FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code GROUP BY T1.state HAVING count(*)  >  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 805,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 806,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE country  =  \"USA\"",
    "pred": "SELECT DISTINCT Student.StuID FROM Student JOIN City ON Student.city_code = City.city_code WHERE City.country <> 'USA'",
    "exec_result": 1
  },
  {
    "idx": 807,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 808,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T1.state  =  \"PA\"  AND T2.sex  =  'F'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 809,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 810,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT StuID FROM City AS T1 JOIN Student AS T2 ON T1.city_code  =  T2.city_code WHERE T2.sex  =  'M' AND T1.country != \"USA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 811,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"",
    "pred": "SELECT distance FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'BAL') AND city2_code = (SELECT city_code FROM City WHERE city_name = 'CHI')",
    "exec_result": 0
  },
  {
    "idx": 812,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance WHERE city1_code  =  \"BAL\" AND city2_code  =  \"CHI\"",
    "pred": "SELECT distance FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'BAL') AND city2_code = (SELECT city_code FROM City WHERE city_name = 'CHI')",
    "exec_result": 0
  },
  {
    "idx": 813,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"",
    "pred": "SELECT distance FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston') AND city2_code = (SELECT city_code FROM City WHERE city_name = 'Newark')",
    "exec_result": 1
  },
  {
    "idx": 814,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" AND T3.city_name  =  \"Newark\"",
    "pred": "SELECT distance FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston') AND city2_code = (SELECT city_code FROM City WHERE city_name = 'Newark')",
    "exec_result": 1
  },
  {
    "idx": 815,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance",
    "pred": "SELECT AVG(distance) AS average_distance, MIN(distance) AS minimum_distance, MAX(distance) AS maximum_distance FROM Direct_distance;",
    "exec_result": 1
  },
  {
    "idx": 816,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) ,  min(distance) ,  max(distance) FROM Direct_distance",
    "pred": "SELECT AVG(distance) AS average_distance, MIN(distance) AS minimum_distance, MAX(distance) AS maximum_distance FROM Direct_distance;",
    "exec_result": 1
  },
  {
    "idx": 817,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 818,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance ORDER BY distance DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 819,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 820,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  >  (SELECT avg(distance) FROM Direct_distance)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 821,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 822,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  city2_code FROM Direct_distance WHERE distance  <  1000",
    "pred": "SELECT DISTINCT T1.city_code FROM City AS T1 INNER JOIN Direct_distance AS T2 ON T1.city_code = T2.city2_code WHERE T2.distance < 1000",
    "exec_result": 0
  },
  {
    "idx": 823,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 824,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT sum(distance) FROM Direct_distance WHERE city1_code  =  \"BAL\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 825,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"",
    "pred": "SELECT AVG(distance) FROM Direct_distance WHERE city1_code = (SELECT city_code FROM City WHERE city_name = 'Boston')",
    "exec_result": 1
  },
  {
    "idx": 826,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code WHERE T2.city_name  =  \"Boston\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 827,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 828,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Chicago\" ORDER BY distance LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 829,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 830,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.city_name FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code JOIN City AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.city_name  =  \"Boston\" ORDER BY distance DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 831,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 832,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT city1_code ,  sum(distance) FROM Direct_distance GROUP BY city1_code",
    "pred": "SELECT DISTINCT City.city_code, SUM(Direct_distance.distance) FROM City LEFT JOIN Direct_distance ON City.city_code = Direct_distance.city2_code GROUP BY City.city_code",
    "exec_result": 1
  },
  {
    "idx": 833,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 834,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T2.city_name ,  avg(distance) FROM Direct_distance AS T1 JOIN City AS T2 ON T1.city1_code  =  T2.city_code GROUP BY T1.city1_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 835,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 836,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT distance FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" AND T3.Fname  =  \"Tracy\" AND T3.Lname  =  \"Kim\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 837,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 838,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT T3.Fname ,  T3.Lname FROM Direct_distance AS T1 JOIN Student AS T2 ON T1.city1_code  =  T2.city_code JOIN Student AS T3 ON T1.city2_code  =  T3.city_code WHERE T2.Fname  =  \"Linda\" AND T2.Lname  =  \"Smith\" ORDER BY distance DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 839,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"",
    "pred": "SELECT T2.state FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Fname = 'Linda'",
    "exec_result": 1
  },
  {
    "idx": 840,
    "db_id": "address_1",
    "question": "",
    "gold": "SELECT state FROM Student AS T1 JOIN City AS T2 ON T1.city_code  =  T2.city_code WHERE T1.Fname  =  \"Linda\"",
    "pred": "SELECT T2.state FROM Student AS T1 INNER JOIN City AS T2 ON T1.city_code = T2.city_code WHERE T1.Fname = 'Linda'",
    "exec_result": 1
  },
  {
    "idx": 841,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT * FROM Sailors WHERE age  >  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 842,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT * FROM Sailors WHERE age  >  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 843,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 844,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 845,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1",
    "pred": "SELECT B.name FROM Boats AS B JOIN Reserves AS R ON B.bid = R.bid WHERE R.sid = 1",
    "exec_result": 0
  },
  {
    "idx": 846,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves WHERE sid = 1",
    "pred": "SELECT DISTINCT T1.bid FROM Reserves AS T1 INNER JOIN Sailors AS T2 ON T1.sid = T2.sid WHERE T2.sid = ?",
    "exec_result": 0
  },
  {
    "idx": 847,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102",
    "pred": "SELECT S.name FROM Sailors AS S INNER JOIN Reserves AS R ON S.sid = R.sid WHERE R.bid = 102",
    "exec_result": 1
  },
  {
    "idx": 848,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE T2.bid  =  102",
    "pred": "SELECT name FROM Sailors AS T1 INNER JOIN Reserves AS T2 ON T1.sid = T2.sid WHERE T2.bid = 102",
    "exec_result": 1
  },
  {
    "idx": 849,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves",
    "pred": "SELECT DISTINCT R.bid FROM Reserves R",
    "exec_result": 1
  },
  {
    "idx": 850,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT bid FROM Reserves",
    "pred": "SELECT DISTINCT T1.bid FROM Reserves AS T1 INNER JOIN Sailors AS T2 ON T1.sid = T2.sid;",
    "exec_result": 1
  },
  {
    "idx": 851,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "pred": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "exec_result": 1
  },
  {
    "idx": 852,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "pred": "SELECT name FROM Sailors WHERE name LIKE '%e%'",
    "exec_result": 1
  },
  {
    "idx": 853,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);",
    "pred": "SELECT sid FROM Sailors WHERE age > (SELECT MIN(age) FROM Sailors)",
    "exec_result": 1
  },
  {
    "idx": 854,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT sid FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors);",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 855,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 856,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT name FROM Sailors WHERE age  >  (SELECT min(age) FROM Sailors WHERE rating  >  7);",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 857,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 858,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 859,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid GROUP BY T2.sid HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 860,
    "db_id": "boat_1",
    "question": "",
    "gold": "select distinct t1.name ,  t1.sid from sailors as t1 join reserves as t2 on t1.sid  =  t2.sid group by t2.sid having count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 861,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue')",
    "exec_result": 1
  },
  {
    "idx": 862,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue')",
    "exec_result": 1
  },
  {
    "idx": 863,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 864,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' OR T1.color  =  \"blue\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 865,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue')",
    "exec_result": 0
  },
  {
    "idx": 866,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid WHERE T1.color  =  \"blue\"",
    "pred": "SELECT DISTINCT Sailors.sid FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.color IN ('red', 'blue')",
    "exec_result": 0
  },
  {
    "idx": 867,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 868,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  'red' INTERSECT SELECT DISTINCT T2.sid ,  T3.name FROM Boats AS T1 JOIN Reserves AS T2 ON  T1.bid  =  T2.bid JOIN Sailors AS T3 ON T2.sid  =  T3.sid WHERE T1.color  =  \"blue\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 869,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves",
    "pred": "SELECT DISTINCT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL",
    "exec_result": 1
  },
  {
    "idx": 870,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT sid FROM Reserves",
    "pred": "SELECT DISTINCT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL",
    "exec_result": 1
  },
  {
    "idx": 871,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT Sailors.name, Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL;",
    "exec_result": 1
  },
  {
    "idx": 872,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid ,  name FROM Sailors EXCEPT SELECT T1.sid ,  T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 873,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT DISTINCT Sailors.sid FROM Sailors LEFT JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.sid IS NULL",
    "exec_result": 1
  },
  {
    "idx": 874,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT sid FROM Sailors EXCEPT SELECT T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid",
    "pred": "SELECT sid FROM Sailors WHERE sid NOT IN (SELECT DISTINCT sid FROM Reserves)",
    "exec_result": 1
  },
  {
    "idx": 875,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid WHERE Reserves.bid = 103",
    "exec_result": 1
  },
  {
    "idx": 876,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T2.bid  =  103",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 877,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 878,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT min(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 879,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 880,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(rating) FROM Sailors WHERE name  =  'Luis')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 881,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 882,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.name ,  T1.sid FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid WHERE  T1.rating  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 883,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 884,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors WHERE age  =  ( SELECT max(age) FROM Sailors )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 885,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM Sailors",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 886,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT COUNT(*) FROM Sailors",
    "pred": "SELECT COUNT(*) FROM Sailors;",
    "exec_result": 1
  },
  {
    "idx": 887,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(age) FROM Sailors WHERE rating  =  7",
    "pred": "SELECT AVG(Sailors.age) FROM Sailors WHERE Sailors.rating = 7",
    "exec_result": 1
  },
  {
    "idx": 888,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(age) FROM Sailors WHERE rating  =  7",
    "pred": "SELECT AVG(Sailors.age) FROM Sailors WHERE Sailors.rating = 7",
    "exec_result": 1
  },
  {
    "idx": 889,
    "db_id": "boat_1",
    "question": "",
    "gold": "select count(*) from sailors where name like 'd%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 890,
    "db_id": "boat_1",
    "question": "",
    "gold": "select count(*) from sailors where name like 'd%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 891,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(rating) ,  MAX(age) FROM Sailors",
    "pred": "SELECT AVG(rating) AS avg_rating, MAX(age) AS max_age FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 892,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT AVG(rating) ,  MAX(age) FROM Sailors",
    "pred": "SELECT AVG(rating) AS avg_rating, MAX(age) AS max_age FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 893,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 894,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 895,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 896,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING bid  >  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 897,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 898,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves GROUP BY bid HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 899,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 900,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT bid ,  count(*) FROM Reserves WHERE sid  >  1 GROUP BY bid",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 901,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 902,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.rating ,  avg(T1.age) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red' GROUP BY T1.rating",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 903,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 904,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  rating ,  age FROM Sailors ORDER BY rating ,  age",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 905,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats",
    "pred": "SELECT COUNT(*) FROM Boats",
    "exec_result": 1
  },
  {
    "idx": 906,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats",
    "pred": "SELECT COUNT(*) FROM Boats",
    "exec_result": 1
  },
  {
    "idx": 907,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats WHERE color  =  'red'",
    "pred": "SELECT COUNT(*) FROM Boats WHERE color = 'red'",
    "exec_result": 1
  },
  {
    "idx": 908,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT count(*) FROM Boats WHERE color  =  'red'",
    "pred": "SELECT COUNT(*) FROM Boats WHERE color = 'red'",
    "exec_result": 1
  },
  {
    "idx": 909,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 910,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T3.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T1.age BETWEEN 20 AND 30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 911,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 912,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name FROM Sailors WHERE rating  >  (SELECT max(T1.rating) FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.color  =  'red')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 913,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT max(rating) FROM Sailors",
    "pred": "SELECT MAX(rating) FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 914,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT max(rating) FROM Sailors",
    "pred": "SELECT MAX(rating) FROM Sailors",
    "exec_result": 1
  },
  {
    "idx": 915,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'",
    "pred": "SELECT S.name FROM Sailors AS S INNER JOIN Reserves AS R ON S.sid = R.sid INNER JOIN Boats AS B ON R.bid = B.bid WHERE B.name = 'Melon'",
    "exec_result": 1
  },
  {
    "idx": 916,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT T1.name FROM Sailors AS T1 JOIN Reserves AS T2 ON T1.sid  =  T2.sid JOIN Boats AS T3 ON T3.bid  =  T2.bid WHERE T3.name  =  'Melon'",
    "pred": "SELECT Sailors.name FROM Sailors JOIN Reserves ON Sailors.sid = Reserves.sid JOIN Boats ON Reserves.bid = Boats.bid WHERE Boats.name = 'Melon'",
    "exec_result": 1
  },
  {
    "idx": 917,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors ORDER BY rating DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 918,
    "db_id": "boat_1",
    "question": "",
    "gold": "SELECT name ,  age FROM Sailors ORDER BY rating DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 919,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1",
    "pred": "SELECT Model FROM headphone ORDER BY Price DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 920,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone ORDER BY price DESC LIMIT 1",
    "pred": "SELECT `Model`, `Price` FROM headphone ORDER BY `Price` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 921,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT DISTINCT model FROM headphone ORDER BY model",
    "pred": "SELECT DISTINCT Model FROM headphone ORDER BY Model ASC",
    "exec_result": 1
  },
  {
    "idx": 922,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT DISTINCT model FROM headphone ORDER BY model",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 923,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Class, COUNT(*) AS ClassCount FROM headphone GROUP BY Class ORDER BY ClassCount DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 924,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 925,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 926,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone GROUP BY CLASS HAVING count(*)  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 927,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 928,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  CLASS FROM headphone WHERE price  >  200 GROUP BY CLASS",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 929,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT earpads) FROM headphone",
    "pred": "SELECT COUNT(DISTINCT `Earpads`) FROM headphone",
    "exec_result": 1
  },
  {
    "idx": 930,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT earpads) FROM headphone",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 931,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT h.Earpads, COUNT(*) AS count FROM stock s JOIN headphone h ON s.Headphone_ID = h.Headphone_ID GROUP BY h.Earpads ORDER BY count DESC LIMIT 2;",
    "exec_result": 0
  },
  {
    "idx": 932,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone GROUP BY earpads ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT h.Earpads, SUM(s.Quantity) AS TotalHeadphones FROM stock AS s JOIN headphone AS h ON s.Headphone_ID = h.Headphone_ID JOIN store AS store ON s.Store_ID = store.Store_ID GROUP BY h.Earpads ORDER BY TotalHeadphones DESC LIMIT 2;",
    "exec_result": 0
  },
  {
    "idx": 933,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 934,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model ,  CLASS ,  construction FROM headphone ORDER BY price LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 935,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 936,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT construction ,  avg(price) FROM headphone GROUP BY construction",
    "pred": "SELECT Construction, AVG(Price) FROM headphone GROUP BY Construction",
    "exec_result": 1
  },
  {
    "idx": 937,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'",
    "pred": "SELECT DISTINCT T1.Class FROM headphone AS T1 INNER JOIN stock AS T2 ON T1.Headphone_ID = T2.Headphone_ID WHERE T1.Earpads = 'Bowls' OR T1.Earpads = 'Comfort Pads'",
    "exec_result": 0
  },
  {
    "idx": 938,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT CLASS FROM headphone WHERE earpads  =  'Bowls' INTERSECT SELECT CLASS FROM headphone WHERE earpads  =  'Comfort Pads'",
    "pred": "SELECT DISTINCT h1.Class, h2.Class FROM headphone AS h1 JOIN stock AS s1 ON h1.Headphone_ID = s1.Headphone_ID JOIN stock AS s2 ON h1.Headphone_ID = s2.Headphone_ID AND s1.Store_ID = s2.Store_ID WHERE h1.Earpads = 'Bowls' AND h2.Earpads = 'Comfort Pads';",
    "exec_result": 0
  },
  {
    "idx": 939,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'",
    "pred": "SELECT DISTINCT h.Earpads FROM headphone h WHERE h.Construction != 'Plastic'",
    "exec_result": 0
  },
  {
    "idx": 940,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT earpads FROM headphone EXCEPT SELECT earpads FROM headphone WHERE construction  =  'Plastic'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 941,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 942,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE price  <  (SELECT avg(price) FROM headphone)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 943,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store ORDER BY date_opened",
    "pred": "SELECT Name FROM store ORDER BY Date_Opened",
    "exec_result": 1
  },
  {
    "idx": 944,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store ORDER BY date_opened",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 945,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 946,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name ,  parking FROM store WHERE neighborhood  =  'Tarzana'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 947,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT neighborhood) FROM store",
    "pred": "SELECT COUNT(DISTINCT store.Neighborhood) FROM store INNER JOIN stock ON store.Store_ID = stock.Store_ID",
    "exec_result": 0
  },
  {
    "idx": 948,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(DISTINCT neighborhood) FROM store",
    "pred": "SELECT COUNT(DISTINCT store.Neighborhood) FROM store INNER JOIN stock ON store.Store_ID = stock.Store_ID;",
    "exec_result": 0
  },
  {
    "idx": 949,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 950,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT count(*) ,  neighborhood FROM store GROUP BY neighborhood",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 951,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 952,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.name ,  sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id GROUP BY t2.store_id ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 953,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 954,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT name FROM store WHERE store_id NOT IN (SELECT store_id FROM stock)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 955,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)",
    "pred": "SELECT DISTINCT H.Model FROM headphone H LEFT JOIN stock S ON H.Headphone_ID = S.Headphone_ID WHERE S.Headphone_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 956,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT model FROM headphone WHERE headphone_id NOT IN (SELECT headphone_id FROM stock)",
    "pred": "SELECT DISTINCT h.Model FROM headphone AS h LEFT JOIN stock AS s ON h.Headphone_ID = s.Headphone_ID WHERE s.Headphone_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 957,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "SELECT H.Model, SUM(S.Quantity) AS TotalQuantity FROM headphone AS H JOIN stock AS S ON H.Headphone_ID = S.Headphone_ID GROUP BY H.Model ORDER BY TotalQuantity DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 958,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT t1.model FROM headphone AS t1 JOIN stock AS t2 ON t1.headphone_id  =  t2.headphone_id GROUP BY t1.model ORDER BY sum(t2.quantity) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 959,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'",
    "pred": "SELECT SUM(Quantity) FROM stock WHERE Store_ID = (SELECT Store_ID FROM store WHERE Name = 'Woodman')",
    "exec_result": 1
  },
  {
    "idx": 960,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT sum(t2.quantity) FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id WHERE t1.name  =  'Woodman'",
    "pred": "SELECT SUM(stock.Quantity) FROM stock JOIN store ON stock.Store_ID = store.Store_ID WHERE store.Name = 'Woodman'",
    "exec_result": 1
  },
  {
    "idx": 961,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id",
    "pred": "SELECT s.Neighborhood FROM store s LEFT JOIN stock st ON s.Store_ID = st.Store_ID WHERE st.Headphone_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 962,
    "db_id": "headphone_store",
    "question": "",
    "gold": "SELECT Neighborhood FROM store EXCEPT SELECT t1.Neighborhood FROM store AS t1 JOIN stock AS t2 ON t1.store_id  =  t2.store_id",
    "pred": "SELECT DISTINCT T1.Neighborhood FROM store AS T1 LEFT JOIN stock AS T3 ON T1.Store_ID = T3.Store_ID WHERE T3.Headphone_ID IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 963,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT COUNT(DISTINCT `author_id`) FROM Author;",
    "exec_result": 1
  },
  {
    "idx": 964,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author",
    "pred": "SELECT COUNT(DISTINCT `author_id`) FROM Author;",
    "exec_result": 1
  },
  {
    "idx": 965,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper",
    "pred": "SELECT COUNT(*) FROM Paper;",
    "exec_result": 1
  },
  {
    "idx": 966,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper",
    "pred": "SELECT COUNT(*) FROM Paper",
    "exec_result": 1
  },
  {
    "idx": 967,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Affiliation",
    "pred": "SELECT COUNT(DISTINCT `affiliation_id`) FROM Affiliation",
    "exec_result": 1
  },
  {
    "idx": 968,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Affiliation",
    "pred": "SELECT COUNT(DISTINCT A.affiliation_id) FROM Affiliation A",
    "exec_result": 1
  },
  {
    "idx": 969,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL' AND year = 2000",
    "exec_result": 1
  },
  {
    "idx": 970,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Paper WHERE venue  =  \"NAACL\" AND YEAR  =  2000",
    "pred": "SELECT COUNT(*) FROM Paper WHERE venue = 'NAACL' AND year = 2000",
    "exec_result": 1
  },
  {
    "idx": 971,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 972,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\" AND T1.year  =  2009",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 973,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT name ,  address FROM Affiliation",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 974,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT name ,  address FROM Affiliation",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 975,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 976,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT venue ,  YEAR FROM paper ORDER BY YEAR",
    "pred": "SELECT DISTINCT T1.venue FROM Paper AS T1 ORDER BY T1.year",
    "exec_result": 0
  },
  {
    "idx": 977,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 978,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name  =  \"Harvard University\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 979,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 980,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T3.name LIKE \"%Mckeown%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 981,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 982,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Stanford University\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T3.name LIKE \"Columbia University\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 983,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper INNER JOIN Author_list ON Paper.paper_id = Author_list.paper_id INNER JOIN Author ON Author_list.author_id = Author.author_id INNER JOIN Affiliation ON Author_list.affiliation_id = Affiliation.affiliation_id WHERE Author.name = 'Mckeown, Kathleen' OR Author.name = 'Rambow, Owen'",
    "exec_result": 0
  },
  {
    "idx": 984,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown ,  Kathleen%\" INTERSECT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 985,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 986,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Mckeown%\" EXCEPT SELECT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE T3.name LIKE \"%Rambow%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 987,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Author_list.paper_id = Paper.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name IN ('McKeown, Kathleen', 'Rambow, Owen')",
    "exec_result": 0
  },
  {
    "idx": 988,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.title ,  T1.paper_id FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id WHERE  T3.name LIKE \"%Mckeown ,  Kathleen%\" OR T3.name LIKE \"%Rambow ,  Owen%\"",
    "pred": "SELECT Paper.title, Paper.paper_id FROM Paper JOIN Author_list ON Paper.paper_id = Author_list.paper_id JOIN Author ON Author_list.author_id = Author.author_id WHERE Author.name IN ('Mckeown, Kathleen', 'Rambow, Owen')",
    "exec_result": 0
  },
  {
    "idx": 989,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 990,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name ,  count(*) FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id ORDER BY count(*) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 991,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 992,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id ORDER BY count(*) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 993,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 994,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  >  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 995,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 996,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Author AS T1 JOIN Author_list AS T2 ON T1.author_id  =  T2.author_id GROUP BY T1.author_id HAVING count(*)  =  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 997,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 998,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue ,  YEAR FROM paper GROUP BY venue ,  YEAR ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 999,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1000,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT venue FROM paper GROUP BY venue ORDER BY count(*) LIMIT 1",
    "pred": "SELECT venue FROM Paper GROUP BY venue ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1001,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE cited_paper_id  =  \"A00-1002\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id = 'A00-1002';",
    "exec_result": 1
  },
  {
    "idx": 1002,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE cited_paper_id  =  \"A00-1002\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id = (SELECT paper_id FROM Paper WHERE title = 'Evaluating The Use Of Prosodic Information In Speech Recognition And Understanding')",
    "exec_result": 0
  },
  {
    "idx": 1003,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE paper_id  =  \"D12-1027\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id = 'D12-1027'",
    "exec_result": 0
  },
  {
    "idx": 1004,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Citation WHERE paper_id  =  \"D12-1027\"",
    "pred": "SELECT COUNT(*) FROM Citation WHERE cited_paper_id = 'D12-1027'",
    "exec_result": 0
  },
  {
    "idx": 1005,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1006,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1007,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1008,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T2.paper_id  =  T1.paper_id GROUP BY T1.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1009,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1010,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  count(*) FROM Citation GROUP BY cited_paper_id ORDER BY count(*) DESC LIMIT 10",
    "pred": "SELECT p.title, COUNT(c.cited_paper_id) AS citations FROM Paper p JOIN Citation c ON p.paper_id = c.paper_id GROUP BY p.paper_id ORDER BY citations DESC LIMIT 10;",
    "exec_result": 0
  },
  {
    "idx": 1011,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1012,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.cited_paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1013,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1014,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(*) from citation as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1015,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1016,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name ,  count(*) FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id JOIN Author AS T3 ON T2.author_id  =  T3.author_id GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1017,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1018,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join author as t3 on t2.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1019,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = \"columbia university\"",
    "pred": "SELECT DISTINCT T3.venue, T3.year FROM Affiliation AS T1 INNER JOIN Author_list AS T2 ON T1.affiliation_id = T2.affiliation_id INNER JOIN Paper AS T3 ON T2.paper_id = T3.paper_id WHERE T1.name = 'Columbia University'",
    "exec_result": 0
  },
  {
    "idx": 1020,
    "db_id": "aan_1",
    "question": "",
    "gold": "select distinct t1.venue ,  t1.year from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t3.name = \"columbia university\"",
    "pred": "SELECT DISTINCT T3.venue, T3.year FROM Author_list AS T1 JOIN Author AS T2 ON T1.author_id = T2.author_id JOIN Affiliation AS T3 ON T1.affiliation_id = T3.affiliation_id WHERE T3.name = 'Columbia University';",
    "exec_result": 0
  },
  {
    "idx": 1021,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1022,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Author AS T3 ON T3.author_id  =  T2.author_id WHERE T1.year  =  2009 GROUP BY T2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1023,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1024,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T3.name FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  =  2009 GROUP BY T2.affiliation_id ORDER BY count(*) DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1025,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = \"columbia university\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1026,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count(distinct t1.paper_id) from paper as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id join affiliation as t3 on t2.affiliation_id  =  t3.affiliation_id where t1.year  <=  2009 and t3.name = \"columbia university\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1027,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE \"Stanford University\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1028,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.paper_id) FROM Paper AS T1 JOIN Author_list AS T2 ON T1.paper_id  =  T2.paper_id JOIN Affiliation AS T3 ON T2.affiliation_id  =  T3.affiliation_id WHERE T1.year  >=  2000 AND T1.year  <=  2009 AND T3.name LIKE \"Stanford University\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1029,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1030,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id GROUP BY T2.paper_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1031,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1032,
    "db_id": "aan_1",
    "question": "",
    "gold": "select count (distinct t2.author_id) from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id where t3.name = \"mckeown ,  kathleen\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1033,
    "db_id": "aan_1",
    "question": "",
    "gold": "select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = \"mckeown ,  kathleen\" group by t2.author_id order by count(*) desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1034,
    "db_id": "aan_1",
    "question": "",
    "gold": "select t4.name from author_list as t1 join author_list as t2 on t1.paper_id  =  t2.paper_id and t1.author_id != t2.author_id join author as t3 on t1.author_id  =  t3.author_id join author as t4 on t2.author_id  =  t4.author_id where t3.name = \"mckeown ,  kathleen\" group by t2.author_id order by count(*) desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1035,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id FROM Paper WHERE title LIKE \"%translation%\"",
    "pred": "SELECT DISTINCT T1.paper_id FROM Paper AS T1 INNER JOIN Citation AS T2 ON T1.paper_id = T2.paper_id WHERE T1.title LIKE '%translation%'",
    "exec_result": 0
  },
  {
    "idx": 1036,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id FROM Paper WHERE title LIKE \"%translation%\"",
    "pred": "SELECT paper_id FROM Paper WHERE title LIKE '%translation%'",
    "exec_result": 1
  },
  {
    "idx": 1037,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1038,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT paper_id ,  title FROM Paper WHERE paper_id NOT IN (SELECT cited_paper_id FROM Citation)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1039,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE \"%China%\" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1040,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id WHERE T1.address LIKE \"%China%\" GROUP BY T1.affiliation_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1041,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1042,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) ,  venue ,  YEAR FROM Paper GROUP BY venue ,  YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1043,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1044,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T2.paper_id) ,  T1.name FROM Affiliation AS T1 JOIN Author_list AS T2 ON T1.affiliation_id  =  T2.affiliation_id GROUP BY T1.affiliation_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1045,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1046,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT T2.title FROM Citation AS T1 JOIN Paper AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(*)  >  50",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1047,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1048,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT count(*) FROM Author WHERE Author_id NOT IN ( SELECT T2.author_id FROM Citation AS T1 JOIN Author_list AS T2 ON T1.cited_paper_id  =  T2.paper_id GROUP BY T1.cited_paper_id HAVING count(DISTINCT T1.paper_id)  >  50)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1049,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"NAACL\" AND T2.year  =  2009)",
    "pred": "SELECT DISTINCT A.name FROM Author A INNER JOIN Author_list AL ON A.author_id = AL.author_id INNER JOIN Paper P ON AL.paper_id = P.paper_id INNER JOIN Citation C ON P.paper_id = C.paper_id INNER JOIN Citation C2 ON C.cited_paper_id = C2.paper_id INNER JOIN Paper P2 ON C2.paper_id = P2.paper_id INNER JOIN Affiliation AF ON AL.affiliation_id = AF.affiliation_id WHERE P.venue IN ('ACL', 'NAACL') AND P.year = 2009 AND P2.year = 2009 AND AF.name IN ('Google Inc.', 'Indian Institute of Technology', 'University of California', 'The MITRE Corporation', 'National Institute of Technology', 'Hitachi Ltd.')",
    "exec_result": 1
  },
  {
    "idx": 1050,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\" AND T2.year  =  2009 INTERSECT SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"NAACL\" AND T2.year  =  2009)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1051,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\")",
    "pred": "SELECT DISTINCT A.name FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id LEFT JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue NOT LIKE '%ACL%'",
    "exec_result": 0
  },
  {
    "idx": 1052,
    "db_id": "aan_1",
    "question": "",
    "gold": "SELECT name FROM Author WHERE author_id NOT IN (SELECT T1.author_id FROM Author_list AS T1 JOIN Paper AS T2 ON T1.paper_id  =  T2.paper_id WHERE T2.venue  =  \"ACL\")",
    "pred": "SELECT DISTINCT A.name FROM Author A LEFT JOIN Author_list AL ON A.author_id = AL.author_id LEFT JOIN Paper P ON AL.paper_id = P.paper_id WHERE P.venue != 'ACL'",
    "exec_result": 0
  },
  {
    "idx": 1053,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM conference",
    "pred": "SELECT COUNT(*) FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1054,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM conference",
    "pred": "SELECT COUNT(*) FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1055,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT conference_name FROM conference",
    "pred": "SELECT DISTINCT T1.`Conference_Name` FROM conference AS T1",
    "exec_result": 1
  },
  {
    "idx": 1056,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT conference_name FROM conference",
    "pred": "SELECT DISTINCT Conference_Name FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1057,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  YEAR ,  LOCATION FROM conference",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1058,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  YEAR ,  LOCATION FROM conference",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1059,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1060,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT conference_name ,  count(*) FROM conference GROUP BY conference_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1061,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1062,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR ,  count(*) FROM conference GROUP BY YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1063,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1",
    "pred": "SELECT Year, COUNT(*) FROM conference GROUP BY Year ORDER BY COUNT(*) ASC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1064,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT YEAR FROM conference GROUP BY YEAR ORDER BY count(*) LIMIT 1",
    "pred": "SELECT MIN(Year) FROM conference",
    "exec_result": 1
  },
  {
    "idx": 1065,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2",
    "pred": "SELECT Location FROM conference GROUP BY Location HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1066,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT LOCATION FROM conference GROUP BY LOCATION HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.Location FROM conference AS T1 INNER JOIN conference_participation AS T2 ON T1.Conference_ID = T2.Conference_ID GROUP BY T1.Location HAVING COUNT(T2.Conference_ID) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1067,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION ,  founded FROM institution",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1068,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION ,  founded FROM institution",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1069,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900",
    "pred": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900",
    "exec_result": 1
  },
  {
    "idx": 1070,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT count(*) FROM institution WHERE founded BETWEEN 1850 AND 1900",
    "pred": "SELECT COUNT(*) FROM institution WHERE Founded BETWEEN 1850 AND 1900",
    "exec_result": 1
  },
  {
    "idx": 1071,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1072,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name ,  LOCATION FROM institution ORDER BY founded DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1073,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.institution_name ,  count(*) FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1800 GROUP BY T2.institution_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1074,
    "db_id": "conference",
    "question": "",
    "gold": "select t1.institution_name ,  count(*) from institution as t1 join staff as t2 on t1.institution_id  =  t2.institution_id where t1.founded  >  1800 group by t2.institution_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1075,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)",
    "pred": "SELECT I.Institution_Name FROM institution I WHERE I.Institution_ID NOT IN (SELECT DISTINCT S.Institution_ID FROM staff S)",
    "exec_result": 1
  },
  {
    "idx": 1076,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT institution_name FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM staff)",
    "pred": "SELECT I.Institution_Name FROM institution I LEFT JOIN staff S ON I.Institution_ID = S.Institution_ID WHERE S.staff_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1077,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1078,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name FROM staff WHERE age  >  (SELECT avg(age) FROM staff)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1079,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT max(age) ,  min(age) FROM staff",
    "pred": "SELECT MAX(Age), MIN(Age) FROM staff WHERE Nationality = 'United States'",
    "exec_result": 0
  },
  {
    "idx": 1080,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT max(age) ,  min(age) FROM staff",
    "pred": "SELECT MAX(Age), MIN(Age) FROM staff",
    "exec_result": 1
  },
  {
    "idx": 1081,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  \"Canada\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1082,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM conference AS T1 JOIN conference_participation AS T2 ON T1.conference_id = T2.conference_id JOIN staff AS T3 ON T2.staff_id  =  T3.staff_id WHERE T3.nationality  =  \"Canada\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1083,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1084,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Speaker' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.role  =  'Sponsor'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1085,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1086,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'ACL' INTERSECT SELECT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.Conference_name  =  'Naccl'",
    "pred": "SELECT DISTINCT s.name FROM staff s JOIN conference_participation cp1 ON s.staff_ID = cp1.staff_ID JOIN conference c1 ON cp1.Conference_ID = c1.Conference_ID WHERE c1.Conference_Name = 'ACL' AND s.staff_ID IN (SELECT staff_ID FROM conference_participation cp2 JOIN conference c2 ON cp2.Conference_ID = c2.Conference_ID WHERE c2.Conference_Name = 'NACCL')",
    "exec_result": 0
  },
  {
    "idx": 1087,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1088,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT DISTINCT T1.name FROM staff AS T1 JOIN conference_participation AS T2 JOIN Conference AS T3 ON T1.staff_id  =  T2.staff_id AND T2.conference_id  =  T3.conference_id WHERE T3.year  =  2003 OR T3.year  =  2004",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1089,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1090,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name ,  T1.year ,  count(*) FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1091,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2",
    "pred": "SELECT C.Conference_Name FROM conference C JOIN ( SELECT Conference_ID, COUNT(staff_ID) AS total_attendees FROM conference_participation GROUP BY Conference_ID ORDER BY total_attendees DESC ) AS T ON C.Conference_ID = T.Conference_ID WHERE T.total_attendees >= ( SELECT MAX(total_attendees) FROM ( SELECT Conference_ID, COUNT(staff_ID) AS total_attendees FROM conference_participation GROUP BY Conference_ID ) AS T2 ORDER BY total_attendees DESC LIMIT 2 )",
    "exec_result": 0
  },
  {
    "idx": 1092,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.conference_name FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id GROUP BY T2.conference_id ORDER BY count(*) DESC LIMIT 2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1093,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  \"ACL\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1094,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT name ,  nationality FROM staff WHERE staff_id NOT IN (SELECT T2.staff_id FROM Conference AS T1 JOIN Conference_participation AS T2 ON T1.conference_id  =  T2.conference_id WHERE T1.Conference_Name  =  \"ACL\")",
    "pred": "SELECT DISTINCT s.name, s.Nationality FROM staff s LEFT JOIN conference_participation cp ON s.staff_ID = cp.staff_ID WHERE cp.Conference_ID IS NULL AND s.Nationality IS NOT NULL",
    "exec_result": 1
  },
  {
    "idx": 1095,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1096,
    "db_id": "conference",
    "question": "",
    "gold": "SELECT T1.Institution_Name ,  T1.location FROM institution AS T1 JOIN staff AS T2 ON T1.institution_id  =  T2.institution_id WHERE T2.staff_id NOT IN (SELECT T4.staff_id FROM Conference AS T3 JOIN Conference_participation AS T4 ON T3.conference_id  =  T4.conference_id WHERE T3.year  =  2004)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1097,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1",
    "pred": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1098,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills ORDER BY age DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1099,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1100,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  (SELECT avg(age) FROM PilotSkills) ORDER BY age",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1101,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT * FROM PilotSkills WHERE age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1102,
    "db_id": "pilot_1",
    "question": "",
    "gold": "select * from pilotskills where age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1103,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1104,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM PilotSkills WHERE age  <  35 AND plane_name  =  'Piper Cub'",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE age < 35 AND plane_name = 'Piper Cub'",
    "exec_result": 1
  },
  {
    "idx": 1105,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'",
    "pred": "SELECT Hangar.location FROM PilotSkills INNER JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.plane_name = 'F-14 Fighter'",
    "exec_result": 0
  },
  {
    "idx": 1106,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar WHERE plane_name  =  'F-14 Fighter'",
    "pred": "SELECT Hangar.location FROM PilotSkills INNER JOIN Hangar ON PilotSkills.plane_name = Hangar.plane_name WHERE PilotSkills.plane_name = 'F-14 Fighter'",
    "exec_result": 0
  },
  {
    "idx": 1107,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM hangar",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1108,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM hangar",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1109,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1110,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Jones'  AND age  =  32",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1111,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  >  40",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1112,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  >  40",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1113,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1114,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  35 AND plane_name  =  'B-52 Bomber'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1115,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1",
    "pred": "SELECT pilot_name FROM PilotSkills WHERE plane_name = 'Piper Cub' ORDER BY age LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1116,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' ORDER BY age LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1117,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT plane_name FROM Hangar GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1118,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT plane_name FROM PilotSkills GROUP BY plane_name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1119,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1120,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills GROUP BY plane_name ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1121,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1122,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.pilot_name) FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  'Chicago'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1123,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1124,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT plane_name FROM pilotskills WHERE pilot_name  =  'Smith' AND age  =  41",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1125,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT plane_name) FROM pilotskills",
    "pred": "SELECT COUNT(DISTINCT PilotSkills.plane_name) FROM PilotSkills",
    "exec_result": 1
  },
  {
    "idx": 1126,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(DISTINCT plane_name) FROM pilotskills",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1127,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1128,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE pilot_name  =  'Smith'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1129,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE age  >  40",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1130,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(plane_name) FROM pilotskills WHERE age  >  40",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1131,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1132,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age BETWEEN 30 AND 40 ORDER BY age",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1133,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills ORDER BY age DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1134,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills ORDER BY age DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1135,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar ORDER BY plane_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1136,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT LOCATION FROM hangar ORDER BY plane_name",
    "pred": "SELECT Hangar.plane_name, Hangar.location FROM Hangar ORDER BY Hangar.plane_name",
    "exec_result": 0
  },
  {
    "idx": 1137,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name",
    "pred": "SELECT DISTINCT T1.plane_name FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.plane_name",
    "exec_result": 0
  },
  {
    "idx": 1138,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills ORDER BY plane_name",
    "pred": "SELECT DISTINCT T1.plane_name FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name ORDER BY T1.plane_name",
    "exec_result": 0
  },
  {
    "idx": 1139,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1140,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills ORDER BY age  >  40 OR age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1141,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30",
    "pred": "SELECT DISTINCT P.pilot_name, P.age FROM PilotSkills AS P WHERE (P.plane_name = 'Piper Cub' AND P.age > 35) OR (P.plane_name = 'F-14 Fighter' AND P.age < 30)",
    "exec_result": 1
  },
  {
    "idx": 1142,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'Piper Cub' AND age  >  35 UNION SELECT pilot_name ,  age FROM pilotskills WHERE plane_name  =  'F-14 Fighter' AND age  <  30",
    "pred": "SELECT pilot_name, age FROM PilotSkills WHERE (plane_name = 'Piper Cub' AND age > 35) OR (plane_name = 'F-14 Fighter' AND age < 30)",
    "exec_result": 1
  },
  {
    "idx": 1143,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1144,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' EXCEPT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT DISTINCT T1.pilot_name FROM PilotSkills AS T1 LEFT JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.plane_name = 'Piper Cub' AND T1.plane_name != 'B-52 Bomber'",
    "exec_result": 0
  },
  {
    "idx": 1145,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1146,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' INTERSECT SELECT pilot_name FROM pilotskills WHERE plane_name  =  'B-52 Bomber'",
    "pred": "SELECT DISTINCT P1.pilot_name FROM PilotSkills P1 INNER JOIN PilotSkills P2 ON P1.plane_name = P2.plane_name WHERE P1.plane_name = 'Piper Cub' AND P2.plane_name = 'B-52 Bomber'",
    "exec_result": 0
  },
  {
    "idx": 1147,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) FROM pilotskills",
    "pred": "SELECT AVG(age) AS average_age, MIN(age) AS smallest_age FROM PilotSkills",
    "exec_result": 1
  },
  {
    "idx": 1148,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  min(age) FROM pilotskills",
    "pred": "SELECT AVG(age) AS average_age, MIN(age) AS minimum_age FROM PilotSkills",
    "exec_result": 1
  },
  {
    "idx": 1149,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  \"Boston\"",
    "pred": "SELECT DISTINCT T1.pilot_name FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location = 'Austin' OR T2.location = 'Boston'",
    "exec_result": 0
  },
  {
    "idx": 1150,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\" INTERSECT SELECT T1.pilot_name FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.LOCATION  =  \"Boston\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1151,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1152,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE plane_name  =  'Piper Cub' OR plane_name  =  'F-14 Fighter'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1153,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1154,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT avg(age) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1155,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT plane_name, COUNT(*) FROM Hangar GROUP BY plane_name",
    "exec_result": 0
  },
  {
    "idx": 1156,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1157,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1158,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name ORDER BY plane_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1159,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1160,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name ,  plane_name ,  max(age) FROM pilotskills GROUP BY plane_name",
    "pred": "SELECT T1.plane_name, T2.pilot_name FROM PilotSkills AS T1 INNER JOIN PilotSkills AS T2 ON T1.plane_name = T2.plane_name AND T2.age = (SELECT MIN(age) FROM PilotSkills WHERE plane_name = T1.plane_name) ORDER BY T2.age DESC;",
    "exec_result": 0
  },
  {
    "idx": 1161,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1162,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT max(age) ,  pilot_name FROM pilotskills GROUP BY pilot_name",
    "pred": "SELECT DISTINCT T1.pilot_name, MAX(T1.age) FROM PilotSkills AS T1 JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name GROUP BY T1.pilot_name",
    "exec_result": 1
  },
  {
    "idx": 1163,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1164,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(T1.pilot_name) ,  avg(T1.age) ,  T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name GROUP BY T2.location",
    "pred": "SELECT H.location, COUNT(P.pilot_name) AS num_pilots, AVG(P.age) AS avg_age FROM Hangar AS H JOIN PilotSkills AS P ON H.plane_name = P.plane_name GROUP BY H.location",
    "exec_result": 1
  },
  {
    "idx": 1165,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1166,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) ,  plane_name FROM pilotskills GROUP BY plane_name HAVING avg(age)  <  35",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1167,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1168,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T2.location FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T1.age  =  (SELECT min(age) FROM pilotskills)",
    "pred": "SELECT H.location FROM PilotSkills PS INNER JOIN Hangar H ON PS.plane_name = H.plane_name ORDER BY PS.age LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1169,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1170,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT T1.pilot_name ,  T1.age FROM pilotskills AS T1 JOIN hangar AS T2 ON T1.plane_name  =  T2.plane_name WHERE T2.location  =  \"Austin\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1171,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name",
    "pred": "SELECT DISTINCT T1.pilot_name FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.plane_name = 'Piper Cub' AND T1.age > (SELECT MIN(T3.age) FROM PilotSkills AS T3 WHERE T3.plane_name = 'Piper Cub') ORDER BY T1.pilot_name",
    "exec_result": 0
  },
  {
    "idx": 1172,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT pilot_name FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub') ORDER BY pilot_name",
    "pred": "SELECT DISTINCT T1.pilot_name FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.plane_name = 'Piper Cub' ORDER BY T1.pilot_name",
    "exec_result": 0
  },
  {
    "idx": 1173,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1174,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(*) FROM pilotskills WHERE age  <  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'F-14 Fighter')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1175,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'",
    "pred": "SELECT DISTINCT T1.plane_name FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T1.plane_name LIKE '%Bomber%'",
    "exec_result": 1
  },
  {
    "idx": 1176,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT DISTINCT plane_name FROM pilotskills WHERE plane_name LIKE '%Bomber%'",
    "pred": "SELECT DISTINCT T1.plane_name FROM PilotSkills AS T1 INNER JOIN Hangar AS T2 ON T1.plane_name = T2.plane_name WHERE T2.location LIKE '%Bomber%'",
    "exec_result": 0
  },
  {
    "idx": 1177,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1178,
    "db_id": "pilot_1",
    "question": "",
    "gold": "SELECT count(pilot_name) FROM pilotskills WHERE age  >  (SELECT min(age) FROM pilotskills WHERE plane_name  =  'Piper Cub')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1179,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM district ORDER BY Area_km DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1180,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT area_km ,  Government_website FROM district ORDER BY Population LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1181,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  population FROM district WHERE area_km  >  (SELECT avg(area_km) FROM district)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1182,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT max(area_km) ,  avg(area_km) FROM district",
    "pred": "SELECT MAX(Area_km), AVG(Area_km) FROM district",
    "exec_result": 1
  },
  {
    "idx": 1183,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT sum(population) FROM district ORDER BY area_km DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1184,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  Government_website ,  district_id FROM district ORDER BY Population",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1185,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM district WHERE Government_website LIKE \"%gov%\"",
    "pred": "SELECT DISTINCT D.Name FROM district D, spokesman_district SD, spokesman S WHERE D.District_ID = SD.District_ID AND S.Spokesman_ID = SD.Spokesman_ID AND D.Government_website LIKE '%gov%'",
    "exec_result": 0
  },
  {
    "idx": 1186,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT district_id ,  name FROM district WHERE area_km  >  3000 OR population  >  4000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1187,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  speach_title FROM spokesman",
    "pred": "SELECT spokesman.Name, spokesman.Speach_title FROM spokesman",
    "exec_result": 1
  },
  {
    "idx": 1188,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT avg(points) ,  avg(age) FROM spokesman WHERE rank_position  =  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1189,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name ,  points FROM spokesman WHERE age  <  40",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1190,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman ORDER BY age DESC LIMIT 1",
    "pred": "SELECT `Name` FROM spokesman WHERE Age = (SELECT MAX(Age) FROM spokesman)",
    "exec_result": 1
  },
  {
    "idx": 1191,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman WHERE points  <  (SELECT avg(points) FROM spokesman)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1192,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1193,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID WHERE t2.start_year  <  2004",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1194,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name ,  count(*) FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1195,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  1 INTERSECT SELECT t3.name FROM spokesman AS t1 JOIN spokesman_district AS t2 ON t1.Spokesman_ID  =  t2.Spokesman_ID JOIN district AS t3 ON t3.district_id  =  t2.district_id WHERE t1.rank_position  =  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1196,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT t1.name FROM district AS t1 JOIN spokesman_district AS t2 ON t1.District_ID  =  t2.District_ID GROUP BY t2.District_ID HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1197,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT count(*) FROM district WHERE district_id NOT IN (SELECT district_id FROM spokesman_district)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1198,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT name FROM spokesman WHERE Spokesman_ID NOT IN (SELECT Spokesman_ID FROM spokesman_district)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1199,
    "db_id": "district_spokesman",
    "question": "",
    "gold": "SELECT sum(population) ,  avg(population) FROM district WHERE district_id IN (SELECT district_id FROM spokesman_district)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1200,
    "db_id": "art_1",
    "question": "",
    "gold": "select title from sculptures order by year desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1201,
    "db_id": "art_1",
    "question": "",
    "gold": "select title from sculptures order by year desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1202,
    "db_id": "art_1",
    "question": "",
    "gold": "select title ,  location from paintings order by year limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1203,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1204,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1205,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM sculptures WHERE LOCATION  =  \"Gallery 226\"",
    "pred": "SELECT S.title FROM Sculptures S WHERE S.location = 'Gallery 226'",
    "exec_result": 1
  },
  {
    "idx": 1206,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM paintings",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1207,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM paintings",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1208,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM sculptures",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1209,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION FROM sculptures",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1210,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT medium FROM paintings WHERE paintingID  =  80",
    "pred": "SELECT medium FROM Paintings WHERE paintingID = 80",
    "exec_result": 1
  },
  {
    "idx": 1211,
    "db_id": "art_1",
    "question": "",
    "gold": "select medium from paintings where paintingid  =  80",
    "pred": "SELECT medium FROM Paintings WHERE paintingID = 80",
    "exec_result": 1
  },
  {
    "idx": 1212,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1213,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists WHERE birthYear  >  1850",
    "pred": "SELECT CONCAT(fname, ' ', lname) AS full_name FROM Artists WHERE birthYear > 1850",
    "exec_result": 0
  },
  {
    "idx": 1214,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  YEAR FROM sculptures WHERE LOCATION != \"Gallery 226\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1215,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  YEAR FROM sculptures WHERE LOCATION != \"Gallery 226\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1216,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1217,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  <  1900",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1218,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1219,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.birthYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.year  >  1920",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1220,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1221,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT lname ,  fname FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1222,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1223,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT deathYear - birthYear FROM artists ORDER BY deathYear - birthYear LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1224,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1225,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT fname  ,  deathYear - birthYear FROM artists ORDER BY deathYear - birthYear DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1226,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1227,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) FROM paintings WHERE LOCATION  =  \"Gallery 240\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1228,
    "db_id": "art_1",
    "question": "",
    "gold": "select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1229,
    "db_id": "art_1",
    "question": "",
    "gold": "select count(*) from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid order by t1.deathyear - t1.birthyear desc limit 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1230,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1231,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title ,   T2.year FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Mary\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1232,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1233,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.width_mm FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.birthYear  <  1850",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1234,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1235,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.location ,   T2.medium FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.fname  =  \"Pablo\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1236,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1237,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1238,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  \"lithograph\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1239,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" INTERSECT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN paintings AS T4 ON T3.artistID  =  T4.painterID WHERE T4.medium  =  \"lithograph\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1240,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"",
    "pred": "SELECT `birthYear` FROM Artists WHERE EXISTS (SELECT 1 FROM Paintings WHERE Paintings.year = 1884 AND Paintings.mediumOn = 'canvas' AND Paintings.painterID = Artists.artistID)",
    "exec_result": 1
  },
  {
    "idx": 1241,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.birthYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  =  1884 AND mediumOn  =  \"canvas\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1242,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT DISTINCT A.fname FROM Artists A JOIN Paintings P ON A.artistID = P.painterID WHERE P.location = 'Gallery 241' AND P.medium = 'oil'",
    "exec_result": 1
  },
  {
    "idx": 1243,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1244,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  medium FROM paintings GROUP BY medium",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1245,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT T1.medium, COUNT(*) FROM ( SELECT DISTINCT medium FROM Paintings UNION ALL SELECT DISTINCT medium FROM Sculptures ) AS T1 GROUP BY T1.medium",
    "exec_result": 0
  },
  {
    "idx": 1246,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT T1.medium, AVG(T1.height_mm) AS average_height FROM Paintings AS T1 GROUP BY T1.medium",
    "exec_result": 1
  },
  {
    "idx": 1247,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  medium FROM paintings GROUP BY medium",
    "pred": "SELECT T1.medium, AVG(T1.height_mm) FROM Paintings AS T1 GROUP BY T1.medium",
    "exec_result": 1
  },
  {
    "idx": 1248,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1249,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT count(*) ,  LOCATION FROM paintings WHERE YEAR  <  1900 GROUP BY LOCATION",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1250,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1251,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR  >  1910 AND medium  =  \"oil\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1252,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT DISTINCT Paintings.painterID FROM Paintings WHERE location = 'Gallery 240' AND medium = 'oil'",
    "exec_result": 1
  },
  {
    "idx": 1253,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT painterID FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 240\"",
    "pred": "SELECT DISTINCT Paintings.painterID FROM Paintings WHERE location = 'Gallery 240' AND medium = 'oil'",
    "exec_result": 1
  },
  {
    "idx": 1254,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1255,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings WHERE height_mm  >  (SELECT min(height_mm) FROM paintings WHERE mediumOn  =  \"canvas\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1256,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")",
    "pred": "SELECT DISTINCT P.paintingID FROM Paintings P WHERE P.year < (SELECT MIN(year) FROM Paintings WHERE location = 'Gallery 240')",
    "exec_result": 0
  },
  {
    "idx": 1257,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <  (SELECT max(YEAR) FROM paintings WHERE LOCATION  =  \"Gallery 240\")",
    "pred": "SELECT DISTINCT P.paintingID FROM Paintings P WHERE P.year < (SELECT MIN(P2.year) FROM Paintings P2 WHERE P2.location = 'Gallery 240')",
    "exec_result": 0
  },
  {
    "idx": 1258,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "SELECT MIN(year) FROM Paintings",
    "exec_result": 0
  },
  {
    "idx": 1259,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings ORDER BY YEAR LIMIT 1",
    "pred": "SELECT MIN(year) FROM Paintings",
    "exec_result": 0
  },
  {
    "idx": 1260,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1261,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID WHERE T2.title LIKE \"%female%\"",
    "pred": "SELECT CONCAT(A.fname, ' ', A.lname) AS full_name FROM Artists A INNER JOIN Sculptures S ON A.artistID = S.sculptorID WHERE S.title LIKE '%female%'",
    "exec_result": 0
  },
  {
    "idx": 1262,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY title",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 ORDER BY T1.title",
    "exec_result": 1
  },
  {
    "idx": 1263,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY title",
    "pred": "SELECT DISTINCT T1.title FROM Paintings AS T1 ORDER BY T1.title",
    "exec_result": 1
  },
  {
    "idx": 1264,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY height_mm",
    "pred": "SELECT DISTINCT title FROM Paintings ORDER BY LENGTH(title)",
    "exec_result": 0
  },
  {
    "idx": 1265,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT title FROM paintings ORDER BY height_mm",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1266,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1267,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE YEAR BETWEEN 1900 AND 1950 UNION SELECT title FROM sculptures WHERE YEAR BETWEEN 1900 AND 1950",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1268,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1269,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T2.title FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T1.artistID  =  222 UNION SELECT T4.title FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID WHERE T3.artistID  =  222",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1270,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1271,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.artistID FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.year  <  1900 GROUP BY T1.artistID ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1272,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1273,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `fname` FROM Artists WHERE `artistID` = (SELECT `artistID` FROM (SELECT COUNT(*) AS cnt, `sculptorID` FROM Sculptures GROUP BY `sculptorID`) AS T WHERE T.cnt = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt, `sculptorID` FROM Sculptures GROUP BY `sculptorID`) AS T2))",
    "exec_result": 0
  },
  {
    "idx": 1274,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1275,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title FROM paintings WHERE width_mm  <  600 OR height_mm  >  800",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1276,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930",
    "pred": "SELECT DISTINCT P.location FROM Paintings P WHERE P.year < 1885 OR P.year > 1930",
    "exec_result": 1
  },
  {
    "idx": 1277,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  < 1885 OR YEAR  >  1930",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1278,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1279,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >  500 AND height_mm  <  2000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1280,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1281,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"panel\" INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE mediumOn  =  \"canvas\"",
    "pred": "SELECT DISTINCT P.location FROM Paintings P INNER JOIN (SELECT location FROM Paintings WHERE medium = 'panel' OR medium = 'canvas') AS T ON P.location = T.location",
    "exec_result": 0
  },
  {
    "idx": 1282,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1283,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 INTERSECT SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  >  1930",
    "pred": "SELECT DISTINCT location FROM Paintings WHERE year < 1885 OR year > 1930",
    "exec_result": 0
  },
  {
    "idx": 1284,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT AVG(height_mm) AS average_height, AVG(width_mm) AS average_width FROM Paintings WHERE medium = 'oil' AND location = 'Gallery 241'",
    "exec_result": 1
  },
  {
    "idx": 1285,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) FROM paintings WHERE medium  =  \"oil\" AND LOCATION  =  \"Gallery 241\"",
    "pred": "SELECT AVG(height_mm) AS average_height, AVG(width_mm) AS average_width FROM Paintings WHERE medium = 'oil' AND location = 'Gallery 241'",
    "exec_result": 1
  },
  {
    "idx": 1286,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1287,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  paintingID FROM paintings WHERE YEAR  <  1900",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1288,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1289,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT max(height_mm) ,  max(width_mm) ,  YEAR FROM paintings GROUP BY YEAR ORDER BY YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1290,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1291,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT avg(height_mm) ,  avg(width_mm) ,  painterID FROM paintings GROUP BY painterID ORDER BY title",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1292,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1293,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.fname ,  count(*) FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1294,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID GROUP BY T2.painterID HAVING count(*)  <=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1295,
    "db_id": "art_1",
    "question": "",
    "gold": "select t1.deathyear from artists as t1 join paintings as t2 on t1.artistid  =  t2.painterid group by t2.painterid having count(*)  <  4",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1296,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1297,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.deathYear FROM artists AS T1 JOIN sculptures AS T2 ON T1.artistID  =  T2.sculptorID GROUP BY T2.sculptorID ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1298,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1299,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  height_mm FROM paintings WHERE LOCATION  =  'Gallery 240' ORDER BY width_mm DESC LIMIT 1",
    "pred": "SELECT height_mm, paintingID FROM Paintings WHERE location = 'Gallery 240' ORDER BY height_mm DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1300,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')",
    "pred": "SELECT paintingID FROM Paintings WHERE year < (SELECT MIN(year) FROM Paintings WHERE location = 'Gallery 240')",
    "exec_result": 1
  },
  {
    "idx": 1301,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE YEAR  <   (SELECT min(YEAR) FROM paintings WHERE LOCATION  =  'Gallery 240')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1302,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1303,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID FROM paintings WHERE height_mm  >   (SELECT max(height_mm) FROM paintings WHERE YEAR  >  1900)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1304,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1305,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID WHERE T2.medium  =  \"oil\" GROUP BY T2.painterID ORDER BY count(*) DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1306,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1307,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT paintingID ,  title ,  LOCATION FROM paintings WHERE medium  =  \"oil\" ORDER BY YEAR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1308,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1309,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT title ,  LOCATION ,  YEAR FROM paintings WHERE height_mm  >  1000 ORDER BY title",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1310,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1311,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT T1.lname ,  T1.fname FROM artists AS T1 JOIN paintings AS T2 ON T1.artistID  =  T2.painterID EXCEPT SELECT T3.lname ,  T3.fname FROM artists AS T3 JOIN sculptures AS T4 ON T3.artistID  =  T4.sculptorID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1312,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != \"canvas\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1313,
    "db_id": "art_1",
    "question": "",
    "gold": "SELECT DISTINCT LOCATION FROM paintings WHERE YEAR  <  1885 AND mediumOn != \"canvas\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1314,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(*) FROM race",
    "pred": "SELECT COUNT(*) FROM race;",
    "exec_result": 1
  },
  {
    "idx": 1315,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(*) FROM race",
    "pred": "SELECT COUNT(*) FROM race;",
    "exec_result": 1
  },
  {
    "idx": 1316,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC",
    "pred": "SELECT DISTINCT race.Winning_driver, race.Winning_team FROM race ORDER BY race.Winning_team ASC",
    "exec_result": 1
  },
  {
    "idx": 1317,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver ,  Winning_team FROM race ORDER BY Winning_team ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1318,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'",
    "pred": "SELECT DISTINCT race.Winning_driver FROM race INNER JOIN driver ON race.Driver_ID = driver.Driver_ID WHERE race.Pole_Position != 'Junior Strous'",
    "exec_result": 1
  },
  {
    "idx": 1319,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_driver FROM race WHERE Pole_Position != 'Junior Strous'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1320,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1321,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT CONSTRUCTOR FROM driver ORDER BY Age ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1322,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1323,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT DISTINCT Entrant FROM driver WHERE Age  >=  20",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1324,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT max(Age) ,  min(Age) FROM driver",
    "pred": "SELECT MAX(Age), MIN(Age) FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1325,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT max(Age) ,  min(Age) FROM driver",
    "pred": "SELECT MIN(Age) AS MinAge, MAX(Age) AS MaxAge FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1326,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1327,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT count(DISTINCT Engine) FROM driver WHERE Age  >  30 OR Age  <  20",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1328,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1329,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver ORDER BY Driver_Name DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1330,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1331,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID",
    "pred": "SELECT DISTINCT d.Driver_Name, r.Race_Name FROM driver AS d JOIN race AS r ON d.Driver_ID = r.Driver_ID",
    "exec_result": 1
  },
  {
    "idx": 1332,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1333,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  COUNT(*) FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1334,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1335,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1336,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1337,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name ,  T1.Age FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID GROUP BY T1.Driver_ID HAVING COUNT(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1338,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1339,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T2.Race_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE T1.Age  >=  26",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1340,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != \"Bugatti\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1341,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE CONSTRUCTOR != \"Bugatti\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1342,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1343,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR ,  COUNT(*) FROM driver GROUP BY CONSTRUCTOR",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1344,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Engine, COUNT(*) AS Engine_Count FROM driver GROUP BY Engine ORDER BY Engine_Count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1345,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT Engine, COUNT(*) FROM driver GROUP BY Engine ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1346,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.engine FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.engine HAVING COUNT(*) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1347,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Engine FROM driver GROUP BY Engine HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.engine FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID = T2.Driver_ID GROUP BY T1.engine HAVING COUNT(T1.engine) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1348,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1349,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver WHERE Driver_ID NOT IN (SELECT Driver_ID FROM race)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1350,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1351,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT CONSTRUCTOR FROM driver WHERE Age  <  20 INTERSECT SELECT CONSTRUCTOR FROM driver WHERE Age  >  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1352,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT race.Winning_team FROM race INNER JOIN driver ON race.Driver_ID = driver.Driver_ID GROUP BY race.Winning_team HAVING COUNT(*) > 1",
    "exec_result": 1
  },
  {
    "idx": 1353,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Winning_team FROM race GROUP BY Winning_team HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1354,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"Carl Skerlong\" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1355,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"Carl Skerlong\" INTERSECT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1356,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1357,
    "db_id": "car_road_race",
    "question": "",
    "gold": "SELECT Driver_Name FROM driver EXCEPT SELECT T1.Driver_Name FROM driver AS T1 JOIN race AS T2 ON T1.Driver_ID  =  T2.Driver_ID WHERE Pole_Position  =  \"James Hinchcliffe\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1358,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(*) FROM languages",
    "pred": "SELECT COUNT(*) FROM languages",
    "exec_result": 1
  },
  {
    "idx": 1359,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(*) FROM languages",
    "pred": "SELECT COUNT(*) FROM languages",
    "exec_result": 1
  },
  {
    "idx": 1360,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages ORDER BY name ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1361,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages ORDER BY name ASC",
    "pred": "SELECT name FROM languages ORDER BY name ASC",
    "exec_result": 1
  },
  {
    "idx": 1362,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE name LIKE \"%ish%\"",
    "pred": "SELECT `name` FROM languages WHERE `name` LIKE '%ish%'",
    "exec_result": 1
  },
  {
    "idx": 1363,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE name LIKE \"%ish%\"",
    "pred": "SELECT `name` FROM languages WHERE `name` LIKE '%ish%'",
    "exec_result": 1
  },
  {
    "idx": 1364,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY overall_score DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1365,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY overall_score DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1366,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(justice_score) FROM countries",
    "pred": "SELECT AVG(justice_score) FROM countries",
    "exec_result": 1
  },
  {
    "idx": 1367,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(justice_score) FROM countries",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1368,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != \"Norway\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1369,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT max(health_score) ,  min(health_score) FROM countries WHERE name != \"Norway\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1370,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(DISTINCT language_id) FROM official_languages",
    "pred": "SELECT COUNT(DISTINCT language_id) FROM official_languages",
    "exec_result": 1
  },
  {
    "idx": 1371,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT count(DISTINCT language_id) FROM official_languages",
    "pred": "SELECT COUNT(DISTINCT o.language_id) FROM official_languages o",
    "exec_result": 1
  },
  {
    "idx": 1372,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY education_score DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1373,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY education_score DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1374,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1",
    "pred": "SELECT `name` FROM countries WHERE politics_score = (SELECT MAX(politics_score) FROM countries)",
    "exec_result": 1
  },
  {
    "idx": 1375,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries ORDER BY politics_score DESC LIMIT 1",
    "pred": "SELECT `name` FROM countries WHERE politics_score = (SELECT MAX(politics_score) FROM countries)",
    "exec_result": 1
  },
  {
    "idx": 1376,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id",
    "pred": "SELECT countries.name, languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id",
    "exec_result": 1
  },
  {
    "idx": 1377,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.name ,  T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id",
    "pred": "SELECT countries.name, languages.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id JOIN languages ON official_languages.language_id = languages.id",
    "exec_result": 1
  },
  {
    "idx": 1378,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1379,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name ,  COUNT(*) FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.name",
    "pred": "SELECT l.name, COUNT(c.id) FROM languages AS l JOIN official_languages AS ol ON l.id = ol.language_id JOIN countries AS c ON ol.country_id = c.id GROUP BY l.id",
    "exec_result": 1
  },
  {
    "idx": 1380,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT l.name FROM languages l JOIN official_languages o ON l.id = o.language_id GROUP BY l.id ORDER BY COUNT(o.country_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1381,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT l.name FROM languages l JOIN official_languages o ON l.id = o.language_id GROUP BY l.id ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1382,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id WHERE T2.country_id IN (SELECT country_id FROM official_languages GROUP BY country_id HAVING COUNT(language_id) >= 2)",
    "exec_result": 0
  },
  {
    "idx": 1383,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id HAVING COUNT(*)  >=  2",
    "pred": "SELECT DISTINCT T1.name FROM languages AS T1 INNER JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.name HAVING COUNT(T2.country_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 1384,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  \"English\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1385,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT avg(T1.overall_score) FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T3.name  =  \"English\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1386,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3",
    "pred": "SELECT l.name FROM languages l JOIN official_languages ol ON l.id = ol.language_id GROUP BY l.name ORDER BY COUNT(ol.country_id) DESC LIMIT 3;",
    "exec_result": 0
  },
  {
    "idx": 1387,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T2.name FROM official_languages AS T1 JOIN languages AS T2 ON T1.language_id  =  T2.id GROUP BY T2.id ORDER BY COUNT(*) DESC LIMIT 3",
    "pred": "SELECT T1.name FROM languages AS T1 JOIN official_languages AS T2 ON T1.id = T2.language_id GROUP BY T1.id ORDER BY COUNT(T2.country_id) DESC LIMIT 3",
    "exec_result": 1
  },
  {
    "idx": 1388,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1389,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id GROUP BY T3.id ORDER BY avg(T1.overall_score) DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1390,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT c.name FROM countries c JOIN official_languages o ON c.id = o.country_id GROUP BY c.id ORDER BY COUNT(o.language_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1391,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T1.Name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT countries.name FROM countries JOIN official_languages ON countries.id = official_languages.country_id GROUP BY official_languages.country_id ORDER BY COUNT(official_languages.language_id) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1392,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)",
    "pred": "SELECT DISTINCT l.name FROM languages l LEFT JOIN official_languages ol ON l.id = ol.language_id WHERE ol.country_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1393,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM languages WHERE id NOT IN (SELECT language_id FROM official_languages)",
    "pred": "SELECT DISTINCT l.name FROM languages l LEFT JOIN official_languages ol ON l.id = ol.language_id WHERE ol.country_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1394,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)",
    "pred": "SELECT c.name FROM countries c LEFT JOIN official_languages o ON c.id = o.country_id WHERE o.language_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1395,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT name FROM countries WHERE id NOT IN (SELECT country_id FROM official_languages)",
    "pred": "SELECT c.name FROM countries c LEFT JOIN official_languages o ON c.id = o.country_id WHERE o.language_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1396,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90",
    "pred": "SELECT T1.name FROM languages AS T1 WHERE EXISTS ( SELECT 1 FROM countries AS T2 WHERE T2.overall_score > 95 AND T2.overall_score < 90 AND EXISTS ( SELECT 1 FROM official_languages AS T3 WHERE T3.language_id = T1.id AND T3.country_id = T2.id ) )",
    "exec_result": 0
  },
  {
    "idx": 1397,
    "db_id": "country_language",
    "question": "",
    "gold": "SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  >  95 INTERSECT SELECT T3.name FROM countries AS T1 JOIN official_languages AS T2 ON T1.id  =  T2.country_id JOIN languages AS T3 ON T2.language_id  =  T3.id WHERE T1.overall_score  <  90",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1398,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT country ,  town_city FROM Addresses;",
    "pred": "SELECT DISTINCT T1.country, T1.town_city FROM Addresses AS T1",
    "exec_result": 1
  },
  {
    "idx": 1399,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT country ,  town_city FROM Addresses;",
    "pred": "SELECT Addresses.country, Addresses.town_city FROM Addresses",
    "exec_result": 1
  },
  {
    "idx": 1400,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;",
    "pred": "SELECT T1.county_state_province FROM Addresses AS T1 INNER JOIN Properties AS T2 ON T1.address_id = T2.property_address_id",
    "exec_result": 1
  },
  {
    "idx": 1401,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT DISTINCT T1.county_state_province FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1402,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1403,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT feature_description FROM Features WHERE feature_name  =  'rooftop';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1404,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT feature_name, feature_description FROM Property_Features JOIN Features ON Property_Features.feature_id = Features.feature_id GROUP BY feature_name, feature_description ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1405,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.feature_name ,  T1.feature_description FROM Features AS T1 JOIN Property_Features AS T2 ON T1.feature_id  =  T2.feature_id GROUP BY T1.feature_name ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT f.feature_name, f.feature_description FROM Features f JOIN Property_Features pf ON f.feature_id = pf.feature_id JOIN Properties prop ON pf.property_id = prop.property_id GROUP BY f.feature_id ORDER BY COUNT(pf.feature_id) DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1406,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT min(room_count) FROM Properties;",
    "pred": "SELECT MIN(Properties.room_count) FROM Properties",
    "exec_result": 1
  },
  {
    "idx": 1407,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT min(room_count) FROM Properties;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1408,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1409,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties WHERE parking_lots  =  1 OR garage_yn  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1410,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE \"%Mother\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1411,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.age_category_code FROM Ref_User_Categories AS T1 JOIN Users AS T2 ON T1.user_category_code  =  T2.user_category_code WHERE T1.User_category_description LIKE \"%Mother\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1412,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1413,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.first_name FROM Users AS T1 JOIN Properties AS T2 ON T2.owner_user_id  =  T1.User_id GROUP BY T1.User_id ORDER BY count(*) DESC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1414,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1415,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(T3.room_count) FROM Property_Features AS T1 JOIN Features AS T2 ON T1.feature_id  =  T2.feature_id JOIN Properties AS T3 ON T1.property_id  =  T3.property_id WHERE T2.feature_name  =  'garden';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1416,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1417,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T2.town_city FROM Properties AS T1 JOIN Addresses AS T2 ON T1.property_address_id  =  T2.address_id JOIN Property_Features AS T3 ON T1.property_id  =  T3.property_id JOIN Features AS T4 ON T4.feature_id  =  T3.feature_id WHERE T4.feature_name  =  'swimming pool';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1418,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1419,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT property_id ,  vendor_requested_price FROM Properties ORDER BY vendor_requested_price LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1420,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(room_count) FROM Properties;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1421,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT avg(room_count) FROM Properties;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1422,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(DISTINCT room_size) FROM Rooms;",
    "pred": "SELECT COUNT(DISTINCT room_size) FROM Rooms",
    "exec_result": 1
  },
  {
    "idx": 1423,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(DISTINCT room_size) FROM Rooms;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1424,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;",
    "pred": "SELECT user_id, search_string FROM User_Searches GROUP BY user_id HAVING COUNT(*) >= 2",
    "exec_result": 0
  },
  {
    "idx": 1425,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_seq ,  user_id FROM User_Searches GROUP BY user_id HAVING count(*) >= 2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1426,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT max(search_datetime) FROM User_Searches;",
    "pred": "SELECT MAX(search_datetime) FROM User_Searches",
    "exec_result": 1
  },
  {
    "idx": 1427,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT max(search_datetime) FROM User_Searches;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1428,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1429,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_datetime ,  search_string FROM User_Searches ORDER BY search_string DESC;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1430,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );",
    "pred": "SELECT DISTINCT A.zip_postcode FROM Properties AS P JOIN Users AS U ON P.owner_user_id = U.user_id JOIN Addresses AS A ON P.property_address_id = A.address_id WHERE U.user_id NOT IN (SELECT DISTINCT U2.user_id FROM Users AS U2 WHERE U2.is_seller = '1')",
    "exec_result": 0
  },
  {
    "idx": 1431,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Properties AS T2 ON T1.address_id  =  T2.property_address_id WHERE T2.owner_user_id NOT IN ( SELECT owner_user_id FROM Properties GROUP BY owner_user_id HAVING count(*)  <=  2 );",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1432,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1433,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.user_category_code ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1434,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;",
    "pred": "SELECT Ref_User_Categories.user_category_description FROM Users JOIN Ref_User_Categories ON Users.user_category_code = Ref_User_Categories.user_category_code WHERE Users.user_id = (SELECT user_id FROM User_Searches ORDER BY search_datetime LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 1435,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.age_category_code FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id ORDER BY T2.search_datetime LIMIT 1;",
    "pred": "SELECT `age_category_description` FROM Ref_Age_Categories WHERE `age_category_code` = (SELECT `age_category_code` FROM Users WHERE Users.user_id = (SELECT user_id FROM User_Searches ORDER BY search_datetime ASC LIMIT 1))",
    "exec_result": 0
  },
  {
    "idx": 1436,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1437,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT login_name FROM Users WHERE user_category_code  =  'Senior Citizen' ORDER BY first_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1438,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;",
    "pred": "SELECT COUNT(*) FROM Users WHERE is_buyer = 1;",
    "exec_result": 1
  },
  {
    "idx": 1439,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id WHERE T1.is_buyer  =  1;",
    "pred": "SELECT COUNT(*) FROM Users WHERE is_buyer = 1;",
    "exec_result": 1
  },
  {
    "idx": 1440,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT date_registered FROM Users WHERE login_name  =  'ratione';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1441,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT date_registered FROM Users WHERE login_name  =  'ratione';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1442,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1443,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name ,  login_name FROM Users WHERE is_seller  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1444,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1445,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.line_1_number_building ,  T1.line_2_number_street ,  T1.town_city FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.user_category_code  =  'Senior Citizen';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1446,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1447,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) FROM Properties GROUP BY property_id HAVING count(*)  >= 2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1448,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;",
    "pred": "SELECT COUNT(photo_seq) AS photo_count FROM Property_Photos WHERE property_id IN (SELECT DISTINCT property_id FROM Properties)",
    "exec_result": 0
  },
  {
    "idx": 1449,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT count(*) ,  property_id FROM Property_Photos GROUP BY property_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1450,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;",
    "pred": "SELECT Users.user_id, COUNT(Property_Photos.photo_filename) AS photo_count FROM Users LEFT JOIN Properties ON Users.user_id = Properties.owner_user_id LEFT JOIN Property_Photos ON Properties.property_id = Property_Photos.property_id GROUP BY Users.user_id",
    "exec_result": 0
  },
  {
    "idx": 1451,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.owner_user_id ,  count(*) FROM Properties AS T1 JOIN Property_Photos AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.owner_user_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1452,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1453,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT sum(T1.price_max) FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T2.user_category_code  =  'Single Mother' OR T2.user_category_code  =  'Student';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1454,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1455,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.datestamp ,  T2.property_name FROM User_Property_History AS T1 JOIN Properties AS T2 ON T1.property_id  =  T2.property_id ORDER BY datestamp;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1456,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Ref_Property_Types.property_type_description, Ref_Property_Types.property_type_code FROM Ref_Property_Types GROUP BY Ref_Property_Types.property_type_code ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1457,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.property_type_description ,  T1.property_type_code FROM Ref_Property_Types AS T1 JOIN Properties AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT T1.`property_type_description`, COUNT(*) AS `count` FROM Ref_Property_Types AS T1 GROUP BY T1.`property_type_description` ORDER BY `count` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1458,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1459,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT age_category_description FROM Ref_Age_Categories WHERE age_category_code  =  'Over 60';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1460,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size",
    "pred": "SELECT room_size, COUNT(*) FROM Rooms GROUP BY room_size",
    "exec_result": 1
  },
  {
    "idx": 1461,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT room_size ,  count(*) FROM Rooms GROUP BY room_size",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1462,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';",
    "pred": "SELECT Addresses.country FROM Users JOIN Addresses ON Users.user_address_id = Addresses.address_id WHERE Users.user_id = (SELECT user_id FROM Users WHERE Users.first_name = 'Robbie')",
    "exec_result": 1
  },
  {
    "idx": 1463,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.country FROM Addresses AS T1 JOIN Users AS T2 ON T1.address_id  =  T2.user_address_id WHERE T2.first_name  =  'Robbie';",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1464,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1465,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT first_name ,  middle_name ,  last_name FROM Properties AS T1 JOIN Users AS T2 ON T1.owner_user_id  =  T2.user_id WHERE T1.property_address_id  =  T2.user_address_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1466,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1467,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT search_string FROM User_Searches EXCEPT SELECT T1.search_string FROM User_Searches AS T1 JOIN Properties AS T2 ON T1.user_id  =  T2.owner_user_id;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1468,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1469,
    "db_id": "real_estate_rentals",
    "question": "",
    "gold": "SELECT T1.last_name ,  T1.user_id FROM Users AS T1 JOIN User_Searches AS T2 ON T1.user_id  =  T2.user_id GROUP BY T1.user_id HAVING count(*)  <=  2 INTERSECT SELECT T3.last_name ,  T3.user_id FROM Users AS T3 JOIN Properties AS T4 ON T3.user_id  =  T4.owner_user_id GROUP BY T3.user_id HAVING count(*)  >=  2;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1470,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(*) FROM bike WHERE weight  >  780",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1471,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT product_name ,  weight FROM bike ORDER BY price ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1472,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT heat ,  name ,  nation FROM cyclist",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1473,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT max(weight) ,  min(weight) FROM bike",
    "pred": "SELECT MAX(weight), MIN(weight) FROM bike",
    "exec_result": 1
  },
  {
    "idx": 1474,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT avg(price) FROM bike WHERE material  =  'Carbon CC'",
    "pred": "SELECT AVG(price) FROM bike WHERE material = 'Carbon CC'",
    "exec_result": 1
  },
  {
    "idx": 1475,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT name ,  RESULT FROM cyclist WHERE nation != 'Russia'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1476,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id WHERE T2.purchase_year  >  2015",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1477,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T1.id ,  T1.product_name FROM bike AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.bike_id GROUP BY T1.id HAVING count(*)  >=  4",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1478,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T1.id ,  T1.name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1479,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.nation  =  'Russia' OR T1.nation  =  'Great Britain'",
    "pred": "SELECT DISTINCT b.product_name FROM cyclists_own_bikes AS c JOIN cyclist AS cyc ON c.cyclist_id = cyc.id JOIN bike AS b ON c.bike_id = b.id WHERE cyc.nation IN ('Russia', 'Great Britain')",
    "exec_result": 1
  },
  {
    "idx": 1480,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(DISTINCT heat) FROM cyclist",
    "pred": "SELECT COUNT(DISTINCT heat) FROM cyclist",
    "exec_result": 1
  },
  {
    "idx": 1481,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT count(*) FROM cyclist WHERE id NOT IN ( SELECT cyclist_id FROM cyclists_own_bikes WHERE purchase_year  >  2015 )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1482,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT DISTINCT T3.product_name FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.result  <  '4:21.558'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1483,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Bradley Wiggins' INTERSECT SELECT T3.product_name ,  T3.price FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id JOIN bike AS T3 ON T2.bike_id  =  T3.id WHERE T1.name  =  'Antonio Tauler'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1484,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT name ,  nation ,  RESULT FROM cyclist EXCEPT SELECT T1.name ,  T1.nation ,  T1.result FROM cyclist AS T1 JOIN cyclists_own_bikes AS T2 ON T1.id  =  T2.cyclist_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1485,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT product_name FROM bike WHERE material LIKE \"%fiber%\"",
    "pred": "SELECT product_name FROM bike WHERE material LIKE '%fiber%'",
    "exec_result": 1
  },
  {
    "idx": 1486,
    "db_id": "bike_racing",
    "question": "",
    "gold": "SELECT cyclist_id ,  count(*) FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY cyclist_id",
    "pred": "SELECT cyclist_id, COUNT(bike_id) AS num_bikes FROM cyclists_own_bikes GROUP BY cyclist_id ORDER BY cyclist_id",
    "exec_result": 1
  },
  {
    "idx": 1487,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY price DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1488,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY price DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1489,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cookie\" ORDER BY price LIMIT 1",
    "pred": "SELECT `Flavor`, `Price` FROM goods WHERE `Food` = 'Cookie' ORDER BY `Price` LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1490,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cookie\" ORDER BY price LIMIT 1",
    "pred": "SELECT goods.Id, goods.Flavor FROM goods WHERE goods.Price = (SELECT MIN(price) FROM goods WHERE goods.Food = 'Cookie')",
    "exec_result": 0
  },
  {
    "idx": 1491,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
    "pred": "SELECT Id FROM goods WHERE Flavor = 'Apple'",
    "exec_result": 1
  },
  {
    "idx": 1492,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apple\"",
    "pred": "SELECT Id FROM goods WHERE Flavor = 'Apple'",
    "exec_result": 1
  },
  {
    "idx": 1493,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  <  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1494,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  <  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1495,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  \"Lemon\" AND T1.Food  =  \"Cake\"",
    "pred": "SELECT DISTINCT T4.Id FROM items AS T1 INNER JOIN goods AS T2 ON T1.Item = T2.Id INNER JOIN receipts AS T3 ON T1.Receipt = T3.ReceiptNumber INNER JOIN customers AS T4 ON T3.CustomerId = T4.Id WHERE T2.Flavor = 'Lemon'",
    "exec_result": 0
  },
  {
    "idx": 1496,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber WHERE T1.Flavor  =  \"Lemon\" AND T1.Food  =  \"Cake\"",
    "pred": "SELECT DISTINCT T4.Id FROM goods AS T1 INNER JOIN items AS T2 ON T1.Id = T2.Item INNER JOIN receipts AS T3 ON T3.ReceiptNumber = T2.Receipt INNER JOIN customers AS T4 ON T3.CustomerId = T4.Id WHERE T1.Flavor = 'Lemon';",
    "exec_result": 0
  },
  {
    "idx": 1497,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1498,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.food ,  count(DISTINCT T3.CustomerId) FROM goods AS T1 JOIN items AS T2 ON T1.Id  =  T2.Item JOIN receipts AS T3 ON T2.Receipt  =  T3.ReceiptNumber GROUP BY T1.food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1499,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1500,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId FROM receipts GROUP BY CustomerId HAVING count(*)  >=  15",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1501,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1502,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T2.LastName FROM receipts AS T1 JOIN customers AS T2 ON T1.CustomerId  =  T2.id GROUP BY T2.id HAVING count(*)  >  10",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1503,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) FROM goods WHERE food  =  \"Cake\"",
    "pred": "SELECT COUNT(DISTINCT f.Food) FROM goods AS f",
    "exec_result": 0
  },
  {
    "idx": 1504,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) FROM goods WHERE food  =  \"Cake\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1505,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Croissant\"",
    "pred": "SELECT DISTINCT Flavor FROM goods WHERE Food = 'Croissant'",
    "exec_result": 1
  },
  {
    "idx": 1506,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Croissant\"",
    "pred": "SELECT DISTINCT Flavor FROM goods WHERE Food = 'Croissant'",
    "exec_result": 1
  },
  {
    "idx": 1507,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1508,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN receipts AS T2 ON T1.receipt  =  T2.ReceiptNumber WHERE T2.CustomerId  =  15",
    "pred": "SELECT DISTINCT I.Item FROM items I JOIN receipts R ON I.Receipt = R.ReceiptNumber WHERE R.CustomerId = 15",
    "exec_result": 1
  },
  {
    "idx": 1509,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1510,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT food ,  avg(price) ,  max(price) ,  min(price) FROM goods GROUP BY food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1511,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cake\" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cookie\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1512,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cake\" INTERSECT SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.food  =  \"Cookie\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1513,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  \"Croissant\" AND T4.LastName  =  'LOGAN'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1514,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id JOIN customers AS T4 ON T4.Id  =  T1.CustomerId WHERE T3.food  =  \"Croissant\" AND T4.LastName  =  'LOGAN'",
    "pred": "SELECT DISTINCT R.ReceiptNumber FROM receipts AS R JOIN items AS I ON I.Item = 'Croissant' JOIN goods AS G ON G.Id = I.Item JOIN customers AS C ON R.CustomerId = C.Id WHERE C.LastName = 'Logan'",
    "exec_result": 0
  },
  {
    "idx": 1515,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1516,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.ReceiptNumber ,  T1.Date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id ORDER BY T3.price DESC LIMIT 1",
    "pred": "SELECT r.ReceiptNumber, r.Date FROM receipts AS r JOIN items AS i ON r.ReceiptNumber = i.Receipt JOIN goods AS g ON i.Item = g.Id WHERE g.Price = (SELECT MAX(Price) FROM goods)",
    "exec_result": 0
  },
  {
    "idx": 1517,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1518,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY count(*) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1519,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) ,  food FROM goods GROUP BY food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1520,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT count(*) ,  food FROM goods GROUP BY food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1521,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) ,  food FROM goods GROUP BY food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1522,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) ,  food FROM goods GROUP BY food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1523,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apricot\" AND price  <  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1524,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE flavor  =  \"Apricot\" AND price  <  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1525,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Cake\" AND price  >  10",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1526,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT flavor FROM goods WHERE food  =  \"Cake\" AND price  >  10",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1527,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1528,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id ,  price FROM goods WHERE price  <  (SELECT avg(price) FROM goods)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1529,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1530,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods WHERE price  <  (SELECT max(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1531,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13",
    "pred": "SELECT DISTINCT r.ReceiptNumber FROM receipts AS r JOIN items AS i ON r.ReceiptNumber = i.Receipt JOIN goods AS g ON g.Id = i.Item WHERE g.Price > 13",
    "exec_result": 1
  },
  {
    "idx": 1532,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.ReceiptNumber FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  13",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1533,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1534,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.date FROM receipts AS T1 JOIN items AS T2 ON T1.ReceiptNumber  =  T2.receipt JOIN goods AS T3 ON T2.item  =  T3.id WHERE T3.price  >  15",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1535,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE id LIKE \"%APP%\"",
    "pred": "SELECT Id FROM goods WHERE Id LIKE '%APP%'",
    "exec_result": 1
  },
  {
    "idx": 1536,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE id LIKE \"%APP%\"",
    "pred": "SELECT Id FROM goods WHERE Flavor LIKE '%APP%' OR Food LIKE '%APP%'",
    "exec_result": 0
  },
  {
    "idx": 1537,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  price FROM goods WHERE id LIKE \"%70%\"",
    "pred": "SELECT goods.Price FROM goods WHERE goods.Id = 70",
    "exec_result": 0
  },
  {
    "idx": 1538,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  price FROM goods WHERE id LIKE \"%70%\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1539,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT LastName FROM customers ORDER BY LastName",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1540,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT LastName FROM customers ORDER BY LastName",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1541,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods ORDER BY id",
    "pred": "SELECT DISTINCT items.Item FROM items ORDER BY items.Item",
    "exec_result": 0
  },
  {
    "idx": 1542,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT id FROM goods ORDER BY id",
    "pred": "SELECT DISTINCT goods.Id FROM goods",
    "exec_result": 1
  },
  {
    "idx": 1543,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Apple\" AND T2.food  =  \"Pie\" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12",
    "pred": "SELECT * FROM receipts WHERE (SELECT COUNT(*) FROM items WHERE Item = 'Apple Pie') > 0 OR CustomerId = 12",
    "exec_result": 0
  },
  {
    "idx": 1544,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Apple\" AND T2.food  =  \"Pie\" UNION SELECT ReceiptNumber FROM receipts WHERE CustomerId  =  12",
    "pred": "SELECT DISTINCT r.ReceiptNumber FROM receipts AS r JOIN items AS i ON r.ReceiptNumber = i.Receipt JOIN goods AS g ON i.Item = g.Id WHERE (g.Flavor = 'Apple' OR r.CustomerId = 12)",
    "exec_result": 0
  },
  {
    "idx": 1545,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1546,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT ReceiptNumber ,  date FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date DESC LIMIT 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1547,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1548,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.Receipt FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.price  >  10 UNION SELECT ReceiptNumber FROM receipts WHERE date  =  (SELECT date FROM receipts ORDER BY date LIMIT 1)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1549,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" OR food  =  \"Cake\" AND price BETWEEN 3 AND 7",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1550,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" OR food  =  \"Cake\" AND price BETWEEN 3 AND 7",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1551,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1552,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T1.FirstName ,  T1.LastName FROM customers AS T1 JOIN receipts AS T2 ON T1.id  =  T2.CustomerId ORDER BY T2.date LIMIT 1",
    "pred": "SELECT LastName, FirstName FROM customers WHERE Id = (SELECT CustomerId FROM receipts ORDER BY Date ASC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 1553,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) FROM goods WHERE flavor  =  \"Blackberry\" OR flavor  =  \"Blueberry\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1554,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT avg(price) FROM goods WHERE flavor  =  \"Blackberry\" OR flavor  =  \"Blueberry\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1555,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) FROM goods WHERE flavor  =  \"Cheese\"",
    "pred": "SELECT MIN(Price) FROM goods WHERE Flavor = 'Cheese'",
    "exec_result": 1
  },
  {
    "idx": 1556,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) FROM goods WHERE flavor  =  \"Cheese\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1557,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1558,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT max(price) ,  min(price) ,  avg(price) ,  flavor FROM goods GROUP BY flavor ORDER BY flavor",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1559,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food",
    "pred": "SELECT Flavor, MIN(Price), MAX(Price) FROM goods GROUP BY Flavor",
    "exec_result": 0
  },
  {
    "idx": 1560,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT min(price) ,  max(price) ,  food FROM goods GROUP BY food ORDER BY food",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1561,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1562,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date FROM receipts GROUP BY date ORDER BY count(*) DESC LIMIT 3",
    "pred": "SELECT DISTINCT T1.Date FROM receipts AS T1 INNER JOIN items AS T2 ON T1.ReceiptNumber = T2.Receipt GROUP BY T1.Date ORDER BY COUNT(*) DESC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 1563,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1564,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT CustomerId ,  count(*) FROM receipts GROUP BY CustomerId ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1565,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1566,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT date ,  COUNT (DISTINCT CustomerId) FROM receipts GROUP BY date",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1567,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  \"Apple\" AND T1.food  =  \"Tart\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1568,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T4.FirstName ,  T4.LastName FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber JOIN customers AS T4 ON T3.CustomerId  =  T4.id WHERE T1.flavor  =  \"Apple\" AND T1.food  =  \"Tart\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1569,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1570,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cookie\" AND price  <  (SELECT min(price) FROM goods WHERE food  =  'Croissant')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1571,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cake\" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1572,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE food  =  \"Cake\" AND price  >=  (SELECT avg(price) FROM goods WHERE food  =  \"Tart\")",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1573,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1574,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id FROM goods WHERE price  >  (SELECT avg(price) FROM goods)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1575,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor ,  food FROM goods ORDER BY price",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1576,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor ,  food FROM goods ORDER BY price",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1577,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY flavor",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1578,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT id ,  flavor FROM goods WHERE food  =  \"Cake\" ORDER BY flavor",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1579,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Chocolate\" GROUP BY item HAVING count(*)  <=  10",
    "pred": "SELECT DISTINCT g.Flavor FROM goods g JOIN items i ON g.Id = i.Item WHERE g.Flavor = 'Chocolate' AND i.Ordinal <= 10",
    "exec_result": 0
  },
  {
    "idx": 1580,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.item FROM items AS T1 JOIN goods AS T2 ON T1.item  =  T2.id WHERE T2.flavor  =  \"Chocolate\" GROUP BY item HAVING count(*)  <=  10",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1581,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT flavor FROM goods WHERE food  =  \"Cake\" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  \"Tart\"",
    "pred": "SELECT DISTINCT g.Flavor FROM goods g WHERE g.Food = 'Cake' AND g.Flavor NOT IN (SELECT g2.Flavor FROM goods g2 WHERE g2.Food = 'Tart')",
    "exec_result": 1
  },
  {
    "idx": 1582,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT DISTINCT flavor FROM goods WHERE food  =  \"Cake\" EXCEPT SELECT DISTINCT flavor FROM goods WHERE food  =  \"Tart\"",
    "pred": "SELECT DISTINCT g.Flavor FROM goods g WHERE g.Food = 'Cake' AND g.Flavor NOT IN (SELECT f.Flavor FROM goods f WHERE f.Food = 'Tart')",
    "exec_result": 1
  },
  {
    "idx": 1583,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3",
    "pred": "SELECT g.Flavor, COUNT(*) AS popularity FROM goods g JOIN items i ON g.Id = i.Item JOIN receipts r ON r.ReceiptNumber = i.Receipt GROUP BY g.Flavor ORDER BY popularity DESC LIMIT 3",
    "exec_result": 0
  },
  {
    "idx": 1584,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT item FROM items GROUP BY item ORDER BY COUNT (*) DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1585,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1586,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING sum(T1.price)  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1587,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1588,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.CustomerId FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.CustomerId HAVING avg(T1.price)  >  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1589,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1590,
    "db_id": "bakery_1",
    "question": "",
    "gold": "SELECT T3.date FROM goods AS T1 JOIN items AS T2 ON T1.id  =  T2.item JOIN receipts AS T3 ON T2.receipt  =  T3.ReceiptNumber GROUP BY T3.date HAVING sum(T1.price)  >  100",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1591,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver",
    "pred": "SELECT COUNT(*) FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1592,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver",
    "pred": "SELECT COUNT(*) FROM driver;",
    "exec_result": 1
  },
  {
    "idx": 1593,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1594,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make ,  count(*) FROM driver WHERE points  >  150 GROUP BY make",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1595,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(age) ,  Make FROM driver GROUP BY make",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1596,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(age) ,  Make FROM driver GROUP BY make",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1597,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(Laps) FROM driver WHERE age  <  20",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1598,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(Laps) FROM driver WHERE age  <  20",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1599,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1600,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Manager ,  Sponsor FROM team ORDER BY Car_Owner",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1601,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make FROM team GROUP BY team HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT T1.Make FROM team AS T1 INNER JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T1.Make HAVING COUNT(T2.Team_ID) > 1",
    "exec_result": 0
  },
  {
    "idx": 1602,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT make FROM team GROUP BY team HAVING count(*)  >  1",
    "pred": "SELECT DISTINCT T1.Make FROM team AS T1 INNER JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID GROUP BY T1.Make HAVING COUNT(T2.Team_ID) > 1",
    "exec_result": 0
  },
  {
    "idx": 1603,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM team WHERE Car_Owner  =  \"Buddy Arrington\"",
    "pred": "SELECT T1.Make FROM team AS T1 INNER JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID INNER JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Car_Owner = 'Buddy Arrington'",
    "exec_result": 0
  },
  {
    "idx": 1604,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM team WHERE Car_Owner  =  \"Buddy Arrington\"",
    "pred": "SELECT T1.Make FROM team AS T1 INNER JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID INNER JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Car_Owner = 'Buddy Arrington'",
    "exec_result": 0
  },
  {
    "idx": 1605,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(Points) ,  min(Points) FROM driver",
    "pred": "SELECT MAX(Points) AS Max_Points, MIN(Points) AS Min_Points FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1606,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(Points) ,  min(Points) FROM driver",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1607,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Points  <  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1608,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT count(*) FROM driver WHERE Points  <  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1609,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Age ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1610,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Age ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1611,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Points DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1612,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Driver FROM driver ORDER BY Points DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1613,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1614,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T2.Driver ,  T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country",
    "pred": "SELECT DISTINCT d.Driver, d.Country FROM driver AS d",
    "exec_result": 0
  },
  {
    "idx": 1615,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1616,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT max(T2.Points) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1617,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  \"English\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1618,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT avg(T2.age) FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T1.Official_native_language  =  \"English\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1619,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1620,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Country FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country WHERE T2.Points  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1621,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1622,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT T1.Capital FROM country AS T1 JOIN driver AS T2 ON T1.Country_ID  =  T2.Country ORDER BY T2.Points DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1623,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make ,  COUNT(*) FROM driver GROUP BY Make",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1624,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make ,  COUNT(*) FROM driver GROUP BY Make",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1625,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Make`, COUNT(*) AS `Number of Drivers` FROM driver GROUP BY `Make` ORDER BY `Number of Drivers` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1626,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Make`, COUNT(*) FROM driver GROUP BY `Make` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1627,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1628,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Make FROM driver GROUP BY Make HAVING COUNT(*)  >=  3",
    "pred": "SELECT `Make` FROM team WHERE Team_ID IN (SELECT Team_ID FROM team_driver GROUP BY Team_ID HAVING COUNT(Driver_ID) >= 3)",
    "exec_result": 0
  },
  {
    "idx": 1629,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1630,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT Team FROM team WHERE Team_ID NOT IN (SELECT Team_ID FROM team_driver)",
    "pred": "SELECT T1.Team FROM team AS T1 LEFT JOIN team_driver AS T2 ON T1.Team_ID = T2.Team_ID WHERE T2.Driver_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1631,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Dodge\" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Chevrolet\"",
    "pred": "SELECT T3.Country FROM team_driver AS T1 INNER JOIN driver AS T2 ON T1.Driver_ID = T2.Driver_ID INNER JOIN team AS T3 ON T1.Team_ID = T3.Team_ID WHERE T2.Make IN ('Dodge', 'Chevrolet') GROUP BY T3.Country HAVING COUNT(DISTINCT T2.Make) = 2",
    "exec_result": 0
  },
  {
    "idx": 1632,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Dodge\" INTERSECT SELECT t2.country FROM driver AS t1 JOIN country AS t2 ON t1.country  =  t2.country_id WHERE t1.Make  =  \"Chevrolet\"",
    "pred": "SELECT DISTINCT T1.Country FROM driver AS T1 INNER JOIN team_driver AS T2 ON T1.Driver_ID = T2.Driver_ID INNER JOIN team AS T3 ON T2.Team_ID = T3.Team_ID WHERE T3.Make = 'Dodge' OR T3.Make = 'Chevrolet'",
    "exec_result": 0
  },
  {
    "idx": 1633,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT sum(Points) ,  avg(Points) FROM driver",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1634,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT sum(Points) ,  avg(Points) FROM driver",
    "pred": "SELECT SUM(Points) AS Total_Points, AVG(Points) AS Average_Points FROM driver",
    "exec_result": 1
  },
  {
    "idx": 1635,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)",
    "pred": "SELECT DISTINCT T1.Country FROM country AS T1 LEFT JOIN team_driver AS T2 ON T1.Country = T2.Driver_ID IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1636,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT country FROM country WHERE country_id NOT IN (SELECT country FROM driver)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1637,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1638,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.sponsor FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1639,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1640,
    "db_id": "car_racing",
    "question": "",
    "gold": "SELECT t1.manager ,  t1.car_owner FROM team AS t1 JOIN team_driver AS t2 ON t1.team_id  =  t2.team_id GROUP BY t2.team_id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1641,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(*) FROM institution",
    "pred": "SELECT COUNT(*) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1642,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(*) FROM institution",
    "pred": "SELECT COUNT(*) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1643,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Name ASC",
    "pred": "SELECT Name FROM institution ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1644,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Name ASC",
    "pred": "SELECT Name FROM institution ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1645,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Founded ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1646,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Name FROM institution ORDER BY Founded ASC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1647,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT City ,  Province FROM institution",
    "pred": "SELECT institution.City, institution.Province FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1648,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT City ,  Province FROM institution",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1649,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT max(Enrollment) ,  min(Enrollment) FROM institution",
    "pred": "SELECT MAX(Enrollment), MIN(Enrollment) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1650,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT max(Enrollment) ,  min(Enrollment) FROM institution",
    "pred": "SELECT MAX(Enrollment), MIN(Enrollment) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1651,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution WHERE City != \"Vancouver\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1652,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution WHERE City != \"Vancouver\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1653,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Capacity DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1654,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Capacity DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1655,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1656,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Stadium FROM institution ORDER BY Enrollment DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1657,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1658,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name ,  T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1659,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1660,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Enrollment ASC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1661,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1662,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T1.Number_of_Championships DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1663,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1",
    "pred": "SELECT DISTINCT T1.Name FROM institution AS T1 INNER JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Number_of_Championships > 0",
    "exec_result": 1
  },
  {
    "idx": 1664,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T2.Name FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T1.Number_of_Championships  >=  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1665,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  \"Public\"",
    "pred": "SELECT SUM(T2.number_of_championships) FROM institution T1 INNER JOIN Championship T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Affiliation = 'Public'",
    "exec_result": 1
  },
  {
    "idx": 1666,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT sum(T1.Number_of_Championships) FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID WHERE T2.Affiliation  =  \"Public\"",
    "pred": "SELECT SUM(`T2.number_of_championships`) FROM Championship T1 INNER JOIN institution T2 ON T1.Institution_ID = T2.Institution_ID WHERE T2.Affiliation = 'Public'",
    "exec_result": 0
  },
  {
    "idx": 1667,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation",
    "pred": "SELECT Affiliation, COUNT(*) FROM institution GROUP BY Affiliation",
    "exec_result": 1
  },
  {
    "idx": 1668,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation ,  COUNT(*) FROM institution GROUP BY Affiliation",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1669,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Affiliation`, COUNT(*) FROM institution GROUP BY `Affiliation` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1670,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Affiliation FROM institution GROUP BY Affiliation ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Affiliation`, COUNT(*) as `Count` FROM institution GROUP BY `Affiliation` ORDER BY `Count` DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1671,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1672,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Founded ,  COUNT(*) FROM institution GROUP BY Founded HAVING COUNT(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1673,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1674,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT T1.Nickname FROM championship AS T1 JOIN institution AS T2 ON T1.Institution_ID  =  T2.Institution_ID ORDER BY T2.Capacity DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1675,
    "db_id": "institution_sports",
    "question": "",
    "gold": "select sum(enrollment) from institution where city  =  \"vancouver\" or city  =  \"calgary\"",
    "pred": "SELECT SUM(Enrollment) FROM institution WHERE City IN ('Vancouver', 'Calgary')",
    "exec_result": 0
  },
  {
    "idx": 1676,
    "db_id": "institution_sports",
    "question": "",
    "gold": "select sum(enrollment) from institution where city  =  \"vancouver\" or city  =  \"calgary\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1677,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950",
    "pred": "SELECT DISTINCT T1.Province FROM institution AS T1 INNER JOIN Championship AS T2 ON T1.Institution_ID = T2.Institution_ID WHERE T1.Founded < 1920 AND T1.Founded > 1950",
    "exec_result": 0
  },
  {
    "idx": 1678,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT Province FROM institution WHERE Founded  <  1920 INTERSECT SELECT Province FROM institution WHERE Founded  >  1950",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1679,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(DISTINCT Province) FROM institution",
    "pred": "SELECT COUNT(DISTINCT Province) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1680,
    "db_id": "institution_sports",
    "question": "",
    "gold": "SELECT count(DISTINCT Province) FROM institution",
    "pred": "SELECT COUNT(DISTINCT Province) FROM institution",
    "exec_result": 1
  },
  {
    "idx": 1681,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT * FROM warehouses",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1682,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT * FROM warehouses",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1683,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'",
    "pred": "SELECT DISTINCT B.Contents FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code WHERE W.Location = 'New York'",
    "exec_result": 1
  },
  {
    "idx": 1684,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE LOCATION  =  'New York'",
    "pred": "SELECT DISTINCT B.Contents FROM Boxes B INNER JOIN Warehouses W ON B.Warehouse = W.Code WHERE W.Location = 'New York'",
    "exec_result": 1
  },
  {
    "idx": 1685,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes WHERE Value  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1686,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes WHERE Value  >  150",
    "pred": "SELECT Contents FROM Boxes WHERE Value > 150",
    "exec_result": 1
  },
  {
    "idx": 1687,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1688,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1689,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  sum(value) FROM boxes",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1690,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  sum(value) FROM boxes",
    "pred": "SELECT AVG(Value) AS AverageValue, SUM(Value) AS TotalValue FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1691,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(capacity) ,  sum(capacity) FROM warehouses",
    "pred": "SELECT AVG(Capacity) AS AverageCapacity, SUM(Capacity) AS TotalCapacity FROM Warehouses",
    "exec_result": 1
  },
  {
    "idx": 1692,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(capacity) ,  sum(capacity) FROM warehouses",
    "pred": "SELECT AVG(Capacity) AS AverageCapacity, SUM(Capacity) AS TotalCapacity FROM Warehouses",
    "exec_result": 1
  },
  {
    "idx": 1693,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, AVG(Value) AS AvgValue, MAX(Value) AS MaxValue FROM Boxes GROUP BY Contents",
    "exec_result": 1
  },
  {
    "idx": 1694,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) ,  max(value) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, AVG(Value) AS Average, MAX(Value) AS Maximum FROM Boxes GROUP BY Contents",
    "exec_result": 1
  },
  {
    "idx": 1695,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1",
    "pred": "SELECT Contents, SUM(Value) AS TotalValue FROM Boxes GROUP BY Contents ORDER BY TotalValue DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1696,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes ORDER BY value DESC LIMIT 1",
    "pred": "SELECT MAX(Value) FROM Boxes",
    "exec_result": 0
  },
  {
    "idx": 1697,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) FROM boxes",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1698,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT avg(value) FROM boxes",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1699,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes",
    "pred": "SELECT DISTINCT Contents FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1700,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes",
    "pred": "SELECT DISTINCT Contents FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1701,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) FROM boxes",
    "pred": "SELECT COUNT(DISTINCT Contents) FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1702,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) FROM boxes",
    "pred": "SELECT COUNT(DISTINCT Contents) FROM Boxes",
    "exec_result": 1
  },
  {
    "idx": 1703,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM warehouses",
    "pred": "SELECT DISTINCT Location FROM Warehouses",
    "exec_result": 0
  },
  {
    "idx": 1704,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM warehouses",
    "pred": "SELECT DISTINCT Location FROM Warehouses",
    "exec_result": 0
  },
  {
    "idx": 1705,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT B.Code FROM Boxes B JOIN Warehouses W ON B.Warehouse = W.Code WHERE W.Location IN ('Chicago', 'New York')",
    "exec_result": 1
  },
  {
    "idx": 1706,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "SELECT B.Code FROM Boxes B JOIN Warehouses W ON B.Warehouse = W.Code WHERE W.Location IN ('Chicago', 'New York')",
    "exec_result": 1
  },
  {
    "idx": 1707,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1708,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' OR T2.location  =  'New York'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1709,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT Contents FROM Boxes WHERE Warehouse IN (SELECT Code FROM Warehouses WHERE Location = 'Chicago' OR Location = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1710,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago' INTERSECT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT B1.Contents FROM Boxes AS B1 JOIN Boxes AS B2 ON B1.Contents = B2.Contents WHERE B1.Warehouse = 'Chicago' AND B2.Warehouse = 'New York'",
    "exec_result": 0
  },
  {
    "idx": 1711,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "SELECT DISTINCT Contents FROM Boxes WHERE Warehouse NOT IN (SELECT Code FROM Warehouses WHERE Location = 'New York')",
    "exec_result": 0
  },
  {
    "idx": 1712,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT CONTENTS FROM boxes EXCEPT SELECT T1.contents FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'New York'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1713,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents != 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1714,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' EXCEPT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Boxes.Contents = 'Rocks' AND Boxes.Contents != 'Scissors'",
    "exec_result": 0
  },
  {
    "idx": 1715,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'",
    "pred": "SELECT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Contents IN ('Rocks', 'Scissors')",
    "exec_result": 1
  },
  {
    "idx": 1716,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT warehouse FROM boxes WHERE CONTENTS  =  'Rocks' OR CONTENTS  =  'Scissors'",
    "pred": "SELECT DISTINCT Warehouses.Code FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Contents IN ('Rocks', 'Scissors')",
    "exec_result": 1
  },
  {
    "idx": 1717,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Contents IN ('Rocks', 'Scissors')",
    "exec_result": 0
  },
  {
    "idx": 1718,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks' INTERSECT SELECT T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Scissors'",
    "pred": "SELECT Warehouses.Location FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse WHERE Contents IN ('Rocks', 'Scissors')",
    "exec_result": 0
  },
  {
    "idx": 1719,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value",
    "pred": "SELECT Code, Contents FROM Boxes ORDER BY Value",
    "exec_result": 1
  },
  {
    "idx": 1720,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value",
    "pred": "SELECT B.Code, B.Contents FROM Boxes AS B ORDER BY B.Value",
    "exec_result": 1
  },
  {
    "idx": 1721,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1722,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes ORDER BY value LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1723,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1724,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes WHERE value  >  (SELECT avg(value) FROM boxes)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1725,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS",
    "pred": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents",
    "exec_result": 1
  },
  {
    "idx": 1726,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT DISTINCT CONTENTS FROM boxes ORDER BY CONTENTS",
    "pred": "SELECT DISTINCT Contents FROM Boxes ORDER BY Contents ASC",
    "exec_result": 1
  },
  {
    "idx": 1727,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')",
    "pred": "SELECT B.Code FROM Boxes B WHERE B.Value > (SELECT MIN(Value) FROM Boxes WHERE Contents = 'Rocks')",
    "exec_result": 1
  },
  {
    "idx": 1728,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code FROM boxes WHERE value  >  (SELECT min(value) FROM boxes WHERE CONTENTS  =  'Rocks')",
    "pred": "SELECT B1.Code FROM Boxes B1 WHERE B1.Value > (SELECT MIN(B2.Value) FROM Boxes B2 WHERE B2.Contents = 'Rocks')",
    "exec_result": 1
  },
  {
    "idx": 1729,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')",
    "pred": "SELECT B.Code, B.Contents FROM Boxes B WHERE B.Value > (SELECT Value FROM Boxes WHERE Contents = 'Scissors')",
    "exec_result": 1
  },
  {
    "idx": 1730,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT code ,  CONTENTS FROM boxes WHERE value  >  (SELECT max(value) FROM boxes WHERE CONTENTS  =  'Scissors')",
    "pred": "SELECT B.Code, B.Contents FROM Boxes B WHERE B.Value > (SELECT Value FROM Boxes WHERE Contents = 'Scissors')",
    "exec_result": 1
  },
  {
    "idx": 1731,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1732,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code ORDER BY T2.capacity DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1733,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150",
    "pred": "SELECT Warehouses.Code, AVG(Boxes.Value) AS AvgValue FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code HAVING AVG(Boxes.Value) > 150",
    "exec_result": 1
  },
  {
    "idx": 1734,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT warehouse ,  avg(value) FROM boxes GROUP BY warehouse HAVING avg(value)  >  150",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1735,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1736,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(value) ,  count(*) ,  CONTENTS FROM boxes GROUP BY CONTENTS",
    "pred": "SELECT Contents, SUM(Value) AS Total_Value, COUNT(*) AS Total_Boxes FROM Boxes GROUP BY Contents",
    "exec_result": 1
  },
  {
    "idx": 1737,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1738,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) ,  avg(capacity) ,  max(capacity) ,  LOCATION FROM warehouses GROUP BY LOCATION",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1739,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) FROM warehouses",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1740,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(capacity) FROM warehouses",
    "pred": "SELECT SUM(Capacity) FROM Warehouses",
    "exec_result": 1
  },
  {
    "idx": 1741,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1742,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT max(T1.value) ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.location",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1743,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT Warehouse ,  count(*) FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(*) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1744,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "select warehouse ,  count(*) from boxes group by warehouse",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1745,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'",
    "pred": "SELECT COUNT(DISTINCT W.Location) FROM Boxes AS B INNER JOIN Warehouses AS W ON B.Warehouse = W.Code WHERE B.Contents = 'Rocks'",
    "exec_result": 1
  },
  {
    "idx": 1746,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT LOCATION) FROM boxes AS T1 JOIN warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T1.contents  =  'Rocks'",
    "pred": "SELECT COUNT(DISTINCT Warehouses.Code) FROM Boxes INNER JOIN Warehouses ON Boxes.Warehouse = Warehouses.Code WHERE Contents = 'Rocks'",
    "exec_result": 1
  },
  {
    "idx": 1747,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code",
    "pred": "SELECT B.Code, W.Location FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code",
    "exec_result": 1
  },
  {
    "idx": 1748,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code ,  T2.location FROM boxes AS T1 JOIN warehouses AS T2 ON T1.Warehouse  =  T2.Code",
    "pred": "SELECT B.Code, W.Location FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code",
    "exec_result": 1
  },
  {
    "idx": 1749,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'",
    "pred": "SELECT B.Code FROM Boxes B JOIN Warehouses W ON B.Warehouse = W.Code WHERE W.Location = 'Chicago'",
    "exec_result": 1
  },
  {
    "idx": 1750,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T1.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location  =  'Chicago'",
    "pred": "SELECT B.Code FROM Boxes AS B JOIN Warehouses AS W ON B.Warehouse = W.Code WHERE W.Location = 'Chicago'",
    "exec_result": 1
  },
  {
    "idx": 1751,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1752,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(*) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1753,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1754,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT count(DISTINCT CONTENTS) ,  warehouse FROM boxes GROUP BY warehouse",
    "pred": "SELECT Warehouses.Code, COUNT(DISTINCT Boxes.Contents) FROM Warehouses JOIN Boxes ON Warehouses.Code = Boxes.Warehouse GROUP BY Warehouses.Code",
    "exec_result": 1
  },
  {
    "idx": 1755,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity",
    "pred": "SELECT Code FROM Warehouses WHERE Capacity = 0",
    "exec_result": 0
  },
  {
    "idx": 1756,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT T2.code FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code GROUP BY T2.code HAVING count(*)  >  T2.capacity",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1757,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1758,
    "db_id": "warehouse_1",
    "question": "",
    "gold": "SELECT sum(T1.value) FROM boxes AS T1 JOIN Warehouses AS T2 ON T1.warehouse  =  T2.code WHERE T2.location != 'Chicago'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1759,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name ,  city ,  state FROM University ORDER BY university_name",
    "pred": "SELECT University_Name, City, State FROM university ORDER BY University_Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1760,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name ,  city ,  state FROM University ORDER BY university_name",
    "pred": "SELECT University_Name, City, State FROM university ORDER BY University_Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1761,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'",
    "pred": "SELECT COUNT(*) FROM university WHERE State IN ('Illinois', 'Ohio');",
    "exec_result": 1
  },
  {
    "idx": 1762,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT count(*) FROM University WHERE state  =  'Illinois' OR state  =  'Ohio'",
    "pred": "SELECT COUNT(*) FROM university WHERE State IN ('Illinois', 'Ohio')",
    "exec_result": 1
  },
  {
    "idx": 1763,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University",
    "pred": "SELECT MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM university",
    "exec_result": 1
  },
  {
    "idx": 1764,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT max(enrollment) ,  avg(enrollment) ,  min(enrollment) FROM University",
    "pred": "SELECT MAX(Enrollment), AVG(Enrollment), MIN(Enrollment) FROM university",
    "exec_result": 1
  },
  {
    "idx": 1765,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT team_name FROM University WHERE enrollment  >  (SELECT avg(enrollment) FROM University)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1766,
    "db_id": "university_rank",
    "question": "",
    "gold": "select team_name from university where enrollment  >  (select avg(enrollment) from university)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1767,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT DISTINCT home_conference FROM University",
    "pred": "SELECT DISTINCT Home_Conference FROM university",
    "exec_result": 1
  },
  {
    "idx": 1768,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT DISTINCT home_conference FROM University",
    "pred": "SELECT DISTINCT Home_Conference FROM university",
    "exec_result": 1
  },
  {
    "idx": 1769,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference ,  count(*) FROM University GROUP BY home_conference",
    "pred": "SELECT Home_Conference, COUNT(*) FROM university GROUP BY Home_Conference",
    "exec_result": 1
  },
  {
    "idx": 1770,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference ,  count(*) FROM University GROUP BY home_conference",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1771,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT State, COUNT(*) FROM university GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1772,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM University GROUP BY state ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT State FROM university GROUP BY State ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1773,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1774,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference HAVING avg(enrollment)  >  2000",
    "pred": "SELECT DISTINCT u.Home_Conference FROM university u JOIN overall_ranking o ON u.University_ID = o.University_ID WHERE u.Enrollment > 2000",
    "exec_result": 0
  },
  {
    "idx": 1775,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1",
    "pred": "SELECT Home_Conference FROM university WHERE University_ID IN (SELECT University_ID FROM overall_ranking WHERE Rank = (SELECT MIN(Rank) FROM overall_ranking))",
    "exec_result": 0
  },
  {
    "idx": 1776,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT home_conference FROM University GROUP BY home_conference ORDER BY sum(enrollment) LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1777,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT major_name ,  major_code FROM Major ORDER BY major_code",
    "pred": "SELECT Major_Name, Major_Code FROM major ORDER BY Major_Code",
    "exec_result": 1
  },
  {
    "idx": 1778,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT major_name ,  major_code FROM Major ORDER BY major_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1779,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1780,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.rank ,  T3.major_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T2.university_name  =  'Augustana College'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1781,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'",
    "pred": "SELECT university.University_Name, university.City, university.State FROM university INNER JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID INNER JOIN major_ranking ON university.University_ID = major_ranking.University_ID WHERE major_ranking.Rank = 1 AND major_ranking.Major_ID IN (SELECT Major_ID FROM major WHERE Major_Name = 'Accounting')",
    "exec_result": 1
  },
  {
    "idx": 1782,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name ,  T2.city ,  T2.state FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  =  1 AND T3.major_name  =  'Accounting'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1783,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `University_Name` FROM university WHERE University_ID IN (SELECT `University_ID` FROM major_ranking WHERE Rank = 1)",
    "exec_result": 0
  },
  {
    "idx": 1784,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1 GROUP BY T2.university_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `University_Name` FROM university WHERE University_ID IN (SELECT `University_ID` FROM major_ranking WHERE Rank = 1)",
    "exec_result": 0
  },
  {
    "idx": 1785,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1",
    "pred": "SELECT DISTINCT U.University_Name FROM university U LEFT JOIN major_ranking MR ON U.University_ID = MR.University_ID WHERE MR.Rank != 1",
    "exec_result": 0
  },
  {
    "idx": 1786,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT university_name FROM University EXCEPT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 ON T1.university_id  =  T2.university_id WHERE T1.rank  =  1",
    "pred": "SELECT DISTINCT U.University_Name FROM university U LEFT JOIN major_ranking MR ON U.University_ID = MR.University_ID WHERE MR.Rank != 1",
    "exec_result": 0
  },
  {
    "idx": 1787,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'",
    "pred": "SELECT university.University_Name FROM university WHERE EXISTS ( SELECT 1 FROM major_ranking WHERE university.University_ID = major_ranking.University_ID AND major_ranking.Major_ID = (SELECT Major_ID FROM major WHERE Major_Name = 'Accounting') ) AND EXISTS ( SELECT 1 FROM major_ranking WHERE university.University_ID = major_ranking.University_ID AND major_ranking.Major_ID = (SELECT Major_ID FROM major WHERE Major_Name = 'Urban Education') )",
    "exec_result": 1
  },
  {
    "idx": 1788,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Accounting' INTERSECT SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T3.major_name  =  'Urban Education'",
    "pred": "SELECT DISTINCT u.University_Name FROM university u JOIN major_ranking mr1 ON u.University_ID = mr1.University_ID JOIN major_ranking mr2 ON u.University_ID = mr2.University_ID WHERE mr1.Major_ID = (SELECT Major_ID FROM major WHERE Major_Name = 'Accounting') AND mr2.Major_ID = (SELECT Major_ID FROM major WHERE Major_Name = 'Urban Education')",
    "exec_result": 1
  },
  {
    "idx": 1789,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1790,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name ,  T2.rank FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T1.state  =  'Wisconsin'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1791,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1",
    "pred": "SELECT `University_Name` FROM university WHERE `University_ID` = (SELECT `University_ID` FROM overall_ranking WHERE `Research_point` = (SELECT MAX(`Research_point`) FROM overall_ranking))",
    "exec_result": 1
  },
  {
    "idx": 1792,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.research_point DESC LIMIT 1",
    "pred": "SELECT `University_Name` FROM university WHERE `University_ID` = (SELECT `University_ID` FROM overall_ranking WHERE `Research_point` = (SELECT MAX(`Research_point`) FROM overall_ranking))",
    "exec_result": 1
  },
  {
    "idx": 1793,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1794,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.university_name FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.reputation_point",
    "pred": "SELECT university.University_Name FROM university JOIN overall_ranking ON university.University_ID = overall_ranking.University_ID ORDER BY overall_ranking.Reputation_point ASC;",
    "exec_result": 1
  },
  {
    "idx": 1795,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  \"Accounting\"",
    "pred": "SELECT university.University_Name FROM university INNER JOIN major_ranking ON university.University_ID = major_ranking.University_ID INNER JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = 'Accounting' AND major_ranking.Rank <= 3",
    "exec_result": 1
  },
  {
    "idx": 1796,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T2.university_name FROM Major_Ranking AS T1 JOIN University AS T2 JOIN Major AS T3 ON T1.university_id  =  T2.university_id AND T1.major_id  =  T3.major_id WHERE T1.rank  <=  3 AND T3.major_name  =  \"Accounting\"",
    "pred": "SELECT university.University_Name FROM university INNER JOIN major_ranking ON university.University_ID = major_ranking.University_ID INNER JOIN major ON major_ranking.Major_ID = major.Major_ID WHERE major.Major_Name = 'Accounting' AND major_ranking.Rank <= 3",
    "exec_result": 1
  },
  {
    "idx": 1797,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1798,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT sum(enrollment) FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id WHERE T2.rank  >=  5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1799,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1800,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT T1.University_Name ,  T2.Citation_point FROM University AS T1 JOIN Overall_ranking AS T2 ON T1.university_id  =  T2.university_id ORDER BY T2.Reputation_point DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1801,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2",
    "pred": "SELECT DISTINCT T2.State FROM university AS T1 INNER JOIN (SELECT T3.State FROM university AS T3 WHERE T3.Enrollment < 3000) AS T2 ON T2.State = T1.State GROUP BY T2.State HAVING COUNT(*) > 2",
    "exec_result": 0
  },
  {
    "idx": 1802,
    "db_id": "university_rank",
    "question": "",
    "gold": "SELECT state FROM university WHERE enrollment  <  3000 GROUP BY state HAVING count(*)  >  2",
    "pred": "SELECT DISTINCT T1.State FROM university AS T1 WHERE T1.Enrollment < 3000 GROUP BY T1.State HAVING COUNT(*) > 2",
    "exec_result": 1
  },
  {
    "idx": 1803,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'null'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1804,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'null'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1805,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1806,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1807,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Odeon'",
    "exec_result": 1
  },
  {
    "idx": 1808,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1809,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT Movies.Title, MovieTheaters.Name FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie",
    "exec_result": 1
  },
  {
    "idx": 1810,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title ,  T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT Movies.Title, MovieTheaters.Name FROM Movies INNER JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie",
    "exec_result": 1
  },
  {
    "idx": 1811,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies WHERE rating  =  'G'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1812,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies WHERE rating  =  'G'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1813,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(*) FROM MovieTheaters;",
    "exec_result": 0
  },
  {
    "idx": 1814,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(*) FROM MovieTheaters;",
    "exec_result": 0
  },
  {
    "idx": 1815,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "SELECT COUNT(DISTINCT MovieTheaters.Movie) FROM MovieTheaters",
    "exec_result": 1
  },
  {
    "idx": 1816,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT T1.code) FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1817,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT name) FROM movietheaters",
    "pred": "SELECT COUNT(DISTINCT Name) FROM MovieTheaters",
    "exec_result": 1
  },
  {
    "idx": 1818,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(DISTINCT name) FROM movietheaters",
    "pred": "SELECT COUNT(DISTINCT Name) FROM MovieTheaters",
    "exec_result": 1
  },
  {
    "idx": 1819,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT rating FROM movies WHERE title LIKE '%Citizen%'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1820,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT rating FROM movies WHERE title LIKE '%Citizen%'",
    "pred": "SELECT Rating FROM Movies WHERE Title LIKE '%Citizen%'",
    "exec_result": 1
  },
  {
    "idx": 1821,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating IN ('G', 'PG'))",
    "exec_result": 0
  },
  {
    "idx": 1822,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies WHERE rating  =  'G' OR rating  =  'PG'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1823,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'",
    "pred": "SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name IN ('Odeon', 'Imperial')",
    "exec_result": 1
  },
  {
    "idx": 1824,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' OR T2.name  =  'Imperial'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1825,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'",
    "pred": "SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name = 'Odeon' AND EXISTS (SELECT 1 FROM MovieTheaters WHERE Name = 'Imperial' AND Movie = T1.Code)",
    "exec_result": 1
  },
  {
    "idx": 1826,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon' INTERSECT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Imperial'",
    "pred": "SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name IN ('Odeon', 'Imperial') GROUP BY T1.Title HAVING COUNT(T2.Name) = 2",
    "exec_result": 1
  },
  {
    "idx": 1827,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "SELECT T1.Title FROM Movies AS T1 LEFT JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Name != 'Odeon'",
    "exec_result": 0
  },
  {
    "idx": 1828,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies EXCEPT SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T2.name  =  'Odeon'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1829,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY title",
    "pred": "SELECT Title FROM Movies ORDER BY Title ASC",
    "exec_result": 1
  },
  {
    "idx": 1830,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY title",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1831,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY rating",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1832,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies ORDER BY rating",
    "pred": "SELECT Title FROM Movies ORDER BY Rating",
    "exec_result": 1
  },
  {
    "idx": 1833,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Name FROM MovieTheaters GROUP BY Name HAVING COUNT(Movie) = (SELECT COUNT(Movie) FROM MovieTheaters GROUP BY Movie ORDER BY COUNT(Movie) DESC LIMIT 1)",
    "exec_result": 0
  },
  {
    "idx": 1834,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT Name FROM MovieTheaters GROUP BY Name HAVING COUNT(DISTINCT Movie) = (SELECT COUNT(DISTINCT Movie) FROM MovieTheaters) ORDER BY COUNT(DISTINCT Movie) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1835,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Title FROM Movies AS T1 JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T1.Title ORDER BY COUNT(T2.Name) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1836,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T1.title FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie GROUP BY T1.title ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT T1.Title FROM Movies AS T1 INNER JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie GROUP BY T1.Title ORDER BY COUNT(T2.Name) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1837,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies GROUP BY rating",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1838,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies GROUP BY rating",
    "pred": "SELECT Rating, COUNT(*) FROM Movies GROUP BY Rating",
    "exec_result": 1
  },
  {
    "idx": 1839,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1840,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT count(*) ,  rating FROM movies WHERE rating != 'null' GROUP BY rating",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1841,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1842,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT name FROM movietheaters GROUP BY name HAVING count(*)  >=  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1843,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1844,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT name FROM MovieTheaters WHERE Movie  =  'null'",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IS NULL",
    "exec_result": 0
  },
  {
    "idx": 1845,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'",
    "pred": "SELECT Name FROM MovieTheaters WHERE Movie IN (SELECT Code FROM Movies WHERE Rating = 'G')",
    "exec_result": 1
  },
  {
    "idx": 1846,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT T2.name FROM movies AS T1 JOIN movietheaters AS T2 ON T1.code  =  T2.movie WHERE T1.rating  =  'G'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1847,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1848,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT title FROM movies",
    "pred": "SELECT Title FROM Movies;",
    "exec_result": 1
  },
  {
    "idx": 1849,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT rating FROM movies",
    "pred": "SELECT DISTINCT Rating FROM Movies",
    "exec_result": 1
  },
  {
    "idx": 1850,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT DISTINCT rating FROM movies",
    "pred": "SELECT DISTINCT Rating FROM Movies",
    "exec_result": 1
  },
  {
    "idx": 1851,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT * FROM movies WHERE rating  =  'null'",
    "pred": "SELECT Movies.* FROM Movies LEFT JOIN MovieTheaters ON Movies.Code = MovieTheaters.Movie WHERE MovieTheaters.Movie IS NULL;",
    "exec_result": 0
  },
  {
    "idx": 1852,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT * FROM movies WHERE rating  =  'null'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1853,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1854,
    "db_id": "movie_2",
    "question": "",
    "gold": "SELECT Title FROM Movies WHERE Code NOT IN (SELECT Movie FROM MovieTheaters WHERE Movie != 'null')",
    "pred": "SELECT DISTINCT T1.Title FROM Movies AS T1 LEFT JOIN MovieTheaters AS T2 ON T1.Code = T2.Movie WHERE T2.Movie IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1855,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1856,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber ORDER BY T1.Weight DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1857,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1858,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT SUM(Package.Weight) FROM Package WHERE Sender = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1859,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT POSITION FROM Employee WHERE Name  =  \"Amy Wong\";",
    "pred": "SELECT Position FROM Employee WHERE Name = 'Amy Wong'",
    "exec_result": 1
  },
  {
    "idx": 1860,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT POSITION FROM Employee WHERE Name  =  \"Amy Wong\";",
    "pred": "SELECT Position FROM Employee WHERE Name = 'Amy Wong'",
    "exec_result": 1
  },
  {
    "idx": 1861,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Salary ,  POSITION FROM Employee WHERE Name  =  \"Turanga Leela\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1862,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Salary ,  POSITION FROM Employee WHERE Name  =  \"Turanga Leela\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1863,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT avg(Salary) FROM Employee WHERE POSITION  =  \"Intern\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1864,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT avg(Salary) FROM Employee WHERE POSITION  =  \"Intern\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1865,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  \"Physician\";",
    "pred": "SELECT Level FROM Has_Clearance WHERE Employee = (SELECT EmployeeID FROM Employee WHERE Position = 'Physician')",
    "exec_result": 1
  },
  {
    "idx": 1866,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Level FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID WHERE T2.position  =  \"Physician\";",
    "pred": "SELECT Level FROM Has_Clearance WHERE Employee = (SELECT EmployeeID FROM Employee WHERE Position = 'Physician')",
    "exec_result": 1
  },
  {
    "idx": 1867,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT P.PackageNumber FROM Package P INNER JOIN Shipment S ON P.Shipment = S.ShipmentID INNER JOIN Has_Clearance HC ON S.Planet = HC.Planet INNER JOIN Employee E ON HC.Employee = E.EmployeeID INNER JOIN Client C ON P.Sender = C.AccountNumber WHERE C.Name = 'Leo Wong'",
    "exec_result": 1
  },
  {
    "idx": 1868,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"Leo Wong\";",
    "pred": "SELECT COUNT(*) FROM Package WHERE Sender = 'Leo Wong'",
    "exec_result": 0
  },
  {
    "idx": 1869,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t1.packagenumber from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber where t2.name = \"leo wong\";",
    "pred": "SELECT DISTINCT P.PackageNumber FROM Package P INNER JOIN Client C ON P.Recipient = C.AccountNumber WHERE C.Name = 'Leo Wong';",
    "exec_result": 0
  },
  {
    "idx": 1870,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\";",
    "pred": "SELECT P.PackageNumber FROM Package P WHERE P.Recipient = 'Leo Wong';",
    "exec_result": 0
  },
  {
    "idx": 1871,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT P.PackageNumber, P.Sender, P.Recipient, P.Contents, P.Weight FROM Package P WHERE (P.Sender = 'Leo Wong' OR P.Recipient = 'Leo Wong')",
    "exec_result": 0
  },
  {
    "idx": 1872,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT DISTINCT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber OR T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT DISTINCT P.PackageNumber FROM Package P WHERE (P.Sender = 'Leo Wong' OR P.Recipient = 'Leo Wong')",
    "exec_result": 0
  },
  {
    "idx": 1873,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = \"Ogden Wernstrom\" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT COUNT(*) FROM Package WHERE Sender = 'Ogden Wernstrom' AND Recipient = 'Leo Wong';",
    "exec_result": 0
  },
  {
    "idx": 1874,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name = \"Ogden Wernstrom\" INTERSECT SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Recipient  =  T2.AccountNumber WHERE T2.Name = \"Leo Wong\"",
    "pred": "SELECT COUNT(*) FROM Package WHERE Sender = 'Ogden Wernstrom' AND Recipient = 'Leo Wong';",
    "exec_result": 0
  },
  {
    "idx": 1875,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"John Zoidfarb\";",
    "pred": "SELECT Contents FROM Package WHERE Sender = 'John Zoidfarb'",
    "exec_result": 0
  },
  {
    "idx": 1876,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.Contents FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name  =  \"John Zoidfarb\";",
    "pred": "SELECT Contents FROM Package WHERE Sender = (SELECT AccountNumber FROM Client WHERE Name = 'John Zoidfarb')",
    "exec_result": 1
  },
  {
    "idx": 1877,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE \"John\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1878,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber ,  max(T1.Weight) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber WHERE T2.Name LIKE \"John\";",
    "pred": "SELECT Package.PackageNumber, Weight FROM Package WHERE Sender IN (SELECT AccountNumber FROM Client WHERE Name LIKE '%John%') ORDER BY Weight DESC LIMIT 1;",
    "exec_result": 0
  },
  {
    "idx": 1879,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1880,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE ORDER BY Weight ASC LIMIT 3;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1881,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT C.Name, COUNT(*) AS NumberOfPackages FROM Client C JOIN Package P ON C.AccountNumber = P.Sender GROUP BY C.AccountNumber ORDER BY NumberOfPackages DESC LIMIT 1;",
    "exec_result": 1
  },
  {
    "idx": 1882,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT C.Name, COUNT(*) FROM Client AS C JOIN Package AS P ON C.AccountNumber = P.Sender GROUP BY C.AccountNumber ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1883,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1884,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t2.name ,  count(*) from package as t1 join client as t2 on t1.recipient  =  t2.accountnumber group by t1.recipient order by count(*) limit 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1885,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1886,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM PACKAGE AS T1 JOIN Client AS T2 ON T1.Sender  =  T2.AccountNumber GROUP BY T1.Sender HAVING count(*)  >  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1887,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Coordinates FROM Planet WHERE Name  =  \"Mars\";",
    "pred": "SELECT `Coordinates` FROM Planet WHERE `Name` = 'Mars'",
    "exec_result": 1
  },
  {
    "idx": 1888,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Coordinates FROM Planet WHERE Name  =  \"Mars\";",
    "pred": "SELECT `Coordinates` FROM Planet WHERE `Name` = 'Mars'",
    "exec_result": 1
  },
  {
    "idx": 1889,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name ,  Coordinates FROM Planet ORDER BY Name",
    "pred": "SELECT Name, Coordinates FROM Planet ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1890,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name ,  Coordinates FROM Planet ORDER BY Name",
    "pred": "SELECT Name, Coordinates FROM Planet ORDER BY Name ASC",
    "exec_result": 1
  },
  {
    "idx": 1891,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = \"Phillip J. Fry\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1892,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID WHERE T2.Name = \"Phillip J. Fry\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1893,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Date FROM Shipment;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1894,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Date FROM Shipment;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1895,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  \"Mars\";",
    "pred": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT Name FROM Planet WHERE Name = 'Mars')",
    "exec_result": 0
  },
  {
    "idx": 1896,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID WHERE T2.Name  =  \"Mars\";",
    "pred": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT Name FROM Planet WHERE Name = 'Mars')",
    "exec_result": 0
  },
  {
    "idx": 1897,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" AND T3.Name = \"Turanga Leela\";",
    "pred": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT Name FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela')",
    "exec_result": 0
  },
  {
    "idx": 1898,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" AND T3.Name = \"Turanga Leela\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1899,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" OR T3.Name = \"Turanga Leela\";",
    "pred": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') OR Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela')",
    "exec_result": 1
  },
  {
    "idx": 1900,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.ShipmentID FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID JOIN Employee AS T3 ON T3.EmployeeID = T1.Manager WHERE T2.Name = \"Mars\" OR T3.Name = \"Turanga Leela\";",
    "pred": "SELECT ShipmentID FROM Shipment WHERE Planet = (SELECT PlanetID FROM Planet WHERE Name = 'Mars') AND Manager = (SELECT EmployeeID FROM Employee WHERE Name = 'Turanga Leela')",
    "exec_result": 0
  },
  {
    "idx": 1901,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1902,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1903,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Planet.Name FROM Planet JOIN Shipment ON Shipment.Planet = Planet.PlanetID GROUP BY Planet.Name ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1904,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Shipment AS T1 JOIN Planet AS T2 ON T1.Planet = T2.PlanetID GROUP BY T1.Planet ORDER BY count(*) DESC LIMIT 1;",
    "pred": "SELECT Planet FROM Shipment GROUP BY Planet HAVING COUNT(*) = (SELECT COUNT(*) FROM Shipment GROUP BY Planet)",
    "exec_result": 0
  },
  {
    "idx": 1905,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1906,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name ,  count(*) FROM Shipment AS T1 JOIN Employee AS T2 ON T1.Manager = T2.EmployeeID GROUP BY T1.Manager;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1907,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT SUM(Package.Weight) FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars'",
    "exec_result": 1
  },
  {
    "idx": 1908,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT sum(T1.Weight) FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "SELECT SUM(Package.Weight) FROM Package JOIN Shipment ON Package.Shipment = Shipment.ShipmentID JOIN Planet ON Shipment.Planet = Planet.PlanetID WHERE Planet.Name = 'Mars'",
    "exec_result": 1
  },
  {
    "idx": 1909,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1910,
    "db_id": "planet_1",
    "question": "",
    "gold": "select t3.name ,  sum(t1.weight) from package as t1 join shipment as t2 on t1.shipment = t2.shipmentid join planet as t3 on t2.planet = t3.planetid group by t2.planet;",
    "pred": "SELECT Planet.Name, SUM(Package.Weight) AS TotalWeight FROM Planet JOIN Shipment ON Shipment.Planet = Planet.PlanetID JOIN Package ON Shipment.ShipmentID = Package.Shipment GROUP BY Planet.Name",
    "exec_result": 1
  },
  {
    "idx": 1911,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1912,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM PACKAGE AS T1 JOIN Shipment AS T2 ON T1.Shipment = T2.ShipmentID JOIN Planet AS T3 ON T2.Planet = T3.PlanetID GROUP BY T2.Planet HAVING sum(T1.Weight)  >  30;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1913,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = \"Zapp Brannigan\" AND T4.Name = \"Omicron Persei 8\";",
    "pred": "SELECT P.PackageNumber FROM Package P INNER JOIN Shipment S ON P.Shipment = S.ShipmentID INNER JOIN Planet P2 ON S.Planet = P2.PlanetID INNER JOIN Has_Clearance HC ON S.Planet = HC.Planet INNER JOIN Employee E ON HC.Employee = E.EmployeeID WHERE P2.Name = 'Omicron Persei 8' AND E.Name = 'Zapp Brannigan'",
    "exec_result": 0
  },
  {
    "idx": 1914,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name = \"Zapp Brannigan\" AND T4.Name = \"Omicron Persei 8\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1915,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  \"Zapp Brannigan\" OR T4.Name  =  \"Omicron Persei 8\";",
    "pred": "SELECT P.PackageNumber FROM Package P WHERE P.Shipment IN ( SELECT S.ShipmentID FROM Shipment S WHERE S.Planet = (SELECT P.PlanetID FROM Planet P WHERE P.Name = 'Omicron Persei 8') OR S.Manager = (SELECT E.EmployeeID FROM Employee E WHERE E.Name = 'Zapp Brannigan') )",
    "exec_result": 0
  },
  {
    "idx": 1916,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T1.PackageNumber FROM PACKAGE AS T1 JOIN Client AS T2 ON  T1.Sender = T2.AccountNumber JOIN Shipment AS T3 ON T1.Shipment = T3.ShipmentID JOIN Planet AS T4 ON T3.Planet = T4.PlanetID WHERE T2.Name  =  \"Zapp Brannigan\" OR T4.Name  =  \"Omicron Persei 8\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1917,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1918,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT PackageNumber ,  Weight FROM PACKAGE WHERE Weight BETWEEN 10 AND 30;",
    "pred": "SELECT Package.PackageNumber, Package.Weight FROM Package WHERE Package.Weight BETWEEN 10 AND 30",
    "exec_result": 1
  },
  {
    "idx": 1919,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1920,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee EXCEPT SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name = \"Mars\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1921,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  \"Omega III\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1922,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T2.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID WHERE T3.Name  =  \"Omega III\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1923,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1924,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT T3.Name FROM Has_Clearance AS T1 JOIN Employee AS T2 ON T1.Employee = T2.EmployeeID JOIN Planet AS T3 ON T1.Planet = T3.PlanetID GROUP BY T1.Planet HAVING count(*)  =  1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1925,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1926,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary BETWEEN 5000 AND 10000",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1927,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1928,
    "db_id": "planet_1",
    "question": "",
    "gold": "SELECT Name FROM Employee WHERE Salary  >  5000 OR Salary  >  (SELECT avg(salary) FROM employee)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1929,
    "db_id": "planet_1",
    "question": "",
    "gold": "select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = \"mars\" );",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1930,
    "db_id": "planet_1",
    "question": "",
    "gold": "select count(*) from employee where employeeid not in ( select t2.employeeid from has_clearance as t1 join employee as t2 on t1.employee = t2.employeeid join planet as t3 on t1.planet = t3.planetid where t3.name = \"mars\" );",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1931,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM game",
    "pred": "SELECT COUNT(*) FROM game",
    "exec_result": 1
  },
  {
    "idx": 1932,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM game",
    "pred": "SELECT COUNT(*) FROM game",
    "exec_result": 1
  },
  {
    "idx": 1933,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1934,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title ,  Developers FROM game ORDER BY Units_sold_Millions DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1935,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'",
    "pred": "SELECT AVG(units_sold_Millions) FROM game WHERE Developers != 'Nintendo'",
    "exec_result": 1
  },
  {
    "idx": 1936,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game WHERE developers != 'Nintendo'",
    "pred": "SELECT AVG(units_sold_Millions) FROM game WHERE Developers != 'Nintendo'",
    "exec_result": 1
  },
  {
    "idx": 1937,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Market_district FROM platform",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1938,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Market_district FROM platform",
    "pred": "SELECT platform.Platform_name, platform.Market_district FROM platform",
    "exec_result": 1
  },
  {
    "idx": 1939,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1940,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Platform_name ,  Platform_ID FROM platform WHERE Download_rank  =  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1941,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1942,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT max(Rank_of_the_year) ,  min(Rank_of_the_year) FROM player",
    "pred": "SELECT MAX(`Rank_of_the_year`), MIN(`Rank_of_the_year`) FROM player",
    "exec_result": 1
  },
  {
    "idx": 1943,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1944,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT count(*) FROM player WHERE Rank_of_the_year  <=  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1945,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "pred": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "exec_result": 1
  },
  {
    "idx": 1946,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "pred": "SELECT Player_name FROM player ORDER BY Player_name ASC",
    "exec_result": 1
  },
  {
    "idx": 1947,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1948,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name ,  College FROM player ORDER BY Rank_of_the_year DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1949,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  \"Super Mario World\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1950,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T3.Player_name ,  T3.rank_of_the_year FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T1.Title  =  \"Super Mario World\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1951,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT DISTINCT developers FROM game WHERE Game_ID IN (SELECT Game_ID FROM game_player WHERE Player_ID IN (SELECT Player_ID FROM player WHERE College = 'Auburn'))",
    "exec_result": 1
  },
  {
    "idx": 1952,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT T1.Developers FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1953,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1954,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT avg(Units_sold_Millions) FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1955,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1956,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title ,  T2.Platform_name FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1957,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  \"Asia\" OR T2.Market_district  =  \"USA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1958,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN platform AS T2 ON T1.Platform_ID  =  T2.Platform_ID WHERE T2.Market_district  =  \"Asia\" OR T2.Market_district  =  \"USA\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1959,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1960,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise ,  COUNT(*) FROM game GROUP BY Franchise",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1961,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Franchise`, COUNT(*) FROM game GROUP BY `Franchise` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1962,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise ORDER BY COUNT(*) DESC LIMIT 1",
    "pred": "SELECT `Franchise`, COUNT(*) FROM game GROUP BY `Franchise` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 1963,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1964,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Franchise FROM game GROUP BY Franchise HAVING COUNT(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1965,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1966,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM game_player)",
    "pred": "SELECT DISTINCT P.Player_name FROM player P LEFT JOIN game_player GP ON P.Player_ID = GP.Player_ID WHERE GP.Player_ID IS NULL",
    "exec_result": 1
  },
  {
    "idx": 1967,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Oklahoma\" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1968,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Oklahoma\" INTERSECT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.College  =  \"Auburn\"",
    "pred": "SELECT DISTINCT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID = T2.Game_ID JOIN player AS T3 ON T2.Player_ID = T3.Player_ID WHERE T3.College IN ('Oklahoma', 'Auburn')",
    "exec_result": 0
  },
  {
    "idx": 1969,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT Franchise FROM game",
    "pred": "SELECT DISTINCT `Franchise` FROM game",
    "exec_result": 1
  },
  {
    "idx": 1970,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT DISTINCT Franchise FROM game",
    "pred": "SELECT DISTINCT `Franchise` FROM game",
    "exec_result": 1
  },
  {
    "idx": 1971,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1972,
    "db_id": "video_game",
    "question": "",
    "gold": "SELECT Title FROM game EXCEPT SELECT T1.Title FROM game AS T1 JOIN game_player AS T2 ON T1.Game_ID  =  T2.Game_ID JOIN player AS T3 ON T2.Player_ID  =  T3.Player_ID WHERE T3.Position  =  \"Guard\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1973,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Year_Profits_billion DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1974,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Year_Profits_billion DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1975,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1976,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Year_Profits_billion  >  15 OR Month_Profits_billion  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1977,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press",
    "pred": "SELECT AVG(Year_Profits_billion) as Avg_Profit, MAX(Year_Profits_billion) as Max_Profit FROM press",
    "exec_result": 1
  },
  {
    "idx": 1978,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(Year_Profits_billion) ,  max(Year_Profits_billion) FROM press",
    "pred": "SELECT P.Name, AVG(P.Year_Profits_billion) AS Avg_Yearly_Profit, MAX(P.Year_Profits_billion) AS Max_Yearly_Profit FROM press P GROUP BY P.Name",
    "exec_result": 0
  },
  {
    "idx": 1979,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1",
    "pred": "SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press)",
    "exec_result": 1
  },
  {
    "idx": 1980,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press ORDER BY Month_Profits_billion DESC LIMIT 1",
    "pred": "SELECT P.Name FROM press P ORDER BY P.Month_Profits_billion DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 1981,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)",
    "pred": "SELECT Name FROM press WHERE Month_Profits_billion = (SELECT MAX(Month_Profits_billion) FROM press) OR Month_Profits_billion = (SELECT MIN(Month_Profits_billion) FROM press)",
    "exec_result": 1
  },
  {
    "idx": 1982,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM press WHERE Month_Profits_billion  =  (SELECT min(Month_Profits_billion) FROM press) OR Month_Profits_billion  =  (SELECT max(Month_Profits_billion) FROM press)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1983,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) FROM author WHERE age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1984,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) FROM author WHERE age  <  30",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1985,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(age) ,  gender FROM author GROUP BY gender",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1986,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT avg(age) ,  gender FROM author GROUP BY gender",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1987,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1988,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  gender FROM author WHERE age  >  30 GROUP BY gender",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1989,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title FROM book ORDER BY release_date DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1990,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title FROM book ORDER BY release_date DESC",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1991,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  book_series FROM book GROUP BY book_series",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1992,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  book_series FROM book GROUP BY book_series",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1993,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1994,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT title ,  release_date FROM book ORDER BY sale_amount DESC LIMIT 5",
    "pred": "SELECT T1.Title, T1.Release_date FROM book AS T1 ORDER BY T1.Sale_Amount DESC LIMIT 5",
    "exec_result": 1
  },
  {
    "idx": 1995,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500",
    "pred": "SELECT DISTINCT B.Book_Series FROM book B WHERE B.Sale_Amount > 1000 AND B.Sale_Amount < 500",
    "exec_result": 0
  },
  {
    "idx": 1996,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT book_series FROM book WHERE sale_amount  >  1000 INTERSECT SELECT book_series FROM book WHERE sale_amount  <  500",
    "pred": "SELECT T1.Book_Series FROM book AS T1 WHERE T1.Sale_Amount > 1000 AND (SELECT COUNT(*) FROM book AS T2 WHERE T2.Book_Series = T1.Book_Series AND T2.Sale_Amount < 500) > 0",
    "exec_result": 0
  },
  {
    "idx": 1997,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1998,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'MM' INTERSECT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id WHERE t2.book_series  =  'LT'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 1999,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name ,  age FROM author WHERE author_id NOT IN (SELECT author_id FROM book)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2000,
    "db_id": "book_press",
    "question": "",
    "gold": "select name from author where author_id not in (select author_id from book)",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2001,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2002,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id HAVING count(*)  >  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2003,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2004,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t2.title ,  t3.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id ORDER BY t2.sale_amount DESC LIMIT 3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2005,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2006,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT sum(t1.sale_amount) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t1.press_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2007,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2008,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT count(*) ,  t2.name FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id WHERE sale_amount  >  1000 GROUP BY t2.name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2009,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1",
    "pred": "SELECT `Name` FROM author WHERE `Author_ID` = (SELECT `Author_ID` FROM book ORDER BY Sale_Amount DESC LIMIT 1)",
    "exec_result": 1
  },
  {
    "idx": 2010,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id ORDER BY t2.sale_amount DESC LIMIT 1",
    "pred": "SELECT `Author_ID`, MAX(`Sale_Amount`) FROM book",
    "exec_result": 0
  },
  {
    "idx": 2011,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2012,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t1.name ,  t1.gender FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id GROUP BY t2.author_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2013,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2014,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT name FROM author EXCEPT SELECT t1.name FROM author AS t1 JOIN book AS t2 ON t1.author_id  =  t2.author_id JOIN press AS t3 ON t2.press_id  =  t3.press_id WHERE t3.name  =  'Accor'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2015,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2016,
    "db_id": "book_press",
    "question": "",
    "gold": "SELECT t2.name ,  t2.Year_Profits_billion FROM book AS t1 JOIN press AS t2 ON t1.press_id  =  t2.press_id GROUP BY t2.press_id HAVING count(*)  >  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2017,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Authors",
    "pred": "SELECT COUNT(DISTINCT `author_name`) FROM Authors;",
    "exec_result": 1
  },
  {
    "idx": 2018,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Authors",
    "pred": "SELECT DISTINCT `author_name` FROM Authors",
    "exec_result": 1
  },
  {
    "idx": 2019,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name ,  other_details FROM Authors",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2020,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT other_details FROM Authors WHERE author_name  =  \"Addison Denesik\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2021,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Documents",
    "pred": "SELECT COUNT(*) FROM Documents",
    "exec_result": 1
  },
  {
    "idx": 2022,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents WHERE document_id  =  4",
    "pred": "SELECT `author_name` FROM Documents WHERE document_id = 4",
    "exec_result": 1
  },
  {
    "idx": 2023,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents WHERE document_name  =  \"Travel to Brazil\"",
    "pred": "SELECT `author_name` FROM Documents WHERE `document_name` = 'Travel to Brazil'",
    "exec_result": 1
  },
  {
    "idx": 2024,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Documents WHERE author_name  =  \"Era Kerluke\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2025,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_name ,  document_description FROM Documents",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2026,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_id ,  document_name FROM Documents WHERE author_name  =  \"Bianka Cummings\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2027,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T2.author_name ,  T2.other_details FROM Documents AS T1 JOIN Authors AS T2 ON T1.author_name  =  T2.author_name WHERE document_name  =  \"Travel to China\"",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2028,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name ,  count(*) FROM Documents GROUP BY author_name",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2029,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents GROUP BY author_name ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT `author_name` FROM Documents GROUP BY `author_name` ORDER BY COUNT(*) DESC LIMIT 1",
    "exec_result": 1
  },
  {
    "idx": 2030,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT author_name FROM Documents GROUP BY author_name HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2031,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Business_processes",
    "pred": "SELECT COUNT(DISTINCT Business_Processes.process_id) FROM Business_Processes;",
    "exec_result": 1
  },
  {
    "idx": 2032,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT next_process_id ,  process_name ,  process_description FROM Business_processes WHERE process_id  =  9",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2033,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_name FROM Business_processes WHERE process_id  =  (SELECT next_process_id FROM Business_processes WHERE process_id  =  9)",
    "pred": "SELECT DISTINCT A.process_name FROM Business_Processes AS A INNER JOIN Documents_Processes AS C ON A.process_id = C.process_id INNER JOIN Documents AS D ON C.document_id = D.document_id INNER JOIN Staff_in_Processes AS E ON D.document_id = E.document_id AND A.process_id = E.process_id INNER JOIN Staff AS F ON E.staff_id = F.staff_id INNER JOIN Ref_Staff_Roles AS G ON F.staff_id = G.staff_id WHERE A.process_id = 9 AND G.staff_role_code = 'Manager'",
    "exec_result": 0
  },
  {
    "idx": 2034,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Process_outcomes",
    "pred": "SELECT COUNT(DISTINCT D.process_outcome_code) FROM Documents_Processes D",
    "exec_result": 0
  },
  {
    "idx": 2035,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_outcome_code ,  process_outcome_description FROM Process_outcomes",
    "pred": "SELECT process_outcome_code, process_outcome_description FROM Process_Outcomes",
    "exec_result": 1
  },
  {
    "idx": 2036,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_outcome_description FROM Process_outcomes WHERE process_outcome_code  =  \"working\"",
    "pred": "SELECT `process_outcome_description` FROM Process_Outcomes WHERE `process_outcome_code` = 'working'",
    "exec_result": 1
  },
  {
    "idx": 2037,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Process_status",
    "pred": "SELECT COUNT(DISTINCT process_status_code) FROM Process_Status",
    "exec_result": 1
  },
  {
    "idx": 2038,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_status_code ,  process_status_description FROM Process_status",
    "pred": "SELECT process_status_code, process_status_description FROM Process_Status",
    "exec_result": 1
  },
  {
    "idx": 2039,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_status_description FROM Process_status WHERE process_status_code  =  \"ct\"",
    "pred": "SELECT `process_status_description` FROM Process_Status WHERE `process_status_code` = 'ct'",
    "exec_result": 1
  },
  {
    "idx": 2040,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "SELECT COUNT(*) FROM Staff;",
    "exec_result": 1
  },
  {
    "idx": 2041,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM Staff",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2042,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_details FROM Staff WHERE staff_id  =  100",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2043,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Ref_staff_roles",
    "pred": "SELECT COUNT(DISTINCT Ref_Staff_Roles.staff_role_code) FROM Ref_Staff_Roles;",
    "exec_result": 1
  },
  {
    "idx": 2044,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_code ,  staff_role_description FROM Ref_staff_roles",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2045,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_description FROM Ref_staff_roles WHERE staff_role_code  =  \"HR\"",
    "pred": "SELECT `staff_role_description` FROM Ref_Staff_Roles WHERE `staff_role_code` = 'HR'",
    "exec_result": 1
  },
  {
    "idx": 2046,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(DISTINCT document_id) FROM Documents_processes",
    "pred": "SELECT COUNT(*) FROM Documents_Processes;",
    "exec_result": 1
  },
  {
    "idx": 2047,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT DISTINCT process_id FROM Documents_processes",
    "pred": "SELECT DISTINCT D.process_id FROM Documents D JOIN Documents_Processes DP ON D.document_id = DP.document_id;",
    "exec_result": 0
  },
  {
    "idx": 2048,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_processes",
    "pred": "SELECT DISTINCT D.document_id FROM Documents D LEFT JOIN Documents_Processes DP ON D.document_id = DP.document_id WHERE DP.document_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 2049,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_id FROM Business_processes EXCEPT SELECT process_id FROM Documents_processes",
    "pred": "SELECT DISTINCT D.process_id FROM Documents_Processes D LEFT JOIN Business_Processes BP ON D.process_id = BP.process_id WHERE BP.process_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 2050,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T2.process_outcome_description ,  T3.process_status_description FROM Documents_processes AS T1 JOIN Process_outcomes AS T2 ON T1.process_outcome_code  =  T2.process_outcome_code JOIN Process_Status AS T3 ON T1.process_status_code  =  T3.process_status_code WHERE T1.document_id  =  0",
    "pred": "SELECT DISTINCT dp.process_outcome_code, ps.process_status_code FROM Documents_Processes dp JOIN Process_Outcomes po ON dp.process_outcome_code = po.process_outcome_code JOIN Process_Status ps ON dp.process_status_code = ps.process_status_code WHERE dp.document_id = 0;",
    "exec_result": 0
  },
  {
    "idx": 2051,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT T3.process_name FROM Documents_processes AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id JOIN Business_processes AS T3 ON T1.process_id  =  T3.process_id WHERE T2.document_name  =  \"Travel to Brazil\"",
    "pred": "SELECT b.process_name FROM Business_Processes AS b JOIN Documents_Processes AS dp ON b.process_id = dp.process_id JOIN Documents AS d ON dp.document_id = d.document_id WHERE d.document_name = 'Travel to Brazil'",
    "exec_result": 1
  },
  {
    "idx": 2052,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT process_id ,  count(*) FROM Documents_processes GROUP BY process_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2053,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(*) FROM Staff_in_processes WHERE document_id  =  0 AND process_id  =  9",
    "pred": "SELECT COUNT(*) FROM Staff_in_Processes WHERE document_id = 0 AND process_id = 9",
    "exec_result": 1
  },
  {
    "idx": 2054,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_processes GROUP BY staff_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2055,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT staff_role_code ,  count(*) FROM Staff_in_processes GROUP BY staff_role_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2056,
    "db_id": "cre_Doc_Workflow",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_role_code) FROM Staff_in_processes WHERE staff_id  =  3",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2057,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Agencies",
    "pred": "SELECT COUNT(DISTINCT `agency_id`) FROM Agencies",
    "exec_result": 1
  },
  {
    "idx": 2058,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Agencies",
    "pred": "SELECT COUNT(*) FROM Agencies",
    "exec_result": 1
  },
  {
    "idx": 2059,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  agency_details FROM Agencies",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2060,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  agency_details FROM Agencies",
    "pred": "SELECT agency_id, agency_details FROM Agencies",
    "exec_result": 1
  },
  {
    "idx": 2061,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Clients",
    "pred": "SELECT COUNT(*) FROM Clients;",
    "exec_result": 1
  },
  {
    "idx": 2062,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Clients",
    "pred": "SELECT COUNT(*) FROM Clients;",
    "exec_result": 1
  },
  {
    "idx": 2063,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2064,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients",
    "pred": "SELECT Clients.client_id, Clients.client_details FROM Clients",
    "exec_result": 1
  },
  {
    "idx": 2065,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2066,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Clients GROUP BY agency_id",
    "pred": "SELECT COUNT(DISTINCT Clients.client_id) AS NumOfClients, Agencies.agency_id FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id GROUP BY Agencies.agency_id",
    "exec_result": 1
  },
  {
    "idx": 2067,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT a.agency_id, a.agency_details FROM Agencies a JOIN Clients c ON a.agency_id = c.agency_id GROUP BY a.agency_id HAVING COUNT(c.client_id) = (SELECT COUNT(client_id) FROM Clients)",
    "exec_result": 0
  },
  {
    "idx": 2068,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2069,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2070,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT A.agency_id, A.agency_details FROM Agencies AS A JOIN Clients AS C ON A.agency_id = C.agency_id GROUP BY A.agency_id HAVING COUNT(DISTINCT C.client_id) >= 2;",
    "exec_result": 1
  },
  {
    "idx": 2071,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'",
    "pred": "SELECT A.agency_details FROM Agencies AS A INNER JOIN Clients AS C ON A.agency_id = C.agency_id WHERE C.client_details LIKE '%Mac%'",
    "exec_result": 1
  },
  {
    "idx": 2072,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id WHERE T1.client_details  =  'Mac'",
    "pred": "SELECT Clients.client_details, Agencies.agency_details FROM Clients INNER JOIN Agencies ON Clients.agency_id = Agencies.agency_id WHERE Clients.client_details LIKE '%Mac%'",
    "exec_result": 0
  },
  {
    "idx": 2073,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2074,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_details ,  T2.agency_details FROM Clients AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT Clients.client_details, Agencies.agency_details FROM Clients JOIN Agencies ON Clients.agency_id = Agencies.agency_id",
    "exec_result": 1
  },
  {
    "idx": 2075,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2076,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT sic_code ,  count(*) FROM Clients GROUP BY sic_code",
    "pred": "SELECT Clients.sic_code, COUNT(Clients.client_id) FROM Clients GROUP BY Clients.sic_code",
    "exec_result": 1
  },
  {
    "idx": 2077,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  \"Bad\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2078,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  client_details FROM Clients WHERE sic_code  =  \"Bad\";",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2079,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT DISTINCT A.agency_id, A.agency_details FROM Agencies AS A JOIN Clients AS C ON A.agency_id = C.agency_id",
    "exec_result": 1
  },
  {
    "idx": 2080,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T1.agency_details FROM Agencies AS T1 JOIN Clients AS T2 ON T1.agency_id  =  T2.agency_id",
    "pred": "SELECT DISTINCT A.agency_id, A.agency_details FROM Agencies AS A JOIN Clients AS C ON A.agency_id = C.agency_id",
    "exec_result": 1
  },
  {
    "idx": 2081,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients",
    "pred": "SELECT DISTINCT T1.agency_id FROM Agencies AS T1 LEFT JOIN Clients AS T2 ON T1.agency_id = T2.agency_id WHERE T2.client_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 2082,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id FROM Agencies EXCEPT SELECT agency_id FROM Clients",
    "pred": "SELECT agency_id FROM Agencies WHERE agency_id NOT IN (SELECT DISTINCT agency_id FROM Clients)",
    "exec_result": 1
  },
  {
    "idx": 2083,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Invoices",
    "pred": "SELECT COUNT(*) FROM Invoices;",
    "exec_result": 1
  },
  {
    "idx": 2084,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Invoices",
    "pred": "SELECT COUNT(*) FROM Invoices;",
    "exec_result": 1
  },
  {
    "idx": 2085,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2086,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status ,  invoice_details FROM Invoices",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2087,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2088,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Invoices GROUP BY client_id",
    "pred": "SELECT Clients.client_id, COUNT(Invoices.invoice_id) AS NumberOfInvoices FROM Clients LEFT JOIN Invoices ON Clients.client_id = Invoices.client_id GROUP BY Clients.client_id",
    "exec_result": 0
  },
  {
    "idx": 2089,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2090,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T2.client_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2091,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T1.client_id FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id = T2.client_id GROUP BY T1.client_id HAVING COUNT(T1.invoice_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 2092,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id FROM Invoices GROUP BY client_id HAVING count(*)  >=  2",
    "pred": "SELECT DISTINCT T2.client_id FROM Invoices AS T1 INNER JOIN Clients AS T2 ON T1.client_id = T2.client_id GROUP BY T2.client_id HAVING COUNT(T1.invoice_id) >= 2",
    "exec_result": 1
  },
  {
    "idx": 2093,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status",
    "pred": "SELECT invoice_status, COUNT(*) FROM Invoices GROUP BY invoice_status",
    "exec_result": 1
  },
  {
    "idx": 2094,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status ,  count(*) FROM Invoices GROUP BY invoice_status",
    "pred": "SELECT invoice_status, COUNT(*) FROM Invoices GROUP BY invoice_status",
    "exec_result": 1
  },
  {
    "idx": 2095,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT invoice_status, COUNT(*) AS invoice_count FROM Invoices GROUP BY invoice_status ORDER BY invoice_count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 2096,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_status FROM Invoices GROUP BY invoice_status ORDER BY count(*) DESC LIMIT 1",
    "pred": "SELECT invoice_status, COUNT(*) AS invoice_count FROM Invoices GROUP BY invoice_status ORDER BY invoice_count DESC LIMIT 1",
    "exec_result": 0
  },
  {
    "idx": 2097,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id",
    "pred": "SELECT I.invoice_status, I.invoice_details, C.client_details, A.agency_details FROM Invoices I JOIN Clients C ON I.client_id = C.client_id JOIN Agencies A ON C.agency_id = A.agency_id",
    "exec_result": 0
  },
  {
    "idx": 2098,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_status ,  T1.invoice_details ,  T2.client_id ,  T2.client_details ,  T3.agency_id ,  T3.agency_details FROM Invoices AS T1 JOIN Clients AS T2 ON T1.client_id  =  T2.client_id JOIN Agencies AS T3 ON T2.agency_id  =  T3.agency_id",
    "pred": "SELECT I.invoice_status, I.invoice_details, C.client_id, C.client_details, A.agency_id, A.agency_details FROM Invoices I JOIN Clients C ON I.client_id = C.client_id JOIN Agencies A ON C.agency_id = A.agency_id",
    "exec_result": 1
  },
  {
    "idx": 2099,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  other_details FROM meetings",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2100,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  other_details FROM meetings",
    "pred": "SELECT DISTINCT `meeting_type`, `other_details` FROM Meetings",
    "exec_result": 1
  },
  {
    "idx": 2101,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  purpose_of_meeting FROM meetings",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2102,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  purpose_of_meeting FROM meetings",
    "pred": "SELECT DISTINCT meeting_outcome, purpose_of_meeting FROM Meetings",
    "exec_result": 1
  },
  {
    "idx": 2103,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2104,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.payment_id ,  T1.payment_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id WHERE T2.invoice_status  =  'Working'",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2105,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2106,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  invoice_status FROM Invoices EXCEPT SELECT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT I.invoice_id, I.invoice_status FROM Invoices I LEFT JOIN Payments P ON I.invoice_id = P.invoice_id WHERE P.payment_id IS NULL",
    "exec_result": 1
  },
  {
    "idx": 2107,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Payments",
    "pred": "SELECT COUNT(*) FROM Payments;",
    "exec_result": 1
  },
  {
    "idx": 2108,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Payments",
    "pred": "SELECT COUNT(*) FROM Payments",
    "exec_result": 1
  },
  {
    "idx": 2109,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT payment_id ,  invoice_id ,  payment_details FROM Payments",
    "pred": "SELECT Payments.payment_id, Invoices.invoice_id, Payments.payment_details FROM Payments JOIN Invoices ON Payments.invoice_id = Invoices.invoice_id",
    "exec_result": 1
  },
  {
    "idx": 2110,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT payment_id ,  invoice_id ,  payment_details FROM Payments",
    "pred": "SELECT P.payment_id, I.invoice_id, P.payment_details FROM Payments AS P JOIN Invoices AS I ON P.invoice_id = I.invoice_id",
    "exec_result": 1
  },
  {
    "idx": 2111,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2112,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT DISTINCT T1.invoice_id ,  T1.invoice_status FROM Invoices AS T1 JOIN Payments AS T2 ON T1.invoice_id  =  T2.invoice_id",
    "pred": "SELECT DISTINCT I.invoice_id, I.invoice_status FROM Invoices I JOIN Payments P ON I.invoice_id = P.invoice_id",
    "exec_result": 1
  },
  {
    "idx": 2113,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2114,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT invoice_id ,  count(*) FROM Payments GROUP BY invoice_id",
    "pred": "SELECT COUNT(*) AS payment_count, Invoices.invoice_id FROM Invoices LEFT JOIN Payments ON Invoices.invoice_id = Payments.invoice_id GROUP BY Invoices.invoice_id",
    "exec_result": 0
  },
  {
    "idx": 2115,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2116,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.invoice_id ,  T2.invoice_status ,  T2.invoice_details FROM Payments AS T1 JOIN Invoices AS T2 ON T1.invoice_id  =  T2.invoice_id GROUP BY T1.invoice_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2117,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "SELECT COUNT(*) FROM Staff;",
    "exec_result": 1
  },
  {
    "idx": 2118,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff",
    "pred": "SELECT COUNT(*) FROM Staff;",
    "exec_result": 1
  },
  {
    "idx": 2119,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2120,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT agency_id ,  count(*) FROM Staff GROUP BY agency_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2121,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2122,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.agency_id ,  T2.agency_details FROM Staff AS T1 JOIN Agencies AS T2 ON T1.agency_id  =  T2.agency_id GROUP BY T1.agency_id ORDER BY count(*) DESC LIMIT 1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2123,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2124,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_outcome ,  count(*) FROM Meetings GROUP BY meeting_outcome",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2125,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2126,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT client_id ,  count(*) FROM Meetings GROUP BY client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2127,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2128,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_type ,  count(*) FROM Meetings GROUP BY meeting_type",
    "pred": "SELECT Meeting_Type, COUNT(*) AS NumberOfMeetings FROM Meetings GROUP BY Meeting_Type",
    "exec_result": 1
  },
  {
    "idx": 2129,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2130,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.meeting_id ,  T1.meeting_outcome ,  T1.meeting_type ,  T2.client_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2131,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2132,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT meeting_id ,  count(*) FROM Staff_in_meetings GROUP BY meeting_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2133,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2134,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  count(*) FROM Staff_in_meetings GROUP BY staff_id ORDER BY count(*) ASC LIMIT 1;",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2135,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_id) FROM Staff_in_meetings",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2136,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(DISTINCT staff_id) FROM Staff_in_meetings",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2137,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2138,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT count(*) FROM Staff WHERE staff_id NOT IN ( SELECT staff_id FROM Staff_in_meetings )",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2139,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "SELECT DISTINCT Clients.client_id, Clients.client_details FROM Clients WHERE Clients.client_id IN ( SELECT DISTINCT Clients.client_id FROM Clients WHERE Clients.client_id IN ( SELECT DISTINCT Meetings.client_id FROM Meetings ) OR Clients.client_id IN ( SELECT DISTINCT Invoices.client_id FROM Invoices ) )",
    "exec_result": 1
  },
  {
    "idx": 2140,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id UNION SELECT T1.client_id ,  T1.client_details FROM Clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2141,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE \"%s%\" GROUP BY staff_id HAVING count(*)  >=  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2142,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT staff_id ,  staff_details FROM staff WHERE staff_details LIKE \"%s%\" GROUP BY staff_id HAVING count(*)  >=  1",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2143,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2144,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN meetings AS T2 ON T1.client_id  =  T2.client_id GROUP BY T1.client_id HAVING count(*)  =  1 INTERSECT SELECT T1.client_id ,  T1.sic_code ,  T1.agency_id FROM clients AS T1 JOIN invoices AS T2 ON T1.client_id  =  T2.client_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2145,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  },
  {
    "idx": 2146,
    "db_id": "advertising_agencies",
    "question": "",
    "gold": "SELECT T1.start_date_time ,  T1.end_date_time ,  T2.client_details ,  T4.staff_details FROM meetings AS T1 JOIN clients AS T2 ON T1.client_id  =  T2.client_id JOIN staff_in_meetings AS T3 ON T1.meeting_id  =  T3.meeting_id JOIN staff AS T4 ON T3.staff_id  =  T4.staff_id",
    "pred": "error: No SQL found in the input string",
    "exec_result": 0
  }
]